

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Dec 15 11:49:34 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18LF45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,delta=1
   131                           	psect	text112,global,reloc=2,class=CODE,delta=1
   132                           	psect	text113,global,reloc=2,class=CODE,delta=1
   133                           	psect	text114,global,reloc=2,class=CODE,delta=1
   134                           	psect	text115,global,reloc=2,class=CODE,delta=1
   135                           	psect	text116,global,reloc=2,class=CODE,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,delta=1
   137                           	psect	text118,global,reloc=2,class=CODE,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,delta=1
   139                           	psect	text120,global,reloc=2,class=CODE,delta=1
   140                           	psect	text121,global,reloc=2,class=CODE,delta=1
   141                           	psect	text122,global,reloc=2,class=CODE,delta=1
   142                           	psect	text123,global,reloc=2,class=CODE,delta=1
   143                           	psect	text124,global,reloc=2,class=CODE,delta=1
   144                           	psect	text125,global,reloc=2,class=CODE,delta=1
   145                           	psect	text126,global,reloc=2,class=CODE,delta=1
   146                           	psect	text127,global,reloc=2,class=CODE,delta=1
   147                           	psect	text128,global,reloc=2,class=CODE,delta=1
   148                           	psect	text129,global,reloc=2,class=CODE,delta=1
   149                           	psect	text130,global,reloc=2,class=CODE,delta=1
   150                           	psect	text131,global,reloc=2,class=CODE,delta=1
   151                           	psect	text132,global,reloc=2,class=CODE,delta=1
   152                           	psect	text133,global,reloc=2,class=CODE,delta=1
   153                           	psect	text134,global,reloc=2,class=CODE,delta=1
   154                           	psect	text135,global,reloc=2,class=CODE,delta=1
   155                           	psect	text136,global,reloc=2,class=CODE,delta=1
   156                           	psect	text137,global,reloc=2,class=CODE,delta=1
   157                           	psect	text138,global,reloc=2,class=CODE,delta=1
   158                           	psect	text139,global,reloc=2,class=CODE,delta=1
   159                           	psect	text140,global,reloc=2,class=CODE,delta=1
   160                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   161                           	psect	text141,global,reloc=2,class=CODE,delta=1
   162                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   163                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   164                           	dabs	1,0x400,48,_BDT
   165                           	dabs	1,0x500,64,_cdc_data_tx
   166                           	dabs	1,0x438,8,_CtrlTrfData
   167                           	dabs	1,0x430,8,_SetupPkt
   168                           	dabs	1,0x540,64,_cdc_data_rx
   169  0000                     
   170                           	psect	idataBANK0
   171  006AEC                     __pidataBANK0:
   172                           	opt stack 0
   173                           
   174                           ;initializer for _Contrast_level
   175  006AEC  13                 	db	19
   176                           
   177                           ;initializer for _dataRateSelection
   178  006AED  02                 	db	2
   179                           
   180                           ;initializer for _dataRateValue
   181  006AEE  02                 	db	2
   182                           
   183                           ;initializer for _exitUSB
   184  006AEF  01                 	db	1
   185                           
   186                           ;initializer for _menuTimeout
   187  006AF0  01                 	db	1
   188                           
   189                           ;initializer for _moteState
   190  006AF1  01                 	db	1
   191                           
   192                           ;initializer for _periodicState
   193  006AF2  03                 	db	3
   194                           
   195                           ;initializer for _periodicTimerValue
   196  006AF3  03                 	db	3
   197                           
   198                           ;initializer for _periodicUpValue
   199  006AF4  03                 	db	3
   200                           
   201                           	psect	idataBANK1
   202  006B2C                     __pidataBANK1:
   203                           	opt stack 0
   204                           
   205                           ;initializer for _selectedFont
   206  006B2C  A3                 	db	low _OledFont0
   207  006B2D  75                 	db	high _OledFont0
   208                           
   209                           	psect	mediumconst
   210  00759A                     __pmediumconst:
   211                           	opt stack 0
   212  00759A  00                 	db	0
   213  00759B                     _USB_SD_Ptr:
   214                           	opt stack 0
   215  00759B  60                 	db	low _sd000
   216  00759C  79                 	db	high _sd000
   217  00759D  E6                 	db	low _sd001
   218  00759E  78                 	db	high _sd001
   219  00759F  1A                 	db	low _sd002
   220  0075A0  79                 	db	high _sd002
   221  0075A1                     __end_of_USB_SD_Ptr:
   222                           	opt stack 0
   223  0075A1                     _USB_CD_Ptr:
   224                           	opt stack 0
   225  0075A1  A3                 	db	low _configDescriptor1
   226  0075A2  78                 	db	high _configDescriptor1
   227  0075A3                     __end_of_USB_CD_Ptr:
   228                           	opt stack 0
   229  0075A3                     _OledFont0:
   230                           	opt stack 0
   231  0075A3  00                 	db	0
   232  0075A4  00                 	db	0
   233  0075A5  00                 	db	0
   234  0075A6  00                 	db	0
   235  0075A7  00                 	db	0
   236  0075A8  00                 	db	0
   237  0075A9  00                 	db	0
   238  0075AA  00                 	db	0
   239  0075AB  00                 	db	0
   240  0075AC  00                 	db	0
   241  0075AD  00                 	db	0
   242  0075AE  5F                 	db	95
   243  0075AF  00                 	db	0
   244  0075B0  00                 	db	0
   245  0075B1  00                 	db	0
   246  0075B2  00                 	db	0
   247  0075B3  00                 	db	0
   248  0075B4  00                 	db	0
   249  0075B5  03                 	db	3
   250  0075B6  00                 	db	0
   251  0075B7  03                 	db	3
   252  0075B8  00                 	db	0
   253  0075B9  00                 	db	0
   254  0075BA  00                 	db	0
   255  0075BB  64                 	db	100
   256  0075BC  3C                 	db	60
   257  0075BD  26                 	db	38
   258  0075BE  64                 	db	100
   259  0075BF  3C                 	db	60
   260  0075C0  26                 	db	38
   261  0075C1  24                 	db	36
   262  0075C2  00                 	db	0
   263  0075C3  26                 	db	38
   264  0075C4  49                 	db	73
   265  0075C5  49                 	db	73
   266  0075C6  7F                 	db	127
   267  0075C7  49                 	db	73
   268  0075C8  49                 	db	73
   269  0075C9  32                 	db	50
   270  0075CA  00                 	db	0
   271  0075CB  42                 	db	66
   272  0075CC  25                 	db	37
   273  0075CD  12                 	db	18
   274  0075CE  08                 	db	8
   275  0075CF  24                 	db	36
   276  0075D0  52                 	db	82
   277  0075D1  21                 	db	33
   278  0075D2  00                 	db	0
   279  0075D3  20                 	db	32
   280  0075D4  50                 	db	80
   281  0075D5  4E                 	db	78
   282  0075D6  55                 	db	85
   283  0075D7  22                 	db	34
   284  0075D8  58                 	db	88
   285  0075D9  28                 	db	40
   286  0075DA  00                 	db	0
   287  0075DB  00                 	db	0
   288  0075DC  00                 	db	0
   289  0075DD  00                 	db	0
   290  0075DE  03                 	db	3
   291  0075DF  00                 	db	0
   292  0075E0  00                 	db	0
   293  0075E1  00                 	db	0
   294  0075E2  00                 	db	0
   295  0075E3  00                 	db	0
   296  0075E4  00                 	db	0
   297  0075E5  1C                 	db	28
   298  0075E6  22                 	db	34
   299  0075E7  41                 	db	65
   300  0075E8  00                 	db	0
   301  0075E9  00                 	db	0
   302  0075EA  00                 	db	0
   303  0075EB  00                 	db	0
   304  0075EC  00                 	db	0
   305  0075ED  00                 	db	0
   306  0075EE  41                 	db	65
   307  0075EF  22                 	db	34
   308  0075F0  1C                 	db	28
   309  0075F1  00                 	db	0
   310  0075F2  00                 	db	0
   311  0075F3  00                 	db	0
   312  0075F4  15                 	db	21
   313  0075F5  15                 	db	21
   314  0075F6  0E                 	db	14
   315  0075F7  0E                 	db	14
   316  0075F8  15                 	db	21
   317  0075F9  15                 	db	21
   318  0075FA  00                 	db	0
   319  0075FB  00                 	db	0
   320  0075FC  08                 	db	8
   321  0075FD  08                 	db	8
   322  0075FE  3E                 	db	62
   323  0075FF  08                 	db	8
   324  007600  08                 	db	8
   325  007601  00                 	db	0
   326  007602  00                 	db	0
   327  007603  00                 	db	0
   328  007604  00                 	db	0
   329  007605  00                 	db	0
   330  007606  50                 	db	80
   331  007607  30                 	db	48
   332  007608  00                 	db	0
   333  007609  00                 	db	0
   334  00760A  00                 	db	0
   335  00760B  00                 	db	0
   336  00760C  08                 	db	8
   337  00760D  08                 	db	8
   338  00760E  08                 	db	8
   339  00760F  08                 	db	8
   340  007610  08                 	db	8
   341  007611  00                 	db	0
   342  007612  00                 	db	0
   343  007613  00                 	db	0
   344  007614  00                 	db	0
   345  007615  00                 	db	0
   346  007616  40                 	db	64
   347  007617  00                 	db	0
   348  007618  00                 	db	0
   349  007619  00                 	db	0
   350  00761A  00                 	db	0
   351  00761B  40                 	db	64
   352  00761C  20                 	db	32
   353  00761D  10                 	db	16
   354  00761E  08                 	db	8
   355  00761F  04                 	db	4
   356  007620  02                 	db	2
   357  007621  01                 	db	1
   358  007622  00                 	db	0
   359  007623  00                 	db	0
   360  007624  3E                 	db	62
   361  007625  41                 	db	65
   362  007626  41                 	db	65
   363  007627  41                 	db	65
   364  007628  3E                 	db	62
   365  007629  00                 	db	0
   366  00762A  00                 	db	0
   367  00762B  00                 	db	0
   368  00762C  00                 	db	0
   369  00762D  41                 	db	65
   370  00762E  7F                 	db	127
   371  00762F  40                 	db	64
   372  007630  00                 	db	0
   373  007631  00                 	db	0
   374  007632  00                 	db	0
   375  007633  00                 	db	0
   376  007634  42                 	db	66
   377  007635  61                 	db	97
   378  007636  51                 	db	81
   379  007637  49                 	db	73
   380  007638  6E                 	db	110
   381  007639  00                 	db	0
   382  00763A  00                 	db	0
   383  00763B  00                 	db	0
   384  00763C  22                 	db	34
   385  00763D  41                 	db	65
   386  00763E  49                 	db	73
   387  00763F  49                 	db	73
   388  007640  36                 	db	54
   389  007641  00                 	db	0
   390  007642  00                 	db	0
   391  007643  00                 	db	0
   392  007644  18                 	db	24
   393  007645  14                 	db	20
   394  007646  12                 	db	18
   395  007647  7F                 	db	127
   396  007648  10                 	db	16
   397  007649  00                 	db	0
   398  00764A  00                 	db	0
   399  00764B  00                 	db	0
   400  00764C  27                 	db	39
   401  00764D  49                 	db	73
   402  00764E  49                 	db	73
   403  00764F  49                 	db	73
   404  007650  71                 	db	113
   405  007651  00                 	db	0
   406  007652  00                 	db	0
   407  007653  00                 	db	0
   408  007654  3C                 	db	60
   409  007655  4A                 	db	74
   410  007656  49                 	db	73
   411  007657  48                 	db	72
   412  007658  70                 	db	112
   413  007659  00                 	db	0
   414  00765A  00                 	db	0
   415  00765B  00                 	db	0
   416  00765C  43                 	db	67
   417  00765D  21                 	db	33
   418  00765E  11                 	db	17
   419  00765F  0D                 	db	13
   420  007660  03                 	db	3
   421  007661  00                 	db	0
   422  007662  00                 	db	0
   423  007663  00                 	db	0
   424  007664  36                 	db	54
   425  007665  49                 	db	73
   426  007666  49                 	db	73
   427  007667  49                 	db	73
   428  007668  36                 	db	54
   429  007669  00                 	db	0
   430  00766A  00                 	db	0
   431  00766B  00                 	db	0
   432  00766C  06                 	db	6
   433  00766D  09                 	db	9
   434  00766E  49                 	db	73
   435  00766F  29                 	db	41
   436  007670  1E                 	db	30
   437  007671  00                 	db	0
   438  007672  00                 	db	0
   439  007673  00                 	db	0
   440  007674  00                 	db	0
   441  007675  00                 	db	0
   442  007676  12                 	db	18
   443  007677  00                 	db	0
   444  007678  00                 	db	0
   445  007679  00                 	db	0
   446  00767A  00                 	db	0
   447  00767B  00                 	db	0
   448  00767C  00                 	db	0
   449  00767D  00                 	db	0
   450  00767E  52                 	db	82
   451  00767F  30                 	db	48
   452  007680  00                 	db	0
   453  007681  00                 	db	0
   454  007682  00                 	db	0
   455  007683  00                 	db	0
   456  007684  00                 	db	0
   457  007685  08                 	db	8
   458  007686  14                 	db	20
   459  007687  14                 	db	20
   460  007688  22                 	db	34
   461  007689  00                 	db	0
   462  00768A  00                 	db	0
   463  00768B  00                 	db	0
   464  00768C  14                 	db	20
   465  00768D  14                 	db	20
   466  00768E  14                 	db	20
   467  00768F  14                 	db	20
   468  007690  14                 	db	20
   469  007691  14                 	db	20
   470  007692  00                 	db	0
   471  007693  00                 	db	0
   472  007694  00                 	db	0
   473  007695  22                 	db	34
   474  007696  14                 	db	20
   475  007697  14                 	db	20
   476  007698  08                 	db	8
   477  007699  00                 	db	0
   478  00769A  00                 	db	0
   479  00769B  00                 	db	0
   480  00769C  02                 	db	2
   481  00769D  01                 	db	1
   482  00769E  59                 	db	89
   483  00769F  05                 	db	5
   484  0076A0  02                 	db	2
   485  0076A1  00                 	db	0
   486  0076A2  00                 	db	0
   487  0076A3  3E                 	db	62
   488  0076A4  41                 	db	65
   489  0076A5  5D                 	db	93
   490  0076A6  55                 	db	85
   491  0076A7  4D                 	db	77
   492  0076A8  51                 	db	81
   493  0076A9  2E                 	db	46
   494  0076AA  00                 	db	0
   495  0076AB  40                 	db	64
   496  0076AC  7C                 	db	124
   497  0076AD  4A                 	db	74
   498  0076AE  09                 	db	9
   499  0076AF  4A                 	db	74
   500  0076B0  7C                 	db	124
   501  0076B1  40                 	db	64
   502  0076B2  00                 	db	0
   503  0076B3  41                 	db	65
   504  0076B4  7F                 	db	127
   505  0076B5  49                 	db	73
   506  0076B6  49                 	db	73
   507  0076B7  49                 	db	73
   508  0076B8  49                 	db	73
   509  0076B9  36                 	db	54
   510  0076BA  00                 	db	0
   511  0076BB  1C                 	db	28
   512  0076BC  22                 	db	34
   513  0076BD  41                 	db	65
   514  0076BE  41                 	db	65
   515  0076BF  41                 	db	65
   516  0076C0  41                 	db	65
   517  0076C1  22                 	db	34
   518  0076C2  00                 	db	0
   519  0076C3  41                 	db	65
   520  0076C4  7F                 	db	127
   521  0076C5  41                 	db	65
   522  0076C6  41                 	db	65
   523  0076C7  41                 	db	65
   524  0076C8  22                 	db	34
   525  0076C9  1C                 	db	28
   526  0076CA  00                 	db	0
   527  0076CB  41                 	db	65
   528  0076CC  7F                 	db	127
   529  0076CD  49                 	db	73
   530  0076CE  49                 	db	73
   531  0076CF  5D                 	db	93
   532  0076D0  41                 	db	65
   533  0076D1  63                 	db	99
   534  0076D2  00                 	db	0
   535  0076D3  41                 	db	65
   536  0076D4  7F                 	db	127
   537  0076D5  49                 	db	73
   538  0076D6  09                 	db	9
   539  0076D7  1D                 	db	29
   540  0076D8  01                 	db	1
   541  0076D9  03                 	db	3
   542  0076DA  00                 	db	0
   543  0076DB  1C                 	db	28
   544  0076DC  22                 	db	34
   545  0076DD  41                 	db	65
   546  0076DE  49                 	db	73
   547  0076DF  49                 	db	73
   548  0076E0  3A                 	db	58
   549  0076E1  08                 	db	8
   550  0076E2  00                 	db	0
   551  0076E3  41                 	db	65
   552  0076E4  7F                 	db	127
   553  0076E5  08                 	db	8
   554  0076E6  08                 	db	8
   555  0076E7  08                 	db	8
   556  0076E8  7F                 	db	127
   557  0076E9  41                 	db	65
   558  0076EA  00                 	db	0
   559  0076EB  00                 	db	0
   560  0076EC  41                 	db	65
   561  0076ED  41                 	db	65
   562  0076EE  7F                 	db	127
   563  0076EF  41                 	db	65
   564  0076F0  41                 	db	65
   565  0076F1  00                 	db	0
   566  0076F2  00                 	db	0
   567  0076F3  30                 	db	48
   568  0076F4  40                 	db	64
   569  0076F5  41                 	db	65
   570  0076F6  41                 	db	65
   571  0076F7  3F                 	db	63
   572  0076F8  01                 	db	1
   573  0076F9  01                 	db	1
   574  0076FA  00                 	db	0
   575  0076FB  41                 	db	65
   576  0076FC  7F                 	db	127
   577  0076FD  08                 	db	8
   578  0076FE  0C                 	db	12
   579  0076FF  12                 	db	18
   580  007700  61                 	db	97
   581  007701  41                 	db	65
   582  007702  00                 	db	0
   583  007703  41                 	db	65
   584  007704  7F                 	db	127
   585  007705  41                 	db	65
   586  007706  40                 	db	64
   587  007707  40                 	db	64
   588  007708  40                 	db	64
   589  007709  60                 	db	96
   590  00770A  00                 	db	0
   591  00770B  41                 	db	65
   592  00770C  7F                 	db	127
   593  00770D  42                 	db	66
   594  00770E  0C                 	db	12
   595  00770F  42                 	db	66
   596  007710  7F                 	db	127
   597  007711  41                 	db	65
   598  007712  00                 	db	0
   599  007713  41                 	db	65
   600  007714  7F                 	db	127
   601  007715  42                 	db	66
   602  007716  0C                 	db	12
   603  007717  11                 	db	17
   604  007718  7F                 	db	127
   605  007719  01                 	db	1
   606  00771A  00                 	db	0
   607  00771B  1C                 	db	28
   608  00771C  22                 	db	34
   609  00771D  41                 	db	65
   610  00771E  41                 	db	65
   611  00771F  41                 	db	65
   612  007720  22                 	db	34
   613  007721  1C                 	db	28
   614  007722  00                 	db	0
   615  007723  41                 	db	65
   616  007724  7F                 	db	127
   617  007725  49                 	db	73
   618  007726  09                 	db	9
   619  007727  09                 	db	9
   620  007728  09                 	db	9
   621  007729  06                 	db	6
   622  00772A  00                 	db	0
   623  00772B  0C                 	db	12
   624  00772C  12                 	db	18
   625  00772D  21                 	db	33
   626  00772E  21                 	db	33
   627  00772F  61                 	db	97
   628  007730  52                 	db	82
   629  007731  4C                 	db	76
   630  007732  00                 	db	0
   631  007733  41                 	db	65
   632  007734  7F                 	db	127
   633  007735  09                 	db	9
   634  007736  09                 	db	9
   635  007737  19                 	db	25
   636  007738  69                 	db	105
   637  007739  46                 	db	70
   638  00773A  00                 	db	0
   639  00773B  66                 	db	102
   640  00773C  49                 	db	73
   641  00773D  49                 	db	73
   642  00773E  49                 	db	73
   643  00773F  49                 	db	73
   644  007740  49                 	db	73
   645  007741  33                 	db	51
   646  007742  00                 	db	0
   647  007743  03                 	db	3
   648  007744  01                 	db	1
   649  007745  41                 	db	65
   650  007746  7F                 	db	127
   651  007747  41                 	db	65
   652  007748  01                 	db	1
   653  007749  03                 	db	3
   654  00774A  00                 	db	0
   655  00774B  01                 	db	1
   656  00774C  3F                 	db	63
   657  00774D  41                 	db	65
   658  00774E  40                 	db	64
   659  00774F  41                 	db	65
   660  007750  3F                 	db	63
   661  007751  01                 	db	1
   662  007752  00                 	db	0
   663  007753  01                 	db	1
   664  007754  0F                 	db	15
   665  007755  31                 	db	49
   666  007756  40                 	db	64
   667  007757  31                 	db	49
   668  007758  0F                 	db	15
   669  007759  01                 	db	1
   670  00775A  00                 	db	0
   671  00775B  01                 	db	1
   672  00775C  1F                 	db	31
   673  00775D  61                 	db	97
   674  00775E  14                 	db	20
   675  00775F  61                 	db	97
   676  007760  1F                 	db	31
   677  007761  01                 	db	1
   678  007762  00                 	db	0
   679  007763  41                 	db	65
   680  007764  41                 	db	65
   681  007765  36                 	db	54
   682  007766  08                 	db	8
   683  007767  36                 	db	54
   684  007768  41                 	db	65
   685  007769  41                 	db	65
   686  00776A  00                 	db	0
   687  00776B  01                 	db	1
   688  00776C  03                 	db	3
   689  00776D  44                 	db	68
   690  00776E  78                 	db	120
   691  00776F  44                 	db	68
   692  007770  03                 	db	3
   693  007771  01                 	db	1
   694  007772  00                 	db	0
   695  007773  43                 	db	67
   696  007774  61                 	db	97
   697  007775  51                 	db	81
   698  007776  49                 	db	73
   699  007777  45                 	db	69
   700  007778  43                 	db	67
   701  007779  61                 	db	97
   702  00777A  00                 	db	0
   703  00777B  00                 	db	0
   704  00777C  00                 	db	0
   705  00777D  7F                 	db	127
   706  00777E  41                 	db	65
   707  00777F  41                 	db	65
   708  007780  00                 	db	0
   709  007781  00                 	db	0
   710  007782  00                 	db	0
   711  007783  01                 	db	1
   712  007784  02                 	db	2
   713  007785  04                 	db	4
   714  007786  08                 	db	8
   715  007787  10                 	db	16
   716  007788  20                 	db	32
   717  007789  40                 	db	64
   718  00778A  00                 	db	0
   719  00778B  00                 	db	0
   720  00778C  00                 	db	0
   721  00778D  41                 	db	65
   722  00778E  41                 	db	65
   723  00778F  7F                 	db	127
   724  007790  00                 	db	0
   725  007791  00                 	db	0
   726  007792  00                 	db	0
   727  007793  00                 	db	0
   728  007794  04                 	db	4
   729  007795  02                 	db	2
   730  007796  01                 	db	1
   731  007797  01                 	db	1
   732  007798  02                 	db	2
   733  007799  04                 	db	4
   734  00779A  00                 	db	0
   735  00779B  00                 	db	0
   736  00779C  40                 	db	64
   737  00779D  40                 	db	64
   738  00779E  40                 	db	64
   739  00779F  40                 	db	64
   740  0077A0  40                 	db	64
   741  0077A1  40                 	db	64
   742  0077A2  00                 	db	0
   743  0077A3  00                 	db	0
   744  0077A4  01                 	db	1
   745  0077A5  02                 	db	2
   746  0077A6  00                 	db	0
   747  0077A7  00                 	db	0
   748  0077A8  00                 	db	0
   749  0077A9  00                 	db	0
   750  0077AA  00                 	db	0
   751  0077AB  00                 	db	0
   752  0077AC  34                 	db	52
   753  0077AD  4A                 	db	74
   754  0077AE  4A                 	db	74
   755  0077AF  4A                 	db	74
   756  0077B0  3C                 	db	60
   757  0077B1  40                 	db	64
   758  0077B2  00                 	db	0
   759  0077B3  00                 	db	0
   760  0077B4  41                 	db	65
   761  0077B5  3F                 	db	63
   762  0077B6  48                 	db	72
   763  0077B7  48                 	db	72
   764  0077B8  48                 	db	72
   765  0077B9  30                 	db	48
   766  0077BA  00                 	db	0
   767  0077BB  00                 	db	0
   768  0077BC  3C                 	db	60
   769  0077BD  42                 	db	66
   770  0077BE  42                 	db	66
   771  0077BF  42                 	db	66
   772  0077C0  24                 	db	36
   773  0077C1  00                 	db	0
   774  0077C2  00                 	db	0
   775  0077C3  00                 	db	0
   776  0077C4  30                 	db	48
   777  0077C5  48                 	db	72
   778  0077C6  48                 	db	72
   779  0077C7  49                 	db	73
   780  0077C8  3F                 	db	63
   781  0077C9  40                 	db	64
   782  0077CA  00                 	db	0
   783  0077CB  00                 	db	0
   784  0077CC  3C                 	db	60
   785  0077CD  4A                 	db	74
   786  0077CE  4A                 	db	74
   787  0077CF  4A                 	db	74
   788  0077D0  2C                 	db	44
   789  0077D1  00                 	db	0
   790  0077D2  00                 	db	0
   791  0077D3  00                 	db	0
   792  0077D4  00                 	db	0
   793  0077D5  48                 	db	72
   794  0077D6  7E                 	db	126
   795  0077D7  49                 	db	73
   796  0077D8  09                 	db	9
   797  0077D9  00                 	db	0
   798  0077DA  00                 	db	0
   799  0077DB  00                 	db	0
   800  0077DC  26                 	db	38
   801  0077DD  49                 	db	73
   802  0077DE  49                 	db	73
   803  0077DF  49                 	db	73
   804  0077E0  3F                 	db	63
   805  0077E1  01                 	db	1
   806  0077E2  00                 	db	0
   807  0077E3  41                 	db	65
   808  0077E4  7F                 	db	127
   809  0077E5  48                 	db	72
   810  0077E6  04                 	db	4
   811  0077E7  44                 	db	68
   812  0077E8  78                 	db	120
   813  0077E9  40                 	db	64
   814  0077EA  00                 	db	0
   815  0077EB  00                 	db	0
   816  0077EC  00                 	db	0
   817  0077ED  44                 	db	68
   818  0077EE  7D                 	db	125
   819  0077EF  40                 	db	64
   820  0077F0  00                 	db	0
   821  0077F1  00                 	db	0
   822  0077F2  00                 	db	0
   823  0077F3  00                 	db	0
   824  0077F4  00                 	db	0
   825  0077F5  40                 	db	64
   826  0077F6  44                 	db	68
   827  0077F7  3D                 	db	61
   828  0077F8  00                 	db	0
   829  0077F9  00                 	db	0
   830  0077FA  00                 	db	0
   831  0077FB  41                 	db	65
   832  0077FC  7F                 	db	127
   833  0077FD  10                 	db	16
   834  0077FE  18                 	db	24
   835  0077FF  24                 	db	36
   836  007800  42                 	db	66
   837  007801  42                 	db	66
   838  007802  00                 	db	0
   839  007803  00                 	db	0
   840  007804  40                 	db	64
   841  007805  41                 	db	65
   842  007806  7F                 	db	127
   843  007807  40                 	db	64
   844  007808  40                 	db	64
   845  007809  00                 	db	0
   846  00780A  00                 	db	0
   847  00780B  42                 	db	66
   848  00780C  7E                 	db	126
   849  00780D  02                 	db	2
   850  00780E  7C                 	db	124
   851  00780F  02                 	db	2
   852  007810  7E                 	db	126
   853  007811  40                 	db	64
   854  007812  00                 	db	0
   855  007813  42                 	db	66
   856  007814  7E                 	db	126
   857  007815  44                 	db	68
   858  007816  02                 	db	2
   859  007817  42                 	db	66
   860  007818  7C                 	db	124
   861  007819  40                 	db	64
   862  00781A  00                 	db	0
   863  00781B  00                 	db	0
   864  00781C  3C                 	db	60
   865  00781D  42                 	db	66
   866  00781E  42                 	db	66
   867  00781F  42                 	db	66
   868  007820  3C                 	db	60
   869  007821  00                 	db	0
   870  007822  00                 	db	0
   871  007823  00                 	db	0
   872  007824  41                 	db	65
   873  007825  7F                 	db	127
   874  007826  49                 	db	73
   875  007827  09                 	db	9
   876  007828  09                 	db	9
   877  007829  06                 	db	6
   878  00782A  00                 	db	0
   879  00782B  00                 	db	0
   880  00782C  06                 	db	6
   881  00782D  09                 	db	9
   882  00782E  09                 	db	9
   883  00782F  49                 	db	73
   884  007830  7F                 	db	127
   885  007831  41                 	db	65
   886  007832  00                 	db	0
   887  007833  00                 	db	0
   888  007834  42                 	db	66
   889  007835  7E                 	db	126
   890  007836  44                 	db	68
   891  007837  02                 	db	2
   892  007838  02                 	db	2
   893  007839  04                 	db	4
   894  00783A  00                 	db	0
   895  00783B  00                 	db	0
   896  00783C  64                 	db	100
   897  00783D  4A                 	db	74
   898  00783E  4A                 	db	74
   899  00783F  4A                 	db	74
   900  007840  36                 	db	54
   901  007841  00                 	db	0
   902  007842  00                 	db	0
   903  007843  00                 	db	0
   904  007844  04                 	db	4
   905  007845  3F                 	db	63
   906  007846  44                 	db	68
   907  007847  44                 	db	68
   908  007848  20                 	db	32
   909  007849  00                 	db	0
   910  00784A  00                 	db	0
   911  00784B  00                 	db	0
   912  00784C  02                 	db	2
   913  00784D  3E                 	db	62
   914  00784E  40                 	db	64
   915  00784F  40                 	db	64
   916  007850  22                 	db	34
   917  007851  7E                 	db	126
   918  007852  40                 	db	64
   919  007853  02                 	db	2
   920  007854  0E                 	db	14
   921  007855  32                 	db	50
   922  007856  40                 	db	64
   923  007857  32                 	db	50
   924  007858  0E                 	db	14
   925  007859  02                 	db	2
   926  00785A  00                 	db	0
   927  00785B  02                 	db	2
   928  00785C  1E                 	db	30
   929  00785D  62                 	db	98
   930  00785E  18                 	db	24
   931  00785F  62                 	db	98
   932  007860  1E                 	db	30
   933  007861  02                 	db	2
   934  007862  00                 	db	0
   935  007863  42                 	db	66
   936  007864  62                 	db	98
   937  007865  14                 	db	20
   938  007866  08                 	db	8
   939  007867  14                 	db	20
   940  007868  62                 	db	98
   941  007869  42                 	db	66
   942  00786A  00                 	db	0
   943  00786B  01                 	db	1
   944  00786C  43                 	db	67
   945  00786D  45                 	db	69
   946  00786E  38                 	db	56
   947  00786F  05                 	db	5
   948  007870  03                 	db	3
   949  007871  01                 	db	1
   950  007872  00                 	db	0
   951  007873  00                 	db	0
   952  007874  46                 	db	70
   953  007875  62                 	db	98
   954  007876  52                 	db	82
   955  007877  4A                 	db	74
   956  007878  46                 	db	70
   957  007879  62                 	db	98
   958  00787A  00                 	db	0
   959  00787B  00                 	db	0
   960  00787C  00                 	db	0
   961  00787D  08                 	db	8
   962  00787E  36                 	db	54
   963  00787F  41                 	db	65
   964  007880  00                 	db	0
   965  007881  00                 	db	0
   966  007882  00                 	db	0
   967  007883  00                 	db	0
   968  007884  00                 	db	0
   969  007885  00                 	db	0
   970  007886  7F                 	db	127
   971  007887  00                 	db	0
   972  007888  00                 	db	0
   973  007889  00                 	db	0
   974  00788A  00                 	db	0
   975  00788B  00                 	db	0
   976  00788C  00                 	db	0
   977  00788D  00                 	db	0
   978  00788E  41                 	db	65
   979  00788F  36                 	db	54
   980  007890  08                 	db	8
   981  007891  00                 	db	0
   982  007892  00                 	db	0
   983  007893  00                 	db	0
   984  007894  18                 	db	24
   985  007895  08                 	db	8
   986  007896  08                 	db	8
   987  007897  10                 	db	16
   988  007898  10                 	db	16
   989  007899  18                 	db	24
   990  00789A  00                 	db	0
   991  00789B  AA                 	db	170
   992  00789C  55                 	db	85
   993  00789D  AA                 	db	170
   994  00789E  55                 	db	85
   995  00789F  AA                 	db	170
   996  0078A0  55                 	db	85
   997  0078A1  AA                 	db	170
   998  0078A2  55                 	db	85
   999  0078A3                     __end_of_OledFont0:
  1000                           	opt stack 0
  1001  0078A3                     _configDescriptor1:
  1002                           	opt stack 0
  1003  0078A3  09                 	db	9
  1004  0078A4  02                 	db	2
  1005  0078A5  43                 	db	67
  1006  0078A6  00                 	db	0
  1007  0078A7  02                 	db	2
  1008  0078A8  01                 	db	1
  1009  0078A9  00                 	db	0
  1010  0078AA  C0                 	db	192
  1011  0078AB  32                 	db	50
  1012  0078AC  09                 	db	9
  1013  0078AD  04                 	db	4
  1014  0078AE  00                 	db	0
  1015  0078AF  00                 	db	0
  1016  0078B0  01                 	db	1
  1017  0078B1  02                 	db	2
  1018  0078B2  02                 	db	2
  1019  0078B3  01                 	db	1
  1020  0078B4  00                 	db	0
  1021  0078B5  05                 	db	5
  1022  0078B6  24                 	db	36
  1023  0078B7  00                 	db	0
  1024  0078B8  10                 	db	16
  1025  0078B9  01                 	db	1
  1026  0078BA  04                 	db	4
  1027  0078BB  24                 	db	36
  1028  0078BC  02                 	db	2
  1029  0078BD  02                 	db	2
  1030  0078BE  05                 	db	5
  1031  0078BF  24                 	db	36
  1032  0078C0  06                 	db	6
  1033  0078C1  00                 	db	0
  1034  0078C2  01                 	db	1
  1035  0078C3  05                 	db	5
  1036  0078C4  24                 	db	36
  1037  0078C5  01                 	db	1
  1038  0078C6  00                 	db	0
  1039  0078C7  01                 	db	1
  1040  0078C8  07                 	db	7
  1041  0078C9  05                 	db	5
  1042  0078CA  81                 	db	129
  1043  0078CB  03                 	db	3
  1044  0078CC  08                 	db	8
  1045  0078CD  00                 	db	0
  1046  0078CE  02                 	db	2
  1047  0078CF  09                 	db	9
  1048  0078D0  04                 	db	4
  1049  0078D1  01                 	db	1
  1050  0078D2  00                 	db	0
  1051  0078D3  02                 	db	2
  1052  0078D4  0A                 	db	10
  1053  0078D5  00                 	db	0
  1054  0078D6  00                 	db	0
  1055  0078D7  00                 	db	0
  1056  0078D8  07                 	db	7
  1057  0078D9  05                 	db	5
  1058  0078DA  02                 	db	2
  1059  0078DB  02                 	db	2
  1060  0078DC  40                 	db	64
  1061  0078DD  00                 	db	0
  1062  0078DE  00                 	db	0
  1063  0078DF  07                 	db	7
  1064  0078E0  05                 	db	5
  1065  0078E1  82                 	db	130
  1066  0078E2  02                 	db	2
  1067  0078E3  40                 	db	64
  1068  0078E4  00                 	db	0
  1069  0078E5  00                 	db	0
  1070  0078E6                     __end_of_configDescriptor1:
  1071                           	opt stack 0
  1072  0078E6                     _sd001:
  1073                           	opt stack 0
  1074  0078E6  34                 	db	52
  1075  0078E7  03                 	db	3
  1076  0078E8  004D               	dw	77
  1077  0078EA  0069               	dw	105
  1078  0078EC  0063               	dw	99
  1079  0078EE  0072               	dw	114
  1080  0078F0  006F               	dw	111
  1081  0078F2  0063               	dw	99
  1082  0078F4  0068               	dw	104
  1083  0078F6  0069               	dw	105
  1084  0078F8  0070               	dw	112
  1085  0078FA  0020               	dw	32
  1086  0078FC  0054               	dw	84
  1087  0078FE  0065               	dw	101
  1088  007900  0063               	dw	99
  1089  007902  0068               	dw	104
  1090  007904  006E               	dw	110
  1091  007906  006F               	dw	111
  1092  007908  006C               	dw	108
  1093  00790A  006F               	dw	111
  1094  00790C  0067               	dw	103
  1095  00790E  0079               	dw	121
  1096  007910  0020               	dw	32
  1097  007912  0049               	dw	73
  1098  007914  006E               	dw	110
  1099  007916  0063               	dw	99
  1100  007918  002E               	dw	46
  1101  00791A                     __end_of_sd001:
  1102                           	opt stack 0
  1103  00791A                     _sd002:
  1104                           	opt stack 0
  1105  00791A  34                 	db	52
  1106  00791B  03                 	db	3
  1107  00791C  0043               	dw	67
  1108  00791E  0044               	dw	68
  1109  007920  0043               	dw	67
  1110  007922  0020               	dw	32
  1111  007924  0052               	dw	82
  1112  007926  0053               	dw	83
  1113  007928  002D               	dw	45
  1114  00792A  0032               	dw	50
  1115  00792C  0033               	dw	51
  1116  00792E  0032               	dw	50
  1117  007930  0020               	dw	32
  1118  007932  0045               	dw	69
  1119  007934  006D               	dw	109
  1120  007936  0075               	dw	117
  1121  007938  006C               	dw	108
  1122  00793A  0061               	dw	97
  1123  00793C  0074               	dw	116
  1124  00793E  0069               	dw	105
  1125  007940  006F               	dw	111
  1126  007942  006E               	dw	110
  1127  007944  0020               	dw	32
  1128  007946  0044               	dw	68
  1129  007948  0065               	dw	101
  1130  00794A  006D               	dw	109
  1131  00794C  006F               	dw	111
  1132  00794E                     __end_of_sd002:
  1133                           	opt stack 0
  1134  00794E                     _device_dsc:
  1135                           	opt stack 0
  1136  00794E  12                 	db	18
  1137  00794F  01                 	db	1
  1138  007950  0200               	dw	512
  1139  007952  02                 	db	2
  1140  007953  00                 	db	0
  1141  007954  00                 	db	0
  1142  007955  08                 	db	8
  1143  007956  04D8               	dw	1240
  1144  007958  000A               	dw	10
  1145  00795A  0100               	dw	256
  1146  00795C  01                 	db	1
  1147  00795D  02                 	db	2
  1148  00795E  00                 	db	0
  1149  00795F  01                 	db	1
  1150  007960                     __end_of_device_dsc:
  1151                           	opt stack 0
  1152  007960                     _sd000:
  1153                           	opt stack 0
  1154  007960  04                 	db	4
  1155  007961  03                 	db	3
  1156  007962  0409               	dw	1033
  1157  007964                     __end_of_sd000:
  1158                           	opt stack 0
  1159  0000                     _ANSELAbits	set	3931
  1160  0000                     _ANSELCbits	set	3933
  1161  0000                     _ANSELD	set	3934
  1162  0000                     _TMR3	set	4018
  1163  0000                     _ACTCON	set	4021
  1164  0000                     _ADCON0	set	4034
  1165  0000                     _ADCON0bits	set	4034
  1166  0000                     _ADCON1	set	4033
  1167  0000                     _ADCON2	set	4032
  1168  0000                     _ADRESH	set	4036
  1169  0000                     _ADRESL	set	4035
  1170  0000                     _BAUDCON	set	4024
  1171  0000                     _CM1CON0	set	3992
  1172  0000                     _CM1CON0bits	set	3992
  1173  0000                     _CM2CON1bits	set	3994
  1174  0000                     _EEADR	set	4009
  1175  0000                     _EECON1bits	set	4006
  1176  0000                     _EECON2	set	4007
  1177  0000                     _EEDATA	set	4008
  1178  0000                     _INTCON3bits	set	4080
  1179  0000                     _INTCONbits	set	4082
  1180  0000                     _IOCCbits	set	3975
  1181  0000                     _IPR3bits	set	4005
  1182  0000                     _LATAbits	set	3977
  1183  0000                     _LATBbits	set	3978
  1184  0000                     _LATCbits	set	3979
  1185  0000                     _LATD	set	3980
  1186  0000                     _LATEbits	set	3981
  1187  0000                     _OSCCON	set	4051
  1188  0000                     _OSCCON2	set	4050
  1189  0000                     _OSCCON2bits	set	4050
  1190  0000                     _OSCTUNE	set	3995
  1191  0000                     _PIE1bits	set	3997
  1192  0000                     _PIE2bits	set	4000
  1193  0000                     _PIE3bits	set	4003
  1194  0000                     _PIR1bits	set	3998
  1195  0000                     _PIR2bits	set	4001
  1196  0000                     _PIR3bits	set	4004
  1197  0000                     _PORTAbits	set	3968
  1198  0000                     _PORTBbits	set	3969
  1199  0000                     _PORTCbits	set	3970
  1200  0000                     _PR2	set	4027
  1201  0000                     _RCONbits	set	4048
  1202  0000                     _RCREG	set	4014
  1203  0000                     _RCSTA	set	4011
  1204  0000                     _RCSTAbits	set	4011
  1205  0000                     _SPBRG	set	4015
  1206  0000                     _SPBRGH	set	4016
  1207  0000                     _SSP1ADD	set	4040
  1208  0000                     _SSP1CON1	set	4038
  1209  0000                     _SSP1CON1bits	set	4038
  1210  0000                     _SSP1STAT	set	4039
  1211  0000                     _SSP1STATbits	set	4039
  1212  0000                     _SSPBUF	set	4041
  1213  0000                     _T1CON	set	4045
  1214  0000                     _T1CONbits	set	4045
  1215  0000                     _T1GCON	set	4044
  1216  0000                     _T1GCONbits	set	4044
  1217  0000                     _T2CON	set	4026
  1218  0000                     _T2CONbits	set	4026
  1219  0000                     _T3CON	set	4017
  1220  0000                     _T3CONbits	set	4017
  1221  0000                     _T3GCON	set	4020
  1222  0000                     _T3GCONbits	set	4020
  1223  0000                     _TABLAT	set	4085
  1224  0000                     _TBLPTRH	set	4087
  1225  0000                     _TBLPTRL	set	4086
  1226  0000                     _TBLPTRU	set	4088
  1227  0000                     _TMR1H	set	4047
  1228  0000                     _TMR1L	set	4046
  1229  0000                     _TMR2	set	4028
  1230  0000                     _TMR3H	set	4019
  1231  0000                     _TMR3L	set	4018
  1232  0000                     _TRISAbits	set	3986
  1233  0000                     _TRISBbits	set	3987
  1234  0000                     _TRISCbits	set	3988
  1235  0000                     _TRISD	set	3989
  1236  0000                     _TRISEbits	set	3990
  1237  0000                     _TXREG	set	4013
  1238  0000                     _TXSTA	set	4012
  1239  0000                     _TXSTAbits	set	4012
  1240  0000                     _UADDR	set	3939
  1241  0000                     _UCFG	set	3938
  1242  0000                     _UCON	set	3936
  1243  0000                     _UCONbits	set	3936
  1244  0000                     _UEIE	set	3942
  1245  0000                     _UEIR	set	3943
  1246  0000                     _UEP0bits	set	3946
  1247  0000                     _UIE	set	3940
  1248  0000                     _UIEbits	set	3940
  1249  0000                     _UIR	set	3941
  1250  0000                     _UIRbits	set	3941
  1251  0000                     _USTAT	set	3937
  1252  0000                     _VREFCON0	set	3965
  1253  0000                     _VREFCON0bits	set	3965
  1254  0000                     _WDTCONbits	set	4049
  1255  0000                     _UEP0	set	3946
  1256  0000                     _UEP1	set	3947
  1257  0000                     _CKE	set	32318
  1258  0000                     _CKP	set	32308
  1259  0000                     _GIE	set	32663
  1260  0000                     _PEIE	set	32662
  1261  007964                     STR_191:
  1262  007964  73                 	db	115	;'s'
  1263  007965  79                 	db	121	;'y'
  1264  007966  73                 	db	115	;'s'
  1265  007967  20                 	db	32
  1266  007968  73                 	db	115	;'s'
  1267  007969  65                 	db	101	;'e'
  1268  00796A  74                 	db	116	;'t'
  1269  00796B  20                 	db	32
  1270  00796C  70                 	db	112	;'p'
  1271  00796D  69                 	db	105	;'i'
  1272  00796E  6E                 	db	110	;'n'
  1273  00796F  6D                 	db	109	;'m'
  1274  007970  6F                 	db	111	;'o'
  1275  007971  64                 	db	100	;'d'
  1276  007972  65                 	db	101	;'e'
  1277  007973  20                 	db	32
  1278  007974  47                 	db	71	;'G'
  1279  007975  50                 	db	80	;'P'
  1280  007976  49                 	db	73	;'I'
  1281  007977  4F                 	db	79	;'O'
  1282  007978  31                 	db	49	;'1'
  1283  007979  32                 	db	50	;'2'
  1284  00797A  20                 	db	32
  1285  00797B  61                 	db	97	;'a'
  1286  00797C  6E                 	db	110	;'n'
  1287  00797D  61                 	db	97	;'a'
  1288  00797E  00                 	db	0
  1289  00797F                     STR_190:
  1290  00797F  73                 	db	115	;'s'
  1291  007980  79                 	db	121	;'y'
  1292  007981  73                 	db	115	;'s'
  1293  007982  20                 	db	32
  1294  007983  73                 	db	115	;'s'
  1295  007984  65                 	db	101	;'e'
  1296  007985  74                 	db	116	;'t'
  1297  007986  20                 	db	32
  1298  007987  70                 	db	112	;'p'
  1299  007988  69                 	db	105	;'i'
  1300  007989  6E                 	db	110	;'n'
  1301  00798A  6D                 	db	109	;'m'
  1302  00798B  6F                 	db	111	;'o'
  1303  00798C  64                 	db	100	;'d'
  1304  00798D  65                 	db	101	;'e'
  1305  00798E  20                 	db	32
  1306  00798F  47                 	db	71	;'G'
  1307  007990  50                 	db	80	;'P'
  1308  007991  49                 	db	73	;'I'
  1309  007992  4F                 	db	79	;'O'
  1310  007993  31                 	db	49	;'1'
  1311  007994  33                 	db	51	;'3'
  1312  007995  20                 	db	32
  1313  007996  61                 	db	97	;'a'
  1314  007997  6E                 	db	110	;'n'
  1315  007998  61                 	db	97	;'a'
  1316  007999  00                 	db	0
  1317  00799A                     STR_184:
  1318  00799A  73                 	db	115	;'s'
  1319  00799B  79                 	db	121	;'y'
  1320  00799C  73                 	db	115	;'s'
  1321  00799D  20                 	db	32
  1322  00799E  73                 	db	115	;'s'
  1323  00799F  65                 	db	101	;'e'
  1324  0079A0  74                 	db	116	;'t'
  1325  0079A1  20                 	db	32
  1326  0079A2  70                 	db	112	;'p'
  1327  0079A3  69                 	db	105	;'i'
  1328  0079A4  6E                 	db	110	;'n'
  1329  0079A5  64                 	db	100	;'d'
  1330  0079A6  69                 	db	105	;'i'
  1331  0079A7  67                 	db	103	;'g'
  1332  0079A8  20                 	db	32
  1333  0079A9  47                 	db	71	;'G'
  1334  0079AA  50                 	db	80	;'P'
  1335  0079AB  49                 	db	73	;'I'
  1336  0079AC  4F                 	db	79	;'O'
  1337  0079AD  31                 	db	49	;'1'
  1338  0079AE  30                 	db	48	;'0'
  1339  0079AF  20                 	db	32
  1340  0079B0  30                 	db	48	;'0'
  1341  0079B1  0D                 	db	13
  1342  0079B2  0A                 	db	10
  1343  0079B3  00                 	db	0
  1344  0079B4                     STR_185:
  1345  0079B4  73                 	db	115	;'s'
  1346  0079B5  79                 	db	121	;'y'
  1347  0079B6  73                 	db	115	;'s'
  1348  0079B7  20                 	db	32
  1349  0079B8  73                 	db	115	;'s'
  1350  0079B9  65                 	db	101	;'e'
  1351  0079BA  74                 	db	116	;'t'
  1352  0079BB  20                 	db	32
  1353  0079BC  70                 	db	112	;'p'
  1354  0079BD  69                 	db	105	;'i'
  1355  0079BE  6E                 	db	110	;'n'
  1356  0079BF  64                 	db	100	;'d'
  1357  0079C0  69                 	db	105	;'i'
  1358  0079C1  67                 	db	103	;'g'
  1359  0079C2  20                 	db	32
  1360  0079C3  47                 	db	71	;'G'
  1361  0079C4  50                 	db	80	;'P'
  1362  0079C5  49                 	db	73	;'I'
  1363  0079C6  4F                 	db	79	;'O'
  1364  0079C7  31                 	db	49	;'1'
  1365  0079C8  31                 	db	49	;'1'
  1366  0079C9  20                 	db	32
  1367  0079CA  30                 	db	48	;'0'
  1368  0079CB  0D                 	db	13
  1369  0079CC  0A                 	db	10
  1370  0079CD  00                 	db	0
  1371  0079CE                     STR_182:
  1372  0079CE  73                 	db	115	;'s'
  1373  0079CF  79                 	db	121	;'y'
  1374  0079D0  73                 	db	115	;'s'
  1375  0079D1  20                 	db	32
  1376  0079D2  73                 	db	115	;'s'
  1377  0079D3  65                 	db	101	;'e'
  1378  0079D4  74                 	db	116	;'t'
  1379  0079D5  20                 	db	32
  1380  0079D6  70                 	db	112	;'p'
  1381  0079D7  69                 	db	105	;'i'
  1382  0079D8  6E                 	db	110	;'n'
  1383  0079D9  64                 	db	100	;'d'
  1384  0079DA  69                 	db	105	;'i'
  1385  0079DB  67                 	db	103	;'g'
  1386  0079DC  20                 	db	32
  1387  0079DD  47                 	db	71	;'G'
  1388  0079DE  50                 	db	80	;'P'
  1389  0079DF  49                 	db	73	;'I'
  1390  0079E0  4F                 	db	79	;'O'
  1391  0079E1  31                 	db	49	;'1'
  1392  0079E2  30                 	db	48	;'0'
  1393  0079E3  20                 	db	32
  1394  0079E4  31                 	db	49	;'1'
  1395  0079E5  0D                 	db	13
  1396  0079E6  0A                 	db	10
  1397  0079E7  00                 	db	0
  1398  0079E8                     STR_183:
  1399  0079E8  73                 	db	115	;'s'
  1400  0079E9  79                 	db	121	;'y'
  1401  0079EA  73                 	db	115	;'s'
  1402  0079EB  20                 	db	32
  1403  0079EC  73                 	db	115	;'s'
  1404  0079ED  65                 	db	101	;'e'
  1405  0079EE  74                 	db	116	;'t'
  1406  0079EF  20                 	db	32
  1407  0079F0  70                 	db	112	;'p'
  1408  0079F1  69                 	db	105	;'i'
  1409  0079F2  6E                 	db	110	;'n'
  1410  0079F3  64                 	db	100	;'d'
  1411  0079F4  69                 	db	105	;'i'
  1412  0079F5  67                 	db	103	;'g'
  1413  0079F6  20                 	db	32
  1414  0079F7  47                 	db	71	;'G'
  1415  0079F8  50                 	db	80	;'P'
  1416  0079F9  49                 	db	73	;'I'
  1417  0079FA  4F                 	db	79	;'O'
  1418  0079FB  31                 	db	49	;'1'
  1419  0079FC  31                 	db	49	;'1'
  1420  0079FD  20                 	db	32
  1421  0079FE  31                 	db	49	;'1'
  1422  0079FF  0D                 	db	13
  1423  007A00  0A                 	db	10
  1424  007A01  00                 	db	0
  1425  007A02                     STR_192:
  1426  007A02  73                 	db	115	;'s'
  1427  007A03  79                 	db	121	;'y'
  1428  007A04  73                 	db	115	;'s'
  1429  007A05  20                 	db	32
  1430  007A06  67                 	db	103	;'g'
  1431  007A07  65                 	db	101	;'e'
  1432  007A08  74                 	db	116	;'t'
  1433  007A09  20                 	db	32
  1434  007A0A  70                 	db	112	;'p'
  1435  007A0B  69                 	db	105	;'i'
  1436  007A0C  6E                 	db	110	;'n'
  1437  007A0D  61                 	db	97	;'a'
  1438  007A0E  6E                 	db	110	;'n'
  1439  007A0F  61                 	db	97	;'a'
  1440  007A10  20                 	db	32
  1441  007A11  47                 	db	71	;'G'
  1442  007A12  50                 	db	80	;'P'
  1443  007A13  49                 	db	73	;'I'
  1444  007A14  4F                 	db	79	;'O'
  1445  007A15  31                 	db	49	;'1'
  1446  007A16  32                 	db	50	;'2'
  1447  007A17  00                 	db	0
  1448  007A18                     STR_193:
  1449  007A18  73                 	db	115	;'s'
  1450  007A19  79                 	db	121	;'y'
  1451  007A1A  73                 	db	115	;'s'
  1452  007A1B  20                 	db	32
  1453  007A1C  67                 	db	103	;'g'
  1454  007A1D  65                 	db	101	;'e'
  1455  007A1E  74                 	db	116	;'t'
  1456  007A1F  20                 	db	32
  1457  007A20  70                 	db	112	;'p'
  1458  007A21  69                 	db	105	;'i'
  1459  007A22  6E                 	db	110	;'n'
  1460  007A23  61                 	db	97	;'a'
  1461  007A24  6E                 	db	110	;'n'
  1462  007A25  61                 	db	97	;'a'
  1463  007A26  20                 	db	32
  1464  007A27  47                 	db	71	;'G'
  1465  007A28  50                 	db	80	;'P'
  1466  007A29  49                 	db	73	;'I'
  1467  007A2A  4F                 	db	79	;'O'
  1468  007A2B  31                 	db	49	;'1'
  1469  007A2C  33                 	db	51	;'3'
  1470  007A2D  00                 	db	0
  1471  007A2E                     STR_22:
  1472  007A2E  73                 	db	115	;'s'
  1473  007A2F  79                 	db	121	;'y'
  1474  007A30  73                 	db	115	;'s'
  1475  007A31  20                 	db	32
  1476  007A32  73                 	db	115	;'s'
  1477  007A33  6C                 	db	108	;'l'
  1478  007A34  65                 	db	101	;'e'
  1479  007A35  65                 	db	101	;'e'
  1480  007A36  70                 	db	112	;'p'
  1481  007A37  20                 	db	32
  1482  007A38  39                 	db	57	;'9'
  1483  007A39  39                 	db	57	;'9'
  1484  007A3A  39                 	db	57	;'9'
  1485  007A3B  39                 	db	57	;'9'
  1486  007A3C  39                 	db	57	;'9'
  1487  007A3D  39                 	db	57	;'9'
  1488  007A3E  39                 	db	57	;'9'
  1489  007A3F  39                 	db	57	;'9'
  1490  007A40  39                 	db	57	;'9'
  1491  007A41  00                 	db	0
  1492  007A42                     STR_96:
  1493  007A42  4D                 	db	77	;'M'
  1494  007A43  61                 	db	97	;'a'
  1495  007A44  63                 	db	99	;'c'
  1496  007A45  20                 	db	32
  1497  007A46  45                 	db	69	;'E'
  1498  007A47  72                 	db	114	;'r'
  1499  007A48  72                 	db	114	;'r'
  1500  007A49  6F                 	db	111	;'o'
  1501  007A4A  72                 	db	114	;'r'
  1502  007A4B  20                 	db	32
  1503  007A4C  4F                 	db	79	;'O'
  1504  007A4D  63                 	db	99	;'c'
  1505  007A4E  63                 	db	99	;'c'
  1506  007A4F  75                 	db	117	;'u'
  1507  007A50  72                 	db	114	;'r'
  1508  007A51  72                 	db	114	;'r'
  1509  007A52  65                 	db	101	;'e'
  1510  007A53  64                 	db	100	;'d'
  1511  007A54  00                 	db	0
  1512  007A55                     STR_83:
  1513  007A55  28                 	db	40
  1514  007A56  55                 	db	85	;'U'
  1515  007A57  4E                 	db	78	;'N'
  1516  007A58  43                 	db	67	;'C'
  1517  007A59  4E                 	db	78	;'N'
  1518  007A5A  46                 	db	70	;'F'
  1519  007A5B  29                 	db	41
  1520  007A5C  20                 	db	32
  1521  007A5D  20                 	db	32
  1522  007A5E  20                 	db	32
  1523  007A5F  20                 	db	32
  1524  007A60  28                 	db	40
  1525  007A61  43                 	db	67	;'C'
  1526  007A62  4E                 	db	78	;'N'
  1527  007A63  46                 	db	70	;'F'
  1528  007A64  29                 	db	41
  1529  007A65  20                 	db	32
  1530  007A66  00                 	db	0
  1531  007A67                     STR_40:
  1532  007A67  20                 	db	32
  1533  007A68  20                 	db	32
  1534  007A69  28                 	db	40
  1535  007A6A  53                 	db	83	;'S'
  1536  007A6B  32                 	db	50	;'2'
  1537  007A6C  29                 	db	41
  1538  007A6D  20                 	db	32
  1539  007A6E  20                 	db	32
  1540  007A6F  20                 	db	32
  1541  007A70  20                 	db	32
  1542  007A71  20                 	db	32
  1543  007A72  20                 	db	32
  1544  007A73  20                 	db	32
  1545  007A74  20                 	db	32
  1546  007A75  20                 	db	32
  1547  007A76  20                 	db	32
  1548  007A77  00                 	db	0
  1549  007A78                     STR_92:
  1550  007A78  20                 	db	32
  1551  007A79  20                 	db	32
  1552  007A7A  20                 	db	32
  1553  007A7B  20                 	db	32
  1554  007A7C  52                 	db	82	;'R'
  1555  007A7D  65                 	db	101	;'e'
  1556  007A7E  63                 	db	99	;'c'
  1557  007A7F  65                 	db	101	;'e'
  1558  007A80  69                 	db	105	;'i'
  1559  007A81  76                 	db	118	;'v'
  1560  007A82  65                 	db	101	;'e'
  1561  007A83  64                 	db	100	;'d'
  1562  007A84  20                 	db	32
  1563  007A85  20                 	db	32
  1564  007A86  20                 	db	32
  1565  007A87  20                 	db	32
  1566  007A88  00                 	db	0
  1567  007A89                     STR_42:
  1568  007A89  20                 	db	32
  1569  007A8A  20                 	db	32
  1570  007A8B  20                 	db	32
  1571  007A8C  20                 	db	32
  1572  007A8D  20                 	db	32
  1573  007A8E  20                 	db	32
  1574  007A8F  20                 	db	32
  1575  007A90  20                 	db	32
  1576  007A91  20                 	db	32
  1577  007A92  28                 	db	40
  1578  007A93  53                 	db	83	;'S'
  1579  007A94  33                 	db	51	;'3'
  1580  007A95  29                 	db	41
  1581  007A96  20                 	db	32
  1582  007A97  20                 	db	32
  1583  007A98  20                 	db	32
  1584  007A99  00                 	db	0
  1585  007A9A                     STR_34:
  1586  007A9A  20                 	db	32
  1587  007A9B  20                 	db	32
  1588  007A9C  28                 	db	40
  1589  007A9D  53                 	db	83	;'S'
  1590  007A9E  32                 	db	50	;'2'
  1591  007A9F  29                 	db	41
  1592  007AA0  20                 	db	32
  1593  007AA1  20                 	db	32
  1594  007AA2  20                 	db	32
  1595  007AA3  28                 	db	40
  1596  007AA4  53                 	db	83	;'S'
  1597  007AA5  33                 	db	51	;'3'
  1598  007AA6  29                 	db	41
  1599  007AA7  20                 	db	32
  1600  007AA8  20                 	db	32
  1601  007AA9  20                 	db	32
  1602  007AAA  00                 	db	0
  1603  007AAB                     STR_79:
  1604  007AAB  20                 	db	32
  1605  007AAC  20                 	db	32
  1606  007AAD  4C                 	db	76	;'L'
  1607  007AAE  61                 	db	97	;'a'
  1608  007AAF  73                 	db	115	;'s'
  1609  007AB0  74                 	db	116	;'t'
  1610  007AB1  20                 	db	32
  1611  007AB2  4D                 	db	77	;'M'
  1612  007AB3  65                 	db	101	;'e'
  1613  007AB4  73                 	db	115	;'s'
  1614  007AB5  73                 	db	115	;'s'
  1615  007AB6  61                 	db	97	;'a'
  1616  007AB7  67                 	db	103	;'g'
  1617  007AB8  65                 	db	101	;'e'
  1618  007AB9  20                 	db	32
  1619  007ABA  20                 	db	32
  1620  007ABB  00                 	db	0
  1621  007ABC                     STR_78:
  1622  007ABC  20                 	db	32
  1623  007ABD  56                 	db	86	;'V'
  1624  007ABE  69                 	db	105	;'i'
  1625  007ABF  65                 	db	101	;'e'
  1626  007AC0  77                 	db	119	;'w'
  1627  007AC1  20                 	db	32
  1628  007AC2  44                 	db	68	;'D'
  1629  007AC3  6F                 	db	111	;'o'
  1630  007AC4  77                 	db	119	;'w'
  1631  007AC5  6E                 	db	110	;'n'
  1632  007AC6  6C                 	db	108	;'l'
  1633  007AC7  69                 	db	105	;'i'
  1634  007AC8  6E                 	db	110	;'n'
  1635  007AC9  6B                 	db	107	;'k'
  1636  007ACA  20                 	db	32
  1637  007ACB  20                 	db	32
  1638  007ACC  00                 	db	0
  1639  007ACD                     STR_75:
  1640  007ACD  20                 	db	32
  1641  007ACE  20                 	db	32
  1642  007ACF  49                 	db	73	;'I'
  1643  007AD0  73                 	db	115	;'s'
  1644  007AD1  73                 	db	115	;'s'
  1645  007AD2  75                 	db	117	;'u'
  1646  007AD3  65                 	db	101	;'e'
  1647  007AD4  20                 	db	32
  1648  007AD5  55                 	db	85	;'U'
  1649  007AD6  70                 	db	112	;'p'
  1650  007AD7  6C                 	db	108	;'l'
  1651  007AD8  69                 	db	105	;'i'
  1652  007AD9  6E                 	db	110	;'n'
  1653  007ADA  6B                 	db	107	;'k'
  1654  007ADB  20                 	db	32
  1655  007ADC  20                 	db	32
  1656  007ADD  00                 	db	0
  1657  007ADE                     STR_29:
  1658  007ADE  20                 	db	32
  1659  007ADF  28                 	db	40
  1660  007AE0  53                 	db	83	;'S'
  1661  007AE1  32                 	db	50	;'2'
  1662  007AE2  29                 	db	41
  1663  007AE3  20                 	db	32
  1664  007AE4  20                 	db	32
  1665  007AE5  20                 	db	32
  1666  007AE6  20                 	db	32
  1667  007AE7  20                 	db	32
  1668  007AE8  20                 	db	32
  1669  007AE9  28                 	db	40
  1670  007AEA  53                 	db	83	;'S'
  1671  007AEB  33                 	db	51	;'3'
  1672  007AEC  29                 	db	41
  1673  007AED  20                 	db	32
  1674  007AEE  00                 	db	0
  1675  007AEF                     STR_32:
  1676  007AEF  20                 	db	32
  1677  007AF0  4A                 	db	74	;'J'
  1678  007AF1  6F                 	db	111	;'o'
  1679  007AF2  69                 	db	105	;'i'
  1680  007AF3  6E                 	db	110	;'n'
  1681  007AF4  69                 	db	105	;'i'
  1682  007AF5  6E                 	db	110	;'n'
  1683  007AF6  67                 	db	103	;'g'
  1684  007AF7  20                 	db	32
  1685  007AF8  4D                 	db	77	;'M'
  1686  007AF9  65                 	db	101	;'e'
  1687  007AFA  74                 	db	116	;'t'
  1688  007AFB  68                 	db	104	;'h'
  1689  007AFC  6F                 	db	111	;'o'
  1690  007AFD  64                 	db	100	;'d'
  1691  007AFE  20                 	db	32
  1692  007AFF  00                 	db	0
  1693  007B00                     STR_91:
  1694  007B00  53                 	db	83	;'S'
  1695  007B01  65                 	db	101	;'e'
  1696  007B02  72                 	db	114	;'r'
  1697  007B03  76                 	db	118	;'v'
  1698  007B04  65                 	db	101	;'e'
  1699  007B05  72                 	db	114	;'r'
  1700  007B06  20                 	db	32
  1701  007B07  52                 	db	82	;'R'
  1702  007B08  65                 	db	101	;'e'
  1703  007B09  73                 	db	115	;'s'
  1704  007B0A  70                 	db	112	;'p'
  1705  007B0B  6F                 	db	111	;'o'
  1706  007B0C  6E                 	db	110	;'n'
  1707  007B0D  73                 	db	115	;'s'
  1708  007B0E  65                 	db	101	;'e'
  1709  007B0F  20                 	db	32
  1710  007B10  00                 	db	0
  1711  007B11                     STR_120:
  1712  007B11  54                 	db	84	;'T'
  1713  007B12  78                 	db	120	;'x'
  1714  007B13  20                 	db	32
  1715  007B14  45                 	db	69	;'E'
  1716  007B15  76                 	db	118	;'v'
  1717  007B16  65                 	db	101	;'e'
  1718  007B17  6E                 	db	110	;'n'
  1719  007B18  74                 	db	116	;'t'
  1720  007B19  20                 	db	32
  1721  007B1A  54                 	db	84	;'T'
  1722  007B1B  69                 	db	105	;'i'
  1723  007B1C  6D                 	db	109	;'m'
  1724  007B1D  69                 	db	105	;'i'
  1725  007B1E  6E                 	db	110	;'n'
  1726  007B1F  67                 	db	103	;'g'
  1727  007B20  20                 	db	32
  1728  007B21  00                 	db	0
  1729  007B22                     STR_119:
  1730  007B22  50                 	db	80	;'P'
  1731  007B23  65                 	db	101	;'e'
  1732  007B24  72                 	db	114	;'r'
  1733  007B25  69                 	db	105	;'i'
  1734  007B26  6F                 	db	111	;'o'
  1735  007B27  64                 	db	100	;'d'
  1736  007B28  69                 	db	105	;'i'
  1737  007B29  63                 	db	99	;'c'
  1738  007B2A  20                 	db	32
  1739  007B2B  55                 	db	85	;'U'
  1740  007B2C  70                 	db	112	;'p'
  1741  007B2D  6C                 	db	108	;'l'
  1742  007B2E  69                 	db	105	;'i'
  1743  007B2F  6E                 	db	110	;'n'
  1744  007B30  6B                 	db	107	;'k'
  1745  007B31  20                 	db	32
  1746  007B32  00                 	db	0
  1747  007B33                     STR_76:
  1748  007B33  20                 	db	32
  1749  007B34  4C                 	db	76	;'L'
  1750  007B35  6F                 	db	111	;'o'
  1751  007B36  52                 	db	82	;'R'
  1752  007B37  61                 	db	97	;'a'
  1753  007B38  57                 	db	87	;'W'
  1754  007B39  41                 	db	65	;'A'
  1755  007B3A  4E                 	db	78	;'N'
  1756  007B3B  20                 	db	32
  1757  007B3C  50                 	db	80	;'P'
  1758  007B3D  61                 	db	97	;'a'
  1759  007B3E  63                 	db	99	;'c'
  1760  007B3F  6B                 	db	107	;'k'
  1761  007B40  65                 	db	101	;'e'
  1762  007B41  74                 	db	116	;'t'
  1763  007B42  20                 	db	32
  1764  007B43  00                 	db	0
  1765  007B44                     STR_166:
  1766  007B44  6D                 	db	109	;'m'
  1767  007B45  61                 	db	97	;'a'
  1768  007B46  63                 	db	99	;'c'
  1769  007B47  20                 	db	32
  1770  007B48  73                 	db	115	;'s'
  1771  007B49  65                 	db	101	;'e'
  1772  007B4A  74                 	db	116	;'t'
  1773  007B4B  20                 	db	32
  1774  007B4C  70                 	db	112	;'p'
  1775  007B4D  77                 	db	119	;'w'
  1776  007B4E  72                 	db	114	;'r'
  1777  007B4F  69                 	db	105	;'i'
  1778  007B50  64                 	db	100	;'d'
  1779  007B51  78                 	db	120	;'x'
  1780  007B52  20                 	db	32
  1781  007B53  31                 	db	49	;'1'
  1782  007B54  00                 	db	0
  1783  007B55                     STR_170:
  1784  007B55  6D                 	db	109	;'m'
  1785  007B56  61                 	db	97	;'a'
  1786  007B57  63                 	db	99	;'c'
  1787  007B58  20                 	db	32
  1788  007B59  73                 	db	115	;'s'
  1789  007B5A  65                 	db	101	;'e'
  1790  007B5B  74                 	db	116	;'t'
  1791  007B5C  20                 	db	32
  1792  007B5D  70                 	db	112	;'p'
  1793  007B5E  77                 	db	119	;'w'
  1794  007B5F  72                 	db	114	;'r'
  1795  007B60  69                 	db	105	;'i'
  1796  007B61  64                 	db	100	;'d'
  1797  007B62  78                 	db	120	;'x'
  1798  007B63  20                 	db	32
  1799  007B64  32                 	db	50	;'2'
  1800  007B65  00                 	db	0
  1801  007B66                     STR_172:
  1802  007B66  6D                 	db	109	;'m'
  1803  007B67  61                 	db	97	;'a'
  1804  007B68  63                 	db	99	;'c'
  1805  007B69  20                 	db	32
  1806  007B6A  73                 	db	115	;'s'
  1807  007B6B  65                 	db	101	;'e'
  1808  007B6C  74                 	db	116	;'t'
  1809  007B6D  20                 	db	32
  1810  007B6E  70                 	db	112	;'p'
  1811  007B6F  77                 	db	119	;'w'
  1812  007B70  72                 	db	114	;'r'
  1813  007B71  69                 	db	105	;'i'
  1814  007B72  64                 	db	100	;'d'
  1815  007B73  78                 	db	120	;'x'
  1816  007B74  20                 	db	32
  1817  007B75  33                 	db	51	;'3'
  1818  007B76  00                 	db	0
  1819  007B77                     STR_174:
  1820  007B77  6D                 	db	109	;'m'
  1821  007B78  61                 	db	97	;'a'
  1822  007B79  63                 	db	99	;'c'
  1823  007B7A  20                 	db	32
  1824  007B7B  73                 	db	115	;'s'
  1825  007B7C  65                 	db	101	;'e'
  1826  007B7D  74                 	db	116	;'t'
  1827  007B7E  20                 	db	32
  1828  007B7F  70                 	db	112	;'p'
  1829  007B80  77                 	db	119	;'w'
  1830  007B81  72                 	db	114	;'r'
  1831  007B82  69                 	db	105	;'i'
  1832  007B83  64                 	db	100	;'d'
  1833  007B84  78                 	db	120	;'x'
  1834  007B85  20                 	db	32
  1835  007B86  34                 	db	52	;'4'
  1836  007B87  00                 	db	0
  1837  007B88                     STR_164:
  1838  007B88  6D                 	db	109	;'m'
  1839  007B89  61                 	db	97	;'a'
  1840  007B8A  63                 	db	99	;'c'
  1841  007B8B  20                 	db	32
  1842  007B8C  73                 	db	115	;'s'
  1843  007B8D  65                 	db	101	;'e'
  1844  007B8E  74                 	db	116	;'t'
  1845  007B8F  20                 	db	32
  1846  007B90  70                 	db	112	;'p'
  1847  007B91  77                 	db	119	;'w'
  1848  007B92  72                 	db	114	;'r'
  1849  007B93  69                 	db	105	;'i'
  1850  007B94  64                 	db	100	;'d'
  1851  007B95  78                 	db	120	;'x'
  1852  007B96  20                 	db	32
  1853  007B97  35                 	db	53	;'5'
  1854  007B98  00                 	db	0
  1855  007B99                     STR_33:
  1856  007B99  3C                 	db	60	;'<'
  1857  007B9A  2D                 	db	45
  1858  007B9B  20                 	db	32
  1859  007B9C  41                 	db	65	;'A'
  1860  007B9D  42                 	db	66	;'B'
  1861  007B9E  50                 	db	80	;'P'
  1862  007B9F  20                 	db	32
  1863  007BA0  20                 	db	32
  1864  007BA1  20                 	db	32
  1865  007BA2  4F                 	db	79	;'O'
  1866  007BA3  54                 	db	84	;'T'
  1867  007BA4  41                 	db	65	;'A'
  1868  007BA5  41                 	db	65	;'A'
  1869  007BA6  20                 	db	32
  1870  007BA7  2D                 	db	45
  1871  007BA8  3E                 	db	62	;'>'
  1872  007BA9  00                 	db	0
  1873  007BAA                     STR_26:
  1874  007BAA  52                 	db	82	;'R'
  1875  007BAB  65                 	db	101	;'e'
  1876  007BAC  52                 	db	82	;'R'
  1877  007BAD  75                 	db	117	;'u'
  1878  007BAE  6E                 	db	110	;'n'
  1879  007BAF  20                 	db	32
  1880  007BB0  50                 	db	80	;'P'
  1881  007BB1  77                 	db	119	;'w'
  1882  007BB2  72                 	db	114	;'r'
  1883  007BB3  54                 	db	84	;'T'
  1884  007BB4  73                 	db	115	;'s'
  1885  007BB5  74                 	db	116	;'t'
  1886  007BB6  3C                 	db	60	;'<'
  1887  007BB7  53                 	db	83	;'S'
  1888  007BB8  32                 	db	50	;'2'
  1889  007BB9  3E                 	db	62	;'>'
  1890  007BBA  00                 	db	0
  1891  007BBB                     STR_94:
  1892  007BBB  44                 	db	68	;'D'
  1893  007BBC  61                 	db	97	;'a'
  1894  007BBD  74                 	db	116	;'t'
  1895  007BBE  61                 	db	97	;'a'
  1896  007BBF  20                 	db	32
  1897  007BC0  54                 	db	84	;'T'
  1898  007BC1  72                 	db	114	;'r'
  1899  007BC2  61                 	db	97	;'a'
  1900  007BC3  6E                 	db	110	;'n'
  1901  007BC4  73                 	db	115	;'s'
  1902  007BC5  6D                 	db	109	;'m'
  1903  007BC6  69                 	db	105	;'i'
  1904  007BC7  74                 	db	116	;'t'
  1905  007BC8  74                 	db	116	;'t'
  1906  007BC9  65                 	db	101	;'e'
  1907  007BCA  64                 	db	100	;'d'
  1908  007BCB  00                 	db	0
  1909  007BCC                     STR_151:
  1910  007BCC  45                 	db	69	;'E'
  1911  007BCD  6E                 	db	110	;'n'
  1912  007BCE  74                 	db	116	;'t'
  1913  007BCF  65                 	db	101	;'e'
  1914  007BD0  72                 	db	114	;'r'
  1915  007BD1  20                 	db	32
  1916  007BD2  53                 	db	83	;'S'
  1917  007BD3  6C                 	db	108	;'l'
  1918  007BD4  65                 	db	101	;'e'
  1919  007BD5  65                 	db	101	;'e'
  1920  007BD6  70                 	db	112	;'p'
  1921  007BD7  20                 	db	32
  1922  007BD8  4D                 	db	77	;'M'
  1923  007BD9  6F                 	db	111	;'o'
  1924  007BDA  64                 	db	100	;'d'
  1925  007BDB  65                 	db	101	;'e'
  1926  007BDC  00                 	db	0
  1927  007BDD                     STR_81:
  1928  007BDD  55                 	db	85	;'U'
  1929  007BDE  70                 	db	112	;'p'
  1930  007BDF  6C                 	db	108	;'l'
  1931  007BE0  69                 	db	105	;'i'
  1932  007BE1  6E                 	db	110	;'n'
  1933  007BE2  6B                 	db	107	;'k'
  1934  007BE3  20                 	db	32
  1935  007BE4  50                 	db	80	;'P'
  1936  007BE5  63                 	db	99	;'c'
  1937  007BE6  6B                 	db	107	;'k'
  1938  007BE7  74                 	db	116	;'t'
  1939  007BE8  20                 	db	32
  1940  007BE9  54                 	db	84	;'T'
  1941  007BEA  79                 	db	121	;'y'
  1942  007BEB  70                 	db	112	;'p'
  1943  007BEC  65                 	db	101	;'e'
  1944  007BED  00                 	db	0
  1945  007BEE                     STR_135:
  1946  007BEE  53                 	db	83	;'S'
  1947  007BEF  65                 	db	101	;'e'
  1948  007BF0  6C                 	db	108	;'l'
  1949  007BF1  65                 	db	101	;'e'
  1950  007BF2  63                 	db	99	;'c'
  1951  007BF3  74                 	db	116	;'t'
  1952  007BF4  20                 	db	32
  1953  007BF5  44                 	db	68	;'D'
  1954  007BF6  61                 	db	97	;'a'
  1955  007BF7  74                 	db	116	;'t'
  1956  007BF8  61                 	db	97	;'a'
  1957  007BF9  20                 	db	32
  1958  007BFA  52                 	db	82	;'R'
  1959  007BFB  61                 	db	97	;'a'
  1960  007BFC  74                 	db	116	;'t'
  1961  007BFD  65                 	db	101	;'e'
  1962  007BFE  00                 	db	0
  1963  007BFF                     STR_27:
  1964  007BFF  4D                 	db	77	;'M'
  1965  007C00  6F                 	db	111	;'o'
  1966  007C01  62                 	db	98	;'b'
  1967  007C02  69                 	db	105	;'i'
  1968  007C03  6C                 	db	108	;'l'
  1969  007C04  65                 	db	101	;'e'
  1970  007C05  20                 	db	32
  1971  007C06  4D                 	db	77	;'M'
  1972  007C07  6F                 	db	111	;'o'
  1973  007C08  74                 	db	116	;'t'
  1974  007C09  65                 	db	101	;'e'
  1975  007C0A  20                 	db	32
  1976  007C0B  2D                 	db	45
  1977  007C0C  41                 	db	65	;'A'
  1978  007C0D  70                 	db	112	;'p'
  1979  007C0E  70                 	db	112	;'p'
  1980  007C0F  00                 	db	0
  1981  007C10                     STR_28:
  1982  007C10  4E                 	db	78	;'N'
  1983  007C11  61                 	db	97	;'a'
  1984  007C12  76                 	db	118	;'v'
  1985  007C13  69                 	db	105	;'i'
  1986  007C14  67                 	db	103	;'g'
  1987  007C15  61                 	db	97	;'a'
  1988  007C16  74                 	db	116	;'t'
  1989  007C17  65                 	db	101	;'e'
  1990  007C18  20                 	db	32
  1991  007C19  20                 	db	32
  1992  007C1A  53                 	db	83	;'S'
  1993  007C1B  65                 	db	101	;'e'
  1994  007C1C  6C                 	db	108	;'l'
  1995  007C1D  65                 	db	101	;'e'
  1996  007C1E  63                 	db	99	;'c'
  1997  007C1F  74                 	db	116	;'t'
  1998  007C20  00                 	db	0
  1999  007C21                     STR_111:
  2000  007C21  4D                 	db	77	;'M'
  2001  007C22  65                 	db	101	;'e'
  2002  007C23  6E                 	db	110	;'n'
  2003  007C24  75                 	db	117	;'u'
  2004  007C25  20                 	db	32
  2005  007C26  48                 	db	72	;'H'
  2006  007C27  61                 	db	97	;'a'
  2007  007C28  73                 	db	115	;'s'
  2008  007C29  20                 	db	32
  2009  007C2A  54                 	db	84	;'T'
  2010  007C2B  69                 	db	105	;'i'
  2011  007C2C  6D                 	db	109	;'m'
  2012  007C2D  65                 	db	101	;'e'
  2013  007C2E  6F                 	db	111	;'o'
  2014  007C2F  75                 	db	117	;'u'
  2015  007C30  74                 	db	116	;'t'
  2016  007C31  00                 	db	0
  2017  007C32                     STR_71:
  2018  007C32  53                 	db	83	;'S'
  2019  007C33  65                 	db	101	;'e'
  2020  007C34  6E                 	db	110	;'n'
  2021  007C35  64                 	db	100	;'d'
  2022  007C36  20                 	db	32
  2023  007C37  50                 	db	80	;'P'
  2024  007C38  65                 	db	101	;'e'
  2025  007C39  72                 	db	114	;'r'
  2026  007C3A  69                 	db	105	;'i'
  2027  007C3B  6F                 	db	111	;'o'
  2028  007C3C  64                 	db	100	;'d'
  2029  007C3D  69                 	db	105	;'i'
  2030  007C3E  63                 	db	99	;'c'
  2031  007C3F  20                 	db	32
  2032  007C40  54                 	db	84	;'T'
  2033  007C41  78                 	db	120	;'x'
  2034  007C42  00                 	db	0
  2035  007C43                     STR_105:
  2036  007C43  44                 	db	68	;'D'
  2037  007C44  6F                 	db	111	;'o'
  2038  007C45  77                 	db	119	;'w'
  2039  007C46  6E                 	db	110	;'n'
  2040  007C47  6C                 	db	108	;'l'
  2041  007C48  69                 	db	105	;'i'
  2042  007C49  6E                 	db	110	;'n'
  2043  007C4A  6B                 	db	107	;'k'
  2044  007C4B  20                 	db	32
  2045  007C4C  44                 	db	68	;'D'
  2046  007C4D  69                 	db	105	;'i'
  2047  007C4E  73                 	db	115	;'s'
  2048  007C4F  70                 	db	112	;'p'
  2049  007C50  6C                 	db	108	;'l'
  2050  007C51  61                 	db	97	;'a'
  2051  007C52  79                 	db	121	;'y'
  2052  007C53  00                 	db	0
  2053  007C54                     STR_103:
  2054  007C54  20                 	db	32
  2055  007C55  20                 	db	32
  2056  007C56  20                 	db	32
  2057  007C57  20                 	db	32
  2058  007C58  44                 	db	68	;'D'
  2059  007C59  69                 	db	105	;'i'
  2060  007C5A  73                 	db	115	;'s'
  2061  007C5B  70                 	db	112	;'p'
  2062  007C5C  6C                 	db	108	;'l'
  2063  007C5D  61                 	db	97	;'a'
  2064  007C5E  79                 	db	121	;'y'
  2065  007C5F  20                 	db	32
  2066  007C60  20                 	db	32
  2067  007C61  20                 	db	32
  2068  007C62  20                 	db	32
  2069  007C63  00                 	db	0
  2070  007C64                     STR_102:
  2071  007C64  20                 	db	32
  2072  007C65  20                 	db	32
  2073  007C66  53                 	db	83	;'S'
  2074  007C67  65                 	db	101	;'e'
  2075  007C68  6E                 	db	110	;'n'
  2076  007C69  73                 	db	115	;'s'
  2077  007C6A  6F                 	db	111	;'o'
  2078  007C6B  72                 	db	114	;'r'
  2079  007C6C  20                 	db	32
  2080  007C6D  44                 	db	68	;'D'
  2081  007C6E  61                 	db	97	;'a'
  2082  007C6F  74                 	db	116	;'t'
  2083  007C70  61                 	db	97	;'a'
  2084  007C71  20                 	db	32
  2085  007C72  20                 	db	32
  2086  007C73  00                 	db	0
  2087  007C74                     STR_114:
  2088  007C74  28                 	db	40
  2089  007C75  4E                 	db	78	;'N'
  2090  007C76  41                 	db	65	;'A'
  2091  007C77  56                 	db	86	;'V'
  2092  007C78  29                 	db	41
  2093  007C79  20                 	db	32
  2094  007C7A  20                 	db	32
  2095  007C7B  20                 	db	32
  2096  007C7C  20                 	db	32
  2097  007C7D  28                 	db	40
  2098  007C7E  43                 	db	67	;'C'
  2099  007C7F  4E                 	db	78	;'N'
  2100  007C80  47                 	db	71	;'G'
  2101  007C81  29                 	db	41
  2102  007C82  20                 	db	32
  2103  007C83  00                 	db	0
  2104  007C84                     STR_77:
  2105  007C84  28                 	db	40
  2106  007C85  4E                 	db	78	;'N'
  2107  007C86  41                 	db	65	;'A'
  2108  007C87  56                 	db	86	;'V'
  2109  007C88  29                 	db	41
  2110  007C89  20                 	db	32
  2111  007C8A  20                 	db	32
  2112  007C8B  20                 	db	32
  2113  007C8C  20                 	db	32
  2114  007C8D  28                 	db	40
  2115  007C8E  53                 	db	83	;'S'
  2116  007C8F  45                 	db	69	;'E'
  2117  007C90  4C                 	db	76	;'L'
  2118  007C91  29                 	db	41
  2119  007C92  20                 	db	32
  2120  007C93  00                 	db	0
  2121  007C94                     STR_152:
  2122  007C94  28                 	db	40
  2123  007C95  4E                 	db	78	;'N'
  2124  007C96  41                 	db	65	;'A'
  2125  007C97  56                 	db	86	;'V'
  2126  007C98  29                 	db	41
  2127  007C99  20                 	db	32
  2128  007C9A  20                 	db	32
  2129  007C9B  20                 	db	32
  2130  007C9C  20                 	db	32
  2131  007C9D  28                 	db	40
  2132  007C9E  53                 	db	83	;'S'
  2133  007C9F  4C                 	db	76	;'L'
  2134  007CA0  50                 	db	80	;'P'
  2135  007CA1  29                 	db	41
  2136  007CA2  20                 	db	32
  2137  007CA3  00                 	db	0
  2138  007CA4                     STR_163:
  2139  007CA4  6D                 	db	109	;'m'
  2140  007CA5  61                 	db	97	;'a'
  2141  007CA6  63                 	db	99	;'c'
  2142  007CA7  20                 	db	32
  2143  007CA8  73                 	db	115	;'s'
  2144  007CA9  65                 	db	101	;'e'
  2145  007CAA  74                 	db	116	;'t'
  2146  007CAB  20                 	db	32
  2147  007CAC  61                 	db	97	;'a'
  2148  007CAD  64                 	db	100	;'d'
  2149  007CAE  72                 	db	114	;'r'
  2150  007CAF  20                 	db	32
  2151  007CB0  6F                 	db	111	;'o'
  2152  007CB1  66                 	db	102	;'f'
  2153  007CB2  66                 	db	102	;'f'
  2154  007CB3  00                 	db	0
  2155  007CB4                     STR_98:
  2156  007CB4  4E                 	db	78	;'N'
  2157  007CB5  6F                 	db	111	;'o'
  2158  007CB6  20                 	db	32
  2159  007CB7  46                 	db	70	;'F'
  2160  007CB8  72                 	db	114	;'r'
  2161  007CB9  65                 	db	101	;'e'
  2162  007CBA  65                 	db	101	;'e'
  2163  007CBB  20                 	db	32
  2164  007CBC  43                 	db	67	;'C'
  2165  007CBD  68                 	db	104	;'h'
  2166  007CBE  61                 	db	97	;'a'
  2167  007CBF  6E                 	db	110	;'n'
  2168  007CC0  6E                 	db	110	;'n'
  2169  007CC1  65                 	db	101	;'e'
  2170  007CC2  6C                 	db	108	;'l'
  2171  007CC3  00                 	db	0
  2172  007CC4                     STR_7:
  2173  007CC4  42                 	db	66	;'B'
  2174  007CC5  75                 	db	117	;'u'
  2175  007CC6  69                 	db	105	;'i'
  2176  007CC7  6C                 	db	108	;'l'
  2177  007CC8  64                 	db	100	;'d'
  2178  007CC9  20                 	db	32
  2179  007CCA  44                 	db	68	;'D'
  2180  007CCB  61                 	db	97	;'a'
  2181  007CCC  74                 	db	116	;'t'
  2182  007CCD  65                 	db	101	;'e'
  2183  007CCE  2F                 	db	47
  2184  007CCF  54                 	db	84	;'T'
  2185  007CD0  69                 	db	105	;'i'
  2186  007CD1  6D                 	db	109	;'m'
  2187  007CD2  65                 	db	101	;'e'
  2188  007CD3  00                 	db	0
  2189  007CD4                     STR_112:
  2190  007CD4  20                 	db	32
  2191  007CD5  20                 	db	32
  2192  007CD6  20                 	db	32
  2193  007CD7  20                 	db	32
  2194  007CD8  45                 	db	69	;'E'
  2195  007CD9  6E                 	db	110	;'n'
  2196  007CDA  61                 	db	97	;'a'
  2197  007CDB  62                 	db	98	;'b'
  2198  007CDC  6C                 	db	108	;'l'
  2199  007CDD  65                 	db	101	;'e'
  2200  007CDE  64                 	db	100	;'d'
  2201  007CDF  20                 	db	32
  2202  007CE0  20                 	db	32
  2203  007CE1  20                 	db	32
  2204  007CE2  00                 	db	0
  2205  007CE3                     STR_113:
  2206  007CE3  20                 	db	32
  2207  007CE4  20                 	db	32
  2208  007CE5  20                 	db	32
  2209  007CE6  20                 	db	32
  2210  007CE7  44                 	db	68	;'D'
  2211  007CE8  69                 	db	105	;'i'
  2212  007CE9  73                 	db	115	;'s'
  2213  007CEA  61                 	db	97	;'a'
  2214  007CEB  62                 	db	98	;'b'
  2215  007CEC  6C                 	db	108	;'l'
  2216  007CED  65                 	db	101	;'e'
  2217  007CEE  64                 	db	100	;'d'
  2218  007CEF  20                 	db	32
  2219  007CF0  20                 	db	32
  2220  007CF1  00                 	db	0
  2221  007CF2                     STR_179:
  2222  007CF2  6D                 	db	109	;'m'
  2223  007CF3  61                 	db	97	;'a'
  2224  007CF4  63                 	db	99	;'c'
  2225  007CF5  20                 	db	32
  2226  007CF6  73                 	db	115	;'s'
  2227  007CF7  65                 	db	101	;'e'
  2228  007CF8  74                 	db	116	;'t'
  2229  007CF9  20                 	db	32
  2230  007CFA  61                 	db	97	;'a'
  2231  007CFB  64                 	db	100	;'d'
  2232  007CFC  72                 	db	114	;'r'
  2233  007CFD  20                 	db	32
  2234  007CFE  6F                 	db	111	;'o'
  2235  007CFF  6E                 	db	110	;'n'
  2236  007D00  00                 	db	0
  2237  007D01                     STR_2:
  2238  007D01  20                 	db	32
  2239  007D02  20                 	db	32
  2240  007D03  20                 	db	32
  2241  007D04  4C                 	db	76	;'L'
  2242  007D05  6F                 	db	111	;'o'
  2243  007D06  52                 	db	82	;'R'
  2244  007D07  61                 	db	97	;'a'
  2245  007D08  20                 	db	32
  2246  007D09  44                 	db	68	;'D'
  2247  007D0A  65                 	db	101	;'e'
  2248  007D0B  6D                 	db	109	;'m'
  2249  007D0C  6F                 	db	111	;'o'
  2250  007D0D  20                 	db	32
  2251  007D0E  20                 	db	32
  2252  007D0F  00                 	db	0
  2253  007D10                     STR_3:
  2254  007D10  20                 	db	32
  2255  007D11  56                 	db	86	;'V'
  2256  007D12  20                 	db	32
  2257  007D13  31                 	db	49	;'1'
  2258  007D14  2E                 	db	46
  2259  007D15  30                 	db	48	;'0'
  2260  007D16  2E                 	db	46
  2261  007D17  31                 	db	49	;'1'
  2262  007D18  20                 	db	32
  2263  007D19  43                 	db	67	;'C'
  2264  007D1A  6F                 	db	111	;'o'
  2265  007D1B  64                 	db	100	;'d'
  2266  007D1C  65                 	db	101	;'e'
  2267  007D1D  20                 	db	32
  2268  007D1E  00                 	db	0
  2269  007D1F                     STR_1:
  2270  007D1F  4D                 	db	77	;'M'
  2271  007D20  69                 	db	105	;'i'
  2272  007D21  63                 	db	99	;'c'
  2273  007D22  72                 	db	114	;'r'
  2274  007D23  6F                 	db	111	;'o'
  2275  007D24  63                 	db	99	;'c'
  2276  007D25  68                 	db	104	;'h'
  2277  007D26  69                 	db	105	;'i'
  2278  007D27  70                 	db	112	;'p'
  2279  007D28  20                 	db	32
  2280  007D29  4D                 	db	77	;'M'
  2281  007D2A  6F                 	db	111	;'o'
  2282  007D2B  74                 	db	116	;'t'
  2283  007D2C  65                 	db	101	;'e'
  2284  007D2D  00                 	db	0
  2285  007D2E                     STR_74:
  2286  007D2E  6D                 	db	109	;'m'
  2287  007D2F  61                 	db	97	;'a'
  2288  007D30  63                 	db	99	;'c'
  2289  007D31  20                 	db	32
  2290  007D32  74                 	db	116	;'t'
  2291  007D33  78                 	db	120	;'x'
  2292  007D34  20                 	db	32
  2293  007D35  75                 	db	117	;'u'
  2294  007D36  6E                 	db	110	;'n'
  2295  007D37  63                 	db	99	;'c'
  2296  007D38  6E                 	db	110	;'n'
  2297  007D39  66                 	db	102	;'f'
  2298  007D3A  20                 	db	32
  2299  007D3B  00                 	db	0
  2300  007D3C                     STR_43:
  2301  007D3C  6D                 	db	109	;'m'
  2302  007D3D  61                 	db	97	;'a'
  2303  007D3E  63                 	db	99	;'c'
  2304  007D3F  20                 	db	32
  2305  007D40  6A                 	db	106	;'j'
  2306  007D41  6F                 	db	111	;'o'
  2307  007D42  69                 	db	105	;'i'
  2308  007D43  6E                 	db	110	;'n'
  2309  007D44  20                 	db	32
  2310  007D45  6F                 	db	111	;'o'
  2311  007D46  74                 	db	116	;'t'
  2312  007D47  61                 	db	97	;'a'
  2313  007D48  61                 	db	97	;'a'
  2314  007D49  00                 	db	0
  2315  007D4A                     STR_57:
  2316  007D4A  69                 	db	105	;'i'
  2317  007D4B  6E                 	db	110	;'n'
  2318  007D4C  76                 	db	118	;'v'
  2319  007D4D  61                 	db	97	;'a'
  2320  007D4E  6C                 	db	108	;'l'
  2321  007D4F  69                 	db	105	;'i'
  2322  007D50  64                 	db	100	;'d'
  2323  007D51  5F                 	db	95	;'_'
  2324  007D52  70                 	db	112	;'p'
  2325  007D53  61                 	db	97	;'a'
  2326  007D54  72                 	db	114	;'r'
  2327  007D55  61                 	db	97	;'a'
  2328  007D56  6D                 	db	109	;'m'
  2329  007D57  00                 	db	0
  2330  007D58                     STR_45:
  2331  007D58  6B                 	db	107	;'k'
  2332  007D59  65                 	db	101	;'e'
  2333  007D5A  79                 	db	121	;'y'
  2334  007D5B  73                 	db	115	;'s'
  2335  007D5C  5F                 	db	95	;'_'
  2336  007D5D  6E                 	db	110	;'n'
  2337  007D5E  6F                 	db	111	;'o'
  2338  007D5F  74                 	db	116	;'t'
  2339  007D60  5F                 	db	95	;'_'
  2340  007D61  69                 	db	105	;'i'
  2341  007D62  6E                 	db	110	;'n'
  2342  007D63  69                 	db	105	;'i'
  2343  007D64  74                 	db	116	;'t'
  2344  007D65  00                 	db	0
  2345  007D66                     STR_82:
  2346  007D66  54                 	db	84	;'T'
  2347  007D67  68                 	db	104	;'h'
  2348  007D68  72                 	db	114	;'r'
  2349  007D69  6F                 	db	111	;'o'
  2350  007D6A  75                 	db	117	;'u'
  2351  007D6B  20                 	db	32
  2352  007D6C  50                 	db	80	;'P'
  2353  007D6D  6F                 	db	111	;'o'
  2354  007D6E  72                 	db	114	;'r'
  2355  007D6F  74                 	db	116	;'t'
  2356  007D70  23                 	db	35
  2357  007D71  20                 	db	32
  2358  007D72  00                 	db	0
  2359  007D73                     STR_73:
  2360  007D73  4C                 	db	76	;'L'
  2361  007D74  3A                 	db	58	;':'
  2362  007D75  20                 	db	32
  2363  007D76  20                 	db	32
  2364  007D77  20                 	db	32
  2365  007D78  20                 	db	32
  2366  007D79  20                 	db	32
  2367  007D7A  20                 	db	32
  2368  007D7B  20                 	db	32
  2369  007D7C  54                 	db	84	;'T'
  2370  007D7D  3A                 	db	58	;':'
  2371  007D7E  20                 	db	32
  2372  007D7F  00                 	db	0
  2373  007D80                     STR_165:
  2374  007D80  6D                 	db	109	;'m'
  2375  007D81  61                 	db	97	;'a'
  2376  007D82  63                 	db	99	;'c'
  2377  007D83  20                 	db	32
  2378  007D84  73                 	db	115	;'s'
  2379  007D85  65                 	db	101	;'e'
  2380  007D86  74                 	db	116	;'t'
  2381  007D87  20                 	db	32
  2382  007D88  64                 	db	100	;'d'
  2383  007D89  72                 	db	114	;'r'
  2384  007D8A  20                 	db	32
  2385  007D8B  30                 	db	48	;'0'
  2386  007D8C  00                 	db	0
  2387  007D8D                     STR_167:
  2388  007D8D  6D                 	db	109	;'m'
  2389  007D8E  61                 	db	97	;'a'
  2390  007D8F  63                 	db	99	;'c'
  2391  007D90  20                 	db	32
  2392  007D91  73                 	db	115	;'s'
  2393  007D92  65                 	db	101	;'e'
  2394  007D93  74                 	db	116	;'t'
  2395  007D94  20                 	db	32
  2396  007D95  64                 	db	100	;'d'
  2397  007D96  72                 	db	114	;'r'
  2398  007D97  20                 	db	32
  2399  007D98  31                 	db	49	;'1'
  2400  007D99  00                 	db	0
  2401  007D9A                     STR_169:
  2402  007D9A  6D                 	db	109	;'m'
  2403  007D9B  61                 	db	97	;'a'
  2404  007D9C  63                 	db	99	;'c'
  2405  007D9D  20                 	db	32
  2406  007D9E  73                 	db	115	;'s'
  2407  007D9F  65                 	db	101	;'e'
  2408  007DA0  74                 	db	116	;'t'
  2409  007DA1  20                 	db	32
  2410  007DA2  64                 	db	100	;'d'
  2411  007DA3  72                 	db	114	;'r'
  2412  007DA4  20                 	db	32
  2413  007DA5  32                 	db	50	;'2'
  2414  007DA6  00                 	db	0
  2415  007DA7                     STR_171:
  2416  007DA7  6D                 	db	109	;'m'
  2417  007DA8  61                 	db	97	;'a'
  2418  007DA9  63                 	db	99	;'c'
  2419  007DAA  20                 	db	32
  2420  007DAB  73                 	db	115	;'s'
  2421  007DAC  65                 	db	101	;'e'
  2422  007DAD  74                 	db	116	;'t'
  2423  007DAE  20                 	db	32
  2424  007DAF  64                 	db	100	;'d'
  2425  007DB0  72                 	db	114	;'r'
  2426  007DB1  20                 	db	32
  2427  007DB2  33                 	db	51	;'3'
  2428  007DB3  00                 	db	0
  2429  007DB4                     STR_173:
  2430  007DB4  6D                 	db	109	;'m'
  2431  007DB5  61                 	db	97	;'a'
  2432  007DB6  63                 	db	99	;'c'
  2433  007DB7  20                 	db	32
  2434  007DB8  73                 	db	115	;'s'
  2435  007DB9  65                 	db	101	;'e'
  2436  007DBA  74                 	db	116	;'t'
  2437  007DBB  20                 	db	32
  2438  007DBC  64                 	db	100	;'d'
  2439  007DBD  72                 	db	114	;'r'
  2440  007DBE  20                 	db	32
  2441  007DBF  34                 	db	52	;'4'
  2442  007DC0  00                 	db	0
  2443  007DC1                     STR_175:
  2444  007DC1  6D                 	db	109	;'m'
  2445  007DC2  61                 	db	97	;'a'
  2446  007DC3  63                 	db	99	;'c'
  2447  007DC4  20                 	db	32
  2448  007DC5  73                 	db	115	;'s'
  2449  007DC6  65                 	db	101	;'e'
  2450  007DC7  74                 	db	116	;'t'
  2451  007DC8  20                 	db	32
  2452  007DC9  64                 	db	100	;'d'
  2453  007DCA  72                 	db	114	;'r'
  2454  007DCB  20                 	db	32
  2455  007DCC  35                 	db	53	;'5'
  2456  007DCD  00                 	db	0
  2457  007DCE                     STR_177:
  2458  007DCE  6D                 	db	109	;'m'
  2459  007DCF  61                 	db	97	;'a'
  2460  007DD0  63                 	db	99	;'c'
  2461  007DD1  20                 	db	32
  2462  007DD2  73                 	db	115	;'s'
  2463  007DD3  65                 	db	101	;'e'
  2464  007DD4  74                 	db	116	;'t'
  2465  007DD5  20                 	db	32
  2466  007DD6  64                 	db	100	;'d'
  2467  007DD7  72                 	db	114	;'r'
  2468  007DD8  20                 	db	32
  2469  007DD9  36                 	db	54	;'6'
  2470  007DDA  00                 	db	0
  2471  007DDB                     STR_178:
  2472  007DDB  6D                 	db	109	;'m'
  2473  007DDC  61                 	db	97	;'a'
  2474  007DDD  63                 	db	99	;'c'
  2475  007DDE  20                 	db	32
  2476  007DDF  73                 	db	115	;'s'
  2477  007DE0  65                 	db	101	;'e'
  2478  007DE1  74                 	db	116	;'t'
  2479  007DE2  20                 	db	32
  2480  007DE3  64                 	db	100	;'d'
  2481  007DE4  72                 	db	114	;'r'
  2482  007DE5  20                 	db	32
  2483  007DE6  37                 	db	55	;'7'
  2484  007DE7  00                 	db	0
  2485  007DE8                     STR_41:
  2486  007DE8  6D                 	db	109	;'m'
  2487  007DE9  61                 	db	97	;'a'
  2488  007DEA  63                 	db	99	;'c'
  2489  007DEB  20                 	db	32
  2490  007DEC  6A                 	db	106	;'j'
  2491  007DED  6F                 	db	111	;'o'
  2492  007DEE  69                 	db	105	;'i'
  2493  007DEF  6E                 	db	110	;'n'
  2494  007DF0  20                 	db	32
  2495  007DF1  61                 	db	97	;'a'
  2496  007DF2  62                 	db	98	;'b'
  2497  007DF3  70                 	db	112	;'p'
  2498  007DF4  00                 	db	0
  2499  007DF5                     STR_10:
  2500  007DF5  42                 	db	66	;'B'
  2501  007DF6  75                 	db	117	;'u'
  2502  007DF7  74                 	db	116	;'t'
  2503  007DF8  74                 	db	116	;'t'
  2504  007DF9  6F                 	db	111	;'o'
  2505  007DFA  6E                 	db	110	;'n'
  2506  007DFB  20                 	db	32
  2507  007DFC  54                 	db	84	;'T'
  2508  007DFD  65                 	db	101	;'e'
  2509  007DFE  73                 	db	115	;'s'
  2510  007DFF  74                 	db	116	;'t'
  2511  007E00  3A                 	db	58	;':'
  2512  007E01  00                 	db	0
  2513  007E02                     STR_13:
  2514  007E02  42                 	db	66	;'B'
  2515  007E03  75                 	db	117	;'u'
  2516  007E04  74                 	db	116	;'t'
  2517  007E05  74                 	db	116	;'t'
  2518  007E06  6F                 	db	111	;'o'
  2519  007E07  6E                 	db	110	;'n'
  2520  007E08  31                 	db	49	;'1'
  2521  007E09  20                 	db	32
  2522  007E0A  50                 	db	80	;'P'
  2523  007E0B  41                 	db	65	;'A'
  2524  007E0C  53                 	db	83	;'S'
  2525  007E0D  53                 	db	83	;'S'
  2526  007E0E  00                 	db	0
  2527  007E0F                     STR_14:
  2528  007E0F  42                 	db	66	;'B'
  2529  007E10  75                 	db	117	;'u'
  2530  007E11  74                 	db	116	;'t'
  2531  007E12  74                 	db	116	;'t'
  2532  007E13  6F                 	db	111	;'o'
  2533  007E14  6E                 	db	110	;'n'
  2534  007E15  32                 	db	50	;'2'
  2535  007E16  20                 	db	32
  2536  007E17  50                 	db	80	;'P'
  2537  007E18  41                 	db	65	;'A'
  2538  007E19  53                 	db	83	;'S'
  2539  007E1A  53                 	db	83	;'S'
  2540  007E1B  00                 	db	0
  2541  007E1C                     STR_12:
  2542  007E1C  50                 	db	80	;'P'
  2543  007E1D  72                 	db	114	;'r'
  2544  007E1E  65                 	db	101	;'e'
  2545  007E1F  73                 	db	115	;'s'
  2546  007E20  73                 	db	115	;'s'
  2547  007E21  20                 	db	32
  2548  007E22  42                 	db	66	;'B'
  2549  007E23  75                 	db	117	;'u'
  2550  007E24  74                 	db	116	;'t'
  2551  007E25  74                 	db	116	;'t'
  2552  007E26  6F                 	db	111	;'o'
  2553  007E27  6E                 	db	110	;'n'
  2554  007E28  00                 	db	0
  2555  007E29                     STR_196:
  2556  007E29  55                 	db	85	;'U'
  2557  007E2A  53                 	db	83	;'S'
  2558  007E2B  42                 	db	66	;'B'
  2559  007E2C  20                 	db	32
  2560  007E2D  48                 	db	72	;'H'
  2561  007E2E  61                 	db	97	;'a'
  2562  007E2F  6E                 	db	110	;'n'
  2563  007E30  64                 	db	100	;'d'
  2564  007E31  6C                 	db	108	;'l'
  2565  007E32  65                 	db	101	;'e'
  2566  007E33  72                 	db	114	;'r'
  2567  007E34  00                 	db	0
  2568  007E35                     STR_72:
  2569  007E35  4F                 	db	79	;'O'
  2570  007E36  6E                 	db	110	;'n'
  2571  007E37  20                 	db	32
  2572  007E38  50                 	db	80	;'P'
  2573  007E39  6F                 	db	111	;'o'
  2574  007E3A  72                 	db	114	;'r'
  2575  007E3B  74                 	db	116	;'t'
  2576  007E3C  20                 	db	32
  2577  007E3D  23                 	db	35
  2578  007E3E  3A                 	db	58	;':'
  2579  007E3F  20                 	db	32
  2580  007E40  00                 	db	0
  2581  007E41                     STR_87:
  2582  007E41  54                 	db	84	;'T'
  2583  007E42  78                 	db	120	;'x'
  2584  007E43  20                 	db	32
  2585  007E44  50                 	db	80	;'P'
  2586  007E45  6F                 	db	111	;'o'
  2587  007E46  72                 	db	114	;'r'
  2588  007E47  74                 	db	116	;'t'
  2589  007E48  20                 	db	32
  2590  007E49  23                 	db	35
  2591  007E4A  3A                 	db	58	;':'
  2592  007E4B  20                 	db	32
  2593  007E4C  00                 	db	0
  2594  007E4D                     STR_86:
  2595  007E4D  53                 	db	83	;'S'
  2596  007E4E  65                 	db	101	;'e'
  2597  007E4F  6E                 	db	110	;'n'
  2598  007E50  74                 	db	116	;'t'
  2599  007E51  20                 	db	32
  2600  007E52  44                 	db	68	;'D'
  2601  007E53  61                 	db	97	;'a'
  2602  007E54  74                 	db	116	;'t'
  2603  007E55  61                 	db	97	;'a'
  2604  007E56  3A                 	db	58	;':'
  2605  007E57  20                 	db	32
  2606  007E58  00                 	db	0
  2607  007E59                     STR_136:
  2608  007E59  44                 	db	68	;'D'
  2609  007E5A  61                 	db	97	;'a'
  2610  007E5B  74                 	db	116	;'t'
  2611  007E5C  61                 	db	97	;'a'
  2612  007E5D  20                 	db	32
  2613  007E5E  52                 	db	82	;'R'
  2614  007E5F  61                 	db	97	;'a'
  2615  007E60  74                 	db	116	;'t'
  2616  007E61  65                 	db	101	;'e'
  2617  007E62  3A                 	db	58	;':'
  2618  007E63  20                 	db	32
  2619  007E64  00                 	db	0
  2620  007E65                     STR_85:
  2621  007E65  6D                 	db	109	;'m'
  2622  007E66  61                 	db	97	;'a'
  2623  007E67  63                 	db	99	;'c'
  2624  007E68  20                 	db	32
  2625  007E69  74                 	db	116	;'t'
  2626  007E6A  78                 	db	120	;'x'
  2627  007E6B  20                 	db	32
  2628  007E6C  63                 	db	99	;'c'
  2629  007E6D  6E                 	db	110	;'n'
  2630  007E6E  66                 	db	102	;'f'
  2631  007E6F  20                 	db	32
  2632  007E70  00                 	db	0
  2633  007E71                     STR_8:
  2634  007E71  44                 	db	68	;'D'
  2635  007E72  65                 	db	101	;'e'
  2636  007E73  63                 	db	99	;'c'
  2637  007E74  20                 	db	32
  2638  007E75  31                 	db	49	;'1'
  2639  007E76  35                 	db	53	;'5'
  2640  007E77  20                 	db	32
  2641  007E78  32                 	db	50	;'2'
  2642  007E79  30                 	db	48	;'0'
  2643  007E7A  31                 	db	49	;'1'
  2644  007E7B  36                 	db	54	;'6'
  2645  007E7C  00                 	db	0
  2646  007E7D                     STR_11:
  2647  007E7D  42                 	db	66	;'B'
  2648  007E7E  75                 	db	117	;'u'
  2649  007E7F  74                 	db	116	;'t'
  2650  007E80  74                 	db	116	;'t'
  2651  007E81  6F                 	db	111	;'o'
  2652  007E82  6E                 	db	110	;'n'
  2653  007E83  20                 	db	32
  2654  007E84  46                 	db	70	;'F'
  2655  007E85  41                 	db	65	;'A'
  2656  007E86  49                 	db	73	;'I'
  2657  007E87  4C                 	db	76	;'L'
  2658  007E88  00                 	db	0
  2659  007E89                     STR_61:
  2660  007E89  4F                 	db	79	;'O'
  2661  007E8A  54                 	db	84	;'T'
  2662  007E8B  41                 	db	65	;'A'
  2663  007E8C  41                 	db	65	;'A'
  2664  007E8D  20                 	db	32
  2665  007E8E  4A                 	db	74	;'J'
  2666  007E8F  6F                 	db	111	;'o'
  2667  007E90  69                 	db	105	;'i'
  2668  007E91  6E                 	db	110	;'n'
  2669  007E92  20                 	db	32
  2670  007E93  00                 	db	0
  2671  007E94                     STR_59:
  2672  007E94  6E                 	db	110	;'n'
  2673  007E95  6F                 	db	111	;'o'
  2674  007E96  5F                 	db	95	;'_'
  2675  007E97  66                 	db	102	;'f'
  2676  007E98  72                 	db	114	;'r'
  2677  007E99  65                 	db	101	;'e'
  2678  007E9A  65                 	db	101	;'e'
  2679  007E9B  5F                 	db	95	;'_'
  2680  007E9C  63                 	db	99	;'c'
  2681  007E9D  68                 	db	104	;'h'
  2682  007E9E  00                 	db	0
  2683  007E9F                     STR_51:
  2684  007E9F  53                 	db	83	;'S'
  2685  007EA0  75                 	db	117	;'u'
  2686  007EA1  63                 	db	99	;'c'
  2687  007EA2  63                 	db	99	;'c'
  2688  007EA3  65                 	db	101	;'e'
  2689  007EA4  73                 	db	115	;'s'
  2690  007EA5  73                 	db	115	;'s'
  2691  007EA6  66                 	db	102	;'f'
  2692  007EA7  75                 	db	117	;'u'
  2693  007EA8  6C                 	db	108	;'l'
  2694  007EA9  00                 	db	0
  2695  007EAA                     STR_68:
  2696  007EAA  6D                 	db	109	;'m'
  2697  007EAB  61                 	db	97	;'a'
  2698  007EAC  63                 	db	99	;'c'
  2699  007EAD  20                 	db	32
  2700  007EAE  67                 	db	103	;'g'
  2701  007EAF  65                 	db	101	;'e'
  2702  007EB0  74                 	db	116	;'t'
  2703  007EB1  20                 	db	32
  2704  007EB2  64                 	db	100	;'d'
  2705  007EB3  72                 	db	114	;'r'
  2706  007EB4  00                 	db	0
  2707  007EB5                     STR_46:
  2708  007EB5  56                 	db	86	;'V'
  2709  007EB6  61                 	db	97	;'a'
  2710  007EB7  6C                 	db	108	;'l'
  2711  007EB8  69                 	db	105	;'i'
  2712  007EB9  64                 	db	100	;'d'
  2713  007EBA  20                 	db	32
  2714  007EBB  4B                 	db	75	;'K'
  2715  007EBC  65                 	db	101	;'e'
  2716  007EBD  79                 	db	121	;'y'
  2717  007EBE  73                 	db	115	;'s'
  2718  007EBF  00                 	db	0
  2719  007EC0                     STR_15:
  2720  007EC0  43                 	db	67	;'C'
  2721  007EC1  6F                 	db	111	;'o'
  2722  007EC2  6D                 	db	109	;'m'
  2723  007EC3  6D                 	db	109	;'m'
  2724  007EC4  20                 	db	32
  2725  007EC5  54                 	db	84	;'T'
  2726  007EC6  65                 	db	101	;'e'
  2727  007EC7  73                 	db	115	;'s'
  2728  007EC8  74                 	db	116	;'t'
  2729  007EC9  3A                 	db	58	;':'
  2730  007ECA  00                 	db	0
  2731  007ECB                     STR_106:
  2732  007ECB  52                 	db	82	;'R'
  2733  007ECC  78                 	db	120	;'x'
  2734  007ECD  20                 	db	32
  2735  007ECE  50                 	db	80	;'P'
  2736  007ECF  6F                 	db	111	;'o'
  2737  007ED0  72                 	db	114	;'r'
  2738  007ED1  74                 	db	116	;'t'
  2739  007ED2  23                 	db	35
  2740  007ED3  20                 	db	32
  2741  007ED4  00                 	db	0
  2742  007ED5                     STR_50:
  2743  007ED5  41                 	db	65	;'A'
  2744  007ED6  42                 	db	66	;'B'
  2745  007ED7  50                 	db	80	;'P'
  2746  007ED8  20                 	db	32
  2747  007ED9  4A                 	db	74	;'J'
  2748  007EDA  6F                 	db	111	;'o'
  2749  007EDB  69                 	db	105	;'i'
  2750  007EDC  6E                 	db	110	;'n'
  2751  007EDD  20                 	db	32
  2752  007EDE  00                 	db	0
  2753  007EDF                     STR_24:
  2754  007EDF  4D                 	db	77	;'M'
  2755  007EE0  4F                 	db	79	;'O'
  2756  007EE1  54                 	db	84	;'T'
  2757  007EE2  45                 	db	69	;'E'
  2758  007EE3  20                 	db	32
  2759  007EE4  4D                 	db	77	;'M'
  2760  007EE5  6F                 	db	111	;'o'
  2761  007EE6  64                 	db	100	;'d'
  2762  007EE7  65                 	db	101	;'e'
  2763  007EE8  00                 	db	0
  2764  007EE9                     STR_64:
  2765  007EE9  4F                 	db	79	;'O'
  2766  007EEA  54                 	db	84	;'T'
  2767  007EEB  41                 	db	65	;'A'
  2768  007EEC  41                 	db	65	;'A'
  2769  007EED  20                 	db	32
  2770  007EEE  4A                 	db	74	;'J'
  2771  007EEF  6F                 	db	111	;'o'
  2772  007EF0  69                 	db	105	;'i'
  2773  007EF1  6E                 	db	110	;'n'
  2774  007EF2  00                 	db	0
  2775  007EF3                     STR_52:
  2776  007EF3  6D                 	db	109	;'m'
  2777  007EF4  61                 	db	97	;'a'
  2778  007EF5  63                 	db	99	;'c'
  2779  007EF6  20                 	db	32
  2780  007EF7  72                 	db	114	;'r'
  2781  007EF8  65                 	db	101	;'e'
  2782  007EF9  73                 	db	115	;'s'
  2783  007EFA  65                 	db	101	;'e'
  2784  007EFB  74                 	db	116	;'t'
  2785  007EFC  00                 	db	0
  2786  007EFD                     STR_30:
  2787  007EFD  73                 	db	115	;'s'
  2788  007EFE  79                 	db	121	;'y'
  2789  007EFF  73                 	db	115	;'s'
  2790  007F00  20                 	db	32
  2791  007F01  72                 	db	114	;'r'
  2792  007F02  65                 	db	101	;'e'
  2793  007F03  73                 	db	115	;'s'
  2794  007F04  65                 	db	101	;'e'
  2795  007F05  74                 	db	116	;'t'
  2796  007F06  00                 	db	0
  2797  007F07                     STR_16:
  2798  007F07  4C                 	db	76	;'L'
  2799  007F08  45                 	db	69	;'E'
  2800  007F09  44                 	db	68	;'D'
  2801  007F0A  20                 	db	32
  2802  007F0B  54                 	db	84	;'T'
  2803  007F0C  65                 	db	101	;'e'
  2804  007F0D  73                 	db	115	;'s'
  2805  007F0E  74                 	db	116	;'t'
  2806  007F0F  3A                 	db	58	;':'
  2807  007F10  00                 	db	0
  2808  007F11                     STR_194:
  2809  007F11  43                 	db	67	;'C'
  2810  007F12  44                 	db	68	;'D'
  2811  007F13  43                 	db	67	;'C'
  2812  007F14  20                 	db	32
  2813  007F15  4D                 	db	77	;'M'
  2814  007F16  6F                 	db	111	;'o'
  2815  007F17  64                 	db	100	;'d'
  2816  007F18  65                 	db	101	;'e'
  2817  007F19  00                 	db	0
  2818  007F1A                     STR_47:
  2819  007F1A  52                 	db	82	;'R'
  2820  007F1B  65                 	db	101	;'e'
  2821  007F1C  71                 	db	113	;'q'
  2822  007F1D  75                 	db	117	;'u'
  2823  007F1E  69                 	db	105	;'i'
  2824  007F1F  72                 	db	114	;'r'
  2825  007F20  65                 	db	101	;'e'
  2826  007F21  64                 	db	100	;'d'
  2827  007F22  00                 	db	0
  2828  007F23                     STR_49:
  2829  007F23  61                 	db	97	;'a'
  2830  007F24  63                 	db	99	;'c'
  2831  007F25  63                 	db	99	;'c'
  2832  007F26  65                 	db	101	;'e'
  2833  007F27  70                 	db	112	;'p'
  2834  007F28  74                 	db	116	;'t'
  2835  007F29  65                 	db	101	;'e'
  2836  007F2A  64                 	db	100	;'d'
  2837  007F2B  00                 	db	0
  2838  007F2C                     STR_180:
  2839  007F2C  6D                 	db	109	;'m'
  2840  007F2D  61                 	db	97	;'a'
  2841  007F2E  63                 	db	99	;'c'
  2842  007F2F  20                 	db	32
  2843  007F30  73                 	db	115	;'s'
  2844  007F31  61                 	db	97	;'a'
  2845  007F32  76                 	db	118	;'v'
  2846  007F33  65                 	db	101	;'e'
  2847  007F34  00                 	db	0
  2848  007F35                     STR_25:
  2849  007F35  53                 	db	83	;'S'
  2850  007F36  74                 	db	116	;'t'
  2851  007F37  61                 	db	97	;'a'
  2852  007F38  72                 	db	114	;'r'
  2853  007F39  74                 	db	116	;'t'
  2854  007F3A  69                 	db	105	;'i'
  2855  007F3B  6E                 	db	110	;'n'
  2856  007F3C  67                 	db	103	;'g'
  2857  007F3D  00                 	db	0
  2858  007F3E                     STR_4:
  2859  007F3E  4D                 	db	77	;'M'
  2860  007F3F  6F                 	db	111	;'o'
  2861  007F40  54                 	db	84	;'T'
  2862  007F41  65                 	db	101	;'e'
  2863  007F42  20                 	db	32
  2864  007F43  76                 	db	118	;'v'
  2865  007F44  20                 	db	32
  2866  007F45  2E                 	db	46
  2867  007F46  00                 	db	0
  2868  007F47                     STR_9:
  2869  007F47  31                 	db	49	;'1'
  2870  007F48  31                 	db	49	;'1'
  2871  007F49  3A                 	db	58	;':'
  2872  007F4A  34                 	db	52	;'4'
  2873  007F4B  34                 	db	52	;'4'
  2874  007F4C  3A                 	db	58	;':'
  2875  007F4D  33                 	db	51	;'3'
  2876  007F4E  31                 	db	49	;'1'
  2877  007F4F  00                 	db	0
  2878  007F50  52                 	db	82	;'R'
  2879  007F51  46                 	db	70	;'F'
  2880  007F52  20                 	db	32
  2881  007F53  54                 	db	84	;'T'
  2882  007F54  65                 	db	101	;'e'
  2883  007F55  73                 	db	115	;'s'
  2884  007F56  74                 	db	116	;'t'
  2885  007F57  3A                 	db	58	;':'
  2886  007F58  00                 	db	0
  2887  007F59                     STR_17:
  2888  007F59  41                 	db	65	;'A'
  2889  007F5A  44                 	db	68	;'D'
  2890  007F5B  43                 	db	67	;'C'
  2891  007F5C  20                 	db	32
  2892  007F5D  54                 	db	84	;'T'
  2893  007F5E  65                 	db	101	;'e'
  2894  007F5F  73                 	db	115	;'s'
  2895  007F60  74                 	db	116	;'t'
  2896  007F61  00                 	db	0
  2897  007F62                     STR_195:
  2898  007F62  43                 	db	67	;'C'
  2899  007F63  6F                 	db	111	;'o'
  2900  007F64  6D                 	db	109	;'m'
  2901  007F65  6D                 	db	109	;'m'
  2902  007F66  61                 	db	97	;'a'
  2903  007F67  6E                 	db	110	;'n'
  2904  007F68  64                 	db	100	;'d'
  2905  007F69  00                 	db	0
  2906  007F6A                     STR_18:
  2907  007F6A  54                 	db	84	;'T'
  2908  007F6B  65                 	db	101	;'e'
  2909  007F6C  6D                 	db	109	;'m'
  2910  007F6D  70                 	db	112	;'p'
  2911  007F6E  20                 	db	32
  2912  007F6F  20                 	db	32
  2913  007F70  3D                 	db	61	;'='
  2914  007F71  00                 	db	0
  2915  007F72                     STR_19:
  2916  007F72  4C                 	db	76	;'L'
  2917  007F73  69                 	db	105	;'i'
  2918  007F74  67                 	db	103	;'g'
  2919  007F75  68                 	db	104	;'h'
  2920  007F76  74                 	db	116	;'t'
  2921  007F77  20                 	db	32
  2922  007F78  3D                 	db	61	;'='
  2923  007F79  00                 	db	0
  2924  007F7A                     STR_117:
  2925  007F7A  54                 	db	84	;'T'
  2926  007F7B  65                 	db	101	;'e'
  2927  007F7C  6D                 	db	109	;'m'
  2928  007F7D  70                 	db	112	;'p'
  2929  007F7E  20                 	db	32
  2930  007F7F  3A                 	db	58	;':'
  2931  007F80  00                 	db	0
  2932  007F81                     STR_116:
  2933  007F81  4C                 	db	76	;'L'
  2934  007F82  69                 	db	105	;'i'
  2935  007F83  67                 	db	103	;'g'
  2936  007F84  68                 	db	104	;'h'
  2937  007F85  74                 	db	116	;'t'
  2938  007F86  3A                 	db	58	;':'
  2939  007F87  00                 	db	0
  2940  007F88                     STR_121:
  2941  007F88  45                 	db	69	;'E'
  2942  007F89  76                 	db	118	;'v'
  2943  007F8A  65                 	db	101	;'e'
  2944  007F8B  72                 	db	114	;'r'
  2945  007F8C  79                 	db	121	;'y'
  2946  007F8D  3A                 	db	58	;':'
  2947  007F8E  00                 	db	0
  2948  007F8F                     STR_65:
  2949  007F8F  44                 	db	68	;'D'
  2950  007F90  65                 	db	101	;'e'
  2951  007F91  6E                 	db	110	;'n'
  2952  007F92  69                 	db	105	;'i'
  2953  007F93  65                 	db	101	;'e'
  2954  007F94  64                 	db	100	;'d'
  2955  007F95  00                 	db	0
  2956  007F96                     STR_63:
  2957  007F96  64                 	db	100	;'d'
  2958  007F97  65                 	db	101	;'e'
  2959  007F98  6E                 	db	110	;'n'
  2960  007F99  69                 	db	105	;'i'
  2961  007F9A  65                 	db	101	;'e'
  2962  007F9B  64                 	db	100	;'d'
  2963  007F9C  00                 	db	0
  2964  007F9D                     STR_97:
  2965  007F9D  6E                 	db	110	;'n'
  2966  007F9E  6F                 	db	111	;'o'
  2967  007F9F  5F                 	db	95	;'_'
  2968  007FA0  66                 	db	102	;'f'
  2969  007FA1  72                 	db	114	;'r'
  2970  007FA2  65                 	db	101	;'e'
  2971  007FA3  00                 	db	0
  2972  007FA4                     STR_95:
  2973  007FA4  6D                 	db	109	;'m'
  2974  007FA5  61                 	db	97	;'a'
  2975  007FA6  63                 	db	99	;'c'
  2976  007FA7  5F                 	db	95	;'_'
  2977  007FA8  65                 	db	101	;'e'
  2978  007FA9  72                 	db	114	;'r'
  2979  007FAA  00                 	db	0
  2980  007FAB                     STR_90:
  2981  007FAB  6D                 	db	109	;'m'
  2982  007FAC  61                 	db	97	;'a'
  2983  007FAD  63                 	db	99	;'c'
  2984  007FAE  5F                 	db	95	;'_'
  2985  007FAF  72                 	db	114	;'r'
  2986  007FB0  78                 	db	120	;'x'
  2987  007FB1  00                 	db	0
  2988  007FB2                     STR_93:
  2989  007FB2  6D                 	db	109	;'m'
  2990  007FB3  61                 	db	97	;'a'
  2991  007FB4  63                 	db	99	;'c'
  2992  007FB5  5F                 	db	95	;'_'
  2993  007FB6  74                 	db	116	;'t'
  2994  007FB7  78                 	db	120	;'x'
  2995  007FB8  00                 	db	0
  2996  007FB9                     STR_31:
  2997  007FB9  52                 	db	82	;'R'
  2998  007FBA  4E                 	db	78	;'N'
  2999  007FBB  32                 	db	50	;'2'
  3000  007FBC  34                 	db	52	;'4'
  3001  007FBD  00                 	db	0
  3002  007FBE                     STR_35:
  3003  007FBE  52                 	db	82	;'R'
  3004  007FBF  4E                 	db	78	;'N'
  3005  007FC0  32                 	db	50	;'2'
  3006  007FC1  39                 	db	57	;'9'
  3007  007FC2  00                 	db	0
  3008  007FC3                     STR_122:
  3009  007FC3  4D                 	db	77	;'M'
  3010  007FC4  69                 	db	105	;'i'
  3011  007FC5  6E                 	db	110	;'n'
  3012  007FC6  73                 	db	115	;'s'
  3013  007FC7  00                 	db	0
  3014  007FC8                     STR_138:
  3015  007FC8  20                 	db	32
  3016  007FC9  30                 	db	48	;'0'
  3017  007FCA  20                 	db	32
  3018  007FCB  00                 	db	0
  3019  007FCC                     STR_139:
  3020  007FCC  20                 	db	32
  3021  007FCD  31                 	db	49	;'1'
  3022  007FCE  20                 	db	32
  3023  007FCF  00                 	db	0
  3024  007FD0                     STR_140:
  3025  007FD0  20                 	db	32
  3026  007FD1  32                 	db	50	;'2'
  3027  007FD2  20                 	db	32
  3028  007FD3  00                 	db	0
  3029  007FD4                     STR_141:
  3030  007FD4  20                 	db	32
  3031  007FD5  33                 	db	51	;'3'
  3032  007FD6  20                 	db	32
  3033  007FD7  00                 	db	0
  3034  007FD8                     STR_142:
  3035  007FD8  20                 	db	32
  3036  007FD9  34                 	db	52	;'4'
  3037  007FDA  20                 	db	32
  3038  007FDB  00                 	db	0
  3039  007FDC                     STR_143:
  3040  007FDC  20                 	db	32
  3041  007FDD  35                 	db	53	;'5'
  3042  007FDE  20                 	db	32
  3043  007FDF  00                 	db	0
  3044  007FE0                     STR_146:
  3045  007FE0  20                 	db	32
  3046  007FE1  31                 	db	49	;'1'
  3047  007FE2  30                 	db	48	;'0'
  3048  007FE3  00                 	db	0
  3049  007FE4                     STR_148:
  3050  007FE4  20                 	db	32
  3051  007FE5  33                 	db	51	;'3'
  3052  007FE6  30                 	db	48	;'0'
  3053  007FE7  00                 	db	0
  3054  007FE8                     STR_149:
  3055  007FE8  20                 	db	32
  3056  007FE9  36                 	db	54	;'6'
  3057  007FEA  30                 	db	48	;'0'
  3058  007FEB  00                 	db	0
  3059  007FEC                     STR_147:
  3060  007FEC  20                 	db	32
  3061  007FED  31                 	db	49	;'1'
  3062  007FEE  35                 	db	53	;'5'
  3063  007FEF  00                 	db	0
  3064  007FF0                     STR_128:
  3065  007FF0  4F                 	db	79	;'O'
  3066  007FF1  46                 	db	70	;'F'
  3067  007FF2  46                 	db	70	;'F'
  3068  007FF3  00                 	db	0
  3069  007FF4                     STR_144:
  3070  007FF4  41                 	db	65	;'A'
  3071  007FF5  44                 	db	68	;'D'
  3072  007FF6  52                 	db	82	;'R'
  3073  007FF7  00                 	db	0
  3074  007FF8                     STR_44:
  3075  007FF8  6F                 	db	111	;'o'
  3076  007FF9  6B                 	db	107	;'k'
  3077  007FFA  00                 	db	0
  3078  007FFB                     STR_118:
  3079  007FFB  43                 	db	67	;'C'
  3080  007FFC  00                 	db	0
  3081  007FFD                     STR_21:
  3082  007FFD  7A                 	db	122	;'z'
  3083  007FFE  00                 	db	0
  3084  0000                     
  3085                           ; #config settings
  3086  007FFF  00                 	db	0	; dummy byte at the end
  3087  0000                     
  3088                           	psect	cinit
  3089  005BE0                     __pcinit:
  3090                           	opt stack 0
  3091  005BE0                     start_initialization:
  3092                           	opt stack 0
  3093  005BE0                     __initialization:
  3094                           	opt stack 0
  3095                           
  3096                           ; Clear objects allocated to BANK2 (192 bytes)
  3097  005BE0  EE02  F000         	lfsr	0,__pbssBANK2
  3098  005BE4  0EC0               	movlw	192
  3099  005BE6                     clear_0:
  3100  005BE6  6AEE               	clrf	postinc0,c
  3101  005BE8  06E8               	decf	wreg,f,c
  3102  005BEA  E1FD               	bnz	clear_0
  3103                           
  3104                           ; Clear objects allocated to BANK1 (236 bytes)
  3105  005BEC  EE01  F000         	lfsr	0,__pbssBANK1
  3106  005BF0  0EEC               	movlw	236
  3107  005BF2                     clear_1:
  3108  005BF2  6AEE               	clrf	postinc0,c
  3109  005BF4  06E8               	decf	wreg,f,c
  3110  005BF6  E1FD               	bnz	clear_1
  3111                           
  3112                           ; Clear objects allocated to BANK0 (62 bytes)
  3113  005BF8  EE00  F0B7         	lfsr	0,__pbssBANK0
  3114  005BFC  0E3E               	movlw	62
  3115  005BFE                     clear_2:
  3116  005BFE  6AEE               	clrf	postinc0,c
  3117  005C00  06E8               	decf	wreg,f,c
  3118  005C02  E1FD               	bnz	clear_2
  3119                           
  3120                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  3121  005C04  6A5A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  3122                           
  3123                           ; Clear objects allocated to COMRAM (44 bytes)
  3124  005C06  EE00  F02E         	lfsr	0,__pbssCOMRAM
  3125  005C0A  0E2C               	movlw	44
  3126  005C0C                     clear_3:
  3127  005C0C  6AEE               	clrf	postinc0,c
  3128  005C0E  06E8               	decf	wreg,f,c
  3129  005C10  E1FD               	bnz	clear_3
  3130                           
  3131                           ; Initialize objects allocated to BANK1 (2 bytes)
  3132                           ; load TBLPTR registers with __pidataBANK1
  3133  005C12  0E2C               	movlw	low __pidataBANK1
  3134  005C14  6EF6               	movwf	tblptrl,c
  3135  005C16  0E6B               	movlw	high __pidataBANK1
  3136  005C18  6EF7               	movwf	tblptrh,c
  3137  005C1A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  3138  005C1C  6EF8               	movwf	tblptru,c
  3139  005C1E  0009               	tblrd		*+	;fetch initializer
  3140  005C20  CFF5 F1F1          	movff	tablat,__pdataBANK1
  3141  005C24  0009               	tblrd		*+	;fetch initializer
  3142  005C26  CFF5 F1F2          	movff	tablat,__pdataBANK1+1
  3143                           
  3144                           ; Initialize objects allocated to BANK0 (9 bytes)
  3145                           ; load TBLPTR registers with __pidataBANK0
  3146  005C2A  0EEC               	movlw	low __pidataBANK0
  3147  005C2C  6EF6               	movwf	tblptrl,c
  3148  005C2E  0E6A               	movlw	high __pidataBANK0
  3149  005C30  6EF7               	movwf	tblptrh,c
  3150  005C32  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  3151  005C34  6EF8               	movwf	tblptru,c
  3152  005C36  EE00  F0F5         	lfsr	0,__pdataBANK0
  3153  005C3A  EE10 F009          	lfsr	1,9
  3154  005C3E                     copy_data0:
  3155  005C3E  0009               	tblrd		*+
  3156  005C40  CFF5 FFEE          	movff	tablat,postinc0
  3157  005C44  50E5               	movf	postdec1,w,c
  3158  005C46  50E1               	movf	fsr1l,w,c
  3159  005C48  E1FA               	bnz	copy_data0
  3160  005C4A                     end_of_initialization:
  3161                           	opt stack 0
  3162  005C4A                     __end_of__initialization:
  3163                           	opt stack 0
  3164  005C4A  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3165  005C4C  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3166  005C4E  0E00               	movlw	low (__Lmediumconst shr (0+16))
  3167  005C50  6EF8               	movwf	tblptru,c
  3168  005C52  0100               	movlb	0
  3169  005C54  EFAE  F01D         	goto	_main	;jump to C main() function
  3170                           tblptru	equ	0xFF8
  3171                           tblptrh	equ	0xFF7
  3172                           tblptrl	equ	0xFF6
  3173                           tablat	equ	0xFF5
  3174                           postinc0	equ	0xFEE
  3175                           wreg	equ	0xFE8
  3176                           postdec1	equ	0xFE5
  3177                           fsr1l	equ	0xFE1
  3178                           
  3179                           	psect	bitbssCOMRAM
  3180  0002D0                     __pbitbssCOMRAM:
  3181                           	opt stack 0
  3182  0002D0                     _log:
  3183                           	opt stack 0
  3184  0002D0                     	ds	1
  3185                           tblptru	equ	0xFF8
  3186                           tblptrh	equ	0xFF7
  3187                           tblptrl	equ	0xFF6
  3188                           tablat	equ	0xFF5
  3189                           postinc0	equ	0xFEE
  3190                           wreg	equ	0xFE8
  3191                           postdec1	equ	0xFE5
  3192                           fsr1l	equ	0xFE1
  3193                           
  3194                           	psect	bssCOMRAM
  3195  00002E                     __pbssCOMRAM:
  3196                           	opt stack 0
  3197  00002E                     _outPipes:
  3198                           	opt stack 0
  3199  00002E                     	ds	8
  3200  000036                     _inPipes:
  3201                           	opt stack 0
  3202  000036                     	ds	6
  3203  00003C                     _pBDTEntryIn:
  3204                           	opt stack 0
  3205  00003C                     	ds	6
  3206  000042                     USBapp_LEDUpdateStatus@ledCount:
  3207                           	opt stack 0
  3208  000042                     	ds	2
  3209  000044                     _pBDTEntryEP0OutCurrent:
  3210                           	opt stack 0
  3211  000044                     	ds	2
  3212  000046                     _pBDTEntryEP0OutNext:
  3213                           	opt stack 0
  3214  000046                     	ds	2
  3215  000048                     _timer1ReloadVal:
  3216                           	opt stack 0
  3217  000048                     	ds	2
  3218  00004A                     _LastRS232Out:
  3219                           	opt stack 0
  3220  00004A                     	ds	1
  3221  00004B                     _NextUSBOut:
  3222                           	opt stack 0
  3223  00004B                     	ds	1
  3224  00004C                     _RS232_Out_Data_Rdy:
  3225                           	opt stack 0
  3226  00004C                     	ds	1
  3227  00004D                     _RS232cp:
  3228                           	opt stack 0
  3229  00004D                     	ds	1
  3230  00004E                     _USBDeferStatusStagePacket:
  3231                           	opt stack 0
  3232  00004E                     	ds	1
  3233  00004F                     _USBStatusStageTimeoutCounter:
  3234                           	opt stack 0
  3235  00004F                     	ds	1
  3236  000050                     _cdc_trf_state:
  3237                           	opt stack 0
  3238  000050                     	ds	1
  3239  000051                     _controlTransferState:
  3240                           	opt stack 0
  3241  000051                     	ds	1
  3242  000052                     _endpoint_number:
  3243                           	opt stack 0
  3244  000052                     	ds	1
  3245  000053                     _eusartRxCount:
  3246                           	opt stack 0
  3247  000053                     	ds	1
  3248  000054                     _eusartTxBufferRemaining:
  3249                           	opt stack 0
  3250  000054                     	ds	1
  3251  000055                     _moduleBufferIndex:
  3252                           	opt stack 0
  3253  000055                     	ds	1
  3254  000056                     _rxByteFlag:
  3255                           	opt stack 0
  3256  000056                     	ds	1
  3257  000057                     _shortPacketStatus:
  3258                           	opt stack 0
  3259  000057                     	ds	1
  3260  000058                     _USBActiveConfiguration:
  3261                           	opt stack 0
  3262  000058                     	ds	1
  3263  000059                     _USTATcopy:
  3264                           	opt stack 0
  3265  000059                     	ds	1
  3266                           tblptru	equ	0xFF8
  3267                           tblptrh	equ	0xFF7
  3268                           tblptrl	equ	0xFF6
  3269                           tablat	equ	0xFF5
  3270                           postinc0	equ	0xFEE
  3271                           wreg	equ	0xFE8
  3272                           postdec1	equ	0xFE5
  3273                           fsr1l	equ	0xFE1
  3274                           
  3275                           	psect	bssBANK0
  3276  0000B7                     __pbssBANK0:
  3277                           	opt stack 0
  3278  0000B7                     _ep_data_in:
  3279                           	opt stack 0
  3280  0000B7                     	ds	3
  3281  0000BA                     _ep_data_out:
  3282                           	opt stack 0
  3283  0000BA                     	ds	3
  3284  0000BD                     _CDCDataInHandle:
  3285                           	opt stack 0
  3286  0000BD                     	ds	2
  3287  0000BF                     _CDCDataOutHandle:
  3288                           	opt stack 0
  3289  0000BF                     	ds	2
  3290  0000C1                     _light:
  3291                           	opt stack 0
  3292  0000C1                     	ds	2
  3293  0000C3                     _pDst:
  3294                           	opt stack 0
  3295  0000C3                     	ds	2
  3296  0000C5                     _temperature:
  3297                           	opt stack 0
  3298  0000C5                     	ds	2
  3299  0000C7                     _timer3ReloadVal:
  3300                           	opt stack 0
  3301  0000C7                     	ds	2
  3302  0000C9                     _timerMinTickCount:
  3303                           	opt stack 0
  3304  0000C9                     	ds	2
  3305  0000CB                     _timerMsTickCount:
  3306                           	opt stack 0
  3307  0000CB                     	ds	2
  3308  0000CD                     _BothEP0OutUOWNsSet:
  3309                           	opt stack 0
  3310  0000CD                     	ds	1
  3311  0000CE                     _RemoteWakeup:
  3312                           	opt stack 0
  3313  0000CE                     	ds	1
  3314  0000CF                     _USBBusIsSuspended:
  3315                           	opt stack 0
  3316  0000CF                     	ds	1
  3317  0000D0                     _USBDeferINDataStagePackets:
  3318                           	opt stack 0
  3319  0000D0                     	ds	1
  3320  0000D1                     _USBDeferOUTDataStagePackets:
  3321                           	opt stack 0
  3322  0000D1                     	ds	1
  3323  0000D2                     _USBDeviceState:
  3324                           	opt stack 0
  3325  0000D2                     	ds	1
  3326  0000D3                     _USBStatusStageEnabledFlag1:
  3327                           	opt stack 0
  3328  0000D3                     	ds	1
  3329  0000D4                     _USBStatusStageEnabledFlag2:
  3330                           	opt stack 0
  3331  0000D4                     	ds	1
  3332  0000D5                     _activeState:
  3333                           	opt stack 0
  3334  0000D5                     	ds	1
  3335  0000D6                     _appState:
  3336                           	opt stack 0
  3337  0000D6                     	ds	1
  3338  0000D7                     _appTimer:
  3339                           	opt stack 0
  3340  0000D7                     	ds	1
  3341  0000D8                     _cdc_mem_type:
  3342                           	opt stack 0
  3343  0000D8                     	ds	1
  3344  0000D9                     _cdc_rx_len:
  3345                           	opt stack 0
  3346  0000D9                     	ds	1
  3347  0000DA                     _cdc_tx_len:
  3348                           	opt stack 0
  3349  0000DA                     	ds	1
  3350  0000DB                     _control_signal_bitmap:
  3351                           	opt stack 0
  3352  0000DB                     	ds	1
  3353  0000DC                     	ds	1
  3354  0000DD                     	ds	1
  3355  0000DE                     	ds	1
  3356  0000DF                     _eusartRxHead:
  3357                           	opt stack 0
  3358  0000DF                     	ds	1
  3359  0000E0                     _eusartRxTail:
  3360                           	opt stack 0
  3361  0000E0                     	ds	1
  3362  0000E1                     _eusartTxHead:
  3363                           	opt stack 0
  3364  0000E1                     	ds	1
  3365  0000E2                     _eusartTxTail:
  3366                           	opt stack 0
  3367  0000E2                     	ds	1
  3368  0000E3                     _lightStringSize:
  3369                           	opt stack 0
  3370  0000E3                     	ds	1
  3371  0000E4                     _mainState:
  3372                           	opt stack 0
  3373  0000E4                     	ds	1
  3374  0000E5                     	ds	1
  3375  0000E6                     _minTicker:
  3376                           	opt stack 0
  3377  0000E6                     	ds	1
  3378  0000E7                     _moteModeState:
  3379                           	opt stack 0
  3380  0000E7                     	ds	1
  3381  0000E8                     _operationType:
  3382                           	opt stack 0
  3383  0000E8                     	ds	1
  3384  0000E9                     _powerOnStatus:
  3385                           	opt stack 0
  3386  0000E9                     	ds	1
  3387  0000EA                     _randomPortNum:
  3388                           	opt stack 0
  3389  0000EA                     	ds	1
  3390  0000EB                     _responseReady:
  3391                           	opt stack 0
  3392  0000EB                     	ds	1
  3393  0000EC                     	ds	1
  3394  0000ED                     _rnModule:
  3395                           	opt stack 0
  3396  0000ED                     	ds	1
  3397  0000EE                     _runningState:
  3398                           	opt stack 0
  3399  0000EE                     	ds	1
  3400  0000EF                     _secTicker:
  3401                           	opt stack 0
  3402  0000EF                     	ds	1
  3403  0000F0                     _sleepTicker:
  3404                           	opt stack 0
  3405  0000F0                     	ds	1
  3406  0000F1                     _usbState:
  3407                           	opt stack 0
  3408  0000F1                     	ds	1
  3409  0000F2                     service_pushbutton@Release_Timer:
  3410                           	opt stack 0
  3411  0000F2                     	ds	1
  3412  0000F3                     _USBAlternateInterface:
  3413                           	opt stack 0
  3414  0000F3                     	ds	2
  3415                           tblptru	equ	0xFF8
  3416                           tblptrh	equ	0xFF7
  3417                           tblptrl	equ	0xFF6
  3418                           tablat	equ	0xFF5
  3419                           postinc0	equ	0xFEE
  3420                           wreg	equ	0xFE8
  3421                           postdec1	equ	0xFE5
  3422                           fsr1l	equ	0xFE1
  3423                           
  3424                           	psect	dataBANK0
  3425  0000F5                     __pdataBANK0:
  3426                           	opt stack 0
  3427  0000F5                     _Contrast_level:
  3428                           	opt stack 0
  3429  0000F5                     	ds	1
  3430  0000F6                     	ds	1
  3431  0000F7                     _dataRateValue:
  3432                           	opt stack 0
  3433  0000F7                     	ds	1
  3434  0000F8                     _exitUSB:
  3435                           	opt stack 0
  3436  0000F8                     	ds	1
  3437  0000F9                     _menuTimeout:
  3438                           	opt stack 0
  3439  0000F9                     	ds	1
  3440  0000FA                     _moteState:
  3441                           	opt stack 0
  3442  0000FA                     	ds	1
  3443  0000FB                     _periodicState:
  3444                           	opt stack 0
  3445  0000FB                     	ds	1
  3446  0000FC                     _periodicTimerValue:
  3447                           	opt stack 0
  3448  0000FC                     	ds	1
  3449  0000FD                     _periodicUpValue:
  3450                           	opt stack 0
  3451  0000FD                     	ds	1
  3452                           tblptru	equ	0xFF8
  3453                           tblptrh	equ	0xFF7
  3454                           tblptrl	equ	0xFF6
  3455                           tablat	equ	0xFF5
  3456                           postinc0	equ	0xFEE
  3457                           wreg	equ	0xFE8
  3458                           postdec1	equ	0xFE5
  3459                           fsr1l	equ	0xFE1
  3460                           
  3461                           	psect	bssBANK1
  3462  000100                     __pbssBANK1:
  3463                           	opt stack 0
  3464  000100                     	ds	32
  3465  000120                     	ds	16
  3466  000130                     _responseId:
  3467                           	opt stack 0
  3468  000130                     	ds	16
  3469  000140                     _pBDTEntryOut:
  3470                           	opt stack 0
  3471  000140                     	ds	6
  3472  000146                     _BaudRateGen:
  3473                           	opt stack 0
  3474  000146                     	ds	4
  3475  00014A                     service_pushbutton@PB_Timer:
  3476                           	opt stack 0
  3477  00014A                     	ds	4
  3478  00014E                     _pCDCDst:
  3479                           	opt stack 0
  3480  00014E                     	ds	3
  3481  000151                     _pCDCSrc:
  3482                           	opt stack 0
  3483  000151                     	ds	3
  3484  000154                     _m10SecTicker:
  3485                           	opt stack 0
  3486  000154                     	ds	2
  3487  000156                     _moduleResonseBuffer:
  3488                           	opt stack 0
  3489  000156                     	ds	64
  3490  000196                     _responseData:
  3491                           	opt stack 0
  3492  000196                     	ds	32
  3493  0001B6                     _dataBuffer:
  3494                           	opt stack 0
  3495  0001B6                     	ds	16
  3496  0001C6                     _cdc_notice:
  3497                           	opt stack 0
  3498  0001C6                     	ds	10
  3499  0001D0                     _dummy_encapsulated_cmd_response:
  3500                           	opt stack 0
  3501  0001D0                     	ds	8
  3502  0001D8                     _line_coding:
  3503                           	opt stack 0
  3504  0001D8                     	ds	7
  3505  0001DF                     _clearLight:
  3506                           	opt stack 0
  3507  0001DF                     	ds	5
  3508  0001E4                     _storedLight:
  3509                           	opt stack 0
  3510  0001E4                     	ds	5
  3511  0001E9                     _responsePortNum:
  3512                           	opt stack 0
  3513  0001E9                     	ds	3
  3514                           tblptru	equ	0xFF8
  3515                           tblptrh	equ	0xFF7
  3516                           tblptrl	equ	0xFF6
  3517                           tablat	equ	0xFF5
  3518                           postinc0	equ	0xFEE
  3519                           wreg	equ	0xFE8
  3520                           postdec1	equ	0xFE5
  3521                           fsr1l	equ	0xFE1
  3522                           
  3523                           	psect	dataBANK1
  3524  0001F1                     __pdataBANK1:
  3525                           	opt stack 0
  3526  0001F1                     _selectedFont:
  3527                           	opt stack 0
  3528  0001F1                     	ds	2
  3529                           tblptru	equ	0xFF8
  3530                           tblptrh	equ	0xFF7
  3531                           tblptrl	equ	0xFF6
  3532                           tablat	equ	0xFF5
  3533                           postinc0	equ	0xFEE
  3534                           wreg	equ	0xFE8
  3535                           postdec1	equ	0xFE5
  3536                           fsr1l	equ	0xFE1
  3537                           
  3538                           	psect	bssBANK2
  3539  000200                     __pbssBANK2:
  3540                           	opt stack 0
  3541  000200                     _eusartRxBuffer:
  3542                           	opt stack 0
  3543  000200                     	ds	64
  3544  000240                     _eusartTxBuffer:
  3545                           	opt stack 0
  3546  000240                     	ds	64
  3547  000280                     _USB_Buffer:
  3548                           	opt stack 0
  3549  000280                     	ds	64
  3550                           tblptru	equ	0xFF8
  3551                           tblptrh	equ	0xFF7
  3552                           tblptrl	equ	0xFF6
  3553                           tablat	equ	0xFF5
  3554                           postinc0	equ	0xFEE
  3555                           wreg	equ	0xFE8
  3556                           postdec1	equ	0xFE5
  3557                           fsr1l	equ	0xFE1
  3558                           
  3559                           	psect	cstackBANK1
  3560  0001EC                     __pcstackBANK1:
  3561                           	opt stack 0
  3562  0001EC                     moteHandler@gotoSleep:
  3563                           	opt stack 0
  3564                           
  3565                           ; 1 bytes @ 0x0
  3566  0001EC                     	ds	1
  3567  0001ED                     moteHandler@gotoNextState:
  3568                           	opt stack 0
  3569                           
  3570                           ; 1 bytes @ 0x1
  3571  0001ED                     	ds	1
  3572  0001EE                     moteHandler@s2Button:
  3573                           	opt stack 0
  3574                           
  3575                           ; 1 bytes @ 0x2
  3576  0001EE                     	ds	1
  3577  0001EF                     moteHandler@buttonPress:
  3578                           	opt stack 0
  3579                           
  3580                           ; 1 bytes @ 0x3
  3581  0001EF                     	ds	1
  3582  0001F0                     moteHandler@readMessage:
  3583                           	opt stack 0
  3584                           
  3585                           ; 1 bytes @ 0x4
  3586  0001F0                     	ds	1
  3587                           tblptru	equ	0xFF8
  3588                           tblptrh	equ	0xFF7
  3589                           tblptrl	equ	0xFF6
  3590                           tablat	equ	0xFF5
  3591                           postinc0	equ	0xFEE
  3592                           wreg	equ	0xFE8
  3593                           postdec1	equ	0xFE5
  3594                           fsr1l	equ	0xFE1
  3595                           
  3596                           	psect	cstackBANK0
  3597  000060                     __pcstackBANK0:
  3598                           	opt stack 0
  3599  000060                     ??_TMR1_Initialize:
  3600  000060                     ?_strncmp:
  3601                           	opt stack 0
  3602  000060                     ?_strcmp:
  3603                           	opt stack 0
  3604  000060                     ?_moteApp_getLightString:
  3605                           	opt stack 0
  3606  000060                     ?_USBTransferOnePacket:
  3607                           	opt stack 0
  3608  000060                     ?___wmul:
  3609                           	opt stack 0
  3610  000060                     ?___awmod:
  3611                           	opt stack 0
  3612  000060                     ?___lwdiv:
  3613                           	opt stack 0
  3614  000060                     ?___lwmod:
  3615                           	opt stack 0
  3616  000060                     ?___fladd:
  3617                           	opt stack 0
  3618  000060                     ?___almod:
  3619                           	opt stack 0
  3620  000060                     ?___fltol:
  3621                           	opt stack 0
  3622  000060                     ?___xxtofl:
  3623                           	opt stack 0
  3624  000060                     MOTEapp_handlerState@state:
  3625                           	opt stack 0
  3626  000060                     MOTEapp_TimerBasedTask@timerTask:
  3627                           	opt stack 0
  3628  000060                     hexToStr@character:
  3629                           	opt stack 0
  3630  000060                     moteApp_clearBuffers@counter:
  3631                           	opt stack 0
  3632  000060                     USBapp_handlerState@state:
  3633                           	opt stack 0
  3634  000060                     USBapp_exitCDCState@usbState:
  3635                           	opt stack 0
  3636  000060                     service_pushbutton@bs:
  3637                           	opt stack 0
  3638  000060                     oled_writeCommand@command:
  3639                           	opt stack 0
  3640  000060                     oled_writeData@data:
  3641                           	opt stack 0
  3642  000060                     EUSART_Read@readValue:
  3643                           	opt stack 0
  3644  000060                     EUSART_Write@txData:
  3645                           	opt stack 0
  3646  000060                     EUSART_FlushBuffer@index:
  3647                           	opt stack 0
  3648  000060                     DATAEE_WriteByte@bData:
  3649                           	opt stack 0
  3650  000060                     DATAEE_ReadByte@bAdd:
  3651                           	opt stack 0
  3652  000060                     TMR2_ReadTimer@readVal:
  3653                           	opt stack 0
  3654  000060                     USBTransferOnePacket@dir:
  3655                           	opt stack 0
  3656  000060                     ___lbdiv@divisor:
  3657                           	opt stack 0
  3658  000060                     delayms@t:
  3659                           	opt stack 0
  3660  000060                     moteApp_delayms@length:
  3661                           	opt stack 0
  3662  000060                     oled_setFont@font:
  3663                           	opt stack 0
  3664  000060                     putUSBUSART@data:
  3665                           	opt stack 0
  3666  000060                     ___wmul@multiplier:
  3667                           	opt stack 0
  3668  000060                     ___awmod@dividend:
  3669                           	opt stack 0
  3670  000060                     ___lwdiv@dividend:
  3671                           	opt stack 0
  3672  000060                     ___lwmod@dividend:
  3673                           	opt stack 0
  3674  000060                     memcpy@d1:
  3675                           	opt stack 0
  3676  000060                     memset@p1:
  3677                           	opt stack 0
  3678  000060                     strcmp@s1:
  3679                           	opt stack 0
  3680  000060                     strncmp@s1:
  3681                           	opt stack 0
  3682  000060                     ___almod@dividend:
  3683                           	opt stack 0
  3684  000060                     ___fltol@f1:
  3685                           	opt stack 0
  3686  000060                     ___fladd@b:
  3687                           	opt stack 0
  3688  000060                     ___xxtofl@val:
  3689                           	opt stack 0
  3690                           
  3691                           ; 4 bytes @ 0x0
  3692  000060                     	ds	1
  3693  000061                     MOTEapp_getModuleResponse@terminatorReceived:
  3694                           	opt stack 0
  3695  000061                     moteApp_clearBuffers@counter_1954:
  3696                           	opt stack 0
  3697  000061                     Set_Page_Address@address:
  3698                           	opt stack 0
  3699  000061                     Set_Column_Address@address:
  3700                           	opt stack 0
  3701  000061                     oled_setDisplay@displayType:
  3702                           	opt stack 0
  3703  000061                     oled_setContrastControlRegister@mod:
  3704                           	opt stack 0
  3705  000061                     oled_initialDispayLine@line:
  3706                           	opt stack 0
  3707  000061                     oled_powerControl@vol:
  3708                           	opt stack 0
  3709  000061                     oled_regulorResistorSelect@r:
  3710                           	opt stack 0
  3711  000061                     DATAEE_WriteByte@bAdd:
  3712                           	opt stack 0
  3713  000061                     ___lbdiv@dividend:
  3714                           	opt stack 0
  3715  000061                     sendCommand@string:
  3716                           	opt stack 0
  3717  000061                     sendDataCommand@string:
  3718                           	opt stack 0
  3719  000061                     USBTransferOnePacket@data:
  3720                           	opt stack 0
  3721                           
  3722                           ; 2 bytes @ 0x1
  3723  000061                     	ds	1
  3724  000062                     ??_moteApp_delayms:
  3725  000062                     ??_oled_devInit:
  3726  000062                     ??_delayms:
  3727  000062                     MOTEapp_getModuleResponse@bufferByte:
  3728                           	opt stack 0
  3729  000062                     moteApp_clearBuffers@counter_1955:
  3730                           	opt stack 0
  3731  000062                     oled_putChar@station_dot:
  3732                           	opt stack 0
  3733  000062                     DATAEE_WriteByte@GIEBitValue:
  3734                           	opt stack 0
  3735  000062                     putUSBUSART@length:
  3736                           	opt stack 0
  3737  000062                     ___lbdiv@counter:
  3738                           	opt stack 0
  3739  000062                     ___wmul@multiplicand:
  3740                           	opt stack 0
  3741  000062                     ___awmod@divisor:
  3742                           	opt stack 0
  3743  000062                     ___lwdiv@divisor:
  3744                           	opt stack 0
  3745  000062                     ___lwmod@divisor:
  3746                           	opt stack 0
  3747  000062                     memcpy@s1:
  3748                           	opt stack 0
  3749  000062                     memset@c:
  3750                           	opt stack 0
  3751  000062                     strcmp@s2:
  3752                           	opt stack 0
  3753  000062                     strncmp@s2:
  3754                           	opt stack 0
  3755                           
  3756                           ; 2 bytes @ 0x2
  3757  000062                     	ds	1
  3758  000063                     ??_moteApp_toggleLeds:
  3759  000063                     ??_MOTEapp_SetDataRateSetting:
  3760  000063                     ??_moduleSleep:
  3761  000063                     ?_moteApp_getTempValue:
  3762                           	opt stack 0
  3763  000063                     moteApp_clearBuffers@counter_1956:
  3764                           	opt stack 0
  3765  000063                     oled_putChar@start_page:
  3766                           	opt stack 0
  3767  000063                     USBTransferOnePacket@len:
  3768                           	opt stack 0
  3769  000063                     ___lbdiv@quotient:
  3770                           	opt stack 0
  3771  000063                     delayms@i:
  3772                           	opt stack 0
  3773  000063                     moteApp_delayms@counter:
  3774                           	opt stack 0
  3775  000063                     sendDataCommand@appData:
  3776                           	opt stack 0
  3777                           
  3778                           ; 2 bytes @ 0x3
  3779  000063                     	ds	1
  3780  000064                     ??_oled_putChar:
  3781  000064                     ??_strcmp:
  3782  000064                     ??___fltol:
  3783  000064                     ??___xxtofl:
  3784  000064                     MOTEapp_SetDataRateSetting@dr:
  3785                           	opt stack 0
  3786  000064                     moteApp_toggleLeds@state:
  3787                           	opt stack 0
  3788  000064                     USBTransferOnePacket@ep:
  3789                           	opt stack 0
  3790  000064                     ___awmod@counter:
  3791                           	opt stack 0
  3792  000064                     ___lwdiv@counter:
  3793                           	opt stack 0
  3794  000064                     ___lwmod@counter:
  3795                           	opt stack 0
  3796  000064                     ___wmul@product:
  3797                           	opt stack 0
  3798  000064                     memcpy@n:
  3799                           	opt stack 0
  3800  000064                     memset@n:
  3801                           	opt stack 0
  3802  000064                     strncmp@len:
  3803                           	opt stack 0
  3804  000064                     ___almod@divisor:
  3805                           	opt stack 0
  3806  000064                     ___fladd@a:
  3807                           	opt stack 0
  3808                           
  3809                           ; 4 bytes @ 0x4
  3810  000064                     	ds	1
  3811  000065                     sendDataCommand@dataLength:
  3812                           	opt stack 0
  3813  000065                     ___awmod@sign:
  3814                           	opt stack 0
  3815  000065                     strcmp@r:
  3816                           	opt stack 0
  3817  000065                     moduleResync@escapeCounter:
  3818                           	opt stack 0
  3819  000065                     moteApp_setSensorsInput@escapeCounter:
  3820                           	opt stack 0
  3821  000065                     moteApp_getTempValue@escapeCounter:
  3822                           	opt stack 0
  3823  000065                     USBTransferOnePacket@handle:
  3824                           	opt stack 0
  3825  000065                     ___lwdiv@quotient:
  3826                           	opt stack 0
  3827                           
  3828                           ; 2 bytes @ 0x5
  3829  000065                     	ds	1
  3830  000066                     ??_strncmp:
  3831  000066                     ??_sendDataCommand:
  3832  000066                     moteApp_add8bToDataBuffer@bufferLocation:
  3833                           	opt stack 0
  3834  000066                     memcpy@d:
  3835                           	opt stack 0
  3836  000066                     memset@p:
  3837                           	opt stack 0
  3838                           
  3839                           ; 2 bytes @ 0x6
  3840  000066                     	ds	1
  3841  000067                     ??_moteApp_add8bToDataBuffer:
  3842  000067                     ??_CDCTxService:
  3843  000067                     moduleResync@escapeEvent:
  3844                           	opt stack 0
  3845  000067                     sendDataCommand@byteCount:
  3846                           	opt stack 0
  3847  000067                     moteApp_add16bToDataBuffer@number:
  3848                           	opt stack 0
  3849  000067                     getsUSBUSART@buffer:
  3850                           	opt stack 0
  3851                           
  3852                           ; 2 bytes @ 0x7
  3853  000067                     	ds	1
  3854  000068                     ??___fladd:
  3855  000068                     sendDataCommand@byteCount_1872:
  3856                           	opt stack 0
  3857  000068                     USBDeviceInit@i:
  3858                           	opt stack 0
  3859  000068                     ___almod@counter:
  3860                           	opt stack 0
  3861  000068                     ___fltol@sign1:
  3862                           	opt stack 0
  3863  000068                     ___xxtofl@sign:
  3864                           	opt stack 0
  3865  000068                     _CDCTxService$6537:
  3866                           	opt stack 0
  3867  000068                     memcpy@s:
  3868                           	opt stack 0
  3869                           
  3870                           ; 2 bytes @ 0x8
  3871  000068                     	ds	1
  3872  000069                     moteApp_add8bToDataBuffer@number:
  3873                           	opt stack 0
  3874  000069                     moteApp_add16bToDataBuffer@bufferLocation:
  3875                           	opt stack 0
  3876  000069                     getsUSBUSART@len:
  3877                           	opt stack 0
  3878  000069                     ___almod@sign:
  3879                           	opt stack 0
  3880  000069                     ___fltol@exp1:
  3881                           	opt stack 0
  3882  000069                     ___xxtofl@exp:
  3883                           	opt stack 0
  3884                           
  3885                           ; 1 bytes @ 0x9
  3886  000069                     	ds	1
  3887  00006A                     ??_moteApp_add16bToDataBuffer:
  3888  00006A                     ??_getsUSBUSART:
  3889  00006A                     oled_putChar@k:
  3890                           	opt stack 0
  3891  00006A                     CDCTxService@i:
  3892                           	opt stack 0
  3893  00006A                     moteApp_setLightString@lightString:
  3894                           	opt stack 0
  3895  00006A                     ___xxtofl@arg:
  3896                           	opt stack 0
  3897                           
  3898                           ; 4 bytes @ 0xA
  3899  00006A                     	ds	1
  3900  00006B                     oled_putChar@index:
  3901                           	opt stack 0
  3902  00006B                     CDCTxService@byte_to_send:
  3903                           	opt stack 0
  3904  00006B                     _getsUSBUSART$6489:
  3905                           	opt stack 0
  3906                           
  3907                           ; 2 bytes @ 0xB
  3908  00006B                     	ds	1
  3909  00006C                     moteApp_setLightString@stingPos:
  3910                           	opt stack 0
  3911  00006C                     oled_clearRow@page:
  3912                           	opt stack 0
  3913                           
  3914                           ; 1 bytes @ 0xC
  3915  00006C                     	ds	1
  3916  00006D                     ??_USBapp_DeviceCdcEmulatorHandler:
  3917  00006D                     ?_moteApp_getLightValue:
  3918                           	opt stack 0
  3919  00006D                     oled_clearRow@index:
  3920                           	opt stack 0
  3921                           
  3922                           ; 1 bytes @ 0xD
  3923  00006D                     	ds	1
  3924  00006E                     moteApp_GoToSleep@status:
  3925                           	opt stack 0
  3926                           
  3927                           ; 1 bytes @ 0xE
  3928  00006E                     	ds	1
  3929  00006F                     moteApp_getLightValue@escapeCounter:
  3930                           	opt stack 0
  3931                           
  3932                           ; 2 bytes @ 0xF
  3933  00006F                     	ds	1
  3934  000070                     ___fladd@signs:
  3935                           	opt stack 0
  3936                           
  3937                           ; 1 bytes @ 0x10
  3938  000070                     	ds	1
  3939  000071                     ?_moteApp_convertSensorValue:
  3940                           	opt stack 0
  3941  000071                     ___fladd@aexp:
  3942                           	opt stack 0
  3943  000071                     moteApp_convertSensorValue@string:
  3944                           	opt stack 0
  3945  000071                     oled_putString@string:
  3946                           	opt stack 0
  3947                           
  3948                           ; 2 bytes @ 0x11
  3949  000071                     	ds	1
  3950  000072                     ___fladd@bexp:
  3951                           	opt stack 0
  3952                           
  3953                           ; 1 bytes @ 0x12
  3954  000072                     	ds	1
  3955  000073                     ??_moteApp_convertSensorValue:
  3956  000073                     oled_putString@station_dot:
  3957                           	opt stack 0
  3958  000073                     ___fladd@grs:
  3959                           	opt stack 0
  3960                           
  3961                           ; 1 bytes @ 0x13
  3962  000073                     	ds	1
  3963  000074                     ?___flmul:
  3964                           	opt stack 0
  3965  000074                     oled_putString@start_page:
  3966                           	opt stack 0
  3967  000074                     ___flmul@b:
  3968                           	opt stack 0
  3969                           
  3970                           ; 4 bytes @ 0x14
  3971  000074                     	ds	1
  3972  000075                     oled_putString@index:
  3973                           	opt stack 0
  3974                           
  3975                           ; 1 bytes @ 0x15
  3976  000075                     	ds	1
  3977  000076                     ??_test_switch:
  3978  000076                     moteJoiningProcess@changeStates:
  3979                           	opt stack 0
  3980  000076                     moteApp_convertSensorValue@index:
  3981                           	opt stack 0
  3982  000076                     USBapp_Handler@buttonPress:
  3983                           	opt stack 0
  3984  000076                     oled_putUint8@station_dot:
  3985                           	opt stack 0
  3986  000076                     oled_putint8@station_dot:
  3987                           	opt stack 0
  3988                           
  3989                           ; 1 bytes @ 0x16
  3990  000076                     	ds	1
  3991  000077                     moteJoiningProcess@selectButton:
  3992                           	opt stack 0
  3993  000077                     oled_putUint8@start_page:
  3994                           	opt stack 0
  3995  000077                     oled_putint8@start_page:
  3996                           	opt stack 0
  3997  000077                     test_switch@timeout:
  3998                           	opt stack 0
  3999  000077                     moteApp_convertSensorValue@convertedValue:
  4000                           	opt stack 0
  4001                           
  4002                           ; 2 bytes @ 0x17
  4003  000077                     	ds	1
  4004  000078                     ??_moteJoiningProcess:
  4005  000078                     oled_putUint8@number:
  4006                           	opt stack 0
  4007  000078                     oled_putint8@negative:
  4008                           	opt stack 0
  4009  000078                     ___flmul@a:
  4010                           	opt stack 0
  4011                           
  4012                           ; 4 bytes @ 0x18
  4013  000078                     	ds	1
  4014  000079                     test_switch@buttonCheck:
  4015                           	opt stack 0
  4016  000079                     moteJoiningProcess@readDataRate:
  4017                           	opt stack 0
  4018  000079                     oled_putUint8@numData:
  4019                           	opt stack 0
  4020  000079                     oled_putint8@numData:
  4021                           	opt stack 0
  4022                           
  4023                           ; 6 bytes @ 0x19
  4024  000079                     	ds	1
  4025  00007A                     moteJoiningProcess@joiningComplete:
  4026                           	opt stack 0
  4027                           
  4028                           ; 1 bytes @ 0x1A
  4029  00007A                     	ds	1
  4030  00007B                     moteJoiningProcess@messageReady:
  4031                           	opt stack 0
  4032                           
  4033                           ; 1 bytes @ 0x1B
  4034  00007B                     	ds	1
  4035  00007C                     ??___flmul:
  4036                           
  4037                           ; 0 bytes @ 0x1C
  4038  00007C                     	ds	3
  4039  00007F                     oled_putint8@number:
  4040                           	opt stack 0
  4041                           
  4042                           ; 1 bytes @ 0x1F
  4043  00007F                     	ds	1
  4044  000080                     ___flmul@sign:
  4045                           	opt stack 0
  4046                           
  4047                           ; 1 bytes @ 0x20
  4048  000080                     	ds	1
  4049  000081                     ___flmul@aexp:
  4050                           	opt stack 0
  4051                           
  4052                           ; 1 bytes @ 0x21
  4053  000081                     	ds	1
  4054  000082                     ___flmul@grs:
  4055                           	opt stack 0
  4056                           
  4057                           ; 4 bytes @ 0x22
  4058  000082                     	ds	4
  4059  000086                     ___flmul@bexp:
  4060                           	opt stack 0
  4061                           
  4062                           ; 1 bytes @ 0x26
  4063  000086                     	ds	1
  4064  000087                     ___flmul@prod:
  4065                           	opt stack 0
  4066                           
  4067                           ; 4 bytes @ 0x27
  4068  000087                     	ds	4
  4069  00008B                     ___flmul@temp:
  4070                           	opt stack 0
  4071                           
  4072                           ; 2 bytes @ 0x2B
  4073  00008B                     	ds	2
  4074  00008D                     ?___fldiv:
  4075                           	opt stack 0
  4076  00008D                     ___fldiv@b:
  4077                           	opt stack 0
  4078                           
  4079                           ; 4 bytes @ 0x2D
  4080  00008D                     	ds	4
  4081  000091                     ___fldiv@a:
  4082                           	opt stack 0
  4083                           
  4084                           ; 4 bytes @ 0x31
  4085  000091                     	ds	4
  4086  000095                     ??___fldiv:
  4087                           
  4088                           ; 0 bytes @ 0x35
  4089  000095                     	ds	4
  4090  000099                     ___fldiv@sign:
  4091                           	opt stack 0
  4092                           
  4093                           ; 1 bytes @ 0x39
  4094  000099                     	ds	1
  4095  00009A                     ___fldiv@rem:
  4096                           	opt stack 0
  4097                           
  4098                           ; 4 bytes @ 0x3A
  4099  00009A                     	ds	4
  4100  00009E                     ___fldiv@new_exp:
  4101                           	opt stack 0
  4102                           
  4103                           ; 2 bytes @ 0x3E
  4104  00009E                     	ds	2
  4105  0000A0                     ___fldiv@grs:
  4106                           	opt stack 0
  4107                           
  4108                           ; 4 bytes @ 0x40
  4109  0000A0                     	ds	4
  4110  0000A4                     ___fldiv@bexp:
  4111                           	opt stack 0
  4112                           
  4113                           ; 1 bytes @ 0x44
  4114  0000A4                     	ds	1
  4115  0000A5                     ___fldiv@aexp:
  4116                           	opt stack 0
  4117                           
  4118                           ; 1 bytes @ 0x45
  4119  0000A5                     	ds	1
  4120  0000A6                     ADC_TempConversion@tempRaw:
  4121                           	opt stack 0
  4122                           
  4123                           ; 1 bytes @ 0x46
  4124  0000A6                     	ds	1
  4125  0000A7                     ADC_TempConversion@temp:
  4126                           	opt stack 0
  4127                           
  4128                           ; 1 bytes @ 0x47
  4129  0000A7                     	ds	1
  4130  0000A8                     ADC_TempConversion@val:
  4131                           	opt stack 0
  4132                           
  4133                           ; 4 bytes @ 0x48
  4134  0000A8                     	ds	4
  4135  0000AC                     ??_moteApp_testSensors:
  4136  0000AC                     moteRunningProcess@selectButton:
  4137                           	opt stack 0
  4138                           
  4139                           ; 1 bytes @ 0x4C
  4140  0000AC                     	ds	1
  4141  0000AD                     moteRunningProcess@messageReady:
  4142                           	opt stack 0
  4143                           
  4144                           ; 1 bytes @ 0x4D
  4145  0000AD                     	ds	1
  4146  0000AE                     moteRunningProcess@sleepEvent:
  4147                           	opt stack 0
  4148                           
  4149                           ; 1 bytes @ 0x4E
  4150  0000AE                     	ds	1
  4151  0000AF                     ??_moteRunningProcess:
  4152                           
  4153                           ; 0 bytes @ 0x4F
  4154  0000AF                     	ds	1
  4155  0000B0                     moteRunningProcess@readByte:
  4156                           	opt stack 0
  4157                           
  4158                           ; 1 bytes @ 0x50
  4159  0000B0                     	ds	1
  4160  0000B1                     moteRunningProcess@sizeOfUpdate:
  4161                           	opt stack 0
  4162                           
  4163                           ; 1 bytes @ 0x51
  4164  0000B1                     	ds	1
  4165  0000B2                     moteRunningProcess@sizeOfUpdate_1735:
  4166                           	opt stack 0
  4167                           
  4168                           ; 1 bytes @ 0x52
  4169  0000B2                     	ds	1
  4170  0000B3                     moteRunningProcess@counter:
  4171                           	opt stack 0
  4172                           
  4173                           ; 1 bytes @ 0x53
  4174  0000B3                     	ds	1
  4175  0000B4                     moteRunningProcess@bufferReadPos:
  4176                           	opt stack 0
  4177                           
  4178                           ; 1 bytes @ 0x54
  4179  0000B4                     	ds	1
  4180  0000B5                     moteRunningProcess@changeStates:
  4181                           	opt stack 0
  4182                           
  4183                           ; 1 bytes @ 0x55
  4184  0000B5                     	ds	1
  4185  0000B6                     ??_moteHandler:
  4186                           
  4187                           ; 0 bytes @ 0x56
  4188  0000B6                     	ds	1
  4189  0000B7                     tblptru	equ	0xFF8
  4190                           tblptrh	equ	0xFF7
  4191                           tblptrl	equ	0xFF6
  4192                           tablat	equ	0xFF5
  4193                           postinc0	equ	0xFEE
  4194                           wreg	equ	0xFE8
  4195                           postdec1	equ	0xFE5
  4196                           fsr1l	equ	0xFE1
  4197                           
  4198                           ; 0 bytes @ 0x57
  4199                           
  4200                           	psect	cstackCOMRAM
  4201  000001                     __pcstackCOMRAM:
  4202                           	opt stack 0
  4203  000001                     ??_USBStdGetDscHandler:
  4204  000001                     ??_USBStdGetStatusHandler:
  4205  000001                     ?i2_USBTransferOnePacket:
  4206                           	opt stack 0
  4207  000001                     ?___lldiv:
  4208                           	opt stack 0
  4209  000001                     USBConfigureEndpoint@direction:
  4210                           	opt stack 0
  4211  000001                     USBCtrlTrfTxService@byteToSend:
  4212                           	opt stack 0
  4213  000001                     i2USBTransferOnePacket@dir:
  4214                           	opt stack 0
  4215  000001                     i2memset@p1:
  4216                           	opt stack 0
  4217  000001                     ___lldiv@dividend:
  4218                           	opt stack 0
  4219                           
  4220                           ; 4 bytes @ 0x0
  4221  000001                     	ds	1
  4222  000002                     ??_USBConfigureEndpoint:
  4223  000002                     USBStdGetStatusHandler@p:
  4224                           	opt stack 0
  4225  000002                     i2USBTransferOnePacket@data:
  4226                           	opt stack 0
  4227                           
  4228                           ; 2 bytes @ 0x1
  4229  000002                     	ds	1
  4230  000003                     i2memset@c:
  4231                           	opt stack 0
  4232                           
  4233                           ; 2 bytes @ 0x2
  4234  000003                     	ds	1
  4235  000004                     i2USBTransferOnePacket@len:
  4236                           	opt stack 0
  4237                           
  4238                           ; 1 bytes @ 0x3
  4239  000004                     	ds	1
  4240  000005                     i2USBTransferOnePacket@ep:
  4241                           	opt stack 0
  4242  000005                     i2memset@n:
  4243                           	opt stack 0
  4244  000005                     ___lldiv@divisor:
  4245                           	opt stack 0
  4246                           
  4247                           ; 4 bytes @ 0x4
  4248  000005                     	ds	1
  4249  000006                     USBConfigureEndpoint@EPNum:
  4250                           	opt stack 0
  4251  000006                     i2USBTransferOnePacket@handle:
  4252                           	opt stack 0
  4253                           
  4254                           ; 2 bytes @ 0x5
  4255  000006                     	ds	1
  4256  000007                     USBConfigureEndpoint@handle:
  4257                           	opt stack 0
  4258  000007                     i2memset@p:
  4259                           	opt stack 0
  4260                           
  4261                           ; 2 bytes @ 0x6
  4262  000007                     	ds	2
  4263  000009                     USBEnableEndpoint@options:
  4264                           	opt stack 0
  4265  000009                     i2USBDeviceInit@i:
  4266                           	opt stack 0
  4267  000009                     ___lldiv@quotient:
  4268                           	opt stack 0
  4269                           
  4270                           ; 4 bytes @ 0x8
  4271  000009                     	ds	1
  4272  00000A                     USBEnableEndpoint@p:
  4273                           	opt stack 0
  4274                           
  4275                           ; 2 bytes @ 0x9
  4276  00000A                     	ds	2
  4277  00000C                     USBEnableEndpoint@ep:
  4278                           	opt stack 0
  4279                           
  4280                           ; 1 bytes @ 0xB
  4281  00000C                     	ds	1
  4282  00000D                     USBapp_CdcEmulatorInitialize@i:
  4283                           	opt stack 0
  4284  00000D                     ___lldiv@counter:
  4285                           	opt stack 0
  4286                           
  4287                           ; 1 bytes @ 0xC
  4288  00000D                     	ds	1
  4289  00000E                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  4290                           	opt stack 0
  4291  00000E                     USART_mySetLineCodingHandler@dwBaud:
  4292                           	opt stack 0
  4293                           
  4294                           ; 4 bytes @ 0xD
  4295  00000E                     	ds	2
  4296  000010                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  4297                           	opt stack 0
  4298                           
  4299                           ; 2 bytes @ 0xF
  4300  000010                     	ds	2
  4301  000012                     USBCtrlTrfRxService@i:
  4302                           	opt stack 0
  4303  000012                     USBCtrlTrfInHandler@lastDTS:
  4304                           	opt stack 0
  4305  000012                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  4306                           	opt stack 0
  4307                           
  4308                           ; 2 bytes @ 0x11
  4309  000012                     	ds	1
  4310  000013                     USBCtrlTrfRxService@byteToRead:
  4311                           	opt stack 0
  4312                           
  4313                           ; 1 bytes @ 0x12
  4314  000013                     	ds	1
  4315  000014                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  4316                           
  4317                           ; 0 bytes @ 0x13
  4318  000014                     	ds	2
  4319  000016                     ??_USBStdFeatureReqHandler:
  4320  000016                     USBStdSetCfgHandler@i:
  4321                           	opt stack 0
  4322                           
  4323                           ; 1 bytes @ 0x15
  4324  000016                     	ds	1
  4325  000017                     USBStdFeatureReqHandler@pUEP:
  4326                           	opt stack 0
  4327                           
  4328                           ; 2 bytes @ 0x16
  4329  000017                     	ds	2
  4330  000019                     USBStdFeatureReqHandler@current_ep_data:
  4331                           	opt stack 0
  4332                           
  4333                           ; 1 bytes @ 0x18
  4334  000019                     	ds	1
  4335  00001A                     USBStdFeatureReqHandler@p:
  4336                           	opt stack 0
  4337                           
  4338                           ; 2 bytes @ 0x19
  4339  00001A                     	ds	2
  4340  00001C                     ??_USBCtrlEPService:
  4341  00001C                     
  4342                           ; 0 bytes @ 0x1B
  4343  00001C                     	ds	2
  4344  00001E                     USBCtrlEPService@setup_cnt:
  4345                           	opt stack 0
  4346                           
  4347                           ; 1 bytes @ 0x1D
  4348  00001E                     	ds	1
  4349  00001F                     USBDeviceTasks@i:
  4350                           	opt stack 0
  4351                           
  4352                           ; 1 bytes @ 0x1E
  4353  00001F                     	ds	1
  4354  000020                     ??_INTERRUPT_InterruptManager:
  4355                           
  4356                           ; 0 bytes @ 0x1F
  4357  000020                     	ds	14
  4358                           tblptru	equ	0xFF8
  4359                           tblptrh	equ	0xFF7
  4360                           tblptrl	equ	0xFF6
  4361                           tablat	equ	0xFF5
  4362                           postinc0	equ	0xFEE
  4363                           wreg	equ	0xFE8
  4364                           postdec1	equ	0xFE5
  4365                           fsr1l	equ	0xFE1
  4366                           
  4367 ;;
  4368 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4369 ;;
  4370 ;; *************** function _main *****************
  4371 ;; Defined at:
  4372 ;;		line 70 in file "main.c"
  4373 ;; Parameters:    Size  Location     Type
  4374 ;;		None
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;		None
  4377 ;; Return value:  Size  Location     Type
  4378 ;;		None               void
  4379 ;; Registers used:
  4380 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4381 ;; Tracked objects:
  4382 ;;		On entry : 0/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4386 ;;      Params:         0       0       0       0       0       0       0       0       0
  4387 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4388 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4389 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4390 ;;Total ram usage:        0 bytes
  4391 ;; Hardware stack levels required when called:   20
  4392 ;; This function calls:
  4393 ;;		_DATAEE_ReadByte
  4394 ;;		_DATAEE_WriteByte
  4395 ;;		_MOTEapp_handlerState
  4396 ;;		_SYSTEM_Initialize
  4397 ;;		_USBDeviceAttach
  4398 ;;		_USBDeviceInit
  4399 ;;		_USBapp_Handler
  4400 ;;		_USBapp_handlerState
  4401 ;;		_moduleResync
  4402 ;;		_moteApp_clearCommand
  4403 ;;		_moteApp_delayms
  4404 ;;		_moteHandler
  4405 ;;		_oled_clear
  4406 ;;		_oled_init
  4407 ;;		_oled_putString
  4408 ;;		_test_powerup
  4409 ;; This function is called by:
  4410 ;;		Startup code after reset
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           	psect	text0
  4415  003B5C                     __ptext0:
  4416                           	opt stack 0
  4417  003B5C                     _main:
  4418                           	opt stack 11
  4419                           
  4420                           ;main.c: 73: SYSTEM_Initialize();
  4421                           
  4422                           ;incstack = 0
  4423  003B5C  EC6C  F034         	call	_SYSTEM_Initialize	;wreg free
  4424                           
  4425                           ;main.c: 75: oled_init();
  4426  003B60  EC97  F033         	call	_oled_init	;wreg free
  4427                           
  4428                           ;main.c: 76: USBDeviceInit();
  4429  003B64  EC94  F01A         	call	_USBDeviceInit	;wreg free
  4430                           
  4431                           ;main.c: 78: USBDeviceAttach();
  4432  003B68  EC7D  F033         	call	_USBDeviceAttach	;wreg free
  4433                           
  4434                           ;main.c: 80: LATBbits.LATB5 = 1;
  4435  003B6C  8A8A               	bsf	3978,5,c	;volatile
  4436                           
  4437                           ;main.c: 81: moteApp_delayms(50);
  4438  003B6E  0E00               	movlw	0
  4439  003B70  0100               	movlb	0	; () banked
  4440  003B72  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4441  003B74  0E32               	movlw	50
  4442  003B76  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4443  003B78  ECD9  F032         	call	_moteApp_delayms	;wreg free
  4444                           
  4445                           ;main.c: 82: LATBbits.LATB5 = 0;
  4446  003B7C  9A8A               	bcf	3978,5,c	;volatile
  4447                           
  4448                           ;main.c: 83: moteApp_delayms(500);
  4449  003B7E  0E01               	movlw	1
  4450  003B80  0100               	movlb	0	; () banked
  4451  003B82  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4452  003B84  0EF4               	movlw	244
  4453  003B86  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4454  003B88  ECD9  F032         	call	_moteApp_delayms	;wreg free
  4455                           
  4456                           ;main.c: 85: PEIE = 1;
  4457  003B8C  8CF2               	bsf	intcon,6,c	;volatile
  4458                           
  4459                           ;main.c: 86: GIE = 1;
  4460  003B8E  8EF2               	bsf	intcon,7,c	;volatile
  4461                           
  4462                           ;main.c: 88: moduleResync();
  4463  003B90  EC25  F02C         	call	_moduleResync	;wreg free
  4464                           
  4465                           ;main.c: 89: moteApp_delayms(20);
  4466  003B94  0E00               	movlw	0
  4467  003B96  0100               	movlb	0	; () banked
  4468  003B98  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4469  003B9A  0E14               	movlw	20
  4470  003B9C  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4471  003B9E  ECD9  F032         	call	_moteApp_delayms	;wreg free
  4472                           
  4473                           ;main.c: 90: moteApp_clearCommand();
  4474  003BA2  EC25  F035         	call	_moteApp_clearCommand	;wreg free
  4475                           
  4476                           ;main.c: 91: moteApp_delayms(20);
  4477  003BA6  0E00               	movlw	0
  4478  003BA8  0100               	movlb	0	; () banked
  4479  003BAA  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4480  003BAC  0E14               	movlw	20
  4481  003BAE  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4482  003BB0  ECD9  F032         	call	_moteApp_delayms	;wreg free
  4483                           
  4484                           ;main.c: 93: powerOnStatus = DATAEE_ReadByte(0x00);
  4485  003BB4  0E00               	movlw	0
  4486  003BB6  ECFD  F034         	call	_DATAEE_ReadByte
  4487  003BBA  0100               	movlb	0	; () banked
  4488  003BBC  6FE9               	movwf	_powerOnStatus& (0+255),b
  4489                           
  4490                           ; BSR set to: 0
  4491                           ;main.c: 94: if ( powerOnStatus != 0x55)
  4492  003BBE  0E55               	movlw	85
  4493  003BC0  0100               	movlb	0	; () banked
  4494  003BC2  19E9               	xorwf	_powerOnStatus& (0+255),w,b
  4495  003BC4  B4D8               	btfsc	status,2,c
  4496  003BC6  D008               	goto	l14854
  4497                           
  4498                           ; BSR set to: 0
  4499                           ;main.c: 95: {
  4500                           ;main.c: 96: test_powerup();
  4501  003BC8  ECA2  F02E         	call	_test_powerup	;wreg free
  4502                           
  4503                           ;main.c: 97: DATAEE_WriteByte(0x00, 0x55);
  4504  003BCC  0E55               	movlw	85
  4505  003BCE  0100               	movlb	0	; () banked
  4506  003BD0  6F60               	movwf	DATAEE_WriteByte@bData& (0+255),b
  4507  003BD2  0E00               	movlw	0
  4508  003BD4  EC63  F032         	call	_DATAEE_WriteByte
  4509  003BD8                     l14854:
  4510                           
  4511                           ;main.c: 98: }
  4512                           ;main.c: 101: operationType = USB;
  4513  003BD8  0E00               	movlw	0
  4514  003BDA  0100               	movlb	0	; () banked
  4515  003BDC  6FE8               	movwf	_operationType& (0+255),b
  4516                           
  4517                           ; BSR set to: 0
  4518                           ;main.c: 102: USBapp_handlerState(USB_STARTUP);
  4519  003BDE  0E00               	movlw	0
  4520  003BE0  EC6C  F035         	call	_USBapp_handlerState
  4521                           
  4522                           ;main.c: 104: oled_clear();
  4523  003BE4  ECAB  F034         	call	_oled_clear	;wreg free
  4524                           
  4525                           ;main.c: 105: oled_putString("Microchip Mote",0,0);
  4526  003BE8  0E1F               	movlw	low STR_1
  4527  003BEA  0100               	movlb	0	; () banked
  4528  003BEC  6F71               	movwf	oled_putString@string& (0+255),b
  4529  003BEE  0E7D               	movlw	high STR_1
  4530  003BF0  0100               	movlb	0	; () banked
  4531  003BF2  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4532  003BF4  0E00               	movlw	0
  4533  003BF6  0100               	movlb	0	; () banked
  4534  003BF8  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4535  003BFA  0E00               	movlw	0
  4536  003BFC  0100               	movlb	0	; () banked
  4537  003BFE  6F74               	movwf	oled_putString@start_page& (0+255),b
  4538  003C00  EC49  F02F         	call	_oled_putString	;wreg free
  4539                           
  4540                           ;main.c: 106: oled_putString("   LoRa Demo  ",0,1);
  4541  003C04  0E01               	movlw	low STR_2
  4542  003C06  0100               	movlb	0	; () banked
  4543  003C08  6F71               	movwf	oled_putString@string& (0+255),b
  4544  003C0A  0E7D               	movlw	high STR_2
  4545  003C0C  0100               	movlb	0	; () banked
  4546  003C0E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4547  003C10  0E00               	movlw	0
  4548  003C12  0100               	movlb	0	; () banked
  4549  003C14  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4550  003C16  0E01               	movlw	1
  4551  003C18  0100               	movlb	0	; () banked
  4552  003C1A  6F74               	movwf	oled_putString@start_page& (0+255),b
  4553  003C1C  EC49  F02F         	call	_oled_putString	;wreg free
  4554                           
  4555                           ;main.c: 107: oled_putString(" V 1.0.1 Code ",0,3);
  4556  003C20  0E10               	movlw	low STR_3
  4557  003C22  0100               	movlb	0	; () banked
  4558  003C24  6F71               	movwf	oled_putString@string& (0+255),b
  4559  003C26  0E7D               	movlw	high STR_3
  4560  003C28  0100               	movlb	0	; () banked
  4561  003C2A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4562  003C2C  0E00               	movlw	0
  4563  003C2E  0100               	movlb	0	; () banked
  4564  003C30  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4565  003C32  0E03               	movlw	3
  4566  003C34  0100               	movlb	0	; () banked
  4567  003C36  6F74               	movwf	oled_putString@start_page& (0+255),b
  4568  003C38  EC49  F02F         	call	_oled_putString	;wreg free
  4569                           
  4570                           ;main.c: 108: moteApp_delayms(1000);
  4571  003C3C  0E03               	movlw	3
  4572  003C3E  0100               	movlb	0	; () banked
  4573  003C40  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4574  003C42  0EE8               	movlw	232
  4575  003C44  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4576  003C46  ECD9  F032         	call	_moteApp_delayms	;wreg free
  4577                           
  4578                           ;main.c: 112: {
  4579                           ;main.c: 114: switch (operationType)
  4580                           
  4581                           ;main.c: 111: while(1)
  4582  003C4A  D015               	goto	l14882
  4583  003C4C  D7FF               	goto	l60
  4584  003C4E                     l14868:
  4585                           
  4586                           ;main.c: 120: USBapp_Handler();
  4587  003C4E  ECA0  F026         	call	_USBapp_Handler	;wreg free
  4588                           
  4589                           ;main.c: 122: operationType = MOTE;
  4590  003C52  0E01               	movlw	1
  4591  003C54  0100               	movlb	0	; () banked
  4592  003C56  6FE8               	movwf	_operationType& (0+255),b
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;main.c: 123: MOTEapp_handlerState(MOTE_STARTUP);
  4596  003C58  0E01               	movlw	1
  4597  003C5A  EC71  F035         	call	_MOTEapp_handlerState
  4598                           
  4599                           ;main.c: 124: break;
  4600  003C5E  D00B               	goto	l14882
  4601  003C60                     l14874:
  4602                           
  4603                           ;main.c: 126: if (moteHandler() == MOTE_SWAP)
  4604  003C60  ECDC  F016         	call	_moteHandler	;wreg free
  4605  003C64  0A04               	xorlw	4
  4606  003C66  A4D8               	btfss	status,2,c
  4607  003C68  D006               	goto	l14882
  4608                           
  4609                           ;main.c: 127: {
  4610                           ;main.c: 129: operationType = USB;
  4611  003C6A  0E00               	movlw	0
  4612  003C6C  0100               	movlb	0	; () banked
  4613  003C6E  6FE8               	movwf	_operationType& (0+255),b
  4614                           
  4615                           ; BSR set to: 0
  4616                           ;main.c: 130: USBapp_handlerState(USB_STARTUP);
  4617  003C70  0E00               	movlw	0
  4618  003C72  EC6C  F035         	call	_USBapp_handlerState
  4619  003C76                     l14882:
  4620  003C76  0100               	movlb	0	; () banked
  4621  003C78  51E8               	movf	_operationType& (0+255),w,b
  4622                           
  4623                           ; Switch size 1, requested type "space"
  4624                           ; Number of cases is 2, Range of values is 0 to 1
  4625                           ; switch strategies available:
  4626                           ; Name         Instructions Cycles
  4627                           ; simple_byte            7     4 (average)
  4628                           ;	Chosen strategy is simple_byte
  4629  003C7A  0A00               	xorlw	0	; case 0
  4630  003C7C  B4D8               	btfsc	status,2,c
  4631  003C7E  D7E7               	goto	l14868
  4632  003C80  0A01               	xorlw	1	; case 1
  4633  003C82  B4D8               	btfsc	status,2,c
  4634  003C84  D7ED               	goto	l14874
  4635  003C86  D7E2               	goto	l60
  4636  003C88                     __end_of_main:
  4637                           	opt stack 0
  4638                           tblptru	equ	0xFF8
  4639                           tblptrh	equ	0xFF7
  4640                           tblptrl	equ	0xFF6
  4641                           tablat	equ	0xFF5
  4642                           intcon	equ	0xFF2
  4643                           postinc0	equ	0xFEE
  4644                           wreg	equ	0xFE8
  4645                           postdec1	equ	0xFE5
  4646                           fsr1l	equ	0xFE1
  4647                           status	equ	0xFD8
  4648                           
  4649 ;; *************** function _test_powerup *****************
  4650 ;; Defined at:
  4651 ;;		line 62 in file "../Includes/Board/poweruptest.c"
  4652 ;; Parameters:    Size  Location     Type
  4653 ;;		None
  4654 ;; Auto vars:     Size  Location     Type
  4655 ;;		None
  4656 ;; Return value:  Size  Location     Type
  4657 ;;		None               void
  4658 ;; Registers used:
  4659 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4660 ;; Tracked objects:
  4661 ;;		On entry : 0/0
  4662 ;;		On exit  : 0/0
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4665 ;;      Params:         0       0       0       0       0       0       0       0       0
  4666 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4667 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4668 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4669 ;;Total ram usage:        0 bytes
  4670 ;; Hardware stack levels used:    1
  4671 ;; Hardware stack levels required when called:   17
  4672 ;; This function calls:
  4673 ;;		_EUSART_FlushBuffer
  4674 ;;		_moteApp_delayms
  4675 ;;		_moteApp_testSensors
  4676 ;;		_oled_clear
  4677 ;;		_test_comms
  4678 ;;		_test_leds
  4679 ;;		_test_oled
  4680 ;;		_test_switch
  4681 ;; This function is called by:
  4682 ;;		_main
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           	psect	text1
  4687  005D44                     __ptext1:
  4688                           	opt stack 0
  4689  005D44                     _test_powerup:
  4690                           	opt stack 13
  4691                           
  4692                           ;poweruptest.c: 65: test_oled();
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;incstack = 0
  4696  005D44  ECF1  F028         	call	_test_oled	;wreg free
  4697                           
  4698                           ;poweruptest.c: 66: moteApp_delayms(20);
  4699  005D48  0E00               	movlw	0
  4700  005D4A  0100               	movlb	0	; () banked
  4701  005D4C  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4702  005D4E  0E14               	movlw	20
  4703  005D50  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4704  005D52  ECD9  F032         	call	_moteApp_delayms	;wreg free
  4705                           
  4706                           ;poweruptest.c: 68: test_switch();
  4707  005D56  EC5B  F020         	call	_test_switch	;wreg free
  4708                           
  4709                           ;poweruptest.c: 70: oled_clear();
  4710  005D5A  ECAB  F034         	call	_oled_clear	;wreg free
  4711                           
  4712                           ;poweruptest.c: 71: moteApp_delayms(20);
  4713  005D5E  0E00               	movlw	0
  4714  005D60  0100               	movlb	0	; () banked
  4715  005D62  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4716  005D64  0E14               	movlw	20
  4717  005D66  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4718  005D68  ECD9  F032         	call	_moteApp_delayms	;wreg free
  4719                           
  4720                           ;poweruptest.c: 72: test_comms();
  4721  005D6C  ECDB  F02E         	call	_test_comms	;wreg free
  4722                           
  4723                           ;poweruptest.c: 73: moteApp_delayms(20);
  4724  005D70  0E00               	movlw	0
  4725  005D72  0100               	movlb	0	; () banked
  4726  005D74  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4727  005D76  0E14               	movlw	20
  4728  005D78  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4729  005D7A  ECD9  F032         	call	_moteApp_delayms	;wreg free
  4730                           
  4731                           ;poweruptest.c: 75: test_leds();
  4732  005D7E  EC7F  F02F         	call	_test_leds	;wreg free
  4733                           
  4734                           ;poweruptest.c: 78: moteApp_delayms(20);
  4735  005D82  0E00               	movlw	0
  4736  005D84  0100               	movlb	0	; () banked
  4737  005D86  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4738  005D88  0E14               	movlw	20
  4739  005D8A  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4740  005D8C  ECD9  F032         	call	_moteApp_delayms	;wreg free
  4741                           
  4742                           ;poweruptest.c: 79: EUSART_FlushBuffer();
  4743  005D90  EC4D  F031         	call	_EUSART_FlushBuffer	;wreg free
  4744                           
  4745                           ;poweruptest.c: 80: moteApp_delayms(20);
  4746  005D94  0E00               	movlw	0
  4747  005D96  0100               	movlb	0	; () banked
  4748  005D98  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4749  005D9A  0E14               	movlw	20
  4750  005D9C  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4751  005D9E  ECD9  F032         	call	_moteApp_delayms	;wreg free
  4752                           
  4753                           ;poweruptest.c: 81: moteApp_testSensors();
  4754  005DA2  EC45  F022         	call	_moteApp_testSensors	;wreg free
  4755                           
  4756                           ;poweruptest.c: 82: moteApp_delayms(3000);
  4757  005DA6  0E0B               	movlw	11
  4758  005DA8  0100               	movlb	0	; () banked
  4759  005DAA  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4760  005DAC  0EB8               	movlw	184
  4761  005DAE  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4762  005DB0  ECD9  F032         	call	_moteApp_delayms	;wreg free
  4763  005DB4  0012               	return		;funcret
  4764  005DB6                     __end_of_test_powerup:
  4765                           	opt stack 0
  4766                           tblptru	equ	0xFF8
  4767                           tblptrh	equ	0xFF7
  4768                           tblptrl	equ	0xFF6
  4769                           tablat	equ	0xFF5
  4770                           intcon	equ	0xFF2
  4771                           postinc0	equ	0xFEE
  4772                           wreg	equ	0xFE8
  4773                           postdec1	equ	0xFE5
  4774                           fsr1l	equ	0xFE1
  4775                           status	equ	0xFD8
  4776                           
  4777 ;; *************** function _test_switch *****************
  4778 ;; Defined at:
  4779 ;;		line 99 in file "../Includes/Board/poweruptest.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;		None
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;  timeout         2   23[BANK0 ] unsigned int 
  4784 ;;  buttonCheck     1   25[BANK0 ] unsigned char 
  4785 ;; Return value:  Size  Location     Type
  4786 ;;		None               void
  4787 ;; Registers used:
  4788 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4789 ;; Tracked objects:
  4790 ;;		On entry : 0/0
  4791 ;;		On exit  : 0/0
  4792 ;;		Unchanged: 0/0
  4793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4794 ;;      Params:         0       0       0       0       0       0       0       0       0
  4795 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4796 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4797 ;;      Totals:         0       4       0       0       0       0       0       0       0
  4798 ;;Total ram usage:        4 bytes
  4799 ;; Hardware stack levels used:    1
  4800 ;; Hardware stack levels required when called:   16
  4801 ;; This function calls:
  4802 ;;		_oled_clear
  4803 ;;		_oled_putString
  4804 ;; This function is called by:
  4805 ;;		_test_powerup
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           	psect	text2
  4810  0040B6                     __ptext2:
  4811                           	opt stack 0
  4812  0040B6                     _test_switch:
  4813                           	opt stack 13
  4814                           
  4815                           ;poweruptest.c: 101: uint16_t timeout = 500;
  4816                           
  4817                           ;incstack = 0
  4818  0040B6  0E01               	movlw	1
  4819  0040B8  0100               	movlb	0	; () banked
  4820  0040BA  6F78               	movwf	(test_switch@timeout+1)& (0+255),b
  4821  0040BC  0EF4               	movlw	244
  4822  0040BE  6F77               	movwf	test_switch@timeout& (0+255),b
  4823                           
  4824                           ;poweruptest.c: 102: uint8_t buttonCheck = 0x00;
  4825  0040C0  0E00               	movlw	0
  4826  0040C2  0100               	movlb	0	; () banked
  4827  0040C4  6F79               	movwf	test_switch@buttonCheck& (0+255),b
  4828                           
  4829                           ; BSR set to: 0
  4830                           ;poweruptest.c: 103: oled_clear();
  4831  0040C6  ECAB  F034         	call	_oled_clear	;wreg free
  4832                           
  4833                           ;poweruptest.c: 104: oled_putString("Button Test:",0,0);
  4834  0040CA  0EF5               	movlw	low STR_10
  4835  0040CC  0100               	movlb	0	; () banked
  4836  0040CE  6F71               	movwf	oled_putString@string& (0+255),b
  4837  0040D0  0E7D               	movlw	high STR_10
  4838  0040D2  0100               	movlb	0	; () banked
  4839  0040D4  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4840  0040D6  0E00               	movlw	0
  4841  0040D8  0100               	movlb	0	; () banked
  4842  0040DA  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4843  0040DC  0E00               	movlw	0
  4844  0040DE  0100               	movlb	0	; () banked
  4845  0040E0  6F74               	movwf	oled_putString@start_page& (0+255),b
  4846  0040E2  EC49  F02F         	call	_oled_putString	;wreg free
  4847                           
  4848                           ;poweruptest.c: 106: if( (PORTBbits.RB1 == 0) || (PORTBbits.RB0 == 0) )
  4849  0040E6  B281               	btfsc	3969,1,c	;volatile
  4850  0040E8  A081               	btfss	3969,0,c	;volatile
  4851  0040EA  D001               	goto	l13520
  4852  0040EC  D00F               	goto	l13522
  4853  0040EE                     l13520:
  4854                           
  4855                           ;poweruptest.c: 107: {
  4856                           ;poweruptest.c: 108: oled_putString("Button FAIL",0,3);
  4857  0040EE  0E7D               	movlw	low STR_11
  4858  0040F0  0100               	movlb	0	; () banked
  4859  0040F2  6F71               	movwf	oled_putString@string& (0+255),b
  4860  0040F4  0E7E               	movlw	high STR_11
  4861  0040F6  0100               	movlb	0	; () banked
  4862  0040F8  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4863  0040FA  0E00               	movlw	0
  4864  0040FC  0100               	movlb	0	; () banked
  4865  0040FE  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4866  004100  0E03               	movlw	3
  4867  004102  0100               	movlb	0	; () banked
  4868  004104  6F74               	movwf	oled_putString@start_page& (0+255),b
  4869  004106  EC49  F02F         	call	_oled_putString	;wreg free
  4870                           
  4871                           ;poweruptest.c: 109: }
  4872  00410A  D047               	goto	l13540
  4873  00410C                     l13522:
  4874                           
  4875                           ;poweruptest.c: 110: else
  4876                           ;poweruptest.c: 111: {
  4877                           ;poweruptest.c: 112: oled_putString("Press Button",0,1);
  4878  00410C  0E1C               	movlw	low STR_12
  4879  00410E  0100               	movlb	0	; () banked
  4880  004110  6F71               	movwf	oled_putString@string& (0+255),b
  4881  004112  0E7E               	movlw	high STR_12
  4882  004114  0100               	movlb	0	; () banked
  4883  004116  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4884  004118  0E00               	movlw	0
  4885  00411A  0100               	movlb	0	; () banked
  4886  00411C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4887  00411E  0E01               	movlw	1
  4888  004120  0100               	movlb	0	; () banked
  4889  004122  6F74               	movwf	oled_putString@start_page& (0+255),b
  4890  004124  EC49  F02F         	call	_oled_putString	;wreg free
  4891                           
  4892                           ;poweruptest.c: 113: }
  4893                           ;poweruptest.c: 114: while(timeout--)
  4894  004128  D038               	goto	l13540
  4895  00412A                     l126:
  4896                           
  4897                           ; BSR set to: 0
  4898                           ;poweruptest.c: 115: {
  4899                           ;poweruptest.c: 116: if(PORTBbits.RB1 == 0)
  4900  00412A  B281               	btfsc	3969,1,c	;volatile
  4901  00412C  D013               	goto	l13528
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;poweruptest.c: 117: {
  4905                           ;poweruptest.c: 118: oled_putString("Button1 PASS",0,2);
  4906  00412E  0E02               	movlw	low STR_13
  4907  004130  0100               	movlb	0	; () banked
  4908  004132  6F71               	movwf	oled_putString@string& (0+255),b
  4909  004134  0E7E               	movlw	high STR_13
  4910  004136  0100               	movlb	0	; () banked
  4911  004138  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4912  00413A  0E00               	movlw	0
  4913  00413C  0100               	movlb	0	; () banked
  4914  00413E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4915  004140  0E02               	movlw	2
  4916  004142  0100               	movlb	0	; () banked
  4917  004144  6F74               	movwf	oled_putString@start_page& (0+255),b
  4918  004146  EC49  F02F         	call	_oled_putString	;wreg free
  4919                           
  4920                           ;poweruptest.c: 119: buttonCheck = buttonCheck + 0x08;
  4921  00414A  0100               	movlb	0	; () banked
  4922  00414C  5179               	movf	test_switch@buttonCheck& (0+255),w,b
  4923  00414E  0F08               	addlw	8
  4924  004150  0100               	movlb	0	; () banked
  4925  004152  6F79               	movwf	test_switch@buttonCheck& (0+255),b
  4926  004154                     l13528:
  4927                           
  4928                           ; BSR set to: 0
  4929                           ;poweruptest.c: 120: }
  4930                           ;poweruptest.c: 121: if(PORTBbits.RB0 == 0)
  4931  004154  B081               	btfsc	3969,0,c	;volatile
  4932  004156  D013               	goto	l13534
  4933                           
  4934                           ; BSR set to: 0
  4935                           ;poweruptest.c: 122: {
  4936                           ;poweruptest.c: 123: oled_putString("Button2 PASS",0,3);
  4937  004158  0E0F               	movlw	low STR_14
  4938  00415A  0100               	movlb	0	; () banked
  4939  00415C  6F71               	movwf	oled_putString@string& (0+255),b
  4940  00415E  0E7E               	movlw	high STR_14
  4941  004160  0100               	movlb	0	; () banked
  4942  004162  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4943  004164  0E00               	movlw	0
  4944  004166  0100               	movlb	0	; () banked
  4945  004168  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4946  00416A  0E03               	movlw	3
  4947  00416C  0100               	movlb	0	; () banked
  4948  00416E  6F74               	movwf	oled_putString@start_page& (0+255),b
  4949  004170  EC49  F02F         	call	_oled_putString	;wreg free
  4950                           
  4951                           ;poweruptest.c: 124: buttonCheck = buttonCheck + 0x80;
  4952  004174  0100               	movlb	0	; () banked
  4953  004176  5179               	movf	test_switch@buttonCheck& (0+255),w,b
  4954  004178  0F80               	addlw	128
  4955  00417A  0100               	movlb	0	; () banked
  4956  00417C  6F79               	movwf	test_switch@buttonCheck& (0+255),b
  4957  00417E                     l13534:
  4958                           
  4959                           ; BSR set to: 0
  4960                           ;poweruptest.c: 125: }
  4961                           ;poweruptest.c: 126: if (buttonCheck == 0x88)
  4962  00417E  0E88               	movlw	136
  4963  004180  0100               	movlb	0	; () banked
  4964  004182  1979               	xorwf	test_switch@buttonCheck& (0+255),w,b
  4965  004184  B4D8               	btfsc	status,2,c
  4966  004186  0012               	return	
  4967                           
  4968                           ; BSR set to: 0
  4969                           ;poweruptest.c: 129: }
  4970                           ;poweruptest.c: 130: _delay((unsigned long)((10)*(48000000/4000.0)));
  4971                           
  4972                           ; BSR set to: 0
  4973                           
  4974                           ; BSR set to: 0
  4975                           ;poweruptest.c: 127: {
  4976                           ;poweruptest.c: 128: break;
  4977  004188  0E9C               	movlw	156
  4978  00418A  0100               	movlb	0	; () banked
  4979  00418C  6F76               	movwf	??_test_switch& (0+255),b
  4980  00418E  0ED7               	movlw	215
  4981  004190                     u14207:
  4982  004190  2EE8               	decfsz	wreg,f,c
  4983  004192  D7FE               	goto	u14207
  4984  004194  2F76               	decfsz	??_test_switch& (0+255),f,b
  4985  004196  D7FC               	goto	u14207
  4986  004198  F000               	nop	
  4987  00419A                     l13540:
  4988  00419A  0100               	movlb	0	; () banked
  4989  00419C  0777               	decf	test_switch@timeout& (0+255),f,b
  4990  00419E  A0D8               	btfss	status,0,c
  4991  0041A0  0778               	decf	(test_switch@timeout+1)& (0+255),f,b
  4992  0041A2  0100               	movlb	0	; () banked
  4993  0041A4  2977               	incf	test_switch@timeout& (0+255),w,b
  4994  0041A6  E1C1               	bnz	l126
  4995  0041A8  0100               	movlb	0	; () banked
  4996  0041AA  2978               	incf	(test_switch@timeout+1)& (0+255),w,b
  4997  0041AC  B4D8               	btfsc	status,2,c
  4998  0041AE  0012               	return	
  4999  0041B0  D7BC               	goto	l126
  5000  0041B2                     __end_of_test_switch:
  5001                           	opt stack 0
  5002                           tblptru	equ	0xFF8
  5003                           tblptrh	equ	0xFF7
  5004                           tblptrl	equ	0xFF6
  5005                           tablat	equ	0xFF5
  5006                           intcon	equ	0xFF2
  5007                           postinc0	equ	0xFEE
  5008                           wreg	equ	0xFE8
  5009                           postdec1	equ	0xFE5
  5010                           fsr1l	equ	0xFE1
  5011                           status	equ	0xFD8
  5012                           
  5013 ;; *************** function _test_oled *****************
  5014 ;; Defined at:
  5015 ;;		line 86 in file "../Includes/Board/poweruptest.c"
  5016 ;; Parameters:    Size  Location     Type
  5017 ;;		None
  5018 ;; Auto vars:     Size  Location     Type
  5019 ;;		None
  5020 ;; Return value:  Size  Location     Type
  5021 ;;		None               void
  5022 ;; Registers used:
  5023 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5024 ;; Tracked objects:
  5025 ;;		On entry : 0/0
  5026 ;;		On exit  : 0/0
  5027 ;;		Unchanged: 0/0
  5028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5029 ;;      Params:         0       0       0       0       0       0       0       0       0
  5030 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5031 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5032 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5033 ;;Total ram usage:        0 bytes
  5034 ;; Hardware stack levels used:    1
  5035 ;; Hardware stack levels required when called:   16
  5036 ;; This function calls:
  5037 ;;		_oled_clear
  5038 ;;		_oled_putString
  5039 ;; This function is called by:
  5040 ;;		_test_powerup
  5041 ;; This function uses a non-reentrant model
  5042 ;;
  5043                           
  5044                           	psect	text3
  5045  0051E2                     __ptext3:
  5046                           	opt stack 0
  5047  0051E2                     _test_oled:
  5048                           	opt stack 13
  5049                           
  5050                           ;poweruptest.c: 88: oled_clear();
  5051                           
  5052                           ; BSR set to: 0
  5053                           ;incstack = 0
  5054  0051E2  ECAB  F034         	call	_oled_clear	;wreg free
  5055                           
  5056                           ;poweruptest.c: 90: oled_putString("MoTe v .",0,0);
  5057  0051E6  0E3E               	movlw	low STR_4
  5058  0051E8  0100               	movlb	0	; () banked
  5059  0051EA  6F71               	movwf	oled_putString@string& (0+255),b
  5060  0051EC  0E7F               	movlw	high STR_4
  5061  0051EE  0100               	movlb	0	; () banked
  5062  0051F0  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5063  0051F2  0E00               	movlw	0
  5064  0051F4  0100               	movlb	0	; () banked
  5065  0051F6  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5066  0051F8  0E00               	movlw	0
  5067  0051FA  0100               	movlb	0	; () banked
  5068  0051FC  6F74               	movwf	oled_putString@start_page& (0+255),b
  5069  0051FE  EC49  F02F         	call	_oled_putString	;wreg free
  5070                           
  5071                           ;poweruptest.c: 91: oled_putString("0",0,6);
  5072  005202  0E8B               	movlw	low (STR_165+11)
  5073  005204  0100               	movlb	0	; () banked
  5074  005206  6F71               	movwf	oled_putString@string& (0+255),b
  5075  005208  0E7D               	movlw	high (STR_165+11)
  5076  00520A  0100               	movlb	0	; () banked
  5077  00520C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5078  00520E  0E00               	movlw	0
  5079  005210  0100               	movlb	0	; () banked
  5080  005212  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5081  005214  0E06               	movlw	6
  5082  005216  0100               	movlb	0	; () banked
  5083  005218  6F74               	movwf	oled_putString@start_page& (0+255),b
  5084  00521A  EC49  F02F         	call	_oled_putString	;wreg free
  5085                           
  5086                           ;poweruptest.c: 92: oled_putString("1",0,8);
  5087  00521E  0E98               	movlw	low (STR_167+11)
  5088  005220  0100               	movlb	0	; () banked
  5089  005222  6F71               	movwf	oled_putString@string& (0+255),b
  5090  005224  0E7D               	movlw	high (STR_167+11)
  5091  005226  0100               	movlb	0	; () banked
  5092  005228  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5093  00522A  0E00               	movlw	0
  5094  00522C  0100               	movlb	0	; () banked
  5095  00522E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5096  005230  0E08               	movlw	8
  5097  005232  0100               	movlb	0	; () banked
  5098  005234  6F74               	movwf	oled_putString@start_page& (0+255),b
  5099  005236  EC49  F02F         	call	_oled_putString	;wreg free
  5100                           
  5101                           ;poweruptest.c: 93: oled_putString("Build Date/Time",0,1);
  5102  00523A  0EC4               	movlw	low STR_7
  5103  00523C  0100               	movlb	0	; () banked
  5104  00523E  6F71               	movwf	oled_putString@string& (0+255),b
  5105  005240  0E7C               	movlw	high STR_7
  5106  005242  0100               	movlb	0	; () banked
  5107  005244  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5108  005246  0E00               	movlw	0
  5109  005248  0100               	movlb	0	; () banked
  5110  00524A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5111  00524C  0E01               	movlw	1
  5112  00524E  0100               	movlb	0	; () banked
  5113  005250  6F74               	movwf	oled_putString@start_page& (0+255),b
  5114  005252  EC49  F02F         	call	_oled_putString	;wreg free
  5115                           
  5116                           ;poweruptest.c: 94: oled_putString("Dec 15 2016",0,2);
  5117  005256  0E71               	movlw	low STR_8
  5118  005258  0100               	movlb	0	; () banked
  5119  00525A  6F71               	movwf	oled_putString@string& (0+255),b
  5120  00525C  0E7E               	movlw	high STR_8
  5121  00525E  0100               	movlb	0	; () banked
  5122  005260  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5123  005262  0E00               	movlw	0
  5124  005264  0100               	movlb	0	; () banked
  5125  005266  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5126  005268  0E02               	movlw	2
  5127  00526A  0100               	movlb	0	; () banked
  5128  00526C  6F74               	movwf	oled_putString@start_page& (0+255),b
  5129  00526E  EC49  F02F         	call	_oled_putString	;wreg free
  5130                           
  5131                           ;poweruptest.c: 95: oled_putString("11:44:31",0,3);
  5132  005272  0E47               	movlw	low STR_9
  5133  005274  0100               	movlb	0	; () banked
  5134  005276  6F71               	movwf	oled_putString@string& (0+255),b
  5135  005278  0E7F               	movlw	high STR_9
  5136  00527A  0100               	movlb	0	; () banked
  5137  00527C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5138  00527E  0E00               	movlw	0
  5139  005280  0100               	movlb	0	; () banked
  5140  005282  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5141  005284  0E03               	movlw	3
  5142  005286  0100               	movlb	0	; () banked
  5143  005288  6F74               	movwf	oled_putString@start_page& (0+255),b
  5144  00528A  EC49  F02F         	call	_oled_putString	;wreg free
  5145  00528E  0012               	return		;funcret
  5146  005290                     __end_of_test_oled:
  5147                           	opt stack 0
  5148                           tblptru	equ	0xFF8
  5149                           tblptrh	equ	0xFF7
  5150                           tblptrl	equ	0xFF6
  5151                           tablat	equ	0xFF5
  5152                           intcon	equ	0xFF2
  5153                           postinc0	equ	0xFEE
  5154                           wreg	equ	0xFE8
  5155                           postdec1	equ	0xFE5
  5156                           fsr1l	equ	0xFE1
  5157                           status	equ	0xFD8
  5158                           
  5159 ;; *************** function _test_leds *****************
  5160 ;; Defined at:
  5161 ;;		line 147 in file "../Includes/Board/poweruptest.c"
  5162 ;; Parameters:    Size  Location     Type
  5163 ;;		None
  5164 ;; Auto vars:     Size  Location     Type
  5165 ;;		None
  5166 ;; Return value:  Size  Location     Type
  5167 ;;		None               void
  5168 ;; Registers used:
  5169 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5170 ;; Tracked objects:
  5171 ;;		On entry : 0/0
  5172 ;;		On exit  : 0/0
  5173 ;;		Unchanged: 0/0
  5174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5175 ;;      Params:         0       0       0       0       0       0       0       0       0
  5176 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5177 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5178 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5179 ;;Total ram usage:        0 bytes
  5180 ;; Hardware stack levels used:    1
  5181 ;; Hardware stack levels required when called:   15
  5182 ;; This function calls:
  5183 ;;		_delayms
  5184 ;;		_oled_putString
  5185 ;; This function is called by:
  5186 ;;		_test_powerup
  5187 ;; This function uses a non-reentrant model
  5188 ;;
  5189                           
  5190                           	psect	text4
  5191  005EFE                     __ptext4:
  5192                           	opt stack 0
  5193  005EFE                     _test_leds:
  5194                           	opt stack 14
  5195                           
  5196                           ;poweruptest.c: 149: oled_putString("LED Test:",0,1);
  5197                           
  5198                           ;incstack = 0
  5199  005EFE  0E07               	movlw	low STR_16
  5200  005F00  0100               	movlb	0	; () banked
  5201  005F02  6F71               	movwf	oled_putString@string& (0+255),b
  5202  005F04  0E7F               	movlw	high STR_16
  5203  005F06  0100               	movlb	0	; () banked
  5204  005F08  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5205  005F0A  0E00               	movlw	0
  5206  005F0C  0100               	movlb	0	; () banked
  5207  005F0E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5208  005F10  0E01               	movlw	1
  5209  005F12  0100               	movlb	0	; () banked
  5210  005F14  6F74               	movwf	oled_putString@start_page& (0+255),b
  5211  005F16  EC49  F02F         	call	_oled_putString	;wreg free
  5212                           
  5213                           ;poweruptest.c: 151: LATAbits.LATA6 = 1;
  5214  005F1A  8C89               	bsf	3977,6,c	;volatile
  5215                           
  5216                           ;poweruptest.c: 152: LATAbits.LATA7 = 1;
  5217  005F1C  8E89               	bsf	3977,7,c	;volatile
  5218                           
  5219                           ;poweruptest.c: 153: delayms(500);
  5220  005F1E  0E01               	movlw	1
  5221  005F20  0100               	movlb	0	; () banked
  5222  005F22  6F61               	movwf	(delayms@t+1)& (0+255),b
  5223  005F24  0EF4               	movlw	244
  5224  005F26  6F60               	movwf	delayms@t& (0+255),b
  5225  005F28  EC9F  F032         	call	_delayms	;wreg free
  5226                           
  5227                           ;poweruptest.c: 154: LATAbits.LATA6 = 0;
  5228  005F2C  9C89               	bcf	3977,6,c	;volatile
  5229                           
  5230                           ;poweruptest.c: 155: LATAbits.LATA7 = 0;
  5231  005F2E  9E89               	bcf	3977,7,c	;volatile
  5232                           
  5233                           ;poweruptest.c: 156: delayms(500);
  5234  005F30  0E01               	movlw	1
  5235  005F32  0100               	movlb	0	; () banked
  5236  005F34  6F61               	movwf	(delayms@t+1)& (0+255),b
  5237  005F36  0EF4               	movlw	244
  5238  005F38  6F60               	movwf	delayms@t& (0+255),b
  5239  005F3A  EC9F  F032         	call	_delayms	;wreg free
  5240                           
  5241                           ;poweruptest.c: 157: LATAbits.LATA6 = 1;
  5242  005F3E  8C89               	bsf	3977,6,c	;volatile
  5243                           
  5244                           ;poweruptest.c: 158: LATAbits.LATA7 = 1;
  5245  005F40  8E89               	bsf	3977,7,c	;volatile
  5246                           
  5247                           ;poweruptest.c: 159: delayms(500);
  5248  005F42  0E01               	movlw	1
  5249  005F44  0100               	movlb	0	; () banked
  5250  005F46  6F61               	movwf	(delayms@t+1)& (0+255),b
  5251  005F48  0EF4               	movlw	244
  5252  005F4A  6F60               	movwf	delayms@t& (0+255),b
  5253  005F4C  EC9F  F032         	call	_delayms	;wreg free
  5254                           
  5255                           ;poweruptest.c: 160: LATAbits.LATA6 = 0;
  5256  005F50  9C89               	bcf	3977,6,c	;volatile
  5257                           
  5258                           ;poweruptest.c: 161: LATAbits.LATA7 = 0;
  5259  005F52  9E89               	bcf	3977,7,c	;volatile
  5260                           
  5261                           ;poweruptest.c: 162: delayms(500);
  5262  005F54  0E01               	movlw	1
  5263  005F56  0100               	movlb	0	; () banked
  5264  005F58  6F61               	movwf	(delayms@t+1)& (0+255),b
  5265  005F5A  0EF4               	movlw	244
  5266  005F5C  6F60               	movwf	delayms@t& (0+255),b
  5267  005F5E  EC9F  F032         	call	_delayms	;wreg free
  5268  005F62  0012               	return		;funcret
  5269  005F64                     __end_of_test_leds:
  5270                           	opt stack 0
  5271                           tblptru	equ	0xFF8
  5272                           tblptrh	equ	0xFF7
  5273                           tblptrl	equ	0xFF6
  5274                           tablat	equ	0xFF5
  5275                           intcon	equ	0xFF2
  5276                           postinc0	equ	0xFEE
  5277                           wreg	equ	0xFE8
  5278                           postdec1	equ	0xFE5
  5279                           fsr1l	equ	0xFE1
  5280                           status	equ	0xFD8
  5281                           
  5282 ;; *************** function _test_comms *****************
  5283 ;; Defined at:
  5284 ;;		line 134 in file "../Includes/Board/poweruptest.c"
  5285 ;; Parameters:    Size  Location     Type
  5286 ;;		None
  5287 ;; Auto vars:     Size  Location     Type
  5288 ;;		None
  5289 ;; Return value:  Size  Location     Type
  5290 ;;		None               void
  5291 ;; Registers used:
  5292 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5293 ;; Tracked objects:
  5294 ;;		On entry : 0/0
  5295 ;;		On exit  : 0/0
  5296 ;;		Unchanged: 0/0
  5297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5298 ;;      Params:         0       0       0       0       0       0       0       0       0
  5299 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5300 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5301 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5302 ;;Total ram usage:        0 bytes
  5303 ;; Hardware stack levels used:    1
  5304 ;; Hardware stack levels required when called:   15
  5305 ;; This function calls:
  5306 ;;		_delayms
  5307 ;;		_moteApp_toggleLeds
  5308 ;;		_oled_putString
  5309 ;; This function is called by:
  5310 ;;		_test_powerup
  5311 ;; This function uses a non-reentrant model
  5312 ;;
  5313                           
  5314                           	psect	text5
  5315  005DB6                     __ptext5:
  5316                           	opt stack 0
  5317  005DB6                     _test_comms:
  5318                           	opt stack 14
  5319                           
  5320                           ;poweruptest.c: 136: oled_putString("Comm Test:",0,0);
  5321                           
  5322                           ;incstack = 0
  5323  005DB6  0EC0               	movlw	low STR_15
  5324  005DB8  0100               	movlb	0	; () banked
  5325  005DBA  6F71               	movwf	oled_putString@string& (0+255),b
  5326  005DBC  0E7E               	movlw	high STR_15
  5327  005DBE  0100               	movlb	0	; () banked
  5328  005DC0  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5329  005DC2  0E00               	movlw	0
  5330  005DC4  0100               	movlb	0	; () banked
  5331  005DC6  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5332  005DC8  0E00               	movlw	0
  5333  005DCA  0100               	movlb	0	; () banked
  5334  005DCC  6F74               	movwf	oled_putString@start_page& (0+255),b
  5335  005DCE  EC49  F02F         	call	_oled_putString	;wreg free
  5336                           
  5337                           ;poweruptest.c: 137: moteApp_toggleLeds(1);
  5338  005DD2  0E01               	movlw	1
  5339  005DD4  ECD9  F020         	call	_moteApp_toggleLeds
  5340                           
  5341                           ;poweruptest.c: 138: delayms(500);
  5342  005DD8  0E01               	movlw	1
  5343  005DDA  0100               	movlb	0	; () banked
  5344  005DDC  6F61               	movwf	(delayms@t+1)& (0+255),b
  5345  005DDE  0EF4               	movlw	244
  5346  005DE0  6F60               	movwf	delayms@t& (0+255),b
  5347  005DE2  EC9F  F032         	call	_delayms	;wreg free
  5348                           
  5349                           ;poweruptest.c: 139: moteApp_toggleLeds(0);
  5350  005DE6  0E00               	movlw	0
  5351  005DE8  ECD9  F020         	call	_moteApp_toggleLeds
  5352                           
  5353                           ;poweruptest.c: 140: delayms(500);
  5354  005DEC  0E01               	movlw	1
  5355  005DEE  0100               	movlb	0	; () banked
  5356  005DF0  6F61               	movwf	(delayms@t+1)& (0+255),b
  5357  005DF2  0EF4               	movlw	244
  5358  005DF4  6F60               	movwf	delayms@t& (0+255),b
  5359  005DF6  EC9F  F032         	call	_delayms	;wreg free
  5360                           
  5361                           ;poweruptest.c: 141: moteApp_toggleLeds(1);
  5362  005DFA  0E01               	movlw	1
  5363  005DFC  ECD9  F020         	call	_moteApp_toggleLeds
  5364                           
  5365                           ;poweruptest.c: 142: delayms(500);
  5366  005E00  0E01               	movlw	1
  5367  005E02  0100               	movlb	0	; () banked
  5368  005E04  6F61               	movwf	(delayms@t+1)& (0+255),b
  5369  005E06  0EF4               	movlw	244
  5370  005E08  6F60               	movwf	delayms@t& (0+255),b
  5371  005E0A  EC9F  F032         	call	_delayms	;wreg free
  5372                           
  5373                           ;poweruptest.c: 143: moteApp_toggleLeds(0);
  5374  005E0E  0E00               	movlw	0
  5375  005E10  ECD9  F020         	call	_moteApp_toggleLeds
  5376                           
  5377                           ;poweruptest.c: 144: delayms(500);
  5378  005E14  0E01               	movlw	1
  5379  005E16  0100               	movlb	0	; () banked
  5380  005E18  6F61               	movwf	(delayms@t+1)& (0+255),b
  5381  005E1A  0EF4               	movlw	244
  5382  005E1C  6F60               	movwf	delayms@t& (0+255),b
  5383  005E1E  EC9F  F032         	call	_delayms	;wreg free
  5384  005E22  0012               	return		;funcret
  5385  005E24                     __end_of_test_comms:
  5386                           	opt stack 0
  5387                           tblptru	equ	0xFF8
  5388                           tblptrh	equ	0xFF7
  5389                           tblptrl	equ	0xFF6
  5390                           tablat	equ	0xFF5
  5391                           intcon	equ	0xFF2
  5392                           postinc0	equ	0xFEE
  5393                           wreg	equ	0xFE8
  5394                           postdec1	equ	0xFE5
  5395                           fsr1l	equ	0xFE1
  5396                           status	equ	0xFD8
  5397                           
  5398 ;; *************** function _moteApp_toggleLeds *****************
  5399 ;; Defined at:
  5400 ;;		line 1334 in file "../Includes/Board/MOTEapp.c"
  5401 ;; Parameters:    Size  Location     Type
  5402 ;;  state           1    wreg     unsigned char 
  5403 ;; Auto vars:     Size  Location     Type
  5404 ;;  state           1    4[BANK0 ] unsigned char 
  5405 ;; Return value:  Size  Location     Type
  5406 ;;		None               void
  5407 ;; Registers used:
  5408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5409 ;; Tracked objects:
  5410 ;;		On entry : 0/0
  5411 ;;		On exit  : 0/0
  5412 ;;		Unchanged: 0/0
  5413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5414 ;;      Params:         0       0       0       0       0       0       0       0       0
  5415 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5416 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5417 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5418 ;;Total ram usage:        2 bytes
  5419 ;; Hardware stack levels used:    1
  5420 ;; Hardware stack levels required when called:   14
  5421 ;; This function calls:
  5422 ;;		_sendCommand
  5423 ;; This function is called by:
  5424 ;;		_test_comms
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427                           
  5428                           	psect	text6
  5429  0041B2                     __ptext6:
  5430                           	opt stack 0
  5431  0041B2                     _moteApp_toggleLeds:
  5432                           	opt stack 14
  5433                           
  5434                           ;incstack = 0
  5435                           ;moteApp_toggleLeds@state stored from wreg
  5436  0041B2  0100               	movlb	0	; () banked
  5437  0041B4  6F64               	movwf	moteApp_toggleLeds@state& (0+255),b
  5438                           
  5439                           ;MOTEapp.c: 1336: _delay((unsigned long)((16)*(48000000/4000.0)));
  5440  0041B6  0EFA               	movlw	250
  5441  0041B8  0100               	movlb	0	; () banked
  5442  0041BA  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5443  0041BC  0E58               	movlw	88
  5444  0041BE                     u14217:
  5445  0041BE  2EE8               	decfsz	wreg,f,c
  5446  0041C0  D7FE               	goto	u14217
  5447  0041C2  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5448  0041C4  D7FC               	goto	u14217
  5449  0041C6  D000               	nop2	
  5450                           
  5451                           ;MOTEapp.c: 1337: _delay((unsigned long)((16)*(48000000/4000.0)));
  5452  0041C8  0EFA               	movlw	250
  5453  0041CA  0100               	movlb	0	; () banked
  5454  0041CC  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5455  0041CE  0E58               	movlw	88
  5456  0041D0                     u14227:
  5457  0041D0  2EE8               	decfsz	wreg,f,c
  5458  0041D2  D7FE               	goto	u14227
  5459  0041D4  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5460  0041D6  D7FC               	goto	u14227
  5461  0041D8  D000               	nop2	
  5462                           
  5463                           ;MOTEapp.c: 1338: _delay((unsigned long)((16)*(48000000/4000.0)));
  5464  0041DA  0EFA               	movlw	250
  5465  0041DC  0100               	movlb	0	; () banked
  5466  0041DE  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5467  0041E0  0E58               	movlw	88
  5468  0041E2                     u14237:
  5469  0041E2  2EE8               	decfsz	wreg,f,c
  5470  0041E4  D7FE               	goto	u14237
  5471  0041E6  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5472  0041E8  D7FC               	goto	u14237
  5473  0041EA  D000               	nop2	
  5474                           
  5475                           ;MOTEapp.c: 1339: if (state)
  5476  0041EC  0100               	movlb	0	; () banked
  5477  0041EE  5164               	movf	moteApp_toggleLeds@state& (0+255),w,b
  5478  0041F0  0100               	movlb	0	; () banked
  5479  0041F2  B4D8               	btfsc	status,2,c
  5480  0041F4  D02C               	goto	l12874
  5481                           
  5482                           ; BSR set to: 0
  5483                           ;MOTEapp.c: 1340: {
  5484                           ;MOTEapp.c: 1341: sendCommand("sys set pindig GPIO10 1\r\n");
  5485  0041F6  0ECE               	movlw	low STR_182
  5486  0041F8  0100               	movlb	0	; () banked
  5487  0041FA  6F61               	movwf	sendCommand@string& (0+255),b
  5488  0041FC  0E79               	movlw	high STR_182
  5489  0041FE  0100               	movlb	0	; () banked
  5490  004200  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5491  004202  ECB0  F033         	call	_sendCommand	;wreg free
  5492                           
  5493                           ;MOTEapp.c: 1342: _delay((unsigned long)((16)*(48000000/4000.0)));
  5494  004206  0EFA               	movlw	250
  5495  004208  0100               	movlb	0	; () banked
  5496  00420A  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5497  00420C  0E58               	movlw	88
  5498  00420E                     u14247:
  5499  00420E  2EE8               	decfsz	wreg,f,c
  5500  004210  D7FE               	goto	u14247
  5501  004212  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5502  004214  D7FC               	goto	u14247
  5503  004216  D000               	nop2	
  5504                           
  5505                           ;MOTEapp.c: 1343: _delay((unsigned long)((16)*(48000000/4000.0)));
  5506  004218  0EFA               	movlw	250
  5507  00421A  0100               	movlb	0	; () banked
  5508  00421C  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5509  00421E  0E58               	movlw	88
  5510  004220                     u14257:
  5511  004220  2EE8               	decfsz	wreg,f,c
  5512  004222  D7FE               	goto	u14257
  5513  004224  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5514  004226  D7FC               	goto	u14257
  5515  004228  D000               	nop2	
  5516                           
  5517                           ;MOTEapp.c: 1344: _delay((unsigned long)((16)*(48000000/4000.0)));
  5518  00422A  0EFA               	movlw	250
  5519  00422C  0100               	movlb	0	; () banked
  5520  00422E  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5521  004230  0E58               	movlw	88
  5522  004232                     u14267:
  5523  004232  2EE8               	decfsz	wreg,f,c
  5524  004234  D7FE               	goto	u14267
  5525  004236  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5526  004238  D7FC               	goto	u14267
  5527  00423A  D000               	nop2	
  5528                           
  5529                           ;MOTEapp.c: 1345: sendCommand("sys set pindig GPIO11 1\r\n");
  5530  00423C  0EE8               	movlw	low STR_183
  5531  00423E  0100               	movlb	0	; () banked
  5532  004240  6F61               	movwf	sendCommand@string& (0+255),b
  5533  004242  0E79               	movlw	high STR_183
  5534  004244  0100               	movlb	0	; () banked
  5535  004246  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5536  004248  ECB0  F033         	call	_sendCommand	;wreg free
  5537                           
  5538                           ;MOTEapp.c: 1346: }
  5539  00424C  0012               	return	
  5540  00424E                     l12874:
  5541                           
  5542                           ;MOTEapp.c: 1347: else
  5543                           ;MOTEapp.c: 1348: {
  5544                           ;MOTEapp.c: 1349: sendCommand("sys set pindig GPIO10 0\r\n");
  5545  00424E  0E9A               	movlw	low STR_184
  5546  004250  0100               	movlb	0	; () banked
  5547  004252  6F61               	movwf	sendCommand@string& (0+255),b
  5548  004254  0E79               	movlw	high STR_184
  5549  004256  0100               	movlb	0	; () banked
  5550  004258  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5551  00425A  ECB0  F033         	call	_sendCommand	;wreg free
  5552                           
  5553                           ;MOTEapp.c: 1350: _delay((unsigned long)((16)*(48000000/4000.0)));
  5554  00425E  0EFA               	movlw	250
  5555  004260  0100               	movlb	0	; () banked
  5556  004262  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5557  004264  0E58               	movlw	88
  5558  004266                     u14277:
  5559  004266  2EE8               	decfsz	wreg,f,c
  5560  004268  D7FE               	goto	u14277
  5561  00426A  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5562  00426C  D7FC               	goto	u14277
  5563  00426E  D000               	nop2	
  5564                           
  5565                           ;MOTEapp.c: 1351: _delay((unsigned long)((16)*(48000000/4000.0)));
  5566  004270  0EFA               	movlw	250
  5567  004272  0100               	movlb	0	; () banked
  5568  004274  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5569  004276  0E58               	movlw	88
  5570  004278                     u14287:
  5571  004278  2EE8               	decfsz	wreg,f,c
  5572  00427A  D7FE               	goto	u14287
  5573  00427C  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5574  00427E  D7FC               	goto	u14287
  5575  004280  D000               	nop2	
  5576                           
  5577                           ;MOTEapp.c: 1352: _delay((unsigned long)((16)*(48000000/4000.0)));
  5578  004282  0EFA               	movlw	250
  5579  004284  0100               	movlb	0	; () banked
  5580  004286  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5581  004288  0E58               	movlw	88
  5582  00428A                     u14297:
  5583  00428A  2EE8               	decfsz	wreg,f,c
  5584  00428C  D7FE               	goto	u14297
  5585  00428E  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5586  004290  D7FC               	goto	u14297
  5587  004292  D000               	nop2	
  5588                           
  5589                           ;MOTEapp.c: 1353: sendCommand("sys set pindig GPIO11 0\r\n");
  5590  004294  0EB4               	movlw	low STR_185
  5591  004296  0100               	movlb	0	; () banked
  5592  004298  6F61               	movwf	sendCommand@string& (0+255),b
  5593  00429A  0E79               	movlw	high STR_185
  5594  00429C  0100               	movlb	0	; () banked
  5595  00429E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5596  0042A0  ECB0  F033         	call	_sendCommand	;wreg free
  5597  0042A4  0012               	return	
  5598  0042A6                     __end_of_moteApp_toggleLeds:
  5599                           	opt stack 0
  5600                           tblptru	equ	0xFF8
  5601                           tblptrh	equ	0xFF7
  5602                           tblptrl	equ	0xFF6
  5603                           tablat	equ	0xFF5
  5604                           intcon	equ	0xFF2
  5605                           postinc0	equ	0xFEE
  5606                           wreg	equ	0xFE8
  5607                           postdec1	equ	0xFE5
  5608                           fsr1l	equ	0xFE1
  5609                           status	equ	0xFD8
  5610                           
  5611 ;; *************** function _delayms *****************
  5612 ;; Defined at:
  5613 ;;		line 54 in file "../Includes/Board/poweruptest.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  t               2    0[BANK0 ] unsigned int 
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;  i               2    3[BANK0 ] unsigned int 
  5618 ;; Return value:  Size  Location     Type
  5619 ;;		None               void
  5620 ;; Registers used:
  5621 ;;		wreg, status,2, status,0
  5622 ;; Tracked objects:
  5623 ;;		On entry : 0/0
  5624 ;;		On exit  : 0/0
  5625 ;;		Unchanged: 0/0
  5626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5627 ;;      Params:         0       2       0       0       0       0       0       0       0
  5628 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5629 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5630 ;;      Totals:         0       5       0       0       0       0       0       0       0
  5631 ;;Total ram usage:        5 bytes
  5632 ;; Hardware stack levels used:    1
  5633 ;; Hardware stack levels required when called:   11
  5634 ;; This function calls:
  5635 ;;		Nothing
  5636 ;; This function is called by:
  5637 ;;		_test_comms
  5638 ;;		_test_leds
  5639 ;; This function uses a non-reentrant model
  5640 ;;
  5641                           
  5642                           	psect	text7
  5643  00653E                     __ptext7:
  5644                           	opt stack 0
  5645  00653E                     _delayms:
  5646                           	opt stack 17
  5647                           
  5648                           ;poweruptest.c: 56: uint16_t i;
  5649                           ;poweruptest.c: 57: for(i = 0; i < t; i++)
  5650                           
  5651                           ;incstack = 0
  5652  00653E  0E00               	movlw	0
  5653  006540  0100               	movlb	0	; () banked
  5654  006542  6F64               	movwf	(delayms@i+1)& (0+255),b
  5655  006544  0E00               	movlw	0
  5656  006546  6F63               	movwf	delayms@i& (0+255),b
  5657  006548  D00C               	goto	l109
  5658  00654A                     l12856:
  5659                           
  5660                           ; BSR set to: 0
  5661                           ;poweruptest.c: 58: {
  5662                           ;poweruptest.c: 59: _delay((unsigned long)((1)*(48000000/4000.0)));
  5663  00654A  0E10               	movlw	16
  5664  00654C  0100               	movlb	0	; () banked
  5665  00654E  6F62               	movwf	??_delayms& (0+255),b
  5666  006550  0E94               	movlw	148
  5667  006552                     u14307:
  5668  006552  2EE8               	decfsz	wreg,f,c
  5669  006554  D7FE               	goto	u14307
  5670  006556  2F62               	decfsz	??_delayms& (0+255),f,b
  5671  006558  D7FC               	goto	u14307
  5672  00655A  D000               	nop2	
  5673  00655C  0100               	movlb	0	; () banked
  5674  00655E  4B63               	infsnz	delayms@i& (0+255),f,b
  5675  006560  2B64               	incf	(delayms@i+1)& (0+255),f,b
  5676  006562                     l109:
  5677                           
  5678                           ; BSR set to: 0
  5679  006562  0100               	movlb	0	; () banked
  5680  006564  5160               	movf	delayms@t& (0+255),w,b
  5681  006566  0100               	movlb	0	; () banked
  5682  006568  5D63               	subwf	delayms@i& (0+255),w,b
  5683  00656A  0100               	movlb	0	; () banked
  5684  00656C  5161               	movf	(delayms@t+1)& (0+255),w,b
  5685  00656E  0100               	movlb	0	; () banked
  5686  006570  5964               	subwfb	(delayms@i+1)& (0+255),w,b
  5687  006572  B0D8               	btfsc	status,0,c
  5688  006574  0012               	return	
  5689  006576  D7E9               	goto	l12856
  5690  006578                     __end_of_delayms:
  5691                           	opt stack 0
  5692                           tblptru	equ	0xFF8
  5693                           tblptrh	equ	0xFF7
  5694                           tblptrl	equ	0xFF6
  5695                           tablat	equ	0xFF5
  5696                           intcon	equ	0xFF2
  5697                           postinc0	equ	0xFEE
  5698                           wreg	equ	0xFE8
  5699                           postdec1	equ	0xFE5
  5700                           fsr1l	equ	0xFE1
  5701                           status	equ	0xFD8
  5702                           
  5703 ;; *************** function _moteApp_testSensors *****************
  5704 ;; Defined at:
  5705 ;;		line 1438 in file "../Includes/Board/MOTEapp.c"
  5706 ;; Parameters:    Size  Location     Type
  5707 ;;		None
  5708 ;; Auto vars:     Size  Location     Type
  5709 ;;  dummyValue      2    0        unsigned int 
  5710 ;; Return value:  Size  Location     Type
  5711 ;;		None               void
  5712 ;; Registers used:
  5713 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5714 ;; Tracked objects:
  5715 ;;		On entry : 0/0
  5716 ;;		On exit  : 0/0
  5717 ;;		Unchanged: 0/0
  5718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5719 ;;      Params:         0       0       0       0       0       0       0       0       0
  5720 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5721 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5722 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5723 ;;Total ram usage:        1 bytes
  5724 ;; Hardware stack levels used:    1
  5725 ;; Hardware stack levels required when called:   16
  5726 ;; This function calls:
  5727 ;;		_ADC_TempConversion
  5728 ;;		_moteApp_convertSensorValue
  5729 ;;		_moteApp_getLightValue
  5730 ;;		_moteApp_getTempValue
  5731 ;;		_moteApp_setSensorsInput
  5732 ;;		_oled_clear
  5733 ;;		_oled_putChar
  5734 ;;		_oled_putString
  5735 ;;		_oled_putint8
  5736 ;; This function is called by:
  5737 ;;		_test_powerup
  5738 ;; This function uses a non-reentrant model
  5739 ;;
  5740                           
  5741                           	psect	text8
  5742  00448A                     __ptext8:
  5743                           	opt stack 0
  5744  00448A                     _moteApp_testSensors:
  5745                           	opt stack 13
  5746                           
  5747                           ;MOTEapp.c: 1441: moteApp_setSensorsInput();
  5748                           
  5749                           ; BSR set to: 0
  5750                           ;incstack = 0
  5751  00448A  EC6B  F02C         	call	_moteApp_setSensorsInput	;wreg free
  5752                           
  5753                           ;MOTEapp.c: 1443: uint16_t dummyValue;
  5754                           ;MOTEapp.c: 1444: oled_clear();
  5755  00448E  ECAB  F034         	call	_oled_clear	;wreg free
  5756                           
  5757                           ;MOTEapp.c: 1445: oled_putString("ADC Test",0,0);
  5758  004492  0E59               	movlw	low STR_17
  5759  004494  0100               	movlb	0	; () banked
  5760  004496  6F71               	movwf	oled_putString@string& (0+255),b
  5761  004498  0E7F               	movlw	high STR_17
  5762  00449A  0100               	movlb	0	; () banked
  5763  00449C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5764  00449E  0E00               	movlw	0
  5765  0044A0  0100               	movlb	0	; () banked
  5766  0044A2  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5767  0044A4  0E00               	movlw	0
  5768  0044A6  0100               	movlb	0	; () banked
  5769  0044A8  6F74               	movwf	oled_putString@start_page& (0+255),b
  5770  0044AA  EC49  F02F         	call	_oled_putString	;wreg free
  5771                           
  5772                           ;MOTEapp.c: 1446: oled_putString("Light =",0,1);
  5773  0044AE  0E72               	movlw	low STR_19
  5774  0044B0  0100               	movlb	0	; () banked
  5775  0044B2  6F71               	movwf	oled_putString@string& (0+255),b
  5776  0044B4  0E7F               	movlw	high STR_19
  5777  0044B6  0100               	movlb	0	; () banked
  5778  0044B8  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5779  0044BA  0E00               	movlw	0
  5780  0044BC  0100               	movlb	0	; () banked
  5781  0044BE  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5782  0044C0  0E01               	movlw	1
  5783  0044C2  0100               	movlb	0	; () banked
  5784  0044C4  6F74               	movwf	oled_putString@start_page& (0+255),b
  5785  0044C6  EC49  F02F         	call	_oled_putString	;wreg free
  5786                           
  5787                           ;MOTEapp.c: 1447: oled_putString("Temp  =",0,2);
  5788  0044CA  0E6A               	movlw	low STR_18
  5789  0044CC  0100               	movlb	0	; () banked
  5790  0044CE  6F71               	movwf	oled_putString@string& (0+255),b
  5791  0044D0  0E7F               	movlw	high STR_18
  5792  0044D2  0100               	movlb	0	; () banked
  5793  0044D4  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5794  0044D6  0E00               	movlw	0
  5795  0044D8  0100               	movlb	0	; () banked
  5796  0044DA  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5797  0044DC  0E02               	movlw	2
  5798  0044DE  0100               	movlb	0	; () banked
  5799  0044E0  6F74               	movwf	oled_putString@start_page& (0+255),b
  5800  0044E2  EC49  F02F         	call	_oled_putString	;wreg free
  5801                           
  5802                           ;MOTEapp.c: 1448: oled_putChar('C',14,2);
  5803  0044E6  0E0E               	movlw	14
  5804  0044E8  0100               	movlb	0	; () banked
  5805  0044EA  6F62               	movwf	oled_putChar@station_dot& (0+255),b
  5806  0044EC  0E02               	movlw	2
  5807  0044EE  0100               	movlb	0	; () banked
  5808  0044F0  6F63               	movwf	oled_putChar@start_page& (0+255),b
  5809  0044F2  0E43               	movlw	67
  5810  0044F4  EC48  F02A         	call	_oled_putChar
  5811                           
  5812                           ;MOTEapp.c: 1449: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  5813  0044F8  EC75  F031         	call	_moteApp_getTempValue	;wreg free
  5814  0044FC  C063  F071         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  5815  004500  C064  F072         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  5816  004504  EC3E  F02B         	call	_moteApp_convertSensorValue	;wreg free
  5817  004508  C071  F0C5         	movff	?_moteApp_convertSensorValue,_temperature
  5818  00450C  C072  F0C6         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  5819                           
  5820                           ;MOTEapp.c: 1450: temperature = ADC_TempConversion(temperature);
  5821  004510  0100               	movlb	0	; () banked
  5822  004512  51C5               	movf	_temperature& (0+255),w,b
  5823  004514  EC53  F021         	call	_ADC_TempConversion
  5824  004518  0100               	movlb	0	; () banked
  5825  00451A  6FAC               	movwf	??_moteApp_testSensors& (0+255),b
  5826  00451C  0100               	movlb	0	; () banked
  5827  00451E  51AC               	movf	??_moteApp_testSensors& (0+255),w,b
  5828  004520  0100               	movlb	0	; () banked
  5829  004522  6FC5               	movwf	_temperature& (0+255),b
  5830  004524  6BC6               	clrf	(_temperature+1)& (0+255),b
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;MOTEapp.c: 1451: oled_putint8(temperature, 10, 2);
  5834  004526  0E0A               	movlw	10
  5835  004528  0100               	movlb	0	; () banked
  5836  00452A  6F76               	movwf	oled_putint8@station_dot& (0+255),b
  5837  00452C  0E02               	movlw	2
  5838  00452E  0100               	movlb	0	; () banked
  5839  004530  6F77               	movwf	oled_putint8@start_page& (0+255),b
  5840  004532  0100               	movlb	0	; () banked
  5841  004534  51C5               	movf	_temperature& (0+255),w,b
  5842  004536  EC36  F026         	call	_oled_putint8
  5843                           
  5844                           ;MOTEapp.c: 1452: __nop();
  5845  00453A  F000               	nop	
  5846                           
  5847                           ;MOTEapp.c: 1453: oled_putString("    ", 10, 1);
  5848  00453C  0E73               	movlw	low (STR_40+12)
  5849  00453E  0100               	movlb	0	; () banked
  5850  004540  6F71               	movwf	oled_putString@string& (0+255),b
  5851  004542  0E7A               	movlw	high (STR_40+12)
  5852  004544  0100               	movlb	0	; () banked
  5853  004546  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5854  004548  0E0A               	movlw	10
  5855  00454A  0100               	movlb	0	; () banked
  5856  00454C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5857  00454E  0E01               	movlw	1
  5858  004550  0100               	movlb	0	; () banked
  5859  004552  6F74               	movwf	oled_putString@start_page& (0+255),b
  5860  004554  EC49  F02F         	call	_oled_putString	;wreg free
  5861                           
  5862                           ;MOTEapp.c: 1454: oled_putString(moteApp_getLightValue(), 10, 1);
  5863  004558  EC6F  F030         	call	_moteApp_getLightValue	;wreg free
  5864  00455C  C06D  F071         	movff	?_moteApp_getLightValue,oled_putString@string
  5865  004560  C06E  F072         	movff	?_moteApp_getLightValue+1,oled_putString@string+1
  5866  004564  0E0A               	movlw	10
  5867  004566  0100               	movlb	0	; () banked
  5868  004568  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5869  00456A  0E01               	movlw	1
  5870  00456C  0100               	movlb	0	; () banked
  5871  00456E  6F74               	movwf	oled_putString@start_page& (0+255),b
  5872  004570  EC49  F02F         	call	_oled_putString	;wreg free
  5873  004574  0012               	return		;funcret
  5874  004576                     __end_of_moteApp_testSensors:
  5875                           	opt stack 0
  5876                           tblptru	equ	0xFF8
  5877                           tblptrh	equ	0xFF7
  5878                           tblptrl	equ	0xFF6
  5879                           tablat	equ	0xFF5
  5880                           intcon	equ	0xFF2
  5881                           postinc0	equ	0xFEE
  5882                           wreg	equ	0xFE8
  5883                           postdec1	equ	0xFE5
  5884                           fsr1l	equ	0xFE1
  5885                           status	equ	0xFD8
  5886                           
  5887 ;; *************** function _moteHandler *****************
  5888 ;; Defined at:
  5889 ;;		line 186 in file "../Includes/Board/MOTEapp.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;		None
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;  readMessage     1    4[BANK1 ] unsigned char 
  5894 ;;  buttonPress     1    3[BANK1 ] enum E6757
  5895 ;;  s2Button        1    2[BANK1 ] unsigned char 
  5896 ;;  gotoNextStat    1    1[BANK1 ] unsigned char 
  5897 ;;  gotoSleep       1    0[BANK1 ] unsigned char 
  5898 ;; Return value:  Size  Location     Type
  5899 ;;                  1    wreg      enum E7754
  5900 ;; Registers used:
  5901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5902 ;; Tracked objects:
  5903 ;;		On entry : 0/0
  5904 ;;		On exit  : 0/0
  5905 ;;		Unchanged: 0/0
  5906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5907 ;;      Params:         0       0       0       0       0       0       0       0       0
  5908 ;;      Locals:         0       0       5       0       0       0       0       0       0
  5909 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5910 ;;      Totals:         0       1       5       0       0       0       0       0       0
  5911 ;;Total ram usage:        6 bytes
  5912 ;; Hardware stack levels used:    1
  5913 ;; Hardware stack levels required when called:   19
  5914 ;; This function calls:
  5915 ;;		_ADC_TempConversion
  5916 ;;		_MOTEapp_TimerBasedTask
  5917 ;;		_MOTEapp_getModuleResponse
  5918 ;;		_TMRapp_ClearBitFlags
  5919 ;;		_TMRapp_Handler
  5920 ;;		_USBapp_exitCDC
  5921 ;;		_USBapp_exitCDCState
  5922 ;;		_moteApp_convertSensorValue
  5923 ;;		_moteApp_getLightValue
  5924 ;;		_moteApp_getTempValue
  5925 ;;		_moteJoiningProcess
  5926 ;;		_moteRunningProcess
  5927 ;;		_oled_clear
  5928 ;;		_oled_putString
  5929 ;;		_oled_putint8
  5930 ;;		_service_pushbutton
  5931 ;; This function is called by:
  5932 ;;		_main
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936                           	psect	text9
  5937  002DB8                     __ptext9:
  5938                           	opt stack 0
  5939  002DB8                     _moteHandler:
  5940                           	opt stack 11
  5941                           
  5942                           ;MOTEapp.c: 188: bool gotoSleep = 0;
  5943                           
  5944                           ;incstack = 0
  5945  002DB8  0E00               	movlw	0
  5946  002DBA  0101               	movlb	1	; () banked
  5947  002DBC  6FEC               	movwf	moteHandler@gotoSleep& (0+255),b
  5948                           
  5949                           ;MOTEapp.c: 189: bool gotoNextState = 0;
  5950  002DBE  0E00               	movlw	0
  5951  002DC0  0101               	movlb	1	; () banked
  5952  002DC2  6FED               	movwf	moteHandler@gotoNextState& (0+255),b
  5953                           
  5954                           ;MOTEapp.c: 190: bool s2Button = 0;
  5955  002DC4  0E00               	movlw	0
  5956  002DC6  0101               	movlb	1	; () banked
  5957  002DC8  6FEE               	movwf	moteHandler@s2Button& (0+255),b
  5958                           
  5959                           ;MOTEapp.c: 191: bool readMessage = 0;
  5960  002DCA  0E00               	movlw	0
  5961  002DCC  0101               	movlb	1	; () banked
  5962  002DCE  6FF0               	movwf	moteHandler@readMessage& (0+255),b
  5963                           
  5964                           ;MOTEapp.c: 192: buttonStates_t buttonPress = Released;
  5965  002DD0  0E03               	movlw	3
  5966  002DD2  0101               	movlb	1	; () banked
  5967  002DD4  6FEF               	movwf	moteHandler@buttonPress& (0+255),b
  5968                           
  5969                           ; BSR set to: 1
  5970                           ;MOTEapp.c: 195: if (PORTAbits.RA0)
  5971  002DD6  A080               	btfss	3968,0,c	;volatile
  5972  002DD8  D009               	goto	l14730
  5973                           
  5974                           ; BSR set to: 1
  5975                           ;MOTEapp.c: 196: {
  5976                           ;MOTEapp.c: 197: if (USBapp_exitCDC() == NO_USB)
  5977  002DDA  EC83  F035         	call	_USBapp_exitCDC	;wreg free
  5978  002DDE  0900               	iorlw	0
  5979  002DE0  A4D8               	btfss	status,2,c
  5980  002DE2  D007               	goto	l14732
  5981                           
  5982                           ;MOTEapp.c: 198: moteState = MOTE_SWAP;
  5983  002DE4  0E04               	movlw	4
  5984  002DE6  0100               	movlb	0	; () banked
  5985  002DE8  6FFA               	movwf	_moteState& (0+255),b
  5986                           
  5987                           ; BSR set to: 0
  5988                           ;MOTEapp.c: 199: } else {
  5989  002DEA  D003               	goto	l14732
  5990  002DEC                     l14730:
  5991                           
  5992                           ;MOTEapp.c: 200: USBapp_exitCDCState(NO_USB);
  5993  002DEC  0E00               	movlw	0
  5994  002DEE  EC67  F035         	call	_USBapp_exitCDCState
  5995  002DF2                     l14732:
  5996                           
  5997                           ;MOTEapp.c: 201: }
  5998                           ;MOTEapp.c: 204: if ( appTimer.mSecTick )
  5999  002DF2  0100               	movlb	0	; () banked
  6000  002DF4  A1D7               	btfss	_appTimer& (0+255),0,b
  6001  002DF6  D008               	goto	l14740
  6002                           
  6003                           ; BSR set to: 0
  6004                           ;MOTEapp.c: 205: {
  6005                           ;MOTEapp.c: 207: TMRapp_ClearBitFlags();
  6006  002DF8  EC7B  F035         	call	_TMRapp_ClearBitFlags	;wreg free
  6007                           
  6008                           ;MOTEapp.c: 209: TMRapp_Handler();
  6009  002DFC  EC3F  F01B         	call	_TMRapp_Handler	;wreg free
  6010                           
  6011                           ;MOTEapp.c: 210: MOTEapp_TimerBasedTask(appTimer);
  6012  002E00  0100               	movlb	0	; () banked
  6013  002E02  51D7               	movf	_appTimer& (0+255),w,b
  6014  002E04  EC48  F034         	call	_MOTEapp_TimerBasedTask
  6015  002E08                     l14740:
  6016                           
  6017                           ;MOTEapp.c: 211: }
  6018                           ;MOTEapp.c: 214: buttonPress = service_pushbutton();
  6019  002E08  ECB2  F02D         	call	_service_pushbutton	;wreg free
  6020  002E0C  0101               	movlb	1	; () banked
  6021  002E0E  6FEF               	movwf	moteHandler@buttonPress& (0+255),b
  6022                           
  6023                           ; BSR set to: 1
  6024                           ;MOTEapp.c: 215: if (buttonPress == ShortPress1)
  6025  002E10  0101               	movlb	1	; () banked
  6026  002E12  05EF               	decf	moteHandler@buttonPress& (0+255),w,b
  6027  002E14  A4D8               	btfss	status,2,c
  6028  002E16  D007               	goto	l14746
  6029                           
  6030                           ; BSR set to: 1
  6031                           ;MOTEapp.c: 216: {
  6032                           ;MOTEapp.c: 217: secTicker = 0;
  6033  002E18  0E00               	movlw	0
  6034  002E1A  0100               	movlb	0	; () banked
  6035  002E1C  6FEF               	movwf	_secTicker& (0+255),b
  6036                           
  6037                           ;MOTEapp.c: 218: gotoNextState = 1;
  6038  002E1E  0E01               	movlw	1
  6039  002E20  0101               	movlb	1	; () banked
  6040  002E22  6FED               	movwf	moteHandler@gotoNextState& (0+255),b
  6041                           
  6042                           ;MOTEapp.c: 219: }
  6043  002E24  D00B               	goto	l14750
  6044  002E26                     l14746:
  6045                           
  6046                           ; BSR set to: 1
  6047                           ;MOTEapp.c: 220: else if (buttonPress == ShortPress2)
  6048  002E26  0E02               	movlw	2
  6049  002E28  0101               	movlb	1	; () banked
  6050  002E2A  19EF               	xorwf	moteHandler@buttonPress& (0+255),w,b
  6051  002E2C  A4D8               	btfss	status,2,c
  6052  002E2E  D006               	goto	l14750
  6053                           
  6054                           ; BSR set to: 1
  6055                           ;MOTEapp.c: 221: {
  6056                           ;MOTEapp.c: 222: secTicker = 0;
  6057  002E30  0E00               	movlw	0
  6058  002E32  0100               	movlb	0	; () banked
  6059  002E34  6FEF               	movwf	_secTicker& (0+255),b
  6060                           
  6061                           ;MOTEapp.c: 223: s2Button = 1;
  6062  002E36  0E01               	movlw	1
  6063  002E38  0101               	movlb	1	; () banked
  6064  002E3A  6FEE               	movwf	moteHandler@s2Button& (0+255),b
  6065  002E3C                     l14750:
  6066                           
  6067                           ; BSR set to: 1
  6068                           ;MOTEapp.c: 224: }
  6069                           ;MOTEapp.c: 227: if ( MOTEapp_getModuleResponse() )
  6070  002E3C  EC68  F02E         	call	_MOTEapp_getModuleResponse	;wreg free
  6071  002E40  0900               	iorlw	0
  6072  002E42  B4D8               	btfsc	status,2,c
  6073  002E44  D002               	goto	l14754
  6074                           
  6075                           ;MOTEapp.c: 228: readMessage = 1;
  6076  002E46  0E01               	movlw	1
  6077  002E48  D001               	goto	L1
  6078  002E4A                     l14754:
  6079                           
  6080                           ;MOTEapp.c: 229: else
  6081                           ;MOTEapp.c: 230: readMessage = 0;
  6082  002E4A  0E00               	movlw	0
  6083  002E4C                     L1:
  6084  002E4C  0101               	movlb	1	; () banked
  6085  002E4E  6FF0               	movwf	moteHandler@readMessage& (0+255),b
  6086                           
  6087                           ; BSR set to: 1
  6088                           ;MOTEapp.c: 233: if (runningState == runningSensorMenu)
  6089                           
  6090                           ; BSR set to: 1
  6091  002E50  0E02               	movlw	2
  6092  002E52  0100               	movlb	0	; () banked
  6093  002E54  19EE               	xorwf	_runningState& (0+255),w,b
  6094  002E56  A4D8               	btfss	status,2,c
  6095  002E58  D04B               	goto	l14774
  6096                           
  6097                           ; BSR set to: 0
  6098                           ;MOTEapp.c: 234: {
  6099                           ;MOTEapp.c: 236: if (m10SecTicker >= 100)
  6100  002E5A  0101               	movlb	1	; () banked
  6101  002E5C  5155               	movf	(_m10SecTicker+1)& (0+255),w,b
  6102  002E5E  E105               	bnz	u14090
  6103  002E60  0E64               	movlw	100
  6104  002E62  0101               	movlb	1	; () banked
  6105  002E64  5D54               	subwf	_m10SecTicker& (0+255),w,b
  6106  002E66  A0D8               	btfss	status,0,c
  6107  002E68  D043               	goto	l14774
  6108  002E6A                     u14090:
  6109                           
  6110                           ; BSR set to: 1
  6111                           ;MOTEapp.c: 237: {
  6112                           ;MOTEapp.c: 238: __nop();
  6113  002E6A  F000               	nop	
  6114                           
  6115                           ;MOTEapp.c: 239: oled_putString("    ", 6, 1);
  6116  002E6C  0E73               	movlw	low (STR_40+12)
  6117  002E6E  0100               	movlb	0	; () banked
  6118  002E70  6F71               	movwf	oled_putString@string& (0+255),b
  6119  002E72  0E7A               	movlw	high (STR_40+12)
  6120  002E74  0100               	movlb	0	; () banked
  6121  002E76  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6122  002E78  0E06               	movlw	6
  6123  002E7A  0100               	movlb	0	; () banked
  6124  002E7C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6125  002E7E  0E01               	movlw	1
  6126  002E80  0100               	movlb	0	; () banked
  6127  002E82  6F74               	movwf	oled_putString@start_page& (0+255),b
  6128  002E84  EC49  F02F         	call	_oled_putString	;wreg free
  6129                           
  6130                           ;MOTEapp.c: 240: oled_putString(moteApp_getLightValue(), 6, 1);
  6131  002E88  EC6F  F030         	call	_moteApp_getLightValue	;wreg free
  6132  002E8C  C06D  F071         	movff	?_moteApp_getLightValue,oled_putString@string
  6133  002E90  C06E  F072         	movff	?_moteApp_getLightValue+1,oled_putString@string+1
  6134  002E94  0E06               	movlw	6
  6135  002E96  0100               	movlb	0	; () banked
  6136  002E98  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6137  002E9A  0E01               	movlw	1
  6138  002E9C  0100               	movlb	0	; () banked
  6139  002E9E  6F74               	movwf	oled_putString@start_page& (0+255),b
  6140  002EA0  EC49  F02F         	call	_oled_putString	;wreg free
  6141                           
  6142                           ;MOTEapp.c: 241: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  6143  002EA4  EC75  F031         	call	_moteApp_getTempValue	;wreg free
  6144  002EA8  C063  F071         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  6145  002EAC  C064  F072         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  6146  002EB0  EC3E  F02B         	call	_moteApp_convertSensorValue	;wreg free
  6147  002EB4  C071  F0C5         	movff	?_moteApp_convertSensorValue,_temperature
  6148  002EB8  C072  F0C6         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  6149                           
  6150                           ;MOTEapp.c: 242: temperature = ADC_TempConversion(temperature);
  6151  002EBC  0100               	movlb	0	; () banked
  6152  002EBE  51C5               	movf	_temperature& (0+255),w,b
  6153  002EC0  EC53  F021         	call	_ADC_TempConversion
  6154  002EC4  0100               	movlb	0	; () banked
  6155  002EC6  6FB6               	movwf	??_moteHandler& (0+255),b
  6156  002EC8  0100               	movlb	0	; () banked
  6157  002ECA  51B6               	movf	??_moteHandler& (0+255),w,b
  6158  002ECC  0100               	movlb	0	; () banked
  6159  002ECE  6FC5               	movwf	_temperature& (0+255),b
  6160  002ED0  6BC6               	clrf	(_temperature+1)& (0+255),b
  6161                           
  6162                           ; BSR set to: 0
  6163                           ;MOTEapp.c: 243: oled_putint8(temperature, 6, 2);
  6164  002ED2  0E06               	movlw	6
  6165  002ED4  0100               	movlb	0	; () banked
  6166  002ED6  6F76               	movwf	oled_putint8@station_dot& (0+255),b
  6167  002ED8  0E02               	movlw	2
  6168  002EDA  0100               	movlb	0	; () banked
  6169  002EDC  6F77               	movwf	oled_putint8@start_page& (0+255),b
  6170  002EDE  0100               	movlb	0	; () banked
  6171  002EE0  51C5               	movf	_temperature& (0+255),w,b
  6172  002EE2  EC36  F026         	call	_oled_putint8
  6173                           
  6174                           ;MOTEapp.c: 244: m10SecTicker = 0;
  6175  002EE6  0E00               	movlw	0
  6176  002EE8  0101               	movlb	1	; () banked
  6177  002EEA  6F55               	movwf	(_m10SecTicker+1)& (0+255),b
  6178  002EEC  0E00               	movlw	0
  6179  002EEE  6F54               	movwf	_m10SecTicker& (0+255),b
  6180  002EF0                     l14774:
  6181                           
  6182                           ;MOTEapp.c: 245: }
  6183                           ;MOTEapp.c: 246: }
  6184                           ;MOTEapp.c: 248: if(secTicker)
  6185  002EF0  0100               	movlb	0	; () banked
  6186  002EF2  51EF               	movf	_secTicker& (0+255),w,b
  6187  002EF4  B4D8               	btfsc	status,2,c
  6188  002EF6  D08A               	goto	l14812
  6189                           
  6190                           ; BSR set to: 0
  6191                           ;MOTEapp.c: 249: {
  6192                           ;MOTEapp.c: 250: if ((secTicker >= 10) && (menuTimeout))
  6193  002EF8  0E09               	movlw	9
  6194  002EFA  0100               	movlb	0	; () banked
  6195  002EFC  65EF               	cpfsgt	_secTicker& (0+255),b
  6196  002EFE  D086               	goto	l14812
  6197                           
  6198                           ; BSR set to: 0
  6199  002F00  0100               	movlb	0	; () banked
  6200  002F02  51F9               	movf	_menuTimeout& (0+255),w,b
  6201  002F04  B4D8               	btfsc	status,2,c
  6202  002F06  D082               	goto	l14812
  6203                           
  6204                           ; BSR set to: 0
  6205                           ;MOTEapp.c: 251: {
  6206                           ;MOTEapp.c: 252: gotoSleep = 1;
  6207  002F08  0E01               	movlw	1
  6208  002F0A  0101               	movlb	1	; () banked
  6209  002F0C  6FEC               	movwf	moteHandler@gotoSleep& (0+255),b
  6210                           
  6211                           ;MOTEapp.c: 253: secTicker = 0;
  6212  002F0E  0E00               	movlw	0
  6213  002F10  0100               	movlb	0	; () banked
  6214  002F12  6FEF               	movwf	_secTicker& (0+255),b
  6215                           
  6216                           ; BSR set to: 0
  6217                           ;MOTEapp.c: 254: }
  6218                           ;MOTEapp.c: 255: }
  6219                           ;MOTEapp.c: 257: switch(moteState)
  6220                           
  6221                           ; BSR set to: 0
  6222  002F14  D07B               	goto	l14812
  6223  002F16  D7FF               	goto	l383
  6224  002F18                     l14782:
  6225                           
  6226                           ;MOTEapp.c: 263: oled_clear();
  6227  002F18  ECAB  F034         	call	_oled_clear	;wreg free
  6228                           
  6229                           ;MOTEapp.c: 264: oled_putString("MOTE Mode",1,0);
  6230  002F1C  0EDF               	movlw	low STR_24
  6231  002F1E  0100               	movlb	0	; () banked
  6232  002F20  6F71               	movwf	oled_putString@string& (0+255),b
  6233  002F22  0E7E               	movlw	high STR_24
  6234  002F24  0100               	movlb	0	; () banked
  6235  002F26  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6236  002F28  0E01               	movlw	1
  6237  002F2A  0100               	movlb	0	; () banked
  6238  002F2C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6239  002F2E  0E00               	movlw	0
  6240  002F30  0100               	movlb	0	; () banked
  6241  002F32  6F74               	movwf	oled_putString@start_page& (0+255),b
  6242  002F34  EC49  F02F         	call	_oled_putString	;wreg free
  6243                           
  6244                           ;MOTEapp.c: 265: oled_putString("Starting",2,1);
  6245  002F38  0E35               	movlw	low STR_25
  6246  002F3A  0100               	movlb	0	; () banked
  6247  002F3C  6F71               	movwf	oled_putString@string& (0+255),b
  6248  002F3E  0E7F               	movlw	high STR_25
  6249  002F40  0100               	movlb	0	; () banked
  6250  002F42  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6251  002F44  0E02               	movlw	2
  6252  002F46  0100               	movlb	0	; () banked
  6253  002F48  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6254  002F4A  0E01               	movlw	1
  6255  002F4C  0100               	movlb	0	; () banked
  6256  002F4E  6F74               	movwf	oled_putString@start_page& (0+255),b
  6257  002F50  EC49  F02F         	call	_oled_putString	;wreg free
  6258                           
  6259                           ;MOTEapp.c: 266: oled_putString("ReRun PwrTst<S2>",0,3);
  6260  002F54  0EAA               	movlw	low STR_26
  6261  002F56  0100               	movlb	0	; () banked
  6262  002F58  6F71               	movwf	oled_putString@string& (0+255),b
  6263  002F5A  0E7B               	movlw	high STR_26
  6264  002F5C  0100               	movlb	0	; () banked
  6265  002F5E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6266  002F60  0E00               	movlw	0
  6267  002F62  0100               	movlb	0	; () banked
  6268  002F64  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6269  002F66  0E03               	movlw	3
  6270  002F68  0100               	movlb	0	; () banked
  6271  002F6A  6F74               	movwf	oled_putString@start_page& (0+255),b
  6272  002F6C  EC49  F02F         	call	_oled_putString	;wreg free
  6273                           
  6274                           ;MOTEapp.c: 267: activeState = moteStartup;
  6275  002F70  0E00               	movlw	0
  6276  002F72  0100               	movlb	0	; () banked
  6277  002F74  6FD5               	movwf	_activeState& (0+255),b
  6278                           
  6279                           ; BSR set to: 0
  6280                           ;MOTEapp.c: 268: moteState = MOTE_JOINING;
  6281  002F76  0E02               	movlw	2
  6282  002F78  D03B               	goto	L2
  6283  002F7A                     l14794:
  6284                           
  6285                           ; BSR set to: 0
  6286                           ;MOTEapp.c: 271: if ( moteJoiningProcess(readMessage, gotoNextState, s2Button) )
  6287  002F7A  C1ED  F076         	movff	moteHandler@gotoNextState,moteJoiningProcess@changeStates
  6288  002F7E  C1EE  F077         	movff	moteHandler@s2Button,moteJoiningProcess@selectButton
  6289  002F82  0101               	movlb	1	; () banked
  6290  002F84  51F0               	movf	moteHandler@readMessage& (0+255),w,b
  6291  002F86  EC8F  F009         	call	_moteJoiningProcess
  6292  002F8A  0900               	iorlw	0
  6293  002F8C  B4D8               	btfsc	status,2,c
  6294  002F8E  D04C               	goto	l14814
  6295                           
  6296                           ;MOTEapp.c: 272: {
  6297                           ;MOTEapp.c: 273: oled_clear();
  6298  002F90  ECAB  F034         	call	_oled_clear	;wreg free
  6299                           
  6300                           ;MOTEapp.c: 274: oled_putString("Mobile Mote -App",0,0);
  6301  002F94  0EFF               	movlw	low STR_27
  6302  002F96  0100               	movlb	0	; () banked
  6303  002F98  6F71               	movwf	oled_putString@string& (0+255),b
  6304  002F9A  0E7B               	movlw	high STR_27
  6305  002F9C  0100               	movlb	0	; () banked
  6306  002F9E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6307  002FA0  0E00               	movlw	0
  6308  002FA2  0100               	movlb	0	; () banked
  6309  002FA4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6310  002FA6  0E00               	movlw	0
  6311  002FA8  0100               	movlb	0	; () banked
  6312  002FAA  6F74               	movwf	oled_putString@start_page& (0+255),b
  6313  002FAC  EC49  F02F         	call	_oled_putString	;wreg free
  6314                           
  6315                           ;MOTEapp.c: 275: oled_putString("Navigate  Select", 0,2);
  6316  002FB0  0E10               	movlw	low STR_28
  6317  002FB2  0100               	movlb	0	; () banked
  6318  002FB4  6F71               	movwf	oled_putString@string& (0+255),b
  6319  002FB6  0E7C               	movlw	high STR_28
  6320  002FB8  0100               	movlb	0	; () banked
  6321  002FBA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6322  002FBC  0E00               	movlw	0
  6323  002FBE  0100               	movlb	0	; () banked
  6324  002FC0  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6325  002FC2  0E02               	movlw	2
  6326  002FC4  0100               	movlb	0	; () banked
  6327  002FC6  6F74               	movwf	oled_putString@start_page& (0+255),b
  6328  002FC8  EC49  F02F         	call	_oled_putString	;wreg free
  6329                           
  6330                           ;MOTEapp.c: 276: oled_putString(" (S2)      (S3) ", 0,3);
  6331  002FCC  0EDE               	movlw	low STR_29
  6332  002FCE  0100               	movlb	0	; () banked
  6333  002FD0  6F71               	movwf	oled_putString@string& (0+255),b
  6334  002FD2  0E7A               	movlw	high STR_29
  6335  002FD4  0100               	movlb	0	; () banked
  6336  002FD6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6337  002FD8  0E00               	movlw	0
  6338  002FDA  0100               	movlb	0	; () banked
  6339  002FDC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6340  002FDE  0E03               	movlw	3
  6341  002FE0  0100               	movlb	0	; () banked
  6342  002FE2  6F74               	movwf	oled_putString@start_page& (0+255),b
  6343  002FE4  EC49  F02F         	call	_oled_putString	;wreg free
  6344                           
  6345                           ;MOTEapp.c: 277: runningState = runningEnter;
  6346  002FE8  0E00               	movlw	0
  6347  002FEA  0100               	movlb	0	; () banked
  6348  002FEC  6FEE               	movwf	_runningState& (0+255),b
  6349                           
  6350                           ; BSR set to: 0
  6351                           ;MOTEapp.c: 278: moteState = MOTE_RUNNING;
  6352  002FEE  0E03               	movlw	3
  6353  002FF0                     L2:
  6354  002FF0  0100               	movlb	0	; () banked
  6355  002FF2  6FFA               	movwf	_moteState& (0+255),b
  6356                           
  6357                           ; BSR set to: 0
  6358                           ;MOTEapp.c: 279: }
  6359                           ;MOTEapp.c: 280: break;
  6360  002FF4  D019               	goto	l14814
  6361  002FF6                     l14808:
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;MOTEapp.c: 282: moteRunningProcess(gotoNextState, s2Button, readMessage, gotoSleep);
  6365  002FF6  C1EE  F0AC         	movff	moteHandler@s2Button,moteRunningProcess@selectButton
  6366  002FFA  C1F0  F0AD         	movff	moteHandler@readMessage,moteRunningProcess@messageReady
  6367  002FFE  C1EC  F0AE         	movff	moteHandler@gotoSleep,moteRunningProcess@sleepEvent
  6368  003002  0101               	movlb	1	; () banked
  6369  003004  51ED               	movf	moteHandler@gotoNextState& (0+255),w,b
  6370  003006  EC64  F000         	call	_moteRunningProcess
  6371                           
  6372                           ;MOTEapp.c: 287: }
  6373                           
  6374                           ;MOTEapp.c: 286: break;
  6375                           
  6376                           ;MOTEapp.c: 284: case MOTE_SWAP:
  6377                           
  6378                           ;MOTEapp.c: 283: break;
  6379  00300A  D00E               	goto	l14814
  6380  00300C                     l14812:
  6381  00300C  0100               	movlb	0	; () banked
  6382  00300E  51FA               	movf	_moteState& (0+255),w,b
  6383                           
  6384                           ; Switch size 1, requested type "space"
  6385                           ; Number of cases is 4, Range of values is 1 to 4
  6386                           ; switch strategies available:
  6387                           ; Name         Instructions Cycles
  6388                           ; simple_byte           13     7 (average)
  6389                           ;	Chosen strategy is simple_byte
  6390  003010  0A01               	xorlw	1	; case 1
  6391  003012  B4D8               	btfsc	status,2,c
  6392  003014  D781               	goto	l14782
  6393  003016  0A03               	xorlw	3	; case 2
  6394  003018  B4D8               	btfsc	status,2,c
  6395  00301A  D7AF               	goto	l14794
  6396  00301C  0A01               	xorlw	1	; case 3
  6397  00301E  B4D8               	btfsc	status,2,c
  6398  003020  D7EA               	goto	l14808
  6399  003022  0A07               	xorlw	7	; case 4
  6400  003024  A4D8               	btfss	status,2,c
  6401  003026  D777               	goto	l383
  6402  003028                     l14814:
  6403                           
  6404                           ;MOTEapp.c: 288: return moteState;
  6405  003028  0100               	movlb	0	; () banked
  6406  00302A  51FA               	movf	_moteState& (0+255),w,b
  6407  00302C  0012               	return	
  6408  00302E                     __end_of_moteHandler:
  6409                           	opt stack 0
  6410                           tblptru	equ	0xFF8
  6411                           tblptrh	equ	0xFF7
  6412                           tblptrl	equ	0xFF6
  6413                           tablat	equ	0xFF5
  6414                           intcon	equ	0xFF2
  6415                           postinc0	equ	0xFEE
  6416                           wreg	equ	0xFE8
  6417                           postdec1	equ	0xFE5
  6418                           fsr1l	equ	0xFE1
  6419                           status	equ	0xFD8
  6420                           
  6421 ;; *************** function _moteRunningProcess *****************
  6422 ;; Defined at:
  6423 ;;		line 487 in file "../Includes/Board/MOTEapp.c"
  6424 ;; Parameters:    Size  Location     Type
  6425 ;;  changeStates    1    wreg     unsigned char 
  6426 ;;  selectButton    1   76[BANK0 ] unsigned char 
  6427 ;;  messageReady    1   77[BANK0 ] unsigned char 
  6428 ;;  sleepEvent      1   78[BANK0 ] unsigned char 
  6429 ;; Auto vars:     Size  Location     Type
  6430 ;;  changeStates    1   85[BANK0 ] unsigned char 
  6431 ;;  counter         1   83[BANK0 ] unsigned char 
  6432 ;;  bufferReadPo    1   84[BANK0 ] unsigned char 
  6433 ;;  sizeOfUpdate    1   82[BANK0 ] unsigned char 
  6434 ;;  sizeOfUpdate    1   81[BANK0 ] unsigned char 
  6435 ;;  readByte        1   80[BANK0 ] unsigned char 
  6436 ;; Return value:  Size  Location     Type
  6437 ;;                  1    wreg      enum E7003
  6438 ;; Registers used:
  6439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/0
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6445 ;;      Params:         0       3       0       0       0       0       0       0       0
  6446 ;;      Locals:         0       6       0       0       0       0       0       0       0
  6447 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6448 ;;      Totals:         0      10       0       0       0       0       0       0       0
  6449 ;;Total ram usage:       10 bytes
  6450 ;; Hardware stack levels used:    1
  6451 ;; Hardware stack levels required when called:   18
  6452 ;; This function calls:
  6453 ;;		_ADC_TempConversion
  6454 ;;		_MOTEapp_SetDataRateSetting
  6455 ;;		_TMR2_ReadTimer
  6456 ;;		_moteApp_GoToSleep
  6457 ;;		_moteApp_add16bToDataBuffer
  6458 ;;		_moteApp_add8bToDataBuffer
  6459 ;;		_moteApp_clearBuffers
  6460 ;;		_moteApp_convertSensorValue
  6461 ;;		_moteApp_delayms
  6462 ;;		_moteApp_getLightString
  6463 ;;		_moteApp_getLightValue
  6464 ;;		_moteApp_getTempValue
  6465 ;;		_moteApp_setSensorsInput
  6466 ;;		_oled_clear
  6467 ;;		_oled_putString
  6468 ;;		_oled_putUint8
  6469 ;;		_oled_putint8
  6470 ;;		_sendDataCommand
  6471 ;;		_strcmp
  6472 ;;		_strncmp
  6473 ;; This function is called by:
  6474 ;;		_moteHandler
  6475 ;; This function uses a non-reentrant model
  6476 ;;
  6477                           
  6478                           	psect	text10
  6479  0000C8                     __ptext10:
  6480                           	opt stack 0
  6481  0000C8                     _moteRunningProcess:
  6482                           	opt stack 11
  6483                           
  6484                           ; BSR set to: 0
  6485                           ;incstack = 0
  6486                           ;moteRunningProcess@changeStates stored from wreg
  6487  0000C8  0100               	movlb	0	; () banked
  6488  0000CA  6FB5               	movwf	moteRunningProcess@changeStates& (0+255),b
  6489                           
  6490                           ;MOTEapp.c: 489: uint8_t readByte = 0;
  6491  0000CC  0E00               	movlw	0
  6492  0000CE  0100               	movlb	0	; () banked
  6493  0000D0  6FB0               	movwf	moteRunningProcess@readByte& (0+255),b
  6494                           
  6495                           ; BSR set to: 0
  6496                           ;MOTEapp.c: 491: if ((sleepEvent) && (periodicState))
  6497  0000D2  0100               	movlb	0	; () banked
  6498  0000D4  51AE               	movf	moteRunningProcess@sleepEvent& (0+255),w,b
  6499  0000D6  0100               	movlb	0	; () banked
  6500  0000D8  B4D8               	btfsc	status,2,c
  6501  0000DA  EF60  F009         	goto	l14430
  6502                           
  6503                           ; BSR set to: 0
  6504  0000DE  0100               	movlb	0	; () banked
  6505  0000E0  51FB               	movf	_periodicState& (0+255),w,b
  6506  0000E2  B4D8               	btfsc	status,2,c
  6507  0000E4  EF60  F009         	goto	l14430
  6508                           
  6509                           ; BSR set to: 0
  6510                           ;MOTEapp.c: 492: {
  6511                           ;MOTEapp.c: 493: if (sleepTicker >= periodicTimerValue)
  6512  0000E8  0100               	movlb	0	; () banked
  6513  0000EA  51FC               	movf	_periodicTimerValue& (0+255),w,b
  6514  0000EC  0100               	movlb	0	; () banked
  6515  0000EE  5DF0               	subwf	_sleepTicker& (0+255),w,b
  6516  0000F0  A0D8               	btfss	status,0,c
  6517  0000F2  D0DC               	goto	l13962
  6518                           
  6519                           ; BSR set to: 0
  6520                           ;MOTEapp.c: 494: {
  6521                           ;MOTEapp.c: 496: moteApp_clearBuffers();
  6522  0000F4  EC99  F028         	call	_moteApp_clearBuffers	;wreg free
  6523                           
  6524                           ;MOTEapp.c: 499: light = 0;
  6525  0000F8  0E00               	movlw	0
  6526  0000FA  0100               	movlb	0	; () banked
  6527  0000FC  6FC2               	movwf	(_light+1)& (0+255),b
  6528  0000FE  0E00               	movlw	0
  6529  000100  6FC1               	movwf	_light& (0+255),b
  6530                           
  6531                           ; BSR set to: 0
  6532                           ;MOTEapp.c: 500: temperature = 0;
  6533  000102  0E00               	movlw	0
  6534  000104  0100               	movlb	0	; () banked
  6535  000106  6FC6               	movwf	(_temperature+1)& (0+255),b
  6536  000108  0E00               	movlw	0
  6537  00010A  6FC5               	movwf	_temperature& (0+255),b
  6538                           
  6539                           ; BSR set to: 0
  6540                           ;MOTEapp.c: 501: __nop();
  6541  00010C  F000               	nop	
  6542                           
  6543                           ;MOTEapp.c: 503: moteApp_setSensorsInput();
  6544  00010E  EC6B  F02C         	call	_moteApp_setSensorsInput	;wreg free
  6545                           
  6546                           ;MOTEapp.c: 504: uint8_t sizeOfUpdate = 0;
  6547  000112  0E00               	movlw	0
  6548  000114  0100               	movlb	0	; () banked
  6549  000116  6FB1               	movwf	moteRunningProcess@sizeOfUpdate& (0+255),b
  6550                           
  6551                           ; BSR set to: 0
  6552                           ;MOTEapp.c: 505: light = moteApp_convertSensorValue(moteApp_getLightValue());
  6553  000118  EC6F  F030         	call	_moteApp_getLightValue	;wreg free
  6554  00011C  C06D  F071         	movff	?_moteApp_getLightValue,moteApp_convertSensorValue@string
  6555  000120  C06E  F072         	movff	?_moteApp_getLightValue+1,moteApp_convertSensorValue@string+1
  6556  000124  EC3E  F02B         	call	_moteApp_convertSensorValue	;wreg free
  6557  000128  C071  F0C1         	movff	?_moteApp_convertSensorValue,_light
  6558  00012C  C072  F0C2         	movff	?_moteApp_convertSensorValue+1,_light+1
  6559                           
  6560                           ;MOTEapp.c: 506: oled_putString(moteApp_getLightString(), 6, 1);
  6561  000130  EC47  F035         	call	_moteApp_getLightString	;wreg free
  6562  000134  C060  F071         	movff	?_moteApp_getLightString,oled_putString@string
  6563  000138  C061  F072         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  6564  00013C  0E06               	movlw	6
  6565  00013E  0100               	movlb	0	; () banked
  6566  000140  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6567  000142  0E01               	movlw	1
  6568  000144  0100               	movlb	0	; () banked
  6569  000146  6F74               	movwf	oled_putString@start_page& (0+255),b
  6570  000148  EC49  F02F         	call	_oled_putString	;wreg free
  6571                           
  6572                           ;MOTEapp.c: 508: moteApp_add16bToDataBuffer(light, 4);
  6573  00014C  C0C1  F067         	movff	_light,moteApp_add16bToDataBuffer@number
  6574  000150  C0C2  F068         	movff	_light+1,moteApp_add16bToDataBuffer@number+1
  6575  000154  0E04               	movlw	4
  6576  000156  0100               	movlb	0	; () banked
  6577  000158  6F69               	movwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),b
  6578  00015A  ECFE  F018         	call	_moteApp_add16bToDataBuffer	;wreg free
  6579                           
  6580                           ;MOTEapp.c: 509: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  6581  00015E  EC75  F031         	call	_moteApp_getTempValue	;wreg free
  6582  000162  C063  F071         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  6583  000166  C064  F072         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  6584  00016A  EC3E  F02B         	call	_moteApp_convertSensorValue	;wreg free
  6585  00016E  C071  F0C5         	movff	?_moteApp_convertSensorValue,_temperature
  6586  000172  C072  F0C6         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  6587                           
  6588                           ;MOTEapp.c: 510: temperature = ADC_TempConversion(temperature);
  6589  000176  0100               	movlb	0	; () banked
  6590  000178  51C5               	movf	_temperature& (0+255),w,b
  6591  00017A  EC53  F021         	call	_ADC_TempConversion
  6592  00017E  0100               	movlb	0	; () banked
  6593  000180  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  6594  000182  0100               	movlb	0	; () banked
  6595  000184  51AF               	movf	??_moteRunningProcess& (0+255),w,b
  6596  000186  0100               	movlb	0	; () banked
  6597  000188  6FC5               	movwf	_temperature& (0+255),b
  6598  00018A  6BC6               	clrf	(_temperature+1)& (0+255),b
  6599                           
  6600                           ; BSR set to: 0
  6601                           ;MOTEapp.c: 511: moteApp_add8bToDataBuffer(temperature, 9);
  6602  00018C  0E09               	movlw	9
  6603  00018E  0100               	movlb	0	; () banked
  6604  000190  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6605  000192  0100               	movlb	0	; () banked
  6606  000194  51C5               	movf	_temperature& (0+255),w,b
  6607  000196  EC80  F024         	call	_moteApp_add8bToDataBuffer
  6608                           
  6609                           ;MOTEapp.c: 513: sleepTicker = 0;
  6610  00019A  0E00               	movlw	0
  6611  00019C  0100               	movlb	0	; () banked
  6612  00019E  6FF0               	movwf	_sleepTicker& (0+255),b
  6613                           
  6614                           ; BSR set to: 0
  6615                           ;MOTEapp.c: 514: oled_clear();
  6616  0001A0  ECAB  F034         	call	_oled_clear	;wreg free
  6617                           
  6618                           ;MOTEapp.c: 515: oled_putString("Send Periodic Tx",0,0);
  6619  0001A4  0E32               	movlw	low STR_71
  6620  0001A6  0100               	movlb	0	; () banked
  6621  0001A8  6F71               	movwf	oled_putString@string& (0+255),b
  6622  0001AA  0E7C               	movlw	high STR_71
  6623  0001AC  0100               	movlb	0	; () banked
  6624  0001AE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6625  0001B0  0E00               	movlw	0
  6626  0001B2  0100               	movlb	0	; () banked
  6627  0001B4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6628  0001B6  0E00               	movlw	0
  6629  0001B8  0100               	movlb	0	; () banked
  6630  0001BA  6F74               	movwf	oled_putString@start_page& (0+255),b
  6631  0001BC  EC49  F02F         	call	_oled_putString	;wreg free
  6632                           
  6633                           ;MOTEapp.c: 516: oled_putString("On Port #: ",0,1);
  6634  0001C0  0E35               	movlw	low STR_72
  6635  0001C2  0100               	movlb	0	; () banked
  6636  0001C4  6F71               	movwf	oled_putString@string& (0+255),b
  6637  0001C6  0E7E               	movlw	high STR_72
  6638  0001C8  0100               	movlb	0	; () banked
  6639  0001CA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6640  0001CC  0E00               	movlw	0
  6641  0001CE  0100               	movlb	0	; () banked
  6642  0001D0  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6643  0001D2  0E01               	movlw	1
  6644  0001D4  0100               	movlb	0	; () banked
  6645  0001D6  6F74               	movwf	oled_putString@start_page& (0+255),b
  6646  0001D8  EC49  F02F         	call	_oled_putString	;wreg free
  6647                           
  6648                           ;MOTEapp.c: 517: oled_putString("L:       T: ",0,2);
  6649  0001DC  0E73               	movlw	low STR_73
  6650  0001DE  0100               	movlb	0	; () banked
  6651  0001E0  6F71               	movwf	oled_putString@string& (0+255),b
  6652  0001E2  0E7D               	movlw	high STR_73
  6653  0001E4  0100               	movlb	0	; () banked
  6654  0001E6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6655  0001E8  0E00               	movlw	0
  6656  0001EA  0100               	movlb	0	; () banked
  6657  0001EC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6658  0001EE  0E02               	movlw	2
  6659  0001F0  0100               	movlb	0	; () banked
  6660  0001F2  6F74               	movwf	oled_putString@start_page& (0+255),b
  6661  0001F4  EC49  F02F         	call	_oled_putString	;wreg free
  6662                           
  6663                           ;MOTEapp.c: 518: oled_putString(moteApp_getLightString(), 3, 2);
  6664  0001F8  EC47  F035         	call	_moteApp_getLightString	;wreg free
  6665  0001FC  C060  F071         	movff	?_moteApp_getLightString,oled_putString@string
  6666  000200  C061  F072         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  6667  000204  0E03               	movlw	3
  6668  000206  0100               	movlb	0	; () banked
  6669  000208  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6670  00020A  0E02               	movlw	2
  6671  00020C  0100               	movlb	0	; () banked
  6672  00020E  6F74               	movwf	oled_putString@start_page& (0+255),b
  6673  000210  EC49  F02F         	call	_oled_putString	;wreg free
  6674                           
  6675                           ;MOTEapp.c: 519: oled_putint8(temperature,11,2);
  6676  000214  0E0B               	movlw	11
  6677  000216  0100               	movlb	0	; () banked
  6678  000218  6F76               	movwf	oled_putint8@station_dot& (0+255),b
  6679  00021A  0E02               	movlw	2
  6680  00021C  0100               	movlb	0	; () banked
  6681  00021E  6F77               	movwf	oled_putint8@start_page& (0+255),b
  6682  000220  0100               	movlb	0	; () banked
  6683  000222  51C5               	movf	_temperature& (0+255),w,b
  6684  000224  EC36  F026         	call	_oled_putint8
  6685                           
  6686                           ;MOTEapp.c: 521: randomPortNum = TMR2_ReadTimer();
  6687  000228  EC62  F035         	call	_TMR2_ReadTimer	;wreg free
  6688  00022C  0100               	movlb	0	; () banked
  6689  00022E  6FEA               	movwf	_randomPortNum& (0+255),b
  6690                           
  6691                           ; BSR set to: 0
  6692                           ;MOTEapp.c: 523: if (!randomPortNum)
  6693  000230  0100               	movlb	0	; () banked
  6694  000232  51EA               	movf	_randomPortNum& (0+255),w,b
  6695  000234  0100               	movlb	0	; () banked
  6696  000236  A4D8               	btfss	status,2,c
  6697  000238  D002               	goto	l13944
  6698                           
  6699                           ; BSR set to: 0
  6700                           ;MOTEapp.c: 524: randomPortNum = 5;
  6701  00023A  0E05               	movlw	5
  6702  00023C  D007               	goto	L3
  6703  00023E                     l13944:
  6704                           
  6705                           ; BSR set to: 0
  6706                           ;MOTEapp.c: 525: else if (randomPortNum > 223)
  6707  00023E  0EDF               	movlw	223
  6708  000240  0100               	movlb	0	; () banked
  6709  000242  65EA               	cpfsgt	_randomPortNum& (0+255),b
  6710  000244  D005               	goto	l13948
  6711                           
  6712                           ; BSR set to: 0
  6713                           ;MOTEapp.c: 526: randomPortNum = randomPortNum - 50;
  6714  000246  0100               	movlb	0	; () banked
  6715  000248  51EA               	movf	_randomPortNum& (0+255),w,b
  6716  00024A  0FCE               	addlw	206
  6717  00024C                     L3:
  6718  00024C  0100               	movlb	0	; () banked
  6719  00024E  6FEA               	movwf	_randomPortNum& (0+255),b
  6720  000250                     l13948:
  6721                           
  6722                           ; BSR set to: 0
  6723                           ;MOTEapp.c: 528: oled_putUint8(randomPortNum,10,1);
  6724  000250  0E0A               	movlw	10
  6725  000252  0100               	movlb	0	; () banked
  6726  000254  6F76               	movwf	oled_putUint8@station_dot& (0+255),b
  6727  000256  0E01               	movlw	1
  6728  000258  0100               	movlb	0	; () banked
  6729  00025A  6F77               	movwf	oled_putUint8@start_page& (0+255),b
  6730  00025C  0100               	movlb	0	; () banked
  6731  00025E  51EA               	movf	_randomPortNum& (0+255),w,b
  6732  000260  ECF4  F029         	call	_oled_putUint8
  6733                           
  6734                           ;MOTEapp.c: 530: moteApp_add8bToDataBuffer(randomPortNum, 0);
  6735  000264  0E00               	movlw	0
  6736  000266  0100               	movlb	0	; () banked
  6737  000268  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6738  00026A  0100               	movlb	0	; () banked
  6739  00026C  51EA               	movf	_randomPortNum& (0+255),w,b
  6740  00026E  EC80  F024         	call	_moteApp_add8bToDataBuffer
  6741                           
  6742                           ;MOTEapp.c: 531: dataBuffer[3] = 0x20;
  6743  000272  0E20               	movlw	32
  6744  000274  0101               	movlb	1	; () banked
  6745  000276  6FB9               	movwf	(_dataBuffer+3)& (0+255),b
  6746                           
  6747                           ; BSR set to: 1
  6748                           ;MOTEapp.c: 534: __nop();
  6749  000278  F000               	nop	
  6750                           
  6751                           ;MOTEapp.c: 535: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  6752  00027A  0E2E               	movlw	low STR_74
  6753  00027C  0100               	movlb	0	; () banked
  6754  00027E  6F61               	movwf	sendDataCommand@string& (0+255),b
  6755  000280  0E7D               	movlw	high STR_74
  6756  000282  0100               	movlb	0	; () banked
  6757  000284  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  6758  000286  0EB6               	movlw	low _dataBuffer
  6759  000288  0100               	movlb	0	; () banked
  6760  00028A  6F63               	movwf	sendDataCommand@appData& (0+255),b
  6761  00028C  0E01               	movlw	high _dataBuffer
  6762  00028E  0100               	movlb	0	; () banked
  6763  000290  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  6764  000292  0E0C               	movlw	12
  6765  000294  0100               	movlb	0	; () banked
  6766  000296  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  6767  000298  EC5D  F025         	call	_sendDataCommand	;wreg free
  6768                           
  6769                           ;MOTEapp.c: 536: secTicker = 10 - (10 / 3);
  6770  00029C  0E07               	movlw	7
  6771  00029E  0100               	movlb	0	; () banked
  6772  0002A0  6FEF               	movwf	_secTicker& (0+255),b
  6773                           
  6774                           ; BSR set to: 0
  6775                           ;MOTEapp.c: 537: runningState = runningUplinkTransmit;
  6776  0002A2  0E08               	movlw	8
  6777  0002A4  0100               	movlb	0	; () banked
  6778  0002A6  6FEE               	movwf	_runningState& (0+255),b
  6779                           
  6780                           ;MOTEapp.c: 538: }
  6781  0002A8  EF60  F009         	goto	l14430
  6782  0002AC                     l13962:
  6783                           
  6784                           ; BSR set to: 0
  6785                           ;MOTEapp.c: 539: else
  6786                           ;MOTEapp.c: 540: {
  6787                           ;MOTEapp.c: 541: if (menuTimeout)
  6788  0002AC  0100               	movlb	0	; () banked
  6789  0002AE  51F9               	movf	_menuTimeout& (0+255),w,b
  6790  0002B0  B4D8               	btfsc	status,2,c
  6791  0002B2  D00A               	goto	l13970
  6792                           
  6793                           ; BSR set to: 0
  6794                           ;MOTEapp.c: 542: {
  6795                           ;MOTEapp.c: 543: sleepTicker++;
  6796  0002B4  0100               	movlb	0	; () banked
  6797  0002B6  2BF0               	incf	_sleepTicker& (0+255),f,b
  6798                           
  6799                           ; BSR set to: 0
  6800                           ;MOTEapp.c: 544: runningState = runningSleep;
  6801  0002B8  0E0F               	movlw	15
  6802  0002BA  0100               	movlb	0	; () banked
  6803  0002BC  6FEE               	movwf	_runningState& (0+255),b
  6804                           
  6805                           ; BSR set to: 0
  6806                           ;MOTEapp.c: 545: selectButton = 1;
  6807  0002BE  0E01               	movlw	1
  6808  0002C0  0100               	movlb	0	; () banked
  6809  0002C2  6FAC               	movwf	moteRunningProcess@selectButton& (0+255),b
  6810                           
  6811                           ;MOTEapp.c: 546: } else {
  6812  0002C4  EF60  F009         	goto	l14430
  6813  0002C8                     l13970:
  6814                           
  6815                           ; BSR set to: 0
  6816                           ;MOTEapp.c: 547: sleepTicker = 0;
  6817  0002C8  0E00               	movlw	0
  6818  0002CA  0100               	movlb	0	; () banked
  6819  0002CC  6FF0               	movwf	_sleepTicker& (0+255),b
  6820                           
  6821                           ; BSR set to: 0
  6822                           ;MOTEapp.c: 548: }
  6823                           ;MOTEapp.c: 549: }
  6824                           ;MOTEapp.c: 550: }
  6825                           ;MOTEapp.c: 553: switch(runningState)
  6826                           
  6827                           ; BSR set to: 0
  6828                           
  6829                           ; BSR set to: 0
  6830  0002CE  EF60  F009         	goto	l14430
  6831  0002D2  D7FF               	goto	l473
  6832  0002D4                     l13972:
  6833                           
  6834                           ;MOTEapp.c: 559: if ( (changeStates) || (selectButton) )
  6835  0002D4  0100               	movlb	0	; () banked
  6836  0002D6  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6837  0002D8  0100               	movlb	0	; () banked
  6838  0002DA  A4D8               	btfss	status,2,c
  6839  0002DC  D005               	goto	l13976
  6840                           
  6841                           ; BSR set to: 0
  6842  0002DE  0100               	movlb	0	; () banked
  6843  0002E0  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6844  0002E2  0100               	movlb	0	; () banked
  6845  0002E4  B4D8               	btfsc	status,2,c
  6846  0002E6  0012               	return	
  6847  0002E8                     l13976:
  6848                           
  6849                           ; BSR set to: 0
  6850                           ;MOTEapp.c: 560: {
  6851                           ;MOTEapp.c: 561: oled_clear();
  6852  0002E8  ECAB  F034         	call	_oled_clear	;wreg free
  6853                           
  6854                           ;MOTEapp.c: 562: oled_putString("  Issue Uplink  ",0,0);
  6855  0002EC  0ECD               	movlw	low STR_75
  6856  0002EE  0100               	movlb	0	; () banked
  6857  0002F0  6F71               	movwf	oled_putString@string& (0+255),b
  6858  0002F2  0E7A               	movlw	high STR_75
  6859  0002F4  0100               	movlb	0	; () banked
  6860  0002F6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6861  0002F8  0E00               	movlw	0
  6862  0002FA  0100               	movlb	0	; () banked
  6863  0002FC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6864  0002FE  0E00               	movlw	0
  6865  000300  0100               	movlb	0	; () banked
  6866  000302  6F74               	movwf	oled_putString@start_page& (0+255),b
  6867  000304  EC49  F02F         	call	_oled_putString	;wreg free
  6868                           
  6869                           ;MOTEapp.c: 563: oled_putString(" LoRaWAN Packet ",0,1);
  6870  000308  0E33               	movlw	low STR_76
  6871  00030A  0100               	movlb	0	; () banked
  6872  00030C  6F71               	movwf	oled_putString@string& (0+255),b
  6873  00030E  0E7B               	movlw	high STR_76
  6874  000310  0100               	movlb	0	; () banked
  6875  000312  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6876  000314  0E00               	movlw	0
  6877  000316  0100               	movlb	0	; () banked
  6878  000318  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6879  00031A  0E01               	movlw	1
  6880  00031C  0100               	movlb	0	; () banked
  6881  00031E  6F74               	movwf	oled_putString@start_page& (0+255),b
  6882  000320  EC49  F02F         	call	_oled_putString	;wreg free
  6883                           
  6884                           ;MOTEapp.c: 564: oled_putString("(NAV)    (SEL) ",0,3);
  6885  000324  0E84               	movlw	low STR_77
  6886  000326  0100               	movlb	0	; () banked
  6887  000328  6F71               	movwf	oled_putString@string& (0+255),b
  6888  00032A  0E7C               	movlw	high STR_77
  6889  00032C  0100               	movlb	0	; () banked
  6890  00032E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6891  000330  0E00               	movlw	0
  6892  000332  0100               	movlb	0	; () banked
  6893  000334  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6894  000336  0E03               	movlw	3
  6895  000338  0100               	movlb	0	; () banked
  6896  00033A  6F74               	movwf	oled_putString@start_page& (0+255),b
  6897  00033C  EC49  F02F         	call	_oled_putString	;wreg free
  6898                           
  6899                           ;MOTEapp.c: 565: runningState = runningUplink;
  6900  000340  0E06               	movlw	6
  6901  000342  0100               	movlb	0	; () banked
  6902  000344  6FEE               	movwf	_runningState& (0+255),b
  6903                           
  6904                           ; BSR set to: 0
  6905                           ;MOTEapp.c: 566: }
  6906                           ;MOTEapp.c: 567: break;
  6907  000346  0012               	return	
  6908  000348                     l13986:
  6909                           
  6910                           ; BSR set to: 0
  6911                           ;MOTEapp.c: 569: if (changeStates)
  6912  000348  0100               	movlb	0	; () banked
  6913  00034A  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6914  00034C  0100               	movlb	0	; () banked
  6915  00034E  B4D8               	btfsc	status,2,c
  6916  000350  D030               	goto	l13998
  6917                           
  6918                           ; BSR set to: 0
  6919                           ;MOTEapp.c: 570: {
  6920                           ;MOTEapp.c: 571: oled_clear();
  6921  000352  ECAB  F034         	call	_oled_clear	;wreg free
  6922                           
  6923                           ;MOTEapp.c: 572: oled_putString(" View Downlink  ",0,0);
  6924  000356  0EBC               	movlw	low STR_78
  6925  000358  0100               	movlb	0	; () banked
  6926  00035A  6F71               	movwf	oled_putString@string& (0+255),b
  6927  00035C  0E7A               	movlw	high STR_78
  6928  00035E  0100               	movlb	0	; () banked
  6929  000360  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6930  000362  0E00               	movlw	0
  6931  000364  0100               	movlb	0	; () banked
  6932  000366  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6933  000368  0E00               	movlw	0
  6934  00036A  0100               	movlb	0	; () banked
  6935  00036C  6F74               	movwf	oled_putString@start_page& (0+255),b
  6936  00036E  EC49  F02F         	call	_oled_putString	;wreg free
  6937                           
  6938                           ;MOTEapp.c: 573: oled_putString("  Last Message  ",0,1);
  6939  000372  0EAB               	movlw	low STR_79
  6940  000374  0100               	movlb	0	; () banked
  6941  000376  6F71               	movwf	oled_putString@string& (0+255),b
  6942  000378  0E7A               	movlw	high STR_79
  6943  00037A  0100               	movlb	0	; () banked
  6944  00037C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6945  00037E  0E00               	movlw	0
  6946  000380  0100               	movlb	0	; () banked
  6947  000382  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6948  000384  0E01               	movlw	1
  6949  000386  0100               	movlb	0	; () banked
  6950  000388  6F74               	movwf	oled_putString@start_page& (0+255),b
  6951  00038A  EC49  F02F         	call	_oled_putString	;wreg free
  6952                           
  6953                           ;MOTEapp.c: 574: oled_putString("(NAV)    (SEL) ",0,3);
  6954  00038E  0E84               	movlw	low STR_77
  6955  000390  0100               	movlb	0	; () banked
  6956  000392  6F71               	movwf	oled_putString@string& (0+255),b
  6957  000394  0E7C               	movlw	high STR_77
  6958  000396  0100               	movlb	0	; () banked
  6959  000398  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6960  00039A  0E00               	movlw	0
  6961  00039C  0100               	movlb	0	; () banked
  6962  00039E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6963  0003A0  0E03               	movlw	3
  6964  0003A2  0100               	movlb	0	; () banked
  6965  0003A4  6F74               	movwf	oled_putString@start_page& (0+255),b
  6966  0003A6  EC49  F02F         	call	_oled_putString	;wreg free
  6967                           
  6968                           ;MOTEapp.c: 575: runningState = runningDownlink;
  6969  0003AA  0E0A               	movlw	10
  6970  0003AC  0100               	movlb	0	; () banked
  6971  0003AE  6FEE               	movwf	_runningState& (0+255),b
  6972                           
  6973                           ;MOTEapp.c: 576: }
  6974  0003B0  0012               	return	
  6975  0003B2                     l13998:
  6976                           
  6977                           ; BSR set to: 0
  6978                           ;MOTEapp.c: 577: else if (selectButton)
  6979  0003B2  0100               	movlb	0	; () banked
  6980  0003B4  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6981  0003B6  0100               	movlb	0	; () banked
  6982  0003B8  B4D8               	btfsc	status,2,c
  6983  0003BA  0012               	return	
  6984                           
  6985                           ; BSR set to: 0
  6986                           ;MOTEapp.c: 578: {
  6987                           ;MOTEapp.c: 579: sleepTicker = 0;
  6988  0003BC  0E00               	movlw	0
  6989  0003BE  0100               	movlb	0	; () banked
  6990  0003C0  6FF0               	movwf	_sleepTicker& (0+255),b
  6991                           
  6992                           ; BSR set to: 0
  6993                           ;MOTEapp.c: 581: oled_clear();
  6994  0003C2  ECAB  F034         	call	_oled_clear	;wreg free
  6995                           
  6996                           ;MOTEapp.c: 582: oled_putString("Uplink Pckt Type",0,0);
  6997  0003C6  0EDD               	movlw	low STR_81
  6998  0003C8  0100               	movlb	0	; () banked
  6999  0003CA  6F71               	movwf	oled_putString@string& (0+255),b
  7000  0003CC  0E7B               	movlw	high STR_81
  7001  0003CE  0100               	movlb	0	; () banked
  7002  0003D0  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7003  0003D2  0E00               	movlw	0
  7004  0003D4  0100               	movlb	0	; () banked
  7005  0003D6  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7006  0003D8  0E00               	movlw	0
  7007  0003DA  0100               	movlb	0	; () banked
  7008  0003DC  6F74               	movwf	oled_putString@start_page& (0+255),b
  7009  0003DE  EC49  F02F         	call	_oled_putString	;wreg free
  7010                           
  7011                           ;MOTEapp.c: 583: oled_putString("Throu Port# ",0,1);
  7012  0003E2  0E66               	movlw	low STR_82
  7013  0003E4  0100               	movlb	0	; () banked
  7014  0003E6  6F71               	movwf	oled_putString@string& (0+255),b
  7015  0003E8  0E7D               	movlw	high STR_82
  7016  0003EA  0100               	movlb	0	; () banked
  7017  0003EC  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7018  0003EE  0E00               	movlw	0
  7019  0003F0  0100               	movlb	0	; () banked
  7020  0003F2  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7021  0003F4  0E01               	movlw	1
  7022  0003F6  0100               	movlb	0	; () banked
  7023  0003F8  6F74               	movwf	oled_putString@start_page& (0+255),b
  7024  0003FA  EC49  F02F         	call	_oled_putString	;wreg free
  7025                           
  7026                           ;MOTEapp.c: 585: oled_putString("(UNCNF)    (CNF) ",0,3);
  7027  0003FE  0E55               	movlw	low STR_83
  7028  000400  0100               	movlb	0	; () banked
  7029  000402  6F71               	movwf	oled_putString@string& (0+255),b
  7030  000404  0E7A               	movlw	high STR_83
  7031  000406  0100               	movlb	0	; () banked
  7032  000408  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7033  00040A  0E00               	movlw	0
  7034  00040C  0100               	movlb	0	; () banked
  7035  00040E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7036  000410  0E03               	movlw	3
  7037  000412  0100               	movlb	0	; () banked
  7038  000414  6F74               	movwf	oled_putString@start_page& (0+255),b
  7039  000416  EC49  F02F         	call	_oled_putString	;wreg free
  7040                           
  7041                           ;MOTEapp.c: 587: moteApp_clearBuffers();
  7042  00041A  EC99  F028         	call	_moteApp_clearBuffers	;wreg free
  7043                           
  7044                           ;MOTEapp.c: 588: randomPortNum = TMR2_ReadTimer();
  7045  00041E  EC62  F035         	call	_TMR2_ReadTimer	;wreg free
  7046  000422  0100               	movlb	0	; () banked
  7047  000424  6FEA               	movwf	_randomPortNum& (0+255),b
  7048                           
  7049                           ; BSR set to: 0
  7050                           ;MOTEapp.c: 590: if (!randomPortNum)
  7051  000426  0100               	movlb	0	; () banked
  7052  000428  51EA               	movf	_randomPortNum& (0+255),w,b
  7053  00042A  0100               	movlb	0	; () banked
  7054  00042C  A4D8               	btfss	status,2,c
  7055  00042E  D002               	goto	l14018
  7056                           
  7057                           ; BSR set to: 0
  7058                           ;MOTEapp.c: 591: randomPortNum = 5;
  7059  000430  0E05               	movlw	5
  7060  000432  D007               	goto	L4
  7061  000434                     l14018:
  7062                           
  7063                           ; BSR set to: 0
  7064                           ;MOTEapp.c: 592: else if (randomPortNum > 223)
  7065  000434  0EDF               	movlw	223
  7066  000436  0100               	movlb	0	; () banked
  7067  000438  65EA               	cpfsgt	_randomPortNum& (0+255),b
  7068  00043A  D005               	goto	l14022
  7069                           
  7070                           ; BSR set to: 0
  7071                           ;MOTEapp.c: 593: randomPortNum = randomPortNum - 50;
  7072  00043C  0100               	movlb	0	; () banked
  7073  00043E  51EA               	movf	_randomPortNum& (0+255),w,b
  7074  000440  0FCE               	addlw	206
  7075  000442                     L4:
  7076  000442  0100               	movlb	0	; () banked
  7077  000444  6FEA               	movwf	_randomPortNum& (0+255),b
  7078  000446                     l14022:
  7079                           
  7080                           ; BSR set to: 0
  7081                           ;MOTEapp.c: 594: oled_putUint8(randomPortNum,12,1);
  7082  000446  0E0C               	movlw	12
  7083  000448  0100               	movlb	0	; () banked
  7084  00044A  6F76               	movwf	oled_putUint8@station_dot& (0+255),b
  7085  00044C  0E01               	movlw	1
  7086  00044E  0100               	movlb	0	; () banked
  7087  000450  6F77               	movwf	oled_putUint8@start_page& (0+255),b
  7088  000452  0100               	movlb	0	; () banked
  7089  000454  51EA               	movf	_randomPortNum& (0+255),w,b
  7090  000456  ECF4  F029         	call	_oled_putUint8
  7091                           
  7092                           ;MOTEapp.c: 595: moteApp_add8bToDataBuffer(randomPortNum, 0);
  7093  00045A  0E00               	movlw	0
  7094  00045C  0100               	movlb	0	; () banked
  7095  00045E  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7096  000460  0100               	movlb	0	; () banked
  7097  000462  51EA               	movf	_randomPortNum& (0+255),w,b
  7098  000464  EC80  F024         	call	_moteApp_add8bToDataBuffer
  7099                           
  7100                           ;MOTEapp.c: 596: dataBuffer[3] = 0x20;
  7101  000468  0E20               	movlw	32
  7102  00046A  0101               	movlb	1	; () banked
  7103  00046C  6FB9               	movwf	(_dataBuffer+3)& (0+255),b
  7104                           
  7105                           ; BSR set to: 1
  7106                           ;MOTEapp.c: 598: light = 0;
  7107  00046E  0E00               	movlw	0
  7108  000470  0100               	movlb	0	; () banked
  7109  000472  6FC2               	movwf	(_light+1)& (0+255),b
  7110  000474  0E00               	movlw	0
  7111  000476  6FC1               	movwf	_light& (0+255),b
  7112                           
  7113                           ; BSR set to: 0
  7114                           ;MOTEapp.c: 599: temperature = 0;
  7115  000478  0E00               	movlw	0
  7116  00047A  0100               	movlb	0	; () banked
  7117  00047C  6FC6               	movwf	(_temperature+1)& (0+255),b
  7118  00047E  0E00               	movlw	0
  7119  000480  6FC5               	movwf	_temperature& (0+255),b
  7120                           
  7121                           ; BSR set to: 0
  7122                           ;MOTEapp.c: 600: __nop();
  7123  000482  F000               	nop	
  7124                           
  7125                           ;MOTEapp.c: 601: moteApp_setSensorsInput();
  7126  000484  EC6B  F02C         	call	_moteApp_setSensorsInput	;wreg free
  7127                           
  7128                           ;MOTEapp.c: 602: moteApp_delayms(500);
  7129  000488  0E01               	movlw	1
  7130  00048A  0100               	movlb	0	; () banked
  7131  00048C  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  7132  00048E  0EF4               	movlw	244
  7133  000490  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7134  000492  ECD9  F032         	call	_moteApp_delayms	;wreg free
  7135                           
  7136                           ;MOTEapp.c: 603: uint8_t sizeOfUpdate = 0;
  7137  000496  0E00               	movlw	0
  7138  000498  0100               	movlb	0	; () banked
  7139  00049A  6FB2               	movwf	moteRunningProcess@sizeOfUpdate_1735& (0+255),b
  7140                           
  7141                           ; BSR set to: 0
  7142                           ;MOTEapp.c: 604: light = moteApp_convertSensorValue(moteApp_getLightValue());
  7143  00049C  EC6F  F030         	call	_moteApp_getLightValue	;wreg free
  7144  0004A0  C06D  F071         	movff	?_moteApp_getLightValue,moteApp_convertSensorValue@string
  7145  0004A4  C06E  F072         	movff	?_moteApp_getLightValue+1,moteApp_convertSensorValue@string+1
  7146  0004A8  EC3E  F02B         	call	_moteApp_convertSensorValue	;wreg free
  7147  0004AC  C071  F0C1         	movff	?_moteApp_convertSensorValue,_light
  7148  0004B0  C072  F0C2         	movff	?_moteApp_convertSensorValue+1,_light+1
  7149                           
  7150                           ;MOTEapp.c: 606: moteApp_add16bToDataBuffer(light, 4);
  7151  0004B4  C0C1  F067         	movff	_light,moteApp_add16bToDataBuffer@number
  7152  0004B8  C0C2  F068         	movff	_light+1,moteApp_add16bToDataBuffer@number+1
  7153  0004BC  0E04               	movlw	4
  7154  0004BE  0100               	movlb	0	; () banked
  7155  0004C0  6F69               	movwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),b
  7156  0004C2  ECFE  F018         	call	_moteApp_add16bToDataBuffer	;wreg free
  7157                           
  7158                           ;MOTEapp.c: 607: __nop();
  7159  0004C6  F000               	nop	
  7160                           
  7161                           ;MOTEapp.c: 608: __nop();
  7162  0004C8  F000               	nop	
  7163                           
  7164                           ;MOTEapp.c: 609: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  7165  0004CA  EC75  F031         	call	_moteApp_getTempValue	;wreg free
  7166  0004CE  C063  F071         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  7167  0004D2  C064  F072         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  7168  0004D6  EC3E  F02B         	call	_moteApp_convertSensorValue	;wreg free
  7169  0004DA  C071  F0C5         	movff	?_moteApp_convertSensorValue,_temperature
  7170  0004DE  C072  F0C6         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  7171                           
  7172                           ;MOTEapp.c: 610: temperature = ADC_TempConversion(temperature);
  7173  0004E2  0100               	movlb	0	; () banked
  7174  0004E4  51C5               	movf	_temperature& (0+255),w,b
  7175  0004E6  EC53  F021         	call	_ADC_TempConversion
  7176  0004EA  0100               	movlb	0	; () banked
  7177  0004EC  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  7178  0004EE  0100               	movlb	0	; () banked
  7179  0004F0  51AF               	movf	??_moteRunningProcess& (0+255),w,b
  7180  0004F2  0100               	movlb	0	; () banked
  7181  0004F4  6FC5               	movwf	_temperature& (0+255),b
  7182  0004F6  6BC6               	clrf	(_temperature+1)& (0+255),b
  7183                           
  7184                           ; BSR set to: 0
  7185                           ;MOTEapp.c: 611: moteApp_add8bToDataBuffer(temperature, 9);
  7186  0004F8  0E09               	movlw	9
  7187  0004FA  0100               	movlb	0	; () banked
  7188  0004FC  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7189  0004FE  0100               	movlb	0	; () banked
  7190  000500  51C5               	movf	_temperature& (0+255),w,b
  7191  000502  EC80  F024         	call	_moteApp_add8bToDataBuffer
  7192                           
  7193                           ;MOTEapp.c: 612: __nop();
  7194  000506  F000               	nop	
  7195                           
  7196                           ;MOTEapp.c: 614: runningState = runningUplinkSelect;
  7197  000508  0E07               	movlw	7
  7198  00050A  0100               	movlb	0	; () banked
  7199  00050C  6FEE               	movwf	_runningState& (0+255),b
  7200                           
  7201                           ; BSR set to: 0
  7202                           ;MOTEapp.c: 615: }
  7203                           ;MOTEapp.c: 616: break;
  7204                           
  7205                           ; BSR set to: 0
  7206  00050E  0012               	return	
  7207  000510                     l14058:
  7208                           
  7209                           ; BSR set to: 0
  7210                           ;MOTEapp.c: 618: if (changeStates)
  7211  000510  0100               	movlb	0	; () banked
  7212  000512  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7213  000514  0100               	movlb	0	; () banked
  7214  000516  B4D8               	btfsc	status,2,c
  7215  000518  D011               	goto	l14062
  7216                           
  7217                           ; BSR set to: 0
  7218                           ;MOTEapp.c: 619: {
  7219                           ;MOTEapp.c: 620: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  7220  00051A  0E2E               	movlw	low STR_74
  7221  00051C  0100               	movlb	0	; () banked
  7222  00051E  6F61               	movwf	sendDataCommand@string& (0+255),b
  7223  000520  0E7D               	movlw	high STR_74
  7224  000522  0100               	movlb	0	; () banked
  7225  000524  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  7226  000526  0EB6               	movlw	low _dataBuffer
  7227  000528  0100               	movlb	0	; () banked
  7228  00052A  6F63               	movwf	sendDataCommand@appData& (0+255),b
  7229  00052C  0E01               	movlw	high _dataBuffer
  7230  00052E  0100               	movlb	0	; () banked
  7231  000530  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7232  000532  0E0C               	movlw	12
  7233  000534  0100               	movlb	0	; () banked
  7234  000536  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  7235  000538  EC5D  F025         	call	_sendDataCommand	;wreg free
  7236  00053C                     l14062:
  7237                           
  7238                           ;MOTEapp.c: 622: }
  7239                           ;MOTEapp.c: 623: if (selectButton)
  7240  00053C  0100               	movlb	0	; () banked
  7241  00053E  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7242  000540  0100               	movlb	0	; () banked
  7243  000542  B4D8               	btfsc	status,2,c
  7244  000544  D011               	goto	l14066
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;MOTEapp.c: 624: {
  7248                           ;MOTEapp.c: 625: sendDataCommand("mac tx cnf ", dataBuffer, 12);
  7249  000546  0E65               	movlw	low STR_85
  7250  000548  0100               	movlb	0	; () banked
  7251  00054A  6F61               	movwf	sendDataCommand@string& (0+255),b
  7252  00054C  0E7E               	movlw	high STR_85
  7253  00054E  0100               	movlb	0	; () banked
  7254  000550  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  7255  000552  0EB6               	movlw	low _dataBuffer
  7256  000554  0100               	movlb	0	; () banked
  7257  000556  6F63               	movwf	sendDataCommand@appData& (0+255),b
  7258  000558  0E01               	movlw	high _dataBuffer
  7259  00055A  0100               	movlb	0	; () banked
  7260  00055C  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7261  00055E  0E0C               	movlw	12
  7262  000560  0100               	movlb	0	; () banked
  7263  000562  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  7264  000564  EC5D  F025         	call	_sendDataCommand	;wreg free
  7265  000568                     l14066:
  7266                           
  7267                           ;MOTEapp.c: 626: }
  7268                           ;MOTEapp.c: 628: if ( (changeStates) || (selectButton) )
  7269  000568  0100               	movlb	0	; () banked
  7270  00056A  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7271  00056C  0100               	movlb	0	; () banked
  7272  00056E  A4D8               	btfss	status,2,c
  7273  000570  D005               	goto	l14070
  7274                           
  7275                           ; BSR set to: 0
  7276  000572  0100               	movlb	0	; () banked
  7277  000574  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7278  000576  0100               	movlb	0	; () banked
  7279  000578  B4D8               	btfsc	status,2,c
  7280  00057A  0012               	return	
  7281  00057C                     l14070:
  7282                           
  7283                           ; BSR set to: 0
  7284                           ;MOTEapp.c: 629: {
  7285                           ;MOTEapp.c: 630: oled_clear();
  7286  00057C  ECAB  F034         	call	_oled_clear	;wreg free
  7287                           
  7288                           ;MOTEapp.c: 631: oled_putString("Sent Data: ",0,0);
  7289  000580  0E4D               	movlw	low STR_86
  7290  000582  0100               	movlb	0	; () banked
  7291  000584  6F71               	movwf	oled_putString@string& (0+255),b
  7292  000586  0E7E               	movlw	high STR_86
  7293  000588  0100               	movlb	0	; () banked
  7294  00058A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7295  00058C  0E00               	movlw	0
  7296  00058E  0100               	movlb	0	; () banked
  7297  000590  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7298  000592  0E00               	movlw	0
  7299  000594  0100               	movlb	0	; () banked
  7300  000596  6F74               	movwf	oled_putString@start_page& (0+255),b
  7301  000598  EC49  F02F         	call	_oled_putString	;wreg free
  7302                           
  7303                           ;MOTEapp.c: 632: oled_putString("Tx Port #: ",0,1);
  7304  00059C  0E41               	movlw	low STR_87
  7305  00059E  0100               	movlb	0	; () banked
  7306  0005A0  6F71               	movwf	oled_putString@string& (0+255),b
  7307  0005A2  0E7E               	movlw	high STR_87
  7308  0005A4  0100               	movlb	0	; () banked
  7309  0005A6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7310  0005A8  0E00               	movlw	0
  7311  0005AA  0100               	movlb	0	; () banked
  7312  0005AC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7313  0005AE  0E01               	movlw	1
  7314  0005B0  0100               	movlb	0	; () banked
  7315  0005B2  6F74               	movwf	oled_putString@start_page& (0+255),b
  7316  0005B4  EC49  F02F         	call	_oled_putString	;wreg free
  7317                           
  7318                           ;MOTEapp.c: 633: oled_putUint8(randomPortNum,12,1);
  7319  0005B8  0E0C               	movlw	12
  7320  0005BA  0100               	movlb	0	; () banked
  7321  0005BC  6F76               	movwf	oled_putUint8@station_dot& (0+255),b
  7322  0005BE  0E01               	movlw	1
  7323  0005C0  0100               	movlb	0	; () banked
  7324  0005C2  6F77               	movwf	oled_putUint8@start_page& (0+255),b
  7325  0005C4  0100               	movlb	0	; () banked
  7326  0005C6  51EA               	movf	_randomPortNum& (0+255),w,b
  7327  0005C8  ECF4  F029         	call	_oled_putUint8
  7328                           
  7329                           ;MOTEapp.c: 634: oled_putString("L:       T: ",0,2);
  7330  0005CC  0E73               	movlw	low STR_73
  7331  0005CE  0100               	movlb	0	; () banked
  7332  0005D0  6F71               	movwf	oled_putString@string& (0+255),b
  7333  0005D2  0E7D               	movlw	high STR_73
  7334  0005D4  0100               	movlb	0	; () banked
  7335  0005D6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7336  0005D8  0E00               	movlw	0
  7337  0005DA  0100               	movlb	0	; () banked
  7338  0005DC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7339  0005DE  0E02               	movlw	2
  7340  0005E0  0100               	movlb	0	; () banked
  7341  0005E2  6F74               	movwf	oled_putString@start_page& (0+255),b
  7342  0005E4  EC49  F02F         	call	_oled_putString	;wreg free
  7343                           
  7344                           ;MOTEapp.c: 635: oled_putString(moteApp_getLightString(), 3, 2);
  7345  0005E8  EC47  F035         	call	_moteApp_getLightString	;wreg free
  7346  0005EC  C060  F071         	movff	?_moteApp_getLightString,oled_putString@string
  7347  0005F0  C061  F072         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  7348  0005F4  0E03               	movlw	3
  7349  0005F6  0100               	movlb	0	; () banked
  7350  0005F8  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7351  0005FA  0E02               	movlw	2
  7352  0005FC  0100               	movlb	0	; () banked
  7353  0005FE  6F74               	movwf	oled_putString@start_page& (0+255),b
  7354  000600  EC49  F02F         	call	_oled_putString	;wreg free
  7355                           
  7356                           ;MOTEapp.c: 636: oled_putint8(temperature,11,2);
  7357  000604  0E0B               	movlw	11
  7358  000606  0100               	movlb	0	; () banked
  7359  000608  6F76               	movwf	oled_putint8@station_dot& (0+255),b
  7360  00060A  0E02               	movlw	2
  7361  00060C  0100               	movlb	0	; () banked
  7362  00060E  6F77               	movwf	oled_putint8@start_page& (0+255),b
  7363  000610  0100               	movlb	0	; () banked
  7364  000612  51C5               	movf	_temperature& (0+255),w,b
  7365  000614  EC36  F026         	call	_oled_putint8
  7366                           
  7367                           ;MOTEapp.c: 637: LATAbits.LATA6 = 0;
  7368  000618  9C89               	bcf	3977,6,c	;volatile
  7369                           
  7370                           ;MOTEapp.c: 638: runningState = runningUplinkTransmit;
  7371  00061A  0E08               	movlw	8
  7372  00061C  0100               	movlb	0	; () banked
  7373  00061E  6FEE               	movwf	_runningState& (0+255),b
  7374                           
  7375                           ; BSR set to: 0
  7376                           ;MOTEapp.c: 639: }
  7377                           ;MOTEapp.c: 640: break;
  7378  000620  0012               	return	
  7379  000622                     l14088:
  7380                           
  7381                           ; BSR set to: 0
  7382                           ;MOTEapp.c: 642: if ( messageReady )
  7383  000622  0100               	movlb	0	; () banked
  7384  000624  51AD               	movf	moteRunningProcess@messageReady& (0+255),w,b
  7385  000626  0100               	movlb	0	; () banked
  7386  000628  B4D8               	btfsc	status,2,c
  7387  00062A  D13B               	goto	l14154
  7388                           
  7389                           ; BSR set to: 0
  7390                           ;MOTEapp.c: 643: {
  7391                           ;MOTEapp.c: 644: if(strcmp(moduleResonseBuffer, "ok") == 0)
  7392  00062C  0E56               	movlw	low _moduleResonseBuffer
  7393  00062E  0100               	movlb	0	; () banked
  7394  000630  6F60               	movwf	strcmp@s1& (0+255),b
  7395  000632  0E01               	movlw	high _moduleResonseBuffer
  7396  000634  0100               	movlb	0	; () banked
  7397  000636  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7398  000638  0EF8               	movlw	low STR_44
  7399  00063A  0100               	movlb	0	; () banked
  7400  00063C  6F62               	movwf	strcmp@s2& (0+255),b
  7401  00063E  0E7F               	movlw	high STR_44
  7402  000640  0100               	movlb	0	; () banked
  7403  000642  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7404  000644  ECF6  F030         	call	_strcmp	;wreg free
  7405  000648  0100               	movlb	0	; () banked
  7406  00064A  5160               	movf	?_strcmp& (0+255),w,b
  7407  00064C  0100               	movlb	0	; () banked
  7408  00064E  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7409  000650  A4D8               	btfss	status,2,c
  7410  000652  D004               	goto	l14096
  7411                           
  7412                           ; BSR set to: 0
  7413                           ;MOTEapp.c: 645: {
  7414                           ;MOTEapp.c: 646: LATAbits.LATA6 = 1;
  7415  000654  8C89               	bsf	3977,6,c	;volatile
  7416                           
  7417                           ; BSR set to: 0
  7418                           ;MOTEapp.c: 647: runningState = runningUplinkTransmit;
  7419  000656  0E08               	movlw	8
  7420  000658  0100               	movlb	0	; () banked
  7421  00065A  6FEE               	movwf	_runningState& (0+255),b
  7422  00065C                     l14096:
  7423                           
  7424                           ; BSR set to: 0
  7425                           ;MOTEapp.c: 648: }
  7426                           ;MOTEapp.c: 649: if(strncmp(moduleResonseBuffer, "mac_rx", 6) == 0)
  7427  00065C  0E56               	movlw	low _moduleResonseBuffer
  7428  00065E  0100               	movlb	0	; () banked
  7429  000660  6F60               	movwf	strncmp@s1& (0+255),b
  7430  000662  0E01               	movlw	high _moduleResonseBuffer
  7431  000664  0100               	movlb	0	; () banked
  7432  000666  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7433  000668  0EAB               	movlw	low STR_90
  7434  00066A  0100               	movlb	0	; () banked
  7435  00066C  6F62               	movwf	strncmp@s2& (0+255),b
  7436  00066E  0E7F               	movlw	high STR_90
  7437  000670  0100               	movlb	0	; () banked
  7438  000672  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7439  000674  0E00               	movlw	0
  7440  000676  0100               	movlb	0	; () banked
  7441  000678  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7442  00067A  0E06               	movlw	6
  7443  00067C  6F64               	movwf	strncmp@len& (0+255),b
  7444  00067E  ECED  F02A         	call	_strncmp	;wreg free
  7445  000682  0100               	movlb	0	; () banked
  7446  000684  5160               	movf	?_strncmp& (0+255),w,b
  7447  000686  0100               	movlb	0	; () banked
  7448  000688  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7449  00068A  A4D8               	btfss	status,2,c
  7450  00068C  D089               	goto	l14138
  7451                           
  7452                           ; BSR set to: 0
  7453                           ;MOTEapp.c: 650: {
  7454                           ;MOTEapp.c: 651: uint8_t bufferReadPos = 7;
  7455  00068E  0E07               	movlw	7
  7456  000690  0100               	movlb	0	; () banked
  7457  000692  6FB4               	movwf	moteRunningProcess@bufferReadPos& (0+255),b
  7458                           
  7459                           ; BSR set to: 0
  7460                           ;MOTEapp.c: 655: responsePortNum[0] = moduleResonseBuffer[bufferReadPos++];
  7461  000694  0100               	movlb	0	; () banked
  7462  000696  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7463  000698  0D01               	mullw	1
  7464  00069A  0E56               	movlw	low _moduleResonseBuffer
  7465  00069C  24F3               	addwf	prodl,w,c
  7466  00069E  6ED9               	movwf	fsr2l,c
  7467  0006A0  0E01               	movlw	high _moduleResonseBuffer
  7468  0006A2  20F4               	addwfc	prodh,w,c
  7469  0006A4  6EDA               	movwf	fsr2h,c
  7470  0006A6  50DF               	movf	indf2,w,c
  7471  0006A8  0101               	movlb	1	; () banked
  7472  0006AA  6FE9               	movwf	_responsePortNum& (0+255),b
  7473                           
  7474                           ; BSR set to: 1
  7475  0006AC  0100               	movlb	0	; () banked
  7476  0006AE  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7477                           
  7478                           ; BSR set to: 0
  7479                           ;MOTEapp.c: 656: responsePortNum[1] = moduleResonseBuffer[bufferReadPos++];
  7480  0006B0  0100               	movlb	0	; () banked
  7481  0006B2  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7482  0006B4  0D01               	mullw	1
  7483  0006B6  0E56               	movlw	low _moduleResonseBuffer
  7484  0006B8  24F3               	addwf	prodl,w,c
  7485  0006BA  6ED9               	movwf	fsr2l,c
  7486  0006BC  0E01               	movlw	high _moduleResonseBuffer
  7487  0006BE  20F4               	addwfc	prodh,w,c
  7488  0006C0  6EDA               	movwf	fsr2h,c
  7489  0006C2  50DF               	movf	indf2,w,c
  7490  0006C4  0101               	movlb	1	; () banked
  7491  0006C6  6FEA               	movwf	(_responsePortNum+1)& (0+255),b
  7492                           
  7493                           ; BSR set to: 1
  7494  0006C8  0100               	movlb	0	; () banked
  7495  0006CA  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7496                           
  7497                           ; BSR set to: 0
  7498                           ;MOTEapp.c: 657: if (responsePortNum[1] != ' ')
  7499  0006CC  0E20               	movlw	32
  7500  0006CE  0101               	movlb	1	; () banked
  7501  0006D0  19EA               	xorwf	(_responsePortNum+1)& (0+255),w,b
  7502  0006D2  B4D8               	btfsc	status,2,c
  7503  0006D4  D015               	goto	l14118
  7504                           
  7505                           ; BSR set to: 1
  7506                           ;MOTEapp.c: 658: {
  7507                           ;MOTEapp.c: 659: responsePortNum[2] = moduleResonseBuffer[bufferReadPos++];
  7508  0006D6  0100               	movlb	0	; () banked
  7509  0006D8  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7510  0006DA  0D01               	mullw	1
  7511  0006DC  0E56               	movlw	low _moduleResonseBuffer
  7512  0006DE  24F3               	addwf	prodl,w,c
  7513  0006E0  6ED9               	movwf	fsr2l,c
  7514  0006E2  0E01               	movlw	high _moduleResonseBuffer
  7515  0006E4  20F4               	addwfc	prodh,w,c
  7516  0006E6  6EDA               	movwf	fsr2h,c
  7517  0006E8  50DF               	movf	indf2,w,c
  7518  0006EA  0101               	movlb	1	; () banked
  7519  0006EC  6FEB               	movwf	(_responsePortNum+2)& (0+255),b
  7520                           
  7521                           ; BSR set to: 1
  7522  0006EE  0100               	movlb	0	; () banked
  7523  0006F0  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7524                           
  7525                           ; BSR set to: 0
  7526                           ;MOTEapp.c: 660: if (responsePortNum[2] != ' ')
  7527  0006F2  0E20               	movlw	32
  7528  0006F4  0101               	movlb	1	; () banked
  7529  0006F6  19EB               	xorwf	(_responsePortNum+2)& (0+255),w,b
  7530  0006F8  B4D8               	btfsc	status,2,c
  7531  0006FA  D002               	goto	l14118
  7532                           
  7533                           ; BSR set to: 1
  7534                           ;MOTEapp.c: 661: {
  7535                           ;MOTEapp.c: 662: bufferReadPos++;
  7536  0006FC  0100               	movlb	0	; () banked
  7537  0006FE  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7538  000700                     l14118:
  7539                           
  7540                           ;MOTEapp.c: 663: }
  7541                           ;MOTEapp.c: 664: }
  7542                           ;MOTEapp.c: 666: for (uint8_t counter = 0; counter < sizeof(moduleResonseBuffer); counte
      +                          r++)
  7543  000700  0E00               	movlw	0
  7544  000702  0100               	movlb	0	; () banked
  7545  000704  6FB3               	movwf	moteRunningProcess@counter& (0+255),b
  7546  000706                     l14120:
  7547                           
  7548                           ; BSR set to: 0
  7549  000706  0E3F               	movlw	63
  7550  000708  0100               	movlb	0	; () banked
  7551  00070A  65B3               	cpfsgt	moteRunningProcess@counter& (0+255),b
  7552  00070C  D001               	goto	l14124
  7553  00070E  D029               	goto	l500
  7554  000710                     l14124:
  7555                           
  7556                           ; BSR set to: 0
  7557                           ;MOTEapp.c: 667: {
  7558                           ;MOTEapp.c: 668: responseData[counter] = moduleResonseBuffer[bufferReadPos];
  7559  000710  0100               	movlb	0	; () banked
  7560  000712  51B4               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7561  000714  0D01               	mullw	1
  7562  000716  0E56               	movlw	low _moduleResonseBuffer
  7563  000718  24F3               	addwf	prodl,w,c
  7564  00071A  6ED9               	movwf	fsr2l,c
  7565  00071C  0E01               	movlw	high _moduleResonseBuffer
  7566  00071E  20F4               	addwfc	prodh,w,c
  7567  000720  6EDA               	movwf	fsr2h,c
  7568  000722  0100               	movlb	0	; () banked
  7569  000724  51B3               	movf	moteRunningProcess@counter& (0+255),w,b
  7570  000726  0D01               	mullw	1
  7571  000728  0E96               	movlw	low _responseData
  7572  00072A  24F3               	addwf	prodl,w,c
  7573  00072C  6EE1               	movwf	fsr1l,c
  7574  00072E  0E01               	movlw	high _responseData
  7575  000730  20F4               	addwfc	prodh,w,c
  7576  000732  6EE2               	movwf	fsr1h,c
  7577  000734  CFDF FFE7          	movff	indf2,indf1
  7578                           
  7579                           ; BSR set to: 0
  7580                           ;MOTEapp.c: 670: if (responseData[counter] != 0x00)
  7581  000738  0100               	movlb	0	; () banked
  7582  00073A  51B3               	movf	moteRunningProcess@counter& (0+255),w,b
  7583  00073C  0D01               	mullw	1
  7584  00073E  0E96               	movlw	low _responseData
  7585  000740  24F3               	addwf	prodl,w,c
  7586  000742  6ED9               	movwf	fsr2l,c
  7587  000744  0E01               	movlw	high _responseData
  7588  000746  20F4               	addwfc	prodh,w,c
  7589  000748  6EDA               	movwf	fsr2h,c
  7590  00074A  50DF               	movf	indf2,w,c
  7591  00074C  B4D8               	btfsc	status,2,c
  7592  00074E  D003               	goto	l14130
  7593                           
  7594                           ; BSR set to: 0
  7595                           ;MOTEapp.c: 671: {
  7596                           ;MOTEapp.c: 672: bufferReadPos++;
  7597  000750  0100               	movlb	0	; () banked
  7598  000752  2BB4               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7599                           
  7600                           ;MOTEapp.c: 673: } else {
  7601  000754  D003               	goto	l14132
  7602  000756                     l14130:
  7603                           
  7604                           ; BSR set to: 0
  7605                           ;MOTEapp.c: 674: counter = sizeof(moduleResonseBuffer);
  7606  000756  0E40               	movlw	64
  7607  000758  0100               	movlb	0	; () banked
  7608  00075A  6FB3               	movwf	moteRunningProcess@counter& (0+255),b
  7609  00075C                     l14132:
  7610                           
  7611                           ; BSR set to: 0
  7612  00075C  0100               	movlb	0	; () banked
  7613  00075E  2BB3               	incf	moteRunningProcess@counter& (0+255),f,b
  7614  000760  D7D2               	goto	l14120
  7615  000762                     l500:
  7616                           
  7617                           ; BSR set to: 0
  7618                           ;MOTEapp.c: 675: }
  7619                           ;MOTEapp.c: 676: }
  7620                           ;MOTEapp.c: 678: LATAbits.LATA7 = 1;
  7621  000762  8E89               	bsf	3977,7,c	;volatile
  7622                           
  7623                           ;MOTEapp.c: 679: LATAbits.LATA6 = 0;
  7624  000764  9C89               	bcf	3977,6,c	;volatile
  7625                           
  7626                           ; BSR set to: 0
  7627                           ;MOTEapp.c: 681: oled_putString("Server Response ",0,2);
  7628  000766  0E00               	movlw	low STR_91
  7629  000768  0100               	movlb	0	; () banked
  7630  00076A  6F71               	movwf	oled_putString@string& (0+255),b
  7631  00076C  0E7B               	movlw	high STR_91
  7632  00076E  0100               	movlb	0	; () banked
  7633  000770  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7634  000772  0E00               	movlw	0
  7635  000774  0100               	movlb	0	; () banked
  7636  000776  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7637  000778  0E02               	movlw	2
  7638  00077A  0100               	movlb	0	; () banked
  7639  00077C  6F74               	movwf	oled_putString@start_page& (0+255),b
  7640  00077E  EC49  F02F         	call	_oled_putString	;wreg free
  7641                           
  7642                           ;MOTEapp.c: 682: oled_putString("    Received    ",0,3);
  7643  000782  0E78               	movlw	low STR_92
  7644  000784  0100               	movlb	0	; () banked
  7645  000786  6F71               	movwf	oled_putString@string& (0+255),b
  7646  000788  0E7A               	movlw	high STR_92
  7647  00078A  0100               	movlb	0	; () banked
  7648  00078C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7649  00078E  0E00               	movlw	0
  7650  000790  0100               	movlb	0	; () banked
  7651  000792  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7652  000794  0E03               	movlw	3
  7653  000796  0100               	movlb	0	; () banked
  7654  000798  6F74               	movwf	oled_putString@start_page& (0+255),b
  7655  00079A  EC49  F02F         	call	_oled_putString	;wreg free
  7656                           
  7657                           ;MOTEapp.c: 683: }
  7658  00079E  D078               	goto	l14152
  7659  0007A0                     l14138:
  7660                           
  7661                           ;MOTEapp.c: 684: else if(strncmp(moduleResonseBuffer, "mac_tx", 6) == 0)
  7662  0007A0  0E56               	movlw	low _moduleResonseBuffer
  7663  0007A2  0100               	movlb	0	; () banked
  7664  0007A4  6F60               	movwf	strncmp@s1& (0+255),b
  7665  0007A6  0E01               	movlw	high _moduleResonseBuffer
  7666  0007A8  0100               	movlb	0	; () banked
  7667  0007AA  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7668  0007AC  0EB2               	movlw	low STR_93
  7669  0007AE  0100               	movlb	0	; () banked
  7670  0007B0  6F62               	movwf	strncmp@s2& (0+255),b
  7671  0007B2  0E7F               	movlw	high STR_93
  7672  0007B4  0100               	movlb	0	; () banked
  7673  0007B6  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7674  0007B8  0E00               	movlw	0
  7675  0007BA  0100               	movlb	0	; () banked
  7676  0007BC  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7677  0007BE  0E06               	movlw	6
  7678  0007C0  6F64               	movwf	strncmp@len& (0+255),b
  7679  0007C2  ECED  F02A         	call	_strncmp	;wreg free
  7680  0007C6  0100               	movlb	0	; () banked
  7681  0007C8  5160               	movf	?_strncmp& (0+255),w,b
  7682  0007CA  0100               	movlb	0	; () banked
  7683  0007CC  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7684  0007CE  A4D8               	btfss	status,2,c
  7685  0007D0  D010               	goto	l14144
  7686                           
  7687                           ; BSR set to: 0
  7688                           ;MOTEapp.c: 685: {
  7689                           ;MOTEapp.c: 686: LATAbits.LATA6 = 0;
  7690  0007D2  9C89               	bcf	3977,6,c	;volatile
  7691                           
  7692                           ; BSR set to: 0
  7693                           ;MOTEapp.c: 687: oled_putString("Data Transmitted",0,3);
  7694  0007D4  0EBB               	movlw	low STR_94
  7695  0007D6  0100               	movlb	0	; () banked
  7696  0007D8  6F71               	movwf	oled_putString@string& (0+255),b
  7697  0007DA  0E7B               	movlw	high STR_94
  7698  0007DC  0100               	movlb	0	; () banked
  7699  0007DE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7700  0007E0  0E00               	movlw	0
  7701  0007E2  0100               	movlb	0	; () banked
  7702  0007E4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7703  0007E6  0E03               	movlw	3
  7704  0007E8  0100               	movlb	0	; () banked
  7705  0007EA  6F74               	movwf	oled_putString@start_page& (0+255),b
  7706  0007EC  EC49  F02F         	call	_oled_putString	;wreg free
  7707                           
  7708                           ;MOTEapp.c: 688: }
  7709  0007F0  D04F               	goto	l14152
  7710  0007F2                     l14144:
  7711                           
  7712                           ;MOTEapp.c: 689: else if(strncmp(moduleResonseBuffer, "mac_er", 6) == 0)
  7713  0007F2  0E56               	movlw	low _moduleResonseBuffer
  7714  0007F4  0100               	movlb	0	; () banked
  7715  0007F6  6F60               	movwf	strncmp@s1& (0+255),b
  7716  0007F8  0E01               	movlw	high _moduleResonseBuffer
  7717  0007FA  0100               	movlb	0	; () banked
  7718  0007FC  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7719  0007FE  0EA4               	movlw	low STR_95
  7720  000800  0100               	movlb	0	; () banked
  7721  000802  6F62               	movwf	strncmp@s2& (0+255),b
  7722  000804  0E7F               	movlw	high STR_95
  7723  000806  0100               	movlb	0	; () banked
  7724  000808  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7725  00080A  0E00               	movlw	0
  7726  00080C  0100               	movlb	0	; () banked
  7727  00080E  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7728  000810  0E06               	movlw	6
  7729  000812  6F64               	movwf	strncmp@len& (0+255),b
  7730  000814  ECED  F02A         	call	_strncmp	;wreg free
  7731  000818  0100               	movlb	0	; () banked
  7732  00081A  5160               	movf	?_strncmp& (0+255),w,b
  7733  00081C  0100               	movlb	0	; () banked
  7734  00081E  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7735  000820  A4D8               	btfss	status,2,c
  7736  000822  D00F               	goto	l14148
  7737                           
  7738                           ; BSR set to: 0
  7739                           ;MOTEapp.c: 690: {
  7740                           ;MOTEapp.c: 691: oled_putString("Mac Error Occurred",0,3);
  7741  000824  0E42               	movlw	low STR_96
  7742  000826  0100               	movlb	0	; () banked
  7743  000828  6F71               	movwf	oled_putString@string& (0+255),b
  7744  00082A  0E7A               	movlw	high STR_96
  7745  00082C  0100               	movlb	0	; () banked
  7746  00082E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7747  000830  0E00               	movlw	0
  7748  000832  0100               	movlb	0	; () banked
  7749  000834  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7750  000836  0E03               	movlw	3
  7751  000838  0100               	movlb	0	; () banked
  7752  00083A  6F74               	movwf	oled_putString@start_page& (0+255),b
  7753  00083C  EC49  F02F         	call	_oled_putString	;wreg free
  7754                           
  7755                           ;MOTEapp.c: 692: }
  7756  000840  D027               	goto	l14152
  7757  000842                     l14148:
  7758                           
  7759                           ;MOTEapp.c: 693: else if(strncmp(moduleResonseBuffer, "no_fre", 6) == 0)
  7760  000842  0E56               	movlw	low _moduleResonseBuffer
  7761  000844  0100               	movlb	0	; () banked
  7762  000846  6F60               	movwf	strncmp@s1& (0+255),b
  7763  000848  0E01               	movlw	high _moduleResonseBuffer
  7764  00084A  0100               	movlb	0	; () banked
  7765  00084C  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7766  00084E  0E9D               	movlw	low STR_97
  7767  000850  0100               	movlb	0	; () banked
  7768  000852  6F62               	movwf	strncmp@s2& (0+255),b
  7769  000854  0E7F               	movlw	high STR_97
  7770  000856  0100               	movlb	0	; () banked
  7771  000858  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7772  00085A  0E00               	movlw	0
  7773  00085C  0100               	movlb	0	; () banked
  7774  00085E  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7775  000860  0E06               	movlw	6
  7776  000862  6F64               	movwf	strncmp@len& (0+255),b
  7777  000864  ECED  F02A         	call	_strncmp	;wreg free
  7778  000868  0100               	movlb	0	; () banked
  7779  00086A  5160               	movf	?_strncmp& (0+255),w,b
  7780  00086C  0100               	movlb	0	; () banked
  7781  00086E  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7782  000870  A4D8               	btfss	status,2,c
  7783  000872  D00E               	goto	l14152
  7784                           
  7785                           ; BSR set to: 0
  7786                           ;MOTEapp.c: 694: {
  7787                           ;MOTEapp.c: 695: oled_putString("No Free Channel",0,3);
  7788  000874  0EB4               	movlw	low STR_98
  7789  000876  0100               	movlb	0	; () banked
  7790  000878  6F71               	movwf	oled_putString@string& (0+255),b
  7791  00087A  0E7C               	movlw	high STR_98
  7792  00087C  0100               	movlb	0	; () banked
  7793  00087E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7794  000880  0E00               	movlw	0
  7795  000882  0100               	movlb	0	; () banked
  7796  000884  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7797  000886  0E03               	movlw	3
  7798  000888  0100               	movlb	0	; () banked
  7799  00088A  6F74               	movwf	oled_putString@start_page& (0+255),b
  7800  00088C  EC49  F02F         	call	_oled_putString	;wreg free
  7801  000890                     l14152:
  7802                           
  7803                           ;MOTEapp.c: 696: }
  7804                           ;MOTEapp.c: 697: _delay((unsigned long)((16)*(48000000/4000.0)));
  7805  000890  0EFA               	movlw	250
  7806  000892  0100               	movlb	0	; () banked
  7807  000894  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  7808  000896  0E58               	movlw	88
  7809  000898                     u14317:
  7810  000898  2EE8               	decfsz	wreg,f,c
  7811  00089A  D7FE               	goto	u14317
  7812  00089C  2FAF               	decfsz	??_moteRunningProcess& (0+255),f,b
  7813  00089E  D7FC               	goto	u14317
  7814  0008A0  D000               	nop2	
  7815  0008A2                     l14154:
  7816                           
  7817                           ;MOTEapp.c: 698: }
  7818                           ;MOTEapp.c: 699: if ( (changeStates) || (selectButton) )
  7819  0008A2  0100               	movlb	0	; () banked
  7820  0008A4  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7821  0008A6  0100               	movlb	0	; () banked
  7822  0008A8  A4D8               	btfss	status,2,c
  7823  0008AA  D005               	goto	l14158
  7824                           
  7825                           ; BSR set to: 0
  7826  0008AC  0100               	movlb	0	; () banked
  7827  0008AE  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7828  0008B0  0100               	movlb	0	; () banked
  7829  0008B2  B4D8               	btfsc	status,2,c
  7830  0008B4  0012               	return	
  7831  0008B6                     l14158:
  7832                           
  7833                           ; BSR set to: 0
  7834                           ;MOTEapp.c: 700: {
  7835                           ;MOTEapp.c: 701: oled_clear();
  7836  0008B6  ECAB  F034         	call	_oled_clear	;wreg free
  7837                           
  7838                           ;MOTEapp.c: 702: oled_putString("  Issue Uplink  ",0,0);
  7839  0008BA  0ECD               	movlw	low STR_75
  7840  0008BC  0100               	movlb	0	; () banked
  7841  0008BE  6F71               	movwf	oled_putString@string& (0+255),b
  7842  0008C0  0E7A               	movlw	high STR_75
  7843  0008C2  0100               	movlb	0	; () banked
  7844  0008C4  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7845  0008C6  0E00               	movlw	0
  7846  0008C8  0100               	movlb	0	; () banked
  7847  0008CA  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7848  0008CC  0E00               	movlw	0
  7849  0008CE  0100               	movlb	0	; () banked
  7850  0008D0  6F74               	movwf	oled_putString@start_page& (0+255),b
  7851  0008D2  EC49  F02F         	call	_oled_putString	;wreg free
  7852                           
  7853                           ;MOTEapp.c: 703: oled_putString(" LoRaWAN Packet ",0,1);
  7854  0008D6  0E33               	movlw	low STR_76
  7855  0008D8  0100               	movlb	0	; () banked
  7856  0008DA  6F71               	movwf	oled_putString@string& (0+255),b
  7857  0008DC  0E7B               	movlw	high STR_76
  7858  0008DE  0100               	movlb	0	; () banked
  7859  0008E0  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7860  0008E2  0E00               	movlw	0
  7861  0008E4  0100               	movlb	0	; () banked
  7862  0008E6  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7863  0008E8  0E01               	movlw	1
  7864  0008EA  0100               	movlb	0	; () banked
  7865  0008EC  6F74               	movwf	oled_putString@start_page& (0+255),b
  7866  0008EE  EC49  F02F         	call	_oled_putString	;wreg free
  7867                           
  7868                           ;MOTEapp.c: 704: oled_putString("(NAV)    (SEL) ",0,3);
  7869  0008F2  0E84               	movlw	low STR_77
  7870  0008F4  0100               	movlb	0	; () banked
  7871  0008F6  6F71               	movwf	oled_putString@string& (0+255),b
  7872  0008F8  0E7C               	movlw	high STR_77
  7873  0008FA  0100               	movlb	0	; () banked
  7874  0008FC  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7875  0008FE  0E00               	movlw	0
  7876  000900  0100               	movlb	0	; () banked
  7877  000902  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7878  000904  0E03               	movlw	3
  7879  000906  0100               	movlb	0	; () banked
  7880  000908  6F74               	movwf	oled_putString@start_page& (0+255),b
  7881  00090A  EC49  F02F         	call	_oled_putString	;wreg free
  7882                           
  7883                           ;MOTEapp.c: 705: runningState = runningUplink;
  7884  00090E  0E06               	movlw	6
  7885  000910  0100               	movlb	0	; () banked
  7886  000912  6FEE               	movwf	_runningState& (0+255),b
  7887                           
  7888                           ; BSR set to: 0
  7889                           ;MOTEapp.c: 706: }
  7890                           ;MOTEapp.c: 707: break;
  7891  000914  0012               	return	
  7892  000916                     l14168:
  7893                           
  7894                           ; BSR set to: 0
  7895                           ;MOTEapp.c: 709: if (changeStates)
  7896  000916  0100               	movlb	0	; () banked
  7897  000918  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7898  00091A  0100               	movlb	0	; () banked
  7899  00091C  B4D8               	btfsc	status,2,c
  7900  00091E  D030               	goto	l14180
  7901                           
  7902                           ; BSR set to: 0
  7903                           ;MOTEapp.c: 710: {
  7904                           ;MOTEapp.c: 711: oled_clear();
  7905  000920  ECAB  F034         	call	_oled_clear	;wreg free
  7906                           
  7907                           ;MOTEapp.c: 712: oled_putString("  Sensor Data  ",0,0);
  7908  000924  0E64               	movlw	low STR_102
  7909  000926  0100               	movlb	0	; () banked
  7910  000928  6F71               	movwf	oled_putString@string& (0+255),b
  7911  00092A  0E7C               	movlw	high STR_102
  7912  00092C  0100               	movlb	0	; () banked
  7913  00092E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7914  000930  0E00               	movlw	0
  7915  000932  0100               	movlb	0	; () banked
  7916  000934  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7917  000936  0E00               	movlw	0
  7918  000938  0100               	movlb	0	; () banked
  7919  00093A  6F74               	movwf	oled_putString@start_page& (0+255),b
  7920  00093C  EC49  F02F         	call	_oled_putString	;wreg free
  7921                           
  7922                           ;MOTEapp.c: 713: oled_putString("    Display    ",0,1);
  7923  000940  0E54               	movlw	low STR_103
  7924  000942  0100               	movlb	0	; () banked
  7925  000944  6F71               	movwf	oled_putString@string& (0+255),b
  7926  000946  0E7C               	movlw	high STR_103
  7927  000948  0100               	movlb	0	; () banked
  7928  00094A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7929  00094C  0E00               	movlw	0
  7930  00094E  0100               	movlb	0	; () banked
  7931  000950  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7932  000952  0E01               	movlw	1
  7933  000954  0100               	movlb	0	; () banked
  7934  000956  6F74               	movwf	oled_putString@start_page& (0+255),b
  7935  000958  EC49  F02F         	call	_oled_putString	;wreg free
  7936                           
  7937                           ;MOTEapp.c: 714: oled_putString("(NAV)    (SEL) ",0,3);
  7938  00095C  0E84               	movlw	low STR_77
  7939  00095E  0100               	movlb	0	; () banked
  7940  000960  6F71               	movwf	oled_putString@string& (0+255),b
  7941  000962  0E7C               	movlw	high STR_77
  7942  000964  0100               	movlb	0	; () banked
  7943  000966  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7944  000968  0E00               	movlw	0
  7945  00096A  0100               	movlb	0	; () banked
  7946  00096C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7947  00096E  0E03               	movlw	3
  7948  000970  0100               	movlb	0	; () banked
  7949  000972  6F74               	movwf	oled_putString@start_page& (0+255),b
  7950  000974  EC49  F02F         	call	_oled_putString	;wreg free
  7951                           
  7952                           ;MOTEapp.c: 715: runningState = runningSensor;
  7953  000978  0E01               	movlw	1
  7954  00097A  0100               	movlb	0	; () banked
  7955  00097C  6FEE               	movwf	_runningState& (0+255),b
  7956                           
  7957                           ;MOTEapp.c: 716: }
  7958  00097E  0012               	return	
  7959  000980                     l14180:
  7960                           
  7961                           ; BSR set to: 0
  7962                           ;MOTEapp.c: 717: else if (selectButton)
  7963  000980  0100               	movlb	0	; () banked
  7964  000982  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7965  000984  0100               	movlb	0	; () banked
  7966  000986  B4D8               	btfsc	status,2,c
  7967  000988  0012               	return	
  7968                           
  7969                           ; BSR set to: 0
  7970                           ;MOTEapp.c: 718: {
  7971                           ;MOTEapp.c: 720: oled_clear();
  7972  00098A  ECAB  F034         	call	_oled_clear	;wreg free
  7973                           
  7974                           ;MOTEapp.c: 722: LATAbits.LATA7 = 0;
  7975  00098E  9E89               	bcf	3977,7,c	;volatile
  7976                           
  7977                           ;MOTEapp.c: 724: oled_putString("Downlink Display",0,0);
  7978  000990  0E43               	movlw	low STR_105
  7979  000992  0100               	movlb	0	; () banked
  7980  000994  6F71               	movwf	oled_putString@string& (0+255),b
  7981  000996  0E7C               	movlw	high STR_105
  7982  000998  0100               	movlb	0	; () banked
  7983  00099A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7984  00099C  0E00               	movlw	0
  7985  00099E  0100               	movlb	0	; () banked
  7986  0009A0  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7987  0009A2  0E00               	movlw	0
  7988  0009A4  0100               	movlb	0	; () banked
  7989  0009A6  6F74               	movwf	oled_putString@start_page& (0+255),b
  7990  0009A8  EC49  F02F         	call	_oled_putString	;wreg free
  7991                           
  7992                           ;MOTEapp.c: 726: oled_putString("Rx Port# ",0,1);
  7993  0009AC  0ECB               	movlw	low STR_106
  7994  0009AE  0100               	movlb	0	; () banked
  7995  0009B0  6F71               	movwf	oled_putString@string& (0+255),b
  7996  0009B2  0E7E               	movlw	high STR_106
  7997  0009B4  0100               	movlb	0	; () banked
  7998  0009B6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7999  0009B8  0E00               	movlw	0
  8000  0009BA  0100               	movlb	0	; () banked
  8001  0009BC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8002  0009BE  0E01               	movlw	1
  8003  0009C0  0100               	movlb	0	; () banked
  8004  0009C2  6F74               	movwf	oled_putString@start_page& (0+255),b
  8005  0009C4  EC49  F02F         	call	_oled_putString	;wreg free
  8006                           
  8007                           ;MOTEapp.c: 727: oled_putString(&responsePortNum,9,1);
  8008  0009C8  0EE9               	movlw	low _responsePortNum
  8009  0009CA  0100               	movlb	0	; () banked
  8010  0009CC  6F71               	movwf	oled_putString@string& (0+255),b
  8011  0009CE  0E01               	movlw	high _responsePortNum
  8012  0009D0  0100               	movlb	0	; () banked
  8013  0009D2  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8014  0009D4  0E09               	movlw	9
  8015  0009D6  0100               	movlb	0	; () banked
  8016  0009D8  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8017  0009DA  0E01               	movlw	1
  8018  0009DC  0100               	movlb	0	; () banked
  8019  0009DE  6F74               	movwf	oled_putString@start_page& (0+255),b
  8020  0009E0  EC49  F02F         	call	_oled_putString	;wreg free
  8021                           
  8022                           ;MOTEapp.c: 729: oled_putString("Data: ",0,2);
  8023  0009E4  0E52               	movlw	low (STR_86+5)
  8024  0009E6  0100               	movlb	0	; () banked
  8025  0009E8  6F71               	movwf	oled_putString@string& (0+255),b
  8026  0009EA  0E7E               	movlw	high (STR_86+5)
  8027  0009EC  0100               	movlb	0	; () banked
  8028  0009EE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8029  0009F0  0E00               	movlw	0
  8030  0009F2  0100               	movlb	0	; () banked
  8031  0009F4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8032  0009F6  0E02               	movlw	2
  8033  0009F8  0100               	movlb	0	; () banked
  8034  0009FA  6F74               	movwf	oled_putString@start_page& (0+255),b
  8035  0009FC  EC49  F02F         	call	_oled_putString	;wreg free
  8036                           
  8037                           ;MOTEapp.c: 730: oled_putString(&responseData[0],6,2);
  8038  000A00  0E96               	movlw	low _responseData
  8039  000A02  0100               	movlb	0	; () banked
  8040  000A04  6F71               	movwf	oled_putString@string& (0+255),b
  8041  000A06  0E01               	movlw	high _responseData
  8042  000A08  0100               	movlb	0	; () banked
  8043  000A0A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8044  000A0C  0E06               	movlw	6
  8045  000A0E  0100               	movlb	0	; () banked
  8046  000A10  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8047  000A12  0E02               	movlw	2
  8048  000A14  0100               	movlb	0	; () banked
  8049  000A16  6F74               	movwf	oled_putString@start_page& (0+255),b
  8050  000A18  EC49  F02F         	call	_oled_putString	;wreg free
  8051                           
  8052                           ;MOTEapp.c: 732: oled_putString(&responseData[10],0,3);
  8053  000A1C  0EA0               	movlw	low (_responseData+10)
  8054  000A1E  0100               	movlb	0	; () banked
  8055  000A20  6F71               	movwf	oled_putString@string& (0+255),b
  8056  000A22  0E01               	movlw	high (_responseData+10)
  8057  000A24  0100               	movlb	0	; () banked
  8058  000A26  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8059  000A28  0E00               	movlw	0
  8060  000A2A  0100               	movlb	0	; () banked
  8061  000A2C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8062  000A2E  0E03               	movlw	3
  8063  000A30  0100               	movlb	0	; () banked
  8064  000A32  6F74               	movwf	oled_putString@start_page& (0+255),b
  8065  000A34  EC49  F02F         	call	_oled_putString	;wreg free
  8066                           
  8067                           ;MOTEapp.c: 734: runningState = runningDownlinkDisplay;
  8068  000A38  0E0B               	movlw	11
  8069  000A3A  0100               	movlb	0	; () banked
  8070  000A3C  6FEE               	movwf	_runningState& (0+255),b
  8071                           
  8072                           ; BSR set to: 0
  8073                           ;MOTEapp.c: 735: }
  8074                           ;MOTEapp.c: 736: break;
  8075                           
  8076                           ; BSR set to: 0
  8077  000A3E  0012               	return	
  8078  000A40                     l14200:
  8079                           
  8080                           ; BSR set to: 0
  8081                           ;MOTEapp.c: 738: if ( (changeStates) || (selectButton) )
  8082  000A40  0100               	movlb	0	; () banked
  8083  000A42  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8084  000A44  0100               	movlb	0	; () banked
  8085  000A46  A4D8               	btfss	status,2,c
  8086  000A48  D005               	goto	l14204
  8087                           
  8088                           ; BSR set to: 0
  8089  000A4A  0100               	movlb	0	; () banked
  8090  000A4C  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8091  000A4E  0100               	movlb	0	; () banked
  8092  000A50  B4D8               	btfsc	status,2,c
  8093  000A52  0012               	return	
  8094  000A54                     l14204:
  8095                           
  8096                           ; BSR set to: 0
  8097                           ;MOTEapp.c: 739: {
  8098                           ;MOTEapp.c: 740: oled_clear();
  8099  000A54  ECAB  F034         	call	_oled_clear	;wreg free
  8100                           
  8101                           ;MOTEapp.c: 741: oled_putString(" View Downlink  ",0,0);
  8102  000A58  0EBC               	movlw	low STR_78
  8103  000A5A  0100               	movlb	0	; () banked
  8104  000A5C  6F71               	movwf	oled_putString@string& (0+255),b
  8105  000A5E  0E7A               	movlw	high STR_78
  8106  000A60  0100               	movlb	0	; () banked
  8107  000A62  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8108  000A64  0E00               	movlw	0
  8109  000A66  0100               	movlb	0	; () banked
  8110  000A68  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8111  000A6A  0E00               	movlw	0
  8112  000A6C  0100               	movlb	0	; () banked
  8113  000A6E  6F74               	movwf	oled_putString@start_page& (0+255),b
  8114  000A70  EC49  F02F         	call	_oled_putString	;wreg free
  8115                           
  8116                           ;MOTEapp.c: 742: oled_putString("  Last Message  ",0,1);
  8117  000A74  0EAB               	movlw	low STR_79
  8118  000A76  0100               	movlb	0	; () banked
  8119  000A78  6F71               	movwf	oled_putString@string& (0+255),b
  8120  000A7A  0E7A               	movlw	high STR_79
  8121  000A7C  0100               	movlb	0	; () banked
  8122  000A7E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8123  000A80  0E00               	movlw	0
  8124  000A82  0100               	movlb	0	; () banked
  8125  000A84  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8126  000A86  0E01               	movlw	1
  8127  000A88  0100               	movlb	0	; () banked
  8128  000A8A  6F74               	movwf	oled_putString@start_page& (0+255),b
  8129  000A8C  EC49  F02F         	call	_oled_putString	;wreg free
  8130                           
  8131                           ;MOTEapp.c: 743: oled_putString("(NAV)    (SEL) ",0,3);
  8132  000A90  0E84               	movlw	low STR_77
  8133  000A92  0100               	movlb	0	; () banked
  8134  000A94  6F71               	movwf	oled_putString@string& (0+255),b
  8135  000A96  0E7C               	movlw	high STR_77
  8136  000A98  0100               	movlb	0	; () banked
  8137  000A9A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8138  000A9C  0E00               	movlw	0
  8139  000A9E  0100               	movlb	0	; () banked
  8140  000AA0  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8141  000AA2  0E03               	movlw	3
  8142  000AA4  0100               	movlb	0	; () banked
  8143  000AA6  6F74               	movwf	oled_putString@start_page& (0+255),b
  8144  000AA8  EC49  F02F         	call	_oled_putString	;wreg free
  8145                           
  8146                           ;MOTEapp.c: 744: runningState = runningDownlink;
  8147  000AAC  0E0A               	movlw	10
  8148  000AAE  0100               	movlb	0	; () banked
  8149  000AB0  6FEE               	movwf	_runningState& (0+255),b
  8150                           
  8151                           ; BSR set to: 0
  8152                           ;MOTEapp.c: 745: }
  8153                           ;MOTEapp.c: 746: break;
  8154  000AB2  0012               	return	
  8155  000AB4                     l14214:
  8156                           
  8157                           ; BSR set to: 0
  8158                           ;MOTEapp.c: 748: if (changeStates)
  8159  000AB4  0100               	movlb	0	; () banked
  8160  000AB6  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8161  000AB8  0100               	movlb	0	; () banked
  8162  000ABA  B4D8               	btfsc	status,2,c
  8163  000ABC  D043               	goto	l14228
  8164                           
  8165                           ; BSR set to: 0
  8166                           ;MOTEapp.c: 749: {
  8167                           ;MOTEapp.c: 750: oled_clear();
  8168  000ABE  ECAB  F034         	call	_oled_clear	;wreg free
  8169                           
  8170                           ;MOTEapp.c: 751: oled_putString("Menu Has Timeout",0,0);
  8171  000AC2  0E21               	movlw	low STR_111
  8172  000AC4  0100               	movlb	0	; () banked
  8173  000AC6  6F71               	movwf	oled_putString@string& (0+255),b
  8174  000AC8  0E7C               	movlw	high STR_111
  8175  000ACA  0100               	movlb	0	; () banked
  8176  000ACC  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8177  000ACE  0E00               	movlw	0
  8178  000AD0  0100               	movlb	0	; () banked
  8179  000AD2  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8180  000AD4  0E00               	movlw	0
  8181  000AD6  0100               	movlb	0	; () banked
  8182  000AD8  6F74               	movwf	oled_putString@start_page& (0+255),b
  8183  000ADA  EC49  F02F         	call	_oled_putString	;wreg free
  8184                           
  8185                           ;MOTEapp.c: 752: if (menuTimeout)
  8186  000ADE  0100               	movlb	0	; () banked
  8187  000AE0  51F9               	movf	_menuTimeout& (0+255),w,b
  8188  000AE2  B4D8               	btfsc	status,2,c
  8189  000AE4  D00F               	goto	l14224
  8190                           
  8191                           ; BSR set to: 0
  8192                           ;MOTEapp.c: 753: oled_putString("    Enabled   ", 0,2);
  8193  000AE6  0ED4               	movlw	low STR_112
  8194  000AE8  0100               	movlb	0	; () banked
  8195  000AEA  6F71               	movwf	oled_putString@string& (0+255),b
  8196  000AEC  0E7C               	movlw	high STR_112
  8197  000AEE  0100               	movlb	0	; () banked
  8198  000AF0  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8199  000AF2  0E00               	movlw	0
  8200  000AF4  0100               	movlb	0	; () banked
  8201  000AF6  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8202  000AF8  0E02               	movlw	2
  8203  000AFA  0100               	movlb	0	; () banked
  8204  000AFC  6F74               	movwf	oled_putString@start_page& (0+255),b
  8205  000AFE  EC49  F02F         	call	_oled_putString	;wreg free
  8206  000B02  D00E               	goto	l523
  8207  000B04                     l14224:
  8208                           
  8209                           ;MOTEapp.c: 754: else
  8210                           ;MOTEapp.c: 755: oled_putString("    Disabled  ", 0,2);
  8211  000B04  0EE3               	movlw	low STR_113
  8212  000B06  0100               	movlb	0	; () banked
  8213  000B08  6F71               	movwf	oled_putString@string& (0+255),b
  8214  000B0A  0E7C               	movlw	high STR_113
  8215  000B0C  0100               	movlb	0	; () banked
  8216  000B0E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8217  000B10  0E00               	movlw	0
  8218  000B12  0100               	movlb	0	; () banked
  8219  000B14  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8220  000B16  0E02               	movlw	2
  8221  000B18  0100               	movlb	0	; () banked
  8222  000B1A  6F74               	movwf	oled_putString@start_page& (0+255),b
  8223  000B1C  EC49  F02F         	call	_oled_putString	;wreg free
  8224  000B20                     l523:
  8225                           
  8226                           ;MOTEapp.c: 756: oled_putString("(NAV)    (CNG) ",0,3);
  8227  000B20  0E74               	movlw	low STR_114
  8228  000B22  0100               	movlb	0	; () banked
  8229  000B24  6F71               	movwf	oled_putString@string& (0+255),b
  8230  000B26  0E7C               	movlw	high STR_114
  8231  000B28  0100               	movlb	0	; () banked
  8232  000B2A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8233  000B2C  0E00               	movlw	0
  8234  000B2E  0100               	movlb	0	; () banked
  8235  000B30  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8236  000B32  0E03               	movlw	3
  8237  000B34  0100               	movlb	0	; () banked
  8238  000B36  6F74               	movwf	oled_putString@start_page& (0+255),b
  8239  000B38  EC49  F02F         	call	_oled_putString	;wreg free
  8240                           
  8241                           ;MOTEapp.c: 757: runningState = runningMenuTimeout;
  8242  000B3C  0E0C               	movlw	12
  8243  000B3E  0100               	movlb	0	; () banked
  8244  000B40  6FEE               	movwf	_runningState& (0+255),b
  8245                           
  8246                           ;MOTEapp.c: 758: }
  8247  000B42  0012               	return	
  8248  000B44                     l14228:
  8249                           
  8250                           ; BSR set to: 0
  8251                           ;MOTEapp.c: 759: else if (selectButton)
  8252  000B44  0100               	movlb	0	; () banked
  8253  000B46  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8254  000B48  0100               	movlb	0	; () banked
  8255  000B4A  B4D8               	btfsc	status,2,c
  8256  000B4C  0012               	return	
  8257                           
  8258                           ; BSR set to: 0
  8259                           ;MOTEapp.c: 760: {
  8260                           ;MOTEapp.c: 761: oled_clear();
  8261  000B4E  ECAB  F034         	call	_oled_clear	;wreg free
  8262                           
  8263                           ;MOTEapp.c: 762: oled_putString("  Sensor Data  ",0,0);
  8264  000B52  0E64               	movlw	low STR_102
  8265  000B54  0100               	movlb	0	; () banked
  8266  000B56  6F71               	movwf	oled_putString@string& (0+255),b
  8267  000B58  0E7C               	movlw	high STR_102
  8268  000B5A  0100               	movlb	0	; () banked
  8269  000B5C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8270  000B5E  0E00               	movlw	0
  8271  000B60  0100               	movlb	0	; () banked
  8272  000B62  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8273  000B64  0E00               	movlw	0
  8274  000B66  0100               	movlb	0	; () banked
  8275  000B68  6F74               	movwf	oled_putString@start_page& (0+255),b
  8276  000B6A  EC49  F02F         	call	_oled_putString	;wreg free
  8277                           
  8278                           ;MOTEapp.c: 763: oled_putString("Light:",0,1);
  8279  000B6E  0E81               	movlw	low STR_116
  8280  000B70  0100               	movlb	0	; () banked
  8281  000B72  6F71               	movwf	oled_putString@string& (0+255),b
  8282  000B74  0E7F               	movlw	high STR_116
  8283  000B76  0100               	movlb	0	; () banked
  8284  000B78  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8285  000B7A  0E00               	movlw	0
  8286  000B7C  0100               	movlb	0	; () banked
  8287  000B7E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8288  000B80  0E01               	movlw	1
  8289  000B82  0100               	movlb	0	; () banked
  8290  000B84  6F74               	movwf	oled_putString@start_page& (0+255),b
  8291  000B86  EC49  F02F         	call	_oled_putString	;wreg free
  8292                           
  8293                           ;MOTEapp.c: 764: oled_putString("Temp :",0,2);
  8294  000B8A  0E7A               	movlw	low STR_117
  8295  000B8C  0100               	movlb	0	; () banked
  8296  000B8E  6F71               	movwf	oled_putString@string& (0+255),b
  8297  000B90  0E7F               	movlw	high STR_117
  8298  000B92  0100               	movlb	0	; () banked
  8299  000B94  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8300  000B96  0E00               	movlw	0
  8301  000B98  0100               	movlb	0	; () banked
  8302  000B9A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8303  000B9C  0E02               	movlw	2
  8304  000B9E  0100               	movlb	0	; () banked
  8305  000BA0  6F74               	movwf	oled_putString@start_page& (0+255),b
  8306  000BA2  EC49  F02F         	call	_oled_putString	;wreg free
  8307                           
  8308                           ;MOTEapp.c: 765: oled_putString("C",10,2);
  8309  000BA6  0EFB               	movlw	low STR_118
  8310  000BA8  0100               	movlb	0	; () banked
  8311  000BAA  6F71               	movwf	oled_putString@string& (0+255),b
  8312  000BAC  0E7F               	movlw	high STR_118
  8313  000BAE  0100               	movlb	0	; () banked
  8314  000BB0  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8315  000BB2  0E0A               	movlw	10
  8316  000BB4  0100               	movlb	0	; () banked
  8317  000BB6  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8318  000BB8  0E02               	movlw	2
  8319  000BBA  0100               	movlb	0	; () banked
  8320  000BBC  6F74               	movwf	oled_putString@start_page& (0+255),b
  8321  000BBE  EC49  F02F         	call	_oled_putString	;wreg free
  8322                           
  8323                           ;MOTEapp.c: 767: moteApp_setSensorsInput();
  8324  000BC2  EC6B  F02C         	call	_moteApp_setSensorsInput	;wreg free
  8325                           
  8326                           ;MOTEapp.c: 768: runningState = runningSensorMenu;
  8327  000BC6  0E02               	movlw	2
  8328  000BC8  0100               	movlb	0	; () banked
  8329  000BCA  6FEE               	movwf	_runningState& (0+255),b
  8330                           
  8331                           ; BSR set to: 0
  8332                           ;MOTEapp.c: 769: }
  8333                           ;MOTEapp.c: 770: break;
  8334                           
  8335                           ; BSR set to: 0
  8336  000BCC  0012               	return	
  8337  000BCE                     l14244:
  8338                           
  8339                           ; BSR set to: 0
  8340                           ;MOTEapp.c: 772: if (changeStates)
  8341  000BCE  0100               	movlb	0	; () banked
  8342  000BD0  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8343  000BD2  0100               	movlb	0	; () banked
  8344  000BD4  B4D8               	btfsc	status,2,c
  8345  000BD6  D0BC               	goto	l14276
  8346                           
  8347                           ; BSR set to: 0
  8348                           ;MOTEapp.c: 773: {
  8349                           ;MOTEapp.c: 774: oled_clear();
  8350  000BD8  ECAB  F034         	call	_oled_clear	;wreg free
  8351                           
  8352                           ;MOTEapp.c: 775: oled_putString("Periodic Uplink ",0,0);
  8353  000BDC  0E22               	movlw	low STR_119
  8354  000BDE  0100               	movlb	0	; () banked
  8355  000BE0  6F71               	movwf	oled_putString@string& (0+255),b
  8356  000BE2  0E7B               	movlw	high STR_119
  8357  000BE4  0100               	movlb	0	; () banked
  8358  000BE6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8359  000BE8  0E00               	movlw	0
  8360  000BEA  0100               	movlb	0	; () banked
  8361  000BEC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8362  000BEE  0E00               	movlw	0
  8363  000BF0  0100               	movlb	0	; () banked
  8364  000BF2  6F74               	movwf	oled_putString@start_page& (0+255),b
  8365  000BF4  EC49  F02F         	call	_oled_putString	;wreg free
  8366                           
  8367                           ;MOTEapp.c: 776: oled_putString("Tx Event Timing ",0,1);
  8368  000BF8  0E11               	movlw	low STR_120
  8369  000BFA  0100               	movlb	0	; () banked
  8370  000BFC  6F71               	movwf	oled_putString@string& (0+255),b
  8371  000BFE  0E7B               	movlw	high STR_120
  8372  000C00  0100               	movlb	0	; () banked
  8373  000C02  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8374  000C04  0E00               	movlw	0
  8375  000C06  0100               	movlb	0	; () banked
  8376  000C08  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8377  000C0A  0E01               	movlw	1
  8378  000C0C  0100               	movlb	0	; () banked
  8379  000C0E  6F74               	movwf	oled_putString@start_page& (0+255),b
  8380  000C10  EC49  F02F         	call	_oled_putString	;wreg free
  8381                           
  8382                           ;MOTEapp.c: 777: oled_putString("Every:",0,2);
  8383  000C14  0E88               	movlw	low STR_121
  8384  000C16  0100               	movlb	0	; () banked
  8385  000C18  6F71               	movwf	oled_putString@string& (0+255),b
  8386  000C1A  0E7F               	movlw	high STR_121
  8387  000C1C  0100               	movlb	0	; () banked
  8388  000C1E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8389  000C20  0E00               	movlw	0
  8390  000C22  0100               	movlb	0	; () banked
  8391  000C24  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8392  000C26  0E02               	movlw	2
  8393  000C28  0100               	movlb	0	; () banked
  8394  000C2A  6F74               	movwf	oled_putString@start_page& (0+255),b
  8395  000C2C  EC49  F02F         	call	_oled_putString	;wreg free
  8396                           
  8397                           ;MOTEapp.c: 778: oled_putString("Mins",12,2);
  8398  000C30  0EC3               	movlw	low STR_122
  8399  000C32  0100               	movlb	0	; () banked
  8400  000C34  6F71               	movwf	oled_putString@string& (0+255),b
  8401  000C36  0E7F               	movlw	high STR_122
  8402  000C38  0100               	movlb	0	; () banked
  8403  000C3A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8404  000C3C  0E0C               	movlw	12
  8405  000C3E  0100               	movlb	0	; () banked
  8406  000C40  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8407  000C42  0E02               	movlw	2
  8408  000C44  0100               	movlb	0	; () banked
  8409  000C46  6F74               	movwf	oled_putString@start_page& (0+255),b
  8410  000C48  EC49  F02F         	call	_oled_putString	;wreg free
  8411                           
  8412                           ;MOTEapp.c: 780: switch (periodicUpValue)
  8413  000C4C  D05A               	goto	l14270
  8414  000C4E                     l14256:
  8415                           
  8416                           ;MOTEapp.c: 784: oled_putString("5",7,2);
  8417  000C4E  0ECC               	movlw	low (STR_175+11)
  8418  000C50  0100               	movlb	0	; () banked
  8419  000C52  6F71               	movwf	oled_putString@string& (0+255),b
  8420  000C54  0E7D               	movlw	high (STR_175+11)
  8421  000C56  0100               	movlb	0	; () banked
  8422  000C58  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8423  000C5A  0E07               	movlw	7
  8424  000C5C  0100               	movlb	0	; () banked
  8425  000C5E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8426  000C60  0E02               	movlw	2
  8427  000C62  0100               	movlb	0	; () banked
  8428  000C64  6F74               	movwf	oled_putString@start_page& (0+255),b
  8429  000C66  EC49  F02F         	call	_oled_putString	;wreg free
  8430                           
  8431                           ;MOTEapp.c: 785: break;
  8432  000C6A  D060               	goto	l14272
  8433  000C6C                     l14258:
  8434                           
  8435                           ;MOTEapp.c: 787: oled_putString("10",7,2);
  8436  000C6C  0EE1               	movlw	low (STR_146+1)
  8437  000C6E  0100               	movlb	0	; () banked
  8438  000C70  6F71               	movwf	oled_putString@string& (0+255),b
  8439  000C72  0E7F               	movlw	high (STR_146+1)
  8440  000C74  0100               	movlb	0	; () banked
  8441  000C76  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8442  000C78  0E07               	movlw	7
  8443  000C7A  0100               	movlb	0	; () banked
  8444  000C7C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8445  000C7E  0E02               	movlw	2
  8446  000C80  0100               	movlb	0	; () banked
  8447  000C82  6F74               	movwf	oled_putString@start_page& (0+255),b
  8448  000C84  EC49  F02F         	call	_oled_putString	;wreg free
  8449                           
  8450                           ;MOTEapp.c: 788: break;
  8451  000C88  D051               	goto	l14272
  8452  000C8A                     l14260:
  8453                           
  8454                           ;MOTEapp.c: 790: oled_putString("15",7,2);
  8455  000C8A  0EED               	movlw	low (STR_147+1)
  8456  000C8C  0100               	movlb	0	; () banked
  8457  000C8E  6F71               	movwf	oled_putString@string& (0+255),b
  8458  000C90  0E7F               	movlw	high (STR_147+1)
  8459  000C92  0100               	movlb	0	; () banked
  8460  000C94  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8461  000C96  0E07               	movlw	7
  8462  000C98  0100               	movlb	0	; () banked
  8463  000C9A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8464  000C9C  0E02               	movlw	2
  8465  000C9E  0100               	movlb	0	; () banked
  8466  000CA0  6F74               	movwf	oled_putString@start_page& (0+255),b
  8467  000CA2  EC49  F02F         	call	_oled_putString	;wreg free
  8468                           
  8469                           ;MOTEapp.c: 791: break;
  8470  000CA6  D042               	goto	l14272
  8471  000CA8                     l14262:
  8472                           
  8473                           ;MOTEapp.c: 793: oled_putString("30",7,2);
  8474  000CA8  0EE5               	movlw	low (STR_148+1)
  8475  000CAA  0100               	movlb	0	; () banked
  8476  000CAC  6F71               	movwf	oled_putString@string& (0+255),b
  8477  000CAE  0E7F               	movlw	high (STR_148+1)
  8478  000CB0  0100               	movlb	0	; () banked
  8479  000CB2  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8480  000CB4  0E07               	movlw	7
  8481  000CB6  0100               	movlb	0	; () banked
  8482  000CB8  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8483  000CBA  0E02               	movlw	2
  8484  000CBC  0100               	movlb	0	; () banked
  8485  000CBE  6F74               	movwf	oled_putString@start_page& (0+255),b
  8486  000CC0  EC49  F02F         	call	_oled_putString	;wreg free
  8487                           
  8488                           ;MOTEapp.c: 794: break;
  8489  000CC4  D033               	goto	l14272
  8490  000CC6                     l14264:
  8491                           
  8492                           ;MOTEapp.c: 796: oled_putString("60",7,2);
  8493  000CC6  0EE9               	movlw	low (STR_149+1)
  8494  000CC8  0100               	movlb	0	; () banked
  8495  000CCA  6F71               	movwf	oled_putString@string& (0+255),b
  8496  000CCC  0E7F               	movlw	high (STR_149+1)
  8497  000CCE  0100               	movlb	0	; () banked
  8498  000CD0  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8499  000CD2  0E07               	movlw	7
  8500  000CD4  0100               	movlb	0	; () banked
  8501  000CD6  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8502  000CD8  0E02               	movlw	2
  8503  000CDA  0100               	movlb	0	; () banked
  8504  000CDC  6F74               	movwf	oled_putString@start_page& (0+255),b
  8505  000CDE  EC49  F02F         	call	_oled_putString	;wreg free
  8506                           
  8507                           ;MOTEapp.c: 797: break;
  8508  000CE2  D024               	goto	l14272
  8509  000CE4                     l14266:
  8510                           
  8511                           ;MOTEapp.c: 799: oled_putString("OFF",7,2);
  8512  000CE4  0EF0               	movlw	low STR_128
  8513  000CE6  0100               	movlb	0	; () banked
  8514  000CE8  6F71               	movwf	oled_putString@string& (0+255),b
  8515  000CEA  0E7F               	movlw	high STR_128
  8516  000CEC  0100               	movlb	0	; () banked
  8517  000CEE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8518  000CF0  0E07               	movlw	7
  8519  000CF2  0100               	movlb	0	; () banked
  8520  000CF4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8521  000CF6  0E02               	movlw	2
  8522  000CF8  0100               	movlb	0	; () banked
  8523  000CFA  6F74               	movwf	oled_putString@start_page& (0+255),b
  8524  000CFC  EC49  F02F         	call	_oled_putString	;wreg free
  8525                           
  8526                           ;MOTEapp.c: 801: }
  8527                           
  8528                           ;MOTEapp.c: 800: break;
  8529  000D00  D015               	goto	l14272
  8530  000D02                     l14270:
  8531  000D02  0100               	movlb	0	; () banked
  8532  000D04  51FD               	movf	_periodicUpValue& (0+255),w,b
  8533                           
  8534                           ; Switch size 1, requested type "space"
  8535                           ; Number of cases is 6, Range of values is 0 to 5
  8536                           ; switch strategies available:
  8537                           ; Name         Instructions Cycles
  8538                           ; simple_byte           19    10 (average)
  8539                           ;	Chosen strategy is simple_byte
  8540  000D06  0A00               	xorlw	0	; case 0
  8541  000D08  B4D8               	btfsc	status,2,c
  8542  000D0A  D7A1               	goto	l14256
  8543  000D0C  0A01               	xorlw	1	; case 1
  8544  000D0E  B4D8               	btfsc	status,2,c
  8545  000D10  D7AD               	goto	l14258
  8546  000D12  0A03               	xorlw	3	; case 2
  8547  000D14  B4D8               	btfsc	status,2,c
  8548  000D16  D7B9               	goto	l14260
  8549  000D18  0A01               	xorlw	1	; case 3
  8550  000D1A  B4D8               	btfsc	status,2,c
  8551  000D1C  D7C5               	goto	l14262
  8552  000D1E  0A07               	xorlw	7	; case 4
  8553  000D20  B4D8               	btfsc	status,2,c
  8554  000D22  D7D1               	goto	l14264
  8555  000D24  0A01               	xorlw	1	; case 5
  8556  000D26  B4D8               	btfsc	status,2,c
  8557  000D28  D7DD               	goto	l14266
  8558  000D2A  D791               	goto	l14256
  8559  000D2C                     l14272:
  8560                           
  8561                           ;MOTEapp.c: 802: oled_putString("(NAV)    (CNG) ",0,3);
  8562  000D2C  0E74               	movlw	low STR_114
  8563  000D2E  0100               	movlb	0	; () banked
  8564  000D30  6F71               	movwf	oled_putString@string& (0+255),b
  8565  000D32  0E7C               	movlw	high STR_114
  8566  000D34  0100               	movlb	0	; () banked
  8567  000D36  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8568  000D38  0E00               	movlw	0
  8569  000D3A  0100               	movlb	0	; () banked
  8570  000D3C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8571  000D3E  0E03               	movlw	3
  8572  000D40  0100               	movlb	0	; () banked
  8573  000D42  6F74               	movwf	oled_putString@start_page& (0+255),b
  8574  000D44  EC49  F02F         	call	_oled_putString	;wreg free
  8575                           
  8576                           ;MOTEapp.c: 803: runningState = runningPeriodicWakeUpLength;
  8577  000D48  0E0D               	movlw	13
  8578  000D4A  0100               	movlb	0	; () banked
  8579  000D4C  6FEE               	movwf	_runningState& (0+255),b
  8580                           
  8581                           ;MOTEapp.c: 804: }
  8582  000D4E  0012               	return	
  8583  000D50                     l14276:
  8584                           
  8585                           ; BSR set to: 0
  8586                           ;MOTEapp.c: 805: else if (selectButton)
  8587  000D50  0100               	movlb	0	; () banked
  8588  000D52  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8589  000D54  0100               	movlb	0	; () banked
  8590  000D56  B4D8               	btfsc	status,2,c
  8591  000D58  0012               	return	
  8592                           
  8593                           ; BSR set to: 0
  8594                           ;MOTEapp.c: 806: {
  8595                           ;MOTEapp.c: 807: if (menuTimeout)
  8596  000D5A  0100               	movlb	0	; () banked
  8597  000D5C  51F9               	movf	_menuTimeout& (0+255),w,b
  8598  000D5E  B4D8               	btfsc	status,2,c
  8599  000D60  D012               	goto	l14284
  8600                           
  8601                           ; BSR set to: 0
  8602                           ;MOTEapp.c: 808: {
  8603                           ;MOTEapp.c: 809: menuTimeout = 0;
  8604  000D62  0E00               	movlw	0
  8605  000D64  0100               	movlb	0	; () banked
  8606  000D66  6FF9               	movwf	_menuTimeout& (0+255),b
  8607                           
  8608                           ; BSR set to: 0
  8609                           ;MOTEapp.c: 810: oled_putString("    Disabled  ", 0,2);
  8610  000D68  0EE3               	movlw	low STR_113
  8611  000D6A  0100               	movlb	0	; () banked
  8612  000D6C  6F71               	movwf	oled_putString@string& (0+255),b
  8613  000D6E  0E7C               	movlw	high STR_113
  8614  000D70  0100               	movlb	0	; () banked
  8615  000D72  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8616  000D74  0E00               	movlw	0
  8617  000D76  0100               	movlb	0	; () banked
  8618  000D78  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8619  000D7A  0E02               	movlw	2
  8620  000D7C  0100               	movlb	0	; () banked
  8621  000D7E  6F74               	movwf	oled_putString@start_page& (0+255),b
  8622  000D80  EC49  F02F         	call	_oled_putString	;wreg free
  8623                           
  8624                           ;MOTEapp.c: 811: }
  8625  000D84  0012               	return	
  8626  000D86                     l14284:
  8627                           
  8628                           ;MOTEapp.c: 812: else
  8629                           ;MOTEapp.c: 813: {
  8630                           ;MOTEapp.c: 814: menuTimeout = 1;
  8631  000D86  0E01               	movlw	1
  8632  000D88  0100               	movlb	0	; () banked
  8633  000D8A  6FF9               	movwf	_menuTimeout& (0+255),b
  8634                           
  8635                           ; BSR set to: 0
  8636                           ;MOTEapp.c: 815: oled_putString("    Enabled   ", 0,2);
  8637  000D8C  0ED4               	movlw	low STR_112
  8638  000D8E  0100               	movlb	0	; () banked
  8639  000D90  6F71               	movwf	oled_putString@string& (0+255),b
  8640  000D92  0E7C               	movlw	high STR_112
  8641  000D94  0100               	movlb	0	; () banked
  8642  000D96  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8643  000D98  0E00               	movlw	0
  8644  000D9A  0100               	movlb	0	; () banked
  8645  000D9C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8646  000D9E  0E02               	movlw	2
  8647  000DA0  0100               	movlb	0	; () banked
  8648  000DA2  6F74               	movwf	oled_putString@start_page& (0+255),b
  8649  000DA4  EC49  F02F         	call	_oled_putString	;wreg free
  8650                           
  8651                           ;MOTEapp.c: 816: }
  8652                           ;MOTEapp.c: 817: }
  8653                           ;MOTEapp.c: 818: break;
  8654  000DA8  0012               	return	
  8655  000DAA                     l14288:
  8656                           
  8657                           ;MOTEapp.c: 821: if ( (changeStates) || (selectButton) )
  8658  000DAA  0100               	movlb	0	; () banked
  8659  000DAC  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8660  000DAE  0100               	movlb	0	; () banked
  8661  000DB0  A4D8               	btfss	status,2,c
  8662  000DB2  D005               	goto	l14292
  8663                           
  8664                           ; BSR set to: 0
  8665  000DB4  0100               	movlb	0	; () banked
  8666  000DB6  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8667  000DB8  0100               	movlb	0	; () banked
  8668  000DBA  B4D8               	btfsc	status,2,c
  8669  000DBC  0012               	return	
  8670  000DBE                     l14292:
  8671                           
  8672                           ; BSR set to: 0
  8673                           ;MOTEapp.c: 822: {
  8674                           ;MOTEapp.c: 823: oled_clear();
  8675  000DBE  ECAB  F034         	call	_oled_clear	;wreg free
  8676                           
  8677                           ;MOTEapp.c: 824: oled_putString("  Sensor Data  ",0,0);
  8678  000DC2  0E64               	movlw	low STR_102
  8679  000DC4  0100               	movlb	0	; () banked
  8680  000DC6  6F71               	movwf	oled_putString@string& (0+255),b
  8681  000DC8  0E7C               	movlw	high STR_102
  8682  000DCA  0100               	movlb	0	; () banked
  8683  000DCC  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8684  000DCE  0E00               	movlw	0
  8685  000DD0  0100               	movlb	0	; () banked
  8686  000DD2  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8687  000DD4  0E00               	movlw	0
  8688  000DD6  0100               	movlb	0	; () banked
  8689  000DD8  6F74               	movwf	oled_putString@start_page& (0+255),b
  8690  000DDA  EC49  F02F         	call	_oled_putString	;wreg free
  8691                           
  8692                           ;MOTEapp.c: 825: oled_putString("    Display    ",0,1);
  8693  000DDE  0E54               	movlw	low STR_103
  8694  000DE0  0100               	movlb	0	; () banked
  8695  000DE2  6F71               	movwf	oled_putString@string& (0+255),b
  8696  000DE4  0E7C               	movlw	high STR_103
  8697  000DE6  0100               	movlb	0	; () banked
  8698  000DE8  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8699  000DEA  0E00               	movlw	0
  8700  000DEC  0100               	movlb	0	; () banked
  8701  000DEE  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8702  000DF0  0E01               	movlw	1
  8703  000DF2  0100               	movlb	0	; () banked
  8704  000DF4  6F74               	movwf	oled_putString@start_page& (0+255),b
  8705  000DF6  EC49  F02F         	call	_oled_putString	;wreg free
  8706                           
  8707                           ;MOTEapp.c: 826: oled_putString("(NAV)    (SEL) ",0,3);
  8708  000DFA  0E84               	movlw	low STR_77
  8709  000DFC  0100               	movlb	0	; () banked
  8710  000DFE  6F71               	movwf	oled_putString@string& (0+255),b
  8711  000E00  0E7C               	movlw	high STR_77
  8712  000E02  0100               	movlb	0	; () banked
  8713  000E04  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8714  000E06  0E00               	movlw	0
  8715  000E08  0100               	movlb	0	; () banked
  8716  000E0A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8717  000E0C  0E03               	movlw	3
  8718  000E0E  0100               	movlb	0	; () banked
  8719  000E10  6F74               	movwf	oled_putString@start_page& (0+255),b
  8720  000E12  EC49  F02F         	call	_oled_putString	;wreg free
  8721                           
  8722                           ;MOTEapp.c: 827: runningState = runningSensor;
  8723  000E16  0E01               	movlw	1
  8724  000E18  0100               	movlb	0	; () banked
  8725  000E1A  6FEE               	movwf	_runningState& (0+255),b
  8726                           
  8727                           ; BSR set to: 0
  8728                           ;MOTEapp.c: 828: }
  8729                           ;MOTEapp.c: 829: break;
  8730  000E1C  0012               	return	
  8731  000E1E                     l14302:
  8732                           
  8733                           ; BSR set to: 0
  8734                           ;MOTEapp.c: 831: if (changeStates)
  8735  000E1E  0100               	movlb	0	; () banked
  8736  000E20  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8737  000E22  0100               	movlb	0	; () banked
  8738  000E24  B4D8               	btfsc	status,2,c
  8739  000E26  D0B1               	goto	l14332
  8740                           
  8741                           ; BSR set to: 0
  8742                           ;MOTEapp.c: 832: {
  8743                           ;MOTEapp.c: 833: oled_clear();
  8744  000E28  ECAB  F034         	call	_oled_clear	;wreg free
  8745                           
  8746                           ;MOTEapp.c: 834: oled_putString("Select Data Rate",0,0);
  8747  000E2C  0EEE               	movlw	low STR_135
  8748  000E2E  0100               	movlb	0	; () banked
  8749  000E30  6F71               	movwf	oled_putString@string& (0+255),b
  8750  000E32  0E7B               	movlw	high STR_135
  8751  000E34  0100               	movlb	0	; () banked
  8752  000E36  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8753  000E38  0E00               	movlw	0
  8754  000E3A  0100               	movlb	0	; () banked
  8755  000E3C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8756  000E3E  0E00               	movlw	0
  8757  000E40  0100               	movlb	0	; () banked
  8758  000E42  6F74               	movwf	oled_putString@start_page& (0+255),b
  8759  000E44  EC49  F02F         	call	_oled_putString	;wreg free
  8760                           
  8761                           ;MOTEapp.c: 835: oled_putString("Data Rate: ",0,2);
  8762  000E48  0E59               	movlw	low STR_136
  8763  000E4A  0100               	movlb	0	; () banked
  8764  000E4C  6F71               	movwf	oled_putString@string& (0+255),b
  8765  000E4E  0E7E               	movlw	high STR_136
  8766  000E50  0100               	movlb	0	; () banked
  8767  000E52  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8768  000E54  0E00               	movlw	0
  8769  000E56  0100               	movlb	0	; () banked
  8770  000E58  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8771  000E5A  0E02               	movlw	2
  8772  000E5C  0100               	movlb	0	; () banked
  8773  000E5E  6F74               	movwf	oled_putString@start_page& (0+255),b
  8774  000E60  EC49  F02F         	call	_oled_putString	;wreg free
  8775                           
  8776                           ;MOTEapp.c: 836: oled_putString("(NAV)    (CNG) ",0,3);
  8777  000E64  0E74               	movlw	low STR_114
  8778  000E66  0100               	movlb	0	; () banked
  8779  000E68  6F71               	movwf	oled_putString@string& (0+255),b
  8780  000E6A  0E7C               	movlw	high STR_114
  8781  000E6C  0100               	movlb	0	; () banked
  8782  000E6E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8783  000E70  0E00               	movlw	0
  8784  000E72  0100               	movlb	0	; () banked
  8785  000E74  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8786  000E76  0E03               	movlw	3
  8787  000E78  0100               	movlb	0	; () banked
  8788  000E7A  6F74               	movwf	oled_putString@start_page& (0+255),b
  8789  000E7C  EC49  F02F         	call	_oled_putString	;wreg free
  8790                           
  8791                           ;MOTEapp.c: 837: runningState = runningDataRateDisplay;
  8792  000E80  0E03               	movlw	3
  8793  000E82  0100               	movlb	0	; () banked
  8794  000E84  6FEE               	movwf	_runningState& (0+255),b
  8795                           
  8796                           ;MOTEapp.c: 840: switch (dataRateValue)
  8797  000E86  D069               	goto	l14330
  8798  000E88                     l14314:
  8799                           
  8800                           ; BSR set to: 0
  8801                           ;MOTEapp.c: 844: oled_putString(" 0 ",10,2);
  8802  000E88  0EC8               	movlw	low STR_138
  8803  000E8A  0100               	movlb	0	; () banked
  8804  000E8C  6F71               	movwf	oled_putString@string& (0+255),b
  8805  000E8E  0E7F               	movlw	high STR_138
  8806  000E90  0100               	movlb	0	; () banked
  8807  000E92  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8808  000E94  0E0A               	movlw	10
  8809  000E96  0100               	movlb	0	; () banked
  8810  000E98  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8811  000E9A  0E02               	movlw	2
  8812  000E9C  0100               	movlb	0	; () banked
  8813  000E9E  6F74               	movwf	oled_putString@start_page& (0+255),b
  8814  000EA0  EC49  F02F         	call	_oled_putString	;wreg free
  8815                           
  8816                           ;MOTEapp.c: 845: break;
  8817  000EA4  D072               	goto	l14332
  8818  000EA6                     l14316:
  8819                           
  8820                           ;MOTEapp.c: 847: oled_putString(" 1 ",10,2);
  8821  000EA6  0ECC               	movlw	low STR_139
  8822  000EA8  0100               	movlb	0	; () banked
  8823  000EAA  6F71               	movwf	oled_putString@string& (0+255),b
  8824  000EAC  0E7F               	movlw	high STR_139
  8825  000EAE  0100               	movlb	0	; () banked
  8826  000EB0  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8827  000EB2  0E0A               	movlw	10
  8828  000EB4  0100               	movlb	0	; () banked
  8829  000EB6  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8830  000EB8  0E02               	movlw	2
  8831  000EBA  0100               	movlb	0	; () banked
  8832  000EBC  6F74               	movwf	oled_putString@start_page& (0+255),b
  8833  000EBE  EC49  F02F         	call	_oled_putString	;wreg free
  8834                           
  8835                           ;MOTEapp.c: 848: break;
  8836  000EC2  D063               	goto	l14332
  8837  000EC4                     l14318:
  8838                           
  8839                           ;MOTEapp.c: 850: oled_putString(" 2 ",10,2);
  8840  000EC4  0ED0               	movlw	low STR_140
  8841  000EC6  0100               	movlb	0	; () banked
  8842  000EC8  6F71               	movwf	oled_putString@string& (0+255),b
  8843  000ECA  0E7F               	movlw	high STR_140
  8844  000ECC  0100               	movlb	0	; () banked
  8845  000ECE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8846  000ED0  0E0A               	movlw	10
  8847  000ED2  0100               	movlb	0	; () banked
  8848  000ED4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8849  000ED6  0E02               	movlw	2
  8850  000ED8  0100               	movlb	0	; () banked
  8851  000EDA  6F74               	movwf	oled_putString@start_page& (0+255),b
  8852  000EDC  EC49  F02F         	call	_oled_putString	;wreg free
  8853                           
  8854                           ;MOTEapp.c: 851: break;
  8855  000EE0  D054               	goto	l14332
  8856  000EE2                     l14320:
  8857                           
  8858                           ;MOTEapp.c: 853: oled_putString(" 3 ",10,2);
  8859  000EE2  0ED4               	movlw	low STR_141
  8860  000EE4  0100               	movlb	0	; () banked
  8861  000EE6  6F71               	movwf	oled_putString@string& (0+255),b
  8862  000EE8  0E7F               	movlw	high STR_141
  8863  000EEA  0100               	movlb	0	; () banked
  8864  000EEC  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8865  000EEE  0E0A               	movlw	10
  8866  000EF0  0100               	movlb	0	; () banked
  8867  000EF2  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8868  000EF4  0E02               	movlw	2
  8869  000EF6  0100               	movlb	0	; () banked
  8870  000EF8  6F74               	movwf	oled_putString@start_page& (0+255),b
  8871  000EFA  EC49  F02F         	call	_oled_putString	;wreg free
  8872                           
  8873                           ;MOTEapp.c: 854: break;
  8874  000EFE  D045               	goto	l14332
  8875  000F00                     l14322:
  8876                           
  8877                           ;MOTEapp.c: 856: oled_putString(" 4 ",10,2);
  8878  000F00  0ED8               	movlw	low STR_142
  8879  000F02  0100               	movlb	0	; () banked
  8880  000F04  6F71               	movwf	oled_putString@string& (0+255),b
  8881  000F06  0E7F               	movlw	high STR_142
  8882  000F08  0100               	movlb	0	; () banked
  8883  000F0A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8884  000F0C  0E0A               	movlw	10
  8885  000F0E  0100               	movlb	0	; () banked
  8886  000F10  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8887  000F12  0E02               	movlw	2
  8888  000F14  0100               	movlb	0	; () banked
  8889  000F16  6F74               	movwf	oled_putString@start_page& (0+255),b
  8890  000F18  EC49  F02F         	call	_oled_putString	;wreg free
  8891                           
  8892                           ;MOTEapp.c: 857: break;
  8893  000F1C  D036               	goto	l14332
  8894  000F1E                     l14324:
  8895                           
  8896                           ;MOTEapp.c: 859: oled_putString(" 5 ",10,2);
  8897  000F1E  0EDC               	movlw	low STR_143
  8898  000F20  0100               	movlb	0	; () banked
  8899  000F22  6F71               	movwf	oled_putString@string& (0+255),b
  8900  000F24  0E7F               	movlw	high STR_143
  8901  000F26  0100               	movlb	0	; () banked
  8902  000F28  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8903  000F2A  0E0A               	movlw	10
  8904  000F2C  0100               	movlb	0	; () banked
  8905  000F2E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8906  000F30  0E02               	movlw	2
  8907  000F32  0100               	movlb	0	; () banked
  8908  000F34  6F74               	movwf	oled_putString@start_page& (0+255),b
  8909  000F36  EC49  F02F         	call	_oled_putString	;wreg free
  8910                           
  8911                           ;MOTEapp.c: 860: break;
  8912  000F3A  D027               	goto	l14332
  8913  000F3C                     l14326:
  8914                           
  8915                           ;MOTEapp.c: 862: oled_putString("ADR",10,2);
  8916  000F3C  0EF4               	movlw	low STR_144
  8917  000F3E  0100               	movlb	0	; () banked
  8918  000F40  6F71               	movwf	oled_putString@string& (0+255),b
  8919  000F42  0E7F               	movlw	high STR_144
  8920  000F44  0100               	movlb	0	; () banked
  8921  000F46  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8922  000F48  0E0A               	movlw	10
  8923  000F4A  0100               	movlb	0	; () banked
  8924  000F4C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8925  000F4E  0E02               	movlw	2
  8926  000F50  0100               	movlb	0	; () banked
  8927  000F52  6F74               	movwf	oled_putString@start_page& (0+255),b
  8928  000F54  EC49  F02F         	call	_oled_putString	;wreg free
  8929                           
  8930                           ;MOTEapp.c: 864: }
  8931                           
  8932                           ;MOTEapp.c: 863: break;
  8933  000F58  D018               	goto	l14332
  8934  000F5A                     l14330:
  8935  000F5A  0100               	movlb	0	; () banked
  8936  000F5C  51F7               	movf	_dataRateValue& (0+255),w,b
  8937                           
  8938                           ; Switch size 1, requested type "space"
  8939                           ; Number of cases is 7, Range of values is 0 to 6
  8940                           ; switch strategies available:
  8941                           ; Name         Instructions Cycles
  8942                           ; simple_byte           22    12 (average)
  8943                           ;	Chosen strategy is simple_byte
  8944  000F5E  0A00               	xorlw	0	; case 0
  8945  000F60  B4D8               	btfsc	status,2,c
  8946  000F62  D792               	goto	l14314
  8947  000F64  0A01               	xorlw	1	; case 1
  8948  000F66  B4D8               	btfsc	status,2,c
  8949  000F68  D79E               	goto	l14316
  8950  000F6A  0A03               	xorlw	3	; case 2
  8951  000F6C  B4D8               	btfsc	status,2,c
  8952  000F6E  D7AA               	goto	l14318
  8953  000F70  0A01               	xorlw	1	; case 3
  8954  000F72  B4D8               	btfsc	status,2,c
  8955  000F74  D7B6               	goto	l14320
  8956  000F76  0A07               	xorlw	7	; case 4
  8957  000F78  B4D8               	btfsc	status,2,c
  8958  000F7A  D7C2               	goto	l14322
  8959  000F7C  0A01               	xorlw	1	; case 5
  8960  000F7E  B4D8               	btfsc	status,2,c
  8961  000F80  D7CE               	goto	l14324
  8962  000F82  0A03               	xorlw	3	; case 6
  8963  000F84  B4D8               	btfsc	status,2,c
  8964  000F86  D7DA               	goto	l14326
  8965  000F88  D77F               	goto	l14314
  8966  000F8A                     l14332:
  8967                           
  8968                           ;MOTEapp.c: 865: }
  8969                           ;MOTEapp.c: 866: if (selectButton)
  8970  000F8A  0100               	movlb	0	; () banked
  8971  000F8C  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8972  000F8E  0100               	movlb	0	; () banked
  8973  000F90  B4D8               	btfsc	status,2,c
  8974  000F92  0012               	return	
  8975                           
  8976                           ; BSR set to: 0
  8977                           ;MOTEapp.c: 867: {
  8978                           ;MOTEapp.c: 868: if (periodicUpValue < 5)
  8979  000F94  0E05               	movlw	5
  8980  000F96  0100               	movlb	0	; () banked
  8981  000F98  61FD               	cpfslt	_periodicUpValue& (0+255),b
  8982  000F9A  D003               	goto	l14338
  8983                           
  8984                           ; BSR set to: 0
  8985                           ;MOTEapp.c: 869: {
  8986                           ;MOTEapp.c: 870: periodicUpValue++;
  8987  000F9C  0100               	movlb	0	; () banked
  8988  000F9E  2BFD               	incf	_periodicUpValue& (0+255),f,b
  8989                           
  8990                           ;MOTEapp.c: 871: } else {
  8991  000FA0  D06F               	goto	l14364
  8992  000FA2                     l14338:
  8993                           
  8994                           ; BSR set to: 0
  8995                           ;MOTEapp.c: 872: periodicUpValue = 0;
  8996  000FA2  0E00               	movlw	0
  8997  000FA4  0100               	movlb	0	; () banked
  8998  000FA6  6FFD               	movwf	_periodicUpValue& (0+255),b
  8999                           
  9000                           ; BSR set to: 0
  9001                           ;MOTEapp.c: 873: }
  9002                           ;MOTEapp.c: 875: switch (periodicUpValue)
  9003  000FA8  D06B               	goto	l14364
  9004  000FAA                     l14340:
  9005                           
  9006                           ; BSR set to: 0
  9007                           ;MOTEapp.c: 879: periodicTimerValue = 9;
  9008  000FAA  0E09               	movlw	9
  9009  000FAC  0100               	movlb	0	; () banked
  9010  000FAE  6FFC               	movwf	_periodicTimerValue& (0+255),b
  9011                           
  9012                           ; BSR set to: 0
  9013                           ;MOTEapp.c: 880: oled_putString(" 5 ",7,2);
  9014  000FB0  0EDC               	movlw	low STR_143
  9015  000FB2  0100               	movlb	0	; () banked
  9016  000FB4  6F71               	movwf	oled_putString@string& (0+255),b
  9017  000FB6  0E7F               	movlw	high STR_143
  9018  000FB8  0100               	movlb	0	; () banked
  9019  000FBA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9020  000FBC  0E07               	movlw	7
  9021  000FBE  0100               	movlb	0	; () banked
  9022  000FC0  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9023  000FC2  0E02               	movlw	2
  9024  000FC4  0100               	movlb	0	; () banked
  9025  000FC6  6F74               	movwf	oled_putString@start_page& (0+255),b
  9026  000FC8  EC49  F02F         	call	_oled_putString	;wreg free
  9027                           
  9028                           ;MOTEapp.c: 881: break;
  9029  000FCC  0012               	return	
  9030  000FCE                     l14344:
  9031                           
  9032                           ;MOTEapp.c: 883: periodicTimerValue = 18;
  9033  000FCE  0E12               	movlw	18
  9034  000FD0  0100               	movlb	0	; () banked
  9035  000FD2  6FFC               	movwf	_periodicTimerValue& (0+255),b
  9036                           
  9037                           ; BSR set to: 0
  9038                           ;MOTEapp.c: 884: oled_putString(" 10",7,2);
  9039  000FD4  0EE0               	movlw	low STR_146
  9040  000FD6  0100               	movlb	0	; () banked
  9041  000FD8  6F71               	movwf	oled_putString@string& (0+255),b
  9042  000FDA  0E7F               	movlw	high STR_146
  9043  000FDC  0100               	movlb	0	; () banked
  9044  000FDE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9045  000FE0  0E07               	movlw	7
  9046  000FE2  0100               	movlb	0	; () banked
  9047  000FE4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9048  000FE6  0E02               	movlw	2
  9049  000FE8  0100               	movlb	0	; () banked
  9050  000FEA  6F74               	movwf	oled_putString@start_page& (0+255),b
  9051  000FEC  EC49  F02F         	call	_oled_putString	;wreg free
  9052                           
  9053                           ;MOTEapp.c: 885: break;
  9054  000FF0  0012               	return	
  9055  000FF2                     l14348:
  9056                           
  9057                           ;MOTEapp.c: 887: periodicTimerValue = 27;
  9058  000FF2  0E1B               	movlw	27
  9059  000FF4  0100               	movlb	0	; () banked
  9060  000FF6  6FFC               	movwf	_periodicTimerValue& (0+255),b
  9061                           
  9062                           ; BSR set to: 0
  9063                           ;MOTEapp.c: 888: oled_putString(" 15",7,2);
  9064  000FF8  0EEC               	movlw	low STR_147
  9065  000FFA  0100               	movlb	0	; () banked
  9066  000FFC  6F71               	movwf	oled_putString@string& (0+255),b
  9067  000FFE  0E7F               	movlw	high STR_147
  9068  001000  0100               	movlb	0	; () banked
  9069  001002  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9070  001004  0E07               	movlw	7
  9071  001006  0100               	movlb	0	; () banked
  9072  001008  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9073  00100A  0E02               	movlw	2
  9074  00100C  0100               	movlb	0	; () banked
  9075  00100E  6F74               	movwf	oled_putString@start_page& (0+255),b
  9076  001010  EC49  F02F         	call	_oled_putString	;wreg free
  9077                           
  9078                           ;MOTEapp.c: 889: break;
  9079  001014  0012               	return	
  9080  001016                     l14352:
  9081                           
  9082                           ;MOTEapp.c: 891: periodicTimerValue = 54;
  9083  001016  0E36               	movlw	54
  9084  001018  0100               	movlb	0	; () banked
  9085  00101A  6FFC               	movwf	_periodicTimerValue& (0+255),b
  9086                           
  9087                           ; BSR set to: 0
  9088                           ;MOTEapp.c: 892: oled_putString(" 30",7,2);
  9089  00101C  0EE4               	movlw	low STR_148
  9090  00101E  0100               	movlb	0	; () banked
  9091  001020  6F71               	movwf	oled_putString@string& (0+255),b
  9092  001022  0E7F               	movlw	high STR_148
  9093  001024  0100               	movlb	0	; () banked
  9094  001026  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9095  001028  0E07               	movlw	7
  9096  00102A  0100               	movlb	0	; () banked
  9097  00102C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9098  00102E  0E02               	movlw	2
  9099  001030  0100               	movlb	0	; () banked
  9100  001032  6F74               	movwf	oled_putString@start_page& (0+255),b
  9101  001034  EC49  F02F         	call	_oled_putString	;wreg free
  9102                           
  9103                           ;MOTEapp.c: 893: break;
  9104  001038  0012               	return	
  9105  00103A                     l14356:
  9106                           
  9107                           ;MOTEapp.c: 895: periodicTimerValue = 108;
  9108  00103A  0E6C               	movlw	108
  9109  00103C  0100               	movlb	0	; () banked
  9110  00103E  6FFC               	movwf	_periodicTimerValue& (0+255),b
  9111                           
  9112                           ; BSR set to: 0
  9113                           ;MOTEapp.c: 896: oled_putString(" 60",7,2);
  9114  001040  0EE8               	movlw	low STR_149
  9115  001042  0100               	movlb	0	; () banked
  9116  001044  6F71               	movwf	oled_putString@string& (0+255),b
  9117  001046  0E7F               	movlw	high STR_149
  9118  001048  0100               	movlb	0	; () banked
  9119  00104A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9120  00104C  0E07               	movlw	7
  9121  00104E  0100               	movlb	0	; () banked
  9122  001050  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9123  001052  0E02               	movlw	2
  9124  001054  0100               	movlb	0	; () banked
  9125  001056  6F74               	movwf	oled_putString@start_page& (0+255),b
  9126  001058  EC49  F02F         	call	_oled_putString	;wreg free
  9127                           
  9128                           ;MOTEapp.c: 897: break;
  9129  00105C  0012               	return	
  9130  00105E                     l568:
  9131                           
  9132                           ; BSR set to: 0
  9133                           ;MOTEapp.c: 899: periodicTimerValue = 255;
  9134  00105E  0100               	movlb	0	; () banked
  9135  001060  69FC               	setf	_periodicTimerValue& (0+255),b
  9136                           
  9137                           ; BSR set to: 0
  9138                           ;MOTEapp.c: 900: oled_putString("OFF",7,2);
  9139  001062  0EF0               	movlw	low STR_128
  9140  001064  0100               	movlb	0	; () banked
  9141  001066  6F71               	movwf	oled_putString@string& (0+255),b
  9142  001068  0E7F               	movlw	high STR_128
  9143  00106A  0100               	movlb	0	; () banked
  9144  00106C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9145  00106E  0E07               	movlw	7
  9146  001070  0100               	movlb	0	; () banked
  9147  001072  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9148  001074  0E02               	movlw	2
  9149  001076  0100               	movlb	0	; () banked
  9150  001078  6F74               	movwf	oled_putString@start_page& (0+255),b
  9151  00107A  EC49  F02F         	call	_oled_putString	;wreg free
  9152                           
  9153                           ;MOTEapp.c: 902: }
  9154                           
  9155                           ;MOTEapp.c: 901: break;
  9156  00107E  0012               	return	
  9157  001080                     l14364:
  9158  001080  0100               	movlb	0	; () banked
  9159  001082  51FD               	movf	_periodicUpValue& (0+255),w,b
  9160                           
  9161                           ; Switch size 1, requested type "space"
  9162                           ; Number of cases is 6, Range of values is 0 to 5
  9163                           ; switch strategies available:
  9164                           ; Name         Instructions Cycles
  9165                           ; simple_byte           19    10 (average)
  9166                           ;	Chosen strategy is simple_byte
  9167  001084  0A00               	xorlw	0	; case 0
  9168  001086  B4D8               	btfsc	status,2,c
  9169  001088  D790               	goto	l14340
  9170  00108A  0A01               	xorlw	1	; case 1
  9171  00108C  B4D8               	btfsc	status,2,c
  9172  00108E  D79F               	goto	l14344
  9173  001090  0A03               	xorlw	3	; case 2
  9174  001092  B4D8               	btfsc	status,2,c
  9175  001094  D7AE               	goto	l14348
  9176  001096  0A01               	xorlw	1	; case 3
  9177  001098  B4D8               	btfsc	status,2,c
  9178  00109A  D7BD               	goto	l14352
  9179  00109C  0A07               	xorlw	7	; case 4
  9180  00109E  B4D8               	btfsc	status,2,c
  9181  0010A0  D7CC               	goto	l14356
  9182  0010A2  0A01               	xorlw	1	; case 5
  9183  0010A4  B4D8               	btfsc	status,2,c
  9184  0010A6  D7DB               	goto	l568
  9185  0010A8  D780               	goto	l14340
  9186  0010AA                     l14366:
  9187                           
  9188                           ; BSR set to: 0
  9189                           ;MOTEapp.c: 906: if (changeStates)
  9190  0010AA  0100               	movlb	0	; () banked
  9191  0010AC  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  9192  0010AE  0100               	movlb	0	; () banked
  9193  0010B0  B4D8               	btfsc	status,2,c
  9194  0010B2  D025               	goto	l14378
  9195                           
  9196                           ; BSR set to: 0
  9197                           ;MOTEapp.c: 907: {
  9198                           ;MOTEapp.c: 909: MOTEapp_SetDataRateSetting(dataRateValue);
  9199  0010B4  0100               	movlb	0	; () banked
  9200  0010B6  51F7               	movf	_dataRateValue& (0+255),w,b
  9201  0010B8  EC6B  F011         	call	_MOTEapp_SetDataRateSetting
  9202                           
  9203                           ;MOTEapp.c: 911: oled_clear();
  9204  0010BC  ECAB  F034         	call	_oled_clear	;wreg free
  9205                           
  9206                           ;MOTEapp.c: 912: oled_putString("Enter Sleep Mode",0,0);
  9207  0010C0  0ECC               	movlw	low STR_151
  9208  0010C2  0100               	movlb	0	; () banked
  9209  0010C4  6F71               	movwf	oled_putString@string& (0+255),b
  9210  0010C6  0E7B               	movlw	high STR_151
  9211  0010C8  0100               	movlb	0	; () banked
  9212  0010CA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9213  0010CC  0E00               	movlw	0
  9214  0010CE  0100               	movlb	0	; () banked
  9215  0010D0  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9216  0010D2  0E00               	movlw	0
  9217  0010D4  0100               	movlb	0	; () banked
  9218  0010D6  6F74               	movwf	oled_putString@start_page& (0+255),b
  9219  0010D8  EC49  F02F         	call	_oled_putString	;wreg free
  9220                           
  9221                           ;MOTEapp.c: 913: oled_putString("(NAV)    (SLP) ",0,3);
  9222  0010DC  0E94               	movlw	low STR_152
  9223  0010DE  0100               	movlb	0	; () banked
  9224  0010E0  6F71               	movwf	oled_putString@string& (0+255),b
  9225  0010E2  0E7C               	movlw	high STR_152
  9226  0010E4  0100               	movlb	0	; () banked
  9227  0010E6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9228  0010E8  0E00               	movlw	0
  9229  0010EA  0100               	movlb	0	; () banked
  9230  0010EC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9231  0010EE  0E03               	movlw	3
  9232  0010F0  0100               	movlb	0	; () banked
  9233  0010F2  6F74               	movwf	oled_putString@start_page& (0+255),b
  9234  0010F4  EC49  F02F         	call	_oled_putString	;wreg free
  9235                           
  9236                           ;MOTEapp.c: 914: runningState = runningSleep;
  9237  0010F8  0E0F               	movlw	15
  9238  0010FA  0100               	movlb	0	; () banked
  9239  0010FC  6FEE               	movwf	_runningState& (0+255),b
  9240  0010FE                     l14378:
  9241                           
  9242                           ; BSR set to: 0
  9243                           ;MOTEapp.c: 915: }
  9244                           ;MOTEapp.c: 916: if (selectButton)
  9245  0010FE  0100               	movlb	0	; () banked
  9246  001100  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9247  001102  0100               	movlb	0	; () banked
  9248  001104  B4D8               	btfsc	status,2,c
  9249  001106  0012               	return	
  9250                           
  9251                           ; BSR set to: 0
  9252                           ;MOTEapp.c: 917: {
  9253                           ;MOTEapp.c: 918: if (dataRateValue < 6)
  9254  001108  0E06               	movlw	6
  9255  00110A  0100               	movlb	0	; () banked
  9256  00110C  61F7               	cpfslt	_dataRateValue& (0+255),b
  9257  00110E  D00D               	goto	l14390
  9258                           
  9259                           ; BSR set to: 0
  9260                           ;MOTEapp.c: 919: {
  9261                           ;MOTEapp.c: 920: if ((rnModule == rn2903) && (dataRateValue > 3))
  9262  001110  0100               	movlb	0	; () banked
  9263  001112  05ED               	decf	_rnModule& (0+255),w,b
  9264  001114  A4D8               	btfss	status,2,c
  9265  001116  D006               	goto	l14388
  9266                           
  9267                           ; BSR set to: 0
  9268  001118  0E03               	movlw	3
  9269  00111A  0100               	movlb	0	; () banked
  9270  00111C  65F7               	cpfsgt	_dataRateValue& (0+255),b
  9271  00111E  D002               	goto	l14388
  9272                           
  9273                           ; BSR set to: 0
  9274                           ;MOTEapp.c: 921: dataRateValue = 6;
  9275  001120  0E06               	movlw	6
  9276  001122  D004               	goto	L5
  9277  001124                     l14388:
  9278                           
  9279                           ; BSR set to: 0
  9280                           ;MOTEapp.c: 922: else
  9281                           ;MOTEapp.c: 923: dataRateValue++;
  9282  001124  0100               	movlb	0	; () banked
  9283  001126  2BF7               	incf	_dataRateValue& (0+255),f,b
  9284                           
  9285                           ; BSR set to: 0
  9286                           ;MOTEapp.c: 924: }
  9287  001128  D06D               	goto	l14408
  9288  00112A                     l14390:
  9289                           
  9290                           ; BSR set to: 0
  9291                           ;MOTEapp.c: 925: else {
  9292                           ;MOTEapp.c: 926: dataRateValue = 0;
  9293  00112A  0E00               	movlw	0
  9294  00112C                     L5:
  9295  00112C  0100               	movlb	0	; () banked
  9296  00112E  6FF7               	movwf	_dataRateValue& (0+255),b
  9297                           
  9298                           ; BSR set to: 0
  9299                           ;MOTEapp.c: 927: }
  9300                           ;MOTEapp.c: 929: switch (dataRateValue)
  9301  001130  D069               	goto	l14408
  9302  001132                     l14392:
  9303                           
  9304                           ; BSR set to: 0
  9305                           ;MOTEapp.c: 933: oled_putString(" 0 ",10,2);
  9306  001132  0EC8               	movlw	low STR_138
  9307  001134  0100               	movlb	0	; () banked
  9308  001136  6F71               	movwf	oled_putString@string& (0+255),b
  9309  001138  0E7F               	movlw	high STR_138
  9310  00113A  0100               	movlb	0	; () banked
  9311  00113C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9312  00113E  0E0A               	movlw	10
  9313  001140  0100               	movlb	0	; () banked
  9314  001142  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9315  001144  0E02               	movlw	2
  9316  001146  0100               	movlb	0	; () banked
  9317  001148  6F74               	movwf	oled_putString@start_page& (0+255),b
  9318  00114A  EC49  F02F         	call	_oled_putString	;wreg free
  9319                           
  9320                           ;MOTEapp.c: 934: break;
  9321  00114E  0012               	return	
  9322  001150                     l14394:
  9323                           
  9324                           ;MOTEapp.c: 936: oled_putString(" 1 ",10,2);
  9325  001150  0ECC               	movlw	low STR_139
  9326  001152  0100               	movlb	0	; () banked
  9327  001154  6F71               	movwf	oled_putString@string& (0+255),b
  9328  001156  0E7F               	movlw	high STR_139
  9329  001158  0100               	movlb	0	; () banked
  9330  00115A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9331  00115C  0E0A               	movlw	10
  9332  00115E  0100               	movlb	0	; () banked
  9333  001160  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9334  001162  0E02               	movlw	2
  9335  001164  0100               	movlb	0	; () banked
  9336  001166  6F74               	movwf	oled_putString@start_page& (0+255),b
  9337  001168  EC49  F02F         	call	_oled_putString	;wreg free
  9338                           
  9339                           ;MOTEapp.c: 937: break;
  9340  00116C  0012               	return	
  9341  00116E                     l14396:
  9342                           
  9343                           ;MOTEapp.c: 939: oled_putString(" 2 ",10,2);
  9344  00116E  0ED0               	movlw	low STR_140
  9345  001170  0100               	movlb	0	; () banked
  9346  001172  6F71               	movwf	oled_putString@string& (0+255),b
  9347  001174  0E7F               	movlw	high STR_140
  9348  001176  0100               	movlb	0	; () banked
  9349  001178  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9350  00117A  0E0A               	movlw	10
  9351  00117C  0100               	movlb	0	; () banked
  9352  00117E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9353  001180  0E02               	movlw	2
  9354  001182  0100               	movlb	0	; () banked
  9355  001184  6F74               	movwf	oled_putString@start_page& (0+255),b
  9356  001186  EC49  F02F         	call	_oled_putString	;wreg free
  9357                           
  9358                           ;MOTEapp.c: 940: break;
  9359  00118A  0012               	return	
  9360  00118C                     l14398:
  9361                           
  9362                           ;MOTEapp.c: 942: oled_putString(" 3 ",10,2);
  9363  00118C  0ED4               	movlw	low STR_141
  9364  00118E  0100               	movlb	0	; () banked
  9365  001190  6F71               	movwf	oled_putString@string& (0+255),b
  9366  001192  0E7F               	movlw	high STR_141
  9367  001194  0100               	movlb	0	; () banked
  9368  001196  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9369  001198  0E0A               	movlw	10
  9370  00119A  0100               	movlb	0	; () banked
  9371  00119C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9372  00119E  0E02               	movlw	2
  9373  0011A0  0100               	movlb	0	; () banked
  9374  0011A2  6F74               	movwf	oled_putString@start_page& (0+255),b
  9375  0011A4  EC49  F02F         	call	_oled_putString	;wreg free
  9376                           
  9377                           ;MOTEapp.c: 943: break;
  9378  0011A8  0012               	return	
  9379  0011AA                     l14400:
  9380                           
  9381                           ;MOTEapp.c: 945: oled_putString(" 4 ",10,2);
  9382  0011AA  0ED8               	movlw	low STR_142
  9383  0011AC  0100               	movlb	0	; () banked
  9384  0011AE  6F71               	movwf	oled_putString@string& (0+255),b
  9385  0011B0  0E7F               	movlw	high STR_142
  9386  0011B2  0100               	movlb	0	; () banked
  9387  0011B4  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9388  0011B6  0E0A               	movlw	10
  9389  0011B8  0100               	movlb	0	; () banked
  9390  0011BA  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9391  0011BC  0E02               	movlw	2
  9392  0011BE  0100               	movlb	0	; () banked
  9393  0011C0  6F74               	movwf	oled_putString@start_page& (0+255),b
  9394  0011C2  EC49  F02F         	call	_oled_putString	;wreg free
  9395                           
  9396                           ;MOTEapp.c: 946: break;
  9397  0011C6  0012               	return	
  9398  0011C8                     l14402:
  9399                           
  9400                           ;MOTEapp.c: 948: oled_putString(" 5 ",10,2);
  9401  0011C8  0EDC               	movlw	low STR_143
  9402  0011CA  0100               	movlb	0	; () banked
  9403  0011CC  6F71               	movwf	oled_putString@string& (0+255),b
  9404  0011CE  0E7F               	movlw	high STR_143
  9405  0011D0  0100               	movlb	0	; () banked
  9406  0011D2  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9407  0011D4  0E0A               	movlw	10
  9408  0011D6  0100               	movlb	0	; () banked
  9409  0011D8  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9410  0011DA  0E02               	movlw	2
  9411  0011DC  0100               	movlb	0	; () banked
  9412  0011DE  6F74               	movwf	oled_putString@start_page& (0+255),b
  9413  0011E0  EC49  F02F         	call	_oled_putString	;wreg free
  9414                           
  9415                           ;MOTEapp.c: 949: break;
  9416  0011E4  0012               	return	
  9417  0011E6                     l14404:
  9418                           
  9419                           ;MOTEapp.c: 951: oled_putString("ADR",10,2);
  9420  0011E6  0EF4               	movlw	low STR_144
  9421  0011E8  0100               	movlb	0	; () banked
  9422  0011EA  6F71               	movwf	oled_putString@string& (0+255),b
  9423  0011EC  0E7F               	movlw	high STR_144
  9424  0011EE  0100               	movlb	0	; () banked
  9425  0011F0  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9426  0011F2  0E0A               	movlw	10
  9427  0011F4  0100               	movlb	0	; () banked
  9428  0011F6  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9429  0011F8  0E02               	movlw	2
  9430  0011FA  0100               	movlb	0	; () banked
  9431  0011FC  6F74               	movwf	oled_putString@start_page& (0+255),b
  9432  0011FE  EC49  F02F         	call	_oled_putString	;wreg free
  9433                           
  9434                           ;MOTEapp.c: 953: }
  9435                           
  9436                           ;MOTEapp.c: 952: break;
  9437  001202  0012               	return	
  9438  001204                     l14408:
  9439  001204  0100               	movlb	0	; () banked
  9440  001206  51F7               	movf	_dataRateValue& (0+255),w,b
  9441                           
  9442                           ; Switch size 1, requested type "space"
  9443                           ; Number of cases is 7, Range of values is 0 to 6
  9444                           ; switch strategies available:
  9445                           ; Name         Instructions Cycles
  9446                           ; simple_byte           22    12 (average)
  9447                           ;	Chosen strategy is simple_byte
  9448  001208  0A00               	xorlw	0	; case 0
  9449  00120A  B4D8               	btfsc	status,2,c
  9450  00120C  D792               	goto	l14392
  9451  00120E  0A01               	xorlw	1	; case 1
  9452  001210  B4D8               	btfsc	status,2,c
  9453  001212  D79E               	goto	l14394
  9454  001214  0A03               	xorlw	3	; case 2
  9455  001216  B4D8               	btfsc	status,2,c
  9456  001218  D7AA               	goto	l14396
  9457  00121A  0A01               	xorlw	1	; case 3
  9458  00121C  B4D8               	btfsc	status,2,c
  9459  00121E  D7B6               	goto	l14398
  9460  001220  0A07               	xorlw	7	; case 4
  9461  001222  B4D8               	btfsc	status,2,c
  9462  001224  D7C2               	goto	l14400
  9463  001226  0A01               	xorlw	1	; case 5
  9464  001228  B4D8               	btfsc	status,2,c
  9465  00122A  D7CE               	goto	l14402
  9466  00122C  0A03               	xorlw	3	; case 6
  9467  00122E  B4D8               	btfsc	status,2,c
  9468  001230  D7DA               	goto	l14404
  9469  001232  D77F               	goto	l14392
  9470  001234                     l14410:
  9471                           
  9472                           ; BSR set to: 0
  9473                           ;MOTEapp.c: 957: if (selectButton)
  9474  001234  0100               	movlb	0	; () banked
  9475  001236  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9476  001238  0100               	movlb	0	; () banked
  9477  00123A  B4D8               	btfsc	status,2,c
  9478  00123C  D00C               	goto	l587
  9479                           
  9480                           ; BSR set to: 0
  9481                           ;MOTEapp.c: 958: {
  9482                           ;MOTEapp.c: 959: if( moteApp_GoToSleep() )
  9483  00123E  EC5A  F01F         	call	_moteApp_GoToSleep	;wreg free
  9484  001242  0900               	iorlw	0
  9485  001244  B4D8               	btfsc	status,2,c
  9486  001246  D004               	goto	l14416
  9487                           
  9488                           ;MOTEapp.c: 960: {
  9489                           ;MOTEapp.c: 961: changeStates = 1;
  9490  001248  0E01               	movlw	1
  9491  00124A  0100               	movlb	0	; () banked
  9492  00124C  6FB5               	movwf	moteRunningProcess@changeStates& (0+255),b
  9493                           
  9494                           ;MOTEapp.c: 962: }
  9495  00124E  D003               	goto	l587
  9496  001250                     l14416:
  9497                           
  9498                           ;MOTEapp.c: 963: else
  9499                           ;MOTEapp.c: 964: {
  9500                           ;MOTEapp.c: 965: secTicker = 10 - 1;
  9501  001250  0E09               	movlw	9
  9502  001252  0100               	movlb	0	; () banked
  9503  001254  6FEF               	movwf	_secTicker& (0+255),b
  9504  001256                     l587:
  9505                           
  9506                           ; BSR set to: 0
  9507                           ;MOTEapp.c: 966: }
  9508                           ;MOTEapp.c: 967: }
  9509                           ;MOTEapp.c: 968: if (changeStates)
  9510  001256  0100               	movlb	0	; () banked
  9511  001258  51B5               	movf	moteRunningProcess@changeStates& (0+255),w,b
  9512  00125A  0100               	movlb	0	; () banked
  9513  00125C  B4D8               	btfsc	status,2,c
  9514  00125E  0012               	return	
  9515                           
  9516                           ; BSR set to: 0
  9517                           ;MOTEapp.c: 969: {
  9518                           ;MOTEapp.c: 970: oled_clear();
  9519  001260  ECAB  F034         	call	_oled_clear	;wreg free
  9520                           
  9521                           ;MOTEapp.c: 971: oled_putString("  Issue Uplink  ",0,0);
  9522  001264  0ECD               	movlw	low STR_75
  9523  001266  0100               	movlb	0	; () banked
  9524  001268  6F71               	movwf	oled_putString@string& (0+255),b
  9525  00126A  0E7A               	movlw	high STR_75
  9526  00126C  0100               	movlb	0	; () banked
  9527  00126E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9528  001270  0E00               	movlw	0
  9529  001272  0100               	movlb	0	; () banked
  9530  001274  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9531  001276  0E00               	movlw	0
  9532  001278  0100               	movlb	0	; () banked
  9533  00127A  6F74               	movwf	oled_putString@start_page& (0+255),b
  9534  00127C  EC49  F02F         	call	_oled_putString	;wreg free
  9535                           
  9536                           ;MOTEapp.c: 972: oled_putString(" LoRaWAN Packet ",0,1);
  9537  001280  0E33               	movlw	low STR_76
  9538  001282  0100               	movlb	0	; () banked
  9539  001284  6F71               	movwf	oled_putString@string& (0+255),b
  9540  001286  0E7B               	movlw	high STR_76
  9541  001288  0100               	movlb	0	; () banked
  9542  00128A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9543  00128C  0E00               	movlw	0
  9544  00128E  0100               	movlb	0	; () banked
  9545  001290  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9546  001292  0E01               	movlw	1
  9547  001294  0100               	movlb	0	; () banked
  9548  001296  6F74               	movwf	oled_putString@start_page& (0+255),b
  9549  001298  EC49  F02F         	call	_oled_putString	;wreg free
  9550                           
  9551                           ;MOTEapp.c: 973: oled_putString("(NAV)    (SEL) ",0,3);
  9552  00129C  0E84               	movlw	low STR_77
  9553  00129E  0100               	movlb	0	; () banked
  9554  0012A0  6F71               	movwf	oled_putString@string& (0+255),b
  9555  0012A2  0E7C               	movlw	high STR_77
  9556  0012A4  0100               	movlb	0	; () banked
  9557  0012A6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9558  0012A8  0E00               	movlw	0
  9559  0012AA  0100               	movlb	0	; () banked
  9560  0012AC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9561  0012AE  0E03               	movlw	3
  9562  0012B0  0100               	movlb	0	; () banked
  9563  0012B2  6F74               	movwf	oled_putString@start_page& (0+255),b
  9564  0012B4  EC49  F02F         	call	_oled_putString	;wreg free
  9565                           
  9566                           ;MOTEapp.c: 974: runningState = runningUplink;
  9567  0012B8  0E06               	movlw	6
  9568  0012BA  0100               	movlb	0	; () banked
  9569  0012BC  6FEE               	movwf	_runningState& (0+255),b
  9570                           
  9571                           ; BSR set to: 0
  9572                           ;MOTEapp.c: 977: }
  9573                           
  9574                           ; BSR set to: 0
  9575                           ;MOTEapp.c: 975: }
  9576                           ;MOTEapp.c: 976: break;
  9577  0012BE  0012               	return	
  9578  0012C0                     l14430:
  9579                           
  9580                           ; BSR set to: 0
  9581  0012C0  0100               	movlb	0	; () banked
  9582  0012C2  51EE               	movf	_runningState& (0+255),w,b
  9583                           
  9584                           ; Switch size 1, requested type "space"
  9585                           ; Number of cases is 12, Range of values is 0 to 15
  9586                           ; switch strategies available:
  9587                           ; Name         Instructions Cycles
  9588                           ; simple_byte           37    19 (average)
  9589                           ;	Chosen strategy is simple_byte
  9590  0012C4  0A00               	xorlw	0	; case 0
  9591  0012C6  B4D8               	btfsc	status,2,c
  9592  0012C8  EF6A  F001         	goto	l13972
  9593  0012CC  0A01               	xorlw	1	; case 1
  9594  0012CE  B4D8               	btfsc	status,2,c
  9595  0012D0  EF5A  F005         	goto	l14214
  9596  0012D4  0A03               	xorlw	3	; case 2
  9597  0012D6  B4D8               	btfsc	status,2,c
  9598  0012D8  D568               	goto	l14288
  9599  0012DA  0A01               	xorlw	1	; case 3
  9600  0012DC  B4D8               	btfsc	status,2,c
  9601  0012DE  D6E5               	goto	l14366
  9602  0012E0  0A05               	xorlw	5	; case 6
  9603  0012E2  B4D8               	btfsc	status,2,c
  9604  0012E4  EFA4  F001         	goto	l13986
  9605  0012E8  0A01               	xorlw	1	; case 7
  9606  0012EA  B4D8               	btfsc	status,2,c
  9607  0012EC  EF88  F002         	goto	l14058
  9608  0012F0  0A0F               	xorlw	15	; case 8
  9609  0012F2  B4D8               	btfsc	status,2,c
  9610  0012F4  EF11  F003         	goto	l14088
  9611  0012F8  0A02               	xorlw	2	; case 10
  9612  0012FA  B4D8               	btfsc	status,2,c
  9613  0012FC  EF8B  F004         	goto	l14168
  9614  001300  0A01               	xorlw	1	; case 11
  9615  001302  B4D8               	btfsc	status,2,c
  9616  001304  EF20  F005         	goto	l14200
  9617  001308  0A07               	xorlw	7	; case 12
  9618  00130A  B4D8               	btfsc	status,2,c
  9619  00130C  D460               	goto	l14244
  9620  00130E  0A01               	xorlw	1	; case 13
  9621  001310  B4D8               	btfsc	status,2,c
  9622  001312  D585               	goto	l14302
  9623  001314  0A02               	xorlw	2	; case 15
  9624  001316  B4D8               	btfsc	status,2,c
  9625  001318  D78D               	goto	l14410
  9626  00131A  EF69  F001         	goto	l473
  9627  00131E                     __end_of_moteRunningProcess:
  9628                           	opt stack 0
  9629                           tblptru	equ	0xFF8
  9630                           tblptrh	equ	0xFF7
  9631                           tblptrl	equ	0xFF6
  9632                           tablat	equ	0xFF5
  9633                           prodh	equ	0xFF4
  9634                           prodl	equ	0xFF3
  9635                           intcon	equ	0xFF2
  9636                           postinc0	equ	0xFEE
  9637                           wreg	equ	0xFE8
  9638                           indf1	equ	0xFE7
  9639                           postdec1	equ	0xFE5
  9640                           fsr1h	equ	0xFE2
  9641                           fsr1l	equ	0xFE1
  9642                           indf2	equ	0xFDF
  9643                           fsr2h	equ	0xFDA
  9644                           fsr2l	equ	0xFD9
  9645                           status	equ	0xFD8
  9646                           
  9647 ;; *************** function _sendDataCommand *****************
  9648 ;; Defined at:
  9649 ;;		line 1171 in file "../Includes/Board/MOTEapp.c"
  9650 ;; Parameters:    Size  Location     Type
  9651 ;;  string          2    1[BANK0 ] PTR const unsigned char 
  9652 ;;		 -> STR_85(12), STR_84(14), STR_74(14), 
  9653 ;;  appData         2    3[BANK0 ] PTR unsigned char 
  9654 ;;		 -> dataBuffer(16), 
  9655 ;;  dataLength      1    5[BANK0 ] unsigned char 
  9656 ;; Auto vars:     Size  Location     Type
  9657 ;;  byteCount       1    8[BANK0 ] unsigned char 
  9658 ;;  byteCount       1    7[BANK0 ] unsigned char 
  9659 ;; Return value:  Size  Location     Type
  9660 ;;		None               void
  9661 ;; Registers used:
  9662 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9663 ;; Tracked objects:
  9664 ;;		On entry : 0/0
  9665 ;;		On exit  : 0/0
  9666 ;;		Unchanged: 0/0
  9667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9668 ;;      Params:         0       5       0       0       0       0       0       0       0
  9669 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9670 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9671 ;;      Totals:         0       8       0       0       0       0       0       0       0
  9672 ;;Total ram usage:        8 bytes
  9673 ;; Hardware stack levels used:    1
  9674 ;; Hardware stack levels required when called:   13
  9675 ;; This function calls:
  9676 ;;		_EUSART_Write
  9677 ;;		_EndLine
  9678 ;;		_hexToStr
  9679 ;; This function is called by:
  9680 ;;		_moteRunningProcess
  9681 ;; This function uses a non-reentrant model
  9682 ;;
  9683                           
  9684                           	psect	text11
  9685  004ABA                     __ptext11:
  9686                           	opt stack 0
  9687  004ABA                     _sendDataCommand:
  9688                           	opt stack 15
  9689                           
  9690                           ;MOTEapp.c: 1174: while (*string)
  9691                           
  9692                           ;incstack = 0
  9693  004ABA  D00B               	goto	l13110
  9694  004ABC                     l13106:
  9695                           
  9696                           ;MOTEapp.c: 1175: {
  9697                           ;MOTEapp.c: 1176: EUSART_Write(*string++);
  9698  004ABC  C061  FFF6         	movff	sendDataCommand@string,tblptrl
  9699  004AC0  C062  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9700  004AC4                     	if	0	;tblptru may be non-zero
  9701  004AC4                     	endif
  9702  004AC4                     	if	0	;tblptru may be non-zero
  9703  004AC4                     	endif
  9704  004AC4  0008               	tblrd		*
  9705  004AC6  50F5               	movf	tablat,w,c
  9706  004AC8  ECE2  F031         	call	_EUSART_Write
  9707  004ACC  0100               	movlb	0	; () banked
  9708  004ACE  4B61               	infsnz	sendDataCommand@string& (0+255),f,b
  9709  004AD0  2B62               	incf	(sendDataCommand@string+1)& (0+255),f,b
  9710  004AD2                     l13110:
  9711  004AD2  C061  FFF6         	movff	sendDataCommand@string,tblptrl
  9712  004AD6  C062  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9713  004ADA                     	if	0	;tblptru may be non-zero
  9714  004ADA                     	endif
  9715  004ADA                     	if	0	;tblptru may be non-zero
  9716  004ADA                     	endif
  9717  004ADA  0008               	tblrd		*
  9718  004ADC  50F5               	movf	tablat,w,c
  9719  004ADE  0900               	iorlw	0
  9720  004AE0  A4D8               	btfss	status,2,c
  9721  004AE2  D7EC               	goto	l13106
  9722                           
  9723                           ;MOTEapp.c: 1177: }
  9724                           ;MOTEapp.c: 1179: for (uint8_t byteCount = 0; byteCount < 3; byteCount++)
  9725  004AE4  0E00               	movlw	0
  9726  004AE6  0100               	movlb	0	; () banked
  9727  004AE8  6F67               	movwf	sendDataCommand@byteCount& (0+255),b
  9728  004AEA                     l13114:
  9729                           
  9730                           ; BSR set to: 0
  9731  004AEA  0E02               	movlw	2
  9732  004AEC  0100               	movlb	0	; () banked
  9733  004AEE  6567               	cpfsgt	sendDataCommand@byteCount& (0+255),b
  9734  004AF0  D001               	goto	l13118
  9735  004AF2  D011               	goto	l13124
  9736  004AF4                     l13118:
  9737                           
  9738                           ; BSR set to: 0
  9739                           ;MOTEapp.c: 1180: {
  9740                           ;MOTEapp.c: 1181: EUSART_Write(appData[byteCount]);
  9741  004AF4  0100               	movlb	0	; () banked
  9742  004AF6  5167               	movf	sendDataCommand@byteCount& (0+255),w,b
  9743  004AF8  0D01               	mullw	1
  9744  004AFA  50F3               	movf	prodl,w,c
  9745  004AFC  0100               	movlb	0	; () banked
  9746  004AFE  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  9747  004B00  6ED9               	movwf	fsr2l,c
  9748  004B02  50F4               	movf	prodh,w,c
  9749  004B04  0100               	movlb	0	; () banked
  9750  004B06  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  9751  004B08  6EDA               	movwf	fsr2h,c
  9752  004B0A  50DF               	movf	indf2,w,c
  9753  004B0C  ECE2  F031         	call	_EUSART_Write
  9754  004B10  0100               	movlb	0	; () banked
  9755  004B12  2B67               	incf	sendDataCommand@byteCount& (0+255),f,b
  9756  004B14  D7EA               	goto	l13114
  9757  004B16                     l13124:
  9758                           
  9759                           ; BSR set to: 0
  9760                           ;MOTEapp.c: 1182: }
  9761                           ;MOTEapp.c: 1184: EUSART_Write(appData[3]);
  9762  004B16  0100               	movlb	0	; () banked
  9763  004B18  EE20 F003          	lfsr	2,3
  9764  004B1C  5163               	movf	sendDataCommand@appData& (0+255),w,b
  9765  004B1E  26D9               	addwf	fsr2l,f,c
  9766  004B20  5164               	movf	(sendDataCommand@appData+1)& (0+255),w,b
  9767  004B22  22DA               	addwfc	fsr2h,f,c
  9768  004B24  50DF               	movf	indf2,w,c
  9769  004B26  ECE2  F031         	call	_EUSART_Write
  9770                           
  9771                           ;MOTEapp.c: 1186: for (uint8_t byteCount = 4; byteCount < dataLength; byteCount++)
  9772  004B2A  0E04               	movlw	4
  9773  004B2C  0100               	movlb	0	; () banked
  9774  004B2E  6F68               	movwf	sendDataCommand@byteCount_1872& (0+255),b
  9775  004B30  D028               	goto	l13132
  9776  004B32                     l13128:
  9777                           
  9778                           ; BSR set to: 0
  9779                           ;MOTEapp.c: 1187: {
  9780                           ;MOTEapp.c: 1188: EUSART_Write(hexToStr(appData[byteCount] >> 4));
  9781  004B32  0100               	movlb	0	; () banked
  9782  004B34  5168               	movf	sendDataCommand@byteCount_1872& (0+255),w,b
  9783  004B36  0D01               	mullw	1
  9784  004B38  50F3               	movf	prodl,w,c
  9785  004B3A  0100               	movlb	0	; () banked
  9786  004B3C  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  9787  004B3E  6ED9               	movwf	fsr2l,c
  9788  004B40  50F4               	movf	prodh,w,c
  9789  004B42  0100               	movlb	0	; () banked
  9790  004B44  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  9791  004B46  6EDA               	movwf	fsr2h,c
  9792  004B48  50DF               	movf	indf2,w,c
  9793  004B4A  0100               	movlb	0	; () banked
  9794  004B4C  6F66               	movwf	??_sendDataCommand& (0+255),b
  9795  004B4E  0100               	movlb	0	; () banked
  9796  004B50  3966               	swapf	??_sendDataCommand& (0+255),w,b
  9797  004B52  0B0F               	andlw	15
  9798  004B54  ECBC  F032         	call	_hexToStr
  9799  004B58  ECE2  F031         	call	_EUSART_Write
  9800                           
  9801                           ;MOTEapp.c: 1189: EUSART_Write(hexToStr(appData[byteCount] & 0x0F));
  9802  004B5C  0100               	movlb	0	; () banked
  9803  004B5E  5168               	movf	sendDataCommand@byteCount_1872& (0+255),w,b
  9804  004B60  0D01               	mullw	1
  9805  004B62  50F3               	movf	prodl,w,c
  9806  004B64  0100               	movlb	0	; () banked
  9807  004B66  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  9808  004B68  6ED9               	movwf	fsr2l,c
  9809  004B6A  50F4               	movf	prodh,w,c
  9810  004B6C  0100               	movlb	0	; () banked
  9811  004B6E  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  9812  004B70  6EDA               	movwf	fsr2h,c
  9813  004B72  50DF               	movf	indf2,w,c
  9814  004B74  0B0F               	andlw	15
  9815  004B76  ECBC  F032         	call	_hexToStr
  9816  004B7A  ECE2  F031         	call	_EUSART_Write
  9817  004B7E  0100               	movlb	0	; () banked
  9818  004B80  2B68               	incf	sendDataCommand@byteCount_1872& (0+255),f,b
  9819  004B82                     l13132:
  9820                           
  9821                           ; BSR set to: 0
  9822  004B82  0100               	movlb	0	; () banked
  9823  004B84  5165               	movf	sendDataCommand@dataLength& (0+255),w,b
  9824  004B86  0100               	movlb	0	; () banked
  9825  004B88  5D68               	subwf	sendDataCommand@byteCount_1872& (0+255),w,b
  9826  004B8A  A0D8               	btfss	status,0,c
  9827  004B8C  D7D2               	goto	l13128
  9828                           
  9829                           ; BSR set to: 0
  9830                           ;MOTEapp.c: 1190: }
  9831                           ;MOTEapp.c: 1191: EndLine();
  9832                           
  9833                           ; BSR set to: 0
  9834  004B8E  EC55  F035         	call	_EndLine	;wreg free
  9835  004B92  0012               	return		;funcret
  9836  004B94                     __end_of_sendDataCommand:
  9837                           	opt stack 0
  9838                           tblptru	equ	0xFF8
  9839                           tblptrh	equ	0xFF7
  9840                           tblptrl	equ	0xFF6
  9841                           tablat	equ	0xFF5
  9842                           prodh	equ	0xFF4
  9843                           prodl	equ	0xFF3
  9844                           intcon	equ	0xFF2
  9845                           postinc0	equ	0xFEE
  9846                           wreg	equ	0xFE8
  9847                           indf1	equ	0xFE7
  9848                           postdec1	equ	0xFE5
  9849                           fsr1h	equ	0xFE2
  9850                           fsr1l	equ	0xFE1
  9851                           indf2	equ	0xFDF
  9852                           fsr2h	equ	0xFDA
  9853                           fsr2l	equ	0xFD9
  9854                           status	equ	0xFD8
  9855                           
  9856 ;; *************** function _hexToStr *****************
  9857 ;; Defined at:
  9858 ;;		line 1203 in file "../Includes/Board/MOTEapp.c"
  9859 ;; Parameters:    Size  Location     Type
  9860 ;;  character       1    wreg     unsigned char 
  9861 ;; Auto vars:     Size  Location     Type
  9862 ;;  character       1    0[BANK0 ] unsigned char 
  9863 ;; Return value:  Size  Location     Type
  9864 ;;                  1    wreg      unsigned char 
  9865 ;; Registers used:
  9866 ;;		wreg, status,2, status,0
  9867 ;; Tracked objects:
  9868 ;;		On entry : 0/0
  9869 ;;		On exit  : 0/0
  9870 ;;		Unchanged: 0/0
  9871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9872 ;;      Params:         0       0       0       0       0       0       0       0       0
  9873 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9874 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9875 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9876 ;;Total ram usage:        1 bytes
  9877 ;; Hardware stack levels used:    1
  9878 ;; Hardware stack levels required when called:   11
  9879 ;; This function calls:
  9880 ;;		Nothing
  9881 ;; This function is called by:
  9882 ;;		_sendDataCommand
  9883 ;; This function uses a non-reentrant model
  9884 ;;
  9885                           
  9886                           	psect	text12
  9887  006578                     __ptext12:
  9888                           	opt stack 0
  9889  006578                     _hexToStr:
  9890                           	opt stack 16
  9891                           
  9892                           ;incstack = 0
  9893                           ;hexToStr@character stored from wreg
  9894  006578  0100               	movlb	0	; () banked
  9895  00657A  6F60               	movwf	hexToStr@character& (0+255),b
  9896                           
  9897                           ;MOTEapp.c: 1206: character = character & 0x0F;
  9898  00657C  0100               	movlb	0	; () banked
  9899  00657E  5160               	movf	hexToStr@character& (0+255),w,b
  9900  006580  0B0F               	andlw	15
  9901  006582  0100               	movlb	0	; () banked
  9902  006584  6F60               	movwf	hexToStr@character& (0+255),b
  9903                           
  9904                           ;MOTEapp.c: 1208: if (character < 0x0A)
  9905  006586  0E0A               	movlw	10
  9906  006588  0100               	movlb	0	; () banked
  9907  00658A  6160               	cpfslt	hexToStr@character& (0+255),b
  9908  00658C  D004               	goto	l12080
  9909                           
  9910                           ; BSR set to: 0
  9911                           ;MOTEapp.c: 1209: {
  9912                           ;MOTEapp.c: 1210: return character + '0';
  9913  00658E  0100               	movlb	0	; () banked
  9914  006590  5160               	movf	hexToStr@character& (0+255),w,b
  9915  006592  0F30               	addlw	48
  9916                           
  9917                           ; BSR set to: 0
  9918                           ;MOTEapp.c: 1211: }
  9919                           
  9920                           ; BSR set to: 0
  9921  006594  0012               	return	
  9922  006596                     l12080:
  9923                           
  9924                           ; BSR set to: 0
  9925                           ;MOTEapp.c: 1212: else if ( (character >= 0x0A) && (character <= 0x0F) )
  9926  006596  0E09               	movlw	9
  9927  006598  0100               	movlb	0	; () banked
  9928  00659A  6560               	cpfsgt	hexToStr@character& (0+255),b
  9929  00659C  D008               	goto	l12090
  9930                           
  9931                           ; BSR set to: 0
  9932  00659E  0E10               	movlw	16
  9933  0065A0  0100               	movlb	0	; () banked
  9934  0065A2  6160               	cpfslt	hexToStr@character& (0+255),b
  9935  0065A4  D004               	goto	l12090
  9936                           
  9937                           ; BSR set to: 0
  9938                           ;MOTEapp.c: 1213: {
  9939                           ;MOTEapp.c: 1214: return character + '0' + 7;
  9940  0065A6  0100               	movlb	0	; () banked
  9941  0065A8  5160               	movf	hexToStr@character& (0+255),w,b
  9942  0065AA  0F37               	addlw	55
  9943                           
  9944                           ; BSR set to: 0
  9945                           ;MOTEapp.c: 1215: }
  9946                           
  9947                           ; BSR set to: 0
  9948  0065AC  0012               	return	
  9949  0065AE                     l12090:
  9950                           
  9951                           ; BSR set to: 0
  9952                           ;MOTEapp.c: 1216: else
  9953                           ;MOTEapp.c: 1217: {
  9954                           ;MOTEapp.c: 1218: return 0;
  9955  0065AE  0E00               	movlw	0
  9956                           
  9957                           ; BSR set to: 0
  9958                           
  9959                           ; BSR set to: 0
  9960  0065B0  0012               	return	
  9961  0065B2                     __end_of_hexToStr:
  9962                           	opt stack 0
  9963                           tblptru	equ	0xFF8
  9964                           tblptrh	equ	0xFF7
  9965                           tblptrl	equ	0xFF6
  9966                           tablat	equ	0xFF5
  9967                           prodh	equ	0xFF4
  9968                           prodl	equ	0xFF3
  9969                           intcon	equ	0xFF2
  9970                           postinc0	equ	0xFEE
  9971                           wreg	equ	0xFE8
  9972                           indf1	equ	0xFE7
  9973                           postdec1	equ	0xFE5
  9974                           fsr1h	equ	0xFE2
  9975                           fsr1l	equ	0xFE1
  9976                           indf2	equ	0xFDF
  9977                           fsr2h	equ	0xFDA
  9978                           fsr2l	equ	0xFD9
  9979                           status	equ	0xFD8
  9980                           
  9981 ;; *************** function _oled_putint8 *****************
  9982 ;; Defined at:
  9983 ;;		line 278 in file "../Includes/Drivers/SSD1306oLED.c"
  9984 ;; Parameters:    Size  Location     Type
  9985 ;;  number          1    wreg     unsigned char 
  9986 ;;  station_dot     1   22[BANK0 ] unsigned char 
  9987 ;;  start_page      1   23[BANK0 ] unsigned char 
  9988 ;; Auto vars:     Size  Location     Type
  9989 ;;  number          1   31[BANK0 ] unsigned char 
  9990 ;;  numData         6   25[BANK0 ] struct .
  9991 ;;  negative        1   24[BANK0 ] unsigned char 
  9992 ;; Return value:  Size  Location     Type
  9993 ;;		None               void
  9994 ;; Registers used:
  9995 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9996 ;; Tracked objects:
  9997 ;;		On entry : 0/0
  9998 ;;		On exit  : 0/0
  9999 ;;		Unchanged: 0/0
 10000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10001 ;;      Params:         0       2       0       0       0       0       0       0       0
 10002 ;;      Locals:         0       8       0       0       0       0       0       0       0
 10003 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10004 ;;      Totals:         0      10       0       0       0       0       0       0       0
 10005 ;;Total ram usage:       10 bytes
 10006 ;; Hardware stack levels used:    1
 10007 ;; Hardware stack levels required when called:   15
 10008 ;; This function calls:
 10009 ;;		___awmod
 10010 ;;		___lbdiv
 10011 ;;		_oled_putString
 10012 ;; This function is called by:
 10013 ;;		_moteHandler
 10014 ;;		_moteRunningProcess
 10015 ;;		_moteApp_testSensors
 10016 ;; This function uses a non-reentrant model
 10017 ;;
 10018                           
 10019                           	psect	text13
 10020  004C6C                     __ptext13:
 10021                           	opt stack 0
 10022  004C6C                     _oled_putint8:
 10023                           	opt stack 13
 10024                           
 10025                           ; BSR set to: 0
 10026                           ;incstack = 0
 10027                           ;oled_putint8@number stored from wreg
 10028  004C6C  0100               	movlb	0	; () banked
 10029  004C6E  6F7F               	movwf	oled_putint8@number& (0+255),b
 10030                           
 10031                           ;SSD1306oLED.c: 280: display_data_t numData;
 10032                           ;SSD1306oLED.c: 281: bool negative = 0;
 10033  004C70  0E00               	movlw	0
 10034  004C72  0100               	movlb	0	; () banked
 10035  004C74  6F78               	movwf	oled_putint8@negative& (0+255),b
 10036                           
 10037                           ; BSR set to: 0
 10038                           ;SSD1306oLED.c: 283: if(number & 0x80)
 10039  004C76  0100               	movlb	0	; () banked
 10040  004C78  AF7F               	btfss	oled_putint8@number& (0+255),7,b
 10041  004C7A  D003               	goto	l12954
 10042                           
 10043                           ; BSR set to: 0
 10044                           ;SSD1306oLED.c: 284: negative = 1;
 10045  004C7C  0E01               	movlw	1
 10046  004C7E  0100               	movlb	0	; () banked
 10047  004C80  6F78               	movwf	oled_putint8@negative& (0+255),b
 10048  004C82                     l12954:
 10049                           
 10050                           ; BSR set to: 0
 10051                           ;SSD1306oLED.c: 285: number = (number & 0x7F);
 10052  004C82  0100               	movlb	0	; () banked
 10053  004C84  517F               	movf	oled_putint8@number& (0+255),w,b
 10054  004C86  0B7F               	andlw	127
 10055  004C88  0100               	movlb	0	; () banked
 10056  004C8A  6F7F               	movwf	oled_putint8@number& (0+255),b
 10057                           
 10058                           ; BSR set to: 0
 10059                           ;SSD1306oLED.c: 287: numData.d2 = '0' + (number % 10);
 10060  004C8C  C07F  F060         	movff	oled_putint8@number,___awmod@dividend
 10061  004C90  0100               	movlb	0	; () banked
 10062  004C92  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10063  004C94  0E00               	movlw	0
 10064  004C96  0100               	movlb	0	; () banked
 10065  004C98  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10066  004C9A  0E0A               	movlw	10
 10067  004C9C  6F62               	movwf	___awmod@divisor& (0+255),b
 10068  004C9E  EC9C  F02A         	call	___awmod	;wreg free
 10069  004CA2  0100               	movlb	0	; () banked
 10070  004CA4  5160               	movf	?___awmod& (0+255),w,b
 10071  004CA6  0F30               	addlw	48
 10072  004CA8  0100               	movlb	0	; () banked
 10073  004CAA  6F7B               	movwf	(oled_putint8@numData+2)& (0+255),b
 10074                           
 10075                           ; BSR set to: 0
 10076                           ;SSD1306oLED.c: 288: number /= 10;
 10077  004CAC  0E0A               	movlw	10
 10078  004CAE  0100               	movlb	0	; () banked
 10079  004CB0  6F60               	movwf	___lbdiv@divisor& (0+255),b
 10080  004CB2  0100               	movlb	0	; () banked
 10081  004CB4  517F               	movf	oled_putint8@number& (0+255),w,b
 10082  004CB6  EC13  F030         	call	___lbdiv
 10083  004CBA  0100               	movlb	0	; () banked
 10084  004CBC  6F7F               	movwf	oled_putint8@number& (0+255),b
 10085                           
 10086                           ; BSR set to: 0
 10087                           ;SSD1306oLED.c: 289: numData.d1 = '0' + (number % 10);
 10088  004CBE  C07F  F060         	movff	oled_putint8@number,___awmod@dividend
 10089  004CC2  0100               	movlb	0	; () banked
 10090  004CC4  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10091  004CC6  0E00               	movlw	0
 10092  004CC8  0100               	movlb	0	; () banked
 10093  004CCA  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10094  004CCC  0E0A               	movlw	10
 10095  004CCE  6F62               	movwf	___awmod@divisor& (0+255),b
 10096  004CD0  EC9C  F02A         	call	___awmod	;wreg free
 10097  004CD4  0100               	movlb	0	; () banked
 10098  004CD6  5160               	movf	?___awmod& (0+255),w,b
 10099  004CD8  0F30               	addlw	48
 10100  004CDA  0100               	movlb	0	; () banked
 10101  004CDC  6F7A               	movwf	(oled_putint8@numData+1)& (0+255),b
 10102                           
 10103                           ; BSR set to: 0
 10104                           ;SSD1306oLED.c: 290: number /= 10;
 10105  004CDE  0E0A               	movlw	10
 10106  004CE0  0100               	movlb	0	; () banked
 10107  004CE2  6F60               	movwf	___lbdiv@divisor& (0+255),b
 10108  004CE4  0100               	movlb	0	; () banked
 10109  004CE6  517F               	movf	oled_putint8@number& (0+255),w,b
 10110  004CE8  EC13  F030         	call	___lbdiv
 10111  004CEC  0100               	movlb	0	; () banked
 10112  004CEE  6F7F               	movwf	oled_putint8@number& (0+255),b
 10113                           
 10114                           ; BSR set to: 0
 10115                           ;SSD1306oLED.c: 291: numData.d0 = '0' + (number % 10);
 10116  004CF0  C07F  F060         	movff	oled_putint8@number,___awmod@dividend
 10117  004CF4  0100               	movlb	0	; () banked
 10118  004CF6  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10119  004CF8  0E00               	movlw	0
 10120  004CFA  0100               	movlb	0	; () banked
 10121  004CFC  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10122  004CFE  0E0A               	movlw	10
 10123  004D00  6F62               	movwf	___awmod@divisor& (0+255),b
 10124  004D02  EC9C  F02A         	call	___awmod	;wreg free
 10125  004D06  0100               	movlb	0	; () banked
 10126  004D08  5160               	movf	?___awmod& (0+255),w,b
 10127  004D0A  0F30               	addlw	48
 10128  004D0C  0100               	movlb	0	; () banked
 10129  004D0E  6F79               	movwf	oled_putint8@numData& (0+255),b
 10130                           
 10131                           ; BSR set to: 0
 10132                           ;SSD1306oLED.c: 292: if(negative)
 10133  004D10  0100               	movlb	0	; () banked
 10134  004D12  5178               	movf	oled_putint8@negative& (0+255),w,b
 10135  004D14  0100               	movlb	0	; () banked
 10136  004D16  B4D8               	btfsc	status,2,c
 10137  004D18  D003               	goto	l1034
 10138                           
 10139                           ; BSR set to: 0
 10140                           ;SSD1306oLED.c: 293: numData.d0 = '-';
 10141  004D1A  0E2D               	movlw	45
 10142  004D1C  0100               	movlb	0	; () banked
 10143  004D1E  6F79               	movwf	oled_putint8@numData& (0+255),b
 10144  004D20                     l1034:
 10145                           
 10146                           ; BSR set to: 0
 10147                           ;SSD1306oLED.c: 295: numData.b[3]=0;
 10148  004D20  0E00               	movlw	0
 10149  004D22  0100               	movlb	0	; () banked
 10150  004D24  6F7C               	movwf	(oled_putint8@numData+3)& (0+255),b
 10151                           
 10152                           ; BSR set to: 0
 10153                           ;SSD1306oLED.c: 297: oled_putString(numData.b,station_dot,start_page);
 10154  004D26  0E79               	movlw	low oled_putint8@numData
 10155  004D28  0100               	movlb	0	; () banked
 10156  004D2A  6F71               	movwf	oled_putString@string& (0+255),b
 10157  004D2C  0E00               	movlw	high oled_putint8@numData
 10158  004D2E  0100               	movlb	0	; () banked
 10159  004D30  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 10160  004D32  C076  F073         	movff	oled_putint8@station_dot,oled_putString@station_dot
 10161  004D36  C077  F074         	movff	oled_putint8@start_page,oled_putString@start_page
 10162  004D3A  EC49  F02F         	call	_oled_putString	;wreg free
 10163  004D3E  0012               	return		;funcret
 10164  004D40                     __end_of_oled_putint8:
 10165                           	opt stack 0
 10166                           tblptru	equ	0xFF8
 10167                           tblptrh	equ	0xFF7
 10168                           tblptrl	equ	0xFF6
 10169                           tablat	equ	0xFF5
 10170                           prodh	equ	0xFF4
 10171                           prodl	equ	0xFF3
 10172                           intcon	equ	0xFF2
 10173                           postinc0	equ	0xFEE
 10174                           wreg	equ	0xFE8
 10175                           indf1	equ	0xFE7
 10176                           postdec1	equ	0xFE5
 10177                           fsr1h	equ	0xFE2
 10178                           fsr1l	equ	0xFE1
 10179                           indf2	equ	0xFDF
 10180                           fsr2h	equ	0xFDA
 10181                           fsr2l	equ	0xFD9
 10182                           status	equ	0xFD8
 10183                           
 10184 ;; *************** function _oled_putUint8 *****************
 10185 ;; Defined at:
 10186 ;;		line 264 in file "../Includes/Drivers/SSD1306oLED.c"
 10187 ;; Parameters:    Size  Location     Type
 10188 ;;  number          1    wreg     unsigned char 
 10189 ;;  station_dot     1   22[BANK0 ] unsigned char 
 10190 ;;  start_page      1   23[BANK0 ] unsigned char 
 10191 ;; Auto vars:     Size  Location     Type
 10192 ;;  number          1   24[BANK0 ] unsigned char 
 10193 ;;  numData         6   25[BANK0 ] struct .
 10194 ;; Return value:  Size  Location     Type
 10195 ;;		None               void
 10196 ;; Registers used:
 10197 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10198 ;; Tracked objects:
 10199 ;;		On entry : 0/0
 10200 ;;		On exit  : 0/0
 10201 ;;		Unchanged: 0/0
 10202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10203 ;;      Params:         0       2       0       0       0       0       0       0       0
 10204 ;;      Locals:         0       7       0       0       0       0       0       0       0
 10205 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10206 ;;      Totals:         0       9       0       0       0       0       0       0       0
 10207 ;;Total ram usage:        9 bytes
 10208 ;; Hardware stack levels used:    1
 10209 ;; Hardware stack levels required when called:   15
 10210 ;; This function calls:
 10211 ;;		___awmod
 10212 ;;		___lbdiv
 10213 ;;		_oled_putString
 10214 ;; This function is called by:
 10215 ;;		_moteRunningProcess
 10216 ;;		_test_adc
 10217 ;; This function uses a non-reentrant model
 10218 ;;
 10219                           
 10220                           	psect	text14
 10221  0053E8                     __ptext14:
 10222                           	opt stack 0
 10223  0053E8                     _oled_putUint8:
 10224                           	opt stack 13
 10225                           
 10226                           ;incstack = 0
 10227                           ;oled_putUint8@number stored from wreg
 10228  0053E8  0100               	movlb	0	; () banked
 10229  0053EA  6F78               	movwf	oled_putUint8@number& (0+255),b
 10230                           
 10231                           ;SSD1306oLED.c: 266: display_data_t numData;
 10232                           ;SSD1306oLED.c: 267: numData.d2 = '0' + (number % 10);
 10233  0053EC  C078  F060         	movff	oled_putUint8@number,___awmod@dividend
 10234  0053F0  0100               	movlb	0	; () banked
 10235  0053F2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10236  0053F4  0E00               	movlw	0
 10237  0053F6  0100               	movlb	0	; () banked
 10238  0053F8  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10239  0053FA  0E0A               	movlw	10
 10240  0053FC  6F62               	movwf	___awmod@divisor& (0+255),b
 10241  0053FE  EC9C  F02A         	call	___awmod	;wreg free
 10242  005402  0100               	movlb	0	; () banked
 10243  005404  5160               	movf	?___awmod& (0+255),w,b
 10244  005406  0F30               	addlw	48
 10245  005408  0100               	movlb	0	; () banked
 10246  00540A  6F7B               	movwf	(oled_putUint8@numData+2)& (0+255),b
 10247                           
 10248                           ;SSD1306oLED.c: 268: number /= 10;
 10249  00540C  0E0A               	movlw	10
 10250  00540E  0100               	movlb	0	; () banked
 10251  005410  6F60               	movwf	___lbdiv@divisor& (0+255),b
 10252  005412  0100               	movlb	0	; () banked
 10253  005414  5178               	movf	oled_putUint8@number& (0+255),w,b
 10254  005416  EC13  F030         	call	___lbdiv
 10255  00541A  0100               	movlb	0	; () banked
 10256  00541C  6F78               	movwf	oled_putUint8@number& (0+255),b
 10257                           
 10258                           ;SSD1306oLED.c: 269: numData.d1 = '0' + (number % 10);
 10259  00541E  C078  F060         	movff	oled_putUint8@number,___awmod@dividend
 10260  005422  0100               	movlb	0	; () banked
 10261  005424  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10262  005426  0E00               	movlw	0
 10263  005428  0100               	movlb	0	; () banked
 10264  00542A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10265  00542C  0E0A               	movlw	10
 10266  00542E  6F62               	movwf	___awmod@divisor& (0+255),b
 10267  005430  EC9C  F02A         	call	___awmod	;wreg free
 10268  005434  0100               	movlb	0	; () banked
 10269  005436  5160               	movf	?___awmod& (0+255),w,b
 10270  005438  0F30               	addlw	48
 10271  00543A  0100               	movlb	0	; () banked
 10272  00543C  6F7A               	movwf	(oled_putUint8@numData+1)& (0+255),b
 10273                           
 10274                           ;SSD1306oLED.c: 270: number /= 10;
 10275  00543E  0E0A               	movlw	10
 10276  005440  0100               	movlb	0	; () banked
 10277  005442  6F60               	movwf	___lbdiv@divisor& (0+255),b
 10278  005444  0100               	movlb	0	; () banked
 10279  005446  5178               	movf	oled_putUint8@number& (0+255),w,b
 10280  005448  EC13  F030         	call	___lbdiv
 10281  00544C  0100               	movlb	0	; () banked
 10282  00544E  6F78               	movwf	oled_putUint8@number& (0+255),b
 10283                           
 10284                           ;SSD1306oLED.c: 271: numData.d0 = '0' + (number % 10);
 10285  005450  C078  F060         	movff	oled_putUint8@number,___awmod@dividend
 10286  005454  0100               	movlb	0	; () banked
 10287  005456  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10288  005458  0E00               	movlw	0
 10289  00545A  0100               	movlb	0	; () banked
 10290  00545C  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10291  00545E  0E0A               	movlw	10
 10292  005460  6F62               	movwf	___awmod@divisor& (0+255),b
 10293  005462  EC9C  F02A         	call	___awmod	;wreg free
 10294  005466  0100               	movlb	0	; () banked
 10295  005468  5160               	movf	?___awmod& (0+255),w,b
 10296  00546A  0F30               	addlw	48
 10297  00546C  0100               	movlb	0	; () banked
 10298  00546E  6F79               	movwf	oled_putUint8@numData& (0+255),b
 10299                           
 10300                           ; BSR set to: 0
 10301                           ;SSD1306oLED.c: 273: numData.b[3]=0;
 10302  005470  0E00               	movlw	0
 10303  005472  0100               	movlb	0	; () banked
 10304  005474  6F7C               	movwf	(oled_putUint8@numData+3)& (0+255),b
 10305                           
 10306                           ; BSR set to: 0
 10307                           ;SSD1306oLED.c: 275: oled_putString(numData.b,station_dot,start_page);
 10308  005476  0E79               	movlw	low oled_putUint8@numData
 10309  005478  0100               	movlb	0	; () banked
 10310  00547A  6F71               	movwf	oled_putString@string& (0+255),b
 10311  00547C  0E00               	movlw	high oled_putUint8@numData
 10312  00547E  0100               	movlb	0	; () banked
 10313  005480  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 10314  005482  C076  F073         	movff	oled_putUint8@station_dot,oled_putString@station_dot
 10315  005486  C077  F074         	movff	oled_putUint8@start_page,oled_putString@start_page
 10316  00548A  EC49  F02F         	call	_oled_putString	;wreg free
 10317  00548E  0012               	return		;funcret
 10318  005490                     __end_of_oled_putUint8:
 10319                           	opt stack 0
 10320                           tblptru	equ	0xFF8
 10321                           tblptrh	equ	0xFF7
 10322                           tblptrl	equ	0xFF6
 10323                           tablat	equ	0xFF5
 10324                           prodh	equ	0xFF4
 10325                           prodl	equ	0xFF3
 10326                           intcon	equ	0xFF2
 10327                           postinc0	equ	0xFEE
 10328                           wreg	equ	0xFE8
 10329                           indf1	equ	0xFE7
 10330                           postdec1	equ	0xFE5
 10331                           fsr1h	equ	0xFE2
 10332                           fsr1l	equ	0xFE1
 10333                           indf2	equ	0xFDF
 10334                           fsr2h	equ	0xFDA
 10335                           fsr2l	equ	0xFD9
 10336                           status	equ	0xFD8
 10337                           
 10338 ;; *************** function _moteApp_setSensorsInput *****************
 10339 ;; Defined at:
 10340 ;;		line 1457 in file "../Includes/Board/MOTEapp.c"
 10341 ;; Parameters:    Size  Location     Type
 10342 ;;		None
 10343 ;; Auto vars:     Size  Location     Type
 10344 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 10345 ;; Return value:  Size  Location     Type
 10346 ;;		None               void
 10347 ;; Registers used:
 10348 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10349 ;; Tracked objects:
 10350 ;;		On entry : 0/0
 10351 ;;		On exit  : 0/0
 10352 ;;		Unchanged: 0/0
 10353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10354 ;;      Params:         0       0       0       0       0       0       0       0       0
 10355 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10356 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10357 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10358 ;;Total ram usage:        2 bytes
 10359 ;; Hardware stack levels used:    1
 10360 ;; Hardware stack levels required when called:   14
 10361 ;; This function calls:
 10362 ;;		_MOTEapp_getModuleResponse
 10363 ;;		_moteApp_delayms
 10364 ;;		_sendCommand
 10365 ;; This function is called by:
 10366 ;;		_moteRunningProcess
 10367 ;;		_moteApp_testSensors
 10368 ;; This function uses a non-reentrant model
 10369 ;;
 10370                           
 10371                           	psect	text15
 10372  0058D6                     __ptext15:
 10373                           	opt stack 0
 10374  0058D6                     _moteApp_setSensorsInput:
 10375                           	opt stack 14
 10376                           
 10377                           ;MOTEapp.c: 1459: uint16_t escapeCounter = 0;
 10378                           
 10379                           ;incstack = 0
 10380  0058D6  0E00               	movlw	0
 10381  0058D8  0100               	movlb	0	; () banked
 10382  0058DA  6F66               	movwf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),b
 10383  0058DC  0E00               	movlw	0
 10384  0058DE  6F65               	movwf	moteApp_setSensorsInput@escapeCounter& (0+255),b
 10385                           
 10386                           ; BSR set to: 0
 10387                           ;MOTEapp.c: 1460: sendCommand("sys set pinmode GPIO13 ana");
 10388  0058E0  0E7F               	movlw	low STR_190
 10389  0058E2  0100               	movlb	0	; () banked
 10390  0058E4  6F61               	movwf	sendCommand@string& (0+255),b
 10391  0058E6  0E79               	movlw	high STR_190
 10392  0058E8  0100               	movlb	0	; () banked
 10393  0058EA  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10394  0058EC  ECB0  F033         	call	_sendCommand	;wreg free
 10395                           
 10396                           ;MOTEapp.c: 1461: while ( !MOTEapp_getModuleResponse() )
 10397  0058F0  D00B               	goto	l13058
 10398  0058F2                     l13054:
 10399                           
 10400                           ;MOTEapp.c: 1462: {
 10401                           ;MOTEapp.c: 1463: if (++escapeCounter > 50000)
 10402  0058F2  0100               	movlb	0	; () banked
 10403  0058F4  4B65               	infsnz	moteApp_setSensorsInput@escapeCounter& (0+255),f,b
 10404  0058F6  2B66               	incf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),f,b
 10405  0058F8  0E51               	movlw	81
 10406  0058FA  0100               	movlb	0	; () banked
 10407  0058FC  5D65               	subwf	moteApp_setSensorsInput@escapeCounter& (0+255),w,b
 10408  0058FE  0EC3               	movlw	195
 10409  005900  0100               	movlb	0	; () banked
 10410  005902  5966               	subwfb	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),w,b
 10411  005904  B0D8               	btfsc	status,0,c
 10412  005906  D005               	goto	l13060
 10413  005908                     l13058:
 10414  005908  EC68  F02E         	call	_MOTEapp_getModuleResponse	;wreg free
 10415  00590C  0900               	iorlw	0
 10416  00590E  B4D8               	btfsc	status,2,c
 10417  005910  D7F0               	goto	l13054
 10418  005912                     l13060:
 10419                           
 10420                           ;MOTEapp.c: 1465: }
 10421                           ;MOTEapp.c: 1466: escapeCounter = 0;
 10422  005912  0E00               	movlw	0
 10423  005914  0100               	movlb	0	; () banked
 10424  005916  6F66               	movwf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),b
 10425  005918  0E00               	movlw	0
 10426  00591A  6F65               	movwf	moteApp_setSensorsInput@escapeCounter& (0+255),b
 10427                           
 10428                           ; BSR set to: 0
 10429                           ;MOTEapp.c: 1467: sendCommand("sys set pinmode GPIO12 ana");
 10430  00591C  0E64               	movlw	low STR_191
 10431  00591E  0100               	movlb	0	; () banked
 10432  005920  6F61               	movwf	sendCommand@string& (0+255),b
 10433  005922  0E79               	movlw	high STR_191
 10434  005924  0100               	movlb	0	; () banked
 10435  005926  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10436  005928  ECB0  F033         	call	_sendCommand	;wreg free
 10437                           
 10438                           ;MOTEapp.c: 1468: while ( !MOTEapp_getModuleResponse() )
 10439  00592C  D00B               	goto	l13068
 10440  00592E                     l13064:
 10441                           
 10442                           ;MOTEapp.c: 1469: {
 10443                           ;MOTEapp.c: 1470: if (++escapeCounter > 50000)
 10444  00592E  0100               	movlb	0	; () banked
 10445  005930  4B65               	infsnz	moteApp_setSensorsInput@escapeCounter& (0+255),f,b
 10446  005932  2B66               	incf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),f,b
 10447  005934  0E51               	movlw	81
 10448  005936  0100               	movlb	0	; () banked
 10449  005938  5D65               	subwf	moteApp_setSensorsInput@escapeCounter& (0+255),w,b
 10450  00593A  0EC3               	movlw	195
 10451  00593C  0100               	movlb	0	; () banked
 10452  00593E  5966               	subwfb	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),w,b
 10453  005940  B0D8               	btfsc	status,0,c
 10454  005942  D005               	goto	l13070
 10455  005944                     l13068:
 10456  005944  EC68  F02E         	call	_MOTEapp_getModuleResponse	;wreg free
 10457  005948  0900               	iorlw	0
 10458  00594A  B4D8               	btfsc	status,2,c
 10459  00594C  D7F0               	goto	l13064
 10460  00594E                     l13070:
 10461                           
 10462                           ;MOTEapp.c: 1472: }
 10463                           ;MOTEapp.c: 1473: moteApp_delayms(100);
 10464  00594E  0E00               	movlw	0
 10465  005950  0100               	movlb	0	; () banked
 10466  005952  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 10467  005954  0E64               	movlw	100
 10468  005956  6F60               	movwf	moteApp_delayms@length& (0+255),b
 10469  005958  ECD9  F032         	call	_moteApp_delayms	;wreg free
 10470  00595C  0012               	return		;funcret
 10471  00595E                     __end_of_moteApp_setSensorsInput:
 10472                           	opt stack 0
 10473                           tblptru	equ	0xFF8
 10474                           tblptrh	equ	0xFF7
 10475                           tblptrl	equ	0xFF6
 10476                           tablat	equ	0xFF5
 10477                           prodh	equ	0xFF4
 10478                           prodl	equ	0xFF3
 10479                           intcon	equ	0xFF2
 10480                           postinc0	equ	0xFEE
 10481                           wreg	equ	0xFE8
 10482                           indf1	equ	0xFE7
 10483                           postdec1	equ	0xFE5
 10484                           fsr1h	equ	0xFE2
 10485                           fsr1l	equ	0xFE1
 10486                           indf2	equ	0xFDF
 10487                           fsr2h	equ	0xFDA
 10488                           fsr2l	equ	0xFD9
 10489                           status	equ	0xFD8
 10490                           
 10491 ;; *************** function _moteApp_getTempValue *****************
 10492 ;; Defined at:
 10493 ;;		line 1475 in file "../Includes/Board/MOTEapp.c"
 10494 ;; Parameters:    Size  Location     Type
 10495 ;;		None
 10496 ;; Auto vars:     Size  Location     Type
 10497 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 10498 ;; Return value:  Size  Location     Type
 10499 ;;                  2    3[BANK0 ] PTR unsigned char 
 10500 ;; Registers used:
 10501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10502 ;; Tracked objects:
 10503 ;;		On entry : 0/0
 10504 ;;		On exit  : 0/0
 10505 ;;		Unchanged: 0/0
 10506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10507 ;;      Params:         0       2       0       0       0       0       0       0       0
 10508 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10509 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10510 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10511 ;;Total ram usage:        4 bytes
 10512 ;; Hardware stack levels used:    1
 10513 ;; Hardware stack levels required when called:   14
 10514 ;; This function calls:
 10515 ;;		_MOTEapp_getModuleResponse
 10516 ;;		_sendCommand
 10517 ;; This function is called by:
 10518 ;;		_moteHandler
 10519 ;;		_moteRunningProcess
 10520 ;;		_moteApp_testSensors
 10521 ;; This function uses a non-reentrant model
 10522 ;;
 10523                           
 10524                           	psect	text16
 10525  0062EA                     __ptext16:
 10526                           	opt stack 0
 10527  0062EA                     _moteApp_getTempValue:
 10528                           	opt stack 14
 10529                           
 10530                           ;MOTEapp.c: 1477: uint16_t escapeCounter = 0;
 10531                           
 10532                           ;incstack = 0
 10533  0062EA  0E00               	movlw	0
 10534  0062EC  0100               	movlb	0	; () banked
 10535  0062EE  6F66               	movwf	(moteApp_getTempValue@escapeCounter+1)& (0+255),b
 10536  0062F0  0E00               	movlw	0
 10537  0062F2  6F65               	movwf	moteApp_getTempValue@escapeCounter& (0+255),b
 10538                           
 10539                           ; BSR set to: 0
 10540                           ;MOTEapp.c: 1479: sendCommand("sys get pinana GPIO12");
 10541  0062F4  0E02               	movlw	low STR_192
 10542  0062F6  0100               	movlb	0	; () banked
 10543  0062F8  6F61               	movwf	sendCommand@string& (0+255),b
 10544  0062FA  0E7A               	movlw	high STR_192
 10545  0062FC  0100               	movlb	0	; () banked
 10546  0062FE  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10547  006300  ECB0  F033         	call	_sendCommand	;wreg free
 10548                           
 10549                           ;MOTEapp.c: 1480: while ( !MOTEapp_getModuleResponse() )
 10550  006304  D00B               	goto	l12922
 10551  006306                     l12918:
 10552                           
 10553                           ;MOTEapp.c: 1481: {
 10554                           ;MOTEapp.c: 1482: if (++escapeCounter > 50000)
 10555  006306  0100               	movlb	0	; () banked
 10556  006308  4B65               	infsnz	moteApp_getTempValue@escapeCounter& (0+255),f,b
 10557  00630A  2B66               	incf	(moteApp_getTempValue@escapeCounter+1)& (0+255),f,b
 10558  00630C  0E51               	movlw	81
 10559  00630E  0100               	movlb	0	; () banked
 10560  006310  5D65               	subwf	moteApp_getTempValue@escapeCounter& (0+255),w,b
 10561  006312  0EC3               	movlw	195
 10562  006314  0100               	movlb	0	; () banked
 10563  006316  5966               	subwfb	(moteApp_getTempValue@escapeCounter+1)& (0+255),w,b
 10564  006318  B0D8               	btfsc	status,0,c
 10565  00631A  D005               	goto	l12924
 10566  00631C                     l12922:
 10567  00631C  EC68  F02E         	call	_MOTEapp_getModuleResponse	;wreg free
 10568  006320  0900               	iorlw	0
 10569  006322  B4D8               	btfsc	status,2,c
 10570  006324  D7F0               	goto	l12918
 10571  006326                     l12924:
 10572                           
 10573                           ;MOTEapp.c: 1484: }
 10574                           ;MOTEapp.c: 1486: return &moduleResonseBuffer;
 10575  006326  0E56               	movlw	low _moduleResonseBuffer
 10576  006328  0100               	movlb	0	; () banked
 10577  00632A  6F63               	movwf	?_moteApp_getTempValue& (0+255),b
 10578  00632C  0E01               	movlw	high _moduleResonseBuffer
 10579  00632E  0100               	movlb	0	; () banked
 10580  006330  6F64               	movwf	(?_moteApp_getTempValue+1)& (0+255),b
 10581  006332  0012               	return	
 10582  006334                     __end_of_moteApp_getTempValue:
 10583                           	opt stack 0
 10584                           tblptru	equ	0xFF8
 10585                           tblptrh	equ	0xFF7
 10586                           tblptrl	equ	0xFF6
 10587                           tablat	equ	0xFF5
 10588                           prodh	equ	0xFF4
 10589                           prodl	equ	0xFF3
 10590                           intcon	equ	0xFF2
 10591                           postinc0	equ	0xFEE
 10592                           wreg	equ	0xFE8
 10593                           indf1	equ	0xFE7
 10594                           postdec1	equ	0xFE5
 10595                           fsr1h	equ	0xFE2
 10596                           fsr1l	equ	0xFE1
 10597                           indf2	equ	0xFDF
 10598                           fsr2h	equ	0xFDA
 10599                           fsr2l	equ	0xFD9
 10600                           status	equ	0xFD8
 10601                           
 10602 ;; *************** function _moteApp_getLightValue *****************
 10603 ;; Defined at:
 10604 ;;		line 1489 in file "../Includes/Board/MOTEapp.c"
 10605 ;; Parameters:    Size  Location     Type
 10606 ;;		None
 10607 ;; Auto vars:     Size  Location     Type
 10608 ;;  escapeCounte    2   15[BANK0 ] unsigned int 
 10609 ;; Return value:  Size  Location     Type
 10610 ;;                  2   13[BANK0 ] PTR unsigned char 
 10611 ;; Registers used:
 10612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10613 ;; Tracked objects:
 10614 ;;		On entry : 0/0
 10615 ;;		On exit  : 0/0
 10616 ;;		Unchanged: 0/0
 10617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10618 ;;      Params:         0       2       0       0       0       0       0       0       0
 10619 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10620 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10621 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10622 ;;Total ram usage:        4 bytes
 10623 ;; Hardware stack levels used:    1
 10624 ;; Hardware stack levels required when called:   14
 10625 ;; This function calls:
 10626 ;;		_MOTEapp_getModuleResponse
 10627 ;;		_moteApp_setLightString
 10628 ;;		_sendCommand
 10629 ;; This function is called by:
 10630 ;;		_moteHandler
 10631 ;;		_moteRunningProcess
 10632 ;;		_moteApp_testSensors
 10633 ;; This function uses a non-reentrant model
 10634 ;;
 10635                           
 10636                           	psect	text17
 10637  0060DE                     __ptext17:
 10638                           	opt stack 0
 10639  0060DE                     _moteApp_getLightValue:
 10640                           	opt stack 14
 10641                           
 10642                           ;MOTEapp.c: 1491: uint16_t escapeCounter = 0;
 10643                           
 10644                           ; BSR set to: 0
 10645                           ;incstack = 0
 10646  0060DE  0E00               	movlw	0
 10647  0060E0  0100               	movlb	0	; () banked
 10648  0060E2  6F70               	movwf	(moteApp_getLightValue@escapeCounter+1)& (0+255),b
 10649  0060E4  0E00               	movlw	0
 10650  0060E6  6F6F               	movwf	moteApp_getLightValue@escapeCounter& (0+255),b
 10651                           
 10652                           ; BSR set to: 0
 10653                           ;MOTEapp.c: 1493: sendCommand("sys get pinana GPIO13");
 10654  0060E8  0E18               	movlw	low STR_193
 10655  0060EA  0100               	movlb	0	; () banked
 10656  0060EC  6F61               	movwf	sendCommand@string& (0+255),b
 10657  0060EE  0E7A               	movlw	high STR_193
 10658  0060F0  0100               	movlb	0	; () banked
 10659  0060F2  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10660  0060F4  ECB0  F033         	call	_sendCommand	;wreg free
 10661                           
 10662                           ;MOTEapp.c: 1494: while ( !MOTEapp_getModuleResponse() )
 10663  0060F8  D00B               	goto	l12906
 10664  0060FA                     l12902:
 10665                           
 10666                           ;MOTEapp.c: 1495: {
 10667                           ;MOTEapp.c: 1496: if (++escapeCounter > 50000)
 10668  0060FA  0100               	movlb	0	; () banked
 10669  0060FC  4B6F               	infsnz	moteApp_getLightValue@escapeCounter& (0+255),f,b
 10670  0060FE  2B70               	incf	(moteApp_getLightValue@escapeCounter+1)& (0+255),f,b
 10671  006100  0E51               	movlw	81
 10672  006102  0100               	movlb	0	; () banked
 10673  006104  5D6F               	subwf	moteApp_getLightValue@escapeCounter& (0+255),w,b
 10674  006106  0EC3               	movlw	195
 10675  006108  0100               	movlb	0	; () banked
 10676  00610A  5970               	subwfb	(moteApp_getLightValue@escapeCounter+1)& (0+255),w,b
 10677  00610C  B0D8               	btfsc	status,0,c
 10678  00610E  D005               	goto	l12908
 10679  006110                     l12906:
 10680  006110  EC68  F02E         	call	_MOTEapp_getModuleResponse	;wreg free
 10681  006114  0900               	iorlw	0
 10682  006116  B4D8               	btfsc	status,2,c
 10683  006118  D7F0               	goto	l12902
 10684  00611A                     l12908:
 10685                           
 10686                           ;MOTEapp.c: 1498: }
 10687                           ;MOTEapp.c: 1499: moteApp_setLightString(moduleResonseBuffer);
 10688  00611A  0E56               	movlw	low _moduleResonseBuffer
 10689  00611C  0100               	movlb	0	; () banked
 10690  00611E  6F6A               	movwf	moteApp_setLightString@lightString& (0+255),b
 10691  006120  0E01               	movlw	high _moduleResonseBuffer
 10692  006122  0100               	movlb	0	; () banked
 10693  006124  6F6B               	movwf	(moteApp_setLightString@lightString+1)& (0+255),b
 10694  006126  EC74  F02D         	call	_moteApp_setLightString	;wreg free
 10695                           
 10696                           ;MOTEapp.c: 1500: return &moduleResonseBuffer;
 10697  00612A  0E56               	movlw	low _moduleResonseBuffer
 10698  00612C  0100               	movlb	0	; () banked
 10699  00612E  6F6D               	movwf	?_moteApp_getLightValue& (0+255),b
 10700  006130  0E01               	movlw	high _moduleResonseBuffer
 10701  006132  0100               	movlb	0	; () banked
 10702  006134  6F6E               	movwf	(?_moteApp_getLightValue+1)& (0+255),b
 10703  006136  0012               	return	
 10704  006138                     __end_of_moteApp_getLightValue:
 10705                           	opt stack 0
 10706                           tblptru	equ	0xFF8
 10707                           tblptrh	equ	0xFF7
 10708                           tblptrl	equ	0xFF6
 10709                           tablat	equ	0xFF5
 10710                           prodh	equ	0xFF4
 10711                           prodl	equ	0xFF3
 10712                           intcon	equ	0xFF2
 10713                           postinc0	equ	0xFEE
 10714                           wreg	equ	0xFE8
 10715                           indf1	equ	0xFE7
 10716                           postdec1	equ	0xFE5
 10717                           fsr1h	equ	0xFE2
 10718                           fsr1l	equ	0xFE1
 10719                           indf2	equ	0xFDF
 10720                           fsr2h	equ	0xFDA
 10721                           fsr2l	equ	0xFD9
 10722                           status	equ	0xFD8
 10723                           
 10724 ;; *************** function _moteApp_setLightString *****************
 10725 ;; Defined at:
 10726 ;;		line 1507 in file "../Includes/Board/MOTEapp.c"
 10727 ;; Parameters:    Size  Location     Type
 10728 ;;  lightString     2   10[BANK0 ] PTR unsigned char 
 10729 ;;		 -> moduleResonseBuffer(64), 
 10730 ;; Auto vars:     Size  Location     Type
 10731 ;;  stingPos        1   12[BANK0 ] unsigned char 
 10732 ;; Return value:  Size  Location     Type
 10733 ;;		None               void
 10734 ;; Registers used:
 10735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10736 ;; Tracked objects:
 10737 ;;		On entry : 0/0
 10738 ;;		On exit  : 0/0
 10739 ;;		Unchanged: 0/0
 10740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10741 ;;      Params:         0       2       0       0       0       0       0       0       0
 10742 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10743 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10744 ;;      Totals:         0       3       0       0       0       0       0       0       0
 10745 ;;Total ram usage:        3 bytes
 10746 ;; Hardware stack levels used:    1
 10747 ;; Hardware stack levels required when called:   12
 10748 ;; This function calls:
 10749 ;;		_memcpy
 10750 ;; This function is called by:
 10751 ;;		_moteApp_getLightValue
 10752 ;; This function uses a non-reentrant model
 10753 ;;
 10754                           
 10755                           	psect	text18
 10756  005AE8                     __ptext18:
 10757                           	opt stack 0
 10758  005AE8                     _moteApp_setLightString:
 10759                           	opt stack 15
 10760                           
 10761                           ;MOTEapp.c: 1509: memcpy(storedLight, clearLight, sizeof(storedLight));
 10762                           
 10763                           ; BSR set to: 0
 10764                           ;incstack = 0
 10765  005AE8  0EE4               	movlw	low _storedLight
 10766  005AEA  0100               	movlb	0	; () banked
 10767  005AEC  6F60               	movwf	memcpy@d1& (0+255),b
 10768  005AEE  0E01               	movlw	high _storedLight
 10769  005AF0  0100               	movlb	0	; () banked
 10770  005AF2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10771  005AF4  0EDF               	movlw	low _clearLight
 10772  005AF6  0100               	movlb	0	; () banked
 10773  005AF8  6F62               	movwf	memcpy@s1& (0+255),b
 10774  005AFA  0E01               	movlw	high _clearLight
 10775  005AFC  0100               	movlb	0	; () banked
 10776  005AFE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10777  005B00  0E00               	movlw	0
 10778  005B02  0100               	movlb	0	; () banked
 10779  005B04  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10780  005B06  0E05               	movlw	5
 10781  005B08  6F64               	movwf	memcpy@n& (0+255),b
 10782  005B0A  EC9A  F031         	call	_memcpy	;wreg free
 10783                           
 10784                           ;MOTEapp.c: 1510: memcpy(storedLight, lightString, sizeof(storedLight));
 10785  005B0E  0EE4               	movlw	low _storedLight
 10786  005B10  0100               	movlb	0	; () banked
 10787  005B12  6F60               	movwf	memcpy@d1& (0+255),b
 10788  005B14  0E01               	movlw	high _storedLight
 10789  005B16  0100               	movlb	0	; () banked
 10790  005B18  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10791  005B1A  C06A  F062         	movff	moteApp_setLightString@lightString,memcpy@s1
 10792  005B1E  C06B  F063         	movff	moteApp_setLightString@lightString+1,memcpy@s1+1
 10793  005B22  0E00               	movlw	0
 10794  005B24  0100               	movlb	0	; () banked
 10795  005B26  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10796  005B28  0E05               	movlw	5
 10797  005B2A  6F64               	movwf	memcpy@n& (0+255),b
 10798  005B2C  EC9A  F031         	call	_memcpy	;wreg free
 10799                           
 10800                           ;MOTEapp.c: 1512: for (uint8_t stingPos = 0; stingPos < sizeof(storedLight); stingPos++)
 10801  005B30  0E00               	movlw	0
 10802  005B32  0100               	movlb	0	; () banked
 10803  005B34  6F6C               	movwf	moteApp_setLightString@stingPos& (0+255),b
 10804  005B36                     l12132:
 10805                           
 10806                           ; BSR set to: 0
 10807  005B36  0E04               	movlw	4
 10808  005B38  0100               	movlb	0	; () banked
 10809  005B3A  656C               	cpfsgt	moteApp_setLightString@stingPos& (0+255),b
 10810  005B3C  D001               	goto	l12136
 10811  005B3E  D010               	goto	l755
 10812  005B40                     l12136:
 10813                           
 10814                           ; BSR set to: 0
 10815                           ;MOTEapp.c: 1513: {
 10816                           ;MOTEapp.c: 1514: if (storedLight[stingPos] == 0x00)
 10817  005B40  0100               	movlb	0	; () banked
 10818  005B42  516C               	movf	moteApp_setLightString@stingPos& (0+255),w,b
 10819  005B44  0D01               	mullw	1
 10820  005B46  0EE4               	movlw	low _storedLight
 10821  005B48  24F3               	addwf	prodl,w,c
 10822  005B4A  6ED9               	movwf	fsr2l,c
 10823  005B4C  0E01               	movlw	high _storedLight
 10824  005B4E  20F4               	addwfc	prodh,w,c
 10825  005B50  6EDA               	movwf	fsr2h,c
 10826  005B52  50DF               	movf	indf2,w,c
 10827  005B54  B4D8               	btfsc	status,2,c
 10828                           
 10829                           ; BSR set to: 0
 10830                           ;MOTEapp.c: 1515: {
 10831                           ;MOTEapp.c: 1516: lightStringSize = stingPos;
 10832  005B56  C06C  F0E3         	movff	moteApp_setLightString@stingPos,_lightStringSize
 10833                           
 10834                           ; BSR set to: 0
 10835                           
 10836                           ; BSR set to: 0
 10837  005B5A  0100               	movlb	0	; () banked
 10838  005B5C  2B6C               	incf	moteApp_setLightString@stingPos& (0+255),f,b
 10839  005B5E  D7EB               	goto	l12132
 10840  005B60                     l755:
 10841                           
 10842                           ; BSR set to: 0
 10843                           ;MOTEapp.c: 1517: }
 10844                           ;MOTEapp.c: 1518: }
 10845                           ;MOTEapp.c: 1519: __nop();
 10846  005B60  F000               	nop	
 10847  005B62  0012               	return		;funcret
 10848  005B64                     __end_of_moteApp_setLightString:
 10849                           	opt stack 0
 10850                           tblptru	equ	0xFF8
 10851                           tblptrh	equ	0xFF7
 10852                           tblptrl	equ	0xFF6
 10853                           tablat	equ	0xFF5
 10854                           prodh	equ	0xFF4
 10855                           prodl	equ	0xFF3
 10856                           intcon	equ	0xFF2
 10857                           postinc0	equ	0xFEE
 10858                           wreg	equ	0xFE8
 10859                           indf1	equ	0xFE7
 10860                           postdec1	equ	0xFE5
 10861                           fsr1h	equ	0xFE2
 10862                           fsr1l	equ	0xFE1
 10863                           indf2	equ	0xFDF
 10864                           fsr2h	equ	0xFDA
 10865                           fsr2l	equ	0xFD9
 10866                           status	equ	0xFD8
 10867                           
 10868 ;; *************** function _memcpy *****************
 10869 ;; Defined at:
 10870 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memcpy.c"
 10871 ;; Parameters:    Size  Location     Type
 10872 ;;  d1              2    0[BANK0 ] PTR void 
 10873 ;;		 -> storedLight(5), 
 10874 ;;  s1              2    2[BANK0 ] PTR const void 
 10875 ;;		 -> clearLight(5), moduleResonseBuffer(64), 
 10876 ;;  n               2    4[BANK0 ] unsigned int 
 10877 ;; Auto vars:     Size  Location     Type
 10878 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 10879 ;;		 -> clearLight(5), moduleResonseBuffer(64), 
 10880 ;;  d               2    6[BANK0 ] PTR unsigned char 
 10881 ;;		 -> storedLight(5), 
 10882 ;; Return value:  Size  Location     Type
 10883 ;;                  2    0[BANK0 ] PTR void 
 10884 ;; Registers used:
 10885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10886 ;; Tracked objects:
 10887 ;;		On entry : 0/0
 10888 ;;		On exit  : 0/0
 10889 ;;		Unchanged: 0/0
 10890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10891 ;;      Params:         0       6       0       0       0       0       0       0       0
 10892 ;;      Locals:         0       4       0       0       0       0       0       0       0
 10893 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10894 ;;      Totals:         0      10       0       0       0       0       0       0       0
 10895 ;;Total ram usage:       10 bytes
 10896 ;; Hardware stack levels used:    1
 10897 ;; Hardware stack levels required when called:   11
 10898 ;; This function calls:
 10899 ;;		Nothing
 10900 ;; This function is called by:
 10901 ;;		_moteApp_setLightString
 10902 ;; This function uses a non-reentrant model
 10903 ;;
 10904                           
 10905                           	psect	text19
 10906  006334                     __ptext19:
 10907                           	opt stack 0
 10908  006334                     _memcpy:
 10909                           	opt stack 15
 10910                           
 10911                           ;incstack = 0
 10912  006334  C062  F068         	movff	memcpy@s1,memcpy@s
 10913  006338  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 10914  00633C  C060  F066         	movff	memcpy@d1,memcpy@d
 10915  006340  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 10916  006344  D010               	goto	l11956
 10917  006346                     l11950:
 10918  006346  C068  FFD9         	movff	memcpy@s,fsr2l
 10919  00634A  C069  FFDA         	movff	memcpy@s+1,fsr2h
 10920  00634E  C066  FFE1         	movff	memcpy@d,fsr1l
 10921  006352  C067  FFE2         	movff	memcpy@d+1,fsr1h
 10922  006356  CFDF FFE7          	movff	indf2,indf1
 10923  00635A  0100               	movlb	0	; () banked
 10924  00635C  4B68               	infsnz	memcpy@s& (0+255),f,b
 10925  00635E  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 10926                           
 10927                           ; BSR set to: 0
 10928  006360  0100               	movlb	0	; () banked
 10929  006362  4B66               	infsnz	memcpy@d& (0+255),f,b
 10930  006364  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 10931  006366                     l11956:
 10932  006366  0100               	movlb	0	; () banked
 10933  006368  0764               	decf	memcpy@n& (0+255),f,b
 10934  00636A  A0D8               	btfss	status,0,c
 10935  00636C  0765               	decf	(memcpy@n+1)& (0+255),f,b
 10936  00636E  0100               	movlb	0	; () banked
 10937  006370  2964               	incf	memcpy@n& (0+255),w,b
 10938  006372  E1E9               	bnz	l11950
 10939  006374  0100               	movlb	0	; () banked
 10940  006376  2965               	incf	(memcpy@n+1)& (0+255),w,b
 10941  006378  B4D8               	btfsc	status,2,c
 10942  00637A  0012               	return	
 10943  00637C  D7E4               	goto	l11950
 10944  00637E                     __end_of_memcpy:
 10945                           	opt stack 0
 10946                           tblptru	equ	0xFF8
 10947                           tblptrh	equ	0xFF7
 10948                           tblptrl	equ	0xFF6
 10949                           tablat	equ	0xFF5
 10950                           prodh	equ	0xFF4
 10951                           prodl	equ	0xFF3
 10952                           intcon	equ	0xFF2
 10953                           postinc0	equ	0xFEE
 10954                           wreg	equ	0xFE8
 10955                           indf1	equ	0xFE7
 10956                           postdec1	equ	0xFE5
 10957                           fsr1h	equ	0xFE2
 10958                           fsr1l	equ	0xFE1
 10959                           indf2	equ	0xFDF
 10960                           fsr2h	equ	0xFDA
 10961                           fsr2l	equ	0xFD9
 10962                           status	equ	0xFD8
 10963                           
 10964 ;; *************** function _moteApp_getLightString *****************
 10965 ;; Defined at:
 10966 ;;		line 1526 in file "../Includes/Board/MOTEapp.c"
 10967 ;; Parameters:    Size  Location     Type
 10968 ;;		None
 10969 ;; Auto vars:     Size  Location     Type
 10970 ;;		None
 10971 ;; Return value:  Size  Location     Type
 10972 ;;                  2    0[BANK0 ] PTR unsigned char 
 10973 ;; Registers used:
 10974 ;;		wreg, status,2, status,0
 10975 ;; Tracked objects:
 10976 ;;		On entry : 0/0
 10977 ;;		On exit  : 0/0
 10978 ;;		Unchanged: 0/0
 10979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10980 ;;      Params:         0       2       0       0       0       0       0       0       0
 10981 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10982 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10983 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10984 ;;Total ram usage:        2 bytes
 10985 ;; Hardware stack levels used:    1
 10986 ;; Hardware stack levels required when called:   11
 10987 ;; This function calls:
 10988 ;;		Nothing
 10989 ;; This function is called by:
 10990 ;;		_moteRunningProcess
 10991 ;; This function uses a non-reentrant model
 10992 ;;
 10993                           
 10994                           	psect	text20
 10995  006A8E                     __ptext20:
 10996                           	opt stack 0
 10997  006A8E                     _moteApp_getLightString:
 10998                           	opt stack 17
 10999                           
 11000                           ;MOTEapp.c: 1528: return &storedLight;
 11001                           
 11002                           ; BSR set to: 0
 11003                           ;incstack = 0
 11004  006A8E  0EE4               	movlw	low _storedLight
 11005  006A90  0100               	movlb	0	; () banked
 11006  006A92  6F60               	movwf	?_moteApp_getLightString& (0+255),b
 11007  006A94  0E01               	movlw	high _storedLight
 11008  006A96  0100               	movlb	0	; () banked
 11009  006A98  6F61               	movwf	(?_moteApp_getLightString+1)& (0+255),b
 11010  006A9A  0012               	return	
 11011  006A9C                     __end_of_moteApp_getLightString:
 11012                           	opt stack 0
 11013                           tblptru	equ	0xFF8
 11014                           tblptrh	equ	0xFF7
 11015                           tblptrl	equ	0xFF6
 11016                           tablat	equ	0xFF5
 11017                           prodh	equ	0xFF4
 11018                           prodl	equ	0xFF3
 11019                           intcon	equ	0xFF2
 11020                           postinc0	equ	0xFEE
 11021                           wreg	equ	0xFE8
 11022                           indf1	equ	0xFE7
 11023                           postdec1	equ	0xFE5
 11024                           fsr1h	equ	0xFE2
 11025                           fsr1l	equ	0xFE1
 11026                           indf2	equ	0xFDF
 11027                           fsr2h	equ	0xFDA
 11028                           fsr2l	equ	0xFD9
 11029                           status	equ	0xFD8
 11030                           
 11031 ;; *************** function _moteApp_convertSensorValue *****************
 11032 ;; Defined at:
 11033 ;;		line 1417 in file "../Includes/Board/MOTEapp.c"
 11034 ;; Parameters:    Size  Location     Type
 11035 ;;  string          2   17[BANK0 ] PTR const unsigned char 
 11036 ;;		 -> moduleResonseBuffer(64), 
 11037 ;; Auto vars:     Size  Location     Type
 11038 ;;  convertedVal    2   23[BANK0 ] unsigned int 
 11039 ;;  index           1   22[BANK0 ] unsigned char 
 11040 ;; Return value:  Size  Location     Type
 11041 ;;                  2   17[BANK0 ] unsigned int 
 11042 ;; Registers used:
 11043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11044 ;; Tracked objects:
 11045 ;;		On entry : 0/0
 11046 ;;		On exit  : 0/0
 11047 ;;		Unchanged: 0/0
 11048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11049 ;;      Params:         0       2       0       0       0       0       0       0       0
 11050 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11051 ;;      Temps:          0       3       0       0       0       0       0       0       0
 11052 ;;      Totals:         0       8       0       0       0       0       0       0       0
 11053 ;;Total ram usage:        8 bytes
 11054 ;; Hardware stack levels used:    1
 11055 ;; Hardware stack levels required when called:   12
 11056 ;; This function calls:
 11057 ;;		___wmul
 11058 ;; This function is called by:
 11059 ;;		_moteHandler
 11060 ;;		_moteRunningProcess
 11061 ;;		_moteApp_testSensors
 11062 ;; This function uses a non-reentrant model
 11063 ;;
 11064                           
 11065                           	psect	text21
 11066  00567C                     __ptext21:
 11067                           	opt stack 0
 11068  00567C                     _moteApp_convertSensorValue:
 11069                           	opt stack 16
 11070                           
 11071                           ;MOTEapp.c: 1419: uint8_t index;
 11072                           ;MOTEapp.c: 1420: uint16_t convertedValue = 0;
 11073                           
 11074                           ; BSR set to: 0
 11075                           ;incstack = 0
 11076  00567C  0E00               	movlw	0
 11077  00567E  0100               	movlb	0	; () banked
 11078  005680  6F78               	movwf	(moteApp_convertSensorValue@convertedValue+1)& (0+255),b
 11079  005682  0E00               	movlw	0
 11080  005684  6F77               	movwf	moteApp_convertSensorValue@convertedValue& (0+255),b
 11081                           
 11082                           ;MOTEapp.c: 1421: for(index = 0; index < 4; index++)
 11083  005686  0E00               	movlw	0
 11084  005688  0100               	movlb	0	; () banked
 11085  00568A  6F76               	movwf	moteApp_convertSensorValue@index& (0+255),b
 11086  00568C                     l12930:
 11087                           
 11088                           ; BSR set to: 0
 11089  00568C  0E03               	movlw	3
 11090  00568E  0100               	movlb	0	; () banked
 11091  005690  6576               	cpfsgt	moteApp_convertSensorValue@index& (0+255),b
 11092  005692  D001               	goto	l12934
 11093  005694  D03D               	goto	l713
 11094  005696                     l12934:
 11095                           
 11096                           ; BSR set to: 0
 11097                           ;MOTEapp.c: 1422: {
 11098                           ;MOTEapp.c: 1423: if (*string != 0)
 11099  005696  C071  FFD9         	movff	moteApp_convertSensorValue@string,fsr2l
 11100  00569A  C072  FFDA         	movff	moteApp_convertSensorValue@string+1,fsr2h
 11101  00569E  50DF               	movf	indf2,w,c
 11102  0056A0  B4D8               	btfsc	status,2,c
 11103  0056A2  D036               	goto	l713
 11104                           
 11105                           ; BSR set to: 0
 11106                           ;MOTEapp.c: 1424: {
 11107                           ;MOTEapp.c: 1425: if (index != 0)
 11108  0056A4  0100               	movlb	0	; () banked
 11109  0056A6  5176               	movf	moteApp_convertSensorValue@index& (0+255),w,b
 11110  0056A8  0100               	movlb	0	; () banked
 11111  0056AA  B4D8               	btfsc	status,2,c
 11112  0056AC  D00F               	goto	l12940
 11113                           
 11114                           ; BSR set to: 0
 11115                           ;MOTEapp.c: 1426: convertedValue = convertedValue * 10;
 11116  0056AE  C077  F060         	movff	moteApp_convertSensorValue@convertedValue,___wmul@multiplier
 11117  0056B2  C078  F061         	movff	moteApp_convertSensorValue@convertedValue+1,___wmul@multiplier+1
 11118  0056B6  0E00               	movlw	0
 11119  0056B8  0100               	movlb	0	; () banked
 11120  0056BA  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11121  0056BC  0E0A               	movlw	10
 11122  0056BE  6F62               	movwf	___wmul@multiplicand& (0+255),b
 11123  0056C0  EC12  F033         	call	___wmul	;wreg free
 11124  0056C4  C060  F077         	movff	?___wmul,moteApp_convertSensorValue@convertedValue
 11125  0056C8  C061  F078         	movff	?___wmul+1,moteApp_convertSensorValue@convertedValue+1
 11126  0056CC                     l12940:
 11127                           
 11128                           ;MOTEapp.c: 1428: convertedValue = (*string++ - '0') + convertedValue;
 11129  0056CC  C071  FFD9         	movff	moteApp_convertSensorValue@string,fsr2l
 11130  0056D0  C072  FFDA         	movff	moteApp_convertSensorValue@string+1,fsr2h
 11131  0056D4  50DF               	movf	indf2,w,c
 11132  0056D6  0100               	movlb	0	; () banked
 11133  0056D8  6F73               	movwf	??_moteApp_convertSensorValue& (0+255),b
 11134  0056DA  0100               	movlb	0	; () banked
 11135  0056DC  5173               	movf	??_moteApp_convertSensorValue& (0+255),w,b
 11136  0056DE  0100               	movlb	0	; () banked
 11137  0056E0  2577               	addwf	moteApp_convertSensorValue@convertedValue& (0+255),w,b
 11138  0056E2  0100               	movlb	0	; () banked
 11139  0056E4  6F74               	movwf	(??_moteApp_convertSensorValue+1)& (0+255),b
 11140  0056E6  0E00               	movlw	0
 11141  0056E8  0100               	movlb	0	; () banked
 11142  0056EA  2178               	addwfc	(moteApp_convertSensorValue@convertedValue+1)& (0+255),w,b
 11143  0056EC  0100               	movlb	0	; () banked
 11144  0056EE  6F75               	movwf	(??_moteApp_convertSensorValue+2)& (0+255),b
 11145  0056F0  0ED0               	movlw	208
 11146  0056F2  0100               	movlb	0	; () banked
 11147  0056F4  2574               	addwf	(??_moteApp_convertSensorValue+1)& (0+255),w,b
 11148  0056F6  0100               	movlb	0	; () banked
 11149  0056F8  6F77               	movwf	moteApp_convertSensorValue@convertedValue& (0+255),b
 11150  0056FA  0EFF               	movlw	255
 11151  0056FC  0100               	movlb	0	; () banked
 11152  0056FE  2175               	addwfc	(??_moteApp_convertSensorValue+2)& (0+255),w,b
 11153  005700  0100               	movlb	0	; () banked
 11154  005702  6F78               	movwf	(moteApp_convertSensorValue@convertedValue+1)& (0+255),b
 11155                           
 11156                           ; BSR set to: 0
 11157  005704  0100               	movlb	0	; () banked
 11158  005706  4B71               	infsnz	moteApp_convertSensorValue@string& (0+255),f,b
 11159  005708  2B72               	incf	(moteApp_convertSensorValue@string+1)& (0+255),f,b
 11160                           
 11161                           ; BSR set to: 0
 11162                           
 11163                           ; BSR set to: 0
 11164                           
 11165                           ; BSR set to: 0
 11166                           ;MOTEapp.c: 1430: else
 11167                           ;MOTEapp.c: 1431: {
 11168                           ;MOTEapp.c: 1432: break;
 11169                           
 11170                           ;MOTEapp.c: 1429: }
 11171  00570A  0100               	movlb	0	; () banked
 11172  00570C  2B76               	incf	moteApp_convertSensorValue@index& (0+255),f,b
 11173  00570E  D7BE               	goto	l12930
 11174  005710                     l713:
 11175                           
 11176                           ; BSR set to: 0
 11177                           ;MOTEapp.c: 1433: }
 11178                           ;MOTEapp.c: 1434: }
 11179                           ;MOTEapp.c: 1435: return convertedValue;
 11180  005710  C077  F071         	movff	moteApp_convertSensorValue@convertedValue,?_moteApp_convertSensorValue
 11181  005714  C078  F072         	movff	moteApp_convertSensorValue@convertedValue+1,?_moteApp_convertSensorValue+1
 11182                           
 11183                           ; BSR set to: 0
 11184  005718  0012               	return		;funcret
 11185  00571A                     __end_of_moteApp_convertSensorValue:
 11186                           	opt stack 0
 11187                           tblptru	equ	0xFF8
 11188                           tblptrh	equ	0xFF7
 11189                           tblptrl	equ	0xFF6
 11190                           tablat	equ	0xFF5
 11191                           prodh	equ	0xFF4
 11192                           prodl	equ	0xFF3
 11193                           intcon	equ	0xFF2
 11194                           postinc0	equ	0xFEE
 11195                           wreg	equ	0xFE8
 11196                           indf1	equ	0xFE7
 11197                           postdec1	equ	0xFE5
 11198                           fsr1h	equ	0xFE2
 11199                           fsr1l	equ	0xFE1
 11200                           indf2	equ	0xFDF
 11201                           fsr2h	equ	0xFDA
 11202                           fsr2l	equ	0xFD9
 11203                           status	equ	0xFD8
 11204                           
 11205 ;; *************** function ___wmul *****************
 11206 ;; Defined at:
 11207 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 11208 ;; Parameters:    Size  Location     Type
 11209 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11210 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11211 ;; Auto vars:     Size  Location     Type
 11212 ;;  product         2    4[BANK0 ] unsigned int 
 11213 ;; Return value:  Size  Location     Type
 11214 ;;                  2    0[BANK0 ] unsigned int 
 11215 ;; Registers used:
 11216 ;;		wreg, status,2, status,0, prodl, prodh
 11217 ;; Tracked objects:
 11218 ;;		On entry : 0/0
 11219 ;;		On exit  : 0/0
 11220 ;;		Unchanged: 0/0
 11221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11222 ;;      Params:         0       4       0       0       0       0       0       0       0
 11223 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11224 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11225 ;;      Totals:         0       6       0       0       0       0       0       0       0
 11226 ;;Total ram usage:        6 bytes
 11227 ;; Hardware stack levels used:    1
 11228 ;; Hardware stack levels required when called:   11
 11229 ;; This function calls:
 11230 ;;		Nothing
 11231 ;; This function is called by:
 11232 ;;		_moteApp_convertSensorValue
 11233 ;; This function uses a non-reentrant model
 11234 ;;
 11235                           
 11236                           	psect	text22
 11237  006624                     __ptext22:
 11238                           	opt stack 0
 11239  006624                     ___wmul:
 11240                           	opt stack 16
 11241                           
 11242                           ; BSR set to: 0
 11243                           ;incstack = 0
 11244  006624  0100               	movlb	0	; () banked
 11245  006626  5160               	movf	___wmul@multiplier& (0+255),w,b
 11246  006628  0100               	movlb	0	; () banked
 11247  00662A  0362               	mulwf	___wmul@multiplicand& (0+255),b
 11248  00662C  CFF3 F064          	movff	prodl,___wmul@product
 11249  006630  CFF4 F065          	movff	prodh,___wmul@product+1
 11250  006634  0100               	movlb	0	; () banked
 11251  006636  5160               	movf	___wmul@multiplier& (0+255),w,b
 11252  006638  0100               	movlb	0	; () banked
 11253  00663A  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11254  00663C  50F3               	movf	prodl,w,c
 11255  00663E  0100               	movlb	0	; () banked
 11256  006640  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 11257  006642  0100               	movlb	0	; () banked
 11258  006644  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11259  006646  0100               	movlb	0	; () banked
 11260  006648  0362               	mulwf	___wmul@multiplicand& (0+255),b
 11261  00664A  50F3               	movf	prodl,w,c
 11262  00664C  0100               	movlb	0	; () banked
 11263  00664E  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 11264                           
 11265                           ; BSR set to: 0
 11266  006650  C064  F060         	movff	___wmul@product,?___wmul
 11267  006654  C065  F061         	movff	___wmul@product+1,?___wmul+1
 11268  006658  0012               	return	
 11269  00665A                     __end_of___wmul:
 11270                           	opt stack 0
 11271                           tblptru	equ	0xFF8
 11272                           tblptrh	equ	0xFF7
 11273                           tblptrl	equ	0xFF6
 11274                           tablat	equ	0xFF5
 11275                           prodh	equ	0xFF4
 11276                           prodl	equ	0xFF3
 11277                           intcon	equ	0xFF2
 11278                           postinc0	equ	0xFEE
 11279                           wreg	equ	0xFE8
 11280                           indf1	equ	0xFE7
 11281                           postdec1	equ	0xFE5
 11282                           fsr1h	equ	0xFE2
 11283                           fsr1l	equ	0xFE1
 11284                           indf2	equ	0xFDF
 11285                           fsr2h	equ	0xFDA
 11286                           fsr2l	equ	0xFD9
 11287                           status	equ	0xFD8
 11288                           
 11289 ;; *************** function _moteApp_clearBuffers *****************
 11290 ;; Defined at:
 11291 ;;		line 1357 in file "../Includes/Board/MOTEapp.c"
 11292 ;; Parameters:    Size  Location     Type
 11293 ;;		None
 11294 ;; Auto vars:     Size  Location     Type
 11295 ;;  counter         1    3[BANK0 ] unsigned char 
 11296 ;;  counter         1    2[BANK0 ] unsigned char 
 11297 ;;  counter         1    1[BANK0 ] unsigned char 
 11298 ;;  counter         1    0[BANK0 ] unsigned char 
 11299 ;; Return value:  Size  Location     Type
 11300 ;;		None               void
 11301 ;; Registers used:
 11302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11303 ;; Tracked objects:
 11304 ;;		On entry : 0/0
 11305 ;;		On exit  : 0/0
 11306 ;;		Unchanged: 0/0
 11307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11308 ;;      Params:         0       0       0       0       0       0       0       0       0
 11309 ;;      Locals:         0       4       0       0       0       0       0       0       0
 11310 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11311 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11312 ;;Total ram usage:        4 bytes
 11313 ;; Hardware stack levels used:    1
 11314 ;; Hardware stack levels required when called:   11
 11315 ;; This function calls:
 11316 ;;		Nothing
 11317 ;; This function is called by:
 11318 ;;		_moteRunningProcess
 11319 ;; This function uses a non-reentrant model
 11320 ;;
 11321                           
 11322                           	psect	text23
 11323  005132                     __ptext23:
 11324                           	opt stack 0
 11325  005132                     _moteApp_clearBuffers:
 11326                           	opt stack 17
 11327                           
 11328                           ;MOTEapp.c: 1359: for (uint8_t counter = 0; counter < 3; counter++)
 11329                           
 11330                           ; BSR set to: 0
 11331                           ;incstack = 0
 11332  005132  0E00               	movlw	0
 11333  005134  0100               	movlb	0	; () banked
 11334  005136  6F60               	movwf	moteApp_clearBuffers@counter& (0+255),b
 11335  005138                     l13004:
 11336                           
 11337                           ; BSR set to: 0
 11338  005138  0E02               	movlw	2
 11339  00513A  0100               	movlb	0	; () banked
 11340  00513C  6560               	cpfsgt	moteApp_clearBuffers@counter& (0+255),b
 11341  00513E  D001               	goto	l13008
 11342  005140  D00E               	goto	l13014
 11343  005142                     l13008:
 11344                           
 11345                           ; BSR set to: 0
 11346                           ;MOTEapp.c: 1360: {
 11347                           ;MOTEapp.c: 1361: responsePortNum[counter] = 0;
 11348  005142  0100               	movlb	0	; () banked
 11349  005144  5160               	movf	moteApp_clearBuffers@counter& (0+255),w,b
 11350  005146  0D01               	mullw	1
 11351  005148  0EE9               	movlw	low _responsePortNum
 11352  00514A  24F3               	addwf	prodl,w,c
 11353  00514C  6ED9               	movwf	fsr2l,c
 11354  00514E  0E01               	movlw	high _responsePortNum
 11355  005150  20F4               	addwfc	prodh,w,c
 11356  005152  6EDA               	movwf	fsr2h,c
 11357  005154  0E00               	movlw	0
 11358  005156  6EDF               	movwf	indf2,c
 11359                           
 11360                           ; BSR set to: 0
 11361  005158  0100               	movlb	0	; () banked
 11362  00515A  2B60               	incf	moteApp_clearBuffers@counter& (0+255),f,b
 11363  00515C  D7ED               	goto	l13004
 11364  00515E                     l13014:
 11365                           
 11366                           ; BSR set to: 0
 11367                           ;MOTEapp.c: 1362: }
 11368                           ;MOTEapp.c: 1363: for (uint8_t counter = 0; counter < 34; counter++)
 11369  00515E  0E00               	movlw	0
 11370  005160  0100               	movlb	0	; () banked
 11371  005162  6F61               	movwf	moteApp_clearBuffers@counter_1954& (0+255),b
 11372  005164                     l13016:
 11373                           
 11374                           ; BSR set to: 0
 11375  005164  0E21               	movlw	33
 11376  005166  0100               	movlb	0	; () banked
 11377  005168  6561               	cpfsgt	moteApp_clearBuffers@counter_1954& (0+255),b
 11378  00516A  D001               	goto	l13020
 11379  00516C  D00E               	goto	l13026
 11380  00516E                     l13020:
 11381                           
 11382                           ; BSR set to: 0
 11383                           ;MOTEapp.c: 1364: {
 11384                           ;MOTEapp.c: 1365: responseId[counter] = 0;
 11385  00516E  0100               	movlb	0	; () banked
 11386  005170  5161               	movf	moteApp_clearBuffers@counter_1954& (0+255),w,b
 11387  005172  0D01               	mullw	1
 11388  005174  0E30               	movlw	low _responseId
 11389  005176  24F3               	addwf	prodl,w,c
 11390  005178  6ED9               	movwf	fsr2l,c
 11391  00517A  0E01               	movlw	high _responseId
 11392  00517C  20F4               	addwfc	prodh,w,c
 11393  00517E  6EDA               	movwf	fsr2h,c
 11394  005180  0E00               	movlw	0
 11395  005182  6EDF               	movwf	indf2,c
 11396                           
 11397                           ; BSR set to: 0
 11398  005184  0100               	movlb	0	; () banked
 11399  005186  2B61               	incf	moteApp_clearBuffers@counter_1954& (0+255),f,b
 11400  005188  D7ED               	goto	l13016
 11401  00518A                     l13026:
 11402                           
 11403                           ; BSR set to: 0
 11404                           ;MOTEapp.c: 1366: }
 11405                           ;MOTEapp.c: 1367: for (uint8_t counter = 0; counter < 32; counter++)
 11406  00518A  0E00               	movlw	0
 11407  00518C  0100               	movlb	0	; () banked
 11408  00518E  6F62               	movwf	moteApp_clearBuffers@counter_1955& (0+255),b
 11409  005190                     l13028:
 11410                           
 11411                           ; BSR set to: 0
 11412  005190  0E1F               	movlw	31
 11413  005192  0100               	movlb	0	; () banked
 11414  005194  6562               	cpfsgt	moteApp_clearBuffers@counter_1955& (0+255),b
 11415  005196  D001               	goto	l13032
 11416  005198  D00E               	goto	l13038
 11417  00519A                     l13032:
 11418                           
 11419                           ; BSR set to: 0
 11420                           ;MOTEapp.c: 1368: {
 11421                           ;MOTEapp.c: 1369: responseData[counter] = 0;
 11422  00519A  0100               	movlb	0	; () banked
 11423  00519C  5162               	movf	moteApp_clearBuffers@counter_1955& (0+255),w,b
 11424  00519E  0D01               	mullw	1
 11425  0051A0  0E96               	movlw	low _responseData
 11426  0051A2  24F3               	addwf	prodl,w,c
 11427  0051A4  6ED9               	movwf	fsr2l,c
 11428  0051A6  0E01               	movlw	high _responseData
 11429  0051A8  20F4               	addwfc	prodh,w,c
 11430  0051AA  6EDA               	movwf	fsr2h,c
 11431  0051AC  0E00               	movlw	0
 11432  0051AE  6EDF               	movwf	indf2,c
 11433                           
 11434                           ; BSR set to: 0
 11435  0051B0  0100               	movlb	0	; () banked
 11436  0051B2  2B62               	incf	moteApp_clearBuffers@counter_1955& (0+255),f,b
 11437  0051B4  D7ED               	goto	l13028
 11438  0051B6                     l13038:
 11439                           
 11440                           ; BSR set to: 0
 11441                           ;MOTEapp.c: 1370: }
 11442                           ;MOTEapp.c: 1371: for (uint8_t counter = 0; counter < sizeof(dataBuffer); counter++)
 11443  0051B6  0E00               	movlw	0
 11444  0051B8  0100               	movlb	0	; () banked
 11445  0051BA  6F63               	movwf	moteApp_clearBuffers@counter_1956& (0+255),b
 11446  0051BC                     l13040:
 11447                           
 11448                           ; BSR set to: 0
 11449  0051BC  0E0F               	movlw	15
 11450  0051BE  0100               	movlb	0	; () banked
 11451  0051C0  6563               	cpfsgt	moteApp_clearBuffers@counter_1956& (0+255),b
 11452  0051C2  D001               	goto	l13044
 11453  0051C4  0012               	return	
 11454  0051C6                     l13044:
 11455                           
 11456                           ; BSR set to: 0
 11457                           ;MOTEapp.c: 1372: {
 11458                           ;MOTEapp.c: 1373: dataBuffer[counter] = 0;
 11459  0051C6  0100               	movlb	0	; () banked
 11460  0051C8  5163               	movf	moteApp_clearBuffers@counter_1956& (0+255),w,b
 11461  0051CA  0D01               	mullw	1
 11462  0051CC  0EB6               	movlw	low _dataBuffer
 11463  0051CE  24F3               	addwf	prodl,w,c
 11464  0051D0  6ED9               	movwf	fsr2l,c
 11465  0051D2  0E01               	movlw	high _dataBuffer
 11466  0051D4  20F4               	addwfc	prodh,w,c
 11467  0051D6  6EDA               	movwf	fsr2h,c
 11468  0051D8  0E00               	movlw	0
 11469  0051DA  6EDF               	movwf	indf2,c
 11470                           
 11471                           ; BSR set to: 0
 11472  0051DC  0100               	movlb	0	; () banked
 11473  0051DE  2B63               	incf	moteApp_clearBuffers@counter_1956& (0+255),f,b
 11474  0051E0  D7ED               	goto	l13040
 11475  0051E2                     __end_of_moteApp_clearBuffers:
 11476                           	opt stack 0
 11477                           tblptru	equ	0xFF8
 11478                           tblptrh	equ	0xFF7
 11479                           tblptrl	equ	0xFF6
 11480                           tablat	equ	0xFF5
 11481                           prodh	equ	0xFF4
 11482                           prodl	equ	0xFF3
 11483                           intcon	equ	0xFF2
 11484                           postinc0	equ	0xFEE
 11485                           wreg	equ	0xFE8
 11486                           indf1	equ	0xFE7
 11487                           postdec1	equ	0xFE5
 11488                           fsr1h	equ	0xFE2
 11489                           fsr1l	equ	0xFE1
 11490                           indf2	equ	0xFDF
 11491                           fsr2h	equ	0xFDA
 11492                           fsr2l	equ	0xFD9
 11493                           status	equ	0xFD8
 11494                           
 11495 ;; *************** function _moteApp_add8bToDataBuffer *****************
 11496 ;; Defined at:
 11497 ;;		line 1377 in file "../Includes/Board/MOTEapp.c"
 11498 ;; Parameters:    Size  Location     Type
 11499 ;;  number          1    wreg     unsigned char 
 11500 ;;  bufferLocati    1    6[BANK0 ] unsigned char 
 11501 ;; Auto vars:     Size  Location     Type
 11502 ;;  number          1    9[BANK0 ] unsigned char 
 11503 ;; Return value:  Size  Location     Type
 11504 ;;		None               void
 11505 ;; Registers used:
 11506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11507 ;; Tracked objects:
 11508 ;;		On entry : 0/0
 11509 ;;		On exit  : 0/0
 11510 ;;		Unchanged: 0/0
 11511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11512 ;;      Params:         0       1       0       0       0       0       0       0       0
 11513 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11514 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11515 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11516 ;;Total ram usage:        4 bytes
 11517 ;; Hardware stack levels used:    1
 11518 ;; Hardware stack levels required when called:   12
 11519 ;; This function calls:
 11520 ;;		___awmod
 11521 ;;		___lbdiv
 11522 ;; This function is called by:
 11523 ;;		_moteRunningProcess
 11524 ;; This function uses a non-reentrant model
 11525 ;;
 11526                           
 11527                           	psect	text24
 11528  004900                     __ptext24:
 11529                           	opt stack 0
 11530  004900                     _moteApp_add8bToDataBuffer:
 11531                           	opt stack 16
 11532                           
 11533                           ; BSR set to: 0
 11534                           ;incstack = 0
 11535                           ;moteApp_add8bToDataBuffer@number stored from wreg
 11536  004900  0100               	movlb	0	; () banked
 11537  004902  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11538                           
 11539                           ;MOTEapp.c: 1379: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
 11540  004904  0100               	movlb	0	; () banked
 11541  004906  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11542  004908  0100               	movlb	0	; () banked
 11543  00490A  6F67               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
 11544  00490C  6B68               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
 11545  00490E  0E02               	movlw	2
 11546  004910  0100               	movlb	0	; () banked
 11547  004912  2767               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
 11548  004914  0E00               	movlw	0
 11549  004916  2368               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
 11550  004918  0EB6               	movlw	low _dataBuffer
 11551  00491A  0100               	movlb	0	; () banked
 11552  00491C  2567               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
 11553  00491E  6ED9               	movwf	fsr2l,c
 11554  004920  0E01               	movlw	high _dataBuffer
 11555  004922  0100               	movlb	0	; () banked
 11556  004924  2168               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
 11557  004926  6EDA               	movwf	fsr2h,c
 11558  004928  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11559  00492C  0100               	movlb	0	; () banked
 11560  00492E  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11561  004930  0E00               	movlw	0
 11562  004932  0100               	movlb	0	; () banked
 11563  004934  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11564  004936  0E0A               	movlw	10
 11565  004938  6F62               	movwf	___awmod@divisor& (0+255),b
 11566  00493A  EC9C  F02A         	call	___awmod	;wreg free
 11567  00493E  0100               	movlb	0	; () banked
 11568  004940  5160               	movf	?___awmod& (0+255),w,b
 11569  004942  0F30               	addlw	48
 11570  004944  6EDF               	movwf	indf2,c
 11571                           
 11572                           ; BSR set to: 0
 11573                           ;MOTEapp.c: 1380: number /= 10;
 11574  004946  0E0A               	movlw	10
 11575  004948  0100               	movlb	0	; () banked
 11576  00494A  6F60               	movwf	___lbdiv@divisor& (0+255),b
 11577  00494C  0100               	movlb	0	; () banked
 11578  00494E  5169               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
 11579  004950  EC13  F030         	call	___lbdiv
 11580  004954  0100               	movlb	0	; () banked
 11581  004956  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11582                           
 11583                           ; BSR set to: 0
 11584                           ;MOTEapp.c: 1381: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
 11585  004958  0100               	movlb	0	; () banked
 11586  00495A  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11587  00495C  0100               	movlb	0	; () banked
 11588  00495E  6F67               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
 11589  004960  6B68               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
 11590  004962  0E01               	movlw	1
 11591  004964  0100               	movlb	0	; () banked
 11592  004966  2767               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
 11593  004968  0E00               	movlw	0
 11594  00496A  2368               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
 11595  00496C  0EB6               	movlw	low _dataBuffer
 11596  00496E  0100               	movlb	0	; () banked
 11597  004970  2567               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
 11598  004972  6ED9               	movwf	fsr2l,c
 11599  004974  0E01               	movlw	high _dataBuffer
 11600  004976  0100               	movlb	0	; () banked
 11601  004978  2168               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
 11602  00497A  6EDA               	movwf	fsr2h,c
 11603  00497C  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11604  004980  0100               	movlb	0	; () banked
 11605  004982  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11606  004984  0E00               	movlw	0
 11607  004986  0100               	movlb	0	; () banked
 11608  004988  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11609  00498A  0E0A               	movlw	10
 11610  00498C  6F62               	movwf	___awmod@divisor& (0+255),b
 11611  00498E  EC9C  F02A         	call	___awmod	;wreg free
 11612  004992  0100               	movlb	0	; () banked
 11613  004994  5160               	movf	?___awmod& (0+255),w,b
 11614  004996  0F30               	addlw	48
 11615  004998  6EDF               	movwf	indf2,c
 11616                           
 11617                           ;MOTEapp.c: 1382: number /= 10;
 11618  00499A  0E0A               	movlw	10
 11619  00499C  0100               	movlb	0	; () banked
 11620  00499E  6F60               	movwf	___lbdiv@divisor& (0+255),b
 11621  0049A0  0100               	movlb	0	; () banked
 11622  0049A2  5169               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
 11623  0049A4  EC13  F030         	call	___lbdiv
 11624  0049A8  0100               	movlb	0	; () banked
 11625  0049AA  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11626                           
 11627                           ; BSR set to: 0
 11628                           ;MOTEapp.c: 1383: dataBuffer[bufferLocation] = '0' + (number % 10);
 11629  0049AC  0100               	movlb	0	; () banked
 11630  0049AE  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11631  0049B0  0D01               	mullw	1
 11632  0049B2  0EB6               	movlw	low _dataBuffer
 11633  0049B4  24F3               	addwf	prodl,w,c
 11634  0049B6  6ED9               	movwf	fsr2l,c
 11635  0049B8  0E01               	movlw	high _dataBuffer
 11636  0049BA  20F4               	addwfc	prodh,w,c
 11637  0049BC  6EDA               	movwf	fsr2h,c
 11638  0049BE  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11639  0049C2  0100               	movlb	0	; () banked
 11640  0049C4  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11641  0049C6  0E00               	movlw	0
 11642  0049C8  0100               	movlb	0	; () banked
 11643  0049CA  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11644  0049CC  0E0A               	movlw	10
 11645  0049CE  6F62               	movwf	___awmod@divisor& (0+255),b
 11646  0049D0  EC9C  F02A         	call	___awmod	;wreg free
 11647  0049D4  0100               	movlb	0	; () banked
 11648  0049D6  5160               	movf	?___awmod& (0+255),w,b
 11649  0049D8  0F30               	addlw	48
 11650  0049DA  6EDF               	movwf	indf2,c
 11651                           
 11652                           ; BSR set to: 0
 11653  0049DC  0012               	return		;funcret
 11654  0049DE                     __end_of_moteApp_add8bToDataBuffer:
 11655                           	opt stack 0
 11656                           tblptru	equ	0xFF8
 11657                           tblptrh	equ	0xFF7
 11658                           tblptrl	equ	0xFF6
 11659                           tablat	equ	0xFF5
 11660                           prodh	equ	0xFF4
 11661                           prodl	equ	0xFF3
 11662                           intcon	equ	0xFF2
 11663                           postinc0	equ	0xFEE
 11664                           wreg	equ	0xFE8
 11665                           indf1	equ	0xFE7
 11666                           postdec1	equ	0xFE5
 11667                           fsr1h	equ	0xFE2
 11668                           fsr1l	equ	0xFE1
 11669                           indf2	equ	0xFDF
 11670                           fsr2h	equ	0xFDA
 11671                           fsr2l	equ	0xFD9
 11672                           status	equ	0xFD8
 11673                           
 11674 ;; *************** function ___lbdiv *****************
 11675 ;; Defined at:
 11676 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lbdiv.c"
 11677 ;; Parameters:    Size  Location     Type
 11678 ;;  dividend        1    wreg     unsigned char 
 11679 ;;  divisor         1    0[BANK0 ] unsigned char 
 11680 ;; Auto vars:     Size  Location     Type
 11681 ;;  dividend        1    1[BANK0 ] unsigned char 
 11682 ;;  quotient        1    3[BANK0 ] unsigned char 
 11683 ;;  counter         1    2[BANK0 ] unsigned char 
 11684 ;; Return value:  Size  Location     Type
 11685 ;;                  1    wreg      unsigned char 
 11686 ;; Registers used:
 11687 ;;		wreg, status,2, status,0
 11688 ;; Tracked objects:
 11689 ;;		On entry : 0/0
 11690 ;;		On exit  : 0/0
 11691 ;;		Unchanged: 0/0
 11692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11693 ;;      Params:         0       1       0       0       0       0       0       0       0
 11694 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11695 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11696 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11697 ;;Total ram usage:        4 bytes
 11698 ;; Hardware stack levels used:    1
 11699 ;; Hardware stack levels required when called:   11
 11700 ;; This function calls:
 11701 ;;		Nothing
 11702 ;; This function is called by:
 11703 ;;		_moteApp_add8bToDataBuffer
 11704 ;;		_oled_putUint8
 11705 ;;		_oled_putint8
 11706 ;; This function uses a non-reentrant model
 11707 ;;
 11708                           
 11709                           	psect	text25
 11710  006026                     __ptext25:
 11711                           	opt stack 0
 11712  006026                     ___lbdiv:
 11713                           	opt stack 16
 11714                           
 11715                           ; BSR set to: 0
 11716                           ;incstack = 0
 11717                           ;___lbdiv@dividend stored from wreg
 11718  006026  0100               	movlb	0	; () banked
 11719  006028  6F61               	movwf	___lbdiv@dividend& (0+255),b
 11720  00602A  0E00               	movlw	0
 11721  00602C  0100               	movlb	0	; () banked
 11722  00602E  6F63               	movwf	___lbdiv@quotient& (0+255),b
 11723                           
 11724                           ; BSR set to: 0
 11725  006030  0100               	movlb	0	; () banked
 11726  006032  5160               	movf	___lbdiv@divisor& (0+255),w,b
 11727  006034  0100               	movlb	0	; () banked
 11728  006036  B4D8               	btfsc	status,2,c
 11729  006038  D021               	goto	l12750
 11730                           
 11731                           ; BSR set to: 0
 11732  00603A  0E01               	movlw	1
 11733  00603C  0100               	movlb	0	; () banked
 11734  00603E  6F62               	movwf	___lbdiv@counter& (0+255),b
 11735  006040  D005               	goto	l12738
 11736  006042                     l12734:
 11737                           
 11738                           ; BSR set to: 0
 11739  006042  0100               	movlb	0	; () banked
 11740  006044  90D8               	bcf	status,0,c
 11741  006046  3760               	rlcf	___lbdiv@divisor& (0+255),f,b
 11742                           
 11743                           ; BSR set to: 0
 11744  006048  0100               	movlb	0	; () banked
 11745  00604A  2B62               	incf	___lbdiv@counter& (0+255),f,b
 11746  00604C                     l12738:
 11747                           
 11748                           ; BSR set to: 0
 11749  00604C  0100               	movlb	0	; () banked
 11750  00604E  AF60               	btfss	___lbdiv@divisor& (0+255),7,b
 11751  006050  D7F8               	goto	l12734
 11752  006052                     l12740:
 11753                           
 11754                           ; BSR set to: 0
 11755  006052  0100               	movlb	0	; () banked
 11756  006054  90D8               	bcf	status,0,c
 11757  006056  3763               	rlcf	___lbdiv@quotient& (0+255),f,b
 11758  006058  0100               	movlb	0	; () banked
 11759  00605A  5160               	movf	___lbdiv@divisor& (0+255),w,b
 11760  00605C  0100               	movlb	0	; () banked
 11761  00605E  5D61               	subwf	___lbdiv@dividend& (0+255),w,b
 11762  006060  A0D8               	btfss	status,0,c
 11763  006062  D006               	goto	l12746
 11764                           
 11765                           ; BSR set to: 0
 11766  006064  0100               	movlb	0	; () banked
 11767  006066  5160               	movf	___lbdiv@divisor& (0+255),w,b
 11768  006068  0100               	movlb	0	; () banked
 11769  00606A  5F61               	subwf	___lbdiv@dividend& (0+255),f,b
 11770                           
 11771                           ; BSR set to: 0
 11772  00606C  0100               	movlb	0	; () banked
 11773  00606E  8163               	bsf	___lbdiv@quotient& (0+255),0,b
 11774  006070                     l12746:
 11775                           
 11776                           ; BSR set to: 0
 11777  006070  0100               	movlb	0	; () banked
 11778  006072  90D8               	bcf	status,0,c
 11779  006074  3360               	rrcf	___lbdiv@divisor& (0+255),f,b
 11780                           
 11781                           ; BSR set to: 0
 11782  006076  0100               	movlb	0	; () banked
 11783  006078  2F62               	decfsz	___lbdiv@counter& (0+255),f,b
 11784  00607A  D7EB               	goto	l12740
 11785  00607C                     l12750:
 11786                           
 11787                           ; BSR set to: 0
 11788  00607C  0100               	movlb	0	; () banked
 11789  00607E  5163               	movf	___lbdiv@quotient& (0+255),w,b
 11790  006080  0012               	return	
 11791  006082                     __end_of___lbdiv:
 11792                           	opt stack 0
 11793                           tblptru	equ	0xFF8
 11794                           tblptrh	equ	0xFF7
 11795                           tblptrl	equ	0xFF6
 11796                           tablat	equ	0xFF5
 11797                           prodh	equ	0xFF4
 11798                           prodl	equ	0xFF3
 11799                           intcon	equ	0xFF2
 11800                           postinc0	equ	0xFEE
 11801                           wreg	equ	0xFE8
 11802                           indf1	equ	0xFE7
 11803                           postdec1	equ	0xFE5
 11804                           fsr1h	equ	0xFE2
 11805                           fsr1l	equ	0xFE1
 11806                           indf2	equ	0xFDF
 11807                           fsr2h	equ	0xFDA
 11808                           fsr2l	equ	0xFD9
 11809                           status	equ	0xFD8
 11810                           
 11811 ;; *************** function ___awmod *****************
 11812 ;; Defined at:
 11813 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 11814 ;; Parameters:    Size  Location     Type
 11815 ;;  dividend        2    0[BANK0 ] int 
 11816 ;;  divisor         2    2[BANK0 ] int 
 11817 ;; Auto vars:     Size  Location     Type
 11818 ;;  sign            1    5[BANK0 ] unsigned char 
 11819 ;;  counter         1    4[BANK0 ] unsigned char 
 11820 ;; Return value:  Size  Location     Type
 11821 ;;                  2    0[BANK0 ] int 
 11822 ;; Registers used:
 11823 ;;		wreg, status,2, status,0
 11824 ;; Tracked objects:
 11825 ;;		On entry : 0/0
 11826 ;;		On exit  : 0/0
 11827 ;;		Unchanged: 0/0
 11828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11829 ;;      Params:         0       4       0       0       0       0       0       0       0
 11830 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11831 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11832 ;;      Totals:         0       6       0       0       0       0       0       0       0
 11833 ;;Total ram usage:        6 bytes
 11834 ;; Hardware stack levels used:    1
 11835 ;; Hardware stack levels required when called:   11
 11836 ;; This function calls:
 11837 ;;		Nothing
 11838 ;; This function is called by:
 11839 ;;		_moteApp_add8bToDataBuffer
 11840 ;;		_oled_putUint8
 11841 ;;		_oled_putint8
 11842 ;; This function uses a non-reentrant model
 11843 ;;
 11844                           
 11845                           	psect	text26
 11846  005538                     __ptext26:
 11847                           	opt stack 0
 11848  005538                     ___awmod:
 11849                           	opt stack 16
 11850                           
 11851                           ; BSR set to: 0
 11852                           ;incstack = 0
 11853  005538  0E00               	movlw	0
 11854  00553A  0100               	movlb	0	; () banked
 11855  00553C  6F65               	movwf	___awmod@sign& (0+255),b
 11856                           
 11857                           ; BSR set to: 0
 11858  00553E  0100               	movlb	0	; () banked
 11859  005540  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 11860  005542  D008               	goto	l12656
 11861                           
 11862                           ; BSR set to: 0
 11863  005544  0100               	movlb	0	; () banked
 11864  005546  6D60               	negf	___awmod@dividend& (0+255),b
 11865  005548  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 11866  00554A  B0D8               	btfsc	status,0,c
 11867  00554C  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 11868                           
 11869                           ; BSR set to: 0
 11870  00554E  0E01               	movlw	1
 11871  005550  0100               	movlb	0	; () banked
 11872  005552  6F65               	movwf	___awmod@sign& (0+255),b
 11873  005554                     l12656:
 11874                           
 11875                           ; BSR set to: 0
 11876  005554  0100               	movlb	0	; () banked
 11877  005556  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11878  005558  D005               	goto	l12660
 11879                           
 11880                           ; BSR set to: 0
 11881  00555A  0100               	movlb	0	; () banked
 11882  00555C  6D62               	negf	___awmod@divisor& (0+255),b
 11883  00555E  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 11884  005560  B0D8               	btfsc	status,0,c
 11885  005562  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 11886  005564                     l12660:
 11887                           
 11888                           ; BSR set to: 0
 11889  005564  0100               	movlb	0	; () banked
 11890  005566  5162               	movf	___awmod@divisor& (0+255),w,b
 11891  005568  0100               	movlb	0	; () banked
 11892  00556A  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 11893  00556C  B4D8               	btfsc	status,2,c
 11894  00556E  D026               	goto	l12676
 11895                           
 11896                           ; BSR set to: 0
 11897  005570  0E01               	movlw	1
 11898  005572  0100               	movlb	0	; () banked
 11899  005574  6F64               	movwf	___awmod@counter& (0+255),b
 11900  005576  D006               	goto	l12666
 11901  005578                     l12664:
 11902                           
 11903                           ; BSR set to: 0
 11904  005578  0100               	movlb	0	; () banked
 11905  00557A  90D8               	bcf	status,0,c
 11906  00557C  3762               	rlcf	___awmod@divisor& (0+255),f,b
 11907  00557E  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 11908  005580  0100               	movlb	0	; () banked
 11909  005582  2B64               	incf	___awmod@counter& (0+255),f,b
 11910  005584                     l12666:
 11911                           
 11912                           ; BSR set to: 0
 11913  005584  0100               	movlb	0	; () banked
 11914  005586  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11915  005588  D7F7               	goto	l12664
 11916  00558A                     l12668:
 11917                           
 11918                           ; BSR set to: 0
 11919  00558A  0100               	movlb	0	; () banked
 11920  00558C  5162               	movf	___awmod@divisor& (0+255),w,b
 11921  00558E  0100               	movlb	0	; () banked
 11922  005590  5D60               	subwf	___awmod@dividend& (0+255),w,b
 11923  005592  0100               	movlb	0	; () banked
 11924  005594  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 11925  005596  0100               	movlb	0	; () banked
 11926  005598  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 11927  00559A  A0D8               	btfss	status,0,c
 11928  00559C  D008               	goto	l12672
 11929                           
 11930                           ; BSR set to: 0
 11931  00559E  0100               	movlb	0	; () banked
 11932  0055A0  5162               	movf	___awmod@divisor& (0+255),w,b
 11933  0055A2  0100               	movlb	0	; () banked
 11934  0055A4  5F60               	subwf	___awmod@dividend& (0+255),f,b
 11935  0055A6  0100               	movlb	0	; () banked
 11936  0055A8  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 11937  0055AA  0100               	movlb	0	; () banked
 11938  0055AC  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 11939  0055AE                     l12672:
 11940                           
 11941                           ; BSR set to: 0
 11942  0055AE  0100               	movlb	0	; () banked
 11943  0055B0  90D8               	bcf	status,0,c
 11944  0055B2  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 11945  0055B4  3362               	rrcf	___awmod@divisor& (0+255),f,b
 11946                           
 11947                           ; BSR set to: 0
 11948  0055B6  0100               	movlb	0	; () banked
 11949  0055B8  2F64               	decfsz	___awmod@counter& (0+255),f,b
 11950  0055BA  D7E7               	goto	l12668
 11951  0055BC                     l12676:
 11952                           
 11953                           ; BSR set to: 0
 11954  0055BC  0100               	movlb	0	; () banked
 11955  0055BE  5165               	movf	___awmod@sign& (0+255),w,b
 11956  0055C0  0100               	movlb	0	; () banked
 11957  0055C2  B4D8               	btfsc	status,2,c
 11958  0055C4  D005               	goto	l12680
 11959                           
 11960                           ; BSR set to: 0
 11961  0055C6  0100               	movlb	0	; () banked
 11962  0055C8  6D60               	negf	___awmod@dividend& (0+255),b
 11963  0055CA  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 11964  0055CC  B0D8               	btfsc	status,0,c
 11965  0055CE  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 11966  0055D0                     l12680:
 11967                           
 11968                           ; BSR set to: 0
 11969  0055D0  C060  F060         	movff	___awmod@dividend,?___awmod
 11970  0055D4  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 11971  0055D8  0012               	return	
 11972  0055DA                     __end_of___awmod:
 11973                           	opt stack 0
 11974                           tblptru	equ	0xFF8
 11975                           tblptrh	equ	0xFF7
 11976                           tblptrl	equ	0xFF6
 11977                           tablat	equ	0xFF5
 11978                           prodh	equ	0xFF4
 11979                           prodl	equ	0xFF3
 11980                           intcon	equ	0xFF2
 11981                           postinc0	equ	0xFEE
 11982                           wreg	equ	0xFE8
 11983                           indf1	equ	0xFE7
 11984                           postdec1	equ	0xFE5
 11985                           fsr1h	equ	0xFE2
 11986                           fsr1l	equ	0xFE1
 11987                           indf2	equ	0xFDF
 11988                           fsr2h	equ	0xFDA
 11989                           fsr2l	equ	0xFD9
 11990                           status	equ	0xFD8
 11991                           
 11992 ;; *************** function _moteApp_add16bToDataBuffer *****************
 11993 ;; Defined at:
 11994 ;;		line 1386 in file "../Includes/Board/MOTEapp.c"
 11995 ;; Parameters:    Size  Location     Type
 11996 ;;  number          2    7[BANK0 ] unsigned int 
 11997 ;;  bufferLocati    1    9[BANK0 ] unsigned char 
 11998 ;; Auto vars:     Size  Location     Type
 11999 ;;		None
 12000 ;; Return value:  Size  Location     Type
 12001 ;;		None               void
 12002 ;; Registers used:
 12003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12004 ;; Tracked objects:
 12005 ;;		On entry : 0/0
 12006 ;;		On exit  : 0/0
 12007 ;;		Unchanged: 0/0
 12008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12009 ;;      Params:         0       3       0       0       0       0       0       0       0
 12010 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12011 ;;      Temps:          0       2       0       0       0       0       0       0       0
 12012 ;;      Totals:         0       5       0       0       0       0       0       0       0
 12013 ;;Total ram usage:        5 bytes
 12014 ;; Hardware stack levels used:    1
 12015 ;; Hardware stack levels required when called:   12
 12016 ;; This function calls:
 12017 ;;		___lwdiv
 12018 ;;		___lwmod
 12019 ;; This function is called by:
 12020 ;;		_moteRunningProcess
 12021 ;; This function uses a non-reentrant model
 12022 ;;
 12023                           
 12024                           	psect	text27
 12025  0031FC                     __ptext27:
 12026                           	opt stack 0
 12027  0031FC                     _moteApp_add16bToDataBuffer:
 12028                           	opt stack 16
 12029                           
 12030                           ;MOTEapp.c: 1388: dataBuffer[bufferLocation + 4] = '0' + (number % 10);
 12031                           
 12032                           ; BSR set to: 0
 12033                           ;incstack = 0
 12034  0031FC  0100               	movlb	0	; () banked
 12035  0031FE  5169               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 12036  003200  0100               	movlb	0	; () banked
 12037  003202  6F6A               	movwf	??_moteApp_add16bToDataBuffer& (0+255),b
 12038  003204  6B6B               	clrf	(??_moteApp_add16bToDataBuffer+1)& (0+255),b
 12039  003206  0E04               	movlw	4
 12040  003208  0100               	movlb	0	; () banked
 12041  00320A  276A               	addwf	??_moteApp_add16bToDataBuffer& (0+255),f,b
 12042  00320C  0E00               	movlw	0
 12043  00320E  236B               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),f,b
 12044  003210  0EB6               	movlw	low _dataBuffer
 12045  003212  0100               	movlb	0	; () banked
 12046  003214  256A               	addwf	??_moteApp_add16bToDataBuffer& (0+255),w,b
 12047  003216  6ED9               	movwf	fsr2l,c
 12048  003218  0E01               	movlw	high _dataBuffer
 12049  00321A  0100               	movlb	0	; () banked
 12050  00321C  216B               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),w,b
 12051  00321E  6EDA               	movwf	fsr2h,c
 12052  003220  C067  F060         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 12053  003224  C068  F061         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 12054  003228  0E00               	movlw	0
 12055  00322A  0100               	movlb	0	; () banked
 12056  00322C  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 12057  00322E  0E0A               	movlw	10
 12058  003230  6F62               	movwf	___lwmod@divisor& (0+255),b
 12059  003232  ECB2  F02F         	call	___lwmod	;wreg free
 12060  003236  0100               	movlb	0	; () banked
 12061  003238  5160               	movf	?___lwmod& (0+255),w,b
 12062  00323A  0F30               	addlw	48
 12063  00323C  6EDF               	movwf	indf2,c
 12064                           
 12065                           ; BSR set to: 0
 12066                           ;MOTEapp.c: 1389: number /= 10;
 12067  00323E  C067  F060         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 12068  003242  C068  F061         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 12069  003246  0E00               	movlw	0
 12070  003248  0100               	movlb	0	; () banked
 12071  00324A  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12072  00324C  0E0A               	movlw	10
 12073  00324E  6F62               	movwf	___lwdiv@divisor& (0+255),b
 12074  003250  EC2C  F02E         	call	___lwdiv	;wreg free
 12075  003254  C060  F067         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 12076  003258  C061  F068         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 12077                           
 12078                           ;MOTEapp.c: 1390: dataBuffer[bufferLocation + 3] = '0' + (number % 10);
 12079  00325C  0100               	movlb	0	; () banked
 12080  00325E  5169               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 12081  003260  0100               	movlb	0	; () banked
 12082  003262  6F6A               	movwf	??_moteApp_add16bToDataBuffer& (0+255),b
 12083  003264  6B6B               	clrf	(??_moteApp_add16bToDataBuffer+1)& (0+255),b
 12084  003266  0E03               	movlw	3
 12085  003268  0100               	movlb	0	; () banked
 12086  00326A  276A               	addwf	??_moteApp_add16bToDataBuffer& (0+255),f,b
 12087  00326C  0E00               	movlw	0
 12088  00326E  236B               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),f,b
 12089  003270  0EB6               	movlw	low _dataBuffer
 12090  003272  0100               	movlb	0	; () banked
 12091  003274  256A               	addwf	??_moteApp_add16bToDataBuffer& (0+255),w,b
 12092  003276  6ED9               	movwf	fsr2l,c
 12093  003278  0E01               	movlw	high _dataBuffer
 12094  00327A  0100               	movlb	0	; () banked
 12095  00327C  216B               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),w,b
 12096  00327E  6EDA               	movwf	fsr2h,c
 12097  003280  C067  F060         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 12098  003284  C068  F061         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 12099  003288  0E00               	movlw	0
 12100  00328A  0100               	movlb	0	; () banked
 12101  00328C  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 12102  00328E  0E0A               	movlw	10
 12103  003290  6F62               	movwf	___lwmod@divisor& (0+255),b
 12104  003292  ECB2  F02F         	call	___lwmod	;wreg free
 12105  003296  0100               	movlb	0	; () banked
 12106  003298  5160               	movf	?___lwmod& (0+255),w,b
 12107  00329A  0F30               	addlw	48
 12108  00329C  6EDF               	movwf	indf2,c
 12109                           
 12110                           ;MOTEapp.c: 1391: number /= 10;
 12111  00329E  C067  F060         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 12112  0032A2  C068  F061         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 12113  0032A6  0E00               	movlw	0
 12114  0032A8  0100               	movlb	0	; () banked
 12115  0032AA  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12116  0032AC  0E0A               	movlw	10
 12117  0032AE  6F62               	movwf	___lwdiv@divisor& (0+255),b
 12118  0032B0  EC2C  F02E         	call	___lwdiv	;wreg free
 12119  0032B4  C060  F067         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 12120  0032B8  C061  F068         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 12121                           
 12122                           ;MOTEapp.c: 1392: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
 12123  0032BC  0100               	movlb	0	; () banked
 12124  0032BE  5169               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 12125  0032C0  0100               	movlb	0	; () banked
 12126  0032C2  6F6A               	movwf	??_moteApp_add16bToDataBuffer& (0+255),b
 12127  0032C4  6B6B               	clrf	(??_moteApp_add16bToDataBuffer+1)& (0+255),b
 12128  0032C6  0E02               	movlw	2
 12129  0032C8  0100               	movlb	0	; () banked
 12130  0032CA  276A               	addwf	??_moteApp_add16bToDataBuffer& (0+255),f,b
 12131  0032CC  0E00               	movlw	0
 12132  0032CE  236B               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),f,b
 12133  0032D0  0EB6               	movlw	low _dataBuffer
 12134  0032D2  0100               	movlb	0	; () banked
 12135  0032D4  256A               	addwf	??_moteApp_add16bToDataBuffer& (0+255),w,b
 12136  0032D6  6ED9               	movwf	fsr2l,c
 12137  0032D8  0E01               	movlw	high _dataBuffer
 12138  0032DA  0100               	movlb	0	; () banked
 12139  0032DC  216B               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),w,b
 12140  0032DE  6EDA               	movwf	fsr2h,c
 12141  0032E0  C067  F060         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 12142  0032E4  C068  F061         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 12143  0032E8  0E00               	movlw	0
 12144  0032EA  0100               	movlb	0	; () banked
 12145  0032EC  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 12146  0032EE  0E0A               	movlw	10
 12147  0032F0  6F62               	movwf	___lwmod@divisor& (0+255),b
 12148  0032F2  ECB2  F02F         	call	___lwmod	;wreg free
 12149  0032F6  0100               	movlb	0	; () banked
 12150  0032F8  5160               	movf	?___lwmod& (0+255),w,b
 12151  0032FA  0F30               	addlw	48
 12152  0032FC  6EDF               	movwf	indf2,c
 12153                           
 12154                           ; BSR set to: 0
 12155                           ;MOTEapp.c: 1393: number /= 10;
 12156  0032FE  C067  F060         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 12157  003302  C068  F061         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 12158  003306  0E00               	movlw	0
 12159  003308  0100               	movlb	0	; () banked
 12160  00330A  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12161  00330C  0E0A               	movlw	10
 12162  00330E  6F62               	movwf	___lwdiv@divisor& (0+255),b
 12163  003310  EC2C  F02E         	call	___lwdiv	;wreg free
 12164  003314  C060  F067         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 12165  003318  C061  F068         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 12166                           
 12167                           ;MOTEapp.c: 1394: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
 12168  00331C  0100               	movlb	0	; () banked
 12169  00331E  5169               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 12170  003320  0100               	movlb	0	; () banked
 12171  003322  6F6A               	movwf	??_moteApp_add16bToDataBuffer& (0+255),b
 12172  003324  6B6B               	clrf	(??_moteApp_add16bToDataBuffer+1)& (0+255),b
 12173  003326  0E01               	movlw	1
 12174  003328  0100               	movlb	0	; () banked
 12175  00332A  276A               	addwf	??_moteApp_add16bToDataBuffer& (0+255),f,b
 12176  00332C  0E00               	movlw	0
 12177  00332E  236B               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),f,b
 12178  003330  0EB6               	movlw	low _dataBuffer
 12179  003332  0100               	movlb	0	; () banked
 12180  003334  256A               	addwf	??_moteApp_add16bToDataBuffer& (0+255),w,b
 12181  003336  6ED9               	movwf	fsr2l,c
 12182  003338  0E01               	movlw	high _dataBuffer
 12183  00333A  0100               	movlb	0	; () banked
 12184  00333C  216B               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),w,b
 12185  00333E  6EDA               	movwf	fsr2h,c
 12186  003340  C067  F060         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 12187  003344  C068  F061         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 12188  003348  0E00               	movlw	0
 12189  00334A  0100               	movlb	0	; () banked
 12190  00334C  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 12191  00334E  0E0A               	movlw	10
 12192  003350  6F62               	movwf	___lwmod@divisor& (0+255),b
 12193  003352  ECB2  F02F         	call	___lwmod	;wreg free
 12194  003356  0100               	movlb	0	; () banked
 12195  003358  5160               	movf	?___lwmod& (0+255),w,b
 12196  00335A  0F30               	addlw	48
 12197  00335C  6EDF               	movwf	indf2,c
 12198                           
 12199                           ; BSR set to: 0
 12200                           ;MOTEapp.c: 1395: number /= 10;
 12201  00335E  C067  F060         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 12202  003362  C068  F061         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 12203  003366  0E00               	movlw	0
 12204  003368  0100               	movlb	0	; () banked
 12205  00336A  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12206  00336C  0E0A               	movlw	10
 12207  00336E  6F62               	movwf	___lwdiv@divisor& (0+255),b
 12208  003370  EC2C  F02E         	call	___lwdiv	;wreg free
 12209  003374  C060  F067         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 12210  003378  C061  F068         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 12211                           
 12212                           ;MOTEapp.c: 1396: dataBuffer[bufferLocation] = '0' + (number % 10);
 12213  00337C  0100               	movlb	0	; () banked
 12214  00337E  5169               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 12215  003380  0D01               	mullw	1
 12216  003382  0EB6               	movlw	low _dataBuffer
 12217  003384  24F3               	addwf	prodl,w,c
 12218  003386  6ED9               	movwf	fsr2l,c
 12219  003388  0E01               	movlw	high _dataBuffer
 12220  00338A  20F4               	addwfc	prodh,w,c
 12221  00338C  6EDA               	movwf	fsr2h,c
 12222  00338E  C067  F060         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 12223  003392  C068  F061         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 12224  003396  0E00               	movlw	0
 12225  003398  0100               	movlb	0	; () banked
 12226  00339A  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 12227  00339C  0E0A               	movlw	10
 12228  00339E  6F62               	movwf	___lwmod@divisor& (0+255),b
 12229  0033A0  ECB2  F02F         	call	___lwmod	;wreg free
 12230  0033A4  0100               	movlb	0	; () banked
 12231  0033A6  5160               	movf	?___lwmod& (0+255),w,b
 12232  0033A8  0F30               	addlw	48
 12233  0033AA  6EDF               	movwf	indf2,c
 12234                           
 12235                           ; BSR set to: 0
 12236  0033AC  0012               	return		;funcret
 12237  0033AE                     __end_of_moteApp_add16bToDataBuffer:
 12238                           	opt stack 0
 12239                           tblptru	equ	0xFF8
 12240                           tblptrh	equ	0xFF7
 12241                           tblptrl	equ	0xFF6
 12242                           tablat	equ	0xFF5
 12243                           prodh	equ	0xFF4
 12244                           prodl	equ	0xFF3
 12245                           intcon	equ	0xFF2
 12246                           postinc0	equ	0xFEE
 12247                           wreg	equ	0xFE8
 12248                           indf1	equ	0xFE7
 12249                           postdec1	equ	0xFE5
 12250                           fsr1h	equ	0xFE2
 12251                           fsr1l	equ	0xFE1
 12252                           indf2	equ	0xFDF
 12253                           fsr2h	equ	0xFDA
 12254                           fsr2l	equ	0xFD9
 12255                           status	equ	0xFD8
 12256                           
 12257 ;; *************** function ___lwdiv *****************
 12258 ;; Defined at:
 12259 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 12260 ;; Parameters:    Size  Location     Type
 12261 ;;  dividend        2    0[BANK0 ] unsigned int 
 12262 ;;  divisor         2    2[BANK0 ] unsigned int 
 12263 ;; Auto vars:     Size  Location     Type
 12264 ;;  quotient        2    5[BANK0 ] unsigned int 
 12265 ;;  counter         1    4[BANK0 ] unsigned char 
 12266 ;; Return value:  Size  Location     Type
 12267 ;;                  2    0[BANK0 ] unsigned int 
 12268 ;; Registers used:
 12269 ;;		wreg, status,2, status,0
 12270 ;; Tracked objects:
 12271 ;;		On entry : 0/0
 12272 ;;		On exit  : 0/0
 12273 ;;		Unchanged: 0/0
 12274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12275 ;;      Params:         0       4       0       0       0       0       0       0       0
 12276 ;;      Locals:         0       3       0       0       0       0       0       0       0
 12277 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12278 ;;      Totals:         0       7       0       0       0       0       0       0       0
 12279 ;;Total ram usage:        7 bytes
 12280 ;; Hardware stack levels used:    1
 12281 ;; Hardware stack levels required when called:   11
 12282 ;; This function calls:
 12283 ;;		Nothing
 12284 ;; This function is called by:
 12285 ;;		_moteApp_add16bToDataBuffer
 12286 ;;		_oled_putUint16
 12287 ;; This function uses a non-reentrant model
 12288 ;;
 12289                           
 12290                           	psect	text28
 12291  005C58                     __ptext28:
 12292                           	opt stack 0
 12293  005C58                     ___lwdiv:
 12294                           	opt stack 16
 12295                           
 12296                           ; BSR set to: 0
 12297                           ;incstack = 0
 12298  005C58  0E00               	movlw	0
 12299  005C5A  0100               	movlb	0	; () banked
 12300  005C5C  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 12301  005C5E  0E00               	movlw	0
 12302  005C60  6F65               	movwf	___lwdiv@quotient& (0+255),b
 12303                           
 12304                           ; BSR set to: 0
 12305  005C62  0100               	movlb	0	; () banked
 12306  005C64  5162               	movf	___lwdiv@divisor& (0+255),w,b
 12307  005C66  0100               	movlb	0	; () banked
 12308  005C68  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 12309  005C6A  B4D8               	btfsc	status,2,c
 12310  005C6C  D02C               	goto	l2506
 12311                           
 12312                           ; BSR set to: 0
 12313  005C6E  0E01               	movlw	1
 12314  005C70  0100               	movlb	0	; () banked
 12315  005C72  6F64               	movwf	___lwdiv@counter& (0+255),b
 12316  005C74  D006               	goto	l12762
 12317  005C76                     l12760:
 12318                           
 12319                           ; BSR set to: 0
 12320  005C76  0100               	movlb	0	; () banked
 12321  005C78  90D8               	bcf	status,0,c
 12322  005C7A  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 12323  005C7C  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 12324  005C7E  0100               	movlb	0	; () banked
 12325  005C80  2B64               	incf	___lwdiv@counter& (0+255),f,b
 12326  005C82                     l12762:
 12327                           
 12328                           ; BSR set to: 0
 12329  005C82  0100               	movlb	0	; () banked
 12330  005C84  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 12331  005C86  D7F7               	goto	l12760
 12332  005C88                     l12764:
 12333                           
 12334                           ; BSR set to: 0
 12335  005C88  0100               	movlb	0	; () banked
 12336  005C8A  90D8               	bcf	status,0,c
 12337  005C8C  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 12338  005C8E  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 12339                           
 12340                           ; BSR set to: 0
 12341  005C90  0100               	movlb	0	; () banked
 12342  005C92  5162               	movf	___lwdiv@divisor& (0+255),w,b
 12343  005C94  0100               	movlb	0	; () banked
 12344  005C96  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 12345  005C98  0100               	movlb	0	; () banked
 12346  005C9A  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 12347  005C9C  0100               	movlb	0	; () banked
 12348  005C9E  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 12349  005CA0  A0D8               	btfss	status,0,c
 12350  005CA2  D00A               	goto	l12772
 12351                           
 12352                           ; BSR set to: 0
 12353  005CA4  0100               	movlb	0	; () banked
 12354  005CA6  5162               	movf	___lwdiv@divisor& (0+255),w,b
 12355  005CA8  0100               	movlb	0	; () banked
 12356  005CAA  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 12357  005CAC  0100               	movlb	0	; () banked
 12358  005CAE  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 12359  005CB0  0100               	movlb	0	; () banked
 12360  005CB2  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 12361                           
 12362                           ; BSR set to: 0
 12363  005CB4  0100               	movlb	0	; () banked
 12364  005CB6  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 12365  005CB8                     l12772:
 12366                           
 12367                           ; BSR set to: 0
 12368  005CB8  0100               	movlb	0	; () banked
 12369  005CBA  90D8               	bcf	status,0,c
 12370  005CBC  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 12371  005CBE  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 12372                           
 12373                           ; BSR set to: 0
 12374  005CC0  0100               	movlb	0	; () banked
 12375  005CC2  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 12376  005CC4  D7E1               	goto	l12764
 12377  005CC6                     l2506:
 12378                           
 12379                           ; BSR set to: 0
 12380  005CC6  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 12381  005CCA  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 12382                           
 12383                           ; BSR set to: 0
 12384  005CCE  0012               	return		;funcret
 12385  005CD0                     __end_of___lwdiv:
 12386                           	opt stack 0
 12387                           tblptru	equ	0xFF8
 12388                           tblptrh	equ	0xFF7
 12389                           tblptrl	equ	0xFF6
 12390                           tablat	equ	0xFF5
 12391                           prodh	equ	0xFF4
 12392                           prodl	equ	0xFF3
 12393                           intcon	equ	0xFF2
 12394                           postinc0	equ	0xFEE
 12395                           wreg	equ	0xFE8
 12396                           indf1	equ	0xFE7
 12397                           postdec1	equ	0xFE5
 12398                           fsr1h	equ	0xFE2
 12399                           fsr1l	equ	0xFE1
 12400                           indf2	equ	0xFDF
 12401                           fsr2h	equ	0xFDA
 12402                           fsr2l	equ	0xFD9
 12403                           status	equ	0xFD8
 12404                           
 12405 ;; *************** function _moteApp_GoToSleep *****************
 12406 ;; Defined at:
 12407 ;;		line 1222 in file "../Includes/Board/MOTEapp.c"
 12408 ;; Parameters:    Size  Location     Type
 12409 ;;		None
 12410 ;; Auto vars:     Size  Location     Type
 12411 ;;  status          1   14[BANK0 ] unsigned char 
 12412 ;; Return value:  Size  Location     Type
 12413 ;;                  1    wreg      unsigned char 
 12414 ;; Registers used:
 12415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12416 ;; Tracked objects:
 12417 ;;		On entry : 0/0
 12418 ;;		On exit  : 0/0
 12419 ;;		Unchanged: 0/0
 12420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12421 ;;      Params:         0       0       0       0       0       0       0       0       0
 12422 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12423 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12424 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12425 ;;Total ram usage:        1 bytes
 12426 ;; Hardware stack levels used:    1
 12427 ;; Hardware stack levels required when called:   17
 12428 ;; This function calls:
 12429 ;;		_EUSART_FlushBuffer
 12430 ;;		_PIN_MANAGER_Initialize
 12431 ;;		_moduleResync
 12432 ;;		_moduleSleep
 12433 ;;		_moteApp_delayms
 12434 ;;		_oled_displayOff
 12435 ;;		_oled_init
 12436 ;; This function is called by:
 12437 ;;		_moteRunningProcess
 12438 ;; This function uses a non-reentrant model
 12439 ;;
 12440                           
 12441                           	psect	text29
 12442  003EB4                     __ptext29:
 12443                           	opt stack 0
 12444  003EB4                     _moteApp_GoToSleep:
 12445                           	opt stack 11
 12446                           
 12447                           ;MOTEapp.c: 1224: uint8_t status = 0;
 12448                           
 12449                           ; BSR set to: 0
 12450                           ;incstack = 0
 12451  003EB4  0E00               	movlw	0
 12452  003EB6  0100               	movlb	0	; () banked
 12453  003EB8  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12454  003EBA                     l669:
 12455  003EBA  A081               	btfss	3969,0,c	;volatile
 12456  003EBC  D7FE               	goto	l669
 12457                           
 12458                           ;MOTEapp.c: 1226: moduleSleep();
 12459  003EBE  EC20  F034         	call	_moduleSleep	;wreg free
 12460                           
 12461                           ;MOTEapp.c: 1227: oled_displayOff(1);
 12462  003EC2  0E01               	movlw	1
 12463  003EC4  EC4E  F035         	call	_oled_displayOff
 12464                           
 12465                           ;MOTEapp.c: 1228: ADCON0bits.ADON = 0;
 12466  003EC8  90C2               	bcf	4034,0,c	;volatile
 12467                           
 12468                           ;MOTEapp.c: 1229: INTCONbits.GIE = 0;
 12469  003ECA  9EF2               	bcf	intcon,7,c	;volatile
 12470                           
 12471                           ;MOTEapp.c: 1230: GIE = 0;
 12472  003ECC  9EF2               	bcf	intcon,7,c	;volatile
 12473                           
 12474                           ;MOTEapp.c: 1231: PEIE = 0;
 12475  003ECE  9CF2               	bcf	intcon,6,c	;volatile
 12476                           
 12477                           ;MOTEapp.c: 1233: LATEbits.LATE2 = 0;
 12478  003ED0  948D               	bcf	3981,2,c	;volatile
 12479                           
 12480                           ;MOTEapp.c: 1240: LATBbits.LATB2 = 0;
 12481  003ED2  948A               	bcf	3978,2,c	;volatile
 12482                           
 12483                           ;MOTEapp.c: 1241: LATBbits.LATB3 = 0;
 12484  003ED4  968A               	bcf	3978,3,c	;volatile
 12485                           
 12486                           ;MOTEapp.c: 1242: LATBbits.LATB4 = 0;
 12487  003ED6  988A               	bcf	3978,4,c	;volatile
 12488                           
 12489                           ;MOTEapp.c: 1243: LATBbits.LATB5 = 0;
 12490  003ED8  9A8A               	bcf	3978,5,c	;volatile
 12491                           
 12492                           ;MOTEapp.c: 1244: LATCbits.LATC0 = 0;
 12493  003EDA  908B               	bcf	3979,0,c	;volatile
 12494                           
 12495                           ;MOTEapp.c: 1245: LATCbits.LATC1 = 0;
 12496  003EDC  928B               	bcf	3979,1,c	;volatile
 12497                           
 12498                           ;MOTEapp.c: 1247: TRISD = 0b11111111;
 12499  003EDE  6895               	setf	3989,c	;volatile
 12500                           
 12501                           ;MOTEapp.c: 1248: ANSELD = 0b11111111;
 12502  003EE0  010F               	movlb	15	; () banked
 12503  003EE2  695E               	setf	94,b	;volatile
 12504                           
 12505                           ; BSR set to: 15
 12506                           ;MOTEapp.c: 1249: LATD = 0b00000000;
 12507  003EE4  0E00               	movlw	0
 12508  003EE6  6E8C               	movwf	3980,c	;volatile
 12509                           
 12510                           ; BSR set to: 15
 12511                           ;MOTEapp.c: 1253: PIE2bits.TMR3IE = 0;
 12512  003EE8  92A0               	bcf	4000,1,c	;volatile
 12513                           
 12514                           ; BSR set to: 15
 12515                           ;MOTEapp.c: 1255: ANSELAbits.ANSA0 = 1;
 12516  003EEA  010F               	movlb	15	; () banked
 12517  003EEC  815B               	bsf	91,0,b	;volatile
 12518                           
 12519                           ; BSR set to: 15
 12520                           ;MOTEapp.c: 1257: PIE2bits.C1IE = 1;
 12521  003EEE  8CA0               	bsf	4000,6,c	;volatile
 12522                           
 12523                           ; BSR set to: 15
 12524                           ;MOTEapp.c: 1258: INTCON3bits.INT1IE = 1;
 12525  003EF0  86F0               	bsf	intcon3,3,c	;volatile
 12526                           
 12527                           ; BSR set to: 15
 12528                           ;MOTEapp.c: 1259: INTCONbits.INT0IE = 1;
 12529  003EF2  88F2               	bsf	intcon,4,c	;volatile
 12530                           
 12531                           ; BSR set to: 15
 12532                           ;MOTEapp.c: 1260: IOCCbits.IOCC2 = 1;
 12533  003EF4  8487               	bsf	3975,2,c	;volatile
 12534                           
 12535                           ; BSR set to: 15
 12536                           ;MOTEapp.c: 1261: INTCONbits.IOCIE = 1;
 12537  003EF6  86F2               	bsf	intcon,3,c	;volatile
 12538                           
 12539                           ; BSR set to: 15
 12540                           ;MOTEapp.c: 1263: status = PORTBbits.RB1;
 12541  003EF8  0E00               	movlw	0
 12542  003EFA  B281               	btfsc	3969,1,c	;volatile
 12543  003EFC  0E01               	movlw	1
 12544  003EFE  0100               	movlb	0	; () banked
 12545  003F00  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12546                           
 12547                           ; BSR set to: 0
 12548                           ;MOTEapp.c: 1264: status = PORTBbits.RB0;
 12549  003F02  0E00               	movlw	0
 12550  003F04  B081               	btfsc	3969,0,c	;volatile
 12551  003F06  0E01               	movlw	1
 12552  003F08  0100               	movlb	0	; () banked
 12553  003F0A  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12554                           
 12555                           ; BSR set to: 0
 12556                           ;MOTEapp.c: 1265: status = PORTCbits.RC2;
 12557  003F0C  0E00               	movlw	0
 12558  003F0E  B482               	btfsc	3970,2,c	;volatile
 12559  003F10  0E01               	movlw	1
 12560  003F12  0100               	movlb	0	; () banked
 12561  003F14  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12562                           
 12563                           ; BSR set to: 0
 12564                           ;MOTEapp.c: 1267: if (periodicState)
 12565  003F16  0100               	movlb	0	; () banked
 12566  003F18  51FB               	movf	_periodicState& (0+255),w,b
 12567  003F1A  A4D8               	btfss	status,2,c
 12568                           
 12569                           ; BSR set to: 0
 12570                           ;MOTEapp.c: 1268: {
 12571                           ;MOTEapp.c: 1269: WDTCONbits.SWDTEN = 1;
 12572  003F1C  80D1               	bsf	4049,0,c	;volatile
 12573                           
 12574                           ; BSR set to: 0
 12575                           ;MOTEapp.c: 1270: }
 12576                           ;MOTEapp.c: 1272: INTCONbits.IOCIF = 0;
 12577  003F1E  90F2               	bcf	intcon,0,c	;volatile
 12578                           
 12579                           ;MOTEapp.c: 1273: INTCONbits.INT0IF = 0;
 12580  003F20  92F2               	bcf	intcon,1,c	;volatile
 12581                           
 12582                           ;MOTEapp.c: 1274: INTCON3bits.INT1IF = 0;
 12583  003F22  90F0               	bcf	intcon3,0,c	;volatile
 12584                           
 12585                           ;MOTEapp.c: 1275: PIR2bits.C1IF = 0;
 12586  003F24  9CA1               	bcf	4001,6,c	;volatile
 12587                           
 12588                           ;MOTEapp.c: 1276: __nop();
 12589  003F26  F000               	nop	
 12590                           
 12591                           ;MOTEapp.c: 1278: __nop();
 12592  003F28  F000               	nop	
 12593  003F2A  0003               	sleep		;# 
 12594                           
 12595                           ;MOTEapp.c: 1280: __nop();
 12596  003F2C  F000               	nop	
 12597                           
 12598                           ;MOTEapp.c: 1282: __nop();
 12599  003F2E  F000               	nop	
 12600                           
 12601                           ;MOTEapp.c: 1284: WDTCONbits.SWDTEN = 0;
 12602  003F30  90D1               	bcf	4049,0,c	;volatile
 12603                           
 12604                           ;MOTEapp.c: 1285: EUSART_FlushBuffer();
 12605  003F32  EC4D  F031         	call	_EUSART_FlushBuffer	;wreg free
 12606                           
 12607                           ;MOTEapp.c: 1287: INTCONbits.IOCIE = 0;
 12608  003F36  96F2               	bcf	intcon,3,c	;volatile
 12609                           
 12610                           ;MOTEapp.c: 1288: INTCON3bits.INT1IE = 0;
 12611  003F38  96F0               	bcf	intcon3,3,c	;volatile
 12612                           
 12613                           ;MOTEapp.c: 1289: INTCONbits.INT0IE = 0;
 12614  003F3A  98F2               	bcf	intcon,4,c	;volatile
 12615                           
 12616                           ;MOTEapp.c: 1290: IOCCbits.IOCC2 = 0;
 12617  003F3C  9487               	bcf	3975,2,c	;volatile
 12618                           
 12619                           ;MOTEapp.c: 1291: PIE2bits.C1IE = 0;
 12620  003F3E  9CA0               	bcf	4000,6,c	;volatile
 12621                           
 12622                           ;MOTEapp.c: 1292: GIE = 1;
 12623  003F40  8EF2               	bsf	intcon,7,c	;volatile
 12624                           
 12625                           ;MOTEapp.c: 1294: PIN_MANAGER_Initialize();
 12626  003F42  EC22  F031         	call	_PIN_MANAGER_Initialize	;wreg free
 12627                           
 12628                           ;MOTEapp.c: 1296: if ((INTCONbits.IOCIF)||(INTCONbits.INT0IF)||(INTCON3bits.INT1IF)||(PI
      +                          R2bits.C1IF))
 12629  003F46  A0F2               	btfss	intcon,0,c	;volatile
 12630  003F48  B2F2               	btfsc	intcon,1,c	;volatile
 12631  003F4A  D004               	goto	l675
 12632  003F4C  B0F0               	btfsc	intcon3,0,c	;volatile
 12633  003F4E  D002               	goto	l675
 12634  003F50  ACA1               	btfss	4001,6,c	;volatile
 12635  003F52  D012               	goto	l13318
 12636  003F54                     l675:
 12637                           
 12638                           ;MOTEapp.c: 1297: {
 12639                           ;MOTEapp.c: 1298: INTCONbits.IOCIF = 0;
 12640  003F54  90F2               	bcf	intcon,0,c	;volatile
 12641                           
 12642                           ;MOTEapp.c: 1299: INTCONbits.INT0IF = 0;
 12643  003F56  92F2               	bcf	intcon,1,c	;volatile
 12644                           
 12645                           ;MOTEapp.c: 1300: INTCON3bits.INT1IF = 0;
 12646  003F58  90F0               	bcf	intcon3,0,c	;volatile
 12647                           
 12648                           ;MOTEapp.c: 1301: status = 1;
 12649  003F5A  0E01               	movlw	1
 12650  003F5C  0100               	movlb	0	; () banked
 12651  003F5E  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12652                           
 12653                           ; BSR set to: 0
 12654                           ;MOTEapp.c: 1304: oled_displayOff(0);
 12655  003F60  0E00               	movlw	0
 12656  003F62  EC4E  F035         	call	_oled_displayOff
 12657                           
 12658                           ;MOTEapp.c: 1305: oled_init();
 12659  003F66  EC97  F033         	call	_oled_init	;wreg free
 12660                           
 12661                           ;MOTEapp.c: 1307: LATEbits.LATE2 = 1;
 12662  003F6A  848D               	bsf	3981,2,c	;volatile
 12663                           
 12664                           ;MOTEapp.c: 1308: TMR3H = 0xFB;
 12665  003F6C  0EFB               	movlw	251
 12666  003F6E  6EB3               	movwf	4019,c	;volatile
 12667                           
 12668                           ;MOTEapp.c: 1309: TMR3L = 0x50;
 12669  003F70  0E50               	movlw	80
 12670  003F72  6EB2               	movwf	4018,c	;volatile
 12671                           
 12672                           ;MOTEapp.c: 1310: PIE2bits.TMR3IE = 1;
 12673  003F74  82A0               	bsf	4000,1,c	;volatile
 12674                           
 12675                           ;MOTEapp.c: 1311: }
 12676  003F76  D008               	goto	l13324
 12677  003F78                     l13318:
 12678                           
 12679                           ;MOTEapp.c: 1312: else
 12680                           ;MOTEapp.c: 1313: {
 12681                           ;MOTEapp.c: 1314: secTicker = 10;
 12682  003F78  0E0A               	movlw	10
 12683  003F7A  0100               	movlb	0	; () banked
 12684  003F7C  6FEF               	movwf	_secTicker& (0+255),b
 12685                           
 12686                           ;MOTEapp.c: 1315: status = 0;
 12687  003F7E  0E00               	movlw	0
 12688  003F80  0100               	movlb	0	; () banked
 12689  003F82  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12690                           
 12691                           ; BSR set to: 0
 12692                           ;MOTEapp.c: 1317: LATEbits.LATE2 = 0;
 12693  003F84  948D               	bcf	3981,2,c	;volatile
 12694                           
 12695                           ; BSR set to: 0
 12696                           ;MOTEapp.c: 1318: PIE2bits.TMR3IE = 0;
 12697  003F86  92A0               	bcf	4000,1,c	;volatile
 12698  003F88                     l13324:
 12699                           
 12700                           ;MOTEapp.c: 1319: }
 12701                           ;MOTEapp.c: 1320: ANSELAbits.ANSA0 = 0;
 12702  003F88  010F               	movlb	15	; () banked
 12703  003F8A  915B               	bcf	91,0,b	;volatile
 12704                           
 12705                           ; BSR set to: 15
 12706                           ;MOTEapp.c: 1322: moduleResync();
 12707  003F8C  EC25  F02C         	call	_moduleResync	;wreg free
 12708                           
 12709                           ;MOTEapp.c: 1323: moteApp_delayms(40);
 12710  003F90  0E00               	movlw	0
 12711  003F92  0100               	movlb	0	; () banked
 12712  003F94  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12713  003F96  0E28               	movlw	40
 12714  003F98  6F60               	movwf	moteApp_delayms@length& (0+255),b
 12715  003F9A  ECD9  F032         	call	_moteApp_delayms	;wreg free
 12716                           
 12717                           ;MOTEapp.c: 1324: moduleResync();
 12718  003F9E  EC25  F02C         	call	_moduleResync	;wreg free
 12719                           
 12720                           ;MOTEapp.c: 1325: moteApp_delayms(40);
 12721  003FA2  0E00               	movlw	0
 12722  003FA4  0100               	movlb	0	; () banked
 12723  003FA6  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12724  003FA8  0E28               	movlw	40
 12725  003FAA  6F60               	movwf	moteApp_delayms@length& (0+255),b
 12726  003FAC  ECD9  F032         	call	_moteApp_delayms	;wreg free
 12727                           
 12728                           ;MOTEapp.c: 1326: return status;
 12729  003FB0  0100               	movlb	0	; () banked
 12730  003FB2  516E               	movf	moteApp_GoToSleep@status& (0+255),w,b
 12731  003FB4  0012               	return	
 12732  003FB6                     __end_of_moteApp_GoToSleep:
 12733                           	opt stack 0
 12734                           tblptru	equ	0xFF8
 12735                           tblptrh	equ	0xFF7
 12736                           tblptrl	equ	0xFF6
 12737                           tablat	equ	0xFF5
 12738                           prodh	equ	0xFF4
 12739                           prodl	equ	0xFF3
 12740                           intcon	equ	0xFF2
 12741                           intcon3	equ	0xFF0
 12742                           postinc0	equ	0xFEE
 12743                           wreg	equ	0xFE8
 12744                           indf1	equ	0xFE7
 12745                           postdec1	equ	0xFE5
 12746                           fsr1h	equ	0xFE2
 12747                           fsr1l	equ	0xFE1
 12748                           indf2	equ	0xFDF
 12749                           fsr2h	equ	0xFDA
 12750                           fsr2l	equ	0xFD9
 12751                           status	equ	0xFD8
 12752                           
 12753 ;; *************** function _oled_init *****************
 12754 ;; Defined at:
 12755 ;;		line 366 in file "../Includes/Drivers/SSD1306oLED.c"
 12756 ;; Parameters:    Size  Location     Type
 12757 ;;		None
 12758 ;; Auto vars:     Size  Location     Type
 12759 ;;		None
 12760 ;; Return value:  Size  Location     Type
 12761 ;;		None               void
 12762 ;; Registers used:
 12763 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12764 ;; Tracked objects:
 12765 ;;		On entry : 0/0
 12766 ;;		On exit  : 0/0
 12767 ;;		Unchanged: 0/0
 12768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12769 ;;      Params:         0       0       0       0       0       0       0       0       0
 12770 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12771 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12772 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12773 ;;Total ram usage:        0 bytes
 12774 ;; Hardware stack levels used:    1
 12775 ;; Hardware stack levels required when called:   16
 12776 ;; This function calls:
 12777 ;;		_oled_clear
 12778 ;;		_oled_devInit
 12779 ;;		_oled_setDisplay
 12780 ;;		_oled_setFont
 12781 ;; This function is called by:
 12782 ;;		_main
 12783 ;;		_moteApp_GoToSleep
 12784 ;; This function uses a non-reentrant model
 12785 ;;
 12786                           
 12787                           	psect	text30
 12788  00672E                     __ptext30:
 12789                           	opt stack 0
 12790  00672E                     _oled_init:
 12791                           	opt stack 14
 12792                           
 12793                           ;SSD1306oLED.c: 369: TRISEbits.TRISE2 = 0;
 12794                           
 12795                           ; BSR set to: 0
 12796                           ;incstack = 0
 12797  00672E  9496               	bcf	3990,2,c	;volatile
 12798                           
 12799                           ;SSD1306oLED.c: 370: LATEbits.LATE2 = 1;
 12800  006730  848D               	bsf	3981,2,c	;volatile
 12801                           
 12802                           ;SSD1306oLED.c: 371: TRISBbits.TRISB2 = 0;
 12803  006732  9493               	bcf	3987,2,c	;volatile
 12804                           
 12805                           ;SSD1306oLED.c: 372: TRISBbits.TRISB3 = 0;
 12806  006734  9693               	bcf	3987,3,c	;volatile
 12807                           
 12808                           ;SSD1306oLED.c: 373: TRISBbits.TRISB4 = 0;
 12809  006736  9893               	bcf	3987,4,c	;volatile
 12810                           
 12811                           ;SSD1306oLED.c: 374: TRISCbits.TRISC0 = 0;
 12812  006738  9094               	bcf	3988,0,c	;volatile
 12813                           
 12814                           ;SSD1306oLED.c: 375: TRISCbits.TRISC1 = 0;
 12815  00673A  9294               	bcf	3988,1,c	;volatile
 12816                           
 12817                           ;SSD1306oLED.c: 377: LATBbits.LATB3 = 1;
 12818  00673C  868A               	bsf	3978,3,c	;volatile
 12819                           
 12820                           ;SSD1306oLED.c: 379: LATBbits.LATB4 = 0;
 12821  00673E  988A               	bcf	3978,4,c	;volatile
 12822                           
 12823                           ;SSD1306oLED.c: 381: oled_devInit();
 12824  006740  EC34  F02D         	call	_oled_devInit	;wreg free
 12825                           
 12826                           ;SSD1306oLED.c: 383: oled_setDisplay(Inverse);
 12827  006744  0E01               	movlw	1
 12828  006746  ECF6  F033         	call	_oled_setDisplay
 12829                           
 12830                           ;SSD1306oLED.c: 384: oled_setFont(OledFont0);
 12831  00674A  0EA3               	movlw	low _OledFont0
 12832  00674C  0100               	movlb	0	; () banked
 12833  00674E  6F60               	movwf	oled_setFont@font& (0+255),b
 12834  006750  0E75               	movlw	high _OledFont0
 12835  006752  0100               	movlb	0	; () banked
 12836  006754  6F61               	movwf	(oled_setFont@font+1)& (0+255),b
 12837  006756  ECD1  F034         	call	_oled_setFont	;wreg free
 12838                           
 12839                           ;SSD1306oLED.c: 385: oled_clear();
 12840  00675A  ECAB  F034         	call	_oled_clear	;wreg free
 12841  00675E  0012               	return		;funcret
 12842  006760                     __end_of_oled_init:
 12843                           	opt stack 0
 12844                           tblptru	equ	0xFF8
 12845                           tblptrh	equ	0xFF7
 12846                           tblptrl	equ	0xFF6
 12847                           tablat	equ	0xFF5
 12848                           prodh	equ	0xFF4
 12849                           prodl	equ	0xFF3
 12850                           intcon	equ	0xFF2
 12851                           intcon3	equ	0xFF0
 12852                           postinc0	equ	0xFEE
 12853                           wreg	equ	0xFE8
 12854                           indf1	equ	0xFE7
 12855                           postdec1	equ	0xFE5
 12856                           fsr1h	equ	0xFE2
 12857                           fsr1l	equ	0xFE1
 12858                           indf2	equ	0xFDF
 12859                           fsr2h	equ	0xFDA
 12860                           fsr2l	equ	0xFD9
 12861                           status	equ	0xFD8
 12862                           
 12863 ;; *************** function _oled_setFont *****************
 12864 ;; Defined at:
 12865 ;;		line 256 in file "../Includes/Drivers/SSD1306oLED.c"
 12866 ;; Parameters:    Size  Location     Type
 12867 ;;  font            2    0[BANK0 ] PTR const unsigned char 
 12868 ;;		 -> OledFont0(768), 
 12869 ;; Auto vars:     Size  Location     Type
 12870 ;;		None
 12871 ;; Return value:  Size  Location     Type
 12872 ;;		None               void
 12873 ;; Registers used:
 12874 ;;		wreg, status,2, status,0
 12875 ;; Tracked objects:
 12876 ;;		On entry : 0/0
 12877 ;;		On exit  : 0/0
 12878 ;;		Unchanged: 0/0
 12879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12880 ;;      Params:         0       2       0       0       0       0       0       0       0
 12881 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12882 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12883 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12884 ;;Total ram usage:        2 bytes
 12885 ;; Hardware stack levels used:    1
 12886 ;; Hardware stack levels required when called:   11
 12887 ;; This function calls:
 12888 ;;		Nothing
 12889 ;; This function is called by:
 12890 ;;		_oled_init
 12891 ;; This function uses a non-reentrant model
 12892 ;;
 12893                           
 12894                           	psect	text31
 12895  0069A2                     __ptext31:
 12896                           	opt stack 0
 12897  0069A2                     _oled_setFont:
 12898                           	opt stack 18
 12899                           
 12900                           ;SSD1306oLED.c: 258: if(font!=0)
 12901                           
 12902                           ;incstack = 0
 12903  0069A2  0100               	movlb	0	; () banked
 12904  0069A4  5160               	movf	oled_setFont@font& (0+255),w,b
 12905  0069A6  0100               	movlb	0	; () banked
 12906  0069A8  1161               	iorwf	(oled_setFont@font+1)& (0+255),w,b
 12907  0069AA  B4D8               	btfsc	status,2,c
 12908  0069AC  0012               	return	
 12909                           
 12910                           ; BSR set to: 0
 12911                           ;SSD1306oLED.c: 259: {
 12912                           ;SSD1306oLED.c: 260: selectedFont=font;
 12913  0069AE  C060  F1F1         	movff	oled_setFont@font,_selectedFont
 12914  0069B2  C061  F1F2         	movff	oled_setFont@font+1,_selectedFont+1
 12915  0069B6  0012               	return	
 12916  0069B8                     __end_of_oled_setFont:
 12917                           	opt stack 0
 12918                           tblptru	equ	0xFF8
 12919                           tblptrh	equ	0xFF7
 12920                           tblptrl	equ	0xFF6
 12921                           tablat	equ	0xFF5
 12922                           prodh	equ	0xFF4
 12923                           prodl	equ	0xFF3
 12924                           intcon	equ	0xFF2
 12925                           intcon3	equ	0xFF0
 12926                           postinc0	equ	0xFEE
 12927                           wreg	equ	0xFE8
 12928                           indf1	equ	0xFE7
 12929                           postdec1	equ	0xFE5
 12930                           fsr1h	equ	0xFE2
 12931                           fsr1l	equ	0xFE1
 12932                           indf2	equ	0xFDF
 12933                           fsr2h	equ	0xFDA
 12934                           fsr2l	equ	0xFD9
 12935                           status	equ	0xFD8
 12936                           
 12937 ;; *************** function _oled_setDisplay *****************
 12938 ;; Defined at:
 12939 ;;		line 411 in file "../Includes/Drivers/SSD1306oLED.c"
 12940 ;; Parameters:    Size  Location     Type
 12941 ;;  displayType     1    wreg     enum E6789
 12942 ;; Auto vars:     Size  Location     Type
 12943 ;;  displayType     1    1[BANK0 ] enum E6789
 12944 ;; Return value:  Size  Location     Type
 12945 ;;		None               void
 12946 ;; Registers used:
 12947 ;;		wreg, status,2, cstack
 12948 ;; Tracked objects:
 12949 ;;		On entry : 0/0
 12950 ;;		On exit  : 0/0
 12951 ;;		Unchanged: 0/0
 12952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12953 ;;      Params:         0       0       0       0       0       0       0       0       0
 12954 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12955 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12956 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12957 ;;Total ram usage:        1 bytes
 12958 ;; Hardware stack levels used:    1
 12959 ;; Hardware stack levels required when called:   12
 12960 ;; This function calls:
 12961 ;;		_oled_writeCommand
 12962 ;; This function is called by:
 12963 ;;		_oled_init
 12964 ;; This function uses a non-reentrant model
 12965 ;;
 12966                           
 12967                           	psect	text32
 12968  0067EC                     __ptext32:
 12969                           	opt stack 0
 12970  0067EC                     _oled_setDisplay:
 12971                           	opt stack 17
 12972                           
 12973                           ; BSR set to: 0
 12974                           ;incstack = 0
 12975                           ;oled_setDisplay@displayType stored from wreg
 12976  0067EC  0100               	movlb	0	; () banked
 12977  0067EE  6F61               	movwf	oled_setDisplay@displayType& (0+255),b
 12978                           
 12979                           ;SSD1306oLED.c: 413: if (displayType == Normal)
 12980  0067F0  0100               	movlb	0	; () banked
 12981  0067F2  5161               	movf	oled_setDisplay@displayType& (0+255),w,b
 12982  0067F4  0100               	movlb	0	; () banked
 12983  0067F6  A4D8               	btfss	status,2,c
 12984  0067F8  D007               	goto	l12000
 12985                           
 12986                           ; BSR set to: 0
 12987                           ;SSD1306oLED.c: 414: {
 12988                           ;SSD1306oLED.c: 415: oled_writeCommand(0xa0);
 12989  0067FA  0EA0               	movlw	160
 12990  0067FC  ECE7  F034         	call	_oled_writeCommand
 12991                           
 12992                           ;SSD1306oLED.c: 416: oled_writeCommand(0xc8);
 12993  006800  0EC8               	movlw	200
 12994  006802  ECE7  F034         	call	_oled_writeCommand
 12995                           
 12996                           ;SSD1306oLED.c: 417: }
 12997  006806  0012               	return	
 12998  006808                     l12000:
 12999                           
 13000                           ;SSD1306oLED.c: 418: else
 13001                           ;SSD1306oLED.c: 419: {
 13002                           ;SSD1306oLED.c: 420: oled_writeCommand(0xa1);
 13003  006808  0EA1               	movlw	161
 13004  00680A  ECE7  F034         	call	_oled_writeCommand
 13005                           
 13006                           ;SSD1306oLED.c: 421: oled_writeCommand(0xc0);
 13007  00680E  0EC0               	movlw	192
 13008  006810  ECE7  F034         	call	_oled_writeCommand
 13009  006814  0012               	return	
 13010  006816                     __end_of_oled_setDisplay:
 13011                           	opt stack 0
 13012                           tblptru	equ	0xFF8
 13013                           tblptrh	equ	0xFF7
 13014                           tblptrl	equ	0xFF6
 13015                           tablat	equ	0xFF5
 13016                           prodh	equ	0xFF4
 13017                           prodl	equ	0xFF3
 13018                           intcon	equ	0xFF2
 13019                           intcon3	equ	0xFF0
 13020                           postinc0	equ	0xFEE
 13021                           wreg	equ	0xFE8
 13022                           indf1	equ	0xFE7
 13023                           postdec1	equ	0xFE5
 13024                           fsr1h	equ	0xFE2
 13025                           fsr1l	equ	0xFE1
 13026                           indf2	equ	0xFDF
 13027                           fsr2h	equ	0xFDA
 13028                           fsr2l	equ	0xFD9
 13029                           status	equ	0xFD8
 13030                           
 13031 ;; *************** function _oled_devInit *****************
 13032 ;; Defined at:
 13033 ;;		line 388 in file "../Includes/Drivers/SSD1306oLED.c"
 13034 ;; Parameters:    Size  Location     Type
 13035 ;;		None
 13036 ;; Auto vars:     Size  Location     Type
 13037 ;;		None
 13038 ;; Return value:  Size  Location     Type
 13039 ;;		None               void
 13040 ;; Registers used:
 13041 ;;		wreg, status,2, status,0, cstack
 13042 ;; Tracked objects:
 13043 ;;		On entry : 0/0
 13044 ;;		On exit  : 0/0
 13045 ;;		Unchanged: 0/0
 13046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13047 ;;      Params:         0       0       0       0       0       0       0       0       0
 13048 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13049 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13050 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13051 ;;Total ram usage:        1 bytes
 13052 ;; Hardware stack levels used:    1
 13053 ;; Hardware stack levels required when called:   13
 13054 ;; This function calls:
 13055 ;;		_oled_initialDispayLine
 13056 ;;		_oled_powerControl
 13057 ;;		_oled_regulorResistorSelect
 13058 ;;		_oled_setContrastControlRegister
 13059 ;;		_oled_writeCommand
 13060 ;; This function is called by:
 13061 ;;		_oled_init
 13062 ;; This function uses a non-reentrant model
 13063 ;;
 13064                           
 13065                           	psect	text33
 13066  005A68                     __ptext33:
 13067                           	opt stack 0
 13068  005A68                     _oled_devInit:
 13069                           	opt stack 16
 13070                           
 13071                           ;SSD1306oLED.c: 390: oled_writeCommand(0xe2);
 13072                           
 13073                           ;incstack = 0
 13074  005A68  0EE2               	movlw	226
 13075  005A6A  ECE7  F034         	call	_oled_writeCommand
 13076                           
 13077                           ;SSD1306oLED.c: 391: LATBbits.LATB2=1;
 13078  005A6E  848A               	bsf	3978,2,c	;volatile
 13079                           
 13080                           ;SSD1306oLED.c: 392: _delay((unsigned long)((200)*(48000000/4000000.0)));
 13081  005A70  0E04               	movlw	4
 13082  005A72  0100               	movlb	0	; () banked
 13083  005A74  6F62               	movwf	??_oled_devInit& (0+255),b
 13084  005A76  0E1C               	movlw	28
 13085  005A78                     u14327:
 13086  005A78  2EE8               	decfsz	wreg,f,c
 13087  005A7A  D7FE               	goto	u14327
 13088  005A7C  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 13089  005A7E  D7FC               	goto	u14327
 13090  005A80  D000               	nop2	
 13091                           
 13092                           ;SSD1306oLED.c: 393: LATBbits.LATB2=0;
 13093  005A82  948A               	bcf	3978,2,c	;volatile
 13094                           
 13095                           ;SSD1306oLED.c: 394: _delay((unsigned long)((2000)*(48000000/4000000.0)));
 13096  005A84  0E20               	movlw	32
 13097  005A86  0100               	movlb	0	; () banked
 13098  005A88  6F62               	movwf	??_oled_devInit& (0+255),b
 13099  005A8A  0E2A               	movlw	42
 13100  005A8C                     u14337:
 13101  005A8C  2EE8               	decfsz	wreg,f,c
 13102  005A8E  D7FE               	goto	u14337
 13103  005A90  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 13104  005A92  D7FC               	goto	u14337
 13105                           
 13106                           ;SSD1306oLED.c: 395: LATBbits.LATB2=1;
 13107  005A94  848A               	bsf	3978,2,c	;volatile
 13108                           
 13109                           ;SSD1306oLED.c: 396: _delay((unsigned long)((1000)*(48000000/4000000.0)));
 13110  005A96  0E10               	movlw	16
 13111  005A98  0100               	movlb	0	; () banked
 13112  005A9A  6F62               	movwf	??_oled_devInit& (0+255),b
 13113  005A9C  0E94               	movlw	148
 13114  005A9E                     u14347:
 13115  005A9E  2EE8               	decfsz	wreg,f,c
 13116  005AA0  D7FE               	goto	u14347
 13117  005AA2  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 13118  005AA4  D7FC               	goto	u14347
 13119  005AA6  D000               	nop2	
 13120                           
 13121                           ;SSD1306oLED.c: 398: oled_writeCommand(0xa1);
 13122  005AA8  0EA1               	movlw	161
 13123  005AAA  ECE7  F034         	call	_oled_writeCommand
 13124                           
 13125                           ;SSD1306oLED.c: 399: oled_writeCommand(0xc0);
 13126  005AAE  0EC0               	movlw	192
 13127  005AB0  ECE7  F034         	call	_oled_writeCommand
 13128                           
 13129                           ;SSD1306oLED.c: 400: oled_writeCommand(0xa3);
 13130  005AB4  0EA3               	movlw	163
 13131  005AB6  ECE7  F034         	call	_oled_writeCommand
 13132                           
 13133                           ;SSD1306oLED.c: 401: oled_powerControl(0x07);
 13134  005ABA  0E07               	movlw	7
 13135  005ABC  EC3F  F035         	call	_oled_powerControl
 13136                           
 13137                           ;SSD1306oLED.c: 402: oled_regulorResistorSelect(0x05);
 13138  005AC0  0E05               	movlw	5
 13139  005AC2  EC37  F035         	call	_oled_regulorResistorSelect
 13140                           
 13141                           ;SSD1306oLED.c: 403: oled_setContrastControlRegister(Contrast_level);
 13142  005AC6  0100               	movlb	0	; () banked
 13143  005AC8  51F5               	movf	_Contrast_level& (0+255),w,b
 13144  005ACA  EC08  F035         	call	_oled_setContrastControlRegister
 13145                           
 13146                           ;SSD1306oLED.c: 404: oled_initialDispayLine(0x00);
 13147  005ACE  0E00               	movlw	0
 13148  005AD0  EC1C  F035         	call	_oled_initialDispayLine
 13149                           
 13150                           ;SSD1306oLED.c: 405: oled_writeCommand(0xF8);
 13151  005AD4  0EF8               	movlw	248
 13152  005AD6  ECE7  F034         	call	_oled_writeCommand
 13153                           
 13154                           ;SSD1306oLED.c: 406: oled_writeCommand(0x00);
 13155  005ADA  0E00               	movlw	0
 13156  005ADC  ECE7  F034         	call	_oled_writeCommand
 13157                           
 13158                           ;SSD1306oLED.c: 407: oled_writeCommand(0xaf);
 13159  005AE0  0EAF               	movlw	175
 13160  005AE2  ECE7  F034         	call	_oled_writeCommand
 13161  005AE6  0012               	return		;funcret
 13162  005AE8                     __end_of_oled_devInit:
 13163                           	opt stack 0
 13164                           tblptru	equ	0xFF8
 13165                           tblptrh	equ	0xFF7
 13166                           tblptrl	equ	0xFF6
 13167                           tablat	equ	0xFF5
 13168                           prodh	equ	0xFF4
 13169                           prodl	equ	0xFF3
 13170                           intcon	equ	0xFF2
 13171                           intcon3	equ	0xFF0
 13172                           postinc0	equ	0xFEE
 13173                           wreg	equ	0xFE8
 13174                           indf1	equ	0xFE7
 13175                           postdec1	equ	0xFE5
 13176                           fsr1h	equ	0xFE2
 13177                           fsr1l	equ	0xFE1
 13178                           indf2	equ	0xFDF
 13179                           fsr2h	equ	0xFDA
 13180                           fsr2l	equ	0xFD9
 13181                           status	equ	0xFD8
 13182                           
 13183 ;; *************** function _oled_setContrastControlRegister *****************
 13184 ;; Defined at:
 13185 ;;		line 455 in file "../Includes/Drivers/SSD1306oLED.c"
 13186 ;; Parameters:    Size  Location     Type
 13187 ;;  mod             1    wreg     unsigned char 
 13188 ;; Auto vars:     Size  Location     Type
 13189 ;;  mod             1    1[BANK0 ] unsigned char 
 13190 ;; Return value:  Size  Location     Type
 13191 ;;		None               void
 13192 ;; Registers used:
 13193 ;;		wreg, status,2, cstack
 13194 ;; Tracked objects:
 13195 ;;		On entry : 0/0
 13196 ;;		On exit  : 0/0
 13197 ;;		Unchanged: 0/0
 13198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13199 ;;      Params:         0       0       0       0       0       0       0       0       0
 13200 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13201 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13202 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13203 ;;Total ram usage:        1 bytes
 13204 ;; Hardware stack levels used:    1
 13205 ;; Hardware stack levels required when called:   12
 13206 ;; This function calls:
 13207 ;;		_oled_writeCommand
 13208 ;; This function is called by:
 13209 ;;		_oled_devInit
 13210 ;; This function uses a non-reentrant model
 13211 ;;
 13212                           
 13213                           	psect	text34
 13214  006A10                     __ptext34:
 13215                           	opt stack 0
 13216  006A10                     _oled_setContrastControlRegister:
 13217                           	opt stack 16
 13218                           
 13219                           ;incstack = 0
 13220                           ;oled_setContrastControlRegister@mod stored from wreg
 13221  006A10  0100               	movlb	0	; () banked
 13222  006A12  6F61               	movwf	oled_setContrastControlRegister@mod& (0+255),b
 13223                           
 13224                           ;SSD1306oLED.c: 457: oled_writeCommand(0x81);
 13225  006A14  0E81               	movlw	129
 13226  006A16  ECE7  F034         	call	_oled_writeCommand
 13227                           
 13228                           ;SSD1306oLED.c: 458: oled_writeCommand(mod);
 13229  006A1A  0100               	movlb	0	; () banked
 13230  006A1C  5161               	movf	oled_setContrastControlRegister@mod& (0+255),w,b
 13231  006A1E  ECE7  F034         	call	_oled_writeCommand
 13232  006A22  0012               	return	
 13233  006A24                     __end_of_oled_setContrastControlRegister:
 13234                           	opt stack 0
 13235                           tblptru	equ	0xFF8
 13236                           tblptrh	equ	0xFF7
 13237                           tblptrl	equ	0xFF6
 13238                           tablat	equ	0xFF5
 13239                           prodh	equ	0xFF4
 13240                           prodl	equ	0xFF3
 13241                           intcon	equ	0xFF2
 13242                           intcon3	equ	0xFF0
 13243                           postinc0	equ	0xFEE
 13244                           wreg	equ	0xFE8
 13245                           indf1	equ	0xFE7
 13246                           postdec1	equ	0xFE5
 13247                           fsr1h	equ	0xFE2
 13248                           fsr1l	equ	0xFE1
 13249                           indf2	equ	0xFDF
 13250                           fsr2h	equ	0xFDA
 13251                           fsr2l	equ	0xFD9
 13252                           status	equ	0xFD8
 13253                           
 13254 ;; *************** function _oled_regulorResistorSelect *****************
 13255 ;; Defined at:
 13256 ;;		line 483 in file "../Includes/Drivers/SSD1306oLED.c"
 13257 ;; Parameters:    Size  Location     Type
 13258 ;;  r               1    wreg     unsigned char 
 13259 ;; Auto vars:     Size  Location     Type
 13260 ;;  r               1    1[BANK0 ] unsigned char 
 13261 ;; Return value:  Size  Location     Type
 13262 ;;		None               void
 13263 ;; Registers used:
 13264 ;;		wreg, status,2, status,0, cstack
 13265 ;; Tracked objects:
 13266 ;;		On entry : 0/0
 13267 ;;		On exit  : 0/0
 13268 ;;		Unchanged: 0/0
 13269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13270 ;;      Params:         0       0       0       0       0       0       0       0       0
 13271 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13272 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13273 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13274 ;;Total ram usage:        1 bytes
 13275 ;; Hardware stack levels used:    1
 13276 ;; Hardware stack levels required when called:   12
 13277 ;; This function calls:
 13278 ;;		_oled_writeCommand
 13279 ;; This function is called by:
 13280 ;;		_oled_devInit
 13281 ;; This function uses a non-reentrant model
 13282 ;;
 13283                           
 13284                           	psect	text35
 13285  006A6E                     __ptext35:
 13286                           	opt stack 0
 13287  006A6E                     _oled_regulorResistorSelect:
 13288                           	opt stack 16
 13289                           
 13290                           ;incstack = 0
 13291                           ;oled_regulorResistorSelect@r stored from wreg
 13292  006A6E  0100               	movlb	0	; () banked
 13293  006A70  6F61               	movwf	oled_regulorResistorSelect@r& (0+255),b
 13294                           
 13295                           ;SSD1306oLED.c: 485: oled_writeCommand((0x20|r));
 13296  006A72  0100               	movlb	0	; () banked
 13297  006A74  5161               	movf	oled_regulorResistorSelect@r& (0+255),w,b
 13298  006A76  0920               	iorlw	32
 13299  006A78  ECE7  F034         	call	_oled_writeCommand
 13300  006A7C  0012               	return	
 13301  006A7E                     __end_of_oled_regulorResistorSelect:
 13302                           	opt stack 0
 13303                           tblptru	equ	0xFF8
 13304                           tblptrh	equ	0xFF7
 13305                           tblptrl	equ	0xFF6
 13306                           tablat	equ	0xFF5
 13307                           prodh	equ	0xFF4
 13308                           prodl	equ	0xFF3
 13309                           intcon	equ	0xFF2
 13310                           intcon3	equ	0xFF0
 13311                           postinc0	equ	0xFEE
 13312                           wreg	equ	0xFE8
 13313                           indf1	equ	0xFE7
 13314                           postdec1	equ	0xFE5
 13315                           fsr1h	equ	0xFE2
 13316                           fsr1l	equ	0xFE1
 13317                           indf2	equ	0xFDF
 13318                           fsr2h	equ	0xFDA
 13319                           fsr2l	equ	0xFD9
 13320                           status	equ	0xFD8
 13321                           
 13322 ;; *************** function _oled_powerControl *****************
 13323 ;; Defined at:
 13324 ;;		line 470 in file "../Includes/Drivers/SSD1306oLED.c"
 13325 ;; Parameters:    Size  Location     Type
 13326 ;;  vol             1    wreg     unsigned char 
 13327 ;; Auto vars:     Size  Location     Type
 13328 ;;  vol             1    1[BANK0 ] unsigned char 
 13329 ;; Return value:  Size  Location     Type
 13330 ;;		None               void
 13331 ;; Registers used:
 13332 ;;		wreg, status,2, status,0, cstack
 13333 ;; Tracked objects:
 13334 ;;		On entry : 0/0
 13335 ;;		On exit  : 0/0
 13336 ;;		Unchanged: 0/0
 13337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13338 ;;      Params:         0       0       0       0       0       0       0       0       0
 13339 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13340 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13341 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13342 ;;Total ram usage:        1 bytes
 13343 ;; Hardware stack levels used:    1
 13344 ;; Hardware stack levels required when called:   12
 13345 ;; This function calls:
 13346 ;;		_oled_writeCommand
 13347 ;; This function is called by:
 13348 ;;		_oled_devInit
 13349 ;; This function uses a non-reentrant model
 13350 ;;
 13351                           
 13352                           	psect	text36
 13353  006A7E                     __ptext36:
 13354                           	opt stack 0
 13355  006A7E                     _oled_powerControl:
 13356                           	opt stack 16
 13357                           
 13358                           ;incstack = 0
 13359                           ;oled_powerControl@vol stored from wreg
 13360  006A7E  0100               	movlb	0	; () banked
 13361  006A80  6F61               	movwf	oled_powerControl@vol& (0+255),b
 13362                           
 13363                           ;SSD1306oLED.c: 472: oled_writeCommand((0x28|vol));
 13364  006A82  0100               	movlb	0	; () banked
 13365  006A84  5161               	movf	oled_powerControl@vol& (0+255),w,b
 13366  006A86  0928               	iorlw	40
 13367  006A88  ECE7  F034         	call	_oled_writeCommand
 13368  006A8C  0012               	return	
 13369  006A8E                     __end_of_oled_powerControl:
 13370                           	opt stack 0
 13371                           tblptru	equ	0xFF8
 13372                           tblptrh	equ	0xFF7
 13373                           tblptrl	equ	0xFF6
 13374                           tablat	equ	0xFF5
 13375                           prodh	equ	0xFF4
 13376                           prodl	equ	0xFF3
 13377                           intcon	equ	0xFF2
 13378                           intcon3	equ	0xFF0
 13379                           postinc0	equ	0xFEE
 13380                           wreg	equ	0xFE8
 13381                           indf1	equ	0xFE7
 13382                           postdec1	equ	0xFE5
 13383                           fsr1h	equ	0xFE2
 13384                           fsr1l	equ	0xFE1
 13385                           indf2	equ	0xFDF
 13386                           fsr2h	equ	0xFDA
 13387                           fsr2l	equ	0xFD9
 13388                           status	equ	0xFD8
 13389                           
 13390 ;; *************** function _oled_initialDispayLine *****************
 13391 ;; Defined at:
 13392 ;;		line 463 in file "../Includes/Drivers/SSD1306oLED.c"
 13393 ;; Parameters:    Size  Location     Type
 13394 ;;  line            1    wreg     unsigned char 
 13395 ;; Auto vars:     Size  Location     Type
 13396 ;;  line            1    1[BANK0 ] unsigned char 
 13397 ;; Return value:  Size  Location     Type
 13398 ;;		None               void
 13399 ;; Registers used:
 13400 ;;		wreg, status,2, status,0, cstack
 13401 ;; Tracked objects:
 13402 ;;		On entry : 0/0
 13403 ;;		On exit  : 0/0
 13404 ;;		Unchanged: 0/0
 13405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13406 ;;      Params:         0       0       0       0       0       0       0       0       0
 13407 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13408 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13409 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13410 ;;Total ram usage:        1 bytes
 13411 ;; Hardware stack levels used:    1
 13412 ;; Hardware stack levels required when called:   12
 13413 ;; This function calls:
 13414 ;;		_oled_writeCommand
 13415 ;; This function is called by:
 13416 ;;		_oled_devInit
 13417 ;; This function uses a non-reentrant model
 13418 ;;
 13419                           
 13420                           	psect	text37
 13421  006A38                     __ptext37:
 13422                           	opt stack 0
 13423  006A38                     _oled_initialDispayLine:
 13424                           	opt stack 16
 13425                           
 13426                           ;incstack = 0
 13427                           ;oled_initialDispayLine@line stored from wreg
 13428  006A38  0100               	movlb	0	; () banked
 13429  006A3A  6F61               	movwf	oled_initialDispayLine@line& (0+255),b
 13430                           
 13431                           ;SSD1306oLED.c: 465: line|=0x40;
 13432  006A3C  0100               	movlb	0	; () banked
 13433  006A3E  8D61               	bsf	oled_initialDispayLine@line& (0+255),6,b
 13434                           
 13435                           ; BSR set to: 0
 13436                           ;SSD1306oLED.c: 466: oled_writeCommand(line);
 13437  006A40  0100               	movlb	0	; () banked
 13438  006A42  5161               	movf	oled_initialDispayLine@line& (0+255),w,b
 13439  006A44  ECE7  F034         	call	_oled_writeCommand
 13440  006A48  0012               	return	
 13441  006A4A                     __end_of_oled_initialDispayLine:
 13442                           	opt stack 0
 13443                           tblptru	equ	0xFF8
 13444                           tblptrh	equ	0xFF7
 13445                           tblptrl	equ	0xFF6
 13446                           tablat	equ	0xFF5
 13447                           prodh	equ	0xFF4
 13448                           prodl	equ	0xFF3
 13449                           intcon	equ	0xFF2
 13450                           intcon3	equ	0xFF0
 13451                           postinc0	equ	0xFEE
 13452                           wreg	equ	0xFE8
 13453                           indf1	equ	0xFE7
 13454                           postdec1	equ	0xFE5
 13455                           fsr1h	equ	0xFE2
 13456                           fsr1l	equ	0xFE1
 13457                           indf2	equ	0xFDF
 13458                           fsr2h	equ	0xFDA
 13459                           fsr2l	equ	0xFD9
 13460                           status	equ	0xFD8
 13461                           
 13462 ;; *************** function _oled_displayOff *****************
 13463 ;; Defined at:
 13464 ;;		line 425 in file "../Includes/Drivers/SSD1306oLED.c"
 13465 ;; Parameters:    Size  Location     Type
 13466 ;;  state           1    wreg     unsigned char 
 13467 ;; Auto vars:     Size  Location     Type
 13468 ;;  state           1    0[COMRAM] unsigned char 
 13469 ;; Return value:  Size  Location     Type
 13470 ;;		None               void
 13471 ;; Registers used:
 13472 ;;		wreg, cstack
 13473 ;; Tracked objects:
 13474 ;;		On entry : 0/0
 13475 ;;		On exit  : 0/0
 13476 ;;		Unchanged: 0/0
 13477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13478 ;;      Params:         0       0       0       0       0       0       0       0       0
 13479 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13480 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13481 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13482 ;;Total ram usage:        0 bytes
 13483 ;; Hardware stack levels used:    1
 13484 ;; Hardware stack levels required when called:   12
 13485 ;; This function calls:
 13486 ;;		_oled_writeCommand
 13487 ;; This function is called by:
 13488 ;;		_moteApp_GoToSleep
 13489 ;; This function uses a non-reentrant model
 13490 ;;
 13491                           
 13492                           	psect	text38
 13493  006A9C                     __ptext38:
 13494                           	opt stack 0
 13495  006A9C                     _oled_displayOff:
 13496                           	opt stack 15
 13497                           
 13498                           ;SSD1306oLED.c: 427: oled_writeCommand(0xae);
 13499                           
 13500                           ;incstack = 0
 13501  006A9C  0EAE               	movlw	174
 13502  006A9E  ECE7  F034         	call	_oled_writeCommand
 13503                           
 13504                           ;SSD1306oLED.c: 428: oled_writeCommand(0xa5);
 13505  006AA2  0EA5               	movlw	165
 13506  006AA4  ECE7  F034         	call	_oled_writeCommand
 13507  006AA8  0012               	return		;funcret
 13508  006AAA                     __end_of_oled_displayOff:
 13509                           	opt stack 0
 13510                           tblptru	equ	0xFF8
 13511                           tblptrh	equ	0xFF7
 13512                           tblptrl	equ	0xFF6
 13513                           tablat	equ	0xFF5
 13514                           prodh	equ	0xFF4
 13515                           prodl	equ	0xFF3
 13516                           intcon	equ	0xFF2
 13517                           intcon3	equ	0xFF0
 13518                           postinc0	equ	0xFEE
 13519                           wreg	equ	0xFE8
 13520                           indf1	equ	0xFE7
 13521                           postdec1	equ	0xFE5
 13522                           fsr1h	equ	0xFE2
 13523                           fsr1l	equ	0xFE1
 13524                           indf2	equ	0xFDF
 13525                           fsr2h	equ	0xFDA
 13526                           fsr2l	equ	0xFD9
 13527                           status	equ	0xFD8
 13528                           
 13529 ;; *************** function _moduleSleep *****************
 13530 ;; Defined at:
 13531 ;;		line 173 in file "../Includes/Board/MOTEapp.c"
 13532 ;; Parameters:    Size  Location     Type
 13533 ;;		None
 13534 ;; Auto vars:     Size  Location     Type
 13535 ;;		None
 13536 ;; Return value:  Size  Location     Type
 13537 ;;		None               void
 13538 ;; Registers used:
 13539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13540 ;; Tracked objects:
 13541 ;;		On entry : 0/0
 13542 ;;		On exit  : 0/0
 13543 ;;		Unchanged: 0/0
 13544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13545 ;;      Params:         0       0       0       0       0       0       0       0       0
 13546 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13547 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13548 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13549 ;;Total ram usage:        1 bytes
 13550 ;; Hardware stack levels used:    1
 13551 ;; Hardware stack levels required when called:   14
 13552 ;; This function calls:
 13553 ;;		_sendCommand
 13554 ;; This function is called by:
 13555 ;;		_moteApp_GoToSleep
 13556 ;; This function uses a non-reentrant model
 13557 ;;
 13558                           
 13559                           	psect	text39
 13560  006840                     __ptext39:
 13561                           	opt stack 0
 13562  006840                     _moduleSleep:
 13563                           	opt stack 13
 13564                           
 13565                           ;MOTEapp.c: 175: sendCommand("sys sleep 999999999");
 13566                           
 13567                           ;incstack = 0
 13568  006840  0E2E               	movlw	low STR_22
 13569  006842  0100               	movlb	0	; () banked
 13570  006844  6F61               	movwf	sendCommand@string& (0+255),b
 13571  006846  0E7A               	movlw	high STR_22
 13572  006848  0100               	movlb	0	; () banked
 13573  00684A  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13574  00684C  ECB0  F033         	call	_sendCommand	;wreg free
 13575  006850                     l358:
 13576  006850  B89D               	btfsc	3997,4,c	;volatile
 13577  006852  D7FE               	goto	l358
 13578                           
 13579                           ;MOTEapp.c: 178: _delay((unsigned long)((16)*(48000000/4000.0)));
 13580  006854  0EFA               	movlw	250
 13581  006856  0100               	movlb	0	; () banked
 13582  006858  6F63               	movwf	??_moduleSleep& (0+255),b
 13583  00685A  0E58               	movlw	88
 13584  00685C                     u14357:
 13585  00685C  2EE8               	decfsz	wreg,f,c
 13586  00685E  D7FE               	goto	u14357
 13587  006860  2F63               	decfsz	??_moduleSleep& (0+255),f,b
 13588  006862  D7FC               	goto	u14357
 13589  006864  D000               	nop2	
 13590  006866  0012               	return		;funcret
 13591  006868                     __end_of_moduleSleep:
 13592                           	opt stack 0
 13593                           tblptru	equ	0xFF8
 13594                           tblptrh	equ	0xFF7
 13595                           tblptrl	equ	0xFF6
 13596                           tablat	equ	0xFF5
 13597                           prodh	equ	0xFF4
 13598                           prodl	equ	0xFF3
 13599                           intcon	equ	0xFF2
 13600                           intcon3	equ	0xFF0
 13601                           postinc0	equ	0xFEE
 13602                           wreg	equ	0xFE8
 13603                           indf1	equ	0xFE7
 13604                           postdec1	equ	0xFE5
 13605                           fsr1h	equ	0xFE2
 13606                           fsr1l	equ	0xFE1
 13607                           indf2	equ	0xFDF
 13608                           fsr2h	equ	0xFDA
 13609                           fsr2l	equ	0xFD9
 13610                           status	equ	0xFD8
 13611                           
 13612 ;; *************** function _moduleResync *****************
 13613 ;; Defined at:
 13614 ;;		line 132 in file "../Includes/Board/MOTEapp.c"
 13615 ;; Parameters:    Size  Location     Type
 13616 ;;		None
 13617 ;; Auto vars:     Size  Location     Type
 13618 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 13619 ;;  escapeEvent     1    7[BANK0 ] unsigned char 
 13620 ;; Return value:  Size  Location     Type
 13621 ;;		None               void
 13622 ;; Registers used:
 13623 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13624 ;; Tracked objects:
 13625 ;;		On entry : 0/0
 13626 ;;		On exit  : 0/0
 13627 ;;		Unchanged: 0/0
 13628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13629 ;;      Params:         0       0       0       0       0       0       0       0       0
 13630 ;;      Locals:         0       3       0       0       0       0       0       0       0
 13631 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13632 ;;      Totals:         0       3       0       0       0       0       0       0       0
 13633 ;;Total ram usage:        3 bytes
 13634 ;; Hardware stack levels used:    1
 13635 ;; Hardware stack levels required when called:   14
 13636 ;; This function calls:
 13637 ;;		_MOTEapp_getModuleResponse
 13638 ;;		_moteApp_delayms
 13639 ;;		_sendCommand
 13640 ;; This function is called by:
 13641 ;;		_main
 13642 ;;		_moteApp_GoToSleep
 13643 ;; This function uses a non-reentrant model
 13644 ;;
 13645                           
 13646                           	psect	text40
 13647  00584A                     __ptext40:
 13648                           	opt stack 0
 13649  00584A                     _moduleResync:
 13650                           	opt stack 13
 13651                           
 13652                           ;MOTEapp.c: 134: bool escapeEvent = 0;
 13653                           
 13654                           ;incstack = 0
 13655  00584A  0E00               	movlw	0
 13656  00584C  0100               	movlb	0	; () banked
 13657  00584E  6F67               	movwf	moduleResync@escapeEvent& (0+255),b
 13658                           
 13659                           ;MOTEapp.c: 135: uint16_t escapeCounter = 0;
 13660  005850  0E00               	movlw	0
 13661  005852  0100               	movlb	0	; () banked
 13662  005854  6F66               	movwf	(moduleResync@escapeCounter+1)& (0+255),b
 13663  005856  0E00               	movlw	0
 13664  005858  6F65               	movwf	moduleResync@escapeCounter& (0+255),b
 13665                           
 13666                           ; BSR set to: 0
 13667                           ;MOTEapp.c: 143: TXSTAbits.TXEN = 0;
 13668  00585A  9AAC               	bcf	4012,5,c	;volatile
 13669                           
 13670                           ; BSR set to: 0
 13671                           ;MOTEapp.c: 144: LATCbits.LATC6 = 0;
 13672  00585C  9C8B               	bcf	3979,6,c	;volatile
 13673                           
 13674                           ; BSR set to: 0
 13675                           ;MOTEapp.c: 145: moteApp_delayms(10);
 13676  00585E  0E00               	movlw	0
 13677  005860  0100               	movlb	0	; () banked
 13678  005862  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 13679  005864  0E0A               	movlw	10
 13680  005866  6F60               	movwf	moteApp_delayms@length& (0+255),b
 13681  005868  ECD9  F032         	call	_moteApp_delayms	;wreg free
 13682                           
 13683                           ;MOTEapp.c: 146: TXSTAbits.TXEN = 1;
 13684  00586C  8AAC               	bsf	4012,5,c	;volatile
 13685                           
 13686                           ;MOTEapp.c: 147: moteApp_delayms(5);
 13687  00586E  0E00               	movlw	0
 13688  005870  0100               	movlb	0	; () banked
 13689  005872  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 13690  005874  0E05               	movlw	5
 13691  005876  6F60               	movwf	moteApp_delayms@length& (0+255),b
 13692  005878  ECD9  F032         	call	_moteApp_delayms	;wreg free
 13693                           
 13694                           ;MOTEapp.c: 149: TXREG = 0x55;
 13695  00587C  0E55               	movlw	85
 13696  00587E  6EAD               	movwf	4013,c	;volatile
 13697  005880                     l340:
 13698  005880  A2AC               	btfss	4012,1,c	;volatile
 13699  005882  D7FE               	goto	l340
 13700                           
 13701                           ;MOTEapp.c: 153: sendCommand("z");
 13702  005884  0EFD               	movlw	low STR_21
 13703  005886  0100               	movlb	0	; () banked
 13704  005888  6F61               	movwf	sendCommand@string& (0+255),b
 13705  00588A  0E7F               	movlw	high STR_21
 13706  00588C  0100               	movlb	0	; () banked
 13707  00588E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13708  005890  ECB0  F033         	call	_sendCommand	;wreg free
 13709                           
 13710                           ;MOTEapp.c: 155: moteApp_delayms(40);
 13711  005894  0E00               	movlw	0
 13712  005896  0100               	movlb	0	; () banked
 13713  005898  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 13714  00589A  0E28               	movlw	40
 13715  00589C  6F60               	movwf	moteApp_delayms@length& (0+255),b
 13716  00589E  ECD9  F032         	call	_moteApp_delayms	;wreg free
 13717                           
 13718                           ;MOTEapp.c: 156: while (escapeEvent)
 13719  0058A2  D013               	goto	l343
 13720  0058A4                     l12028:
 13721                           
 13722                           ;MOTEapp.c: 157: {
 13723                           ;MOTEapp.c: 158: if(MOTEapp_getModuleResponse())
 13724  0058A4  EC68  F02E         	call	_MOTEapp_getModuleResponse	;wreg free
 13725  0058A8  0900               	iorlw	0
 13726  0058AA  A4D8               	btfss	status,2,c
 13727  0058AC  D00B               	goto	l12034
 13728                           
 13729                           ;MOTEapp.c: 160: else if (++escapeCounter > 5000)
 13730                           
 13731                           ; BSR set to: 0
 13732                           
 13733                           ;MOTEapp.c: 159: escapeEvent = 1;
 13734  0058AE  0100               	movlb	0	; () banked
 13735  0058B0  4B65               	infsnz	moduleResync@escapeCounter& (0+255),f,b
 13736  0058B2  2B66               	incf	(moduleResync@escapeCounter+1)& (0+255),f,b
 13737  0058B4  0E89               	movlw	137
 13738  0058B6  0100               	movlb	0	; () banked
 13739  0058B8  5D65               	subwf	moduleResync@escapeCounter& (0+255),w,b
 13740  0058BA  0E13               	movlw	19
 13741  0058BC  0100               	movlb	0	; () banked
 13742  0058BE  5966               	subwfb	(moduleResync@escapeCounter+1)& (0+255),w,b
 13743  0058C0  A0D8               	btfss	status,0,c
 13744  0058C2  D003               	goto	l343
 13745  0058C4                     l12034:
 13746                           
 13747                           ; BSR set to: 0
 13748                           ;MOTEapp.c: 161: escapeEvent = 1;
 13749  0058C4  0E01               	movlw	1
 13750  0058C6  0100               	movlb	0	; () banked
 13751  0058C8  6F67               	movwf	moduleResync@escapeEvent& (0+255),b
 13752  0058CA                     l343:
 13753  0058CA  0100               	movlb	0	; () banked
 13754  0058CC  5167               	movf	moduleResync@escapeEvent& (0+255),w,b
 13755  0058CE  0100               	movlb	0	; () banked
 13756  0058D0  B4D8               	btfsc	status,2,c
 13757  0058D2  0012               	return	
 13758  0058D4  D7E7               	goto	l12028
 13759  0058D6                     __end_of_moduleResync:
 13760                           	opt stack 0
 13761                           tblptru	equ	0xFF8
 13762                           tblptrh	equ	0xFF7
 13763                           tblptrl	equ	0xFF6
 13764                           tablat	equ	0xFF5
 13765                           prodh	equ	0xFF4
 13766                           prodl	equ	0xFF3
 13767                           intcon	equ	0xFF2
 13768                           intcon3	equ	0xFF0
 13769                           postinc0	equ	0xFEE
 13770                           wreg	equ	0xFE8
 13771                           indf1	equ	0xFE7
 13772                           postdec1	equ	0xFE5
 13773                           fsr1h	equ	0xFE2
 13774                           fsr1l	equ	0xFE1
 13775                           indf2	equ	0xFDF
 13776                           fsr2h	equ	0xFDA
 13777                           fsr2l	equ	0xFD9
 13778                           status	equ	0xFD8
 13779                           
 13780 ;; *************** function _MOTEapp_getModuleResponse *****************
 13781 ;; Defined at:
 13782 ;;		line 1121 in file "../Includes/Board/MOTEapp.c"
 13783 ;; Parameters:    Size  Location     Type
 13784 ;;		None
 13785 ;; Auto vars:     Size  Location     Type
 13786 ;;  bufferByte      1    2[BANK0 ] unsigned char 
 13787 ;;  terminatorRe    1    1[BANK0 ] unsigned char 
 13788 ;; Return value:  Size  Location     Type
 13789 ;;                  1    wreg      unsigned char 
 13790 ;; Registers used:
 13791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13792 ;; Tracked objects:
 13793 ;;		On entry : 0/0
 13794 ;;		On exit  : 0/0
 13795 ;;		Unchanged: 0/0
 13796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13797 ;;      Params:         0       0       0       0       0       0       0       0       0
 13798 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13799 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13800 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13801 ;;Total ram usage:        2 bytes
 13802 ;; Hardware stack levels used:    1
 13803 ;; Hardware stack levels required when called:   12
 13804 ;; This function calls:
 13805 ;;		_EUSART_Read
 13806 ;; This function is called by:
 13807 ;;		_moduleResync
 13808 ;;		_moteHandler
 13809 ;;		_moteApp_setSensorsInput
 13810 ;;		_moteApp_getTempValue
 13811 ;;		_moteApp_getLightValue
 13812 ;; This function uses a non-reentrant model
 13813 ;;
 13814                           
 13815                           	psect	text41
 13816  005CD0                     __ptext41:
 13817                           	opt stack 0
 13818  005CD0                     _MOTEapp_getModuleResponse:
 13819                           	opt stack 15
 13820                           
 13821                           ;MOTEapp.c: 1123: bool terminatorReceived = 0;
 13822                           
 13823                           ; BSR set to: 0
 13824                           ;incstack = 0
 13825  005CD0  0E00               	movlw	0
 13826  005CD2  0100               	movlb	0	; () banked
 13827  005CD4  6F61               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 13828                           
 13829                           ;MOTEapp.c: 1125: if ((eusartRxCount))
 13830  005CD6  5053               	movf	_eusartRxCount,w,c	;volatile
 13831  005CD8  B4D8               	btfsc	status,2,c
 13832  005CDA  D031               	goto	l11944
 13833                           
 13834                           ; BSR set to: 0
 13835                           ;MOTEapp.c: 1126: {
 13836                           ;MOTEapp.c: 1127: uint8_t bufferByte = 0;
 13837  005CDC  0E00               	movlw	0
 13838  005CDE  0100               	movlb	0	; () banked
 13839  005CE0  6F62               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 13840                           
 13841                           ; BSR set to: 0
 13842                           ;MOTEapp.c: 1128: bufferByte = EUSART_Read();
 13843  005CE2  ECBF  F031         	call	_EUSART_Read	;wreg free
 13844  005CE6  0100               	movlb	0	; () banked
 13845  005CE8  6F62               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 13846                           
 13847                           ; BSR set to: 0
 13848                           ;MOTEapp.c: 1130: if (bufferByte == 0x0D)
 13849  005CEA  0E0D               	movlw	13
 13850  005CEC  0100               	movlb	0	; () banked
 13851  005CEE  1962               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13852  005CF0  A4D8               	btfss	status,2,c
 13853  005CF2  D010               	goto	l11936
 13854                           
 13855                           ; BSR set to: 0
 13856                           ;MOTEapp.c: 1131: {
 13857                           ;MOTEapp.c: 1132: moduleResonseBuffer[moduleBufferIndex] = 0x00;
 13858  005CF4  5055               	movf	_moduleBufferIndex,w,c
 13859  005CF6  0D01               	mullw	1
 13860  005CF8  0E56               	movlw	low _moduleResonseBuffer
 13861  005CFA  24F3               	addwf	prodl,w,c
 13862  005CFC  6ED9               	movwf	fsr2l,c
 13863  005CFE  0E01               	movlw	high _moduleResonseBuffer
 13864  005D00  20F4               	addwfc	prodh,w,c
 13865  005D02  6EDA               	movwf	fsr2h,c
 13866  005D04  0E00               	movlw	0
 13867  005D06  6EDF               	movwf	indf2,c
 13868                           
 13869                           ; BSR set to: 0
 13870                           ;MOTEapp.c: 1133: terminatorReceived = 1;
 13871  005D08  0E01               	movlw	1
 13872  005D0A  0100               	movlb	0	; () banked
 13873  005D0C  6F61               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 13874                           
 13875                           ; BSR set to: 0
 13876                           ;MOTEapp.c: 1134: moduleBufferIndex = 0;
 13877  005D0E  0E00               	movlw	0
 13878  005D10  6E55               	movwf	_moduleBufferIndex,c
 13879                           
 13880                           ;MOTEapp.c: 1135: }
 13881  005D12  D015               	goto	l11944
 13882  005D14                     l11936:
 13883                           
 13884                           ; BSR set to: 0
 13885                           ;MOTEapp.c: 1136: else if ( (bufferByte == 0x00) || (bufferByte == 0x0A) )
 13886  005D14  0100               	movlb	0	; () banked
 13887  005D16  5162               	movf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13888  005D18  0100               	movlb	0	; () banked
 13889  005D1A  B4D8               	btfsc	status,2,c
 13890  005D1C  D010               	goto	l11944
 13891                           
 13892                           ; BSR set to: 0
 13893  005D1E  0E0A               	movlw	10
 13894  005D20  0100               	movlb	0	; () banked
 13895  005D22  1962               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13896  005D24  B4D8               	btfsc	status,2,c
 13897  005D26  D00B               	goto	l11944
 13898                           
 13899                           ; BSR set to: 0
 13900                           ;MOTEapp.c: 1140: else
 13901                           ;MOTEapp.c: 1141: {
 13902                           ;MOTEapp.c: 1142: moduleResonseBuffer[moduleBufferIndex] = bufferByte;
 13903                           
 13904                           ; BSR set to: 0
 13905                           
 13906                           ; BSR set to: 0
 13907                           ;MOTEapp.c: 1137: {
 13908                           ;MOTEapp.c: 1139: }
 13909  005D28  5055               	movf	_moduleBufferIndex,w,c
 13910  005D2A  0D01               	mullw	1
 13911  005D2C  0E56               	movlw	low _moduleResonseBuffer
 13912  005D2E  24F3               	addwf	prodl,w,c
 13913  005D30  6ED9               	movwf	fsr2l,c
 13914  005D32  0E01               	movlw	high _moduleResonseBuffer
 13915  005D34  20F4               	addwfc	prodh,w,c
 13916  005D36  6EDA               	movwf	fsr2h,c
 13917  005D38  C062  FFDF         	movff	MOTEapp_getModuleResponse@bufferByte,indf2
 13918                           
 13919                           ; BSR set to: 0
 13920                           ;MOTEapp.c: 1144: moduleBufferIndex++;
 13921  005D3C  2A55               	incf	_moduleBufferIndex,f,c
 13922  005D3E                     l11944:
 13923                           
 13924                           ; BSR set to: 0
 13925                           ;MOTEapp.c: 1145: }
 13926                           ;MOTEapp.c: 1146: }
 13927                           ;MOTEapp.c: 1147: return terminatorReceived;
 13928  005D3E  0100               	movlb	0	; () banked
 13929  005D40  5161               	movf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),w,b
 13930  005D42  0012               	return	
 13931  005D44                     __end_of_MOTEapp_getModuleResponse:
 13932                           	opt stack 0
 13933                           tblptru	equ	0xFF8
 13934                           tblptrh	equ	0xFF7
 13935                           tblptrl	equ	0xFF6
 13936                           tablat	equ	0xFF5
 13937                           prodh	equ	0xFF4
 13938                           prodl	equ	0xFF3
 13939                           intcon	equ	0xFF2
 13940                           intcon3	equ	0xFF0
 13941                           postinc0	equ	0xFEE
 13942                           wreg	equ	0xFE8
 13943                           indf1	equ	0xFE7
 13944                           postdec1	equ	0xFE5
 13945                           fsr1h	equ	0xFE2
 13946                           fsr1l	equ	0xFE1
 13947                           indf2	equ	0xFDF
 13948                           fsr2h	equ	0xFDA
 13949                           fsr2l	equ	0xFD9
 13950                           status	equ	0xFD8
 13951                           
 13952 ;; *************** function _EUSART_FlushBuffer *****************
 13953 ;; Defined at:
 13954 ;;		line 202 in file "../Includes/MccGenerated/eusart.c"
 13955 ;; Parameters:    Size  Location     Type
 13956 ;;		None
 13957 ;; Auto vars:     Size  Location     Type
 13958 ;;  index           1    0[BANK0 ] unsigned char 
 13959 ;; Return value:  Size  Location     Type
 13960 ;;		None               void
 13961 ;; Registers used:
 13962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13963 ;; Tracked objects:
 13964 ;;		On entry : 0/0
 13965 ;;		On exit  : 0/0
 13966 ;;		Unchanged: 0/0
 13967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13968 ;;      Params:         0       0       0       0       0       0       0       0       0
 13969 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13970 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13971 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13972 ;;Total ram usage:        1 bytes
 13973 ;; Hardware stack levels used:    1
 13974 ;; Hardware stack levels required when called:   11
 13975 ;; This function calls:
 13976 ;;		Nothing
 13977 ;; This function is called by:
 13978 ;;		_test_powerup
 13979 ;;		_moteApp_GoToSleep
 13980 ;; This function uses a non-reentrant model
 13981 ;;
 13982                           
 13983                           	psect	text42
 13984  00629A                     __ptext42:
 13985                           	opt stack 0
 13986  00629A                     _EUSART_FlushBuffer:
 13987                           	opt stack 18
 13988                           
 13989                           ;eusart.c: 204: uint8_t index;
 13990                           ;eusart.c: 205: for (index=0; index < 64; index++)
 13991                           
 13992                           ; BSR set to: 0
 13993                           ;incstack = 0
 13994  00629A  0E00               	movlw	0
 13995  00629C  0100               	movlb	0	; () banked
 13996  00629E  6F60               	movwf	EUSART_FlushBuffer@index& (0+255),b
 13997  0062A0                     l12054:
 13998                           
 13999                           ; BSR set to: 0
 14000  0062A0  0E3F               	movlw	63
 14001  0062A2  0100               	movlb	0	; () banked
 14002  0062A4  6560               	cpfsgt	EUSART_FlushBuffer@index& (0+255),b
 14003  0062A6  D001               	goto	l12058
 14004  0062A8  D00E               	goto	l12064
 14005  0062AA                     l12058:
 14006                           
 14007                           ; BSR set to: 0
 14008                           ;eusart.c: 206: {
 14009                           ;eusart.c: 207: eusartRxBuffer[index] = 0;
 14010  0062AA  0100               	movlb	0	; () banked
 14011  0062AC  5160               	movf	EUSART_FlushBuffer@index& (0+255),w,b
 14012  0062AE  0D01               	mullw	1
 14013  0062B0  0E00               	movlw	low _eusartRxBuffer
 14014  0062B2  24F3               	addwf	prodl,w,c
 14015  0062B4  6ED9               	movwf	fsr2l,c
 14016  0062B6  0E02               	movlw	high _eusartRxBuffer
 14017  0062B8  20F4               	addwfc	prodh,w,c
 14018  0062BA  6EDA               	movwf	fsr2h,c
 14019  0062BC  0E00               	movlw	0
 14020  0062BE  6EDF               	movwf	indf2,c
 14021                           
 14022                           ; BSR set to: 0
 14023  0062C0  0100               	movlb	0	; () banked
 14024  0062C2  2B60               	incf	EUSART_FlushBuffer@index& (0+255),f,b
 14025  0062C4  D7ED               	goto	l12054
 14026  0062C6                     l12064:
 14027                           
 14028                           ; BSR set to: 0
 14029                           ;eusart.c: 208: }
 14030                           ;eusart.c: 209: eusartRxHead = 0;
 14031  0062C6  0E00               	movlw	0
 14032  0062C8  0100               	movlb	0	; () banked
 14033  0062CA  6FDF               	movwf	_eusartRxHead& (0+255),b
 14034                           
 14035                           ;eusart.c: 210: eusartRxTail = 0;
 14036  0062CC  0E00               	movlw	0
 14037  0062CE  0100               	movlb	0	; () banked
 14038  0062D0  6FE0               	movwf	_eusartRxTail& (0+255),b
 14039                           
 14040                           ;eusart.c: 211: eusartRxCount = 0;
 14041  0062D2  0E00               	movlw	0
 14042  0062D4  6E53               	movwf	_eusartRxCount,c	;volatile
 14043                           
 14044                           ; BSR set to: 0
 14045                           ;eusart.c: 213: PIE1bits.TXIE = 0;
 14046  0062D6  989D               	bcf	3997,4,c	;volatile
 14047                           
 14048                           ;eusart.c: 214: eusartTxHead = 0;
 14049  0062D8  0E00               	movlw	0
 14050  0062DA  0100               	movlb	0	; () banked
 14051  0062DC  6FE1               	movwf	_eusartTxHead& (0+255),b
 14052                           
 14053                           ;eusart.c: 215: eusartTxTail = 0;
 14054  0062DE  0E00               	movlw	0
 14055  0062E0  0100               	movlb	0	; () banked
 14056  0062E2  6FE2               	movwf	_eusartTxTail& (0+255),b
 14057                           
 14058                           ;eusart.c: 216: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 14059  0062E4  0E40               	movlw	64
 14060  0062E6  6E54               	movwf	_eusartTxBufferRemaining,c	;volatile
 14061                           
 14062                           ; BSR set to: 0
 14063  0062E8  0012               	return		;funcret
 14064  0062EA                     __end_of_EUSART_FlushBuffer:
 14065                           	opt stack 0
 14066                           tblptru	equ	0xFF8
 14067                           tblptrh	equ	0xFF7
 14068                           tblptrl	equ	0xFF6
 14069                           tablat	equ	0xFF5
 14070                           prodh	equ	0xFF4
 14071                           prodl	equ	0xFF3
 14072                           intcon	equ	0xFF2
 14073                           intcon3	equ	0xFF0
 14074                           postinc0	equ	0xFEE
 14075                           wreg	equ	0xFE8
 14076                           indf1	equ	0xFE7
 14077                           postdec1	equ	0xFE5
 14078                           fsr1h	equ	0xFE2
 14079                           fsr1l	equ	0xFE1
 14080                           indf2	equ	0xFDF
 14081                           fsr2h	equ	0xFDA
 14082                           fsr2l	equ	0xFD9
 14083                           status	equ	0xFD8
 14084                           
 14085 ;; *************** function _TMR2_ReadTimer *****************
 14086 ;; Defined at:
 14087 ;;		line 87 in file "../Includes/MccGenerated/tmr2.c"
 14088 ;; Parameters:    Size  Location     Type
 14089 ;;		None
 14090 ;; Auto vars:     Size  Location     Type
 14091 ;;  readVal         1    0[BANK0 ] unsigned char 
 14092 ;; Return value:  Size  Location     Type
 14093 ;;                  1    wreg      unsigned char 
 14094 ;; Registers used:
 14095 ;;		wreg, status,2
 14096 ;; Tracked objects:
 14097 ;;		On entry : 0/0
 14098 ;;		On exit  : 0/0
 14099 ;;		Unchanged: 0/0
 14100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14101 ;;      Params:         0       0       0       0       0       0       0       0       0
 14102 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14103 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14104 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14105 ;;Total ram usage:        1 bytes
 14106 ;; Hardware stack levels used:    1
 14107 ;; Hardware stack levels required when called:   11
 14108 ;; This function calls:
 14109 ;;		Nothing
 14110 ;; This function is called by:
 14111 ;;		_moteRunningProcess
 14112 ;; This function uses a non-reentrant model
 14113 ;;
 14114                           
 14115                           	psect	text43
 14116  006AC4                     __ptext43:
 14117                           	opt stack 0
 14118  006AC4                     _TMR2_ReadTimer:
 14119                           	opt stack 17
 14120                           
 14121                           ;tmr2.c: 88: uint8_t readVal;
 14122                           ;tmr2.c: 90: readVal = TMR2;
 14123                           
 14124                           ; BSR set to: 0
 14125                           ;incstack = 0
 14126  006AC4  CFBC F060          	movff	4028,TMR2_ReadTimer@readVal	;volatile
 14127                           
 14128                           ;tmr2.c: 92: return readVal;
 14129  006AC8  0100               	movlb	0	; () banked
 14130  006ACA  5160               	movf	TMR2_ReadTimer@readVal& (0+255),w,b
 14131  006ACC  0012               	return	
 14132  006ACE                     __end_of_TMR2_ReadTimer:
 14133                           	opt stack 0
 14134                           tblptru	equ	0xFF8
 14135                           tblptrh	equ	0xFF7
 14136                           tblptrl	equ	0xFF6
 14137                           tablat	equ	0xFF5
 14138                           prodh	equ	0xFF4
 14139                           prodl	equ	0xFF3
 14140                           intcon	equ	0xFF2
 14141                           intcon3	equ	0xFF0
 14142                           postinc0	equ	0xFEE
 14143                           wreg	equ	0xFE8
 14144                           indf1	equ	0xFE7
 14145                           postdec1	equ	0xFE5
 14146                           fsr1h	equ	0xFE2
 14147                           fsr1l	equ	0xFE1
 14148                           indf2	equ	0xFDF
 14149                           fsr2h	equ	0xFDA
 14150                           fsr2l	equ	0xFD9
 14151                           status	equ	0xFD8
 14152                           
 14153 ;; *************** function _MOTEapp_SetDataRateSetting *****************
 14154 ;; Defined at:
 14155 ;;		line 981 in file "../Includes/Board/MOTEapp.c"
 14156 ;; Parameters:    Size  Location     Type
 14157 ;;  dr              1    wreg     unsigned char 
 14158 ;; Auto vars:     Size  Location     Type
 14159 ;;  dr              1    4[BANK0 ] unsigned char 
 14160 ;; Return value:  Size  Location     Type
 14161 ;;		None               void
 14162 ;; Registers used:
 14163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14164 ;; Tracked objects:
 14165 ;;		On entry : 0/0
 14166 ;;		On exit  : 0/0
 14167 ;;		Unchanged: 0/0
 14168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14169 ;;      Params:         0       0       0       0       0       0       0       0       0
 14170 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14171 ;;      Temps:          0       1       0       0       0       0       0       0       0
 14172 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14173 ;;Total ram usage:        2 bytes
 14174 ;; Hardware stack levels used:    1
 14175 ;; Hardware stack levels required when called:   14
 14176 ;; This function calls:
 14177 ;;		_sendCommand
 14178 ;; This function is called by:
 14179 ;;		_moteRunningProcess
 14180 ;; This function uses a non-reentrant model
 14181 ;;
 14182                           
 14183                           	psect	text44
 14184  0022D6                     __ptext44:
 14185                           	opt stack 0
 14186  0022D6                     _MOTEapp_SetDataRateSetting:
 14187                           	opt stack 14
 14188                           
 14189                           ; BSR set to: 0
 14190                           ;incstack = 0
 14191                           ;MOTEapp_SetDataRateSetting@dr stored from wreg
 14192  0022D6  0100               	movlb	0	; () banked
 14193  0022D8  6F64               	movwf	MOTEapp_SetDataRateSetting@dr& (0+255),b
 14194                           
 14195                           ;MOTEapp.c: 983: if (dr != 8)
 14196  0022DA  0E08               	movlw	8
 14197  0022DC  0100               	movlb	0	; () banked
 14198  0022DE  1964               	xorwf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 14199  0022E0  B4D8               	btfsc	status,2,c
 14200  0022E2  D207               	goto	l13216
 14201                           
 14202                           ; BSR set to: 0
 14203                           ;MOTEapp.c: 984: {
 14204                           ;MOTEapp.c: 985: sendCommand("mac set adr off");
 14205  0022E4  0EA4               	movlw	low STR_163
 14206  0022E6  0100               	movlb	0	; () banked
 14207  0022E8  6F61               	movwf	sendCommand@string& (0+255),b
 14208  0022EA  0E7C               	movlw	high STR_163
 14209  0022EC  0100               	movlb	0	; () banked
 14210  0022EE  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14211  0022F0  ECB0  F033         	call	_sendCommand	;wreg free
 14212                           
 14213                           ;MOTEapp.c: 986: _delay((unsigned long)((16)*(48000000/4000.0)));
 14214  0022F4  0EFA               	movlw	250
 14215  0022F6  0100               	movlb	0	; () banked
 14216  0022F8  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14217  0022FA  0E58               	movlw	88
 14218  0022FC                     u14367:
 14219  0022FC  2EE8               	decfsz	wreg,f,c
 14220  0022FE  D7FE               	goto	u14367
 14221  002300  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14222  002302  D7FC               	goto	u14367
 14223  002304  D000               	nop2	
 14224                           
 14225                           ;MOTEapp.c: 987: _delay((unsigned long)((16)*(48000000/4000.0)));
 14226  002306  0EFA               	movlw	250
 14227  002308  0100               	movlb	0	; () banked
 14228  00230A  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14229  00230C  0E58               	movlw	88
 14230  00230E                     u14377:
 14231  00230E  2EE8               	decfsz	wreg,f,c
 14232  002310  D7FE               	goto	u14377
 14233  002312  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14234  002314  D7FC               	goto	u14377
 14235  002316  D000               	nop2	
 14236                           
 14237                           ;MOTEapp.c: 988: _delay((unsigned long)((16)*(48000000/4000.0)));
 14238  002318  0EFA               	movlw	250
 14239  00231A  0100               	movlb	0	; () banked
 14240  00231C  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14241  00231E  0E58               	movlw	88
 14242  002320                     u14387:
 14243  002320  2EE8               	decfsz	wreg,f,c
 14244  002322  D7FE               	goto	u14387
 14245  002324  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14246  002326  D7FC               	goto	u14387
 14247  002328  D000               	nop2	
 14248                           
 14249                           ;MOTEapp.c: 989: sendCommand("mac set pwridx 5");
 14250  00232A  0E88               	movlw	low STR_164
 14251  00232C  0100               	movlb	0	; () banked
 14252  00232E  6F61               	movwf	sendCommand@string& (0+255),b
 14253  002330  0E7B               	movlw	high STR_164
 14254  002332  0100               	movlb	0	; () banked
 14255  002334  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14256  002336  ECB0  F033         	call	_sendCommand	;wreg free
 14257                           
 14258                           ;MOTEapp.c: 990: _delay((unsigned long)((16)*(48000000/4000.0)));
 14259  00233A  0EFA               	movlw	250
 14260  00233C  0100               	movlb	0	; () banked
 14261  00233E  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14262  002340  0E58               	movlw	88
 14263  002342                     u14397:
 14264  002342  2EE8               	decfsz	wreg,f,c
 14265  002344  D7FE               	goto	u14397
 14266  002346  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14267  002348  D7FC               	goto	u14397
 14268  00234A  D000               	nop2	
 14269                           
 14270                           ;MOTEapp.c: 991: _delay((unsigned long)((16)*(48000000/4000.0)));
 14271  00234C  0EFA               	movlw	250
 14272  00234E  0100               	movlb	0	; () banked
 14273  002350  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14274  002352  0E58               	movlw	88
 14275  002354                     u14407:
 14276  002354  2EE8               	decfsz	wreg,f,c
 14277  002356  D7FE               	goto	u14407
 14278  002358  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14279  00235A  D7FC               	goto	u14407
 14280  00235C  D000               	nop2	
 14281                           
 14282                           ;MOTEapp.c: 992: _delay((unsigned long)((16)*(48000000/4000.0)));
 14283  00235E  0EFA               	movlw	250
 14284  002360  0100               	movlb	0	; () banked
 14285  002362  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14286  002364  0E58               	movlw	88
 14287  002366                     u14417:
 14288  002366  2EE8               	decfsz	wreg,f,c
 14289  002368  D7FE               	goto	u14417
 14290  00236A  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14291  00236C  D7FC               	goto	u14417
 14292  00236E  D000               	nop2	
 14293                           
 14294                           ;MOTEapp.c: 994: }
 14295                           ;MOTEapp.c: 996: switch (dr)
 14296  002370  D1C0               	goto	l13216
 14297  002372                     l13148:
 14298                           
 14299                           ;MOTEapp.c: 999: sendCommand("mac set dr 0");
 14300  002372  0E80               	movlw	low STR_165
 14301  002374  0100               	movlb	0	; () banked
 14302  002376  6F61               	movwf	sendCommand@string& (0+255),b
 14303  002378  0E7D               	movlw	high STR_165
 14304  00237A  0100               	movlb	0	; () banked
 14305  00237C  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14306  00237E  ECB0  F033         	call	_sendCommand	;wreg free
 14307                           
 14308                           ;MOTEapp.c: 1000: _delay((unsigned long)((16)*(48000000/4000.0)));
 14309  002382  0EFA               	movlw	250
 14310  002384  0100               	movlb	0	; () banked
 14311  002386  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14312  002388  0E58               	movlw	88
 14313  00238A                     u14427:
 14314  00238A  2EE8               	decfsz	wreg,f,c
 14315  00238C  D7FE               	goto	u14427
 14316  00238E  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14317  002390  D7FC               	goto	u14427
 14318  002392  D000               	nop2	
 14319                           
 14320                           ;MOTEapp.c: 1001: _delay((unsigned long)((16)*(48000000/4000.0)));
 14321  002394  0EFA               	movlw	250
 14322  002396  0100               	movlb	0	; () banked
 14323  002398  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14324  00239A  0E58               	movlw	88
 14325  00239C                     u14437:
 14326  00239C  2EE8               	decfsz	wreg,f,c
 14327  00239E  D7FE               	goto	u14437
 14328  0023A0  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14329  0023A2  D7FC               	goto	u14437
 14330  0023A4  D000               	nop2	
 14331                           
 14332                           ;MOTEapp.c: 1002: _delay((unsigned long)((16)*(48000000/4000.0)));
 14333  0023A6  0EFA               	movlw	250
 14334  0023A8  0100               	movlb	0	; () banked
 14335  0023AA  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14336  0023AC  0E58               	movlw	88
 14337  0023AE                     u14447:
 14338  0023AE  2EE8               	decfsz	wreg,f,c
 14339  0023B0  D7FE               	goto	u14447
 14340  0023B2  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14341  0023B4  D7FC               	goto	u14447
 14342  0023B6  D000               	nop2	
 14343                           
 14344                           ;MOTEapp.c: 1003: sendCommand("mac set pwridx 1");
 14345  0023B8  0E44               	movlw	low STR_166
 14346  0023BA  0100               	movlb	0	; () banked
 14347  0023BC  6F61               	movwf	sendCommand@string& (0+255),b
 14348  0023BE  0E7B               	movlw	high STR_166
 14349  0023C0  0100               	movlb	0	; () banked
 14350  0023C2  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14351  0023C4  ECB0  F033         	call	_sendCommand	;wreg free
 14352                           
 14353                           ;MOTEapp.c: 1004: _delay((unsigned long)((16)*(48000000/4000.0)));
 14354  0023C8  0EFA               	movlw	250
 14355  0023CA  0100               	movlb	0	; () banked
 14356  0023CC  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14357  0023CE  0E58               	movlw	88
 14358  0023D0                     u14457:
 14359  0023D0  2EE8               	decfsz	wreg,f,c
 14360  0023D2  D7FE               	goto	u14457
 14361  0023D4  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14362  0023D6  D7FC               	goto	u14457
 14363  0023D8  D000               	nop2	
 14364                           
 14365                           ;MOTEapp.c: 1005: _delay((unsigned long)((16)*(48000000/4000.0)));
 14366  0023DA  0EFA               	movlw	250
 14367  0023DC  0100               	movlb	0	; () banked
 14368  0023DE  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14369  0023E0  0E58               	movlw	88
 14370  0023E2                     u14467:
 14371  0023E2  2EE8               	decfsz	wreg,f,c
 14372  0023E4  D7FE               	goto	u14467
 14373  0023E6  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14374  0023E8  D7FC               	goto	u14467
 14375  0023EA  D000               	nop2	
 14376                           
 14377                           ;MOTEapp.c: 1006: _delay((unsigned long)((16)*(48000000/4000.0)));
 14378  0023EC  0EFA               	movlw	250
 14379  0023EE  0100               	movlb	0	; () banked
 14380  0023F0  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14381  0023F2  0E58               	movlw	88
 14382  0023F4                     u14477:
 14383  0023F4  2EE8               	decfsz	wreg,f,c
 14384  0023F6  D7FE               	goto	u14477
 14385  0023F8  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14386  0023FA  D7FC               	goto	u14477
 14387  0023FC  D15D               	goto	L10
 14388  0023FE                     l13158:
 14389                           
 14390                           ;MOTEapp.c: 1009: sendCommand("mac set dr 1");
 14391  0023FE  0E8D               	movlw	low STR_167
 14392  002400  0100               	movlb	0	; () banked
 14393  002402  6F61               	movwf	sendCommand@string& (0+255),b
 14394  002404  0E7D               	movlw	high STR_167
 14395  002406  0100               	movlb	0	; () banked
 14396  002408  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14397  00240A  ECB0  F033         	call	_sendCommand	;wreg free
 14398                           
 14399                           ;MOTEapp.c: 1010: _delay((unsigned long)((16)*(48000000/4000.0)));
 14400  00240E  0EFA               	movlw	250
 14401  002410  0100               	movlb	0	; () banked
 14402  002412  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14403  002414  0E58               	movlw	88
 14404  002416                     u14487:
 14405  002416  2EE8               	decfsz	wreg,f,c
 14406  002418  D7FE               	goto	u14487
 14407  00241A  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14408  00241C  D7FC               	goto	u14487
 14409  00241E  D000               	nop2	
 14410                           
 14411                           ;MOTEapp.c: 1011: _delay((unsigned long)((16)*(48000000/4000.0)));
 14412  002420  0EFA               	movlw	250
 14413  002422  0100               	movlb	0	; () banked
 14414  002424  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14415  002426  0E58               	movlw	88
 14416  002428                     u14497:
 14417  002428  2EE8               	decfsz	wreg,f,c
 14418  00242A  D7FE               	goto	u14497
 14419  00242C  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14420  00242E  D7FC               	goto	u14497
 14421  002430  D000               	nop2	
 14422                           
 14423                           ;MOTEapp.c: 1012: _delay((unsigned long)((16)*(48000000/4000.0)));
 14424  002432  0EFA               	movlw	250
 14425  002434  0100               	movlb	0	; () banked
 14426  002436  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14427  002438  0E58               	movlw	88
 14428  00243A                     u14507:
 14429  00243A  2EE8               	decfsz	wreg,f,c
 14430  00243C  D7FE               	goto	u14507
 14431  00243E  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14432  002440  D7FC               	goto	u14507
 14433  002442  D000               	nop2	
 14434                           
 14435                           ;MOTEapp.c: 1013: sendCommand("mac set pwridx 1");
 14436  002444  0E44               	movlw	low STR_166
 14437  002446  0100               	movlb	0	; () banked
 14438  002448  6F61               	movwf	sendCommand@string& (0+255),b
 14439  00244A  0E7B               	movlw	high STR_166
 14440  00244C  0100               	movlb	0	; () banked
 14441  00244E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14442  002450  ECB0  F033         	call	_sendCommand	;wreg free
 14443                           
 14444                           ;MOTEapp.c: 1014: _delay((unsigned long)((16)*(48000000/4000.0)));
 14445  002454  0EFA               	movlw	250
 14446  002456  0100               	movlb	0	; () banked
 14447  002458  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14448  00245A  0E58               	movlw	88
 14449  00245C                     u14517:
 14450  00245C  2EE8               	decfsz	wreg,f,c
 14451  00245E  D7FE               	goto	u14517
 14452  002460  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14453  002462  D7FC               	goto	u14517
 14454  002464  D000               	nop2	
 14455                           
 14456                           ;MOTEapp.c: 1015: _delay((unsigned long)((16)*(48000000/4000.0)));
 14457  002466  0EFA               	movlw	250
 14458  002468  0100               	movlb	0	; () banked
 14459  00246A  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14460  00246C  0E58               	movlw	88
 14461  00246E                     u14527:
 14462  00246E  2EE8               	decfsz	wreg,f,c
 14463  002470  D7FE               	goto	u14527
 14464  002472  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14465  002474  D7FC               	goto	u14527
 14466  002476  D000               	nop2	
 14467                           
 14468                           ;MOTEapp.c: 1016: _delay((unsigned long)((16)*(48000000/4000.0)));
 14469  002478  0EFA               	movlw	250
 14470  00247A  0100               	movlb	0	; () banked
 14471  00247C  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14472  00247E  0E58               	movlw	88
 14473  002480                     u14537:
 14474  002480  2EE8               	decfsz	wreg,f,c
 14475  002482  D7FE               	goto	u14537
 14476  002484  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14477  002486  D7FC               	goto	u14537
 14478  002488  D117               	goto	L10
 14479  00248A                     l13168:
 14480                           
 14481                           ;MOTEapp.c: 1019: sendCommand("mac set dr 2");
 14482  00248A  0E9A               	movlw	low STR_169
 14483  00248C  0100               	movlb	0	; () banked
 14484  00248E  6F61               	movwf	sendCommand@string& (0+255),b
 14485  002490  0E7D               	movlw	high STR_169
 14486  002492  0100               	movlb	0	; () banked
 14487  002494  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14488  002496  ECB0  F033         	call	_sendCommand	;wreg free
 14489                           
 14490                           ;MOTEapp.c: 1020: _delay((unsigned long)((16)*(48000000/4000.0)));
 14491  00249A  0EFA               	movlw	250
 14492  00249C  0100               	movlb	0	; () banked
 14493  00249E  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14494  0024A0  0E58               	movlw	88
 14495  0024A2                     u14547:
 14496  0024A2  2EE8               	decfsz	wreg,f,c
 14497  0024A4  D7FE               	goto	u14547
 14498  0024A6  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14499  0024A8  D7FC               	goto	u14547
 14500  0024AA  D000               	nop2	
 14501                           
 14502                           ;MOTEapp.c: 1021: _delay((unsigned long)((16)*(48000000/4000.0)));
 14503  0024AC  0EFA               	movlw	250
 14504  0024AE  0100               	movlb	0	; () banked
 14505  0024B0  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14506  0024B2  0E58               	movlw	88
 14507  0024B4                     u14557:
 14508  0024B4  2EE8               	decfsz	wreg,f,c
 14509  0024B6  D7FE               	goto	u14557
 14510  0024B8  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14511  0024BA  D7FC               	goto	u14557
 14512  0024BC  D000               	nop2	
 14513                           
 14514                           ;MOTEapp.c: 1022: _delay((unsigned long)((16)*(48000000/4000.0)));
 14515  0024BE  0EFA               	movlw	250
 14516  0024C0  0100               	movlb	0	; () banked
 14517  0024C2  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14518  0024C4  0E58               	movlw	88
 14519  0024C6                     u14567:
 14520  0024C6  2EE8               	decfsz	wreg,f,c
 14521  0024C8  D7FE               	goto	u14567
 14522  0024CA  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14523  0024CC  D7FC               	goto	u14567
 14524  0024CE  D000               	nop2	
 14525                           
 14526                           ;MOTEapp.c: 1023: sendCommand("mac set pwridx 2");
 14527  0024D0  0E55               	movlw	low STR_170
 14528  0024D2  0100               	movlb	0	; () banked
 14529  0024D4  6F61               	movwf	sendCommand@string& (0+255),b
 14530  0024D6  0E7B               	movlw	high STR_170
 14531  0024D8  0100               	movlb	0	; () banked
 14532  0024DA  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14533  0024DC  ECB0  F033         	call	_sendCommand	;wreg free
 14534                           
 14535                           ;MOTEapp.c: 1024: _delay((unsigned long)((16)*(48000000/4000.0)));
 14536  0024E0  0EFA               	movlw	250
 14537  0024E2  0100               	movlb	0	; () banked
 14538  0024E4  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14539  0024E6  0E58               	movlw	88
 14540  0024E8                     u14577:
 14541  0024E8  2EE8               	decfsz	wreg,f,c
 14542  0024EA  D7FE               	goto	u14577
 14543  0024EC  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14544  0024EE  D7FC               	goto	u14577
 14545  0024F0  D000               	nop2	
 14546                           
 14547                           ;MOTEapp.c: 1025: _delay((unsigned long)((16)*(48000000/4000.0)));
 14548  0024F2  0EFA               	movlw	250
 14549  0024F4  0100               	movlb	0	; () banked
 14550  0024F6  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14551  0024F8  0E58               	movlw	88
 14552  0024FA                     u14587:
 14553  0024FA  2EE8               	decfsz	wreg,f,c
 14554  0024FC  D7FE               	goto	u14587
 14555  0024FE  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14556  002500  D7FC               	goto	u14587
 14557  002502  D000               	nop2	
 14558                           
 14559                           ;MOTEapp.c: 1026: _delay((unsigned long)((16)*(48000000/4000.0)));
 14560  002504  0EFA               	movlw	250
 14561  002506  0100               	movlb	0	; () banked
 14562  002508  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14563  00250A  0E58               	movlw	88
 14564  00250C                     u14597:
 14565  00250C  2EE8               	decfsz	wreg,f,c
 14566  00250E  D7FE               	goto	u14597
 14567  002510  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14568  002512  D7FC               	goto	u14597
 14569  002514  D0D1               	goto	L10
 14570  002516                     l13178:
 14571                           
 14572                           ;MOTEapp.c: 1029: sendCommand("mac set dr 3");
 14573  002516  0EA7               	movlw	low STR_171
 14574  002518  0100               	movlb	0	; () banked
 14575  00251A  6F61               	movwf	sendCommand@string& (0+255),b
 14576  00251C  0E7D               	movlw	high STR_171
 14577  00251E  0100               	movlb	0	; () banked
 14578  002520  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14579  002522  ECB0  F033         	call	_sendCommand	;wreg free
 14580                           
 14581                           ;MOTEapp.c: 1030: _delay((unsigned long)((16)*(48000000/4000.0)));
 14582  002526  0EFA               	movlw	250
 14583  002528  0100               	movlb	0	; () banked
 14584  00252A  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14585  00252C  0E58               	movlw	88
 14586  00252E                     u14607:
 14587  00252E  2EE8               	decfsz	wreg,f,c
 14588  002530  D7FE               	goto	u14607
 14589  002532  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14590  002534  D7FC               	goto	u14607
 14591  002536  D000               	nop2	
 14592                           
 14593                           ;MOTEapp.c: 1031: _delay((unsigned long)((16)*(48000000/4000.0)));
 14594  002538  0EFA               	movlw	250
 14595  00253A  0100               	movlb	0	; () banked
 14596  00253C  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14597  00253E  0E58               	movlw	88
 14598  002540                     u14617:
 14599  002540  2EE8               	decfsz	wreg,f,c
 14600  002542  D7FE               	goto	u14617
 14601  002544  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14602  002546  D7FC               	goto	u14617
 14603  002548  D000               	nop2	
 14604                           
 14605                           ;MOTEapp.c: 1032: _delay((unsigned long)((16)*(48000000/4000.0)));
 14606  00254A  0EFA               	movlw	250
 14607  00254C  0100               	movlb	0	; () banked
 14608  00254E  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14609  002550  0E58               	movlw	88
 14610  002552                     u14627:
 14611  002552  2EE8               	decfsz	wreg,f,c
 14612  002554  D7FE               	goto	u14627
 14613  002556  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14614  002558  D7FC               	goto	u14627
 14615  00255A  D000               	nop2	
 14616                           
 14617                           ;MOTEapp.c: 1033: sendCommand("mac set pwridx 3");
 14618  00255C  0E66               	movlw	low STR_172
 14619  00255E  0100               	movlb	0	; () banked
 14620  002560  6F61               	movwf	sendCommand@string& (0+255),b
 14621  002562  0E7B               	movlw	high STR_172
 14622  002564  0100               	movlb	0	; () banked
 14623  002566  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14624  002568  ECB0  F033         	call	_sendCommand	;wreg free
 14625                           
 14626                           ;MOTEapp.c: 1034: _delay((unsigned long)((16)*(48000000/4000.0)));
 14627  00256C  0EFA               	movlw	250
 14628  00256E  0100               	movlb	0	; () banked
 14629  002570  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14630  002572  0E58               	movlw	88
 14631  002574                     u14637:
 14632  002574  2EE8               	decfsz	wreg,f,c
 14633  002576  D7FE               	goto	u14637
 14634  002578  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14635  00257A  D7FC               	goto	u14637
 14636  00257C  D000               	nop2	
 14637                           
 14638                           ;MOTEapp.c: 1035: _delay((unsigned long)((16)*(48000000/4000.0)));
 14639  00257E  0EFA               	movlw	250
 14640  002580  0100               	movlb	0	; () banked
 14641  002582  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14642  002584  0E58               	movlw	88
 14643  002586                     u14647:
 14644  002586  2EE8               	decfsz	wreg,f,c
 14645  002588  D7FE               	goto	u14647
 14646  00258A  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14647  00258C  D7FC               	goto	u14647
 14648  00258E  D000               	nop2	
 14649                           
 14650                           ;MOTEapp.c: 1036: _delay((unsigned long)((16)*(48000000/4000.0)));
 14651  002590  0EFA               	movlw	250
 14652  002592  0100               	movlb	0	; () banked
 14653  002594  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14654  002596  0E58               	movlw	88
 14655  002598                     u14657:
 14656  002598  2EE8               	decfsz	wreg,f,c
 14657  00259A  D7FE               	goto	u14657
 14658  00259C  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14659  00259E  D7FC               	goto	u14657
 14660  0025A0  D08B               	goto	L10
 14661  0025A2                     l13188:
 14662                           
 14663                           ;MOTEapp.c: 1039: sendCommand("mac set dr 4");
 14664  0025A2  0EB4               	movlw	low STR_173
 14665  0025A4  0100               	movlb	0	; () banked
 14666  0025A6  6F61               	movwf	sendCommand@string& (0+255),b
 14667  0025A8  0E7D               	movlw	high STR_173
 14668  0025AA  0100               	movlb	0	; () banked
 14669  0025AC  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14670  0025AE  ECB0  F033         	call	_sendCommand	;wreg free
 14671                           
 14672                           ;MOTEapp.c: 1040: _delay((unsigned long)((16)*(48000000/4000.0)));
 14673  0025B2  0EFA               	movlw	250
 14674  0025B4  0100               	movlb	0	; () banked
 14675  0025B6  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14676  0025B8  0E58               	movlw	88
 14677  0025BA                     u14667:
 14678  0025BA  2EE8               	decfsz	wreg,f,c
 14679  0025BC  D7FE               	goto	u14667
 14680  0025BE  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14681  0025C0  D7FC               	goto	u14667
 14682  0025C2  D000               	nop2	
 14683                           
 14684                           ;MOTEapp.c: 1041: _delay((unsigned long)((16)*(48000000/4000.0)));
 14685  0025C4  0EFA               	movlw	250
 14686  0025C6  0100               	movlb	0	; () banked
 14687  0025C8  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14688  0025CA  0E58               	movlw	88
 14689  0025CC                     u14677:
 14690  0025CC  2EE8               	decfsz	wreg,f,c
 14691  0025CE  D7FE               	goto	u14677
 14692  0025D0  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14693  0025D2  D7FC               	goto	u14677
 14694  0025D4  D000               	nop2	
 14695                           
 14696                           ;MOTEapp.c: 1042: _delay((unsigned long)((16)*(48000000/4000.0)));
 14697  0025D6  0EFA               	movlw	250
 14698  0025D8  0100               	movlb	0	; () banked
 14699  0025DA  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14700  0025DC  0E58               	movlw	88
 14701  0025DE                     u14687:
 14702  0025DE  2EE8               	decfsz	wreg,f,c
 14703  0025E0  D7FE               	goto	u14687
 14704  0025E2  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14705  0025E4  D7FC               	goto	u14687
 14706  0025E6  D000               	nop2	
 14707                           
 14708                           ;MOTEapp.c: 1043: sendCommand("mac set pwridx 4");
 14709  0025E8  0E77               	movlw	low STR_174
 14710  0025EA  0100               	movlb	0	; () banked
 14711  0025EC  6F61               	movwf	sendCommand@string& (0+255),b
 14712  0025EE  0E7B               	movlw	high STR_174
 14713  0025F0  0100               	movlb	0	; () banked
 14714  0025F2  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14715  0025F4  ECB0  F033         	call	_sendCommand	;wreg free
 14716                           
 14717                           ;MOTEapp.c: 1044: _delay((unsigned long)((16)*(48000000/4000.0)));
 14718  0025F8  0EFA               	movlw	250
 14719  0025FA  0100               	movlb	0	; () banked
 14720  0025FC  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14721  0025FE  0E58               	movlw	88
 14722  002600                     u14697:
 14723  002600  2EE8               	decfsz	wreg,f,c
 14724  002602  D7FE               	goto	u14697
 14725  002604  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14726  002606  D7FC               	goto	u14697
 14727  002608  D000               	nop2	
 14728                           
 14729                           ;MOTEapp.c: 1045: _delay((unsigned long)((16)*(48000000/4000.0)));
 14730  00260A  0EFA               	movlw	250
 14731  00260C  0100               	movlb	0	; () banked
 14732  00260E  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14733  002610  0E58               	movlw	88
 14734  002612                     u14707:
 14735  002612  2EE8               	decfsz	wreg,f,c
 14736  002614  D7FE               	goto	u14707
 14737  002616  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14738  002618  D7FC               	goto	u14707
 14739  00261A  D000               	nop2	
 14740                           
 14741                           ;MOTEapp.c: 1046: _delay((unsigned long)((16)*(48000000/4000.0)));
 14742  00261C  0EFA               	movlw	250
 14743  00261E  0100               	movlb	0	; () banked
 14744  002620  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14745  002622  0E58               	movlw	88
 14746  002624                     u14717:
 14747  002624  2EE8               	decfsz	wreg,f,c
 14748  002626  D7FE               	goto	u14717
 14749  002628  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14750  00262A  D7FC               	goto	u14717
 14751  00262C  D045               	goto	L10
 14752  00262E                     l13198:
 14753                           
 14754                           ;MOTEapp.c: 1049: sendCommand("mac set dr 5");
 14755  00262E  0EC1               	movlw	low STR_175
 14756  002630  0100               	movlb	0	; () banked
 14757  002632  6F61               	movwf	sendCommand@string& (0+255),b
 14758  002634  0E7D               	movlw	high STR_175
 14759  002636  0100               	movlb	0	; () banked
 14760  002638  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14761  00263A  ECB0  F033         	call	_sendCommand	;wreg free
 14762                           
 14763                           ;MOTEapp.c: 1050: _delay((unsigned long)((16)*(48000000/4000.0)));
 14764  00263E  0EFA               	movlw	250
 14765  002640  0100               	movlb	0	; () banked
 14766  002642  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14767  002644  0E58               	movlw	88
 14768  002646                     u14727:
 14769  002646  2EE8               	decfsz	wreg,f,c
 14770  002648  D7FE               	goto	u14727
 14771  00264A  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14772  00264C  D7FC               	goto	u14727
 14773  00264E  D000               	nop2	
 14774                           
 14775                           ;MOTEapp.c: 1051: _delay((unsigned long)((16)*(48000000/4000.0)));
 14776  002650  0EFA               	movlw	250
 14777  002652  0100               	movlb	0	; () banked
 14778  002654  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14779  002656  0E58               	movlw	88
 14780  002658                     u14737:
 14781  002658  2EE8               	decfsz	wreg,f,c
 14782  00265A  D7FE               	goto	u14737
 14783  00265C  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14784  00265E  D7FC               	goto	u14737
 14785  002660  D000               	nop2	
 14786                           
 14787                           ;MOTEapp.c: 1052: _delay((unsigned long)((16)*(48000000/4000.0)));
 14788  002662  0EFA               	movlw	250
 14789  002664  0100               	movlb	0	; () banked
 14790  002666  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14791  002668  0E58               	movlw	88
 14792  00266A                     u14747:
 14793  00266A  2EE8               	decfsz	wreg,f,c
 14794  00266C  D7FE               	goto	u14747
 14795  00266E  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14796  002670  D7FC               	goto	u14747
 14797  002672  D000               	nop2	
 14798                           
 14799                           ;MOTEapp.c: 1053: sendCommand("mac set pwridx 5");
 14800  002674  0E88               	movlw	low STR_164
 14801  002676  0100               	movlb	0	; () banked
 14802  002678  6F61               	movwf	sendCommand@string& (0+255),b
 14803  00267A  0E7B               	movlw	high STR_164
 14804  00267C  0100               	movlb	0	; () banked
 14805  00267E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14806  002680  ECB0  F033         	call	_sendCommand	;wreg free
 14807                           
 14808                           ;MOTEapp.c: 1054: _delay((unsigned long)((16)*(48000000/4000.0)));
 14809  002684  0EFA               	movlw	250
 14810  002686  0100               	movlb	0	; () banked
 14811  002688  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14812  00268A  0E58               	movlw	88
 14813  00268C                     u14757:
 14814  00268C  2EE8               	decfsz	wreg,f,c
 14815  00268E  D7FE               	goto	u14757
 14816  002690  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14817  002692  D7FC               	goto	u14757
 14818  002694  D000               	nop2	
 14819                           
 14820                           ;MOTEapp.c: 1055: _delay((unsigned long)((16)*(48000000/4000.0)));
 14821  002696  0EFA               	movlw	250
 14822  002698  0100               	movlb	0	; () banked
 14823  00269A  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14824  00269C  0E58               	movlw	88
 14825  00269E                     u14767:
 14826  00269E  2EE8               	decfsz	wreg,f,c
 14827  0026A0  D7FE               	goto	u14767
 14828  0026A2  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14829  0026A4  D7FC               	goto	u14767
 14830  0026A6  D000               	nop2	
 14831                           
 14832                           ;MOTEapp.c: 1056: _delay((unsigned long)((16)*(48000000/4000.0)));
 14833  0026A8  0EFA               	movlw	250
 14834  0026AA  0100               	movlb	0	; () banked
 14835  0026AC  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14836  0026AE  0E58               	movlw	88
 14837  0026B0                     u14777:
 14838  0026B0  2EE8               	decfsz	wreg,f,c
 14839  0026B2  D7FE               	goto	u14777
 14840  0026B4  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14841  0026B6  D7FC               	goto	u14777
 14842  0026B8                     L10:
 14843  0026B8  D000               	nop2	
 14844                           
 14845                           ;MOTEapp.c: 1057: break;
 14846  0026BA  D038               	goto	l13218
 14847  0026BC                     l13208:
 14848                           
 14849                           ;MOTEapp.c: 1059: sendCommand("mac set dr 6");
 14850  0026BC  0ECE               	movlw	low STR_177
 14851  0026BE  0100               	movlb	0	; () banked
 14852  0026C0  6F61               	movwf	sendCommand@string& (0+255),b
 14853  0026C2  0E7D               	movlw	high STR_177
 14854  0026C4  0100               	movlb	0	; () banked
 14855  0026C6  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14856  0026C8  ECB0  F033         	call	_sendCommand	;wreg free
 14857                           
 14858                           ;MOTEapp.c: 1060: break;
 14859  0026CC  D02F               	goto	l13218
 14860  0026CE                     l13210:
 14861                           
 14862                           ;MOTEapp.c: 1062: sendCommand("mac set dr 7");
 14863  0026CE  0EDB               	movlw	low STR_178
 14864  0026D0  0100               	movlb	0	; () banked
 14865  0026D2  6F61               	movwf	sendCommand@string& (0+255),b
 14866  0026D4  0E7D               	movlw	high STR_178
 14867  0026D6  0100               	movlb	0	; () banked
 14868  0026D8  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14869  0026DA  ECB0  F033         	call	_sendCommand	;wreg free
 14870                           
 14871                           ;MOTEapp.c: 1063: break;
 14872  0026DE  D026               	goto	l13218
 14873  0026E0                     l13212:
 14874                           
 14875                           ;MOTEapp.c: 1065: sendCommand("mac set adr on");
 14876  0026E0  0EF2               	movlw	low STR_179
 14877  0026E2  0100               	movlb	0	; () banked
 14878  0026E4  6F61               	movwf	sendCommand@string& (0+255),b
 14879  0026E6  0E7C               	movlw	high STR_179
 14880  0026E8  0100               	movlb	0	; () banked
 14881  0026EA  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14882  0026EC  ECB0  F033         	call	_sendCommand	;wreg free
 14883                           
 14884                           ;MOTEapp.c: 1067: }
 14885                           
 14886                           ;MOTEapp.c: 1066: break;
 14887  0026F0  D01D               	goto	l13218
 14888  0026F2                     l13216:
 14889  0026F2  0100               	movlb	0	; () banked
 14890  0026F4  5164               	movf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 14891                           
 14892                           ; Switch size 1, requested type "space"
 14893                           ; Number of cases is 9, Range of values is 0 to 8
 14894                           ; switch strategies available:
 14895                           ; Name         Instructions Cycles
 14896                           ; simple_byte           28    15 (average)
 14897                           ;	Chosen strategy is simple_byte
 14898  0026F6  0A00               	xorlw	0	; case 0
 14899  0026F8  B4D8               	btfsc	status,2,c
 14900  0026FA  D63B               	goto	l13148
 14901  0026FC  0A01               	xorlw	1	; case 1
 14902  0026FE  B4D8               	btfsc	status,2,c
 14903  002700  D67E               	goto	l13158
 14904  002702  0A03               	xorlw	3	; case 2
 14905  002704  B4D8               	btfsc	status,2,c
 14906  002706  D6C1               	goto	l13168
 14907  002708  0A01               	xorlw	1	; case 3
 14908  00270A  B4D8               	btfsc	status,2,c
 14909  00270C  D704               	goto	l13178
 14910  00270E  0A07               	xorlw	7	; case 4
 14911  002710  B4D8               	btfsc	status,2,c
 14912  002712  D747               	goto	l13188
 14913  002714  0A01               	xorlw	1	; case 5
 14914  002716  B4D8               	btfsc	status,2,c
 14915  002718  D78A               	goto	l13198
 14916  00271A  0A03               	xorlw	3	; case 6
 14917  00271C  B4D8               	btfsc	status,2,c
 14918  00271E  D7CE               	goto	l13208
 14919  002720  0A01               	xorlw	1	; case 7
 14920  002722  B4D8               	btfsc	status,2,c
 14921  002724  D7D4               	goto	l13210
 14922  002726  0A0F               	xorlw	15	; case 8
 14923  002728  B4D8               	btfsc	status,2,c
 14924  00272A  D7DA               	goto	l13212
 14925  00272C                     l13218:
 14926                           
 14927                           ;MOTEapp.c: 1068: _delay((unsigned long)((16)*(48000000/4000.0)));
 14928  00272C  0EFA               	movlw	250
 14929  00272E  0100               	movlb	0	; () banked
 14930  002730  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14931  002732  0E58               	movlw	88
 14932  002734                     u14787:
 14933  002734  2EE8               	decfsz	wreg,f,c
 14934  002736  D7FE               	goto	u14787
 14935  002738  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14936  00273A  D7FC               	goto	u14787
 14937  00273C  D000               	nop2	
 14938                           
 14939                           ;MOTEapp.c: 1069: _delay((unsigned long)((16)*(48000000/4000.0)));
 14940  00273E  0EFA               	movlw	250
 14941  002740  0100               	movlb	0	; () banked
 14942  002742  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14943  002744  0E58               	movlw	88
 14944  002746                     u14797:
 14945  002746  2EE8               	decfsz	wreg,f,c
 14946  002748  D7FE               	goto	u14797
 14947  00274A  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14948  00274C  D7FC               	goto	u14797
 14949  00274E  D000               	nop2	
 14950                           
 14951                           ;MOTEapp.c: 1070: _delay((unsigned long)((16)*(48000000/4000.0)));
 14952  002750  0EFA               	movlw	250
 14953  002752  0100               	movlb	0	; () banked
 14954  002754  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14955  002756  0E58               	movlw	88
 14956  002758                     u14807:
 14957  002758  2EE8               	decfsz	wreg,f,c
 14958  00275A  D7FE               	goto	u14807
 14959  00275C  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14960  00275E  D7FC               	goto	u14807
 14961  002760  D000               	nop2	
 14962                           
 14963                           ;MOTEapp.c: 1071: sendCommand("mac save");
 14964  002762  0E2C               	movlw	low STR_180
 14965  002764  0100               	movlb	0	; () banked
 14966  002766  6F61               	movwf	sendCommand@string& (0+255),b
 14967  002768  0E7F               	movlw	high STR_180
 14968  00276A  0100               	movlb	0	; () banked
 14969  00276C  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14970  00276E  ECB0  F033         	call	_sendCommand	;wreg free
 14971  002772  0012               	return		;funcret
 14972  002774                     __end_of_MOTEapp_SetDataRateSetting:
 14973                           	opt stack 0
 14974                           tblptru	equ	0xFF8
 14975                           tblptrh	equ	0xFF7
 14976                           tblptrl	equ	0xFF6
 14977                           tablat	equ	0xFF5
 14978                           prodh	equ	0xFF4
 14979                           prodl	equ	0xFF3
 14980                           intcon	equ	0xFF2
 14981                           intcon3	equ	0xFF0
 14982                           postinc0	equ	0xFEE
 14983                           wreg	equ	0xFE8
 14984                           indf1	equ	0xFE7
 14985                           postdec1	equ	0xFE5
 14986                           fsr1h	equ	0xFE2
 14987                           fsr1l	equ	0xFE1
 14988                           indf2	equ	0xFDF
 14989                           fsr2h	equ	0xFDA
 14990                           fsr2l	equ	0xFD9
 14991                           status	equ	0xFD8
 14992                           
 14993 ;; *************** function _ADC_TempConversion *****************
 14994 ;; Defined at:
 14995 ;;		line 136 in file "../Includes/MccGenerated/adc.c"
 14996 ;; Parameters:    Size  Location     Type
 14997 ;;  tempRaw         1    wreg     enum E6670
 14998 ;; Auto vars:     Size  Location     Type
 14999 ;;  tempRaw         1   70[BANK0 ] enum E6670
 15000 ;;  val             4   72[BANK0 ] enum E6670
 15001 ;;  temp            1   71[BANK0 ] unsigned char 
 15002 ;; Return value:  Size  Location     Type
 15003 ;;                  1    wreg      unsigned char 
 15004 ;; Registers used:
 15005 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15006 ;; Tracked objects:
 15007 ;;		On entry : 0/0
 15008 ;;		On exit  : 0/0
 15009 ;;		Unchanged: 0/0
 15010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15011 ;;      Params:         0       0       0       0       0       0       0       0       0
 15012 ;;      Locals:         0       6       0       0       0       0       0       0       0
 15013 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15014 ;;      Totals:         0       6       0       0       0       0       0       0       0
 15015 ;;Total ram usage:        6 bytes
 15016 ;; Hardware stack levels used:    1
 15017 ;; Hardware stack levels required when called:   12
 15018 ;; This function calls:
 15019 ;;		___fladd
 15020 ;;		___fldiv
 15021 ;;		___flmul
 15022 ;;		___fltol
 15023 ;;		___xxtofl
 15024 ;; This function is called by:
 15025 ;;		_moteHandler
 15026 ;;		_moteRunningProcess
 15027 ;;		_moteApp_testSensors
 15028 ;;		_test_adc
 15029 ;; This function uses a non-reentrant model
 15030 ;;
 15031                           
 15032                           	psect	text45
 15033  0042A6                     __ptext45:
 15034                           	opt stack 0
 15035  0042A6                     _ADC_TempConversion:
 15036                           	opt stack 16
 15037                           
 15038                           ;incstack = 0
 15039                           ;ADC_TempConversion@tempRaw stored from wreg
 15040  0042A6  0100               	movlb	0	; () banked
 15041  0042A8  6FA6               	movwf	ADC_TempConversion@tempRaw& (0+255),b
 15042                           
 15043                           ;adc.c: 138: uint8_t temp;
 15044                           ;adc.c: 140: double val = ((tempRaw * 3.2)/1024);
 15045  0042AA  0ECD               	movlw	205
 15046  0042AC  0100               	movlb	0	; () banked
 15047  0042AE  6F78               	movwf	___flmul@a& (0+255),b
 15048  0042B0  0ECC               	movlw	204
 15049  0042B2  6F79               	movwf	(___flmul@a+1)& (0+255),b
 15050  0042B4  0E4C               	movlw	76
 15051  0042B6  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 15052  0042B8  0E40               	movlw	64
 15053  0042BA  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 15054  0042BC  0100               	movlb	0	; () banked
 15055  0042BE  51A6               	movf	ADC_TempConversion@tempRaw& (0+255),w,b
 15056  0042C0  0100               	movlb	0	; () banked
 15057  0042C2  6F60               	movwf	___xxtofl@val& (0+255),b
 15058  0042C4  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
 15059  0042C6  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 15060  0042C8  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 15061  0042CA  0E00               	movlw	0
 15062  0042CC  EC17  F018         	call	___xxtofl
 15063  0042D0  C060  F074         	movff	?___xxtofl,___flmul@b
 15064  0042D4  C061  F075         	movff	?___xxtofl+1,___flmul@b+1
 15065  0042D8  C062  F076         	movff	?___xxtofl+2,___flmul@b+2
 15066  0042DC  C063  F077         	movff	?___xxtofl+3,___flmul@b+3
 15067  0042E0  EC18  F00F         	call	___flmul	;wreg free
 15068  0042E4  C074  F08D         	movff	?___flmul,___fldiv@b
 15069  0042E8  C075  F08E         	movff	?___flmul+1,___fldiv@b+1
 15070  0042EC  C076  F08F         	movff	?___flmul+2,___fldiv@b+2
 15071  0042F0  C077  F090         	movff	?___flmul+3,___fldiv@b+3
 15072  0042F4  0E00               	movlw	0
 15073  0042F6  0100               	movlb	0	; () banked
 15074  0042F8  6F91               	movwf	___fldiv@a& (0+255),b
 15075  0042FA  0E00               	movlw	0
 15076  0042FC  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 15077  0042FE  0E80               	movlw	128
 15078  004300  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 15079  004302  0E44               	movlw	68
 15080  004304  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 15081  004306  ECBA  F013         	call	___fldiv	;wreg free
 15082  00430A  C08D  F0A8         	movff	?___fldiv,ADC_TempConversion@val
 15083  00430E  C08E  F0A9         	movff	?___fldiv+1,ADC_TempConversion@val+1
 15084  004312  C08F  F0AA         	movff	?___fldiv+2,ADC_TempConversion@val+2
 15085  004316  C090  F0AB         	movff	?___fldiv+3,ADC_TempConversion@val+3
 15086                           
 15087                           ;adc.c: 141: val = ((val - 0.5)*100);
 15088  00431A  0E00               	movlw	0
 15089  00431C  0100               	movlb	0	; () banked
 15090  00431E  6F64               	movwf	___fladd@a& (0+255),b
 15091  004320  0E00               	movlw	0
 15092  004322  6F65               	movwf	(___fladd@a+1)& (0+255),b
 15093  004324  0E00               	movlw	0
 15094  004326  6F66               	movwf	(___fladd@a+2)& (0+255),b
 15095  004328  0EBF               	movlw	191
 15096  00432A  6F67               	movwf	(___fladd@a+3)& (0+255),b
 15097  00432C  C0A8  F060         	movff	ADC_TempConversion@val,___fladd@b
 15098  004330  C0A9  F061         	movff	ADC_TempConversion@val+1,___fladd@b+1
 15099  004334  C0AA  F062         	movff	ADC_TempConversion@val+2,___fladd@b+2
 15100  004338  C0AB  F063         	movff	ADC_TempConversion@val+3,___fladd@b+3
 15101  00433C  ECC4  F00C         	call	___fladd	;wreg free
 15102  004340  C060  F074         	movff	?___fladd,___flmul@b
 15103  004344  C061  F075         	movff	?___fladd+1,___flmul@b+1
 15104  004348  C062  F076         	movff	?___fladd+2,___flmul@b+2
 15105  00434C  C063  F077         	movff	?___fladd+3,___flmul@b+3
 15106  004350  0E00               	movlw	0
 15107  004352  0100               	movlb	0	; () banked
 15108  004354  6F78               	movwf	___flmul@a& (0+255),b
 15109  004356  0E00               	movlw	0
 15110  004358  6F79               	movwf	(___flmul@a+1)& (0+255),b
 15111  00435A  0EC8               	movlw	200
 15112  00435C  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 15113  00435E  0E42               	movlw	66
 15114  004360  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 15115  004362  EC18  F00F         	call	___flmul	;wreg free
 15116  004366  C074  F0A8         	movff	?___flmul,ADC_TempConversion@val
 15117  00436A  C075  F0A9         	movff	?___flmul+1,ADC_TempConversion@val+1
 15118  00436E  C076  F0AA         	movff	?___flmul+2,ADC_TempConversion@val+2
 15119  004372  C077  F0AB         	movff	?___flmul+3,ADC_TempConversion@val+3
 15120                           
 15121                           ;adc.c: 142: temp = (uint8_t) val;
 15122  004376  C0A8  F060         	movff	ADC_TempConversion@val,___fltol@f1
 15123  00437A  C0A9  F061         	movff	ADC_TempConversion@val+1,___fltol@f1+1
 15124  00437E  C0AA  F062         	movff	ADC_TempConversion@val+2,___fltol@f1+2
 15125  004382  C0AB  F063         	movff	ADC_TempConversion@val+3,___fltol@f1+3
 15126  004386  ECD4  F01E         	call	___fltol	;wreg free
 15127  00438A  0100               	movlb	0	; () banked
 15128  00438C  5160               	movf	?___fltol& (0+255),w,b
 15129  00438E  0100               	movlb	0	; () banked
 15130  004390  6FA7               	movwf	ADC_TempConversion@temp& (0+255),b
 15131                           
 15132                           ; BSR set to: 0
 15133                           ;adc.c: 144: return temp;
 15134  004392  0100               	movlb	0	; () banked
 15135  004394  51A7               	movf	ADC_TempConversion@temp& (0+255),w,b
 15136  004396  0012               	return	
 15137  004398                     __end_of_ADC_TempConversion:
 15138                           	opt stack 0
 15139                           tblptru	equ	0xFF8
 15140                           tblptrh	equ	0xFF7
 15141                           tblptrl	equ	0xFF6
 15142                           tablat	equ	0xFF5
 15143                           prodh	equ	0xFF4
 15144                           prodl	equ	0xFF3
 15145                           intcon	equ	0xFF2
 15146                           intcon3	equ	0xFF0
 15147                           postinc0	equ	0xFEE
 15148                           wreg	equ	0xFE8
 15149                           indf1	equ	0xFE7
 15150                           postdec1	equ	0xFE5
 15151                           fsr1h	equ	0xFE2
 15152                           fsr1l	equ	0xFE1
 15153                           indf2	equ	0xFDF
 15154                           fsr2h	equ	0xFDA
 15155                           fsr2l	equ	0xFD9
 15156                           status	equ	0xFD8
 15157                           
 15158 ;; *************** function ___xxtofl *****************
 15159 ;; Defined at:
 15160 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
 15161 ;; Parameters:    Size  Location     Type
 15162 ;;  sign            1    wreg     unsigned char 
 15163 ;;  val             4    0[BANK0 ] long 
 15164 ;; Auto vars:     Size  Location     Type
 15165 ;;  sign            1    8[BANK0 ] unsigned char 
 15166 ;;  arg             4   10[BANK0 ] unsigned long 
 15167 ;;  exp             1    9[BANK0 ] unsigned char 
 15168 ;; Return value:  Size  Location     Type
 15169 ;;                  4    0[BANK0 ] unsigned char 
 15170 ;; Registers used:
 15171 ;;		wreg, status,2, status,0
 15172 ;; Tracked objects:
 15173 ;;		On entry : 0/0
 15174 ;;		On exit  : 0/0
 15175 ;;		Unchanged: 0/0
 15176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15177 ;;      Params:         0       4       0       0       0       0       0       0       0
 15178 ;;      Locals:         0       6       0       0       0       0       0       0       0
 15179 ;;      Temps:          0       4       0       0       0       0       0       0       0
 15180 ;;      Totals:         0      14       0       0       0       0       0       0       0
 15181 ;;Total ram usage:       14 bytes
 15182 ;; Hardware stack levels used:    1
 15183 ;; Hardware stack levels required when called:   11
 15184 ;; This function calls:
 15185 ;;		Nothing
 15186 ;; This function is called by:
 15187 ;;		_ADC_TempConversion
 15188 ;; This function uses a non-reentrant model
 15189 ;;
 15190                           
 15191                           	psect	text46
 15192  00302E                     __ptext46:
 15193                           	opt stack 0
 15194  00302E                     ___xxtofl:
 15195                           	opt stack 16
 15196                           
 15197                           ; BSR set to: 0
 15198                           ;incstack = 0
 15199                           ;___xxtofl@sign stored from wreg
 15200  00302E  0100               	movlb	0	; () banked
 15201  003030  6F68               	movwf	___xxtofl@sign& (0+255),b
 15202  003032  0100               	movlb	0	; () banked
 15203  003034  5168               	movf	___xxtofl@sign& (0+255),w,b
 15204  003036  0100               	movlb	0	; () banked
 15205  003038  B4D8               	btfsc	status,2,c
 15206  00303A  D01E               	goto	l2680
 15207                           
 15208                           ; BSR set to: 0
 15209  00303C  0100               	movlb	0	; () banked
 15210  00303E  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 15211  003040  D01B               	goto	l2680
 15212                           
 15213                           ; BSR set to: 0
 15214  003042  C060  F064         	movff	___xxtofl@val,??___xxtofl
 15215  003046  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 15216  00304A  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 15217  00304E  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 15218  003052  0100               	movlb	0	; () banked
 15219  003054  1F64               	comf	??___xxtofl& (0+255),f,b
 15220  003056  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 15221  003058  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 15222  00305A  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 15223  00305C  2B64               	incf	??___xxtofl& (0+255),f,b
 15224  00305E  0E00               	movlw	0
 15225  003060  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 15226  003062  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 15227  003064  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 15228  003066  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 15229  00306A  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 15230  00306E  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 15231  003072  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 15232  003076  D008               	goto	l12798
 15233  003078                     l2680:
 15234                           
 15235                           ; BSR set to: 0
 15236  003078  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 15237  00307C  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 15238  003080  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 15239  003084  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 15240  003088                     l12798:
 15241                           
 15242                           ; BSR set to: 0
 15243  003088  0100               	movlb	0	; () banked
 15244  00308A  5160               	movf	___xxtofl@val& (0+255),w,b
 15245  00308C  0100               	movlb	0	; () banked
 15246  00308E  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 15247  003090  0100               	movlb	0	; () banked
 15248  003092  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 15249  003094  0100               	movlb	0	; () banked
 15250  003096  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 15251  003098  A4D8               	btfss	status,2,c
 15252  00309A  D00A               	goto	l12804
 15253                           
 15254                           ; BSR set to: 0
 15255  00309C  0E00               	movlw	0
 15256  00309E  0100               	movlb	0	; () banked
 15257  0030A0  6F60               	movwf	?___xxtofl& (0+255),b
 15258  0030A2  0E00               	movlw	0
 15259  0030A4  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 15260  0030A6  0E00               	movlw	0
 15261  0030A8  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 15262  0030AA  0E00               	movlw	0
 15263  0030AC  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 15264                           
 15265                           ; BSR set to: 0
 15266  0030AE  0012               	return	
 15267  0030B0                     l12804:
 15268                           
 15269                           ; BSR set to: 0
 15270  0030B0  0E96               	movlw	150
 15271  0030B2  0100               	movlb	0	; () banked
 15272  0030B4  6F69               	movwf	___xxtofl@exp& (0+255),b
 15273  0030B6  D008               	goto	l12808
 15274  0030B8                     l12806:
 15275                           
 15276                           ; BSR set to: 0
 15277  0030B8  0100               	movlb	0	; () banked
 15278  0030BA  2B69               	incf	___xxtofl@exp& (0+255),f,b
 15279  0030BC  0100               	movlb	0	; () banked
 15280  0030BE  90D8               	bcf	status,0,c
 15281  0030C0  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 15282  0030C2  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 15283  0030C4  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 15284  0030C6  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 15285  0030C8                     l12808:
 15286                           
 15287                           ; BSR set to: 0
 15288  0030C8  0E00               	movlw	0
 15289  0030CA  0100               	movlb	0	; () banked
 15290  0030CC  156A               	andwf	___xxtofl@arg& (0+255),w,b
 15291  0030CE  0100               	movlb	0	; () banked
 15292  0030D0  6F64               	movwf	??___xxtofl& (0+255),b
 15293  0030D2  0E00               	movlw	0
 15294  0030D4  0100               	movlb	0	; () banked
 15295  0030D6  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 15296  0030D8  0100               	movlb	0	; () banked
 15297  0030DA  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 15298  0030DC  0E00               	movlw	0
 15299  0030DE  0100               	movlb	0	; () banked
 15300  0030E0  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 15301  0030E2  0100               	movlb	0	; () banked
 15302  0030E4  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 15303  0030E6  0EFE               	movlw	254
 15304  0030E8  0100               	movlb	0	; () banked
 15305  0030EA  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 15306  0030EC  0100               	movlb	0	; () banked
 15307  0030EE  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 15308  0030F0  0100               	movlb	0	; () banked
 15309  0030F2  5164               	movf	??___xxtofl& (0+255),w,b
 15310  0030F4  0100               	movlb	0	; () banked
 15311  0030F6  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 15312  0030F8  0100               	movlb	0	; () banked
 15313  0030FA  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 15314  0030FC  0100               	movlb	0	; () banked
 15315  0030FE  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 15316  003100  B4D8               	btfsc	status,2,c
 15317  003102  D010               	goto	l2687
 15318  003104  D7D9               	goto	l12806
 15319  003106                     l12810:
 15320                           
 15321                           ; BSR set to: 0
 15322  003106  0100               	movlb	0	; () banked
 15323  003108  2B69               	incf	___xxtofl@exp& (0+255),f,b
 15324                           
 15325                           ; BSR set to: 0
 15326  00310A  0E01               	movlw	1
 15327  00310C  0100               	movlb	0	; () banked
 15328  00310E  276A               	addwf	___xxtofl@arg& (0+255),f,b
 15329  003110  0E00               	movlw	0
 15330  003112  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 15331  003114  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 15332  003116  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 15333                           
 15334                           ; BSR set to: 0
 15335  003118  0100               	movlb	0	; () banked
 15336  00311A  90D8               	bcf	status,0,c
 15337  00311C  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 15338  00311E  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 15339  003120  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 15340  003122  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 15341  003124                     l2687:
 15342                           
 15343                           ; BSR set to: 0
 15344  003124  0E00               	movlw	0
 15345  003126  0100               	movlb	0	; () banked
 15346  003128  156A               	andwf	___xxtofl@arg& (0+255),w,b
 15347  00312A  0100               	movlb	0	; () banked
 15348  00312C  6F64               	movwf	??___xxtofl& (0+255),b
 15349  00312E  0E00               	movlw	0
 15350  003130  0100               	movlb	0	; () banked
 15351  003132  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 15352  003134  0100               	movlb	0	; () banked
 15353  003136  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 15354  003138  0E00               	movlw	0
 15355  00313A  0100               	movlb	0	; () banked
 15356  00313C  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 15357  00313E  0100               	movlb	0	; () banked
 15358  003140  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 15359  003142  0EFF               	movlw	255
 15360  003144  0100               	movlb	0	; () banked
 15361  003146  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 15362  003148  0100               	movlb	0	; () banked
 15363  00314A  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 15364  00314C  0100               	movlb	0	; () banked
 15365  00314E  5164               	movf	??___xxtofl& (0+255),w,b
 15366  003150  0100               	movlb	0	; () banked
 15367  003152  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 15368  003154  0100               	movlb	0	; () banked
 15369  003156  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 15370  003158  0100               	movlb	0	; () banked
 15371  00315A  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 15372  00315C  B4D8               	btfsc	status,2,c
 15373  00315E  D009               	goto	l12818
 15374  003160  D7D2               	goto	l12810
 15375  003162                     l12816:
 15376                           
 15377                           ; BSR set to: 0
 15378  003162  0100               	movlb	0	; () banked
 15379  003164  0769               	decf	___xxtofl@exp& (0+255),f,b
 15380  003166  0100               	movlb	0	; () banked
 15381  003168  90D8               	bcf	status,0,c
 15382  00316A  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 15383  00316C  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 15384  00316E  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 15385  003170  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 15386  003172                     l12818:
 15387                           
 15388                           ; BSR set to: 0
 15389  003172  0100               	movlb	0	; () banked
 15390  003174  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 15391  003176  D004               	goto	l2694
 15392                           
 15393                           ; BSR set to: 0
 15394  003178  0E02               	movlw	2
 15395  00317A  0100               	movlb	0	; () banked
 15396  00317C  6169               	cpfslt	___xxtofl@exp& (0+255),b
 15397  00317E  D7F1               	goto	l12816
 15398  003180                     l2694:
 15399                           
 15400                           ; BSR set to: 0
 15401  003180  0100               	movlb	0	; () banked
 15402  003182  B169               	btfsc	___xxtofl@exp& (0+255),0,b
 15403  003184  D009               	goto	l2695
 15404                           
 15405                           ; BSR set to: 0
 15406  003186  0EFF               	movlw	255
 15407  003188  0100               	movlb	0	; () banked
 15408  00318A  176A               	andwf	___xxtofl@arg& (0+255),f,b
 15409  00318C  0EFF               	movlw	255
 15410  00318E  176B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 15411  003190  0E7F               	movlw	127
 15412  003192  176C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 15413  003194  0EFF               	movlw	255
 15414  003196  176D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 15415  003198                     l2695:
 15416                           
 15417                           ; BSR set to: 0
 15418  003198  0100               	movlb	0	; () banked
 15419  00319A  90D8               	bcf	status,0,c
 15420  00319C  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 15421  00319E  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 15422  0031A2  0100               	movlb	0	; () banked
 15423  0031A4  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 15424  0031A6  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 15425  0031A8  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 15426  0031AA  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 15427  0031AE  0100               	movlb	0	; () banked
 15428  0031B0  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 15429  0031B2  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 15430  0031B4  6B64               	clrf	??___xxtofl& (0+255),b
 15431  0031B6  0100               	movlb	0	; () banked
 15432  0031B8  5164               	movf	??___xxtofl& (0+255),w,b
 15433  0031BA  0100               	movlb	0	; () banked
 15434  0031BC  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 15435  0031BE  0100               	movlb	0	; () banked
 15436  0031C0  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 15437  0031C2  0100               	movlb	0	; () banked
 15438  0031C4  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 15439  0031C6  0100               	movlb	0	; () banked
 15440  0031C8  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 15441  0031CA  0100               	movlb	0	; () banked
 15442  0031CC  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 15443  0031CE  0100               	movlb	0	; () banked
 15444  0031D0  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 15445  0031D2  0100               	movlb	0	; () banked
 15446  0031D4  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 15447                           
 15448                           ; BSR set to: 0
 15449  0031D6  0100               	movlb	0	; () banked
 15450  0031D8  5168               	movf	___xxtofl@sign& (0+255),w,b
 15451  0031DA  0100               	movlb	0	; () banked
 15452  0031DC  B4D8               	btfsc	status,2,c
 15453  0031DE  D005               	goto	l12830
 15454                           
 15455                           ; BSR set to: 0
 15456  0031E0  0100               	movlb	0	; () banked
 15457  0031E2  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 15458  0031E4  D002               	goto	l12830
 15459                           
 15460                           ; BSR set to: 0
 15461  0031E6  0100               	movlb	0	; () banked
 15462  0031E8  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 15463  0031EA                     l12830:
 15464                           
 15465                           ; BSR set to: 0
 15466  0031EA  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 15467  0031EE  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 15468  0031F2  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 15469  0031F6  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 15470  0031FA  0012               	return	
 15471  0031FC                     __end_of___xxtofl:
 15472                           	opt stack 0
 15473                           tblptru	equ	0xFF8
 15474                           tblptrh	equ	0xFF7
 15475                           tblptrl	equ	0xFF6
 15476                           tablat	equ	0xFF5
 15477                           prodh	equ	0xFF4
 15478                           prodl	equ	0xFF3
 15479                           intcon	equ	0xFF2
 15480                           intcon3	equ	0xFF0
 15481                           postinc0	equ	0xFEE
 15482                           wreg	equ	0xFE8
 15483                           indf1	equ	0xFE7
 15484                           postdec1	equ	0xFE5
 15485                           fsr1h	equ	0xFE2
 15486                           fsr1l	equ	0xFE1
 15487                           indf2	equ	0xFDF
 15488                           fsr2h	equ	0xFDA
 15489                           fsr2l	equ	0xFD9
 15490                           status	equ	0xFD8
 15491                           
 15492 ;; *************** function ___fltol *****************
 15493 ;; Defined at:
 15494 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
 15495 ;; Parameters:    Size  Location     Type
 15496 ;;  f1              4    0[BANK0 ] unsigned char 
 15497 ;; Auto vars:     Size  Location     Type
 15498 ;;  exp1            1    9[BANK0 ] unsigned char 
 15499 ;;  sign1           1    8[BANK0 ] unsigned char 
 15500 ;; Return value:  Size  Location     Type
 15501 ;;                  4    0[BANK0 ] long 
 15502 ;; Registers used:
 15503 ;;		wreg, status,2, status,0
 15504 ;; Tracked objects:
 15505 ;;		On entry : 0/0
 15506 ;;		On exit  : 0/0
 15507 ;;		Unchanged: 0/0
 15508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15509 ;;      Params:         0       4       0       0       0       0       0       0       0
 15510 ;;      Locals:         0       2       0       0       0       0       0       0       0
 15511 ;;      Temps:          0       4       0       0       0       0       0       0       0
 15512 ;;      Totals:         0      10       0       0       0       0       0       0       0
 15513 ;;Total ram usage:       10 bytes
 15514 ;; Hardware stack levels used:    1
 15515 ;; Hardware stack levels required when called:   11
 15516 ;; This function calls:
 15517 ;;		Nothing
 15518 ;; This function is called by:
 15519 ;;		_ADC_TempConversion
 15520 ;; This function uses a non-reentrant model
 15521 ;;
 15522                           
 15523                           	psect	text47
 15524  003DA8                     __ptext47:
 15525                           	opt stack 0
 15526  003DA8                     ___fltol:
 15527                           	opt stack 16
 15528                           
 15529                           ; BSR set to: 0
 15530                           ;incstack = 0
 15531  003DA8  0100               	movlb	0	; () banked
 15532  003DAA  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 15533  003DAC  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 15534  003DAE  0100               	movlb	0	; () banked
 15535  003DB0  6F69               	movwf	___fltol@exp1& (0+255),b
 15536  003DB2  0100               	movlb	0	; () banked
 15537  003DB4  5169               	movf	___fltol@exp1& (0+255),w,b
 15538  003DB6  A4D8               	btfss	status,2,c
 15539  003DB8  D00A               	goto	l12690
 15540                           
 15541                           ; BSR set to: 0
 15542  003DBA  0E00               	movlw	0
 15543  003DBC  0100               	movlb	0	; () banked
 15544  003DBE  6F60               	movwf	?___fltol& (0+255),b
 15545  003DC0  0E00               	movlw	0
 15546  003DC2  6F61               	movwf	(?___fltol+1)& (0+255),b
 15547  003DC4  0E00               	movlw	0
 15548  003DC6  6F62               	movwf	(?___fltol+2)& (0+255),b
 15549  003DC8  0E00               	movlw	0
 15550  003DCA  6F63               	movwf	(?___fltol+3)& (0+255),b
 15551                           
 15552                           ; BSR set to: 0
 15553  003DCC  0012               	return	
 15554  003DCE                     l12690:
 15555                           
 15556                           ; BSR set to: 0
 15557  003DCE  C060  F064         	movff	___fltol@f1,??___fltol
 15558  003DD2  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 15559  003DD6  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 15560  003DDA  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 15561  003DDE  0E20               	movlw	32
 15562  003DE0  D006               	goto	u11860
 15563  003DE2                     u11865:
 15564  003DE2  0100               	movlb	0	; () banked
 15565  003DE4  90D8               	bcf	status,0,c
 15566  003DE6  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 15567  003DE8  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 15568  003DEA  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 15569  003DEC  3364               	rrcf	??___fltol& (0+255),f,b
 15570  003DEE                     u11860:
 15571  003DEE  2EE8               	decfsz	wreg,f,c
 15572  003DF0  D7F8               	goto	u11865
 15573  003DF2  0100               	movlb	0	; () banked
 15574  003DF4  5164               	movf	??___fltol& (0+255),w,b
 15575  003DF6  0100               	movlb	0	; () banked
 15576  003DF8  6F68               	movwf	___fltol@sign1& (0+255),b
 15577                           
 15578                           ; BSR set to: 0
 15579  003DFA  0100               	movlb	0	; () banked
 15580  003DFC  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 15581                           
 15582                           ; BSR set to: 0
 15583  003DFE  0EFF               	movlw	255
 15584  003E00  0100               	movlb	0	; () banked
 15585  003E02  1760               	andwf	___fltol@f1& (0+255),f,b
 15586  003E04  0EFF               	movlw	255
 15587  003E06  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 15588  003E08  0EFF               	movlw	255
 15589  003E0A  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 15590  003E0C  0E00               	movlw	0
 15591  003E0E  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 15592                           
 15593                           ; BSR set to: 0
 15594  003E10  0E96               	movlw	150
 15595  003E12  0100               	movlb	0	; () banked
 15596  003E14  5F69               	subwf	___fltol@exp1& (0+255),f,b
 15597                           
 15598                           ; BSR set to: 0
 15599  003E16  0100               	movlb	0	; () banked
 15600  003E18  AF69               	btfss	___fltol@exp1& (0+255),7,b
 15601  003E1A  D01A               	goto	l12710
 15602                           
 15603                           ; BSR set to: 0
 15604  003E1C  0100               	movlb	0	; () banked
 15605  003E1E  5169               	movf	___fltol@exp1& (0+255),w,b
 15606  003E20  0A80               	xorlw	128
 15607  003E22  0F97               	addlw	151
 15608  003E24  B0D8               	btfsc	status,0,c
 15609  003E26  D00A               	goto	l12706
 15610                           
 15611                           ; BSR set to: 0
 15612  003E28  0E00               	movlw	0
 15613  003E2A  0100               	movlb	0	; () banked
 15614  003E2C  6F60               	movwf	?___fltol& (0+255),b
 15615  003E2E  0E00               	movlw	0
 15616  003E30  6F61               	movwf	(?___fltol+1)& (0+255),b
 15617  003E32  0E00               	movlw	0
 15618  003E34  6F62               	movwf	(?___fltol+2)& (0+255),b
 15619  003E36  0E00               	movlw	0
 15620  003E38  6F63               	movwf	(?___fltol+3)& (0+255),b
 15621                           
 15622                           ; BSR set to: 0
 15623  003E3A  0012               	return	
 15624  003E3C                     l12706:
 15625                           
 15626                           ; BSR set to: 0
 15627  003E3C  0100               	movlb	0	; () banked
 15628  003E3E  90D8               	bcf	status,0,c
 15629  003E40  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 15630  003E42  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 15631  003E44  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 15632  003E46  3360               	rrcf	___fltol@f1& (0+255),f,b
 15633                           
 15634                           ; BSR set to: 0
 15635  003E48  0100               	movlb	0	; () banked
 15636  003E4A  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 15637  003E4C  D7F7               	goto	l12706
 15638                           
 15639                           ; BSR set to: 0
 15640  003E4E  D01B               	goto	l12720
 15641  003E50                     l12710:
 15642                           
 15643                           ; BSR set to: 0
 15644  003E50  0E1F               	movlw	31
 15645  003E52  0100               	movlb	0	; () banked
 15646  003E54  6569               	cpfsgt	___fltol@exp1& (0+255),b
 15647  003E56  D012               	goto	l12718
 15648                           
 15649                           ; BSR set to: 0
 15650  003E58  0E00               	movlw	0
 15651  003E5A  0100               	movlb	0	; () banked
 15652  003E5C  6F60               	movwf	?___fltol& (0+255),b
 15653  003E5E  0E00               	movlw	0
 15654  003E60  6F61               	movwf	(?___fltol+1)& (0+255),b
 15655  003E62  0E00               	movlw	0
 15656  003E64  6F62               	movwf	(?___fltol+2)& (0+255),b
 15657  003E66  0E00               	movlw	0
 15658  003E68  6F63               	movwf	(?___fltol+3)& (0+255),b
 15659                           
 15660                           ; BSR set to: 0
 15661  003E6A  0012               	return	
 15662  003E6C                     l12716:
 15663                           
 15664                           ; BSR set to: 0
 15665  003E6C  0100               	movlb	0	; () banked
 15666  003E6E  90D8               	bcf	status,0,c
 15667  003E70  3760               	rlcf	___fltol@f1& (0+255),f,b
 15668  003E72  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 15669  003E74  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 15670  003E76  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 15671  003E78  0100               	movlb	0	; () banked
 15672  003E7A  0769               	decf	___fltol@exp1& (0+255),f,b
 15673  003E7C                     l12718:
 15674                           
 15675                           ; BSR set to: 0
 15676  003E7C  0100               	movlb	0	; () banked
 15677  003E7E  5169               	movf	___fltol@exp1& (0+255),w,b
 15678  003E80  0100               	movlb	0	; () banked
 15679  003E82  A4D8               	btfss	status,2,c
 15680  003E84  D7F3               	goto	l12716
 15681  003E86                     l12720:
 15682                           
 15683                           ; BSR set to: 0
 15684  003E86  0100               	movlb	0	; () banked
 15685  003E88  5168               	movf	___fltol@sign1& (0+255),w,b
 15686  003E8A  0100               	movlb	0	; () banked
 15687  003E8C  B4D8               	btfsc	status,2,c
 15688  003E8E  D009               	goto	l12724
 15689                           
 15690                           ; BSR set to: 0
 15691  003E90  0100               	movlb	0	; () banked
 15692  003E92  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 15693  003E94  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 15694  003E96  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 15695  003E98  6D60               	negf	___fltol@f1& (0+255),b
 15696  003E9A  0E00               	movlw	0
 15697  003E9C  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 15698  003E9E  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 15699  003EA0  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 15700  003EA2                     l12724:
 15701                           
 15702                           ; BSR set to: 0
 15703  003EA2  C060  F060         	movff	___fltol@f1,?___fltol
 15704  003EA6  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 15705  003EAA  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 15706  003EAE  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 15707  003EB2  0012               	return	
 15708  003EB4                     __end_of___fltol:
 15709                           	opt stack 0
 15710                           tblptru	equ	0xFF8
 15711                           tblptrh	equ	0xFF7
 15712                           tblptrl	equ	0xFF6
 15713                           tablat	equ	0xFF5
 15714                           prodh	equ	0xFF4
 15715                           prodl	equ	0xFF3
 15716                           intcon	equ	0xFF2
 15717                           intcon3	equ	0xFF0
 15718                           postinc0	equ	0xFEE
 15719                           wreg	equ	0xFE8
 15720                           indf1	equ	0xFE7
 15721                           postdec1	equ	0xFE5
 15722                           fsr1h	equ	0xFE2
 15723                           fsr1l	equ	0xFE1
 15724                           indf2	equ	0xFDF
 15725                           fsr2h	equ	0xFDA
 15726                           fsr2l	equ	0xFD9
 15727                           status	equ	0xFD8
 15728                           
 15729 ;; *************** function ___flmul *****************
 15730 ;; Defined at:
 15731 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
 15732 ;; Parameters:    Size  Location     Type
 15733 ;;  b               4   20[BANK0 ] long 
 15734 ;;  a               4   24[BANK0 ] long 
 15735 ;; Auto vars:     Size  Location     Type
 15736 ;;  prod            4   39[BANK0 ] struct .
 15737 ;;  grs             4   34[BANK0 ] unsigned long 
 15738 ;;  temp            2   43[BANK0 ] struct .
 15739 ;;  bexp            1   38[BANK0 ] unsigned char 
 15740 ;;  aexp            1   33[BANK0 ] unsigned char 
 15741 ;;  sign            1   32[BANK0 ] unsigned char 
 15742 ;; Return value:  Size  Location     Type
 15743 ;;                  4   20[BANK0 ] unsigned char 
 15744 ;; Registers used:
 15745 ;;		wreg, status,2, status,0, prodl, prodh
 15746 ;; Tracked objects:
 15747 ;;		On entry : 0/0
 15748 ;;		On exit  : 0/0
 15749 ;;		Unchanged: 0/0
 15750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15751 ;;      Params:         0       8       0       0       0       0       0       0       0
 15752 ;;      Locals:         0      13       0       0       0       0       0       0       0
 15753 ;;      Temps:          0       4       0       0       0       0       0       0       0
 15754 ;;      Totals:         0      25       0       0       0       0       0       0       0
 15755 ;;Total ram usage:       25 bytes
 15756 ;; Hardware stack levels used:    1
 15757 ;; Hardware stack levels required when called:   11
 15758 ;; This function calls:
 15759 ;;		Nothing
 15760 ;; This function is called by:
 15761 ;;		_ADC_TempConversion
 15762 ;; This function uses a non-reentrant model
 15763 ;;
 15764                           
 15765                           	psect	text48
 15766  001E30                     __ptext48:
 15767                           	opt stack 0
 15768  001E30                     ___flmul:
 15769                           	opt stack 16
 15770                           
 15771                           ; BSR set to: 0
 15772                           ;incstack = 0
 15773  001E30  0100               	movlb	0	; () banked
 15774  001E32  5177               	movf	(___flmul@b+3)& (0+255),w,b
 15775  001E34  0B80               	andlw	128
 15776  001E36  0100               	movlb	0	; () banked
 15777  001E38  6F80               	movwf	___flmul@sign& (0+255),b
 15778  001E3A  0100               	movlb	0	; () banked
 15779  001E3C  5177               	movf	(___flmul@b+3)& (0+255),w,b
 15780  001E3E  2577               	addwf	(___flmul@b+3)& (0+255),w,b
 15781  001E40  0100               	movlb	0	; () banked
 15782  001E42  6F86               	movwf	___flmul@bexp& (0+255),b
 15783                           
 15784                           ; BSR set to: 0
 15785  001E44  0100               	movlb	0	; () banked
 15786  001E46  AF76               	btfss	(___flmul@b+2)& (0+255),7,b
 15787  001E48  D002               	goto	l12524
 15788                           
 15789                           ; BSR set to: 0
 15790  001E4A  0100               	movlb	0	; () banked
 15791  001E4C  8186               	bsf	___flmul@bexp& (0+255),0,b
 15792  001E4E                     l12524:
 15793                           
 15794                           ; BSR set to: 0
 15795  001E4E  0100               	movlb	0	; () banked
 15796  001E50  5186               	movf	___flmul@bexp& (0+255),w,b
 15797  001E52  0100               	movlb	0	; () banked
 15798  001E54  B4D8               	btfsc	status,2,c
 15799  001E56  D010               	goto	l12532
 15800                           
 15801                           ; BSR set to: 0
 15802  001E58  0100               	movlb	0	; () banked
 15803  001E5A  2986               	incf	___flmul@bexp& (0+255),w,b
 15804  001E5C  A4D8               	btfss	status,2,c
 15805  001E5E  D009               	goto	l12530
 15806                           
 15807                           ; BSR set to: 0
 15808  001E60  0E00               	movlw	0
 15809  001E62  0100               	movlb	0	; () banked
 15810  001E64  6F74               	movwf	___flmul@b& (0+255),b
 15811  001E66  0E00               	movlw	0
 15812  001E68  6F75               	movwf	(___flmul@b+1)& (0+255),b
 15813  001E6A  0E00               	movlw	0
 15814  001E6C  6F76               	movwf	(___flmul@b+2)& (0+255),b
 15815  001E6E  0E00               	movlw	0
 15816  001E70  6F77               	movwf	(___flmul@b+3)& (0+255),b
 15817  001E72                     l12530:
 15818                           
 15819                           ; BSR set to: 0
 15820  001E72  0100               	movlb	0	; () banked
 15821  001E74  8F76               	bsf	(___flmul@b+2)& (0+255),7,b
 15822  001E76  D009               	goto	l12534
 15823  001E78                     l12532:
 15824                           
 15825                           ; BSR set to: 0
 15826  001E78  0E00               	movlw	0
 15827  001E7A  0100               	movlb	0	; () banked
 15828  001E7C  6F74               	movwf	___flmul@b& (0+255),b
 15829  001E7E  0E00               	movlw	0
 15830  001E80  6F75               	movwf	(___flmul@b+1)& (0+255),b
 15831  001E82  0E00               	movlw	0
 15832  001E84  6F76               	movwf	(___flmul@b+2)& (0+255),b
 15833  001E86  0E00               	movlw	0
 15834  001E88  6F77               	movwf	(___flmul@b+3)& (0+255),b
 15835  001E8A                     l12534:
 15836                           
 15837                           ; BSR set to: 0
 15838  001E8A  0100               	movlb	0	; () banked
 15839  001E8C  517B               	movf	(___flmul@a+3)& (0+255),w,b
 15840  001E8E  0B80               	andlw	128
 15841  001E90  0100               	movlb	0	; () banked
 15842  001E92  1B80               	xorwf	___flmul@sign& (0+255),f,b
 15843                           
 15844                           ; BSR set to: 0
 15845  001E94  0100               	movlb	0	; () banked
 15846  001E96  517B               	movf	(___flmul@a+3)& (0+255),w,b
 15847  001E98  257B               	addwf	(___flmul@a+3)& (0+255),w,b
 15848  001E9A  0100               	movlb	0	; () banked
 15849  001E9C  6F81               	movwf	___flmul@aexp& (0+255),b
 15850                           
 15851                           ; BSR set to: 0
 15852  001E9E  0100               	movlb	0	; () banked
 15853  001EA0  AF7A               	btfss	(___flmul@a+2)& (0+255),7,b
 15854  001EA2  D002               	goto	l12542
 15855                           
 15856                           ; BSR set to: 0
 15857  001EA4  0100               	movlb	0	; () banked
 15858  001EA6  8181               	bsf	___flmul@aexp& (0+255),0,b
 15859  001EA8                     l12542:
 15860                           
 15861                           ; BSR set to: 0
 15862  001EA8  0100               	movlb	0	; () banked
 15863  001EAA  5181               	movf	___flmul@aexp& (0+255),w,b
 15864  001EAC  0100               	movlb	0	; () banked
 15865  001EAE  B4D8               	btfsc	status,2,c
 15866  001EB0  D010               	goto	l12550
 15867                           
 15868                           ; BSR set to: 0
 15869  001EB2  0100               	movlb	0	; () banked
 15870  001EB4  2981               	incf	___flmul@aexp& (0+255),w,b
 15871  001EB6  A4D8               	btfss	status,2,c
 15872  001EB8  D009               	goto	l12548
 15873                           
 15874                           ; BSR set to: 0
 15875  001EBA  0E00               	movlw	0
 15876  001EBC  0100               	movlb	0	; () banked
 15877  001EBE  6F78               	movwf	___flmul@a& (0+255),b
 15878  001EC0  0E00               	movlw	0
 15879  001EC2  6F79               	movwf	(___flmul@a+1)& (0+255),b
 15880  001EC4  0E00               	movlw	0
 15881  001EC6  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 15882  001EC8  0E00               	movlw	0
 15883  001ECA  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 15884  001ECC                     l12548:
 15885                           
 15886                           ; BSR set to: 0
 15887  001ECC  0100               	movlb	0	; () banked
 15888  001ECE  8F7A               	bsf	(___flmul@a+2)& (0+255),7,b
 15889  001ED0  D009               	goto	l2641
 15890  001ED2                     l12550:
 15891                           
 15892                           ; BSR set to: 0
 15893  001ED2  0E00               	movlw	0
 15894  001ED4  0100               	movlb	0	; () banked
 15895  001ED6  6F78               	movwf	___flmul@a& (0+255),b
 15896  001ED8  0E00               	movlw	0
 15897  001EDA  6F79               	movwf	(___flmul@a+1)& (0+255),b
 15898  001EDC  0E00               	movlw	0
 15899  001EDE  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 15900  001EE0  0E00               	movlw	0
 15901  001EE2  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 15902  001EE4                     l2641:
 15903                           
 15904                           ; BSR set to: 0
 15905  001EE4  0100               	movlb	0	; () banked
 15906  001EE6  5181               	movf	___flmul@aexp& (0+255),w,b
 15907  001EE8  0100               	movlb	0	; () banked
 15908  001EEA  B4D8               	btfsc	status,2,c
 15909  001EEC  D005               	goto	l12554
 15910                           
 15911                           ; BSR set to: 0
 15912  001EEE  0100               	movlb	0	; () banked
 15913  001EF0  5186               	movf	___flmul@bexp& (0+255),w,b
 15914  001EF2  0100               	movlb	0	; () banked
 15915  001EF4  A4D8               	btfss	status,2,c
 15916  001EF6  D00A               	goto	l12558
 15917  001EF8                     l12554:
 15918                           
 15919                           ; BSR set to: 0
 15920  001EF8  0E00               	movlw	0
 15921  001EFA  0100               	movlb	0	; () banked
 15922  001EFC  6F74               	movwf	?___flmul& (0+255),b
 15923  001EFE  0E00               	movlw	0
 15924  001F00  6F75               	movwf	(?___flmul+1)& (0+255),b
 15925  001F02  0E00               	movlw	0
 15926  001F04  6F76               	movwf	(?___flmul+2)& (0+255),b
 15927  001F06  0E00               	movlw	0
 15928  001F08  6F77               	movwf	(?___flmul+3)& (0+255),b
 15929                           
 15930                           ; BSR set to: 0
 15931  001F0A  0012               	return	
 15932  001F0C                     l12558:
 15933                           
 15934                           ; BSR set to: 0
 15935  001F0C  0100               	movlb	0	; () banked
 15936  001F0E  517A               	movf	(___flmul@a+2)& (0+255),w,b
 15937  001F10  0100               	movlb	0	; () banked
 15938  001F12  0374               	mulwf	___flmul@b& (0+255),b
 15939  001F14  CFF3 F08B          	movff	prodl,___flmul@temp
 15940  001F18  CFF4 F08C          	movff	prodh,___flmul@temp+1
 15941                           
 15942                           ; BSR set to: 0
 15943  001F1C  0100               	movlb	0	; () banked
 15944  001F1E  518B               	movf	___flmul@temp& (0+255),w,b
 15945  001F20  0100               	movlb	0	; () banked
 15946  001F22  6F82               	movwf	___flmul@grs& (0+255),b
 15947  001F24  6B83               	clrf	(___flmul@grs+1)& (0+255),b
 15948  001F26  6B84               	clrf	(___flmul@grs+2)& (0+255),b
 15949  001F28  6B85               	clrf	(___flmul@grs+3)& (0+255),b
 15950                           
 15951                           ; BSR set to: 0
 15952  001F2A  0100               	movlb	0	; () banked
 15953  001F2C  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 15954  001F2E  0100               	movlb	0	; () banked
 15955  001F30  6F87               	movwf	___flmul@prod& (0+255),b
 15956  001F32  6B88               	clrf	(___flmul@prod+1)& (0+255),b
 15957  001F34  6B89               	clrf	(___flmul@prod+2)& (0+255),b
 15958  001F36  6B8A               	clrf	(___flmul@prod+3)& (0+255),b
 15959  001F38  0100               	movlb	0	; () banked
 15960  001F3A  5179               	movf	(___flmul@a+1)& (0+255),w,b
 15961  001F3C  0100               	movlb	0	; () banked
 15962  001F3E  0375               	mulwf	(___flmul@b+1)& (0+255),b
 15963  001F40  CFF3 F08B          	movff	prodl,___flmul@temp
 15964  001F44  CFF4 F08C          	movff	prodh,___flmul@temp+1
 15965                           
 15966                           ; BSR set to: 0
 15967  001F48  0100               	movlb	0	; () banked
 15968  001F4A  518B               	movf	___flmul@temp& (0+255),w,b
 15969  001F4C  0100               	movlb	0	; () banked
 15970  001F4E  2782               	addwf	___flmul@grs& (0+255),f,b
 15971  001F50  0E00               	movlw	0
 15972  001F52  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15973  001F54  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
 15974  001F56  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
 15975                           
 15976                           ; BSR set to: 0
 15977  001F58  0100               	movlb	0	; () banked
 15978  001F5A  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 15979  001F5C  0100               	movlb	0	; () banked
 15980  001F5E  2787               	addwf	___flmul@prod& (0+255),f,b
 15981  001F60  0E00               	movlw	0
 15982  001F62  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 15983  001F64  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 15984  001F66  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 15985  001F68  0100               	movlb	0	; () banked
 15986  001F6A  5178               	movf	___flmul@a& (0+255),w,b
 15987  001F6C  0100               	movlb	0	; () banked
 15988  001F6E  0376               	mulwf	(___flmul@b+2)& (0+255),b
 15989  001F70  CFF3 F08B          	movff	prodl,___flmul@temp
 15990  001F74  CFF4 F08C          	movff	prodh,___flmul@temp+1
 15991                           
 15992                           ; BSR set to: 0
 15993  001F78  0100               	movlb	0	; () banked
 15994  001F7A  518B               	movf	___flmul@temp& (0+255),w,b
 15995  001F7C  0100               	movlb	0	; () banked
 15996  001F7E  2782               	addwf	___flmul@grs& (0+255),f,b
 15997  001F80  0E00               	movlw	0
 15998  001F82  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
 15999  001F84  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16000  001F86  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16001                           
 16002                           ; BSR set to: 0
 16003  001F88  0100               	movlb	0	; () banked
 16004  001F8A  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16005  001F8C  0100               	movlb	0	; () banked
 16006  001F8E  2787               	addwf	___flmul@prod& (0+255),f,b
 16007  001F90  0E00               	movlw	0
 16008  001F92  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16009  001F94  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16010  001F96  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16011                           
 16012                           ; BSR set to: 0
 16013  001F98  C084  F085         	movff	___flmul@grs+2,___flmul@grs+3
 16014  001F9C  C083  F084         	movff	___flmul@grs+1,___flmul@grs+2
 16015  001FA0  C082  F083         	movff	___flmul@grs,___flmul@grs+1
 16016  001FA4  0100               	movlb	0	; () banked
 16017  001FA6  6B82               	clrf	___flmul@grs& (0+255),b
 16018                           
 16019                           ; BSR set to: 0
 16020  001FA8  0100               	movlb	0	; () banked
 16021  001FAA  5178               	movf	___flmul@a& (0+255),w,b
 16022  001FAC  0100               	movlb	0	; () banked
 16023  001FAE  0375               	mulwf	(___flmul@b+1)& (0+255),b
 16024  001FB0  CFF3 F08B          	movff	prodl,___flmul@temp
 16025  001FB4  CFF4 F08C          	movff	prodh,___flmul@temp+1
 16026                           
 16027                           ; BSR set to: 0
 16028  001FB8  0100               	movlb	0	; () banked
 16029  001FBA  518B               	movf	___flmul@temp& (0+255),w,b
 16030  001FBC  0100               	movlb	0	; () banked
 16031  001FBE  2782               	addwf	___flmul@grs& (0+255),f,b
 16032  001FC0  0100               	movlb	0	; () banked
 16033  001FC2  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16034  001FC4  0100               	movlb	0	; () banked
 16035  001FC6  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16036  001FC8  0E00               	movlw	0
 16037  001FCA  0100               	movlb	0	; () banked
 16038  001FCC  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16039  001FCE  0E00               	movlw	0
 16040  001FD0  0100               	movlb	0	; () banked
 16041  001FD2  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16042                           
 16043                           ; BSR set to: 0
 16044  001FD4  0100               	movlb	0	; () banked
 16045  001FD6  5179               	movf	(___flmul@a+1)& (0+255),w,b
 16046  001FD8  0100               	movlb	0	; () banked
 16047  001FDA  0374               	mulwf	___flmul@b& (0+255),b
 16048  001FDC  CFF3 F08B          	movff	prodl,___flmul@temp
 16049  001FE0  CFF4 F08C          	movff	prodh,___flmul@temp+1
 16050                           
 16051                           ; BSR set to: 0
 16052  001FE4  0100               	movlb	0	; () banked
 16053  001FE6  518B               	movf	___flmul@temp& (0+255),w,b
 16054  001FE8  0100               	movlb	0	; () banked
 16055  001FEA  2782               	addwf	___flmul@grs& (0+255),f,b
 16056  001FEC  0100               	movlb	0	; () banked
 16057  001FEE  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16058  001FF0  0100               	movlb	0	; () banked
 16059  001FF2  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16060  001FF4  0E00               	movlw	0
 16061  001FF6  0100               	movlb	0	; () banked
 16062  001FF8  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16063  001FFA  0E00               	movlw	0
 16064  001FFC  0100               	movlb	0	; () banked
 16065  001FFE  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16066                           
 16067                           ; BSR set to: 0
 16068  002000  C084  F085         	movff	___flmul@grs+2,___flmul@grs+3
 16069  002004  C083  F084         	movff	___flmul@grs+1,___flmul@grs+2
 16070  002008  C082  F083         	movff	___flmul@grs,___flmul@grs+1
 16071  00200C  0100               	movlb	0	; () banked
 16072  00200E  6B82               	clrf	___flmul@grs& (0+255),b
 16073  002010  0100               	movlb	0	; () banked
 16074  002012  5178               	movf	___flmul@a& (0+255),w,b
 16075  002014  0100               	movlb	0	; () banked
 16076  002016  0374               	mulwf	___flmul@b& (0+255),b
 16077  002018  CFF3 F08B          	movff	prodl,___flmul@temp
 16078  00201C  CFF4 F08C          	movff	prodh,___flmul@temp+1
 16079                           
 16080                           ; BSR set to: 0
 16081  002020  0100               	movlb	0	; () banked
 16082  002022  518B               	movf	___flmul@temp& (0+255),w,b
 16083  002024  0100               	movlb	0	; () banked
 16084  002026  2782               	addwf	___flmul@grs& (0+255),f,b
 16085  002028  0100               	movlb	0	; () banked
 16086  00202A  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16087  00202C  0100               	movlb	0	; () banked
 16088  00202E  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16089  002030  0E00               	movlw	0
 16090  002032  0100               	movlb	0	; () banked
 16091  002034  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16092  002036  0E00               	movlw	0
 16093  002038  0100               	movlb	0	; () banked
 16094  00203A  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16095                           
 16096                           ; BSR set to: 0
 16097  00203C  0100               	movlb	0	; () banked
 16098  00203E  517A               	movf	(___flmul@a+2)& (0+255),w,b
 16099  002040  0100               	movlb	0	; () banked
 16100  002042  0375               	mulwf	(___flmul@b+1)& (0+255),b
 16101  002044  CFF3 F08B          	movff	prodl,___flmul@temp
 16102  002048  CFF4 F08C          	movff	prodh,___flmul@temp+1
 16103  00204C  0100               	movlb	0	; () banked
 16104  00204E  518B               	movf	___flmul@temp& (0+255),w,b
 16105  002050  0100               	movlb	0	; () banked
 16106  002052  2787               	addwf	___flmul@prod& (0+255),f,b
 16107  002054  0100               	movlb	0	; () banked
 16108  002056  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16109  002058  0100               	movlb	0	; () banked
 16110  00205A  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16111  00205C  0E00               	movlw	0
 16112  00205E  0100               	movlb	0	; () banked
 16113  002060  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16114  002062  0E00               	movlw	0
 16115  002064  0100               	movlb	0	; () banked
 16116  002066  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16117                           
 16118                           ; BSR set to: 0
 16119  002068  0100               	movlb	0	; () banked
 16120  00206A  5179               	movf	(___flmul@a+1)& (0+255),w,b
 16121  00206C  0100               	movlb	0	; () banked
 16122  00206E  0376               	mulwf	(___flmul@b+2)& (0+255),b
 16123  002070  CFF3 F08B          	movff	prodl,___flmul@temp
 16124  002074  CFF4 F08C          	movff	prodh,___flmul@temp+1
 16125                           
 16126                           ; BSR set to: 0
 16127  002078  0100               	movlb	0	; () banked
 16128  00207A  518B               	movf	___flmul@temp& (0+255),w,b
 16129  00207C  0100               	movlb	0	; () banked
 16130  00207E  2787               	addwf	___flmul@prod& (0+255),f,b
 16131  002080  0100               	movlb	0	; () banked
 16132  002082  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16133  002084  0100               	movlb	0	; () banked
 16134  002086  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16135  002088  0E00               	movlw	0
 16136  00208A  0100               	movlb	0	; () banked
 16137  00208C  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16138  00208E  0E00               	movlw	0
 16139  002090  0100               	movlb	0	; () banked
 16140  002092  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16141  002094  0100               	movlb	0	; () banked
 16142  002096  517A               	movf	(___flmul@a+2)& (0+255),w,b
 16143  002098  0100               	movlb	0	; () banked
 16144  00209A  0376               	mulwf	(___flmul@b+2)& (0+255),b
 16145  00209C  CFF3 F08B          	movff	prodl,___flmul@temp
 16146  0020A0  CFF4 F08C          	movff	prodh,___flmul@temp+1
 16147                           
 16148                           ; BSR set to: 0
 16149  0020A4  0100               	movlb	0	; () banked
 16150  0020A6  518B               	movf	___flmul@temp& (0+255),w,b
 16151  0020A8  0100               	movlb	0	; () banked
 16152  0020AA  6F7C               	movwf	??___flmul& (0+255),b
 16153  0020AC  0100               	movlb	0	; () banked
 16154  0020AE  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16155  0020B0  0100               	movlb	0	; () banked
 16156  0020B2  6F7D               	movwf	(??___flmul+1)& (0+255),b
 16157  0020B4  0100               	movlb	0	; () banked
 16158  0020B6  6B7E               	clrf	(??___flmul+2)& (0+255),b
 16159  0020B8  0100               	movlb	0	; () banked
 16160  0020BA  6B7F               	clrf	(??___flmul+3)& (0+255),b
 16161  0020BC  C07E  F07F         	movff	??___flmul+2,??___flmul+3
 16162  0020C0  C07D  F07E         	movff	??___flmul+1,??___flmul+2
 16163  0020C4  C07C  F07D         	movff	??___flmul,??___flmul+1
 16164  0020C8  0100               	movlb	0	; () banked
 16165  0020CA  6B7C               	clrf	??___flmul& (0+255),b
 16166  0020CC  0100               	movlb	0	; () banked
 16167  0020CE  517C               	movf	??___flmul& (0+255),w,b
 16168  0020D0  0100               	movlb	0	; () banked
 16169  0020D2  2787               	addwf	___flmul@prod& (0+255),f,b
 16170  0020D4  0100               	movlb	0	; () banked
 16171  0020D6  517D               	movf	(??___flmul+1)& (0+255),w,b
 16172  0020D8  0100               	movlb	0	; () banked
 16173  0020DA  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16174  0020DC  0100               	movlb	0	; () banked
 16175  0020DE  517E               	movf	(??___flmul+2)& (0+255),w,b
 16176  0020E0  0100               	movlb	0	; () banked
 16177  0020E2  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16178  0020E4  0100               	movlb	0	; () banked
 16179  0020E6  517F               	movf	(??___flmul+3)& (0+255),w,b
 16180  0020E8  0100               	movlb	0	; () banked
 16181  0020EA  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16182                           
 16183                           ; BSR set to: 0
 16184  0020EC  C082  F07C         	movff	___flmul@grs,??___flmul
 16185  0020F0  C083  F07D         	movff	___flmul@grs+1,??___flmul+1
 16186  0020F4  C084  F07E         	movff	___flmul@grs+2,??___flmul+2
 16187  0020F8  C085  F07F         	movff	___flmul@grs+3,??___flmul+3
 16188  0020FC  0E19               	movlw	25
 16189  0020FE  D006               	goto	u11680
 16190  002100                     u11685:
 16191  002100  0100               	movlb	0	; () banked
 16192  002102  90D8               	bcf	status,0,c
 16193  002104  337F               	rrcf	(??___flmul+3)& (0+255),f,b
 16194  002106  337E               	rrcf	(??___flmul+2)& (0+255),f,b
 16195  002108  337D               	rrcf	(??___flmul+1)& (0+255),f,b
 16196  00210A  337C               	rrcf	??___flmul& (0+255),f,b
 16197  00210C                     u11680:
 16198  00210C  2EE8               	decfsz	wreg,f,c
 16199  00210E  D7F8               	goto	u11685
 16200  002110  0100               	movlb	0	; () banked
 16201  002112  517C               	movf	??___flmul& (0+255),w,b
 16202  002114  0100               	movlb	0	; () banked
 16203  002116  2787               	addwf	___flmul@prod& (0+255),f,b
 16204  002118  0100               	movlb	0	; () banked
 16205  00211A  517D               	movf	(??___flmul+1)& (0+255),w,b
 16206  00211C  0100               	movlb	0	; () banked
 16207  00211E  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16208  002120  0100               	movlb	0	; () banked
 16209  002122  517E               	movf	(??___flmul+2)& (0+255),w,b
 16210  002124  0100               	movlb	0	; () banked
 16211  002126  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16212  002128  0100               	movlb	0	; () banked
 16213  00212A  517F               	movf	(??___flmul+3)& (0+255),w,b
 16214  00212C  0100               	movlb	0	; () banked
 16215  00212E  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16216                           
 16217                           ; BSR set to: 0
 16218  002130  C084  F085         	movff	___flmul@grs+2,___flmul@grs+3
 16219  002134  C083  F084         	movff	___flmul@grs+1,___flmul@grs+2
 16220  002138  C082  F083         	movff	___flmul@grs,___flmul@grs+1
 16221  00213C  0100               	movlb	0	; () banked
 16222  00213E  6B82               	clrf	___flmul@grs& (0+255),b
 16223                           
 16224                           ; BSR set to: 0
 16225  002140  0100               	movlb	0	; () banked
 16226  002142  5181               	movf	___flmul@aexp& (0+255),w,b
 16227  002144  C086  F07C         	movff	___flmul@bexp,??___flmul
 16228  002148  0100               	movlb	0	; () banked
 16229  00214A  6B7D               	clrf	(??___flmul+1)& (0+255),b
 16230  00214C  0100               	movlb	0	; () banked
 16231  00214E  277C               	addwf	??___flmul& (0+255),f,b
 16232  002150  0E00               	movlw	0
 16233  002152  237D               	addwfc	(??___flmul+1)& (0+255),f,b
 16234  002154  0E82               	movlw	130
 16235  002156  0100               	movlb	0	; () banked
 16236  002158  257C               	addwf	??___flmul& (0+255),w,b
 16237  00215A  0100               	movlb	0	; () banked
 16238  00215C  6F8B               	movwf	___flmul@temp& (0+255),b
 16239  00215E  0EFF               	movlw	255
 16240  002160  0100               	movlb	0	; () banked
 16241  002162  217D               	addwfc	(??___flmul+1)& (0+255),w,b
 16242  002164  0100               	movlb	0	; () banked
 16243  002166  6F8C               	movwf	(___flmul@temp+1)& (0+255),b
 16244  002168  D015               	goto	l12606
 16245  00216A                     l12600:
 16246                           
 16247                           ; BSR set to: 0
 16248  00216A  0100               	movlb	0	; () banked
 16249  00216C  90D8               	bcf	status,0,c
 16250  00216E  3787               	rlcf	___flmul@prod& (0+255),f,b
 16251  002170  3788               	rlcf	(___flmul@prod+1)& (0+255),f,b
 16252  002172  3789               	rlcf	(___flmul@prod+2)& (0+255),f,b
 16253  002174  378A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 16254                           
 16255                           ; BSR set to: 0
 16256  002176  0100               	movlb	0	; () banked
 16257  002178  AF85               	btfss	(___flmul@grs+3)& (0+255),7,b
 16258  00217A  D002               	goto	l2648
 16259                           
 16260                           ; BSR set to: 0
 16261  00217C  0100               	movlb	0	; () banked
 16262  00217E  8187               	bsf	___flmul@prod& (0+255),0,b
 16263  002180                     l2648:
 16264                           
 16265                           ; BSR set to: 0
 16266  002180  0100               	movlb	0	; () banked
 16267  002182  90D8               	bcf	status,0,c
 16268  002184  3782               	rlcf	___flmul@grs& (0+255),f,b
 16269  002186  3783               	rlcf	(___flmul@grs+1)& (0+255),f,b
 16270  002188  3784               	rlcf	(___flmul@grs+2)& (0+255),f,b
 16271  00218A  3785               	rlcf	(___flmul@grs+3)& (0+255),f,b
 16272  00218C  0100               	movlb	0	; () banked
 16273  00218E  078B               	decf	___flmul@temp& (0+255),f,b
 16274  002190  A0D8               	btfss	status,0,c
 16275  002192  078C               	decf	(___flmul@temp+1)& (0+255),f,b
 16276  002194                     l12606:
 16277                           
 16278                           ; BSR set to: 0
 16279  002194  0100               	movlb	0	; () banked
 16280  002196  AF89               	btfss	(___flmul@prod+2)& (0+255),7,b
 16281  002198  D7E8               	goto	l12600
 16282                           
 16283                           ; BSR set to: 0
 16284                           
 16285                           ; BSR set to: 0
 16286  00219A  0E00               	movlw	0
 16287  00219C  0100               	movlb	0	; () banked
 16288  00219E  6F81               	movwf	___flmul@aexp& (0+255),b
 16289                           
 16290                           ; BSR set to: 0
 16291  0021A0  0100               	movlb	0	; () banked
 16292  0021A2  AF85               	btfss	(___flmul@grs+3)& (0+255),7,b
 16293  0021A4  D024               	goto	l2650
 16294                           
 16295                           ; BSR set to: 0
 16296  0021A6  0EFF               	movlw	255
 16297  0021A8  0100               	movlb	0	; () banked
 16298  0021AA  1582               	andwf	___flmul@grs& (0+255),w,b
 16299  0021AC  0100               	movlb	0	; () banked
 16300  0021AE  6F7C               	movwf	??___flmul& (0+255),b
 16301  0021B0  0EFF               	movlw	255
 16302  0021B2  0100               	movlb	0	; () banked
 16303  0021B4  1583               	andwf	(___flmul@grs+1)& (0+255),w,b
 16304  0021B6  0100               	movlb	0	; () banked
 16305  0021B8  6F7D               	movwf	(??___flmul+1)& (0+255),b
 16306  0021BA  0EFF               	movlw	255
 16307  0021BC  0100               	movlb	0	; () banked
 16308  0021BE  1584               	andwf	(___flmul@grs+2)& (0+255),w,b
 16309  0021C0  0100               	movlb	0	; () banked
 16310  0021C2  6F7E               	movwf	(??___flmul+2)& (0+255),b
 16311  0021C4  0E7F               	movlw	127
 16312  0021C6  0100               	movlb	0	; () banked
 16313  0021C8  1585               	andwf	(___flmul@grs+3)& (0+255),w,b
 16314  0021CA  0100               	movlb	0	; () banked
 16315  0021CC  6F7F               	movwf	(??___flmul+3)& (0+255),b
 16316  0021CE  0100               	movlb	0	; () banked
 16317  0021D0  517C               	movf	??___flmul& (0+255),w,b
 16318  0021D2  0100               	movlb	0	; () banked
 16319  0021D4  117D               	iorwf	(??___flmul+1)& (0+255),w,b
 16320  0021D6  0100               	movlb	0	; () banked
 16321  0021D8  117E               	iorwf	(??___flmul+2)& (0+255),w,b
 16322  0021DA  0100               	movlb	0	; () banked
 16323  0021DC  117F               	iorwf	(??___flmul+3)& (0+255),w,b
 16324  0021DE  A4D8               	btfss	status,2,c
 16325  0021E0  D003               	goto	l12616
 16326                           
 16327                           ; BSR set to: 0
 16328                           
 16329                           ; BSR set to: 0
 16330  0021E2  0100               	movlb	0	; () banked
 16331  0021E4  A187               	btfss	___flmul@prod& (0+255),0,b
 16332  0021E6  D003               	goto	l2650
 16333  0021E8                     l12616:
 16334                           
 16335                           ; BSR set to: 0
 16336  0021E8  0E01               	movlw	1
 16337  0021EA  0100               	movlb	0	; () banked
 16338  0021EC  6F81               	movwf	___flmul@aexp& (0+255),b
 16339  0021EE                     l2650:
 16340                           
 16341                           ; BSR set to: 0
 16342  0021EE  0100               	movlb	0	; () banked
 16343  0021F0  5181               	movf	___flmul@aexp& (0+255),w,b
 16344  0021F2  0100               	movlb	0	; () banked
 16345  0021F4  B4D8               	btfsc	status,2,c
 16346  0021F6  D023               	goto	l12626
 16347                           
 16348                           ; BSR set to: 0
 16349  0021F8  0E01               	movlw	1
 16350  0021FA  0100               	movlb	0	; () banked
 16351  0021FC  2787               	addwf	___flmul@prod& (0+255),f,b
 16352  0021FE  0E00               	movlw	0
 16353  002200  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16354  002202  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16355  002204  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16356                           
 16357                           ; BSR set to: 0
 16358  002206  0100               	movlb	0	; () banked
 16359  002208  A18A               	btfss	(___flmul@prod+3)& (0+255),0,b
 16360  00220A  D019               	goto	l12626
 16361                           
 16362                           ; BSR set to: 0
 16363  00220C  C087  F07C         	movff	___flmul@prod,??___flmul
 16364  002210  C088  F07D         	movff	___flmul@prod+1,??___flmul+1
 16365  002214  C089  F07E         	movff	___flmul@prod+2,??___flmul+2
 16366  002218  C08A  F07F         	movff	___flmul@prod+3,??___flmul+3
 16367  00221C  0100               	movlb	0	; () banked
 16368  00221E  357F               	rlcf	(??___flmul+3)& (0+255),w,b
 16369  002220  337F               	rrcf	(??___flmul+3)& (0+255),f,b
 16370  002222  337E               	rrcf	(??___flmul+2)& (0+255),f,b
 16371  002224  337D               	rrcf	(??___flmul+1)& (0+255),f,b
 16372  002226  337C               	rrcf	??___flmul& (0+255),f,b
 16373  002228  C07C  F087         	movff	??___flmul,___flmul@prod
 16374  00222C  C07D  F088         	movff	??___flmul+1,___flmul@prod+1
 16375  002230  C07E  F089         	movff	??___flmul+2,___flmul@prod+2
 16376  002234  C07F  F08A         	movff	??___flmul+3,___flmul@prod+3
 16377                           
 16378                           ; BSR set to: 0
 16379  002238  0100               	movlb	0	; () banked
 16380  00223A  4B8B               	infsnz	___flmul@temp& (0+255),f,b
 16381  00223C  2B8C               	incf	(___flmul@temp+1)& (0+255),f,b
 16382  00223E                     l12626:
 16383                           
 16384                           ; BSR set to: 0
 16385  00223E  0100               	movlb	0	; () banked
 16386  002240  BF8C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 16387  002242  D010               	goto	l12630
 16388  002244  0100               	movlb	0	; () banked
 16389  002246  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16390  002248  E104               	bnz	u11760
 16391  00224A  0100               	movlb	0	; () banked
 16392  00224C  298B               	incf	___flmul@temp& (0+255),w,b
 16393  00224E  A0D8               	btfss	status,0,c
 16394  002250  D009               	goto	l12630
 16395  002252                     u11760:
 16396                           
 16397                           ; BSR set to: 0
 16398  002252  0E00               	movlw	0
 16399  002254  0100               	movlb	0	; () banked
 16400  002256  6F87               	movwf	___flmul@prod& (0+255),b
 16401  002258  0E00               	movlw	0
 16402  00225A  6F88               	movwf	(___flmul@prod+1)& (0+255),b
 16403  00225C  0E80               	movlw	128
 16404  00225E  6F89               	movwf	(___flmul@prod+2)& (0+255),b
 16405  002260  0E7F               	movlw	127
 16406  002262  D02B               	goto	L11
 16407  002264                     l12630:
 16408                           
 16409                           ; BSR set to: 0
 16410  002264  0100               	movlb	0	; () banked
 16411  002266  BF8C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 16412  002268  D007               	goto	l12632
 16413  00226A  0100               	movlb	0	; () banked
 16414  00226C  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16415  00226E  E111               	bnz	l2658
 16416  002270  0100               	movlb	0	; () banked
 16417  002272  058B               	decf	___flmul@temp& (0+255),w,b
 16418  002274  B0D8               	btfsc	status,0,c
 16419  002276  D00D               	goto	l2658
 16420  002278                     l12632:
 16421                           
 16422                           ; BSR set to: 0
 16423  002278  0E00               	movlw	0
 16424  00227A  0100               	movlb	0	; () banked
 16425  00227C  6F87               	movwf	___flmul@prod& (0+255),b
 16426  00227E  0E00               	movlw	0
 16427  002280  6F88               	movwf	(___flmul@prod+1)& (0+255),b
 16428  002282  0E00               	movlw	0
 16429  002284  6F89               	movwf	(___flmul@prod+2)& (0+255),b
 16430  002286  0E00               	movlw	0
 16431  002288  6F8A               	movwf	(___flmul@prod+3)& (0+255),b
 16432  00228A  0E00               	movlw	0
 16433  00228C  0100               	movlb	0	; () banked
 16434  00228E  6F80               	movwf	___flmul@sign& (0+255),b
 16435  002290  D015               	goto	l12642
 16436  002292                     l2658:
 16437                           
 16438                           ; BSR set to: 0
 16439  002292  C08B  F086         	movff	___flmul@temp,___flmul@bexp
 16440                           
 16441                           ; BSR set to: 0
 16442  002296  0EFF               	movlw	255
 16443  002298  0100               	movlb	0	; () banked
 16444  00229A  1787               	andwf	___flmul@prod& (0+255),f,b
 16445  00229C  0EFF               	movlw	255
 16446  00229E  1788               	andwf	(___flmul@prod+1)& (0+255),f,b
 16447  0022A0  0E7F               	movlw	127
 16448  0022A2  1789               	andwf	(___flmul@prod+2)& (0+255),f,b
 16449  0022A4  0E00               	movlw	0
 16450  0022A6  178A               	andwf	(___flmul@prod+3)& (0+255),f,b
 16451                           
 16452                           ; BSR set to: 0
 16453  0022A8  0100               	movlb	0	; () banked
 16454  0022AA  A186               	btfss	___flmul@bexp& (0+255),0,b
 16455  0022AC  D002               	goto	l12640
 16456                           
 16457                           ; BSR set to: 0
 16458  0022AE  0100               	movlb	0	; () banked
 16459  0022B0  8F89               	bsf	(___flmul@prod+2)& (0+255),7,b
 16460  0022B2                     l12640:
 16461                           
 16462                           ; BSR set to: 0
 16463  0022B2  0100               	movlb	0	; () banked
 16464  0022B4  90D8               	bcf	status,0,c
 16465  0022B6  3186               	rrcf	___flmul@bexp& (0+255),w,b
 16466  0022B8  0100               	movlb	0	; () banked
 16467  0022BA                     L11:
 16468  0022BA  6F8A               	movwf	(___flmul@prod+3)& (0+255),b
 16469  0022BC                     l12642:
 16470                           
 16471                           ; BSR set to: 0
 16472  0022BC  0100               	movlb	0	; () banked
 16473  0022BE  5180               	movf	___flmul@sign& (0+255),w,b
 16474  0022C0  0100               	movlb	0	; () banked
 16475  0022C2  138A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 16476                           
 16477                           ; BSR set to: 0
 16478  0022C4  C087  F074         	movff	___flmul@prod,?___flmul
 16479  0022C8  C088  F075         	movff	___flmul@prod+1,?___flmul+1
 16480  0022CC  C089  F076         	movff	___flmul@prod+2,?___flmul+2
 16481  0022D0  C08A  F077         	movff	___flmul@prod+3,?___flmul+3
 16482  0022D4  0012               	return	
 16483  0022D6                     __end_of___flmul:
 16484                           	opt stack 0
 16485                           tblptru	equ	0xFF8
 16486                           tblptrh	equ	0xFF7
 16487                           tblptrl	equ	0xFF6
 16488                           tablat	equ	0xFF5
 16489                           prodh	equ	0xFF4
 16490                           prodl	equ	0xFF3
 16491                           intcon	equ	0xFF2
 16492                           intcon3	equ	0xFF0
 16493                           postinc0	equ	0xFEE
 16494                           wreg	equ	0xFE8
 16495                           indf1	equ	0xFE7
 16496                           postdec1	equ	0xFE5
 16497                           fsr1h	equ	0xFE2
 16498                           fsr1l	equ	0xFE1
 16499                           indf2	equ	0xFDF
 16500                           fsr2h	equ	0xFDA
 16501                           fsr2l	equ	0xFD9
 16502                           status	equ	0xFD8
 16503                           
 16504 ;; *************** function ___fldiv *****************
 16505 ;; Defined at:
 16506 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 16507 ;; Parameters:    Size  Location     Type
 16508 ;;  b               4   45[BANK0 ] unsigned char 
 16509 ;;  a               4   49[BANK0 ] unsigned char 
 16510 ;; Auto vars:     Size  Location     Type
 16511 ;;  grs             4   64[BANK0 ] unsigned long 
 16512 ;;  rem             4   58[BANK0 ] unsigned long 
 16513 ;;  new_exp         2   62[BANK0 ] int 
 16514 ;;  aexp            1   69[BANK0 ] unsigned char 
 16515 ;;  bexp            1   68[BANK0 ] unsigned char 
 16516 ;;  sign            1   57[BANK0 ] unsigned char 
 16517 ;; Return value:  Size  Location     Type
 16518 ;;                  4   45[BANK0 ] unsigned char 
 16519 ;; Registers used:
 16520 ;;		wreg, status,2, status,0
 16521 ;; Tracked objects:
 16522 ;;		On entry : 0/0
 16523 ;;		On exit  : 0/0
 16524 ;;		Unchanged: 0/0
 16525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16526 ;;      Params:         0       8       0       0       0       0       0       0       0
 16527 ;;      Locals:         0      13       0       0       0       0       0       0       0
 16528 ;;      Temps:          0       4       0       0       0       0       0       0       0
 16529 ;;      Totals:         0      25       0       0       0       0       0       0       0
 16530 ;;Total ram usage:       25 bytes
 16531 ;; Hardware stack levels used:    1
 16532 ;; Hardware stack levels required when called:   11
 16533 ;; This function calls:
 16534 ;;		Nothing
 16535 ;; This function is called by:
 16536 ;;		_ADC_TempConversion
 16537 ;; This function uses a non-reentrant model
 16538 ;;
 16539                           
 16540                           	psect	text49
 16541  002774                     __ptext49:
 16542                           	opt stack 0
 16543  002774                     ___fldiv:
 16544                           	opt stack 16
 16545                           
 16546                           ; BSR set to: 0
 16547                           ;incstack = 0
 16548  002774  0100               	movlb	0	; () banked
 16549  002776  5190               	movf	(___fldiv@b+3)& (0+255),w,b
 16550  002778  0B80               	andlw	128
 16551  00277A  0100               	movlb	0	; () banked
 16552  00277C  6F99               	movwf	___fldiv@sign& (0+255),b
 16553  00277E  0100               	movlb	0	; () banked
 16554  002780  5190               	movf	(___fldiv@b+3)& (0+255),w,b
 16555  002782  2590               	addwf	(___fldiv@b+3)& (0+255),w,b
 16556  002784  0100               	movlb	0	; () banked
 16557  002786  6FA4               	movwf	___fldiv@bexp& (0+255),b
 16558                           
 16559                           ; BSR set to: 0
 16560  002788  0100               	movlb	0	; () banked
 16561  00278A  AF8F               	btfss	(___fldiv@b+2)& (0+255),7,b
 16562  00278C  D002               	goto	l12388
 16563                           
 16564                           ; BSR set to: 0
 16565  00278E  0100               	movlb	0	; () banked
 16566  002790  81A4               	bsf	___fldiv@bexp& (0+255),0,b
 16567  002792                     l12388:
 16568                           
 16569                           ; BSR set to: 0
 16570  002792  0100               	movlb	0	; () banked
 16571  002794  51A4               	movf	___fldiv@bexp& (0+255),w,b
 16572  002796  0100               	movlb	0	; () banked
 16573  002798  B4D8               	btfsc	status,2,c
 16574  00279A  D012               	goto	l12398
 16575                           
 16576                           ; BSR set to: 0
 16577  00279C  0100               	movlb	0	; () banked
 16578  00279E  29A4               	incf	___fldiv@bexp& (0+255),w,b
 16579  0027A0  A4D8               	btfss	status,2,c
 16580  0027A2  D009               	goto	l12394
 16581                           
 16582                           ; BSR set to: 0
 16583  0027A4  0E00               	movlw	0
 16584  0027A6  0100               	movlb	0	; () banked
 16585  0027A8  6F8D               	movwf	___fldiv@b& (0+255),b
 16586  0027AA  0E00               	movlw	0
 16587  0027AC  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 16588  0027AE  0E00               	movlw	0
 16589  0027B0  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 16590  0027B2  0E00               	movlw	0
 16591  0027B4  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 16592  0027B6                     l12394:
 16593                           
 16594                           ; BSR set to: 0
 16595  0027B6  0100               	movlb	0	; () banked
 16596  0027B8  8F8F               	bsf	(___fldiv@b+2)& (0+255),7,b
 16597                           
 16598                           ; BSR set to: 0
 16599  0027BA  0E00               	movlw	0
 16600  0027BC  0100               	movlb	0	; () banked
 16601  0027BE  D008               	goto	L12
 16602  0027C0                     l12398:
 16603                           
 16604                           ; BSR set to: 0
 16605  0027C0  0E00               	movlw	0
 16606  0027C2  0100               	movlb	0	; () banked
 16607  0027C4  6F8D               	movwf	___fldiv@b& (0+255),b
 16608  0027C6  0E00               	movlw	0
 16609  0027C8  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 16610  0027CA  0E00               	movlw	0
 16611  0027CC  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 16612  0027CE  0E00               	movlw	0
 16613  0027D0                     L12:
 16614  0027D0  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 16615                           
 16616                           ; BSR set to: 0
 16617                           
 16618                           ; BSR set to: 0
 16619  0027D2  0100               	movlb	0	; () banked
 16620  0027D4  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 16621  0027D6  0B80               	andlw	128
 16622  0027D8  0100               	movlb	0	; () banked
 16623  0027DA  1B99               	xorwf	___fldiv@sign& (0+255),f,b
 16624                           
 16625                           ; BSR set to: 0
 16626  0027DC  0100               	movlb	0	; () banked
 16627  0027DE  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 16628  0027E0  2594               	addwf	(___fldiv@a+3)& (0+255),w,b
 16629  0027E2  0100               	movlb	0	; () banked
 16630  0027E4  6FA5               	movwf	___fldiv@aexp& (0+255),b
 16631                           
 16632                           ; BSR set to: 0
 16633  0027E6  0100               	movlb	0	; () banked
 16634  0027E8  AF93               	btfss	(___fldiv@a+2)& (0+255),7,b
 16635  0027EA  D002               	goto	l12408
 16636                           
 16637                           ; BSR set to: 0
 16638  0027EC  0100               	movlb	0	; () banked
 16639  0027EE  81A5               	bsf	___fldiv@aexp& (0+255),0,b
 16640  0027F0                     l12408:
 16641                           
 16642                           ; BSR set to: 0
 16643  0027F0  0100               	movlb	0	; () banked
 16644  0027F2  51A5               	movf	___fldiv@aexp& (0+255),w,b
 16645  0027F4  0100               	movlb	0	; () banked
 16646  0027F6  B4D8               	btfsc	status,2,c
 16647  0027F8  D012               	goto	l12418
 16648                           
 16649                           ; BSR set to: 0
 16650  0027FA  0100               	movlb	0	; () banked
 16651  0027FC  29A5               	incf	___fldiv@aexp& (0+255),w,b
 16652  0027FE  A4D8               	btfss	status,2,c
 16653  002800  D009               	goto	l12414
 16654                           
 16655                           ; BSR set to: 0
 16656  002802  0E00               	movlw	0
 16657  002804  0100               	movlb	0	; () banked
 16658  002806  6F91               	movwf	___fldiv@a& (0+255),b
 16659  002808  0E00               	movlw	0
 16660  00280A  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 16661  00280C  0E00               	movlw	0
 16662  00280E  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 16663  002810  0E00               	movlw	0
 16664  002812  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 16665  002814                     l12414:
 16666                           
 16667                           ; BSR set to: 0
 16668  002814  0100               	movlb	0	; () banked
 16669  002816  8F93               	bsf	(___fldiv@a+2)& (0+255),7,b
 16670                           
 16671                           ; BSR set to: 0
 16672  002818  0E00               	movlw	0
 16673  00281A  0100               	movlb	0	; () banked
 16674  00281C  D008               	goto	L13
 16675  00281E                     l12418:
 16676                           
 16677                           ; BSR set to: 0
 16678  00281E  0E00               	movlw	0
 16679  002820  0100               	movlb	0	; () banked
 16680  002822  6F91               	movwf	___fldiv@a& (0+255),b
 16681  002824  0E00               	movlw	0
 16682  002826  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 16683  002828  0E00               	movlw	0
 16684  00282A  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 16685  00282C  0E00               	movlw	0
 16686  00282E                     L13:
 16687  00282E  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 16688                           
 16689                           ; BSR set to: 0
 16690                           
 16691                           ; BSR set to: 0
 16692  002830  0100               	movlb	0	; () banked
 16693  002832  5191               	movf	___fldiv@a& (0+255),w,b
 16694  002834  0100               	movlb	0	; () banked
 16695  002836  1192               	iorwf	(___fldiv@a+1)& (0+255),w,b
 16696  002838  0100               	movlb	0	; () banked
 16697  00283A  1193               	iorwf	(___fldiv@a+2)& (0+255),w,b
 16698  00283C  0100               	movlb	0	; () banked
 16699  00283E  1194               	iorwf	(___fldiv@a+3)& (0+255),w,b
 16700  002840  A4D8               	btfss	status,2,c
 16701  002842  D017               	goto	l12430
 16702                           
 16703                           ; BSR set to: 0
 16704  002844  0E00               	movlw	0
 16705  002846  0100               	movlb	0	; () banked
 16706  002848  6F8D               	movwf	___fldiv@b& (0+255),b
 16707  00284A  0E00               	movlw	0
 16708  00284C  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 16709  00284E  0E00               	movlw	0
 16710  002850  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 16711  002852  0E00               	movlw	0
 16712  002854  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 16713                           
 16714                           ; BSR set to: 0
 16715  002856  0100               	movlb	0	; () banked
 16716  002858  0E80               	movlw	128
 16717  00285A  138F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 16718  00285C  0E7F               	movlw	127
 16719  00285E  1390               	iorwf	(___fldiv@b+3)& (0+255),f,b
 16720                           
 16721                           ; BSR set to: 0
 16722  002860  C08D  F08D         	movff	___fldiv@b,?___fldiv
 16723  002864  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 16724  002868  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 16725  00286C  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 16726                           
 16727                           ; BSR set to: 0
 16728  002870  0012               	return	
 16729  002872                     l12430:
 16730                           
 16731                           ; BSR set to: 0
 16732  002872  0100               	movlb	0	; () banked
 16733  002874  51A4               	movf	___fldiv@bexp& (0+255),w,b
 16734  002876  0100               	movlb	0	; () banked
 16735  002878  A4D8               	btfss	status,2,c
 16736  00287A  D012               	goto	l12438
 16737                           
 16738                           ; BSR set to: 0
 16739  00287C  0E00               	movlw	0
 16740  00287E  0100               	movlb	0	; () banked
 16741  002880  6F8D               	movwf	___fldiv@b& (0+255),b
 16742  002882  0E00               	movlw	0
 16743  002884  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 16744  002886  0E00               	movlw	0
 16745  002888  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 16746  00288A  0E00               	movlw	0
 16747  00288C  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 16748                           
 16749                           ; BSR set to: 0
 16750  00288E  C08D  F08D         	movff	___fldiv@b,?___fldiv
 16751  002892  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 16752  002896  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 16753  00289A  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 16754                           
 16755                           ; BSR set to: 0
 16756  00289E  0012               	return	
 16757  0028A0                     l12438:
 16758                           
 16759                           ; BSR set to: 0
 16760  0028A0  0100               	movlb	0	; () banked
 16761  0028A2  51A5               	movf	___fldiv@aexp& (0+255),w,b
 16762  0028A4  0100               	movlb	0	; () banked
 16763  0028A6  6F95               	movwf	??___fldiv& (0+255),b
 16764  0028A8  6B96               	clrf	(??___fldiv+1)& (0+255),b
 16765  0028AA  0100               	movlb	0	; () banked
 16766  0028AC  1F95               	comf	??___fldiv& (0+255),f,b
 16767  0028AE  1F96               	comf	(??___fldiv+1)& (0+255),f,b
 16768  0028B0  4B95               	infsnz	??___fldiv& (0+255),f,b
 16769  0028B2  2B96               	incf	(??___fldiv+1)& (0+255),f,b
 16770  0028B4  0100               	movlb	0	; () banked
 16771  0028B6  51A4               	movf	___fldiv@bexp& (0+255),w,b
 16772  0028B8  0100               	movlb	0	; () banked
 16773  0028BA  6F97               	movwf	(??___fldiv+2)& (0+255),b
 16774  0028BC  6B98               	clrf	(??___fldiv+3)& (0+255),b
 16775  0028BE  0100               	movlb	0	; () banked
 16776  0028C0  5195               	movf	??___fldiv& (0+255),w,b
 16777  0028C2  0100               	movlb	0	; () banked
 16778  0028C4  2797               	addwf	(??___fldiv+2)& (0+255),f,b
 16779  0028C6  0100               	movlb	0	; () banked
 16780  0028C8  5196               	movf	(??___fldiv+1)& (0+255),w,b
 16781  0028CA  0100               	movlb	0	; () banked
 16782  0028CC  2398               	addwfc	(??___fldiv+3)& (0+255),f,b
 16783  0028CE  0E7F               	movlw	127
 16784  0028D0  0100               	movlb	0	; () banked
 16785  0028D2  2597               	addwf	(??___fldiv+2)& (0+255),w,b
 16786  0028D4  0100               	movlb	0	; () banked
 16787  0028D6  6F9E               	movwf	___fldiv@new_exp& (0+255),b
 16788  0028D8  0E00               	movlw	0
 16789  0028DA  0100               	movlb	0	; () banked
 16790  0028DC  2198               	addwfc	(??___fldiv+3)& (0+255),w,b
 16791  0028DE  0100               	movlb	0	; () banked
 16792  0028E0  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 16793                           
 16794                           ; BSR set to: 0
 16795  0028E2  C08D  F09A         	movff	___fldiv@b,___fldiv@rem
 16796  0028E6  C08E  F09B         	movff	___fldiv@b+1,___fldiv@rem+1
 16797  0028EA  C08F  F09C         	movff	___fldiv@b+2,___fldiv@rem+2
 16798  0028EE  C090  F09D         	movff	___fldiv@b+3,___fldiv@rem+3
 16799                           
 16800                           ; BSR set to: 0
 16801  0028F2  0E00               	movlw	0
 16802  0028F4  0100               	movlb	0	; () banked
 16803  0028F6  6F8D               	movwf	___fldiv@b& (0+255),b
 16804  0028F8  0E00               	movlw	0
 16805  0028FA  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 16806  0028FC  0E00               	movlw	0
 16807  0028FE  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 16808  002900  0E00               	movlw	0
 16809  002902  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 16810                           
 16811                           ; BSR set to: 0
 16812  002904  0E00               	movlw	0
 16813  002906  0100               	movlb	0	; () banked
 16814  002908  6FA0               	movwf	___fldiv@grs& (0+255),b
 16815  00290A  0E00               	movlw	0
 16816  00290C  6FA1               	movwf	(___fldiv@grs+1)& (0+255),b
 16817  00290E  0E00               	movlw	0
 16818  002910  6FA2               	movwf	(___fldiv@grs+2)& (0+255),b
 16819  002912  0E00               	movlw	0
 16820  002914  6FA3               	movwf	(___fldiv@grs+3)& (0+255),b
 16821                           
 16822                           ; BSR set to: 0
 16823  002916  0E00               	movlw	0
 16824  002918  0100               	movlb	0	; () banked
 16825  00291A  6FA5               	movwf	___fldiv@aexp& (0+255),b
 16826  00291C  D042               	goto	l2611
 16827  00291E                     l12448:
 16828                           
 16829                           ; BSR set to: 0
 16830  00291E  0100               	movlb	0	; () banked
 16831  002920  51A5               	movf	___fldiv@aexp& (0+255),w,b
 16832  002922  0100               	movlb	0	; () banked
 16833  002924  B4D8               	btfsc	status,2,c
 16834  002926  D017               	goto	l12456
 16835                           
 16836                           ; BSR set to: 0
 16837  002928  0100               	movlb	0	; () banked
 16838  00292A  90D8               	bcf	status,0,c
 16839  00292C  379A               	rlcf	___fldiv@rem& (0+255),f,b
 16840  00292E  379B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 16841  002930  379C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 16842  002932  379D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 16843  002934  0100               	movlb	0	; () banked
 16844  002936  90D8               	bcf	status,0,c
 16845  002938  378D               	rlcf	___fldiv@b& (0+255),f,b
 16846  00293A  378E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 16847  00293C  378F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 16848  00293E  3790               	rlcf	(___fldiv@b+3)& (0+255),f,b
 16849                           
 16850                           ; BSR set to: 0
 16851  002940  0100               	movlb	0	; () banked
 16852  002942  AFA3               	btfss	(___fldiv@grs+3)& (0+255),7,b
 16853  002944  D002               	goto	l2614
 16854                           
 16855                           ; BSR set to: 0
 16856  002946  0100               	movlb	0	; () banked
 16857  002948  818D               	bsf	___fldiv@b& (0+255),0,b
 16858  00294A                     l2614:
 16859                           
 16860                           ; BSR set to: 0
 16861  00294A  0100               	movlb	0	; () banked
 16862  00294C  90D8               	bcf	status,0,c
 16863  00294E  37A0               	rlcf	___fldiv@grs& (0+255),f,b
 16864  002950  37A1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 16865  002952  37A2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 16866  002954  37A3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 16867  002956                     l12456:
 16868                           
 16869                           ; BSR set to: 0
 16870  002956  0100               	movlb	0	; () banked
 16871  002958  5191               	movf	___fldiv@a& (0+255),w,b
 16872  00295A  0100               	movlb	0	; () banked
 16873  00295C  5D9A               	subwf	___fldiv@rem& (0+255),w,b
 16874  00295E  0100               	movlb	0	; () banked
 16875  002960  5192               	movf	(___fldiv@a+1)& (0+255),w,b
 16876  002962  0100               	movlb	0	; () banked
 16877  002964  599B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 16878  002966  0100               	movlb	0	; () banked
 16879  002968  5193               	movf	(___fldiv@a+2)& (0+255),w,b
 16880  00296A  0100               	movlb	0	; () banked
 16881  00296C  599C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 16882  00296E  0100               	movlb	0	; () banked
 16883  002970  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 16884  002972  0100               	movlb	0	; () banked
 16885  002974  599D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 16886  002976  A0D8               	btfss	status,0,c
 16887  002978  D012               	goto	l12462
 16888                           
 16889                           ; BSR set to: 0
 16890  00297A  0100               	movlb	0	; () banked
 16891  00297C  8DA3               	bsf	(___fldiv@grs+3)& (0+255),6,b
 16892                           
 16893                           ; BSR set to: 0
 16894  00297E  0100               	movlb	0	; () banked
 16895  002980  5191               	movf	___fldiv@a& (0+255),w,b
 16896  002982  0100               	movlb	0	; () banked
 16897  002984  5F9A               	subwf	___fldiv@rem& (0+255),f,b
 16898  002986  0100               	movlb	0	; () banked
 16899  002988  5192               	movf	(___fldiv@a+1)& (0+255),w,b
 16900  00298A  0100               	movlb	0	; () banked
 16901  00298C  5B9B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 16902  00298E  0100               	movlb	0	; () banked
 16903  002990  5193               	movf	(___fldiv@a+2)& (0+255),w,b
 16904  002992  0100               	movlb	0	; () banked
 16905  002994  5B9C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 16906  002996  0100               	movlb	0	; () banked
 16907  002998  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 16908  00299A  0100               	movlb	0	; () banked
 16909  00299C  5B9D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 16910  00299E                     l12462:
 16911                           
 16912                           ; BSR set to: 0
 16913  00299E  0100               	movlb	0	; () banked
 16914  0029A0  2BA5               	incf	___fldiv@aexp& (0+255),f,b
 16915  0029A2                     l2611:
 16916                           
 16917                           ; BSR set to: 0
 16918  0029A2  0E19               	movlw	25
 16919  0029A4  0100               	movlb	0	; () banked
 16920  0029A6  65A5               	cpfsgt	___fldiv@aexp& (0+255),b
 16921  0029A8  D7BA               	goto	l12448
 16922                           
 16923                           ; BSR set to: 0
 16924                           
 16925                           ; BSR set to: 0
 16926  0029AA  0100               	movlb	0	; () banked
 16927  0029AC  519A               	movf	___fldiv@rem& (0+255),w,b
 16928  0029AE  0100               	movlb	0	; () banked
 16929  0029B0  119B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 16930  0029B2  0100               	movlb	0	; () banked
 16931  0029B4  119C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 16932  0029B6  0100               	movlb	0	; () banked
 16933  0029B8  119D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 16934  0029BA  B4D8               	btfsc	status,2,c
 16935  0029BC  D018               	goto	l12474
 16936                           
 16937                           ; BSR set to: 0
 16938  0029BE  0100               	movlb	0	; () banked
 16939  0029C0  81A0               	bsf	___fldiv@grs& (0+255),0,b
 16940                           
 16941                           ; BSR set to: 0
 16942  0029C2  D015               	goto	l12474
 16943  0029C4                     l12468:
 16944                           
 16945                           ; BSR set to: 0
 16946  0029C4  0100               	movlb	0	; () banked
 16947  0029C6  90D8               	bcf	status,0,c
 16948  0029C8  378D               	rlcf	___fldiv@b& (0+255),f,b
 16949  0029CA  378E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 16950  0029CC  378F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 16951  0029CE  3790               	rlcf	(___fldiv@b+3)& (0+255),f,b
 16952                           
 16953                           ; BSR set to: 0
 16954  0029D0  0100               	movlb	0	; () banked
 16955  0029D2  AFA3               	btfss	(___fldiv@grs+3)& (0+255),7,b
 16956  0029D4  D002               	goto	l2620
 16957                           
 16958                           ; BSR set to: 0
 16959  0029D6  0100               	movlb	0	; () banked
 16960  0029D8  818D               	bsf	___fldiv@b& (0+255),0,b
 16961  0029DA                     l2620:
 16962                           
 16963                           ; BSR set to: 0
 16964  0029DA  0100               	movlb	0	; () banked
 16965  0029DC  90D8               	bcf	status,0,c
 16966  0029DE  37A0               	rlcf	___fldiv@grs& (0+255),f,b
 16967  0029E0  37A1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 16968  0029E2  37A2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 16969  0029E4  37A3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 16970  0029E6  0100               	movlb	0	; () banked
 16971  0029E8  079E               	decf	___fldiv@new_exp& (0+255),f,b
 16972  0029EA  A0D8               	btfss	status,0,c
 16973  0029EC  079F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 16974  0029EE                     l12474:
 16975                           
 16976                           ; BSR set to: 0
 16977  0029EE  0100               	movlb	0	; () banked
 16978  0029F0  AF8F               	btfss	(___fldiv@b+2)& (0+255),7,b
 16979  0029F2  D7E8               	goto	l12468
 16980                           
 16981                           ; BSR set to: 0
 16982                           
 16983                           ; BSR set to: 0
 16984  0029F4  0E00               	movlw	0
 16985  0029F6  0100               	movlb	0	; () banked
 16986  0029F8  6FA5               	movwf	___fldiv@aexp& (0+255),b
 16987                           
 16988                           ; BSR set to: 0
 16989  0029FA  0100               	movlb	0	; () banked
 16990  0029FC  AFA3               	btfss	(___fldiv@grs+3)& (0+255),7,b
 16991  0029FE  D024               	goto	l2622
 16992                           
 16993                           ; BSR set to: 0
 16994  002A00  0EFF               	movlw	255
 16995  002A02  0100               	movlb	0	; () banked
 16996  002A04  15A0               	andwf	___fldiv@grs& (0+255),w,b
 16997  002A06  0100               	movlb	0	; () banked
 16998  002A08  6F95               	movwf	??___fldiv& (0+255),b
 16999  002A0A  0EFF               	movlw	255
 17000  002A0C  0100               	movlb	0	; () banked
 17001  002A0E  15A1               	andwf	(___fldiv@grs+1)& (0+255),w,b
 17002  002A10  0100               	movlb	0	; () banked
 17003  002A12  6F96               	movwf	(??___fldiv+1)& (0+255),b
 17004  002A14  0EFF               	movlw	255
 17005  002A16  0100               	movlb	0	; () banked
 17006  002A18  15A2               	andwf	(___fldiv@grs+2)& (0+255),w,b
 17007  002A1A  0100               	movlb	0	; () banked
 17008  002A1C  6F97               	movwf	(??___fldiv+2)& (0+255),b
 17009  002A1E  0E7F               	movlw	127
 17010  002A20  0100               	movlb	0	; () banked
 17011  002A22  15A3               	andwf	(___fldiv@grs+3)& (0+255),w,b
 17012  002A24  0100               	movlb	0	; () banked
 17013  002A26  6F98               	movwf	(??___fldiv+3)& (0+255),b
 17014  002A28  0100               	movlb	0	; () banked
 17015  002A2A  5195               	movf	??___fldiv& (0+255),w,b
 17016  002A2C  0100               	movlb	0	; () banked
 17017  002A2E  1196               	iorwf	(??___fldiv+1)& (0+255),w,b
 17018  002A30  0100               	movlb	0	; () banked
 17019  002A32  1197               	iorwf	(??___fldiv+2)& (0+255),w,b
 17020  002A34  0100               	movlb	0	; () banked
 17021  002A36  1198               	iorwf	(??___fldiv+3)& (0+255),w,b
 17022  002A38  A4D8               	btfss	status,2,c
 17023  002A3A  D003               	goto	l12484
 17024                           
 17025                           ; BSR set to: 0
 17026                           
 17027                           ; BSR set to: 0
 17028  002A3C  0100               	movlb	0	; () banked
 17029  002A3E  A18D               	btfss	___fldiv@b& (0+255),0,b
 17030  002A40  D003               	goto	l2622
 17031  002A42                     l12484:
 17032                           
 17033                           ; BSR set to: 0
 17034  002A42  0E01               	movlw	1
 17035  002A44  0100               	movlb	0	; () banked
 17036  002A46  6FA5               	movwf	___fldiv@aexp& (0+255),b
 17037  002A48                     l2622:
 17038                           
 17039                           ; BSR set to: 0
 17040  002A48  0100               	movlb	0	; () banked
 17041  002A4A  51A5               	movf	___fldiv@aexp& (0+255),w,b
 17042  002A4C  0100               	movlb	0	; () banked
 17043  002A4E  B4D8               	btfsc	status,2,c
 17044  002A50  D023               	goto	l12494
 17045                           
 17046                           ; BSR set to: 0
 17047  002A52  0E01               	movlw	1
 17048  002A54  0100               	movlb	0	; () banked
 17049  002A56  278D               	addwf	___fldiv@b& (0+255),f,b
 17050  002A58  0E00               	movlw	0
 17051  002A5A  238E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 17052  002A5C  238F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 17053  002A5E  2390               	addwfc	(___fldiv@b+3)& (0+255),f,b
 17054                           
 17055                           ; BSR set to: 0
 17056  002A60  0100               	movlb	0	; () banked
 17057  002A62  A190               	btfss	(___fldiv@b+3)& (0+255),0,b
 17058  002A64  D019               	goto	l12494
 17059                           
 17060                           ; BSR set to: 0
 17061  002A66  C08D  F095         	movff	___fldiv@b,??___fldiv
 17062  002A6A  C08E  F096         	movff	___fldiv@b+1,??___fldiv+1
 17063  002A6E  C08F  F097         	movff	___fldiv@b+2,??___fldiv+2
 17064  002A72  C090  F098         	movff	___fldiv@b+3,??___fldiv+3
 17065  002A76  0100               	movlb	0	; () banked
 17066  002A78  3598               	rlcf	(??___fldiv+3)& (0+255),w,b
 17067  002A7A  3398               	rrcf	(??___fldiv+3)& (0+255),f,b
 17068  002A7C  3397               	rrcf	(??___fldiv+2)& (0+255),f,b
 17069  002A7E  3396               	rrcf	(??___fldiv+1)& (0+255),f,b
 17070  002A80  3395               	rrcf	??___fldiv& (0+255),f,b
 17071  002A82  C095  F08D         	movff	??___fldiv,___fldiv@b
 17072  002A86  C096  F08E         	movff	??___fldiv+1,___fldiv@b+1
 17073  002A8A  C097  F08F         	movff	??___fldiv+2,___fldiv@b+2
 17074  002A8E  C098  F090         	movff	??___fldiv+3,___fldiv@b+3
 17075                           
 17076                           ; BSR set to: 0
 17077  002A92  0100               	movlb	0	; () banked
 17078  002A94  4B9E               	infsnz	___fldiv@new_exp& (0+255),f,b
 17079  002A96  2B9F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 17080  002A98                     l12494:
 17081                           
 17082                           ; BSR set to: 0
 17083  002A98  0100               	movlb	0	; () banked
 17084  002A9A  BF9F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 17085  002A9C  D014               	goto	l12498
 17086  002A9E  0100               	movlb	0	; () banked
 17087  002AA0  519F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 17088  002AA2  E104               	bnz	u11570
 17089  002AA4  0100               	movlb	0	; () banked
 17090  002AA6  299E               	incf	___fldiv@new_exp& (0+255),w,b
 17091  002AA8  A0D8               	btfss	status,0,c
 17092  002AAA  D00D               	goto	l12498
 17093  002AAC                     u11570:
 17094                           
 17095                           ; BSR set to: 0
 17096  002AAC  0E00               	movlw	0
 17097  002AAE  0100               	movlb	0	; () banked
 17098  002AB0  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 17099  002AB2  699E               	setf	___fldiv@new_exp& (0+255),b
 17100  002AB4  0E00               	movlw	0
 17101  002AB6  0100               	movlb	0	; () banked
 17102  002AB8  6F8D               	movwf	___fldiv@b& (0+255),b
 17103  002ABA  0E00               	movlw	0
 17104  002ABC  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 17105  002ABE  0E00               	movlw	0
 17106  002AC0  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 17107  002AC2  0E00               	movlw	0
 17108  002AC4  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 17109  002AC6                     l12498:
 17110                           
 17111                           ; BSR set to: 0
 17112  002AC6  0100               	movlb	0	; () banked
 17113  002AC8  BF9F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 17114  002ACA  D007               	goto	l12500
 17115  002ACC  0100               	movlb	0	; () banked
 17116  002ACE  519F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 17117  002AD0  E115               	bnz	l12502
 17118  002AD2  0100               	movlb	0	; () banked
 17119  002AD4  059E               	decf	___fldiv@new_exp& (0+255),w,b
 17120  002AD6  B0D8               	btfsc	status,0,c
 17121  002AD8  D011               	goto	l12502
 17122  002ADA                     l12500:
 17123                           
 17124                           ; BSR set to: 0
 17125  002ADA  0E00               	movlw	0
 17126  002ADC  0100               	movlb	0	; () banked
 17127  002ADE  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 17128  002AE0  0E00               	movlw	0
 17129  002AE2  6F9E               	movwf	___fldiv@new_exp& (0+255),b
 17130  002AE4  0E00               	movlw	0
 17131  002AE6  0100               	movlb	0	; () banked
 17132  002AE8  6F8D               	movwf	___fldiv@b& (0+255),b
 17133  002AEA  0E00               	movlw	0
 17134  002AEC  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 17135  002AEE  0E00               	movlw	0
 17136  002AF0  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 17137  002AF2  0E00               	movlw	0
 17138  002AF4  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 17139  002AF6  0E00               	movlw	0
 17140  002AF8  0100               	movlb	0	; () banked
 17141  002AFA  6F99               	movwf	___fldiv@sign& (0+255),b
 17142  002AFC                     l12502:
 17143                           
 17144                           ; BSR set to: 0
 17145  002AFC  C09E  F0A4         	movff	___fldiv@new_exp,___fldiv@bexp
 17146                           
 17147                           ; BSR set to: 0
 17148  002B00  0100               	movlb	0	; () banked
 17149  002B02  A1A4               	btfss	___fldiv@bexp& (0+255),0,b
 17150  002B04  D003               	goto	l12508
 17151                           
 17152                           ; BSR set to: 0
 17153  002B06  0100               	movlb	0	; () banked
 17154  002B08  8F8F               	bsf	(___fldiv@b+2)& (0+255),7,b
 17155  002B0A  D002               	goto	l12510
 17156  002B0C                     l12508:
 17157                           
 17158                           ; BSR set to: 0
 17159  002B0C  0100               	movlb	0	; () banked
 17160  002B0E  9F8F               	bcf	(___fldiv@b+2)& (0+255),7,b
 17161  002B10                     l12510:
 17162                           
 17163                           ; BSR set to: 0
 17164  002B10  0100               	movlb	0	; () banked
 17165  002B12  90D8               	bcf	status,0,c
 17166  002B14  31A4               	rrcf	___fldiv@bexp& (0+255),w,b
 17167  002B16  0100               	movlb	0	; () banked
 17168  002B18  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 17169                           
 17170                           ; BSR set to: 0
 17171  002B1A  0100               	movlb	0	; () banked
 17172  002B1C  5199               	movf	___fldiv@sign& (0+255),w,b
 17173  002B1E  0100               	movlb	0	; () banked
 17174  002B20  1390               	iorwf	(___fldiv@b+3)& (0+255),f,b
 17175                           
 17176                           ; BSR set to: 0
 17177  002B22  C08D  F08D         	movff	___fldiv@b,?___fldiv
 17178  002B26  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 17179  002B2A  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 17180  002B2E  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 17181  002B32  0012               	return	
 17182  002B34                     __end_of___fldiv:
 17183                           	opt stack 0
 17184                           tblptru	equ	0xFF8
 17185                           tblptrh	equ	0xFF7
 17186                           tblptrl	equ	0xFF6
 17187                           tablat	equ	0xFF5
 17188                           prodh	equ	0xFF4
 17189                           prodl	equ	0xFF3
 17190                           intcon	equ	0xFF2
 17191                           intcon3	equ	0xFF0
 17192                           postinc0	equ	0xFEE
 17193                           wreg	equ	0xFE8
 17194                           indf1	equ	0xFE7
 17195                           postdec1	equ	0xFE5
 17196                           fsr1h	equ	0xFE2
 17197                           fsr1l	equ	0xFE1
 17198                           indf2	equ	0xFDF
 17199                           fsr2h	equ	0xFDA
 17200                           fsr2l	equ	0xFD9
 17201                           status	equ	0xFD8
 17202                           
 17203 ;; *************** function ___fladd *****************
 17204 ;; Defined at:
 17205 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 17206 ;; Parameters:    Size  Location     Type
 17207 ;;  b               4    0[BANK0 ] unsigned char 
 17208 ;;  a               4    4[BANK0 ] unsigned char 
 17209 ;; Auto vars:     Size  Location     Type
 17210 ;;  grs             1   19[BANK0 ] unsigned char 
 17211 ;;  bexp            1   18[BANK0 ] unsigned char 
 17212 ;;  aexp            1   17[BANK0 ] unsigned char 
 17213 ;;  signs           1   16[BANK0 ] unsigned char 
 17214 ;; Return value:  Size  Location     Type
 17215 ;;                  4    0[BANK0 ] unsigned char 
 17216 ;; Registers used:
 17217 ;;		wreg, status,2, status,0
 17218 ;; Tracked objects:
 17219 ;;		On entry : 0/0
 17220 ;;		On exit  : 0/0
 17221 ;;		Unchanged: 0/0
 17222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17223 ;;      Params:         0       8       0       0       0       0       0       0       0
 17224 ;;      Locals:         0       4       0       0       0       0       0       0       0
 17225 ;;      Temps:          0       8       0       0       0       0       0       0       0
 17226 ;;      Totals:         0      20       0       0       0       0       0       0       0
 17227 ;;Total ram usage:       20 bytes
 17228 ;; Hardware stack levels used:    1
 17229 ;; Hardware stack levels required when called:   11
 17230 ;; This function calls:
 17231 ;;		Nothing
 17232 ;; This function is called by:
 17233 ;;		_ADC_TempConversion
 17234 ;; This function uses a non-reentrant model
 17235 ;;
 17236                           
 17237                           	psect	text50
 17238  001988                     __ptext50:
 17239                           	opt stack 0
 17240  001988                     ___fladd:
 17241                           	opt stack 16
 17242                           
 17243                           ; BSR set to: 0
 17244                           ;incstack = 0
 17245  001988  0100               	movlb	0	; () banked
 17246  00198A  5163               	movf	(___fladd@b+3)& (0+255),w,b
 17247  00198C  0B80               	andlw	128
 17248  00198E  0100               	movlb	0	; () banked
 17249  001990  6F70               	movwf	___fladd@signs& (0+255),b
 17250  001992  0100               	movlb	0	; () banked
 17251  001994  5163               	movf	(___fladd@b+3)& (0+255),w,b
 17252  001996  2563               	addwf	(___fladd@b+3)& (0+255),w,b
 17253  001998  0100               	movlb	0	; () banked
 17254  00199A  6F72               	movwf	___fladd@bexp& (0+255),b
 17255                           
 17256                           ; BSR set to: 0
 17257  00199C  0100               	movlb	0	; () banked
 17258  00199E  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
 17259  0019A0  D002               	goto	l12186
 17260                           
 17261                           ; BSR set to: 0
 17262  0019A2  0100               	movlb	0	; () banked
 17263  0019A4  8172               	bsf	___fladd@bexp& (0+255),0,b
 17264  0019A6                     l12186:
 17265                           
 17266                           ; BSR set to: 0
 17267  0019A6  0100               	movlb	0	; () banked
 17268  0019A8  5172               	movf	___fladd@bexp& (0+255),w,b
 17269  0019AA  0100               	movlb	0	; () banked
 17270  0019AC  B4D8               	btfsc	status,2,c
 17271  0019AE  D012               	goto	l12196
 17272                           
 17273                           ; BSR set to: 0
 17274  0019B0  0100               	movlb	0	; () banked
 17275  0019B2  2972               	incf	___fladd@bexp& (0+255),w,b
 17276  0019B4  A4D8               	btfss	status,2,c
 17277  0019B6  D009               	goto	l12192
 17278                           
 17279                           ; BSR set to: 0
 17280  0019B8  0E00               	movlw	0
 17281  0019BA  0100               	movlb	0	; () banked
 17282  0019BC  6F60               	movwf	___fladd@b& (0+255),b
 17283  0019BE  0E00               	movlw	0
 17284  0019C0  6F61               	movwf	(___fladd@b+1)& (0+255),b
 17285  0019C2  0E00               	movlw	0
 17286  0019C4  6F62               	movwf	(___fladd@b+2)& (0+255),b
 17287  0019C6  0E00               	movlw	0
 17288  0019C8  6F63               	movwf	(___fladd@b+3)& (0+255),b
 17289  0019CA                     l12192:
 17290                           
 17291                           ; BSR set to: 0
 17292  0019CA  0100               	movlb	0	; () banked
 17293  0019CC  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 17294                           
 17295                           ; BSR set to: 0
 17296  0019CE  0E00               	movlw	0
 17297  0019D0  0100               	movlb	0	; () banked
 17298  0019D2  D008               	goto	L14
 17299  0019D4                     l12196:
 17300                           
 17301                           ; BSR set to: 0
 17302  0019D4  0E00               	movlw	0
 17303  0019D6  0100               	movlb	0	; () banked
 17304  0019D8  6F60               	movwf	___fladd@b& (0+255),b
 17305  0019DA  0E00               	movlw	0
 17306  0019DC  6F61               	movwf	(___fladd@b+1)& (0+255),b
 17307  0019DE  0E00               	movlw	0
 17308  0019E0  6F62               	movwf	(___fladd@b+2)& (0+255),b
 17309  0019E2  0E00               	movlw	0
 17310  0019E4                     L14:
 17311  0019E4  6F63               	movwf	(___fladd@b+3)& (0+255),b
 17312                           
 17313                           ; BSR set to: 0
 17314                           
 17315                           ; BSR set to: 0
 17316  0019E6  0100               	movlb	0	; () banked
 17317  0019E8  5167               	movf	(___fladd@a+3)& (0+255),w,b
 17318  0019EA  0B80               	andlw	128
 17319  0019EC  0100               	movlb	0	; () banked
 17320  0019EE  6F71               	movwf	___fladd@aexp& (0+255),b
 17321                           
 17322                           ; BSR set to: 0
 17323  0019F0  0100               	movlb	0	; () banked
 17324  0019F2  5170               	movf	___fladd@signs& (0+255),w,b
 17325  0019F4  0100               	movlb	0	; () banked
 17326  0019F6  1971               	xorwf	___fladd@aexp& (0+255),w,b
 17327  0019F8  B4D8               	btfsc	status,2,c
 17328  0019FA  D002               	goto	l12204
 17329                           
 17330                           ; BSR set to: 0
 17331  0019FC  0100               	movlb	0	; () banked
 17332  0019FE  8D70               	bsf	___fladd@signs& (0+255),6,b
 17333  001A00                     l12204:
 17334                           
 17335                           ; BSR set to: 0
 17336  001A00  0100               	movlb	0	; () banked
 17337  001A02  5167               	movf	(___fladd@a+3)& (0+255),w,b
 17338  001A04  2567               	addwf	(___fladd@a+3)& (0+255),w,b
 17339  001A06  0100               	movlb	0	; () banked
 17340  001A08  6F71               	movwf	___fladd@aexp& (0+255),b
 17341                           
 17342                           ; BSR set to: 0
 17343  001A0A  0100               	movlb	0	; () banked
 17344  001A0C  AF66               	btfss	(___fladd@a+2)& (0+255),7,b
 17345  001A0E  D002               	goto	l12210
 17346                           
 17347                           ; BSR set to: 0
 17348  001A10  0100               	movlb	0	; () banked
 17349  001A12  8171               	bsf	___fladd@aexp& (0+255),0,b
 17350  001A14                     l12210:
 17351                           
 17352                           ; BSR set to: 0
 17353  001A14  0100               	movlb	0	; () banked
 17354  001A16  5171               	movf	___fladd@aexp& (0+255),w,b
 17355  001A18  0100               	movlb	0	; () banked
 17356  001A1A  B4D8               	btfsc	status,2,c
 17357  001A1C  D012               	goto	l12220
 17358                           
 17359                           ; BSR set to: 0
 17360  001A1E  0100               	movlb	0	; () banked
 17361  001A20  2971               	incf	___fladd@aexp& (0+255),w,b
 17362  001A22  A4D8               	btfss	status,2,c
 17363  001A24  D009               	goto	l12216
 17364                           
 17365                           ; BSR set to: 0
 17366  001A26  0E00               	movlw	0
 17367  001A28  0100               	movlb	0	; () banked
 17368  001A2A  6F64               	movwf	___fladd@a& (0+255),b
 17369  001A2C  0E00               	movlw	0
 17370  001A2E  6F65               	movwf	(___fladd@a+1)& (0+255),b
 17371  001A30  0E00               	movlw	0
 17372  001A32  6F66               	movwf	(___fladd@a+2)& (0+255),b
 17373  001A34  0E00               	movlw	0
 17374  001A36  6F67               	movwf	(___fladd@a+3)& (0+255),b
 17375  001A38                     l12216:
 17376                           
 17377                           ; BSR set to: 0
 17378  001A38  0100               	movlb	0	; () banked
 17379  001A3A  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
 17380                           
 17381                           ; BSR set to: 0
 17382  001A3C  0E00               	movlw	0
 17383  001A3E  0100               	movlb	0	; () banked
 17384  001A40  D008               	goto	L15
 17385  001A42                     l12220:
 17386                           
 17387                           ; BSR set to: 0
 17388  001A42  0E00               	movlw	0
 17389  001A44  0100               	movlb	0	; () banked
 17390  001A46  6F64               	movwf	___fladd@a& (0+255),b
 17391  001A48  0E00               	movlw	0
 17392  001A4A  6F65               	movwf	(___fladd@a+1)& (0+255),b
 17393  001A4C  0E00               	movlw	0
 17394  001A4E  6F66               	movwf	(___fladd@a+2)& (0+255),b
 17395  001A50  0E00               	movlw	0
 17396  001A52                     L15:
 17397  001A52  6F67               	movwf	(___fladd@a+3)& (0+255),b
 17398                           
 17399                           ; BSR set to: 0
 17400                           
 17401                           ; BSR set to: 0
 17402  001A54  0100               	movlb	0	; () banked
 17403  001A56  5172               	movf	___fladd@bexp& (0+255),w,b
 17404  001A58  0100               	movlb	0	; () banked
 17405  001A5A  5D71               	subwf	___fladd@aexp& (0+255),w,b
 17406  001A5C  B0D8               	btfsc	status,0,c
 17407  001A5E  D024               	goto	l12258
 17408                           
 17409                           ; BSR set to: 0
 17410  001A60  0100               	movlb	0	; () banked
 17411  001A62  AD70               	btfss	___fladd@signs& (0+255),6,b
 17412  001A64  D003               	goto	l12228
 17413                           
 17414                           ; BSR set to: 0
 17415  001A66  0E80               	movlw	128
 17416  001A68  0100               	movlb	0	; () banked
 17417  001A6A  1B70               	xorwf	___fladd@signs& (0+255),f,b
 17418  001A6C                     l12228:
 17419                           
 17420                           ; BSR set to: 0
 17421  001A6C  C072  F073         	movff	___fladd@bexp,___fladd@grs
 17422                           
 17423                           ; BSR set to: 0
 17424  001A70  C071  F072         	movff	___fladd@aexp,___fladd@bexp
 17425                           
 17426                           ; BSR set to: 0
 17427  001A74  C073  F071         	movff	___fladd@grs,___fladd@aexp
 17428                           
 17429                           ; BSR set to: 0
 17430  001A78  C060  F073         	movff	___fladd@b,___fladd@grs
 17431                           
 17432                           ; BSR set to: 0
 17433  001A7C  C064  F060         	movff	___fladd@a,___fladd@b
 17434                           
 17435                           ; BSR set to: 0
 17436  001A80  C073  F064         	movff	___fladd@grs,___fladd@a
 17437                           
 17438                           ; BSR set to: 0
 17439  001A84  C061  F073         	movff	___fladd@b+1,___fladd@grs
 17440                           
 17441                           ; BSR set to: 0
 17442  001A88  C065  F061         	movff	___fladd@a+1,___fladd@b+1
 17443                           
 17444                           ; BSR set to: 0
 17445  001A8C  C073  F065         	movff	___fladd@grs,___fladd@a+1
 17446                           
 17447                           ; BSR set to: 0
 17448  001A90  C062  F073         	movff	___fladd@b+2,___fladd@grs
 17449                           
 17450                           ; BSR set to: 0
 17451  001A94  C066  F062         	movff	___fladd@a+2,___fladd@b+2
 17452                           
 17453                           ; BSR set to: 0
 17454  001A98  C073  F066         	movff	___fladd@grs,___fladd@a+2
 17455                           
 17456                           ; BSR set to: 0
 17457  001A9C  C063  F073         	movff	___fladd@b+3,___fladd@grs
 17458                           
 17459                           ; BSR set to: 0
 17460  001AA0  C067  F063         	movff	___fladd@a+3,___fladd@b+3
 17461                           
 17462                           ; BSR set to: 0
 17463  001AA4  C073  F067         	movff	___fladd@grs,___fladd@a+3
 17464  001AA8                     l12258:
 17465                           
 17466                           ; BSR set to: 0
 17467  001AA8  0E00               	movlw	0
 17468  001AAA  0100               	movlb	0	; () banked
 17469  001AAC  6F73               	movwf	___fladd@grs& (0+255),b
 17470                           
 17471                           ; BSR set to: 0
 17472  001AAE  0100               	movlb	0	; () banked
 17473  001AB0  5172               	movf	___fladd@bexp& (0+255),w,b
 17474  001AB2  0100               	movlb	0	; () banked
 17475  001AB4  6F68               	movwf	??___fladd& (0+255),b
 17476  001AB6  6B69               	clrf	(??___fladd+1)& (0+255),b
 17477  001AB8  0100               	movlb	0	; () banked
 17478  001ABA  1F68               	comf	??___fladd& (0+255),f,b
 17479  001ABC  1F69               	comf	(??___fladd+1)& (0+255),f,b
 17480  001ABE  4B68               	infsnz	??___fladd& (0+255),f,b
 17481  001AC0  2B69               	incf	(??___fladd+1)& (0+255),f,b
 17482  001AC2  0100               	movlb	0	; () banked
 17483  001AC4  5171               	movf	___fladd@aexp& (0+255),w,b
 17484  001AC6  0100               	movlb	0	; () banked
 17485  001AC8  6F6A               	movwf	(??___fladd+2)& (0+255),b
 17486  001ACA  6B6B               	clrf	(??___fladd+3)& (0+255),b
 17487  001ACC  0100               	movlb	0	; () banked
 17488  001ACE  5168               	movf	??___fladd& (0+255),w,b
 17489  001AD0  0100               	movlb	0	; () banked
 17490  001AD2  276A               	addwf	(??___fladd+2)& (0+255),f,b
 17491  001AD4  0100               	movlb	0	; () banked
 17492  001AD6  5169               	movf	(??___fladd+1)& (0+255),w,b
 17493  001AD8  0100               	movlb	0	; () banked
 17494  001ADA  236B               	addwfc	(??___fladd+3)& (0+255),f,b
 17495  001ADC  0100               	movlb	0	; () banked
 17496  001ADE  BF6B               	btfsc	(??___fladd+3)& (0+255),7,b
 17497  001AE0  D03D               	goto	l2556
 17498  001AE2  0100               	movlb	0	; () banked
 17499  001AE4  516B               	movf	(??___fladd+3)& (0+255),w,b
 17500  001AE6  E105               	bnz	u11070
 17501  001AE8  0E1A               	movlw	26
 17502  001AEA  0100               	movlb	0	; () banked
 17503  001AEC  5D6A               	subwf	(??___fladd+2)& (0+255),w,b
 17504  001AEE  A0D8               	btfss	status,0,c
 17505  001AF0  D035               	goto	l2556
 17506  001AF2                     u11070:
 17507                           
 17508                           ; BSR set to: 0
 17509  001AF2  0100               	movlb	0	; () banked
 17510  001AF4  5160               	movf	___fladd@b& (0+255),w,b
 17511  001AF6  0100               	movlb	0	; () banked
 17512  001AF8  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 17513  001AFA  0100               	movlb	0	; () banked
 17514  001AFC  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 17515  001AFE  0100               	movlb	0	; () banked
 17516  001B00  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 17517  001B02  B4D8               	btfsc	status,2,c
 17518  001B04  D002               	goto	u11080
 17519  001B06  0E01               	movlw	1
 17520  001B08  D001               	goto	u11090
 17521  001B0A                     u11080:
 17522  001B0A  0E00               	movlw	0
 17523  001B0C                     u11090:
 17524  001B0C  0100               	movlb	0	; () banked
 17525  001B0E  6F73               	movwf	___fladd@grs& (0+255),b
 17526                           
 17527                           ; BSR set to: 0
 17528  001B10  0E00               	movlw	0
 17529  001B12  0100               	movlb	0	; () banked
 17530  001B14  6F60               	movwf	___fladd@b& (0+255),b
 17531  001B16  0E00               	movlw	0
 17532  001B18  6F61               	movwf	(___fladd@b+1)& (0+255),b
 17533  001B1A  0E00               	movlw	0
 17534  001B1C  6F62               	movwf	(___fladd@b+2)& (0+255),b
 17535  001B1E  0E00               	movlw	0
 17536  001B20  6F63               	movwf	(___fladd@b+3)& (0+255),b
 17537                           
 17538                           ; BSR set to: 0
 17539  001B22  C071  F072         	movff	___fladd@aexp,___fladd@bexp
 17540  001B26  D020               	goto	l2555
 17541  001B28                     l2557:
 17542                           
 17543                           ; BSR set to: 0
 17544  001B28  0100               	movlb	0	; () banked
 17545  001B2A  A173               	btfss	___fladd@grs& (0+255),0,b
 17546  001B2C  D007               	goto	l12270
 17547                           
 17548                           ; BSR set to: 0
 17549  001B2E  0100               	movlb	0	; () banked
 17550  001B30  90D8               	bcf	status,0,c
 17551  001B32  3173               	rrcf	___fladd@grs& (0+255),w,b
 17552  001B34  0901               	iorlw	1
 17553  001B36  0100               	movlb	0	; () banked
 17554  001B38  6F73               	movwf	___fladd@grs& (0+255),b
 17555  001B3A  D003               	goto	l12272
 17556  001B3C                     l12270:
 17557                           
 17558                           ; BSR set to: 0
 17559  001B3C  0100               	movlb	0	; () banked
 17560  001B3E  90D8               	bcf	status,0,c
 17561  001B40  3373               	rrcf	___fladd@grs& (0+255),f,b
 17562  001B42                     l12272:
 17563                           
 17564                           ; BSR set to: 0
 17565  001B42  0100               	movlb	0	; () banked
 17566  001B44  A160               	btfss	___fladd@b& (0+255),0,b
 17567  001B46  D002               	goto	l12276
 17568                           
 17569                           ; BSR set to: 0
 17570  001B48  0100               	movlb	0	; () banked
 17571  001B4A  8F73               	bsf	___fladd@grs& (0+255),7,b
 17572  001B4C                     l12276:
 17573                           
 17574                           ; BSR set to: 0
 17575  001B4C  0100               	movlb	0	; () banked
 17576  001B4E  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 17577  001B50  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 17578  001B52  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 17579  001B54  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 17580  001B56  3360               	rrcf	___fladd@b& (0+255),f,b
 17581                           
 17582                           ; BSR set to: 0
 17583  001B58  0100               	movlb	0	; () banked
 17584  001B5A  2B72               	incf	___fladd@bexp& (0+255),f,b
 17585  001B5C                     l2556:
 17586                           
 17587                           ; BSR set to: 0
 17588  001B5C  0100               	movlb	0	; () banked
 17589  001B5E  5171               	movf	___fladd@aexp& (0+255),w,b
 17590  001B60  0100               	movlb	0	; () banked
 17591  001B62  5D72               	subwf	___fladd@bexp& (0+255),w,b
 17592  001B64  A0D8               	btfss	status,0,c
 17593  001B66  D7E0               	goto	l2557
 17594  001B68                     l2555:
 17595                           
 17596                           ; BSR set to: 0
 17597  001B68  0100               	movlb	0	; () banked
 17598  001B6A  BD70               	btfsc	___fladd@signs& (0+255),6,b
 17599  001B6C  D03F               	goto	l12304
 17600                           
 17601                           ; BSR set to: 0
 17602  001B6E  0100               	movlb	0	; () banked
 17603  001B70  5172               	movf	___fladd@bexp& (0+255),w,b
 17604  001B72  0100               	movlb	0	; () banked
 17605  001B74  A4D8               	btfss	status,2,c
 17606  001B76  D00A               	goto	l12286
 17607                           
 17608                           ; BSR set to: 0
 17609  001B78  0E00               	movlw	0
 17610  001B7A  0100               	movlb	0	; () banked
 17611  001B7C  6F60               	movwf	?___fladd& (0+255),b
 17612  001B7E  0E00               	movlw	0
 17613  001B80  6F61               	movwf	(?___fladd+1)& (0+255),b
 17614  001B82  0E00               	movlw	0
 17615  001B84  6F62               	movwf	(?___fladd+2)& (0+255),b
 17616  001B86  0E00               	movlw	0
 17617  001B88  6F63               	movwf	(?___fladd+3)& (0+255),b
 17618                           
 17619                           ; BSR set to: 0
 17620  001B8A  0012               	return	
 17621  001B8C                     l12286:
 17622                           
 17623                           ; BSR set to: 0
 17624  001B8C  0100               	movlb	0	; () banked
 17625  001B8E  5164               	movf	___fladd@a& (0+255),w,b
 17626  001B90  0100               	movlb	0	; () banked
 17627  001B92  2760               	addwf	___fladd@b& (0+255),f,b
 17628  001B94  0100               	movlb	0	; () banked
 17629  001B96  5165               	movf	(___fladd@a+1)& (0+255),w,b
 17630  001B98  0100               	movlb	0	; () banked
 17631  001B9A  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 17632  001B9C  0100               	movlb	0	; () banked
 17633  001B9E  5166               	movf	(___fladd@a+2)& (0+255),w,b
 17634  001BA0  0100               	movlb	0	; () banked
 17635  001BA2  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 17636  001BA4  0100               	movlb	0	; () banked
 17637  001BA6  5167               	movf	(___fladd@a+3)& (0+255),w,b
 17638  001BA8  0100               	movlb	0	; () banked
 17639  001BAA  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 17640                           
 17641                           ; BSR set to: 0
 17642  001BAC  0100               	movlb	0	; () banked
 17643  001BAE  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 17644  001BB0  D0CC               	goto	l12340
 17645                           
 17646                           ; BSR set to: 0
 17647  001BB2  0100               	movlb	0	; () banked
 17648  001BB4  A173               	btfss	___fladd@grs& (0+255),0,b
 17649  001BB6  D009               	goto	l12294
 17650                           
 17651                           ; BSR set to: 0
 17652  001BB8  0100               	movlb	0	; () banked
 17653  001BBA  90D8               	bcf	status,0,c
 17654  001BBC  3373               	rrcf	___fladd@grs& (0+255),f,b
 17655  001BBE  0100               	movlb	0	; () banked
 17656  001BC0  5173               	movf	___fladd@grs& (0+255),w,b
 17657  001BC2  0901               	iorlw	1
 17658  001BC4  0100               	movlb	0	; () banked
 17659  001BC6  6F73               	movwf	___fladd@grs& (0+255),b
 17660  001BC8  D003               	goto	l12296
 17661  001BCA                     l12294:
 17662                           
 17663                           ; BSR set to: 0
 17664  001BCA  0100               	movlb	0	; () banked
 17665  001BCC  90D8               	bcf	status,0,c
 17666  001BCE  3373               	rrcf	___fladd@grs& (0+255),f,b
 17667  001BD0                     l12296:
 17668                           
 17669                           ; BSR set to: 0
 17670  001BD0  0100               	movlb	0	; () banked
 17671  001BD2  A160               	btfss	___fladd@b& (0+255),0,b
 17672  001BD4  D002               	goto	l12300
 17673                           
 17674                           ; BSR set to: 0
 17675  001BD6  0100               	movlb	0	; () banked
 17676  001BD8  8F73               	bsf	___fladd@grs& (0+255),7,b
 17677  001BDA                     l12300:
 17678                           
 17679                           ; BSR set to: 0
 17680  001BDA  0100               	movlb	0	; () banked
 17681  001BDC  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 17682  001BDE  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 17683  001BE0  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 17684  001BE2  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 17685  001BE4  3360               	rrcf	___fladd@b& (0+255),f,b
 17686                           
 17687                           ; BSR set to: 0
 17688  001BE6  0100               	movlb	0	; () banked
 17689  001BE8  2B72               	incf	___fladd@bexp& (0+255),f,b
 17690                           
 17691                           ; BSR set to: 0
 17692  001BEA  D0AF               	goto	l12340
 17693  001BEC                     l12304:
 17694                           
 17695                           ; BSR set to: 0
 17696  001BEC  0100               	movlb	0	; () banked
 17697  001BEE  5164               	movf	___fladd@a& (0+255),w,b
 17698  001BF0  0100               	movlb	0	; () banked
 17699  001BF2  5D60               	subwf	___fladd@b& (0+255),w,b
 17700  001BF4  0100               	movlb	0	; () banked
 17701  001BF6  5165               	movf	(___fladd@a+1)& (0+255),w,b
 17702  001BF8  0100               	movlb	0	; () banked
 17703  001BFA  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
 17704  001BFC  0100               	movlb	0	; () banked
 17705  001BFE  5166               	movf	(___fladd@a+2)& (0+255),w,b
 17706  001C00  0100               	movlb	0	; () banked
 17707  001C02  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
 17708  001C04  0100               	movlb	0	; () banked
 17709  001C06  5163               	movf	(___fladd@b+3)& (0+255),w,b
 17710  001C08  0A80               	xorlw	128
 17711  001C0A  0100               	movlb	0	; () banked
 17712  001C0C  6F68               	movwf	??___fladd& (0+255),b
 17713  001C0E  0100               	movlb	0	; () banked
 17714  001C10  5167               	movf	(___fladd@a+3)& (0+255),w,b
 17715  001C12  0A80               	xorlw	128
 17716  001C14  0100               	movlb	0	; () banked
 17717  001C16  5968               	subwfb	??___fladd& (0+255),w,b
 17718  001C18  B0D8               	btfsc	status,0,c
 17719  001C1A  D050               	goto	l12314
 17720                           
 17721                           ; BSR set to: 0
 17722  001C1C  C060  F068         	movff	___fladd@b,??___fladd
 17723  001C20  C061  F069         	movff	___fladd@b+1,??___fladd+1
 17724  001C24  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 17725  001C28  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 17726  001C2C  0100               	movlb	0	; () banked
 17727  001C2E  1F68               	comf	??___fladd& (0+255),f,b
 17728  001C30  1F69               	comf	(??___fladd+1)& (0+255),f,b
 17729  001C32  1F6A               	comf	(??___fladd+2)& (0+255),f,b
 17730  001C34  1F6B               	comf	(??___fladd+3)& (0+255),f,b
 17731  001C36  2B68               	incf	??___fladd& (0+255),f,b
 17732  001C38  0E00               	movlw	0
 17733  001C3A  2369               	addwfc	(??___fladd+1)& (0+255),f,b
 17734  001C3C  236A               	addwfc	(??___fladd+2)& (0+255),f,b
 17735  001C3E  236B               	addwfc	(??___fladd+3)& (0+255),f,b
 17736  001C40  0100               	movlb	0	; () banked
 17737  001C42  5164               	movf	___fladd@a& (0+255),w,b
 17738  001C44  0100               	movlb	0	; () banked
 17739  001C46  2568               	addwf	??___fladd& (0+255),w,b
 17740  001C48  0100               	movlb	0	; () banked
 17741  001C4A  6F6C               	movwf	(??___fladd+4)& (0+255),b
 17742  001C4C  0100               	movlb	0	; () banked
 17743  001C4E  5165               	movf	(___fladd@a+1)& (0+255),w,b
 17744  001C50  0100               	movlb	0	; () banked
 17745  001C52  2169               	addwfc	(??___fladd+1)& (0+255),w,b
 17746  001C54  0100               	movlb	0	; () banked
 17747  001C56  6F6D               	movwf	(??___fladd+5)& (0+255),b
 17748  001C58  0100               	movlb	0	; () banked
 17749  001C5A  5166               	movf	(___fladd@a+2)& (0+255),w,b
 17750  001C5C  0100               	movlb	0	; () banked
 17751  001C5E  216A               	addwfc	(??___fladd+2)& (0+255),w,b
 17752  001C60  0100               	movlb	0	; () banked
 17753  001C62  6F6E               	movwf	(??___fladd+6)& (0+255),b
 17754  001C64  0100               	movlb	0	; () banked
 17755  001C66  5167               	movf	(___fladd@a+3)& (0+255),w,b
 17756  001C68  0100               	movlb	0	; () banked
 17757  001C6A  216B               	addwfc	(??___fladd+3)& (0+255),w,b
 17758  001C6C  0100               	movlb	0	; () banked
 17759  001C6E  6F6F               	movwf	(??___fladd+7)& (0+255),b
 17760  001C70  0EFF               	movlw	255
 17761  001C72  0100               	movlb	0	; () banked
 17762  001C74  256C               	addwf	(??___fladd+4)& (0+255),w,b
 17763  001C76  0100               	movlb	0	; () banked
 17764  001C78  6F60               	movwf	___fladd@b& (0+255),b
 17765  001C7A  0EFF               	movlw	255
 17766  001C7C  0100               	movlb	0	; () banked
 17767  001C7E  216D               	addwfc	(??___fladd+5)& (0+255),w,b
 17768  001C80  0100               	movlb	0	; () banked
 17769  001C82  6F61               	movwf	(___fladd@b+1)& (0+255),b
 17770  001C84  0EFF               	movlw	255
 17771  001C86  0100               	movlb	0	; () banked
 17772  001C88  216E               	addwfc	(??___fladd+6)& (0+255),w,b
 17773  001C8A  0100               	movlb	0	; () banked
 17774  001C8C  6F62               	movwf	(___fladd@b+2)& (0+255),b
 17775  001C8E  0EFF               	movlw	255
 17776  001C90  0100               	movlb	0	; () banked
 17777  001C92  216F               	addwfc	(??___fladd+7)& (0+255),w,b
 17778  001C94  0100               	movlb	0	; () banked
 17779  001C96  6F63               	movwf	(___fladd@b+3)& (0+255),b
 17780  001C98  0E80               	movlw	128
 17781  001C9A  0100               	movlb	0	; () banked
 17782  001C9C  1B70               	xorwf	___fladd@signs& (0+255),f,b
 17783                           
 17784                           ; BSR set to: 0
 17785  001C9E  0100               	movlb	0	; () banked
 17786  001CA0  6D73               	negf	___fladd@grs& (0+255),b
 17787                           
 17788                           ; BSR set to: 0
 17789  001CA2  0100               	movlb	0	; () banked
 17790  001CA4  5173               	movf	___fladd@grs& (0+255),w,b
 17791  001CA6  0100               	movlb	0	; () banked
 17792  001CA8  A4D8               	btfss	status,2,c
 17793  001CAA  D018               	goto	l2572
 17794                           
 17795                           ; BSR set to: 0
 17796  001CAC  0E01               	movlw	1
 17797  001CAE  0100               	movlb	0	; () banked
 17798  001CB0  2760               	addwf	___fladd@b& (0+255),f,b
 17799  001CB2  0E00               	movlw	0
 17800  001CB4  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 17801  001CB6  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 17802  001CB8  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 17803                           
 17804                           ; BSR set to: 0
 17805  001CBA  D010               	goto	l2572
 17806  001CBC                     l12314:
 17807                           
 17808                           ; BSR set to: 0
 17809  001CBC  0100               	movlb	0	; () banked
 17810  001CBE  5164               	movf	___fladd@a& (0+255),w,b
 17811  001CC0  0100               	movlb	0	; () banked
 17812  001CC2  5F60               	subwf	___fladd@b& (0+255),f,b
 17813  001CC4  0100               	movlb	0	; () banked
 17814  001CC6  5165               	movf	(___fladd@a+1)& (0+255),w,b
 17815  001CC8  0100               	movlb	0	; () banked
 17816  001CCA  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
 17817  001CCC  0100               	movlb	0	; () banked
 17818  001CCE  5166               	movf	(___fladd@a+2)& (0+255),w,b
 17819  001CD0  0100               	movlb	0	; () banked
 17820  001CD2  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
 17821  001CD4  0100               	movlb	0	; () banked
 17822  001CD6  5167               	movf	(___fladd@a+3)& (0+255),w,b
 17823  001CD8  0100               	movlb	0	; () banked
 17824  001CDA  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
 17825  001CDC                     l2572:
 17826                           
 17827                           ; BSR set to: 0
 17828  001CDC  0100               	movlb	0	; () banked
 17829  001CDE  5160               	movf	___fladd@b& (0+255),w,b
 17830  001CE0  0100               	movlb	0	; () banked
 17831  001CE2  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 17832  001CE4  0100               	movlb	0	; () banked
 17833  001CE6  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 17834  001CE8  0100               	movlb	0	; () banked
 17835  001CEA  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 17836  001CEC  A4D8               	btfss	status,2,c
 17837  001CEE  D02A               	goto	l12338
 17838                           
 17839                           ; BSR set to: 0
 17840  001CF0  0100               	movlb	0	; () banked
 17841  001CF2  5173               	movf	___fladd@grs& (0+255),w,b
 17842  001CF4  0100               	movlb	0	; () banked
 17843  001CF6  A4D8               	btfss	status,2,c
 17844  001CF8  D025               	goto	l12338
 17845                           
 17846                           ; BSR set to: 0
 17847  001CFA  0E00               	movlw	0
 17848  001CFC  0100               	movlb	0	; () banked
 17849  001CFE  6F60               	movwf	?___fladd& (0+255),b
 17850  001D00  0E00               	movlw	0
 17851  001D02  6F61               	movwf	(?___fladd+1)& (0+255),b
 17852  001D04  0E00               	movlw	0
 17853  001D06  6F62               	movwf	(?___fladd+2)& (0+255),b
 17854  001D08  0E00               	movlw	0
 17855  001D0A  6F63               	movwf	(?___fladd+3)& (0+255),b
 17856                           
 17857                           ; BSR set to: 0
 17858  001D0C  0012               	return	
 17859  001D0E                     l12322:
 17860                           
 17861                           ; BSR set to: 0
 17862  001D0E  0100               	movlb	0	; () banked
 17863  001D10  90D8               	bcf	status,0,c
 17864  001D12  3760               	rlcf	___fladd@b& (0+255),f,b
 17865  001D14  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
 17866  001D16  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
 17867  001D18  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
 17868                           
 17869                           ; BSR set to: 0
 17870  001D1A  0100               	movlb	0	; () banked
 17871  001D1C  AF73               	btfss	___fladd@grs& (0+255),7,b
 17872  001D1E  D002               	goto	l12328
 17873                           
 17874                           ; BSR set to: 0
 17875  001D20  0100               	movlb	0	; () banked
 17876  001D22  8160               	bsf	___fladd@b& (0+255),0,b
 17877  001D24                     l12328:
 17878                           
 17879                           ; BSR set to: 0
 17880  001D24  0100               	movlb	0	; () banked
 17881  001D26  A173               	btfss	___fladd@grs& (0+255),0,b
 17882  001D28  D003               	goto	l12332
 17883                           
 17884                           ; BSR set to: 0
 17885  001D2A  80D8               	bsf	status,0,c
 17886  001D2C  0100               	movlb	0	; () banked
 17887  001D2E  D002               	goto	L16
 17888  001D30                     l12332:
 17889                           
 17890                           ; BSR set to: 0
 17891  001D30  0100               	movlb	0	; () banked
 17892  001D32  90D8               	bcf	status,0,c
 17893  001D34                     L16:
 17894  001D34  3773               	rlcf	___fladd@grs& (0+255),f,b
 17895                           
 17896                           ; BSR set to: 0
 17897                           
 17898                           ; BSR set to: 0
 17899  001D36  0100               	movlb	0	; () banked
 17900  001D38  5172               	movf	___fladd@bexp& (0+255),w,b
 17901  001D3A  0100               	movlb	0	; () banked
 17902  001D3C  B4D8               	btfsc	status,2,c
 17903  001D3E  D002               	goto	l12338
 17904                           
 17905                           ; BSR set to: 0
 17906  001D40  0100               	movlb	0	; () banked
 17907  001D42  0772               	decf	___fladd@bexp& (0+255),f,b
 17908  001D44                     l12338:
 17909                           
 17910                           ; BSR set to: 0
 17911  001D44  0100               	movlb	0	; () banked
 17912  001D46  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
 17913  001D48  D7E2               	goto	l12322
 17914  001D4A                     l12340:
 17915                           
 17916                           ; BSR set to: 0
 17917  001D4A  0E00               	movlw	0
 17918  001D4C  0100               	movlb	0	; () banked
 17919  001D4E  6F71               	movwf	___fladd@aexp& (0+255),b
 17920                           
 17921                           ; BSR set to: 0
 17922  001D50  0100               	movlb	0	; () banked
 17923  001D52  AF73               	btfss	___fladd@grs& (0+255),7,b
 17924  001D54  D00D               	goto	l2581
 17925                           
 17926                           ; BSR set to: 0
 17927  001D56  C073  F068         	movff	___fladd@grs,??___fladd
 17928  001D5A  0E7F               	movlw	127
 17929  001D5C  0100               	movlb	0	; () banked
 17930  001D5E  1768               	andwf	??___fladd& (0+255),f,b
 17931  001D60  A4D8               	btfss	status,2,c
 17932  001D62  D003               	goto	l12348
 17933                           
 17934                           ; BSR set to: 0
 17935                           
 17936                           ; BSR set to: 0
 17937  001D64  0100               	movlb	0	; () banked
 17938  001D66  A160               	btfss	___fladd@b& (0+255),0,b
 17939  001D68  D003               	goto	l2581
 17940  001D6A                     l12348:
 17941                           
 17942                           ; BSR set to: 0
 17943  001D6A  0E01               	movlw	1
 17944  001D6C  0100               	movlb	0	; () banked
 17945  001D6E  6F71               	movwf	___fladd@aexp& (0+255),b
 17946  001D70                     l2581:
 17947                           
 17948                           ; BSR set to: 0
 17949  001D70  0100               	movlb	0	; () banked
 17950  001D72  5171               	movf	___fladd@aexp& (0+255),w,b
 17951  001D74  0100               	movlb	0	; () banked
 17952  001D76  B4D8               	btfsc	status,2,c
 17953  001D78  D026               	goto	l12358
 17954                           
 17955                           ; BSR set to: 0
 17956  001D7A  0E01               	movlw	1
 17957  001D7C  0100               	movlb	0	; () banked
 17958  001D7E  2760               	addwf	___fladd@b& (0+255),f,b
 17959  001D80  0E00               	movlw	0
 17960  001D82  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 17961  001D84  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 17962  001D86  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 17963                           
 17964                           ; BSR set to: 0
 17965  001D88  0100               	movlb	0	; () banked
 17966  001D8A  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 17967  001D8C  D01C               	goto	l12358
 17968                           
 17969                           ; BSR set to: 0
 17970  001D8E  C060  F068         	movff	___fladd@b,??___fladd
 17971  001D92  C061  F069         	movff	___fladd@b+1,??___fladd+1
 17972  001D96  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 17973  001D9A  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 17974  001D9E  0100               	movlb	0	; () banked
 17975  001DA0  356B               	rlcf	(??___fladd+3)& (0+255),w,b
 17976  001DA2  336B               	rrcf	(??___fladd+3)& (0+255),f,b
 17977  001DA4  336A               	rrcf	(??___fladd+2)& (0+255),f,b
 17978  001DA6  3369               	rrcf	(??___fladd+1)& (0+255),f,b
 17979  001DA8  3368               	rrcf	??___fladd& (0+255),f,b
 17980  001DAA  C068  F060         	movff	??___fladd,___fladd@b
 17981  001DAE  C069  F061         	movff	??___fladd+1,___fladd@b+1
 17982  001DB2  C06A  F062         	movff	??___fladd+2,___fladd@b+2
 17983  001DB6  C06B  F063         	movff	??___fladd+3,___fladd@b+3
 17984  001DBA  0100               	movlb	0	; () banked
 17985  001DBC  2972               	incf	___fladd@bexp& (0+255),w,b
 17986  001DBE  B4D8               	btfsc	status,2,c
 17987  001DC0  D002               	goto	l12358
 17988                           
 17989                           ; BSR set to: 0
 17990  001DC2  0100               	movlb	0	; () banked
 17991  001DC4  2B72               	incf	___fladd@bexp& (0+255),f,b
 17992  001DC6                     l12358:
 17993                           
 17994                           ; BSR set to: 0
 17995  001DC6  0100               	movlb	0	; () banked
 17996  001DC8  2972               	incf	___fladd@bexp& (0+255),w,b
 17997  001DCA  B4D8               	btfsc	status,2,c
 17998  001DCC  D005               	goto	l12362
 17999                           
 18000                           ; BSR set to: 0
 18001  001DCE  0100               	movlb	0	; () banked
 18002  001DD0  5172               	movf	___fladd@bexp& (0+255),w,b
 18003  001DD2  0100               	movlb	0	; () banked
 18004  001DD4  A4D8               	btfss	status,2,c
 18005  001DD6  D011               	goto	l12366
 18006  001DD8                     l12362:
 18007                           
 18008                           ; BSR set to: 0
 18009  001DD8  0E00               	movlw	0
 18010  001DDA  0100               	movlb	0	; () banked
 18011  001DDC  6F60               	movwf	___fladd@b& (0+255),b
 18012  001DDE  0E00               	movlw	0
 18013  001DE0  6F61               	movwf	(___fladd@b+1)& (0+255),b
 18014  001DE2  0E00               	movlw	0
 18015  001DE4  6F62               	movwf	(___fladd@b+2)& (0+255),b
 18016  001DE6  0E00               	movlw	0
 18017  001DE8  6F63               	movwf	(___fladd@b+3)& (0+255),b
 18018  001DEA  0100               	movlb	0	; () banked
 18019  001DEC  5172               	movf	___fladd@bexp& (0+255),w,b
 18020  001DEE  0100               	movlb	0	; () banked
 18021  001DF0  A4D8               	btfss	status,2,c
 18022  001DF2  D003               	goto	l12366
 18023                           
 18024                           ; BSR set to: 0
 18025  001DF4  0E00               	movlw	0
 18026  001DF6  0100               	movlb	0	; () banked
 18027  001DF8  6F70               	movwf	___fladd@signs& (0+255),b
 18028  001DFA                     l12366:
 18029                           
 18030                           ; BSR set to: 0
 18031  001DFA  0100               	movlb	0	; () banked
 18032  001DFC  A172               	btfss	___fladd@bexp& (0+255),0,b
 18033  001DFE  D003               	goto	l12370
 18034                           
 18035                           ; BSR set to: 0
 18036  001E00  0100               	movlb	0	; () banked
 18037  001E02  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 18038  001E04  D002               	goto	l12372
 18039  001E06                     l12370:
 18040                           
 18041                           ; BSR set to: 0
 18042  001E06  0100               	movlb	0	; () banked
 18043  001E08  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
 18044  001E0A                     l12372:
 18045                           
 18046                           ; BSR set to: 0
 18047  001E0A  0100               	movlb	0	; () banked
 18048  001E0C  90D8               	bcf	status,0,c
 18049  001E0E  3172               	rrcf	___fladd@bexp& (0+255),w,b
 18050  001E10  0100               	movlb	0	; () banked
 18051  001E12  6F63               	movwf	(___fladd@b+3)& (0+255),b
 18052                           
 18053                           ; BSR set to: 0
 18054  001E14  0100               	movlb	0	; () banked
 18055  001E16  AF70               	btfss	___fladd@signs& (0+255),7,b
 18056  001E18  D002               	goto	l12378
 18057                           
 18058                           ; BSR set to: 0
 18059  001E1A  0100               	movlb	0	; () banked
 18060  001E1C  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
 18061  001E1E                     l12378:
 18062                           
 18063                           ; BSR set to: 0
 18064  001E1E  C060  F060         	movff	___fladd@b,?___fladd
 18065  001E22  C061  F061         	movff	___fladd@b+1,?___fladd+1
 18066  001E26  C062  F062         	movff	___fladd@b+2,?___fladd+2
 18067  001E2A  C063  F063         	movff	___fladd@b+3,?___fladd+3
 18068  001E2E  0012               	return	
 18069  001E30                     __end_of___fladd:
 18070                           	opt stack 0
 18071                           tblptru	equ	0xFF8
 18072                           tblptrh	equ	0xFF7
 18073                           tblptrl	equ	0xFF6
 18074                           tablat	equ	0xFF5
 18075                           prodh	equ	0xFF4
 18076                           prodl	equ	0xFF3
 18077                           intcon	equ	0xFF2
 18078                           intcon3	equ	0xFF0
 18079                           postinc0	equ	0xFEE
 18080                           wreg	equ	0xFE8
 18081                           indf1	equ	0xFE7
 18082                           postdec1	equ	0xFE5
 18083                           fsr1h	equ	0xFE2
 18084                           fsr1l	equ	0xFE1
 18085                           indf2	equ	0xFDF
 18086                           fsr2h	equ	0xFDA
 18087                           fsr2l	equ	0xFD9
 18088                           status	equ	0xFD8
 18089                           
 18090 ;; *************** function _moteJoiningProcess *****************
 18091 ;; Defined at:
 18092 ;;		line 291 in file "../Includes/Board/MOTEapp.c"
 18093 ;; Parameters:    Size  Location     Type
 18094 ;;  messageReady    1    wreg     unsigned char 
 18095 ;;  changeStates    1   22[BANK0 ] unsigned char 
 18096 ;;  selectButton    1   23[BANK0 ] unsigned char 
 18097 ;; Auto vars:     Size  Location     Type
 18098 ;;  messageReady    1   27[BANK0 ] unsigned char 
 18099 ;;  readDataRate    1   25[BANK0 ] unsigned char 
 18100 ;;  joiningCompl    1   26[BANK0 ] unsigned char 
 18101 ;; Return value:  Size  Location     Type
 18102 ;;                  1    wreg      enum E6983
 18103 ;; Registers used:
 18104 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18105 ;; Tracked objects:
 18106 ;;		On entry : 0/0
 18107 ;;		On exit  : 0/0
 18108 ;;		Unchanged: 0/0
 18109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18110 ;;      Params:         0       2       0       0       0       0       0       0       0
 18111 ;;      Locals:         0       3       0       0       0       0       0       0       0
 18112 ;;      Temps:          0       1       0       0       0       0       0       0       0
 18113 ;;      Totals:         0       6       0       0       0       0       0       0       0
 18114 ;;Total ram usage:        6 bytes
 18115 ;; Hardware stack levels used:    1
 18116 ;; Hardware stack levels required when called:   16
 18117 ;; This function calls:
 18118 ;;		_DATAEE_WriteByte
 18119 ;;		_moteApp_delayms
 18120 ;;		_oled_clear
 18121 ;;		_oled_putString
 18122 ;;		_sendCommand
 18123 ;;		_strcmp
 18124 ;;		_strncmp
 18125 ;; This function is called by:
 18126 ;;		_moteHandler
 18127 ;; This function uses a non-reentrant model
 18128 ;;
 18129                           
 18130                           	psect	text51
 18131  00131E                     __ptext51:
 18132                           	opt stack 0
 18133  00131E                     _moteJoiningProcess:
 18134                           	opt stack 13
 18135                           
 18136                           ; BSR set to: 0
 18137                           ;incstack = 0
 18138                           ;moteJoiningProcess@messageReady stored from wreg
 18139  00131E  0100               	movlb	0	; () banked
 18140  001320  6F7B               	movwf	moteJoiningProcess@messageReady& (0+255),b
 18141                           
 18142                           ;MOTEapp.c: 293: bool joiningComplete = 0;
 18143  001322  0E00               	movlw	0
 18144  001324  0100               	movlb	0	; () banked
 18145  001326  6F7A               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 18146                           
 18147                           ;MOTEapp.c: 295: switch (activeState)
 18148  001328  D308               	goto	l13886
 18149  00132A  D7FF               	goto	l397
 18150  00132C                     l13704:
 18151                           
 18152                           ;MOTEapp.c: 301: sendCommand("sys reset");
 18153  00132C  0EFD               	movlw	low STR_30
 18154  00132E  0100               	movlb	0	; () banked
 18155  001330  6F61               	movwf	sendCommand@string& (0+255),b
 18156  001332  0E7E               	movlw	high STR_30
 18157  001334  0100               	movlb	0	; () banked
 18158  001336  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18159  001338  ECB0  F033         	call	_sendCommand	;wreg free
 18160  00133C  D191               	goto	l13800
 18161  00133E                     l13708:
 18162                           
 18163                           ; BSR set to: 0
 18164                           ;MOTEapp.c: 305: if (selectButton)
 18165  00133E  0100               	movlb	0	; () banked
 18166  001340  5177               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 18167  001342  0100               	movlb	0	; () banked
 18168  001344  B4D8               	btfsc	status,2,c
 18169  001346  D003               	goto	l402
 18170                           
 18171                           ; BSR set to: 0
 18172                           ;MOTEapp.c: 306: {
 18173                           ;MOTEapp.c: 307: activeState = moteComFailure;
 18174  001348  0E0A               	movlw	10
 18175  00134A  0100               	movlb	0	; () banked
 18176  00134C  6FD5               	movwf	_activeState& (0+255),b
 18177  00134E                     l402:
 18178                           
 18179                           ; BSR set to: 0
 18180                           ;MOTEapp.c: 308: }
 18181                           ;MOTEapp.c: 309: if ( messageReady )
 18182  00134E  0100               	movlb	0	; () banked
 18183  001350  517B               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 18184  001352  0100               	movlb	0	; () banked
 18185  001354  B4D8               	btfsc	status,2,c
 18186  001356  D315               	goto	l13888
 18187                           
 18188                           ; BSR set to: 0
 18189                           ;MOTEapp.c: 310: {
 18190                           ;MOTEapp.c: 311: if(strncmp(moduleResonseBuffer, "RN24", 4) == 0)
 18191  001358  0E56               	movlw	low _moduleResonseBuffer
 18192  00135A  0100               	movlb	0	; () banked
 18193  00135C  6F60               	movwf	strncmp@s1& (0+255),b
 18194  00135E  0E01               	movlw	high _moduleResonseBuffer
 18195  001360  0100               	movlb	0	; () banked
 18196  001362  6F61               	movwf	(strncmp@s1+1)& (0+255),b
 18197  001364  0EB9               	movlw	low STR_31
 18198  001366  0100               	movlb	0	; () banked
 18199  001368  6F62               	movwf	strncmp@s2& (0+255),b
 18200  00136A  0E7F               	movlw	high STR_31
 18201  00136C  0100               	movlb	0	; () banked
 18202  00136E  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 18203  001370  0E00               	movlw	0
 18204  001372  0100               	movlb	0	; () banked
 18205  001374  6F65               	movwf	(strncmp@len+1)& (0+255),b
 18206  001376  0E04               	movlw	4
 18207  001378  6F64               	movwf	strncmp@len& (0+255),b
 18208  00137A  ECED  F02A         	call	_strncmp	;wreg free
 18209  00137E  0100               	movlb	0	; () banked
 18210  001380  5160               	movf	?_strncmp& (0+255),w,b
 18211  001382  0100               	movlb	0	; () banked
 18212  001384  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 18213  001386  A4D8               	btfss	status,2,c
 18214  001388  D033               	goto	l13726
 18215                           
 18216                           ; BSR set to: 0
 18217                           ;MOTEapp.c: 312: {
 18218                           ;MOTEapp.c: 313: rnModule = rn2483;
 18219  00138A  0E00               	movlw	0
 18220  00138C  0100               	movlb	0	; () banked
 18221  00138E  6FED               	movwf	_rnModule& (0+255),b
 18222                           
 18223                           ; BSR set to: 0
 18224                           ;MOTEapp.c: 314: oled_clear();
 18225  001390  ECAB  F034         	call	_oled_clear	;wreg free
 18226                           
 18227                           ;MOTEapp.c: 315: oled_putString(" Joining Method ",0,0);
 18228  001394  0EEF               	movlw	low STR_32
 18229  001396  0100               	movlb	0	; () banked
 18230  001398  6F71               	movwf	oled_putString@string& (0+255),b
 18231  00139A  0E7A               	movlw	high STR_32
 18232  00139C  0100               	movlb	0	; () banked
 18233  00139E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18234  0013A0  0E00               	movlw	0
 18235  0013A2  0100               	movlb	0	; () banked
 18236  0013A4  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18237  0013A6  0E00               	movlw	0
 18238  0013A8  0100               	movlb	0	; () banked
 18239  0013AA  6F74               	movwf	oled_putString@start_page& (0+255),b
 18240  0013AC  EC49  F02F         	call	_oled_putString	;wreg free
 18241                           
 18242                           ;MOTEapp.c: 316: oled_putString("<- ABP   OTAA ->", 0,2);
 18243  0013B0  0E99               	movlw	low STR_33
 18244  0013B2  0100               	movlb	0	; () banked
 18245  0013B4  6F71               	movwf	oled_putString@string& (0+255),b
 18246  0013B6  0E7B               	movlw	high STR_33
 18247  0013B8  0100               	movlb	0	; () banked
 18248  0013BA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18249  0013BC  0E00               	movlw	0
 18250  0013BE  0100               	movlb	0	; () banked
 18251  0013C0  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18252  0013C2  0E02               	movlw	2
 18253  0013C4  0100               	movlb	0	; () banked
 18254  0013C6  6F74               	movwf	oled_putString@start_page& (0+255),b
 18255  0013C8  EC49  F02F         	call	_oled_putString	;wreg free
 18256                           
 18257                           ;MOTEapp.c: 317: oled_putString("  (S2)   (S3)   ", 0,3);
 18258  0013CC  0E9A               	movlw	low STR_34
 18259  0013CE  0100               	movlb	0	; () banked
 18260  0013D0  6F71               	movwf	oled_putString@string& (0+255),b
 18261  0013D2  0E7A               	movlw	high STR_34
 18262  0013D4  0100               	movlb	0	; () banked
 18263  0013D6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18264  0013D8  0E00               	movlw	0
 18265  0013DA  0100               	movlb	0	; () banked
 18266  0013DC  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18267  0013DE  0E03               	movlw	3
 18268  0013E0  0100               	movlb	0	; () banked
 18269  0013E2  6F74               	movwf	oled_putString@start_page& (0+255),b
 18270  0013E4  EC49  F02F         	call	_oled_putString	;wreg free
 18271  0013E8  D04B               	goto	l13738
 18272  0013EA                     L17:
 18273  0013EA  0100               	movlb	0	; () banked
 18274  0013EC  6FD5               	movwf	_activeState& (0+255),b
 18275                           
 18276                           ;MOTEapp.c: 319: }
 18277  0013EE  D2C9               	goto	l13888
 18278  0013F0                     l13726:
 18279                           
 18280                           ; BSR set to: 0
 18281                           ;MOTEapp.c: 320: else if(strncmp(moduleResonseBuffer, "RN29", 4) == 0)
 18282  0013F0  0E56               	movlw	low _moduleResonseBuffer
 18283  0013F2  0100               	movlb	0	; () banked
 18284  0013F4  6F60               	movwf	strncmp@s1& (0+255),b
 18285  0013F6  0E01               	movlw	high _moduleResonseBuffer
 18286  0013F8  0100               	movlb	0	; () banked
 18287  0013FA  6F61               	movwf	(strncmp@s1+1)& (0+255),b
 18288  0013FC  0EBE               	movlw	low STR_35
 18289  0013FE  0100               	movlb	0	; () banked
 18290  001400  6F62               	movwf	strncmp@s2& (0+255),b
 18291  001402  0E7F               	movlw	high STR_35
 18292  001404  0100               	movlb	0	; () banked
 18293  001406  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 18294  001408  0E00               	movlw	0
 18295  00140A  0100               	movlb	0	; () banked
 18296  00140C  6F65               	movwf	(strncmp@len+1)& (0+255),b
 18297  00140E  0E04               	movlw	4
 18298  001410  6F64               	movwf	strncmp@len& (0+255),b
 18299  001412  ECED  F02A         	call	_strncmp	;wreg free
 18300  001416  0100               	movlb	0	; () banked
 18301  001418  5160               	movf	?_strncmp& (0+255),w,b
 18302  00141A  0100               	movlb	0	; () banked
 18303  00141C  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 18304  00141E  A4D8               	btfss	status,2,c
 18305  001420  D031               	goto	l13740
 18306                           
 18307                           ; BSR set to: 0
 18308                           ;MOTEapp.c: 321: {
 18309                           ;MOTEapp.c: 322: rnModule = rn2903;
 18310  001422  0E01               	movlw	1
 18311  001424  0100               	movlb	0	; () banked
 18312  001426  6FED               	movwf	_rnModule& (0+255),b
 18313                           
 18314                           ; BSR set to: 0
 18315                           ;MOTEapp.c: 323: oled_clear();
 18316  001428  ECAB  F034         	call	_oled_clear	;wreg free
 18317                           
 18318                           ;MOTEapp.c: 324: oled_putString(" Joining Method ",0,0);
 18319  00142C  0EEF               	movlw	low STR_32
 18320  00142E  0100               	movlb	0	; () banked
 18321  001430  6F71               	movwf	oled_putString@string& (0+255),b
 18322  001432  0E7A               	movlw	high STR_32
 18323  001434  0100               	movlb	0	; () banked
 18324  001436  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18325  001438  0E00               	movlw	0
 18326  00143A  0100               	movlb	0	; () banked
 18327  00143C  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18328  00143E  0E00               	movlw	0
 18329  001440  0100               	movlb	0	; () banked
 18330  001442  6F74               	movwf	oled_putString@start_page& (0+255),b
 18331  001444  EC49  F02F         	call	_oled_putString	;wreg free
 18332                           
 18333                           ;MOTEapp.c: 325: oled_putString("<- ABP   OTAA ->", 0,2);
 18334  001448  0E99               	movlw	low STR_33
 18335  00144A  0100               	movlb	0	; () banked
 18336  00144C  6F71               	movwf	oled_putString@string& (0+255),b
 18337  00144E  0E7B               	movlw	high STR_33
 18338  001450  0100               	movlb	0	; () banked
 18339  001452  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18340  001454  0E00               	movlw	0
 18341  001456  0100               	movlb	0	; () banked
 18342  001458  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18343  00145A  0E02               	movlw	2
 18344  00145C  0100               	movlb	0	; () banked
 18345  00145E  6F74               	movwf	oled_putString@start_page& (0+255),b
 18346  001460  EC49  F02F         	call	_oled_putString	;wreg free
 18347                           
 18348                           ;MOTEapp.c: 326: oled_putString("  (S2)   (S3)   ", 0,3);
 18349  001464  0E9A               	movlw	low STR_34
 18350  001466  0100               	movlb	0	; () banked
 18351  001468  6F71               	movwf	oled_putString@string& (0+255),b
 18352  00146A  0E7A               	movlw	high STR_34
 18353  00146C  0100               	movlb	0	; () banked
 18354  00146E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18355  001470  0E00               	movlw	0
 18356  001472  0100               	movlb	0	; () banked
 18357  001474  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18358  001476  0E03               	movlw	3
 18359  001478  0100               	movlb	0	; () banked
 18360  00147A  6F74               	movwf	oled_putString@start_page& (0+255),b
 18361  00147C  EC49  F02F         	call	_oled_putString	;wreg free
 18362  001480                     l13738:
 18363                           
 18364                           ;MOTEapp.c: 327: activeState = moteJoinMethod;
 18365  001480  0E02               	movlw	2
 18366  001482  D7B3               	goto	L17
 18367  001484                     l13740:
 18368                           
 18369                           ; BSR set to: 0
 18370                           ;MOTEapp.c: 329: else
 18371                           ;MOTEapp.c: 330: {
 18372                           ;MOTEapp.c: 331: sendCommand("sys reset");
 18373  001484  0EFD               	movlw	low STR_30
 18374  001486  0100               	movlb	0	; () banked
 18375  001488  6F61               	movwf	sendCommand@string& (0+255),b
 18376  00148A  0E7E               	movlw	high STR_30
 18377  00148C  0100               	movlb	0	; () banked
 18378  00148E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18379  001490  ECB0  F033         	call	_sendCommand	;wreg free
 18380                           
 18381                           ;MOTEapp.c: 332: moteApp_delayms(25);
 18382  001494  0E00               	movlw	0
 18383  001496  0100               	movlb	0	; () banked
 18384  001498  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 18385  00149A  0E19               	movlw	25
 18386  00149C  6F60               	movwf	moteApp_delayms@length& (0+255),b
 18387  00149E  ECD9  F032         	call	_moteApp_delayms	;wreg free
 18388  0014A2  D1E4               	goto	l13854
 18389  0014A4                     l13746:
 18390                           
 18391                           ; BSR set to: 0
 18392                           ;MOTEapp.c: 338: if (changeStates)
 18393  0014A4  0100               	movlb	0	; () banked
 18394  0014A6  5176               	movf	moteJoiningProcess@changeStates& (0+255),w,b
 18395  0014A8  0100               	movlb	0	; () banked
 18396  0014AA  B4D8               	btfsc	status,2,c
 18397  0014AC  D01E               	goto	l13756
 18398                           
 18399                           ; BSR set to: 0
 18400                           ;MOTEapp.c: 339: {
 18401                           ;MOTEapp.c: 340: oled_putString("  (S2)          ", 0,3);
 18402  0014AE  0E67               	movlw	low STR_40
 18403  0014B0  0100               	movlb	0	; () banked
 18404  0014B2  6F71               	movwf	oled_putString@string& (0+255),b
 18405  0014B4  0E7A               	movlw	high STR_40
 18406  0014B6  0100               	movlb	0	; () banked
 18407  0014B8  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18408  0014BA  0E00               	movlw	0
 18409  0014BC  0100               	movlb	0	; () banked
 18410  0014BE  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18411  0014C0  0E03               	movlw	3
 18412  0014C2  0100               	movlb	0	; () banked
 18413  0014C4  6F74               	movwf	oled_putString@start_page& (0+255),b
 18414  0014C6  EC49  F02F         	call	_oled_putString	;wreg free
 18415                           
 18416                           ;MOTEapp.c: 341: moteApp_delayms(500);
 18417  0014CA  0E01               	movlw	1
 18418  0014CC  0100               	movlb	0	; () banked
 18419  0014CE  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 18420  0014D0  0EF4               	movlw	244
 18421  0014D2  6F60               	movwf	moteApp_delayms@length& (0+255),b
 18422  0014D4  ECD9  F032         	call	_moteApp_delayms	;wreg free
 18423                           
 18424                           ;MOTEapp.c: 342: sendCommand("mac join abp");
 18425  0014D8  0EE8               	movlw	low STR_41
 18426  0014DA  0100               	movlb	0	; () banked
 18427  0014DC  6F61               	movwf	sendCommand@string& (0+255),b
 18428  0014DE  0E7D               	movlw	high STR_41
 18429  0014E0  0100               	movlb	0	; () banked
 18430  0014E2  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18431  0014E4  ECB0  F033         	call	_sendCommand	;wreg free
 18432  0014E8  D079               	goto	l13784
 18433  0014EA                     l13756:
 18434                           
 18435                           ; BSR set to: 0
 18436                           ;MOTEapp.c: 345: else if (selectButton)
 18437  0014EA  0100               	movlb	0	; () banked
 18438  0014EC  5177               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 18439  0014EE  0100               	movlb	0	; () banked
 18440  0014F0  B4D8               	btfsc	status,2,c
 18441  0014F2  D247               	goto	l13888
 18442                           
 18443                           ; BSR set to: 0
 18444                           ;MOTEapp.c: 346: {
 18445                           ;MOTEapp.c: 347: oled_putString("         (S3)   ", 0,3);
 18446  0014F4  0E89               	movlw	low STR_42
 18447  0014F6  0100               	movlb	0	; () banked
 18448  0014F8  6F71               	movwf	oled_putString@string& (0+255),b
 18449  0014FA  0E7A               	movlw	high STR_42
 18450  0014FC  0100               	movlb	0	; () banked
 18451  0014FE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18452  001500  0E00               	movlw	0
 18453  001502  0100               	movlb	0	; () banked
 18454  001504  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18455  001506  0E03               	movlw	3
 18456  001508  0100               	movlb	0	; () banked
 18457  00150A  6F74               	movwf	oled_putString@start_page& (0+255),b
 18458  00150C  EC49  F02F         	call	_oled_putString	;wreg free
 18459                           
 18460                           ;MOTEapp.c: 348: moteApp_delayms(500);
 18461  001510  0E01               	movlw	1
 18462  001512  0100               	movlb	0	; () banked
 18463  001514  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 18464  001516  0EF4               	movlw	244
 18465  001518  6F60               	movwf	moteApp_delayms@length& (0+255),b
 18466  00151A  ECD9  F032         	call	_moteApp_delayms	;wreg free
 18467                           
 18468                           ;MOTEapp.c: 349: sendCommand("mac join otaa");
 18469  00151E  0E3C               	movlw	low STR_43
 18470  001520  0100               	movlb	0	; () banked
 18471  001522  6F61               	movwf	sendCommand@string& (0+255),b
 18472  001524  0E7D               	movlw	high STR_43
 18473  001526  0100               	movlb	0	; () banked
 18474  001528  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18475  00152A  ECB0  F033         	call	_sendCommand	;wreg free
 18476  00152E  D188               	goto	l13850
 18477  001530                     l13766:
 18478                           
 18479                           ; BSR set to: 0
 18480                           ;MOTEapp.c: 354: if ( messageReady )
 18481  001530  0100               	movlb	0	; () banked
 18482  001532  517B               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 18483  001534  0100               	movlb	0	; () banked
 18484  001536  B4D8               	btfsc	status,2,c
 18485  001538  D224               	goto	l13888
 18486                           
 18487                           ; BSR set to: 0
 18488                           ;MOTEapp.c: 355: {
 18489                           ;MOTEapp.c: 356: if(strcmp(moduleResonseBuffer, "ok") == 0)
 18490  00153A  0E56               	movlw	low _moduleResonseBuffer
 18491  00153C  0100               	movlb	0	; () banked
 18492  00153E  6F60               	movwf	strcmp@s1& (0+255),b
 18493  001540  0E01               	movlw	high _moduleResonseBuffer
 18494  001542  0100               	movlb	0	; () banked
 18495  001544  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 18496  001546  0EF8               	movlw	low STR_44
 18497  001548  0100               	movlb	0	; () banked
 18498  00154A  6F62               	movwf	strcmp@s2& (0+255),b
 18499  00154C  0E7F               	movlw	high STR_44
 18500  00154E  0100               	movlb	0	; () banked
 18501  001550  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 18502  001552  ECF6  F030         	call	_strcmp	;wreg free
 18503  001556  0100               	movlb	0	; () banked
 18504  001558  5160               	movf	?_strcmp& (0+255),w,b
 18505  00155A  0100               	movlb	0	; () banked
 18506  00155C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 18507  00155E  A4D8               	btfss	status,2,c
 18508  001560  D002               	goto	l13772
 18509                           
 18510                           ; BSR set to: 0
 18511                           ;MOTEapp.c: 357: {
 18512                           ;MOTEapp.c: 358: activeState = moteWaitAbp;
 18513  001562  0E04               	movlw	4
 18514  001564  D742               	goto	L17
 18515  001566                     l13772:
 18516                           
 18517                           ; BSR set to: 0
 18518                           ;MOTEapp.c: 360: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 18519  001566  0E56               	movlw	low _moduleResonseBuffer
 18520  001568  0100               	movlb	0	; () banked
 18521  00156A  6F60               	movwf	strcmp@s1& (0+255),b
 18522  00156C  0E01               	movlw	high _moduleResonseBuffer
 18523  00156E  0100               	movlb	0	; () banked
 18524  001570  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 18525  001572  0E58               	movlw	low STR_45
 18526  001574  0100               	movlb	0	; () banked
 18527  001576  6F62               	movwf	strcmp@s2& (0+255),b
 18528  001578  0E7D               	movlw	high STR_45
 18529  00157A  0100               	movlb	0	; () banked
 18530  00157C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 18531  00157E  ECF6  F030         	call	_strcmp	;wreg free
 18532  001582  0100               	movlb	0	; () banked
 18533  001584  5160               	movf	?_strcmp& (0+255),w,b
 18534  001586  0100               	movlb	0	; () banked
 18535  001588  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 18536  00158A  A4D8               	btfss	status,2,c
 18537  00158C  D01F               	goto	l13782
 18538                           
 18539                           ; BSR set to: 0
 18540                           ;MOTEapp.c: 361: {
 18541                           ;MOTEapp.c: 362: oled_clear();
 18542  00158E  ECAB  F034         	call	_oled_clear	;wreg free
 18543                           
 18544                           ;MOTEapp.c: 363: oled_putString("Valid Keys",0,0);
 18545  001592  0EB5               	movlw	low STR_46
 18546  001594  0100               	movlb	0	; () banked
 18547  001596  6F71               	movwf	oled_putString@string& (0+255),b
 18548  001598  0E7E               	movlw	high STR_46
 18549  00159A  0100               	movlb	0	; () banked
 18550  00159C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18551  00159E  0E00               	movlw	0
 18552  0015A0  0100               	movlb	0	; () banked
 18553  0015A2  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18554  0015A4  0E00               	movlw	0
 18555  0015A6  0100               	movlb	0	; () banked
 18556  0015A8  6F74               	movwf	oled_putString@start_page& (0+255),b
 18557  0015AA  EC49  F02F         	call	_oled_putString	;wreg free
 18558                           
 18559                           ;MOTEapp.c: 364: oled_putString("Required",0,1);
 18560  0015AE  0E1A               	movlw	low STR_47
 18561  0015B0  0100               	movlb	0	; () banked
 18562  0015B2  6F71               	movwf	oled_putString@string& (0+255),b
 18563  0015B4  0E7F               	movlw	high STR_47
 18564  0015B6  0100               	movlb	0	; () banked
 18565  0015B8  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18566  0015BA  0E00               	movlw	0
 18567  0015BC  0100               	movlb	0	; () banked
 18568  0015BE  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18569  0015C0  0E01               	movlw	1
 18570  0015C2  0100               	movlb	0	; () banked
 18571  0015C4  6F74               	movwf	oled_putString@start_page& (0+255),b
 18572  0015C6  EC49  F02F         	call	_oled_putString	;wreg free
 18573  0015CA  D099               	goto	l13816
 18574  0015CC                     l13782:
 18575                           
 18576                           ; BSR set to: 0
 18577                           ;MOTEapp.c: 367: else
 18578                           ;MOTEapp.c: 368: {
 18579                           ;MOTEapp.c: 369: sendCommand("mac join abp");
 18580  0015CC  0EE8               	movlw	low STR_41
 18581  0015CE  0100               	movlb	0	; () banked
 18582  0015D0  6F61               	movwf	sendCommand@string& (0+255),b
 18583  0015D2  0E7D               	movlw	high STR_41
 18584  0015D4  0100               	movlb	0	; () banked
 18585  0015D6  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18586  0015D8  ECB0  F033         	call	_sendCommand	;wreg free
 18587  0015DC                     l13784:
 18588                           
 18589                           ;MOTEapp.c: 370: activeState = moteCheckAbp;
 18590  0015DC  0E03               	movlw	3
 18591  0015DE  D705               	goto	L17
 18592  0015E0                     l13786:
 18593                           
 18594                           ; BSR set to: 0
 18595                           ;MOTEapp.c: 375: if ( messageReady )
 18596  0015E0  0100               	movlb	0	; () banked
 18597  0015E2  517B               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 18598  0015E4  0100               	movlb	0	; () banked
 18599  0015E6  B4D8               	btfsc	status,2,c
 18600  0015E8  D1CC               	goto	l13888
 18601                           
 18602                           ; BSR set to: 0
 18603                           ;MOTEapp.c: 376: {
 18604                           ;MOTEapp.c: 377: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 18605  0015EA  0E56               	movlw	low _moduleResonseBuffer
 18606  0015EC  0100               	movlb	0	; () banked
 18607  0015EE  6F60               	movwf	strcmp@s1& (0+255),b
 18608  0015F0  0E01               	movlw	high _moduleResonseBuffer
 18609  0015F2  0100               	movlb	0	; () banked
 18610  0015F4  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 18611  0015F6  0E23               	movlw	low STR_49
 18612  0015F8  0100               	movlb	0	; () banked
 18613  0015FA  6F62               	movwf	strcmp@s2& (0+255),b
 18614  0015FC  0E7F               	movlw	high STR_49
 18615  0015FE  0100               	movlb	0	; () banked
 18616  001600  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 18617  001602  ECF6  F030         	call	_strcmp	;wreg free
 18618  001606  0100               	movlb	0	; () banked
 18619  001608  5160               	movf	?_strcmp& (0+255),w,b
 18620  00160A  0100               	movlb	0	; () banked
 18621  00160C  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 18622  00160E  A4D8               	btfss	status,2,c
 18623  001610  D01F               	goto	l13798
 18624                           
 18625                           ; BSR set to: 0
 18626                           ;MOTEapp.c: 378: {
 18627                           ;MOTEapp.c: 379: oled_clear();
 18628  001612  ECAB  F034         	call	_oled_clear	;wreg free
 18629                           
 18630                           ;MOTEapp.c: 380: oled_putString("ABP Join ",0,0);
 18631  001616  0ED5               	movlw	low STR_50
 18632  001618  0100               	movlb	0	; () banked
 18633  00161A  6F71               	movwf	oled_putString@string& (0+255),b
 18634  00161C  0E7E               	movlw	high STR_50
 18635  00161E  0100               	movlb	0	; () banked
 18636  001620  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18637  001622  0E00               	movlw	0
 18638  001624  0100               	movlb	0	; () banked
 18639  001626  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18640  001628  0E00               	movlw	0
 18641  00162A  0100               	movlb	0	; () banked
 18642  00162C  6F74               	movwf	oled_putString@start_page& (0+255),b
 18643  00162E  EC49  F02F         	call	_oled_putString	;wreg free
 18644                           
 18645                           ;MOTEapp.c: 381: oled_putString("Successful",0,1);
 18646  001632  0E9F               	movlw	low STR_51
 18647  001634  0100               	movlb	0	; () banked
 18648  001636  6F71               	movwf	oled_putString@string& (0+255),b
 18649  001638  0E7E               	movlw	high STR_51
 18650  00163A  0100               	movlb	0	; () banked
 18651  00163C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18652  00163E  0E00               	movlw	0
 18653  001640  0100               	movlb	0	; () banked
 18654  001642  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18655  001644  0E01               	movlw	1
 18656  001646  0100               	movlb	0	; () banked
 18657  001648  6F74               	movwf	oled_putString@start_page& (0+255),b
 18658  00164A  EC49  F02F         	call	_oled_putString	;wreg free
 18659  00164E  D0BC               	goto	l13838
 18660  001650                     l13798:
 18661                           
 18662                           ; BSR set to: 0
 18663                           ;MOTEapp.c: 384: else
 18664                           ;MOTEapp.c: 385: {
 18665                           ;MOTEapp.c: 386: sendCommand("mac reset");
 18666  001650  0EF3               	movlw	low STR_52
 18667  001652  0100               	movlb	0	; () banked
 18668  001654  6F61               	movwf	sendCommand@string& (0+255),b
 18669  001656  0E7E               	movlw	high STR_52
 18670  001658  0100               	movlb	0	; () banked
 18671  00165A  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18672  00165C  ECB0  F033         	call	_sendCommand	;wreg free
 18673  001660                     l13800:
 18674                           
 18675                           ;MOTEapp.c: 387: activeState = moteReset;
 18676  001660  0E01               	movlw	1
 18677  001662  D6C3               	goto	L17
 18678  001664                     l13802:
 18679                           
 18680                           ; BSR set to: 0
 18681                           ;MOTEapp.c: 393: if ( messageReady )
 18682  001664  0100               	movlb	0	; () banked
 18683  001666  517B               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 18684  001668  0100               	movlb	0	; () banked
 18685  00166A  B4D8               	btfsc	status,2,c
 18686  00166C  D18A               	goto	l13888
 18687                           
 18688                           ; BSR set to: 0
 18689                           ;MOTEapp.c: 394: {
 18690                           ;MOTEapp.c: 395: if(strcmp(moduleResonseBuffer, "ok") == 0)
 18691  00166E  0E56               	movlw	low _moduleResonseBuffer
 18692  001670  0100               	movlb	0	; () banked
 18693  001672  6F60               	movwf	strcmp@s1& (0+255),b
 18694  001674  0E01               	movlw	high _moduleResonseBuffer
 18695  001676  0100               	movlb	0	; () banked
 18696  001678  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 18697  00167A  0EF8               	movlw	low STR_44
 18698  00167C  0100               	movlb	0	; () banked
 18699  00167E  6F62               	movwf	strcmp@s2& (0+255),b
 18700  001680  0E7F               	movlw	high STR_44
 18701  001682  0100               	movlb	0	; () banked
 18702  001684  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 18703  001686  ECF6  F030         	call	_strcmp	;wreg free
 18704  00168A  0100               	movlb	0	; () banked
 18705  00168C  5160               	movf	?_strcmp& (0+255),w,b
 18706  00168E  0100               	movlb	0	; () banked
 18707  001690  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 18708  001692  A4D8               	btfss	status,2,c
 18709  001694  D002               	goto	l13808
 18710                           
 18711                           ; BSR set to: 0
 18712                           ;MOTEapp.c: 396: {
 18713                           ;MOTEapp.c: 397: activeState = moteWaitOtaa;
 18714  001696  0E06               	movlw	6
 18715  001698  D6A8               	goto	L17
 18716  00169A                     l13808:
 18717                           
 18718                           ; BSR set to: 0
 18719                           ;MOTEapp.c: 399: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 18720  00169A  0E56               	movlw	low _moduleResonseBuffer
 18721  00169C  0100               	movlb	0	; () banked
 18722  00169E  6F60               	movwf	strcmp@s1& (0+255),b
 18723  0016A0  0E01               	movlw	high _moduleResonseBuffer
 18724  0016A2  0100               	movlb	0	; () banked
 18725  0016A4  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 18726  0016A6  0E58               	movlw	low STR_45
 18727  0016A8  0100               	movlb	0	; () banked
 18728  0016AA  6F62               	movwf	strcmp@s2& (0+255),b
 18729  0016AC  0E7D               	movlw	high STR_45
 18730  0016AE  0100               	movlb	0	; () banked
 18731  0016B0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 18732  0016B2  ECF6  F030         	call	_strcmp	;wreg free
 18733  0016B6  0100               	movlb	0	; () banked
 18734  0016B8  5160               	movf	?_strcmp& (0+255),w,b
 18735  0016BA  0100               	movlb	0	; () banked
 18736  0016BC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 18737  0016BE  A4D8               	btfss	status,2,c
 18738  0016C0  D020               	goto	l13818
 18739                           
 18740                           ; BSR set to: 0
 18741                           ;MOTEapp.c: 400: {
 18742                           ;MOTEapp.c: 401: oled_clear();
 18743  0016C2  ECAB  F034         	call	_oled_clear	;wreg free
 18744                           
 18745                           ;MOTEapp.c: 402: oled_putString("Valid Keys",0,0);
 18746  0016C6  0EB5               	movlw	low STR_46
 18747  0016C8  0100               	movlb	0	; () banked
 18748  0016CA  6F71               	movwf	oled_putString@string& (0+255),b
 18749  0016CC  0E7E               	movlw	high STR_46
 18750  0016CE  0100               	movlb	0	; () banked
 18751  0016D0  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18752  0016D2  0E00               	movlw	0
 18753  0016D4  0100               	movlb	0	; () banked
 18754  0016D6  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18755  0016D8  0E00               	movlw	0
 18756  0016DA  0100               	movlb	0	; () banked
 18757  0016DC  6F74               	movwf	oled_putString@start_page& (0+255),b
 18758  0016DE  EC49  F02F         	call	_oled_putString	;wreg free
 18759                           
 18760                           ;MOTEapp.c: 403: oled_putString("Required",0,1);
 18761  0016E2  0E1A               	movlw	low STR_47
 18762  0016E4  0100               	movlb	0	; () banked
 18763  0016E6  6F71               	movwf	oled_putString@string& (0+255),b
 18764  0016E8  0E7F               	movlw	high STR_47
 18765  0016EA  0100               	movlb	0	; () banked
 18766  0016EC  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18767  0016EE  0E00               	movlw	0
 18768  0016F0  0100               	movlb	0	; () banked
 18769  0016F2  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18770  0016F4  0E01               	movlw	1
 18771  0016F6  0100               	movlb	0	; () banked
 18772  0016F8  6F74               	movwf	oled_putString@start_page& (0+255),b
 18773  0016FA  EC49  F02F         	call	_oled_putString	;wreg free
 18774  0016FE                     l13816:
 18775                           
 18776                           ;MOTEapp.c: 404: activeState = moteNeedKeys;
 18777  0016FE  0E09               	movlw	9
 18778  001700  D674               	goto	L17
 18779  001702                     l13818:
 18780                           
 18781                           ; BSR set to: 0
 18782                           ;MOTEapp.c: 406: else if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 18783  001702  0E56               	movlw	low _moduleResonseBuffer
 18784  001704  0100               	movlb	0	; () banked
 18785  001706  6F60               	movwf	strcmp@s1& (0+255),b
 18786  001708  0E01               	movlw	high _moduleResonseBuffer
 18787  00170A  0100               	movlb	0	; () banked
 18788  00170C  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 18789  00170E  0E4A               	movlw	low STR_57
 18790  001710  0100               	movlb	0	; () banked
 18791  001712  6F62               	movwf	strcmp@s2& (0+255),b
 18792  001714  0E7D               	movlw	high STR_57
 18793  001716  0100               	movlb	0	; () banked
 18794  001718  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 18795  00171A  ECF6  F030         	call	_strcmp	;wreg free
 18796  00171E  0100               	movlb	0	; () banked
 18797  001720  5160               	movf	?_strcmp& (0+255),w,b
 18798  001722  0100               	movlb	0	; () banked
 18799  001724  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 18800  001726  A4D8               	btfss	status,2,c
 18801  001728  D009               	goto	l13824
 18802                           
 18803                           ; BSR set to: 0
 18804                           ;MOTEapp.c: 407: {
 18805                           ;MOTEapp.c: 408: sendCommand("mac join otaa");
 18806  00172A  0E3C               	movlw	low STR_43
 18807  00172C  0100               	movlb	0	; () banked
 18808  00172E  6F61               	movwf	sendCommand@string& (0+255),b
 18809  001730  0E7D               	movlw	high STR_43
 18810  001732  0100               	movlb	0	; () banked
 18811  001734  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18812  001736  ECB0  F033         	call	_sendCommand	;wreg free
 18813  00173A  D082               	goto	l13850
 18814  00173C                     l13824:
 18815                           
 18816                           ; BSR set to: 0
 18817                           ;MOTEapp.c: 411: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 18818  00173C  0E56               	movlw	low _moduleResonseBuffer
 18819  00173E  0100               	movlb	0	; () banked
 18820  001740  6F60               	movwf	strcmp@s1& (0+255),b
 18821  001742  0E01               	movlw	high _moduleResonseBuffer
 18822  001744  0100               	movlb	0	; () banked
 18823  001746  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 18824  001748  0E94               	movlw	low STR_59
 18825  00174A  0100               	movlb	0	; () banked
 18826  00174C  6F62               	movwf	strcmp@s2& (0+255),b
 18827  00174E  0E7E               	movlw	high STR_59
 18828  001750  0100               	movlb	0	; () banked
 18829  001752  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 18830  001754  ECF6  F030         	call	_strcmp	;wreg free
 18831  001758  D083               	goto	L37
 18832  00175A                     l13828:
 18833                           
 18834                           ; BSR set to: 0
 18835                           ;MOTEapp.c: 418: if ( messageReady )
 18836  00175A  0100               	movlb	0	; () banked
 18837  00175C  517B               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 18838  00175E  0100               	movlb	0	; () banked
 18839  001760  B4D8               	btfsc	status,2,c
 18840  001762  D10F               	goto	l13888
 18841                           
 18842                           ; BSR set to: 0
 18843                           ;MOTEapp.c: 419: {
 18844                           ;MOTEapp.c: 420: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 18845  001764  0E56               	movlw	low _moduleResonseBuffer
 18846  001766  0100               	movlb	0	; () banked
 18847  001768  6F60               	movwf	strcmp@s1& (0+255),b
 18848  00176A  0E01               	movlw	high _moduleResonseBuffer
 18849  00176C  0100               	movlb	0	; () banked
 18850  00176E  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 18851  001770  0E23               	movlw	low STR_49
 18852  001772  0100               	movlb	0	; () banked
 18853  001774  6F62               	movwf	strcmp@s2& (0+255),b
 18854  001776  0E7F               	movlw	high STR_49
 18855  001778  0100               	movlb	0	; () banked
 18856  00177A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 18857  00177C  ECF6  F030         	call	_strcmp	;wreg free
 18858  001780  0100               	movlb	0	; () banked
 18859  001782  5160               	movf	?_strcmp& (0+255),w,b
 18860  001784  0100               	movlb	0	; () banked
 18861  001786  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 18862  001788  A4D8               	btfss	status,2,c
 18863  00178A  D020               	goto	l13840
 18864                           
 18865                           ; BSR set to: 0
 18866                           ;MOTEapp.c: 421: {
 18867                           ;MOTEapp.c: 422: oled_clear();
 18868  00178C  ECAB  F034         	call	_oled_clear	;wreg free
 18869                           
 18870                           ;MOTEapp.c: 423: oled_putString("OTAA Join ",0,0);
 18871  001790  0E89               	movlw	low STR_61
 18872  001792  0100               	movlb	0	; () banked
 18873  001794  6F71               	movwf	oled_putString@string& (0+255),b
 18874  001796  0E7E               	movlw	high STR_61
 18875  001798  0100               	movlb	0	; () banked
 18876  00179A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18877  00179C  0E00               	movlw	0
 18878  00179E  0100               	movlb	0	; () banked
 18879  0017A0  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18880  0017A2  0E00               	movlw	0
 18881  0017A4  0100               	movlb	0	; () banked
 18882  0017A6  6F74               	movwf	oled_putString@start_page& (0+255),b
 18883  0017A8  EC49  F02F         	call	_oled_putString	;wreg free
 18884                           
 18885                           ;MOTEapp.c: 424: oled_putString("Successful",0,1);
 18886  0017AC  0E9F               	movlw	low STR_51
 18887  0017AE  0100               	movlb	0	; () banked
 18888  0017B0  6F71               	movwf	oled_putString@string& (0+255),b
 18889  0017B2  0E7E               	movlw	high STR_51
 18890  0017B4  0100               	movlb	0	; () banked
 18891  0017B6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18892  0017B8  0E00               	movlw	0
 18893  0017BA  0100               	movlb	0	; () banked
 18894  0017BC  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18895  0017BE  0E01               	movlw	1
 18896  0017C0  0100               	movlb	0	; () banked
 18897  0017C2  6F74               	movwf	oled_putString@start_page& (0+255),b
 18898  0017C4  EC49  F02F         	call	_oled_putString	;wreg free
 18899  0017C8                     l13838:
 18900                           
 18901                           ;MOTEapp.c: 425: activeState = moteJoined;
 18902  0017C8  0E07               	movlw	7
 18903  0017CA  D60F               	goto	L17
 18904  0017CC                     l13840:
 18905                           
 18906                           ; BSR set to: 0
 18907                           ;MOTEapp.c: 427: else if(strcmp(moduleResonseBuffer, "denied") == 0)
 18908  0017CC  0E56               	movlw	low _moduleResonseBuffer
 18909  0017CE  0100               	movlb	0	; () banked
 18910  0017D0  6F60               	movwf	strcmp@s1& (0+255),b
 18911  0017D2  0E01               	movlw	high _moduleResonseBuffer
 18912  0017D4  0100               	movlb	0	; () banked
 18913  0017D6  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 18914  0017D8  0E96               	movlw	low STR_63
 18915  0017DA  0100               	movlb	0	; () banked
 18916  0017DC  6F62               	movwf	strcmp@s2& (0+255),b
 18917  0017DE  0E7F               	movlw	high STR_63
 18918  0017E0  0100               	movlb	0	; () banked
 18919  0017E2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 18920  0017E4  ECF6  F030         	call	_strcmp	;wreg free
 18921  0017E8  0100               	movlb	0	; () banked
 18922  0017EA  5160               	movf	?_strcmp& (0+255),w,b
 18923  0017EC  0100               	movlb	0	; () banked
 18924  0017EE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 18925  0017F0  A4D8               	btfss	status,2,c
 18926  0017F2  D028               	goto	l13852
 18927                           
 18928                           ; BSR set to: 0
 18929                           ;MOTEapp.c: 428: {
 18930                           ;MOTEapp.c: 429: oled_clear();
 18931  0017F4  ECAB  F034         	call	_oled_clear	;wreg free
 18932                           
 18933                           ;MOTEapp.c: 430: oled_putString("OTAA Join",1,0);
 18934  0017F8  0EE9               	movlw	low STR_64
 18935  0017FA  0100               	movlb	0	; () banked
 18936  0017FC  6F71               	movwf	oled_putString@string& (0+255),b
 18937  0017FE  0E7E               	movlw	high STR_64
 18938  001800  0100               	movlb	0	; () banked
 18939  001802  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18940  001804  0E01               	movlw	1
 18941  001806  0100               	movlb	0	; () banked
 18942  001808  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18943  00180A  0E00               	movlw	0
 18944  00180C  0100               	movlb	0	; () banked
 18945  00180E  6F74               	movwf	oled_putString@start_page& (0+255),b
 18946  001810  EC49  F02F         	call	_oled_putString	;wreg free
 18947                           
 18948                           ;MOTEapp.c: 431: oled_putString("Denied",2,1);
 18949  001814  0E8F               	movlw	low STR_65
 18950  001816  0100               	movlb	0	; () banked
 18951  001818  6F71               	movwf	oled_putString@string& (0+255),b
 18952  00181A  0E7F               	movlw	high STR_65
 18953  00181C  0100               	movlb	0	; () banked
 18954  00181E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18955  001820  0E02               	movlw	2
 18956  001822  0100               	movlb	0	; () banked
 18957  001824  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18958  001826  0E01               	movlw	1
 18959  001828  0100               	movlb	0	; () banked
 18960  00182A  6F74               	movwf	oled_putString@start_page& (0+255),b
 18961  00182C  EC49  F02F         	call	_oled_putString	;wreg free
 18962                           
 18963                           ;MOTEapp.c: 432: sendCommand("mac join otaa");
 18964  001830  0E3C               	movlw	low STR_43
 18965  001832  0100               	movlb	0	; () banked
 18966  001834  6F61               	movwf	sendCommand@string& (0+255),b
 18967  001836  0E7D               	movlw	high STR_43
 18968  001838  0100               	movlb	0	; () banked
 18969  00183A  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18970  00183C  ECB0  F033         	call	_sendCommand	;wreg free
 18971  001840                     l13850:
 18972                           
 18973                           ;MOTEapp.c: 433: activeState = moteCheckOtaa;
 18974  001840  0E05               	movlw	5
 18975  001842  D5D3               	goto	L17
 18976  001844                     l13852:
 18977                           
 18978                           ; BSR set to: 0
 18979                           ;MOTEapp.c: 435: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 18980  001844  0E56               	movlw	low _moduleResonseBuffer
 18981  001846  0100               	movlb	0	; () banked
 18982  001848  6F60               	movwf	strcmp@s1& (0+255),b
 18983  00184A  0E01               	movlw	high _moduleResonseBuffer
 18984  00184C  0100               	movlb	0	; () banked
 18985  00184E  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 18986  001850  0E94               	movlw	low STR_59
 18987  001852  0100               	movlb	0	; () banked
 18988  001854  6F62               	movwf	strcmp@s2& (0+255),b
 18989  001856  0E7E               	movlw	high STR_59
 18990  001858  0100               	movlb	0	; () banked
 18991  00185A  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 18992  00185C  ECF6  F030         	call	_strcmp	;wreg free
 18993  001860                     L37:
 18994  001860  0100               	movlb	0	; () banked
 18995  001862  5160               	movf	?_strcmp& (0+255),w,b
 18996  001864  0100               	movlb	0	; () banked
 18997  001866  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 18998  001868  A4D8               	btfss	status,2,c
 18999  00186A  D08B               	goto	l13888
 19000  00186C                     l13854:
 19001                           
 19002                           ; BSR set to: 0
 19003                           ;MOTEapp.c: 436: {
 19004                           ;MOTEapp.c: 437: activeState = moteStartup;
 19005  00186C  0E00               	movlw	0
 19006  00186E  D5BD               	goto	L17
 19007  001870                     l13856:
 19008                           
 19009                           ; BSR set to: 0
 19010                           ;MOTEapp.c: 442: sendCommand("mac get dr");
 19011  001870  0EAA               	movlw	low STR_68
 19012  001872  0100               	movlb	0	; () banked
 19013  001874  6F61               	movwf	sendCommand@string& (0+255),b
 19014  001876  0E7E               	movlw	high STR_68
 19015  001878  0100               	movlb	0	; () banked
 19016  00187A  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 19017  00187C  ECB0  F033         	call	_sendCommand	;wreg free
 19018  001880  D021               	goto	l13866
 19019  001882                     l13860:
 19020                           
 19021                           ; BSR set to: 0
 19022                           ;MOTEapp.c: 446: if ( messageReady )
 19023  001882  0100               	movlb	0	; () banked
 19024  001884  517B               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 19025  001886  0100               	movlb	0	; () banked
 19026  001888  B4D8               	btfsc	status,2,c
 19027  00188A  D07B               	goto	l13888
 19028                           
 19029                           ; BSR set to: 0
 19030                           ;MOTEapp.c: 447: {
 19031                           ;MOTEapp.c: 448: if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 19032  00188C  0E56               	movlw	low _moduleResonseBuffer
 19033  00188E  0100               	movlb	0	; () banked
 19034  001890  6F60               	movwf	strcmp@s1& (0+255),b
 19035  001892  0E01               	movlw	high _moduleResonseBuffer
 19036  001894  0100               	movlb	0	; () banked
 19037  001896  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 19038  001898  0E4A               	movlw	low STR_57
 19039  00189A  0100               	movlb	0	; () banked
 19040  00189C  6F62               	movwf	strcmp@s2& (0+255),b
 19041  00189E  0E7D               	movlw	high STR_57
 19042  0018A0  0100               	movlb	0	; () banked
 19043  0018A2  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 19044  0018A4  ECF6  F030         	call	_strcmp	;wreg free
 19045  0018A8  0100               	movlb	0	; () banked
 19046  0018AA  5160               	movf	?_strcmp& (0+255),w,b
 19047  0018AC  0100               	movlb	0	; () banked
 19048  0018AE  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 19049  0018B0  A4D8               	btfss	status,2,c
 19050  0018B2  D00A               	goto	l13868
 19051                           
 19052                           ; BSR set to: 0
 19053                           ;MOTEapp.c: 449: {
 19054                           ;MOTEapp.c: 450: sendCommand("mac get dr");
 19055  0018B4  0EAA               	movlw	low STR_68
 19056  0018B6  0100               	movlb	0	; () banked
 19057  0018B8  6F61               	movwf	sendCommand@string& (0+255),b
 19058  0018BA  0E7E               	movlw	high STR_68
 19059  0018BC  0100               	movlb	0	; () banked
 19060  0018BE  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 19061  0018C0  ECB0  F033         	call	_sendCommand	;wreg free
 19062  0018C4                     l13866:
 19063                           
 19064                           ;MOTEapp.c: 451: activeState = moteGetDr;
 19065  0018C4  0E08               	movlw	8
 19066  0018C6  D591               	goto	L17
 19067  0018C8                     l13868:
 19068                           
 19069                           ; BSR set to: 0
 19070                           ;MOTEapp.c: 453: else
 19071                           ;MOTEapp.c: 454: {
 19072                           ;MOTEapp.c: 455: uint8_t readDataRate;
 19073                           ;MOTEapp.c: 456: readDataRate = moduleResonseBuffer[0] - '0';
 19074  0018C8  0101               	movlb	1	; () banked
 19075  0018CA  5156               	movf	_moduleResonseBuffer& (0+255),w,b
 19076  0018CC  0FD0               	addlw	208
 19077  0018CE  0100               	movlb	0	; () banked
 19078  0018D0  6F79               	movwf	moteJoiningProcess@readDataRate& (0+255),b
 19079                           
 19080                           ; BSR set to: 0
 19081                           ;MOTEapp.c: 457: dataRateValue = readDataRate;
 19082  0018D2  C079  F0F7         	movff	moteJoiningProcess@readDataRate,_dataRateValue
 19083                           
 19084                           ; BSR set to: 0
 19085                           ;MOTEapp.c: 458: joiningComplete = 1;
 19086  0018D6  0E01               	movlw	1
 19087  0018D8  0100               	movlb	0	; () banked
 19088  0018DA  6F7A               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 19089                           
 19090                           ; BSR set to: 0
 19091                           ;MOTEapp.c: 459: }
 19092                           ;MOTEapp.c: 460: }
 19093                           ;MOTEapp.c: 461: break;
 19094                           
 19095                           ; BSR set to: 0
 19096  0018DC  D052               	goto	l13888
 19097  0018DE                     l13874:
 19098                           
 19099                           ; BSR set to: 0
 19100                           ;MOTEapp.c: 463: if (selectButton)
 19101  0018DE  0100               	movlb	0	; () banked
 19102  0018E0  5177               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 19103  0018E2  0100               	movlb	0	; () banked
 19104  0018E4  B4D8               	btfsc	status,2,c
 19105  0018E6  D04D               	goto	l13888
 19106                           
 19107                           ; BSR set to: 0
 19108                           ;MOTEapp.c: 464: {
 19109                           ;MOTEapp.c: 465: activeState = moteComFailure;
 19110  0018E8  0E0A               	movlw	10
 19111  0018EA  D57F               	goto	L17
 19112  0018EC                     l13878:
 19113                           
 19114                           ; BSR set to: 0
 19115                           ;MOTEapp.c: 470: DATAEE_WriteByte(0x00, 0x00);
 19116  0018EC  0E00               	movlw	0
 19117  0018EE  0100               	movlb	0	; () banked
 19118  0018F0  6F60               	movwf	DATAEE_WriteByte@bData& (0+255),b
 19119  0018F2  0E00               	movlw	0
 19120  0018F4  EC63  F032         	call	_DATAEE_WriteByte
 19121  0018F8                     l446:
 19122  0018F8  A281               	btfss	3969,1,c	;volatile
 19123  0018FA  B081               	btfsc	3969,0,c	;volatile
 19124  0018FC  D001               	goto	l13882
 19125  0018FE  D7FC               	goto	l446
 19126  001900                     l13882:
 19127                           
 19128                           ;MOTEapp.c: 472: _delay((unsigned long)((16)*(48000000/4000.0)));
 19129  001900  0EFA               	movlw	250
 19130  001902  0100               	movlb	0	; () banked
 19131  001904  6F78               	movwf	??_moteJoiningProcess& (0+255),b
 19132  001906  0E58               	movlw	88
 19133  001908                     u14817:
 19134  001908  2EE8               	decfsz	wreg,f,c
 19135  00190A  D7FE               	goto	u14817
 19136  00190C  2F78               	decfsz	??_moteJoiningProcess& (0+255),f,b
 19137  00190E  D7FC               	goto	u14817
 19138  001910  D000               	nop2	
 19139                           
 19140                           ;MOTEapp.c: 473: _delay((unsigned long)((16)*(48000000/4000.0)));
 19141  001912  0EFA               	movlw	250
 19142  001914  0100               	movlb	0	; () banked
 19143  001916  6F78               	movwf	??_moteJoiningProcess& (0+255),b
 19144  001918  0E58               	movlw	88
 19145  00191A                     u14827:
 19146  00191A  2EE8               	decfsz	wreg,f,c
 19147  00191C  D7FE               	goto	u14827
 19148  00191E  2F78               	decfsz	??_moteJoiningProcess& (0+255),f,b
 19149  001920  D7FC               	goto	u14827
 19150  001922  D000               	nop2	
 19151                           
 19152                           ;MOTEapp.c: 474: _delay((unsigned long)((16)*(48000000/4000.0)));
 19153  001924  0EFA               	movlw	250
 19154  001926  0100               	movlb	0	; () banked
 19155  001928  6F78               	movwf	??_moteJoiningProcess& (0+255),b
 19156  00192A  0E58               	movlw	88
 19157  00192C                     u14837:
 19158  00192C  2EE8               	decfsz	wreg,f,c
 19159  00192E  D7FE               	goto	u14837
 19160  001930  2F78               	decfsz	??_moteJoiningProcess& (0+255),f,b
 19161  001932  D7FC               	goto	u14837
 19162  001934  D000               	nop2	
 19163  001936  00FF               	reset		;# 
 19164                           
 19165                           ;MOTEapp.c: 478: }
 19166                           
 19167                           ;MOTEapp.c: 477: break;
 19168  001938  D024               	goto	l13888
 19169  00193A                     l13886:
 19170  00193A  0100               	movlb	0	; () banked
 19171  00193C  51D5               	movf	_activeState& (0+255),w,b
 19172                           
 19173                           ; Switch size 1, requested type "space"
 19174                           ; Number of cases is 11, Range of values is 0 to 10
 19175                           ; switch strategies available:
 19176                           ; Name         Instructions Cycles
 19177                           ; simple_byte           34    18 (average)
 19178                           ;	Chosen strategy is simple_byte
 19179  00193E  0A00               	xorlw	0	; case 0
 19180  001940  B4D8               	btfsc	status,2,c
 19181  001942  D4F4               	goto	l13704
 19182  001944  0A01               	xorlw	1	; case 1
 19183  001946  B4D8               	btfsc	status,2,c
 19184  001948  D4FA               	goto	l13708
 19185  00194A  0A03               	xorlw	3	; case 2
 19186  00194C  B4D8               	btfsc	status,2,c
 19187  00194E  D5AA               	goto	l13746
 19188  001950  0A01               	xorlw	1	; case 3
 19189  001952  B4D8               	btfsc	status,2,c
 19190  001954  D5ED               	goto	l13766
 19191  001956  0A07               	xorlw	7	; case 4
 19192  001958  B4D8               	btfsc	status,2,c
 19193  00195A  D642               	goto	l13786
 19194  00195C  0A01               	xorlw	1	; case 5
 19195  00195E  B4D8               	btfsc	status,2,c
 19196  001960  D681               	goto	l13802
 19197  001962  0A03               	xorlw	3	; case 6
 19198  001964  B4D8               	btfsc	status,2,c
 19199  001966  D6F9               	goto	l13828
 19200  001968  0A01               	xorlw	1	; case 7
 19201  00196A  B4D8               	btfsc	status,2,c
 19202  00196C  D781               	goto	l13856
 19203  00196E  0A0F               	xorlw	15	; case 8
 19204  001970  B4D8               	btfsc	status,2,c
 19205  001972  D787               	goto	l13860
 19206  001974  0A01               	xorlw	1	; case 9
 19207  001976  B4D8               	btfsc	status,2,c
 19208  001978  D7B2               	goto	l13874
 19209  00197A  0A03               	xorlw	3	; case 10
 19210  00197C  B4D8               	btfsc	status,2,c
 19211  00197E  D7B6               	goto	l13878
 19212  001980  D4D4               	goto	l397
 19213  001982                     l13888:
 19214                           
 19215                           ;MOTEapp.c: 479: return joiningComplete;
 19216  001982  0100               	movlb	0	; () banked
 19217  001984  517A               	movf	moteJoiningProcess@joiningComplete& (0+255),w,b
 19218  001986  0012               	return	
 19219  001988                     __end_of_moteJoiningProcess:
 19220                           	opt stack 0
 19221                           tblptru	equ	0xFF8
 19222                           tblptrh	equ	0xFF7
 19223                           tblptrl	equ	0xFF6
 19224                           tablat	equ	0xFF5
 19225                           prodh	equ	0xFF4
 19226                           prodl	equ	0xFF3
 19227                           intcon	equ	0xFF2
 19228                           intcon3	equ	0xFF0
 19229                           postinc0	equ	0xFEE
 19230                           wreg	equ	0xFE8
 19231                           indf1	equ	0xFE7
 19232                           postdec1	equ	0xFE5
 19233                           fsr1h	equ	0xFE2
 19234                           fsr1l	equ	0xFE1
 19235                           indf2	equ	0xFDF
 19236                           fsr2h	equ	0xFDA
 19237                           fsr2l	equ	0xFD9
 19238                           status	equ	0xFD8
 19239                           
 19240 ;; *************** function _strncmp *****************
 19241 ;; Defined at:
 19242 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strncmp.c"
 19243 ;; Parameters:    Size  Location     Type
 19244 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 19245 ;;		 -> moduleResonseBuffer(64), 
 19246 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 19247 ;;		 -> STR_97(7), STR_95(7), STR_93(7), STR_90(7), 
 19248 ;;		 -> STR_35(5), STR_31(5), 
 19249 ;;  len             2    4[BANK0 ] unsigned int 
 19250 ;; Auto vars:     Size  Location     Type
 19251 ;;		None
 19252 ;; Return value:  Size  Location     Type
 19253 ;;                  2    0[BANK0 ] int 
 19254 ;; Registers used:
 19255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 19256 ;; Tracked objects:
 19257 ;;		On entry : 0/0
 19258 ;;		On exit  : 0/0
 19259 ;;		Unchanged: 0/0
 19260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19261 ;;      Params:         0       6       0       0       0       0       0       0       0
 19262 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19263 ;;      Temps:          0       3       0       0       0       0       0       0       0
 19264 ;;      Totals:         0       9       0       0       0       0       0       0       0
 19265 ;;Total ram usage:        9 bytes
 19266 ;; Hardware stack levels used:    1
 19267 ;; Hardware stack levels required when called:   11
 19268 ;; This function calls:
 19269 ;;		Nothing
 19270 ;; This function is called by:
 19271 ;;		_moteJoiningProcess
 19272 ;;		_moteRunningProcess
 19273 ;; This function uses a non-reentrant model
 19274 ;;
 19275                           
 19276                           	psect	text52
 19277  0055DA                     __ptext52:
 19278                           	opt stack 0
 19279  0055DA                     _strncmp:
 19280                           	opt stack 17
 19281                           
 19282                           ; BSR set to: 0
 19283                           ;incstack = 0
 19284  0055DA  D03F               	goto	l12984
 19285  0055DC                     l12974:
 19286  0055DC  C060  FFD9         	movff	strncmp@s1,fsr2l
 19287  0055E0  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 19288  0055E4  50DF               	movf	indf2,w,c
 19289  0055E6  B4D8               	btfsc	status,2,c
 19290  0055E8  D011               	goto	l12978
 19291  0055EA  C060  FFD9         	movff	strncmp@s1,fsr2l
 19292  0055EE  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 19293  0055F2  50DF               	movf	indf2,w,c
 19294  0055F4  0100               	movlb	0	; () banked
 19295  0055F6  6F66               	movwf	??_strncmp& (0+255),b
 19296  0055F8  C062  FFF6         	movff	strncmp@s2,tblptrl
 19297  0055FC  C063  FFF7         	movff	strncmp@s2+1,tblptrh
 19298  005600                     	if	0	;tblptru may be non-zero
 19299  005600                     	endif
 19300  005600                     	if	0	;tblptru may be non-zero
 19301  005600                     	endif
 19302  005600  0008               	tblrd		*
 19303  005602  50F5               	movf	tablat,w,c
 19304  005604  0100               	movlb	0	; () banked
 19305  005606  1966               	xorwf	??_strncmp& (0+255),w,b
 19306  005608  B4D8               	btfsc	status,2,c
 19307  00560A  D021               	goto	l12982
 19308  00560C                     l12978:
 19309  00560C  C062  FFF6         	movff	strncmp@s2,tblptrl
 19310  005610  C063  FFF7         	movff	strncmp@s2+1,tblptrh
 19311  005614                     	if	0	;tblptru may be non-zero
 19312  005614                     	endif
 19313  005614                     	if	0	;tblptru may be non-zero
 19314  005614                     	endif
 19315  005614  0008               	tblrd		*
 19316  005616  50F5               	movf	tablat,w,c
 19317  005618  0100               	movlb	0	; () banked
 19318  00561A  6F66               	movwf	??_strncmp& (0+255),b
 19319  00561C  6B67               	clrf	(??_strncmp+1)& (0+255),b
 19320  00561E  0100               	movlb	0	; () banked
 19321  005620  1F66               	comf	??_strncmp& (0+255),f,b
 19322  005622  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 19323  005624  4B66               	infsnz	??_strncmp& (0+255),f,b
 19324  005626  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 19325  005628  C060  FFD9         	movff	strncmp@s1,fsr2l
 19326  00562C  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 19327  005630  50DF               	movf	indf2,w,c
 19328  005632  0100               	movlb	0	; () banked
 19329  005634  6F68               	movwf	(??_strncmp+2)& (0+255),b
 19330  005636  0100               	movlb	0	; () banked
 19331  005638  5168               	movf	(??_strncmp+2)& (0+255),w,b
 19332  00563A  0100               	movlb	0	; () banked
 19333  00563C  2566               	addwf	??_strncmp& (0+255),w,b
 19334  00563E  0100               	movlb	0	; () banked
 19335  005640  6F60               	movwf	?_strncmp& (0+255),b
 19336  005642  0E00               	movlw	0
 19337  005644  0100               	movlb	0	; () banked
 19338  005646  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 19339  005648  0100               	movlb	0	; () banked
 19340  00564A  6F61               	movwf	(?_strncmp+1)& (0+255),b
 19341                           
 19342                           ; BSR set to: 0
 19343  00564C  0012               	return	
 19344  00564E                     l12982:
 19345                           
 19346                           ; BSR set to: 0
 19347  00564E  0100               	movlb	0	; () banked
 19348  005650  4B60               	infsnz	strncmp@s1& (0+255),f,b
 19349  005652  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 19350  005654  0100               	movlb	0	; () banked
 19351  005656  4B62               	infsnz	strncmp@s2& (0+255),f,b
 19352  005658  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 19353  00565A                     l12984:
 19354  00565A  0100               	movlb	0	; () banked
 19355  00565C  0764               	decf	strncmp@len& (0+255),f,b
 19356  00565E  A0D8               	btfss	status,0,c
 19357  005660  0765               	decf	(strncmp@len+1)& (0+255),f,b
 19358  005662  0100               	movlb	0	; () banked
 19359  005664  2964               	incf	strncmp@len& (0+255),w,b
 19360  005666  E1BA               	bnz	l12974
 19361  005668  0100               	movlb	0	; () banked
 19362  00566A  2965               	incf	(strncmp@len+1)& (0+255),w,b
 19363  00566C  A4D8               	btfss	status,2,c
 19364  00566E  D7B6               	goto	l12974
 19365                           
 19366                           ; BSR set to: 0
 19367                           
 19368                           ; BSR set to: 0
 19369  005670  0E00               	movlw	0
 19370  005672  0100               	movlb	0	; () banked
 19371  005674  6F61               	movwf	(?_strncmp+1)& (0+255),b
 19372  005676  0E00               	movlw	0
 19373  005678  6F60               	movwf	?_strncmp& (0+255),b
 19374  00567A  0012               	return	
 19375  00567C                     __end_of_strncmp:
 19376                           	opt stack 0
 19377                           tblptru	equ	0xFF8
 19378                           tblptrh	equ	0xFF7
 19379                           tblptrl	equ	0xFF6
 19380                           tablat	equ	0xFF5
 19381                           prodh	equ	0xFF4
 19382                           prodl	equ	0xFF3
 19383                           intcon	equ	0xFF2
 19384                           intcon3	equ	0xFF0
 19385                           postinc0	equ	0xFEE
 19386                           wreg	equ	0xFE8
 19387                           indf1	equ	0xFE7
 19388                           postdec1	equ	0xFE5
 19389                           fsr1h	equ	0xFE2
 19390                           fsr1l	equ	0xFE1
 19391                           indf2	equ	0xFDF
 19392                           fsr2h	equ	0xFDA
 19393                           fsr2l	equ	0xFD9
 19394                           status	equ	0xFD8
 19395                           
 19396 ;; *************** function _strcmp *****************
 19397 ;; Defined at:
 19398 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
 19399 ;; Parameters:    Size  Location     Type
 19400 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 19401 ;;		 -> moduleResonseBuffer(64), 
 19402 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 19403 ;;		 -> STR_89(3), STR_69(14), STR_67(11), STR_63(7), 
 19404 ;;		 -> STR_60(9), STR_59(11), STR_57(14), STR_54(14), 
 19405 ;;		 -> STR_53(3), STR_49(9), STR_45(14), STR_44(3), 
 19406 ;; Auto vars:     Size  Location     Type
 19407 ;;  r               1    5[BANK0 ] char 
 19408 ;; Return value:  Size  Location     Type
 19409 ;;                  2    0[BANK0 ] int 
 19410 ;; Registers used:
 19411 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 19412 ;; Tracked objects:
 19413 ;;		On entry : 0/0
 19414 ;;		On exit  : 0/0
 19415 ;;		Unchanged: 0/0
 19416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19417 ;;      Params:         0       4       0       0       0       0       0       0       0
 19418 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19419 ;;      Temps:          0       1       0       0       0       0       0       0       0
 19420 ;;      Totals:         0       6       0       0       0       0       0       0       0
 19421 ;;Total ram usage:        6 bytes
 19422 ;; Hardware stack levels used:    1
 19423 ;; Hardware stack levels required when called:   11
 19424 ;; This function calls:
 19425 ;;		Nothing
 19426 ;; This function is called by:
 19427 ;;		_moteJoiningProcess
 19428 ;;		_moteRunningProcess
 19429 ;; This function uses a non-reentrant model
 19430 ;;
 19431                           
 19432                           	psect	text53
 19433  0061EC                     __ptext53:
 19434                           	opt stack 0
 19435  0061EC                     _strcmp:
 19436                           	opt stack 17
 19437                           
 19438                           ; BSR set to: 0
 19439                           ;incstack = 0
 19440  0061EC  D006               	goto	l12994
 19441  0061EE                     l12992:
 19442  0061EE  0100               	movlb	0	; () banked
 19443  0061F0  4B60               	infsnz	strcmp@s1& (0+255),f,b
 19444  0061F2  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
 19445  0061F4  0100               	movlb	0	; () banked
 19446  0061F6  4B62               	infsnz	strcmp@s2& (0+255),f,b
 19447  0061F8  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
 19448  0061FA                     l12994:
 19449  0061FA  C060  FFD9         	movff	strcmp@s1,fsr2l
 19450  0061FE  C061  FFDA         	movff	strcmp@s1+1,fsr2h
 19451  006202  50DF               	movf	indf2,w,c
 19452  006204  0100               	movlb	0	; () banked
 19453  006206  6F64               	movwf	??_strcmp& (0+255),b
 19454  006208  C062  FFF6         	movff	strcmp@s2,tblptrl
 19455  00620C  C063  FFF7         	movff	strcmp@s2+1,tblptrh
 19456  006210                     	if	0	;tblptru may be non-zero
 19457  006210                     	endif
 19458  006210                     	if	0	;tblptru may be non-zero
 19459  006210                     	endif
 19460  006210  0008               	tblrd		*
 19461  006212  50F5               	movf	tablat,w,c
 19462  006214  0800               	sublw	0
 19463  006216  0100               	movlb	0	; () banked
 19464  006218  2564               	addwf	??_strcmp& (0+255),w,b
 19465  00621A  0100               	movlb	0	; () banked
 19466  00621C  6F65               	movwf	strcmp@r& (0+255),b
 19467  00621E  0100               	movlb	0	; () banked
 19468  006220  5165               	movf	strcmp@r& (0+255),w,b
 19469  006222  A4D8               	btfss	status,2,c
 19470  006224  D007               	goto	l12998
 19471                           
 19472                           ; BSR set to: 0
 19473  006226  C060  FFD9         	movff	strcmp@s1,fsr2l
 19474  00622A  C061  FFDA         	movff	strcmp@s1+1,fsr2h
 19475  00622E  50DF               	movf	indf2,w,c
 19476  006230  A4D8               	btfss	status,2,c
 19477  006232  D7DD               	goto	l12992
 19478  006234                     l12998:
 19479                           
 19480                           ; BSR set to: 0
 19481  006234  0100               	movlb	0	; () banked
 19482  006236  5165               	movf	strcmp@r& (0+255),w,b
 19483  006238  0100               	movlb	0	; () banked
 19484  00623A  6F60               	movwf	?_strcmp& (0+255),b
 19485  00623C  6B61               	clrf	(?_strcmp+1)& (0+255),b
 19486  00623E  BF60               	btfsc	?_strcmp& (0+255),7,b
 19487  006240  0761               	decf	(?_strcmp+1)& (0+255),f,b
 19488  006242  0012               	return	
 19489  006244                     __end_of_strcmp:
 19490                           	opt stack 0
 19491                           tblptru	equ	0xFF8
 19492                           tblptrh	equ	0xFF7
 19493                           tblptrl	equ	0xFF6
 19494                           tablat	equ	0xFF5
 19495                           prodh	equ	0xFF4
 19496                           prodl	equ	0xFF3
 19497                           intcon	equ	0xFF2
 19498                           intcon3	equ	0xFF0
 19499                           postinc0	equ	0xFEE
 19500                           wreg	equ	0xFE8
 19501                           indf1	equ	0xFE7
 19502                           postdec1	equ	0xFE5
 19503                           fsr1h	equ	0xFE2
 19504                           fsr1l	equ	0xFE1
 19505                           indf2	equ	0xFDF
 19506                           fsr2h	equ	0xFDA
 19507                           fsr2l	equ	0xFD9
 19508                           status	equ	0xFD8
 19509                           
 19510 ;; *************** function _moteApp_delayms *****************
 19511 ;; Defined at:
 19512 ;;		line 165 in file "../Includes/Board/MOTEapp.c"
 19513 ;; Parameters:    Size  Location     Type
 19514 ;;  length          2    0[BANK0 ] unsigned int 
 19515 ;; Auto vars:     Size  Location     Type
 19516 ;;  counter         2    3[BANK0 ] unsigned int 
 19517 ;; Return value:  Size  Location     Type
 19518 ;;		None               void
 19519 ;; Registers used:
 19520 ;;		wreg, status,2, status,0
 19521 ;; Tracked objects:
 19522 ;;		On entry : 0/0
 19523 ;;		On exit  : 0/0
 19524 ;;		Unchanged: 0/0
 19525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19526 ;;      Params:         0       2       0       0       0       0       0       0       0
 19527 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19528 ;;      Temps:          0       1       0       0       0       0       0       0       0
 19529 ;;      Totals:         0       5       0       0       0       0       0       0       0
 19530 ;;Total ram usage:        5 bytes
 19531 ;; Hardware stack levels used:    1
 19532 ;; Hardware stack levels required when called:   11
 19533 ;; This function calls:
 19534 ;;		Nothing
 19535 ;; This function is called by:
 19536 ;;		_main
 19537 ;;		_test_powerup
 19538 ;;		_moduleResync
 19539 ;;		_moteJoiningProcess
 19540 ;;		_moteRunningProcess
 19541 ;;		_moteApp_GoToSleep
 19542 ;;		_moteApp_setSensorsInput
 19543 ;; This function uses a non-reentrant model
 19544 ;;
 19545                           
 19546                           	psect	text54
 19547  0065B2                     __ptext54:
 19548                           	opt stack 0
 19549  0065B2                     _moteApp_delayms:
 19550                           	opt stack 16
 19551                           
 19552                           ;MOTEapp.c: 167: uint16_t counter;
 19553                           ;MOTEapp.c: 168: for(counter = 0; counter < length; counter++)
 19554                           
 19555                           ; BSR set to: 0
 19556                           ;incstack = 0
 19557  0065B2  0E00               	movlw	0
 19558  0065B4  0100               	movlb	0	; () banked
 19559  0065B6  6F64               	movwf	(moteApp_delayms@counter+1)& (0+255),b
 19560  0065B8  0E00               	movlw	0
 19561  0065BA  6F63               	movwf	moteApp_delayms@counter& (0+255),b
 19562  0065BC  D00C               	goto	l352
 19563  0065BE                     l11906:
 19564                           
 19565                           ; BSR set to: 0
 19566                           ;MOTEapp.c: 169: {
 19567                           ;MOTEapp.c: 170: _delay((unsigned long)((1)*(48000000/4000.0)));
 19568  0065BE  0E10               	movlw	16
 19569  0065C0  0100               	movlb	0	; () banked
 19570  0065C2  6F62               	movwf	??_moteApp_delayms& (0+255),b
 19571  0065C4  0E94               	movlw	148
 19572  0065C6                     u14847:
 19573  0065C6  2EE8               	decfsz	wreg,f,c
 19574  0065C8  D7FE               	goto	u14847
 19575  0065CA  2F62               	decfsz	??_moteApp_delayms& (0+255),f,b
 19576  0065CC  D7FC               	goto	u14847
 19577  0065CE  D000               	nop2	
 19578  0065D0  0100               	movlb	0	; () banked
 19579  0065D2  4B63               	infsnz	moteApp_delayms@counter& (0+255),f,b
 19580  0065D4  2B64               	incf	(moteApp_delayms@counter+1)& (0+255),f,b
 19581  0065D6                     l352:
 19582                           
 19583                           ; BSR set to: 0
 19584  0065D6  0100               	movlb	0	; () banked
 19585  0065D8  5160               	movf	moteApp_delayms@length& (0+255),w,b
 19586  0065DA  0100               	movlb	0	; () banked
 19587  0065DC  5D63               	subwf	moteApp_delayms@counter& (0+255),w,b
 19588  0065DE  0100               	movlb	0	; () banked
 19589  0065E0  5161               	movf	(moteApp_delayms@length+1)& (0+255),w,b
 19590  0065E2  0100               	movlb	0	; () banked
 19591  0065E4  5964               	subwfb	(moteApp_delayms@counter+1)& (0+255),w,b
 19592  0065E6  B0D8               	btfsc	status,0,c
 19593  0065E8  0012               	return	
 19594  0065EA  D7E9               	goto	l11906
 19595  0065EC                     __end_of_moteApp_delayms:
 19596                           	opt stack 0
 19597                           tblptru	equ	0xFF8
 19598                           tblptrh	equ	0xFF7
 19599                           tblptrl	equ	0xFF6
 19600                           tablat	equ	0xFF5
 19601                           prodh	equ	0xFF4
 19602                           prodl	equ	0xFF3
 19603                           intcon	equ	0xFF2
 19604                           intcon3	equ	0xFF0
 19605                           postinc0	equ	0xFEE
 19606                           wreg	equ	0xFE8
 19607                           indf1	equ	0xFE7
 19608                           postdec1	equ	0xFE5
 19609                           fsr1h	equ	0xFE2
 19610                           fsr1l	equ	0xFE1
 19611                           indf2	equ	0xFDF
 19612                           fsr2h	equ	0xFDA
 19613                           fsr2l	equ	0xFD9
 19614                           status	equ	0xFD8
 19615                           
 19616 ;; *************** function _DATAEE_WriteByte *****************
 19617 ;; Defined at:
 19618 ;;		line 166 in file "../Includes/MccGenerated/memory.c"
 19619 ;; Parameters:    Size  Location     Type
 19620 ;;  bAdd            1    wreg     unsigned char 
 19621 ;;  bData           1    0[BANK0 ] unsigned char 
 19622 ;; Auto vars:     Size  Location     Type
 19623 ;;  bAdd            1    1[BANK0 ] unsigned char 
 19624 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 19625 ;; Return value:  Size  Location     Type
 19626 ;;		None               void
 19627 ;; Registers used:
 19628 ;;		wreg, status,2
 19629 ;; Tracked objects:
 19630 ;;		On entry : 0/0
 19631 ;;		On exit  : 0/0
 19632 ;;		Unchanged: 0/0
 19633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19634 ;;      Params:         0       1       0       0       0       0       0       0       0
 19635 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19636 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19637 ;;      Totals:         0       3       0       0       0       0       0       0       0
 19638 ;;Total ram usage:        3 bytes
 19639 ;; Hardware stack levels used:    1
 19640 ;; Hardware stack levels required when called:   11
 19641 ;; This function calls:
 19642 ;;		Nothing
 19643 ;; This function is called by:
 19644 ;;		_main
 19645 ;;		_moteJoiningProcess
 19646 ;; This function uses a non-reentrant model
 19647 ;;
 19648                           
 19649                           	psect	text55
 19650  0064C6                     __ptext55:
 19651                           	opt stack 0
 19652  0064C6                     _DATAEE_WriteByte:
 19653                           	opt stack 17
 19654                           
 19655                           ; BSR set to: 0
 19656                           ;incstack = 0
 19657                           ;DATAEE_WriteByte@bAdd stored from wreg
 19658  0064C6  0100               	movlb	0	; () banked
 19659  0064C8  6F61               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 19660                           
 19661                           ;memory.c: 168: uint8_t GIEBitValue = INTCONbits.GIE;
 19662  0064CA  0E00               	movlw	0
 19663  0064CC  BEF2               	btfsc	intcon,7,c	;volatile
 19664  0064CE  0E01               	movlw	1
 19665  0064D0  0100               	movlb	0	; () banked
 19666  0064D2  6F62               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 19667                           
 19668                           ; BSR set to: 0
 19669                           ;memory.c: 170: EEADR = (bAdd & 0xFF);
 19670  0064D4  C061  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
 19671                           
 19672                           ; BSR set to: 0
 19673                           ;memory.c: 171: EEDATA = bData;
 19674  0064D8  C060  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
 19675                           
 19676                           ; BSR set to: 0
 19677                           ;memory.c: 172: EECON1bits.EEPGD = 0;
 19678  0064DC  9EA6               	bcf	4006,7,c	;volatile
 19679                           
 19680                           ; BSR set to: 0
 19681                           ;memory.c: 173: EECON1bits.CFGS = 0;
 19682  0064DE  9CA6               	bcf	4006,6,c	;volatile
 19683                           
 19684                           ; BSR set to: 0
 19685                           ;memory.c: 174: EECON1bits.WREN = 1;
 19686  0064E0  84A6               	bsf	4006,2,c	;volatile
 19687                           
 19688                           ; BSR set to: 0
 19689                           ;memory.c: 175: INTCONbits.GIE = 0;
 19690  0064E2  9EF2               	bcf	intcon,7,c	;volatile
 19691                           
 19692                           ; BSR set to: 0
 19693                           ;memory.c: 176: EECON2 = 0x55;
 19694  0064E4  0E55               	movlw	85
 19695  0064E6  6EA7               	movwf	4007,c	;volatile
 19696                           
 19697                           ; BSR set to: 0
 19698                           ;memory.c: 177: EECON2 = 0xAA;
 19699  0064E8  0EAA               	movlw	170
 19700  0064EA  6EA7               	movwf	4007,c	;volatile
 19701                           
 19702                           ; BSR set to: 0
 19703                           ;memory.c: 178: EECON1bits.WR = 1;
 19704  0064EC  82A6               	bsf	4006,1,c	;volatile
 19705  0064EE                     l1444:
 19706  0064EE  B2A6               	btfsc	4006,1,c	;volatile
 19707  0064F0  D7FE               	goto	l1444
 19708                           
 19709                           ;memory.c: 182: }
 19710                           ;memory.c: 184: EECON1bits.WREN = 0;
 19711  0064F2  94A6               	bcf	4006,2,c	;volatile
 19712                           
 19713                           ;memory.c: 185: INTCONbits.GIE = GIEBitValue;
 19714  0064F4  0100               	movlb	0	; () banked
 19715  0064F6  B162               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 19716  0064F8  D002               	bra	u12125
 19717  0064FA  9EF2               	bcf	intcon,7,c	;volatile
 19718  0064FC  D001               	bra	u12126
 19719  0064FE                     u12125:
 19720  0064FE  8EF2               	bsf	intcon,7,c	;volatile
 19721  006500                     u12126:
 19722  006500  0012               	return		;funcret
 19723  006502                     __end_of_DATAEE_WriteByte:
 19724                           	opt stack 0
 19725                           tblptru	equ	0xFF8
 19726                           tblptrh	equ	0xFF7
 19727                           tblptrl	equ	0xFF6
 19728                           tablat	equ	0xFF5
 19729                           prodh	equ	0xFF4
 19730                           prodl	equ	0xFF3
 19731                           intcon	equ	0xFF2
 19732                           intcon3	equ	0xFF0
 19733                           postinc0	equ	0xFEE
 19734                           wreg	equ	0xFE8
 19735                           indf1	equ	0xFE7
 19736                           postdec1	equ	0xFE5
 19737                           fsr1h	equ	0xFE2
 19738                           fsr1l	equ	0xFE1
 19739                           indf2	equ	0xFDF
 19740                           fsr2h	equ	0xFDA
 19741                           fsr2l	equ	0xFD9
 19742                           status	equ	0xFD8
 19743                           
 19744 ;; *************** function _USBapp_exitCDCState *****************
 19745 ;; Defined at:
 19746 ;;		line 139 in file "../Includes/Board/USBapp.c"
 19747 ;; Parameters:    Size  Location     Type
 19748 ;;  usbState        1    wreg     enum E6759
 19749 ;; Auto vars:     Size  Location     Type
 19750 ;;  usbState        1    0[BANK0 ] enum E6759
 19751 ;; Return value:  Size  Location     Type
 19752 ;;		None               void
 19753 ;; Registers used:
 19754 ;;		wreg
 19755 ;; Tracked objects:
 19756 ;;		On entry : 0/0
 19757 ;;		On exit  : 0/0
 19758 ;;		Unchanged: 0/0
 19759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19760 ;;      Params:         0       0       0       0       0       0       0       0       0
 19761 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19762 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19763 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19764 ;;Total ram usage:        1 bytes
 19765 ;; Hardware stack levels used:    1
 19766 ;; Hardware stack levels required when called:   11
 19767 ;; This function calls:
 19768 ;;		Nothing
 19769 ;; This function is called by:
 19770 ;;		_moteHandler
 19771 ;; This function uses a non-reentrant model
 19772 ;;
 19773                           
 19774                           	psect	text56
 19775  006ACE                     __ptext56:
 19776                           	opt stack 0
 19777  006ACE                     _USBapp_exitCDCState:
 19778                           	opt stack 18
 19779                           
 19780                           ;incstack = 0
 19781                           ;USBapp_exitCDCState@usbState stored from wreg
 19782  006ACE  0100               	movlb	0	; () banked
 19783  006AD0  6F60               	movwf	USBapp_exitCDCState@usbState& (0+255),b
 19784                           
 19785                           ;USBapp.c: 141: exitUSB = usbState;
 19786  006AD2  C060  F0F8         	movff	USBapp_exitCDCState@usbState,_exitUSB
 19787  006AD6  0012               	return		;funcret
 19788  006AD8                     __end_of_USBapp_exitCDCState:
 19789                           	opt stack 0
 19790                           tblptru	equ	0xFF8
 19791                           tblptrh	equ	0xFF7
 19792                           tblptrl	equ	0xFF6
 19793                           tablat	equ	0xFF5
 19794                           prodh	equ	0xFF4
 19795                           prodl	equ	0xFF3
 19796                           intcon	equ	0xFF2
 19797                           intcon3	equ	0xFF0
 19798                           postinc0	equ	0xFEE
 19799                           wreg	equ	0xFE8
 19800                           indf1	equ	0xFE7
 19801                           postdec1	equ	0xFE5
 19802                           fsr1h	equ	0xFE2
 19803                           fsr1l	equ	0xFE1
 19804                           indf2	equ	0xFDF
 19805                           fsr2h	equ	0xFDA
 19806                           fsr2l	equ	0xFD9
 19807                           status	equ	0xFD8
 19808                           
 19809 ;; *************** function _USBapp_exitCDC *****************
 19810 ;; Defined at:
 19811 ;;		line 134 in file "../Includes/Board/USBapp.c"
 19812 ;; Parameters:    Size  Location     Type
 19813 ;;		None
 19814 ;; Auto vars:     Size  Location     Type
 19815 ;;		None
 19816 ;; Return value:  Size  Location     Type
 19817 ;;                  1    wreg      enum E6823
 19818 ;; Registers used:
 19819 ;;		wreg, status,2
 19820 ;; Tracked objects:
 19821 ;;		On entry : 0/0
 19822 ;;		On exit  : 0/0
 19823 ;;		Unchanged: 0/0
 19824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19825 ;;      Params:         0       0       0       0       0       0       0       0       0
 19826 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19827 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19828 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19829 ;;Total ram usage:        0 bytes
 19830 ;; Hardware stack levels used:    1
 19831 ;; Hardware stack levels required when called:   11
 19832 ;; This function calls:
 19833 ;;		Nothing
 19834 ;; This function is called by:
 19835 ;;		_moteHandler
 19836 ;; This function uses a non-reentrant model
 19837 ;;
 19838                           
 19839                           	psect	text57
 19840  006B06                     __ptext57:
 19841                           	opt stack 0
 19842  006B06                     _USBapp_exitCDC:
 19843                           	opt stack 18
 19844                           
 19845                           ;USBapp.c: 136: return exitUSB;
 19846                           
 19847                           ;incstack = 0
 19848  006B06  0100               	movlb	0	; () banked
 19849  006B08  51F8               	movf	_exitUSB& (0+255),w,b
 19850  006B0A  0012               	return	
 19851  006B0C                     __end_of_USBapp_exitCDC:
 19852                           	opt stack 0
 19853                           tblptru	equ	0xFF8
 19854                           tblptrh	equ	0xFF7
 19855                           tblptrl	equ	0xFF6
 19856                           tablat	equ	0xFF5
 19857                           prodh	equ	0xFF4
 19858                           prodl	equ	0xFF3
 19859                           intcon	equ	0xFF2
 19860                           intcon3	equ	0xFF0
 19861                           postinc0	equ	0xFEE
 19862                           wreg	equ	0xFE8
 19863                           indf1	equ	0xFE7
 19864                           postdec1	equ	0xFE5
 19865                           fsr1h	equ	0xFE2
 19866                           fsr1l	equ	0xFE1
 19867                           indf2	equ	0xFDF
 19868                           fsr2h	equ	0xFDA
 19869                           fsr2l	equ	0xFD9
 19870                           status	equ	0xFD8
 19871                           
 19872 ;; *************** function _TMRapp_Handler *****************
 19873 ;; Defined at:
 19874 ;;		line 57 in file "../Includes/Drivers/TMRapp.c"
 19875 ;; Parameters:    Size  Location     Type
 19876 ;;		None
 19877 ;; Auto vars:     Size  Location     Type
 19878 ;;		None
 19879 ;; Return value:  Size  Location     Type
 19880 ;;		None               void
 19881 ;; Registers used:
 19882 ;;		wreg, status,2, status,0, cstack
 19883 ;; Tracked objects:
 19884 ;;		On entry : 0/0
 19885 ;;		On exit  : 0/0
 19886 ;;		Unchanged: 0/0
 19887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19888 ;;      Params:         0       0       0       0       0       0       0       0       0
 19889 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19890 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19891 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19892 ;;Total ram usage:        0 bytes
 19893 ;; Hardware stack levels used:    1
 19894 ;; Hardware stack levels required when called:   12
 19895 ;; This function calls:
 19896 ;;		___almod
 19897 ;;		___lwmod
 19898 ;; This function is called by:
 19899 ;;		_moteHandler
 19900 ;; This function uses a non-reentrant model
 19901 ;;
 19902                           
 19903                           	psect	text58
 19904  00367E                     __ptext58:
 19905                           	opt stack 0
 19906  00367E                     _TMRapp_Handler:
 19907                           	opt stack 17
 19908                           
 19909                           ;TMRapp.c: 60: timerMsTickCount++;
 19910                           
 19911                           ; BSR set to: 0
 19912                           ;incstack = 0
 19913  00367E  0100               	movlb	0	; () banked
 19914  003680  4BCB               	infsnz	_timerMsTickCount& (0+255),f,b
 19915  003682  2BCC               	incf	(_timerMsTickCount+1)& (0+255),f,b
 19916                           
 19917                           ; BSR set to: 0
 19918                           ;TMRapp.c: 62: if ( (timerMsTickCount % 10) == 0)
 19919  003684  C0CB  F060         	movff	_timerMsTickCount,___lwmod@dividend
 19920  003688  C0CC  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 19921  00368C  0E00               	movlw	0
 19922  00368E  0100               	movlb	0	; () banked
 19923  003690  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 19924  003692  0E0A               	movlw	10
 19925  003694  6F62               	movwf	___lwmod@divisor& (0+255),b
 19926  003696  ECB2  F02F         	call	___lwmod	;wreg free
 19927  00369A  0100               	movlb	0	; () banked
 19928  00369C  5160               	movf	?___lwmod& (0+255),w,b
 19929  00369E  0100               	movlb	0	; () banked
 19930  0036A0  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 19931  0036A2  A4D8               	btfss	status,2,c
 19932  0036A4  0012               	return	
 19933                           
 19934                           ; BSR set to: 0
 19935                           ;TMRapp.c: 63: {
 19936                           ;TMRapp.c: 64: appTimer.mSecTenTick = 1;
 19937  0036A6  0100               	movlb	0	; () banked
 19938  0036A8  83D7               	bsf	_appTimer& (0+255),1,b
 19939                           
 19940                           ; BSR set to: 0
 19941                           ;TMRapp.c: 65: if ( (timerMsTickCount % 100) == 0)
 19942  0036AA  C0CB  F060         	movff	_timerMsTickCount,___lwmod@dividend
 19943  0036AE  C0CC  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 19944  0036B2  0E00               	movlw	0
 19945  0036B4  0100               	movlb	0	; () banked
 19946  0036B6  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 19947  0036B8  0E64               	movlw	100
 19948  0036BA  6F62               	movwf	___lwmod@divisor& (0+255),b
 19949  0036BC  ECB2  F02F         	call	___lwmod	;wreg free
 19950  0036C0  0100               	movlb	0	; () banked
 19951  0036C2  5160               	movf	?___lwmod& (0+255),w,b
 19952  0036C4  0100               	movlb	0	; () banked
 19953  0036C6  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 19954  0036C8  A4D8               	btfss	status,2,c
 19955  0036CA  0012               	return	
 19956                           
 19957                           ; BSR set to: 0
 19958                           ;TMRapp.c: 66: {
 19959                           ;TMRapp.c: 67: appTimer.mSecHundredTick = 1;
 19960  0036CC  0100               	movlb	0	; () banked
 19961  0036CE  85D7               	bsf	_appTimer& (0+255),2,b
 19962                           
 19963                           ; BSR set to: 0
 19964                           ;TMRapp.c: 68: if ( (timerMsTickCount % 1000) == 0)
 19965  0036D0  C0CB  F060         	movff	_timerMsTickCount,___lwmod@dividend
 19966  0036D4  C0CC  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 19967  0036D8  0E03               	movlw	3
 19968  0036DA  0100               	movlb	0	; () banked
 19969  0036DC  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 19970  0036DE  0EE8               	movlw	232
 19971  0036E0  6F62               	movwf	___lwmod@divisor& (0+255),b
 19972  0036E2  ECB2  F02F         	call	___lwmod	;wreg free
 19973  0036E6  0100               	movlb	0	; () banked
 19974  0036E8  5160               	movf	?___lwmod& (0+255),w,b
 19975  0036EA  0100               	movlb	0	; () banked
 19976  0036EC  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 19977  0036EE  A4D8               	btfss	status,2,c
 19978  0036F0  0012               	return	
 19979                           
 19980                           ; BSR set to: 0
 19981                           ;TMRapp.c: 69: {
 19982                           ;TMRapp.c: 70: appTimer.SecTick = 1;
 19983  0036F2  0100               	movlb	0	; () banked
 19984  0036F4  87D7               	bsf	_appTimer& (0+255),3,b
 19985                           
 19986                           ; BSR set to: 0
 19987                           ;TMRapp.c: 71: if ( (timerMsTickCount % 60000) == 0)
 19988  0036F6  C0CB  F060         	movff	_timerMsTickCount,___almod@dividend
 19989  0036FA  C0CC  F061         	movff	_timerMsTickCount+1,___almod@dividend+1
 19990  0036FE  0100               	movlb	0	; () banked
 19991  003700  6B62               	clrf	(___almod@dividend+2)& (0+255),b
 19992  003702  6B63               	clrf	(___almod@dividend+3)& (0+255),b
 19993  003704  0E60               	movlw	96
 19994  003706  0100               	movlb	0	; () banked
 19995  003708  6F64               	movwf	___almod@divisor& (0+255),b
 19996  00370A  0EEA               	movlw	234
 19997  00370C  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 19998  00370E  0E00               	movlw	0
 19999  003710  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 20000  003712  0E00               	movlw	0
 20001  003714  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 20002  003716  ECCC  F021         	call	___almod	;wreg free
 20003  00371A  0100               	movlb	0	; () banked
 20004  00371C  5160               	movf	?___almod& (0+255),w,b
 20005  00371E  0100               	movlb	0	; () banked
 20006  003720  1161               	iorwf	(?___almod+1)& (0+255),w,b
 20007  003722  0100               	movlb	0	; () banked
 20008  003724  1162               	iorwf	(?___almod+2)& (0+255),w,b
 20009  003726  0100               	movlb	0	; () banked
 20010  003728  1163               	iorwf	(?___almod+3)& (0+255),w,b
 20011  00372A  A4D8               	btfss	status,2,c
 20012  00372C  0012               	return	
 20013                           
 20014                           ; BSR set to: 0
 20015                           ;TMRapp.c: 72: {
 20016                           ;TMRapp.c: 73: timerMinTickCount++;
 20017  00372E  0100               	movlb	0	; () banked
 20018  003730  4BC9               	infsnz	_timerMinTickCount& (0+255),f,b
 20019  003732  2BCA               	incf	(_timerMinTickCount+1)& (0+255),f,b
 20020                           
 20021                           ; BSR set to: 0
 20022                           ;TMRapp.c: 74: appTimer.MinTick = 1;
 20023  003734  0100               	movlb	0	; () banked
 20024  003736  89D7               	bsf	_appTimer& (0+255),4,b
 20025                           
 20026                           ; BSR set to: 0
 20027                           ;TMRapp.c: 75: if ( (timerMinTickCount % 60) == 0)
 20028  003738  C0C9  F060         	movff	_timerMinTickCount,___lwmod@dividend
 20029  00373C  C0CA  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 20030  003740  0E00               	movlw	0
 20031  003742  0100               	movlb	0	; () banked
 20032  003744  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20033  003746  0E3C               	movlw	60
 20034  003748  6F62               	movwf	___lwmod@divisor& (0+255),b
 20035  00374A  ECB2  F02F         	call	___lwmod	;wreg free
 20036  00374E  0100               	movlb	0	; () banked
 20037  003750  5160               	movf	?___lwmod& (0+255),w,b
 20038  003752  0100               	movlb	0	; () banked
 20039  003754  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20040  003756  A4D8               	btfss	status,2,c
 20041  003758  0012               	return	
 20042                           
 20043                           ; BSR set to: 0
 20044                           ;TMRapp.c: 76: {
 20045                           ;TMRapp.c: 77: appTimer.HourTick = 1;
 20046  00375A  0100               	movlb	0	; () banked
 20047  00375C  8BD7               	bsf	_appTimer& (0+255),5,b
 20048                           
 20049                           ; BSR set to: 0
 20050                           ;TMRapp.c: 78: if ( (timerMinTickCount % 720) == 0)
 20051  00375E  C0C9  F060         	movff	_timerMinTickCount,___lwmod@dividend
 20052  003762  C0CA  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 20053  003766  0E02               	movlw	2
 20054  003768  0100               	movlb	0	; () banked
 20055  00376A  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20056  00376C  0ED0               	movlw	208
 20057  00376E  6F62               	movwf	___lwmod@divisor& (0+255),b
 20058  003770  ECB2  F02F         	call	___lwmod	;wreg free
 20059  003774  0100               	movlb	0	; () banked
 20060  003776  5160               	movf	?___lwmod& (0+255),w,b
 20061  003778  0100               	movlb	0	; () banked
 20062  00377A  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20063  00377C  A4D8               	btfss	status,2,c
 20064  00377E  0012               	return	
 20065                           
 20066                           ; BSR set to: 0
 20067                           ;TMRapp.c: 79: {
 20068                           ;TMRapp.c: 80: appTimer.HalfDayTick = 1;
 20069  003780  0100               	movlb	0	; () banked
 20070  003782  8DD7               	bsf	_appTimer& (0+255),6,b
 20071                           
 20072                           ; BSR set to: 0
 20073                           ;TMRapp.c: 81: if ( (timerMinTickCount % 1440) == 0)
 20074  003784  C0C9  F060         	movff	_timerMinTickCount,___lwmod@dividend
 20075  003788  C0CA  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 20076  00378C  0E05               	movlw	5
 20077  00378E  0100               	movlb	0	; () banked
 20078  003790  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20079  003792  0EA0               	movlw	160
 20080  003794  6F62               	movwf	___lwmod@divisor& (0+255),b
 20081  003796  ECB2  F02F         	call	___lwmod	;wreg free
 20082  00379A  0100               	movlb	0	; () banked
 20083  00379C  5160               	movf	?___lwmod& (0+255),w,b
 20084  00379E  0100               	movlb	0	; () banked
 20085  0037A0  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20086  0037A2  A4D8               	btfss	status,2,c
 20087  0037A4  0012               	return	
 20088                           
 20089                           ; BSR set to: 0
 20090                           ;TMRapp.c: 82: {
 20091                           ;TMRapp.c: 83: appTimer.DayTick = 1;
 20092  0037A6  0100               	movlb	0	; () banked
 20093  0037A8  8FD7               	bsf	_appTimer& (0+255),7,b
 20094                           
 20095                           ; BSR set to: 0
 20096                           ;TMRapp.c: 85: timerMsTickCount = 0;
 20097  0037AA  0E00               	movlw	0
 20098  0037AC  0100               	movlb	0	; () banked
 20099  0037AE  6FCC               	movwf	(_timerMsTickCount+1)& (0+255),b
 20100  0037B0  0E00               	movlw	0
 20101  0037B2  6FCB               	movwf	_timerMsTickCount& (0+255),b
 20102                           
 20103                           ;TMRapp.c: 86: timerMinTickCount = 0;
 20104  0037B4  0E00               	movlw	0
 20105  0037B6  0100               	movlb	0	; () banked
 20106  0037B8  6FCA               	movwf	(_timerMinTickCount+1)& (0+255),b
 20107  0037BA  0E00               	movlw	0
 20108  0037BC  6FC9               	movwf	_timerMinTickCount& (0+255),b
 20109                           
 20110                           ; BSR set to: 0
 20111                           
 20112                           ; BSR set to: 0
 20113                           
 20114                           ; BSR set to: 0
 20115                           
 20116                           ; BSR set to: 0
 20117                           
 20118                           ; BSR set to: 0
 20119                           
 20120                           ; BSR set to: 0
 20121  0037BE  0012               	return	
 20122  0037C0                     __end_of_TMRapp_Handler:
 20123                           	opt stack 0
 20124                           tblptru	equ	0xFF8
 20125                           tblptrh	equ	0xFF7
 20126                           tblptrl	equ	0xFF6
 20127                           tablat	equ	0xFF5
 20128                           prodh	equ	0xFF4
 20129                           prodl	equ	0xFF3
 20130                           intcon	equ	0xFF2
 20131                           intcon3	equ	0xFF0
 20132                           postinc0	equ	0xFEE
 20133                           wreg	equ	0xFE8
 20134                           indf1	equ	0xFE7
 20135                           postdec1	equ	0xFE5
 20136                           fsr1h	equ	0xFE2
 20137                           fsr1l	equ	0xFE1
 20138                           indf2	equ	0xFDF
 20139                           fsr2h	equ	0xFDA
 20140                           fsr2l	equ	0xFD9
 20141                           status	equ	0xFD8
 20142                           
 20143 ;; *************** function ___lwmod *****************
 20144 ;; Defined at:
 20145 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 20146 ;; Parameters:    Size  Location     Type
 20147 ;;  dividend        2    0[BANK0 ] unsigned int 
 20148 ;;  divisor         2    2[BANK0 ] unsigned int 
 20149 ;; Auto vars:     Size  Location     Type
 20150 ;;  counter         1    4[BANK0 ] unsigned char 
 20151 ;; Return value:  Size  Location     Type
 20152 ;;                  2    0[BANK0 ] unsigned int 
 20153 ;; Registers used:
 20154 ;;		wreg, status,2, status,0
 20155 ;; Tracked objects:
 20156 ;;		On entry : 0/0
 20157 ;;		On exit  : 0/0
 20158 ;;		Unchanged: 0/0
 20159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20160 ;;      Params:         0       4       0       0       0       0       0       0       0
 20161 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20162 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20163 ;;      Totals:         0       5       0       0       0       0       0       0       0
 20164 ;;Total ram usage:        5 bytes
 20165 ;; Hardware stack levels used:    1
 20166 ;; Hardware stack levels required when called:   11
 20167 ;; This function calls:
 20168 ;;		Nothing
 20169 ;; This function is called by:
 20170 ;;		_moteApp_add16bToDataBuffer
 20171 ;;		_TMRapp_Handler
 20172 ;;		_oled_putUint16
 20173 ;; This function uses a non-reentrant model
 20174 ;;
 20175                           
 20176                           	psect	text59
 20177  005F64                     __ptext59:
 20178                           	opt stack 0
 20179  005F64                     ___lwmod:
 20180                           	opt stack 16
 20181                           
 20182                           ; BSR set to: 0
 20183                           ;incstack = 0
 20184  005F64  0100               	movlb	0	; () banked
 20185  005F66  5162               	movf	___lwmod@divisor& (0+255),w,b
 20186  005F68  0100               	movlb	0	; () banked
 20187  005F6A  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 20188  005F6C  B4D8               	btfsc	status,2,c
 20189  005F6E  D026               	goto	l2516
 20190                           
 20191                           ; BSR set to: 0
 20192  005F70  0E01               	movlw	1
 20193  005F72  0100               	movlb	0	; () banked
 20194  005F74  6F64               	movwf	___lwmod@counter& (0+255),b
 20195  005F76  D006               	goto	l12782
 20196  005F78                     l12780:
 20197                           
 20198                           ; BSR set to: 0
 20199  005F78  0100               	movlb	0	; () banked
 20200  005F7A  90D8               	bcf	status,0,c
 20201  005F7C  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 20202  005F7E  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 20203  005F80  0100               	movlb	0	; () banked
 20204  005F82  2B64               	incf	___lwmod@counter& (0+255),f,b
 20205  005F84                     l12782:
 20206                           
 20207                           ; BSR set to: 0
 20208  005F84  0100               	movlb	0	; () banked
 20209  005F86  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 20210  005F88  D7F7               	goto	l12780
 20211  005F8A                     l12784:
 20212                           
 20213                           ; BSR set to: 0
 20214  005F8A  0100               	movlb	0	; () banked
 20215  005F8C  5162               	movf	___lwmod@divisor& (0+255),w,b
 20216  005F8E  0100               	movlb	0	; () banked
 20217  005F90  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 20218  005F92  0100               	movlb	0	; () banked
 20219  005F94  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 20220  005F96  0100               	movlb	0	; () banked
 20221  005F98  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 20222  005F9A  A0D8               	btfss	status,0,c
 20223  005F9C  D008               	goto	l12788
 20224                           
 20225                           ; BSR set to: 0
 20226  005F9E  0100               	movlb	0	; () banked
 20227  005FA0  5162               	movf	___lwmod@divisor& (0+255),w,b
 20228  005FA2  0100               	movlb	0	; () banked
 20229  005FA4  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 20230  005FA6  0100               	movlb	0	; () banked
 20231  005FA8  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 20232  005FAA  0100               	movlb	0	; () banked
 20233  005FAC  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 20234  005FAE                     l12788:
 20235                           
 20236                           ; BSR set to: 0
 20237  005FAE  0100               	movlb	0	; () banked
 20238  005FB0  90D8               	bcf	status,0,c
 20239  005FB2  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 20240  005FB4  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 20241                           
 20242                           ; BSR set to: 0
 20243  005FB6  0100               	movlb	0	; () banked
 20244  005FB8  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 20245  005FBA  D7E7               	goto	l12784
 20246  005FBC                     l2516:
 20247                           
 20248                           ; BSR set to: 0
 20249  005FBC  C060  F060         	movff	___lwmod@dividend,?___lwmod
 20250  005FC0  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 20251                           
 20252                           ; BSR set to: 0
 20253  005FC4  0012               	return		;funcret
 20254  005FC6                     __end_of___lwmod:
 20255                           	opt stack 0
 20256                           tblptru	equ	0xFF8
 20257                           tblptrh	equ	0xFF7
 20258                           tblptrl	equ	0xFF6
 20259                           tablat	equ	0xFF5
 20260                           prodh	equ	0xFF4
 20261                           prodl	equ	0xFF3
 20262                           intcon	equ	0xFF2
 20263                           intcon3	equ	0xFF0
 20264                           postinc0	equ	0xFEE
 20265                           wreg	equ	0xFE8
 20266                           indf1	equ	0xFE7
 20267                           postdec1	equ	0xFE5
 20268                           fsr1h	equ	0xFE2
 20269                           fsr1l	equ	0xFE1
 20270                           indf2	equ	0xFDF
 20271                           fsr2h	equ	0xFDA
 20272                           fsr2l	equ	0xFD9
 20273                           status	equ	0xFD8
 20274                           
 20275 ;; *************** function ___almod *****************
 20276 ;; Defined at:
 20277 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\almod.c"
 20278 ;; Parameters:    Size  Location     Type
 20279 ;;  dividend        4    0[BANK0 ] long 
 20280 ;;  divisor         4    4[BANK0 ] long 
 20281 ;; Auto vars:     Size  Location     Type
 20282 ;;  sign            1    9[BANK0 ] unsigned char 
 20283 ;;  counter         1    8[BANK0 ] unsigned char 
 20284 ;; Return value:  Size  Location     Type
 20285 ;;                  4    0[BANK0 ] long 
 20286 ;; Registers used:
 20287 ;;		wreg, status,2, status,0
 20288 ;; Tracked objects:
 20289 ;;		On entry : 0/0
 20290 ;;		On exit  : 0/0
 20291 ;;		Unchanged: 0/0
 20292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20293 ;;      Params:         0       8       0       0       0       0       0       0       0
 20294 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20295 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20296 ;;      Totals:         0      10       0       0       0       0       0       0       0
 20297 ;;Total ram usage:       10 bytes
 20298 ;; Hardware stack levels used:    1
 20299 ;; Hardware stack levels required when called:   11
 20300 ;; This function calls:
 20301 ;;		Nothing
 20302 ;; This function is called by:
 20303 ;;		_TMRapp_Handler
 20304 ;; This function uses a non-reentrant model
 20305 ;;
 20306                           
 20307                           	psect	text60
 20308  004398                     __ptext60:
 20309                           	opt stack 0
 20310  004398                     ___almod:
 20311                           	opt stack 17
 20312                           
 20313                           ; BSR set to: 0
 20314                           ;incstack = 0
 20315  004398  0E00               	movlw	0
 20316  00439A  0100               	movlb	0	; () banked
 20317  00439C  6F69               	movwf	___almod@sign& (0+255),b
 20318                           
 20319                           ; BSR set to: 0
 20320  00439E  0100               	movlb	0	; () banked
 20321  0043A0  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 20322  0043A2  D00C               	goto	l13468
 20323                           
 20324                           ; BSR set to: 0
 20325  0043A4  0100               	movlb	0	; () banked
 20326  0043A6  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 20327  0043A8  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 20328  0043AA  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 20329  0043AC  6D60               	negf	___almod@dividend& (0+255),b
 20330  0043AE  0E00               	movlw	0
 20331  0043B0  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 20332  0043B2  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 20333  0043B4  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 20334                           
 20335                           ; BSR set to: 0
 20336  0043B6  0E01               	movlw	1
 20337  0043B8  0100               	movlb	0	; () banked
 20338  0043BA  6F69               	movwf	___almod@sign& (0+255),b
 20339  0043BC                     l13468:
 20340                           
 20341                           ; BSR set to: 0
 20342  0043BC  0100               	movlb	0	; () banked
 20343  0043BE  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 20344  0043C0  D009               	goto	l13472
 20345                           
 20346                           ; BSR set to: 0
 20347  0043C2  0100               	movlb	0	; () banked
 20348  0043C4  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 20349  0043C6  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 20350  0043C8  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 20351  0043CA  6D64               	negf	___almod@divisor& (0+255),b
 20352  0043CC  0E00               	movlw	0
 20353  0043CE  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 20354  0043D0  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 20355  0043D2  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 20356  0043D4                     l13472:
 20357                           
 20358                           ; BSR set to: 0
 20359  0043D4  0100               	movlb	0	; () banked
 20360  0043D6  5164               	movf	___almod@divisor& (0+255),w,b
 20361  0043D8  0100               	movlb	0	; () banked
 20362  0043DA  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 20363  0043DC  0100               	movlb	0	; () banked
 20364  0043DE  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 20365  0043E0  0100               	movlb	0	; () banked
 20366  0043E2  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 20367  0043E4  B4D8               	btfsc	status,2,c
 20368  0043E6  D03A               	goto	l13488
 20369                           
 20370                           ; BSR set to: 0
 20371  0043E8  0E01               	movlw	1
 20372  0043EA  0100               	movlb	0	; () banked
 20373  0043EC  6F68               	movwf	___almod@counter& (0+255),b
 20374  0043EE  D008               	goto	l13478
 20375  0043F0                     l13476:
 20376                           
 20377                           ; BSR set to: 0
 20378  0043F0  0100               	movlb	0	; () banked
 20379  0043F2  90D8               	bcf	status,0,c
 20380  0043F4  3764               	rlcf	___almod@divisor& (0+255),f,b
 20381  0043F6  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 20382  0043F8  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 20383  0043FA  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 20384  0043FC  0100               	movlb	0	; () banked
 20385  0043FE  2B68               	incf	___almod@counter& (0+255),f,b
 20386  004400                     l13478:
 20387                           
 20388                           ; BSR set to: 0
 20389  004400  0100               	movlb	0	; () banked
 20390  004402  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 20391  004404  D7F5               	goto	l13476
 20392  004406                     l13480:
 20393                           
 20394                           ; BSR set to: 0
 20395  004406  0100               	movlb	0	; () banked
 20396  004408  5164               	movf	___almod@divisor& (0+255),w,b
 20397  00440A  0100               	movlb	0	; () banked
 20398  00440C  5D60               	subwf	___almod@dividend& (0+255),w,b
 20399  00440E  0100               	movlb	0	; () banked
 20400  004410  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 20401  004412  0100               	movlb	0	; () banked
 20402  004414  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 20403  004416  0100               	movlb	0	; () banked
 20404  004418  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 20405  00441A  0100               	movlb	0	; () banked
 20406  00441C  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 20407  00441E  0100               	movlb	0	; () banked
 20408  004420  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 20409  004422  0100               	movlb	0	; () banked
 20410  004424  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 20411  004426  A0D8               	btfss	status,0,c
 20412  004428  D010               	goto	l13484
 20413                           
 20414                           ; BSR set to: 0
 20415  00442A  0100               	movlb	0	; () banked
 20416  00442C  5164               	movf	___almod@divisor& (0+255),w,b
 20417  00442E  0100               	movlb	0	; () banked
 20418  004430  5F60               	subwf	___almod@dividend& (0+255),f,b
 20419  004432  0100               	movlb	0	; () banked
 20420  004434  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 20421  004436  0100               	movlb	0	; () banked
 20422  004438  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 20423  00443A  0100               	movlb	0	; () banked
 20424  00443C  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 20425  00443E  0100               	movlb	0	; () banked
 20426  004440  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 20427  004442  0100               	movlb	0	; () banked
 20428  004444  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 20429  004446  0100               	movlb	0	; () banked
 20430  004448  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 20431  00444A                     l13484:
 20432                           
 20433                           ; BSR set to: 0
 20434  00444A  0100               	movlb	0	; () banked
 20435  00444C  90D8               	bcf	status,0,c
 20436  00444E  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 20437  004450  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 20438  004452  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 20439  004454  3364               	rrcf	___almod@divisor& (0+255),f,b
 20440                           
 20441                           ; BSR set to: 0
 20442  004456  0100               	movlb	0	; () banked
 20443  004458  2F68               	decfsz	___almod@counter& (0+255),f,b
 20444  00445A  D7D5               	goto	l13480
 20445  00445C                     l13488:
 20446                           
 20447                           ; BSR set to: 0
 20448  00445C  0100               	movlb	0	; () banked
 20449  00445E  5169               	movf	___almod@sign& (0+255),w,b
 20450  004460  0100               	movlb	0	; () banked
 20451  004462  B4D8               	btfsc	status,2,c
 20452  004464  D009               	goto	l13492
 20453                           
 20454                           ; BSR set to: 0
 20455  004466  0100               	movlb	0	; () banked
 20456  004468  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 20457  00446A  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 20458  00446C  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 20459  00446E  6D60               	negf	___almod@dividend& (0+255),b
 20460  004470  0E00               	movlw	0
 20461  004472  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 20462  004474  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 20463  004476  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 20464  004478                     l13492:
 20465                           
 20466                           ; BSR set to: 0
 20467  004478  C060  F060         	movff	___almod@dividend,?___almod
 20468  00447C  C061  F061         	movff	___almod@dividend+1,?___almod+1
 20469  004480  C062  F062         	movff	___almod@dividend+2,?___almod+2
 20470  004484  C063  F063         	movff	___almod@dividend+3,?___almod+3
 20471  004488  0012               	return	
 20472  00448A                     __end_of___almod:
 20473                           	opt stack 0
 20474                           tblptru	equ	0xFF8
 20475                           tblptrh	equ	0xFF7
 20476                           tblptrl	equ	0xFF6
 20477                           tablat	equ	0xFF5
 20478                           prodh	equ	0xFF4
 20479                           prodl	equ	0xFF3
 20480                           intcon	equ	0xFF2
 20481                           intcon3	equ	0xFF0
 20482                           postinc0	equ	0xFEE
 20483                           wreg	equ	0xFE8
 20484                           indf1	equ	0xFE7
 20485                           postdec1	equ	0xFE5
 20486                           fsr1h	equ	0xFE2
 20487                           fsr1l	equ	0xFE1
 20488                           indf2	equ	0xFDF
 20489                           fsr2h	equ	0xFDA
 20490                           fsr2l	equ	0xFD9
 20491                           status	equ	0xFD8
 20492                           
 20493 ;; *************** function _TMRapp_ClearBitFlags *****************
 20494 ;; Defined at:
 20495 ;;		line 51 in file "../Includes/Drivers/TMRapp.c"
 20496 ;; Parameters:    Size  Location     Type
 20497 ;;		None
 20498 ;; Auto vars:     Size  Location     Type
 20499 ;;		None
 20500 ;; Return value:  Size  Location     Type
 20501 ;;		None               void
 20502 ;; Registers used:
 20503 ;;		wreg, status,2
 20504 ;; Tracked objects:
 20505 ;;		On entry : 0/0
 20506 ;;		On exit  : 0/0
 20507 ;;		Unchanged: 0/0
 20508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20509 ;;      Params:         0       0       0       0       0       0       0       0       0
 20510 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20511 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20512 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20513 ;;Total ram usage:        0 bytes
 20514 ;; Hardware stack levels used:    1
 20515 ;; Hardware stack levels required when called:   11
 20516 ;; This function calls:
 20517 ;;		Nothing
 20518 ;; This function is called by:
 20519 ;;		_moteHandler
 20520 ;; This function uses a non-reentrant model
 20521 ;;
 20522                           
 20523                           	psect	text61
 20524  006AF6                     __ptext61:
 20525                           	opt stack 0
 20526  006AF6                     _TMRapp_ClearBitFlags:
 20527                           	opt stack 18
 20528                           
 20529                           ;TMRapp.c: 54: appTimer.TicksBitMap = 0x00;
 20530                           
 20531                           ; BSR set to: 0
 20532                           ;incstack = 0
 20533  006AF6  0E00               	movlw	0
 20534  006AF8  0100               	movlb	0	; () banked
 20535  006AFA  6FD7               	movwf	_appTimer& (0+255),b
 20536                           
 20537                           ; BSR set to: 0
 20538  006AFC  0012               	return		;funcret
 20539  006AFE                     __end_of_TMRapp_ClearBitFlags:
 20540                           	opt stack 0
 20541                           tblptru	equ	0xFF8
 20542                           tblptrh	equ	0xFF7
 20543                           tblptrl	equ	0xFF6
 20544                           tablat	equ	0xFF5
 20545                           prodh	equ	0xFF4
 20546                           prodl	equ	0xFF3
 20547                           intcon	equ	0xFF2
 20548                           intcon3	equ	0xFF0
 20549                           postinc0	equ	0xFEE
 20550                           wreg	equ	0xFE8
 20551                           indf1	equ	0xFE7
 20552                           postdec1	equ	0xFE5
 20553                           fsr1h	equ	0xFE2
 20554                           fsr1l	equ	0xFE1
 20555                           indf2	equ	0xFDF
 20556                           fsr2h	equ	0xFDA
 20557                           fsr2l	equ	0xFD9
 20558                           status	equ	0xFD8
 20559                           
 20560 ;; *************** function _MOTEapp_TimerBasedTask *****************
 20561 ;; Defined at:
 20562 ;;		line 1074 in file "../Includes/Board/MOTEapp.c"
 20563 ;; Parameters:    Size  Location     Type
 20564 ;;  timerTask       1    wreg     struct .
 20565 ;; Auto vars:     Size  Location     Type
 20566 ;;  timerTask       1    0[BANK0 ] struct .
 20567 ;; Return value:  Size  Location     Type
 20568 ;;		None               void
 20569 ;; Registers used:
 20570 ;;		wreg, status,2, status,0
 20571 ;; Tracked objects:
 20572 ;;		On entry : 0/0
 20573 ;;		On exit  : 0/0
 20574 ;;		Unchanged: 0/0
 20575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20576 ;;      Params:         0       0       0       0       0       0       0       0       0
 20577 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20578 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20579 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20580 ;;Total ram usage:        1 bytes
 20581 ;; Hardware stack levels used:    1
 20582 ;; Hardware stack levels required when called:   11
 20583 ;; This function calls:
 20584 ;;		Nothing
 20585 ;; This function is called by:
 20586 ;;		_moteHandler
 20587 ;; This function uses a non-reentrant model
 20588 ;;
 20589                           
 20590                           	psect	text62
 20591  006890                     __ptext62:
 20592                           	opt stack 0
 20593  006890                     _MOTEapp_TimerBasedTask:
 20594                           	opt stack 18
 20595                           
 20596                           ; BSR set to: 0
 20597                           ;incstack = 0
 20598                           ;MOTEapp_TimerBasedTask@timerTask stored from wreg
 20599  006890  0100               	movlb	0	; () banked
 20600  006892  6F60               	movwf	MOTEapp_TimerBasedTask@timerTask& (0+255),b
 20601                           
 20602                           ;MOTEapp.c: 1079: if (timerTask.mSecTenTick)
 20603  006894  0100               	movlb	0	; () banked
 20604  006896  A360               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),1,b
 20605  006898  D003               	goto	l13658
 20606                           
 20607                           ; BSR set to: 0
 20608                           ;MOTEapp.c: 1080: {
 20609                           ;MOTEapp.c: 1082: m10SecTicker++;
 20610  00689A  0101               	movlb	1	; () banked
 20611  00689C  4B54               	infsnz	_m10SecTicker& (0+255),f,b
 20612  00689E  2B55               	incf	(_m10SecTicker+1)& (0+255),f,b
 20613  0068A0                     l13658:
 20614                           
 20615                           ;MOTEapp.c: 1088: }
 20616                           ;MOTEapp.c: 1089: if (timerTask.SecTick)
 20617  0068A0  0100               	movlb	0	; () banked
 20618  0068A2  A760               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),3,b
 20619  0068A4  D002               	goto	l13662
 20620                           
 20621                           ; BSR set to: 0
 20622                           ;MOTEapp.c: 1090: {
 20623                           ;MOTEapp.c: 1092: secTicker++;
 20624  0068A6  0100               	movlb	0	; () banked
 20625  0068A8  2BEF               	incf	_secTicker& (0+255),f,b
 20626  0068AA                     l13662:
 20627                           
 20628                           ; BSR set to: 0
 20629                           ;MOTEapp.c: 1093: }
 20630                           ;MOTEapp.c: 1094: if (timerTask.MinTick)
 20631  0068AA  0100               	movlb	0	; () banked
 20632  0068AC  A960               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),4,b
 20633  0068AE  0012               	return	
 20634                           
 20635                           ; BSR set to: 0
 20636                           ;MOTEapp.c: 1095: {
 20637                           ;MOTEapp.c: 1097: minTicker++;
 20638  0068B0  0100               	movlb	0	; () banked
 20639  0068B2  2BE6               	incf	_minTicker& (0+255),f,b
 20640                           
 20641                           ; BSR set to: 0
 20642                           
 20643                           ; BSR set to: 0
 20644                           
 20645                           ;MOTEapp.c: 1104: {
 20646                           
 20647                           ; BSR set to: 0
 20648                           
 20649                           ; BSR set to: 0
 20650                           
 20651                           ;MOTEapp.c: 1100: {
 20652                           
 20653                           ; BSR set to: 0
 20654                           
 20655                           ; BSR set to: 0
 20656  0068B4  0012               	return	
 20657  0068B6                     __end_of_MOTEapp_TimerBasedTask:
 20658                           	opt stack 0
 20659                           tblptru	equ	0xFF8
 20660                           tblptrh	equ	0xFF7
 20661                           tblptrl	equ	0xFF6
 20662                           tablat	equ	0xFF5
 20663                           prodh	equ	0xFF4
 20664                           prodl	equ	0xFF3
 20665                           intcon	equ	0xFF2
 20666                           intcon3	equ	0xFF0
 20667                           postinc0	equ	0xFEE
 20668                           wreg	equ	0xFE8
 20669                           indf1	equ	0xFE7
 20670                           postdec1	equ	0xFE5
 20671                           fsr1h	equ	0xFE2
 20672                           fsr1l	equ	0xFE1
 20673                           indf2	equ	0xFDF
 20674                           fsr2h	equ	0xFDA
 20675                           fsr2l	equ	0xFD9
 20676                           status	equ	0xFD8
 20677                           
 20678 ;; *************** function _moteApp_clearCommand *****************
 20679 ;; Defined at:
 20680 ;;		line 1329 in file "../Includes/Board/MOTEapp.c"
 20681 ;; Parameters:    Size  Location     Type
 20682 ;;		None
 20683 ;; Auto vars:     Size  Location     Type
 20684 ;;		None
 20685 ;; Return value:  Size  Location     Type
 20686 ;;		None               void
 20687 ;; Registers used:
 20688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20689 ;; Tracked objects:
 20690 ;;		On entry : 0/0
 20691 ;;		On exit  : 0/0
 20692 ;;		Unchanged: 0/0
 20693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20694 ;;      Params:         0       0       0       0       0       0       0       0       0
 20695 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20696 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20697 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20698 ;;Total ram usage:        0 bytes
 20699 ;; Hardware stack levels used:    1
 20700 ;; Hardware stack levels required when called:   14
 20701 ;; This function calls:
 20702 ;;		_sendCommand
 20703 ;; This function is called by:
 20704 ;;		_main
 20705 ;; This function uses a non-reentrant model
 20706 ;;
 20707                           
 20708                           	psect	text63
 20709  006A4A                     __ptext63:
 20710                           	opt stack 0
 20711  006A4A                     _moteApp_clearCommand:
 20712                           	opt stack 16
 20713                           
 20714                           ;MOTEapp.c: 1331: sendCommand("\r\n");
 20715                           
 20716                           ; BSR set to: 0
 20717                           ;incstack = 0
 20718  006A4A  0EB1               	movlw	low (STR_184+23)
 20719  006A4C  0100               	movlb	0	; () banked
 20720  006A4E  6F61               	movwf	sendCommand@string& (0+255),b
 20721  006A50  0E79               	movlw	high (STR_184+23)
 20722  006A52  0100               	movlb	0	; () banked
 20723  006A54  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 20724  006A56  ECB0  F033         	call	_sendCommand	;wreg free
 20725  006A5A  0012               	return		;funcret
 20726  006A5C                     __end_of_moteApp_clearCommand:
 20727                           	opt stack 0
 20728                           tblptru	equ	0xFF8
 20729                           tblptrh	equ	0xFF7
 20730                           tblptrl	equ	0xFF6
 20731                           tablat	equ	0xFF5
 20732                           prodh	equ	0xFF4
 20733                           prodl	equ	0xFF3
 20734                           intcon	equ	0xFF2
 20735                           intcon3	equ	0xFF0
 20736                           postinc0	equ	0xFEE
 20737                           wreg	equ	0xFE8
 20738                           indf1	equ	0xFE7
 20739                           postdec1	equ	0xFE5
 20740                           fsr1h	equ	0xFE2
 20741                           fsr1l	equ	0xFE1
 20742                           indf2	equ	0xFDF
 20743                           fsr2h	equ	0xFDA
 20744                           fsr2l	equ	0xFD9
 20745                           status	equ	0xFD8
 20746                           
 20747 ;; *************** function _sendCommand *****************
 20748 ;; Defined at:
 20749 ;;		line 1161 in file "../Includes/Board/MOTEapp.c"
 20750 ;; Parameters:    Size  Location     Type
 20751 ;;  string          2    1[BANK0 ] PTR const unsigned char 
 20752 ;;		 -> STR_193(22), STR_192(22), STR_191(27), STR_190(27), 
 20753 ;;		 -> STR_185(26), STR_184(26), STR_183(26), STR_182(26), 
 20754 ;;		 -> STR_181(3), STR_180(9), STR_179(15), STR_178(13), 
 20755 ;;		 -> STR_177(13), STR_176(17), STR_175(13), STR_174(17), 
 20756 ;;		 -> STR_173(13), STR_172(17), STR_171(13), STR_170(17), 
 20757 ;;		 -> STR_169(13), STR_168(17), STR_167(13), STR_166(17), 
 20758 ;;		 -> STR_165(13), STR_164(17), STR_163(16), STR_70(11), 
 20759 ;;		 -> STR_68(11), STR_66(14), STR_58(14), STR_52(10), 
 20760 ;;		 -> STR_48(13), STR_43(14), STR_41(13), STR_39(10), 
 20761 ;;		 -> STR_30(10), STR_22(20), STR_21(2), 
 20762 ;; Auto vars:     Size  Location     Type
 20763 ;;		None
 20764 ;; Return value:  Size  Location     Type
 20765 ;;		None               void
 20766 ;; Registers used:
 20767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20768 ;; Tracked objects:
 20769 ;;		On entry : 0/0
 20770 ;;		On exit  : 0/0
 20771 ;;		Unchanged: 0/0
 20772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20773 ;;      Params:         0       2       0       0       0       0       0       0       0
 20774 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20775 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20776 ;;      Totals:         0       2       0       0       0       0       0       0       0
 20777 ;;Total ram usage:        2 bytes
 20778 ;; Hardware stack levels used:    1
 20779 ;; Hardware stack levels required when called:   13
 20780 ;; This function calls:
 20781 ;;		_EUSART_Write
 20782 ;;		_EndLine
 20783 ;; This function is called by:
 20784 ;;		_moduleResync
 20785 ;;		_moduleSleep
 20786 ;;		_moteJoiningProcess
 20787 ;;		_MOTEapp_SetDataRateSetting
 20788 ;;		_moteApp_clearCommand
 20789 ;;		_moteApp_toggleLeds
 20790 ;;		_moteApp_setSensorsInput
 20791 ;;		_moteApp_getTempValue
 20792 ;;		_moteApp_getLightValue
 20793 ;; This function uses a non-reentrant model
 20794 ;;
 20795                           
 20796                           	psect	text64
 20797  006760                     __ptext64:
 20798                           	opt stack 0
 20799  006760                     _sendCommand:
 20800                           	opt stack 14
 20801                           
 20802                           ;MOTEapp.c: 1164: while (*string)
 20803                           
 20804                           ;incstack = 0
 20805  006760  D00B               	goto	l11918
 20806  006762                     l11914:
 20807                           
 20808                           ;MOTEapp.c: 1165: {
 20809                           ;MOTEapp.c: 1166: EUSART_Write(*string++);
 20810  006762  C061  FFF6         	movff	sendCommand@string,tblptrl
 20811  006766  C062  FFF7         	movff	sendCommand@string+1,tblptrh
 20812  00676A                     	if	0	;tblptru may be non-zero
 20813  00676A                     	endif
 20814  00676A                     	if	0	;tblptru may be non-zero
 20815  00676A                     	endif
 20816  00676A  0008               	tblrd		*
 20817  00676C  50F5               	movf	tablat,w,c
 20818  00676E  ECE2  F031         	call	_EUSART_Write
 20819  006772  0100               	movlb	0	; () banked
 20820  006774  4B61               	infsnz	sendCommand@string& (0+255),f,b
 20821  006776  2B62               	incf	(sendCommand@string+1)& (0+255),f,b
 20822  006778                     l11918:
 20823  006778  C061  FFF6         	movff	sendCommand@string,tblptrl
 20824  00677C  C062  FFF7         	movff	sendCommand@string+1,tblptrh
 20825  006780                     	if	0	;tblptru may be non-zero
 20826  006780                     	endif
 20827  006780                     	if	0	;tblptru may be non-zero
 20828  006780                     	endif
 20829  006780  0008               	tblrd		*
 20830  006782  50F5               	movf	tablat,w,c
 20831  006784  0900               	iorlw	0
 20832  006786  A4D8               	btfss	status,2,c
 20833  006788  D7EC               	goto	l11914
 20834                           
 20835                           ;MOTEapp.c: 1167: }
 20836                           ;MOTEapp.c: 1168: EndLine();
 20837  00678A  EC55  F035         	call	_EndLine	;wreg free
 20838  00678E  0012               	return		;funcret
 20839  006790                     __end_of_sendCommand:
 20840                           	opt stack 0
 20841                           tblptru	equ	0xFF8
 20842                           tblptrh	equ	0xFF7
 20843                           tblptrl	equ	0xFF6
 20844                           tablat	equ	0xFF5
 20845                           prodh	equ	0xFF4
 20846                           prodl	equ	0xFF3
 20847                           intcon	equ	0xFF2
 20848                           intcon3	equ	0xFF0
 20849                           postinc0	equ	0xFEE
 20850                           wreg	equ	0xFE8
 20851                           indf1	equ	0xFE7
 20852                           postdec1	equ	0xFE5
 20853                           fsr1h	equ	0xFE2
 20854                           fsr1l	equ	0xFE1
 20855                           indf2	equ	0xFDF
 20856                           fsr2h	equ	0xFDA
 20857                           fsr2l	equ	0xFD9
 20858                           status	equ	0xFD8
 20859                           
 20860 ;; *************** function _EndLine *****************
 20861 ;; Defined at:
 20862 ;;		line 1155 in file "../Includes/Board/MOTEapp.c"
 20863 ;; Parameters:    Size  Location     Type
 20864 ;;		None
 20865 ;; Auto vars:     Size  Location     Type
 20866 ;;		None
 20867 ;; Return value:  Size  Location     Type
 20868 ;;		None               void
 20869 ;; Registers used:
 20870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20871 ;; Tracked objects:
 20872 ;;		On entry : 0/0
 20873 ;;		On exit  : 0/0
 20874 ;;		Unchanged: 0/0
 20875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20876 ;;      Params:         0       0       0       0       0       0       0       0       0
 20877 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20878 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20879 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20880 ;;Total ram usage:        0 bytes
 20881 ;; Hardware stack levels used:    1
 20882 ;; Hardware stack levels required when called:   12
 20883 ;; This function calls:
 20884 ;;		_EUSART_Write
 20885 ;; This function is called by:
 20886 ;;		_sendCommand
 20887 ;;		_sendDataCommand
 20888 ;; This function uses a non-reentrant model
 20889 ;;
 20890                           
 20891                           	psect	text65
 20892  006AAA                     __ptext65:
 20893                           	opt stack 0
 20894  006AAA                     _EndLine:
 20895                           	opt stack 14
 20896                           
 20897                           ;MOTEapp.c: 1157: EUSART_Write(0x0D);
 20898                           
 20899                           ;incstack = 0
 20900  006AAA  0E0D               	movlw	13
 20901  006AAC  ECE2  F031         	call	_EUSART_Write
 20902                           
 20903                           ;MOTEapp.c: 1158: EUSART_Write(0x0A);
 20904  006AB0  0E0A               	movlw	10
 20905  006AB2  ECE2  F031         	call	_EUSART_Write
 20906  006AB6  0012               	return		;funcret
 20907  006AB8                     __end_of_EndLine:
 20908                           	opt stack 0
 20909                           tblptru	equ	0xFF8
 20910                           tblptrh	equ	0xFF7
 20911                           tblptrl	equ	0xFF6
 20912                           tablat	equ	0xFF5
 20913                           prodh	equ	0xFF4
 20914                           prodl	equ	0xFF3
 20915                           intcon	equ	0xFF2
 20916                           intcon3	equ	0xFF0
 20917                           postinc0	equ	0xFEE
 20918                           wreg	equ	0xFE8
 20919                           indf1	equ	0xFE7
 20920                           postdec1	equ	0xFE5
 20921                           fsr1h	equ	0xFE2
 20922                           fsr1l	equ	0xFE1
 20923                           indf2	equ	0xFDF
 20924                           fsr2h	equ	0xFDA
 20925                           fsr2l	equ	0xFD9
 20926                           status	equ	0xFD8
 20927                           
 20928 ;; *************** function _USBapp_handlerState *****************
 20929 ;; Defined at:
 20930 ;;		line 78 in file "../Includes/Board/USBapp.c"
 20931 ;; Parameters:    Size  Location     Type
 20932 ;;  state           1    wreg     enum E6754
 20933 ;; Auto vars:     Size  Location     Type
 20934 ;;  state           1    0[BANK0 ] enum E6754
 20935 ;; Return value:  Size  Location     Type
 20936 ;;		None               void
 20937 ;; Registers used:
 20938 ;;		wreg
 20939 ;; Tracked objects:
 20940 ;;		On entry : 0/0
 20941 ;;		On exit  : 0/0
 20942 ;;		Unchanged: 0/0
 20943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20944 ;;      Params:         0       0       0       0       0       0       0       0       0
 20945 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20946 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20947 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20948 ;;Total ram usage:        1 bytes
 20949 ;; Hardware stack levels used:    1
 20950 ;; Hardware stack levels required when called:   11
 20951 ;; This function calls:
 20952 ;;		Nothing
 20953 ;; This function is called by:
 20954 ;;		_main
 20955 ;; This function uses a non-reentrant model
 20956 ;;
 20957                           
 20958                           	psect	text66
 20959  006AD8                     __ptext66:
 20960                           	opt stack 0
 20961  006AD8                     _USBapp_handlerState:
 20962                           	opt stack 19
 20963                           
 20964                           ;incstack = 0
 20965                           ;USBapp_handlerState@state stored from wreg
 20966  006AD8  0100               	movlb	0	; () banked
 20967  006ADA  6F60               	movwf	USBapp_handlerState@state& (0+255),b
 20968                           
 20969                           ;USBapp.c: 80: usbState = state;
 20970  006ADC  C060  F0F1         	movff	USBapp_handlerState@state,_usbState
 20971  006AE0  0012               	return		;funcret
 20972  006AE2                     __end_of_USBapp_handlerState:
 20973                           	opt stack 0
 20974                           tblptru	equ	0xFF8
 20975                           tblptrh	equ	0xFF7
 20976                           tblptrl	equ	0xFF6
 20977                           tablat	equ	0xFF5
 20978                           prodh	equ	0xFF4
 20979                           prodl	equ	0xFF3
 20980                           intcon	equ	0xFF2
 20981                           intcon3	equ	0xFF0
 20982                           postinc0	equ	0xFEE
 20983                           wreg	equ	0xFE8
 20984                           indf1	equ	0xFE7
 20985                           postdec1	equ	0xFE5
 20986                           fsr1h	equ	0xFE2
 20987                           fsr1l	equ	0xFE1
 20988                           indf2	equ	0xFDF
 20989                           fsr2h	equ	0xFDA
 20990                           fsr2l	equ	0xFD9
 20991                           status	equ	0xFD8
 20992                           
 20993 ;; *************** function _USBapp_Handler *****************
 20994 ;; Defined at:
 20995 ;;		line 86 in file "../Includes/Board/USBapp.c"
 20996 ;; Parameters:    Size  Location     Type
 20997 ;;		None
 20998 ;; Auto vars:     Size  Location     Type
 20999 ;;  buttonPress     1   22[BANK0 ] enum E6788
 21000 ;; Return value:  Size  Location     Type
 21001 ;;		None               void
 21002 ;; Registers used:
 21003 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21004 ;; Tracked objects:
 21005 ;;		On entry : 0/0
 21006 ;;		On exit  : 0/0
 21007 ;;		Unchanged: 0/0
 21008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21009 ;;      Params:         0       0       0       0       0       0       0       0       0
 21010 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21011 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21012 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21013 ;;Total ram usage:        1 bytes
 21014 ;; Hardware stack levels used:    1
 21015 ;; Hardware stack levels required when called:   16
 21016 ;; This function calls:
 21017 ;;		_USBapp_DeviceCdcEmulatorHandler
 21018 ;;		_oled_clear
 21019 ;;		_oled_putString
 21020 ;;		_service_pushbutton
 21021 ;; This function is called by:
 21022 ;;		_main
 21023 ;; This function uses a non-reentrant model
 21024 ;;
 21025                           
 21026                           	psect	text67
 21027  004D40                     __ptext67:
 21028                           	opt stack 0
 21029  004D40                     _USBapp_Handler:
 21030                           	opt stack 14
 21031                           
 21032                           ;USBapp.c: 90: {
 21033                           ;USBapp.c: 91: switch(usbState)
 21034                           
 21035                           ;incstack = 0
 21036                           ;USBapp.c: 89: do
 21037  004D40  D04A               	goto	l14712
 21038  004D42  D7FF               	goto	l849
 21039  004D44                     l14684:
 21040                           
 21041                           ;USBapp.c: 98: oled_clear();
 21042  004D44  ECAB  F034         	call	_oled_clear	;wreg free
 21043                           
 21044                           ;USBapp.c: 99: oled_putString("CDC Mode",1,0);
 21045  004D48  0E11               	movlw	low STR_194
 21046  004D4A  0100               	movlb	0	; () banked
 21047  004D4C  6F71               	movwf	oled_putString@string& (0+255),b
 21048  004D4E  0E7F               	movlw	high STR_194
 21049  004D50  0100               	movlb	0	; () banked
 21050  004D52  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 21051  004D54  0E01               	movlw	1
 21052  004D56  0100               	movlb	0	; () banked
 21053  004D58  6F73               	movwf	oled_putString@station_dot& (0+255),b
 21054  004D5A  0E00               	movlw	0
 21055  004D5C  0100               	movlb	0	; () banked
 21056  004D5E  6F74               	movwf	oled_putString@start_page& (0+255),b
 21057  004D60  EC49  F02F         	call	_oled_putString	;wreg free
 21058                           
 21059                           ;USBapp.c: 100: oled_putString("Command",2,1);
 21060  004D64  0E62               	movlw	low STR_195
 21061  004D66  0100               	movlb	0	; () banked
 21062  004D68  6F71               	movwf	oled_putString@string& (0+255),b
 21063  004D6A  0E7F               	movlw	high STR_195
 21064  004D6C  0100               	movlb	0	; () banked
 21065  004D6E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 21066  004D70  0E02               	movlw	2
 21067  004D72  0100               	movlb	0	; () banked
 21068  004D74  6F73               	movwf	oled_putString@station_dot& (0+255),b
 21069  004D76  0E01               	movlw	1
 21070  004D78  0100               	movlb	0	; () banked
 21071  004D7A  6F74               	movwf	oled_putString@start_page& (0+255),b
 21072  004D7C  EC49  F02F         	call	_oled_putString	;wreg free
 21073                           
 21074                           ;USBapp.c: 101: oled_putString("USB Handler",0,2);
 21075  004D80  0E29               	movlw	low STR_196
 21076  004D82  0100               	movlb	0	; () banked
 21077  004D84  6F71               	movwf	oled_putString@string& (0+255),b
 21078  004D86  0E7E               	movlw	high STR_196
 21079  004D88  0100               	movlb	0	; () banked
 21080  004D8A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 21081  004D8C  0E00               	movlw	0
 21082  004D8E  0100               	movlb	0	; () banked
 21083  004D90  6F73               	movwf	oled_putString@station_dot& (0+255),b
 21084  004D92  0E02               	movlw	2
 21085  004D94  0100               	movlb	0	; () banked
 21086  004D96  6F74               	movwf	oled_putString@start_page& (0+255),b
 21087  004D98  EC49  F02F         	call	_oled_putString	;wreg free
 21088                           
 21089                           ;USBapp.c: 103: usbState = USB_RUNNING;
 21090  004D9C  0E01               	movlw	1
 21091  004D9E  D006               	goto	L18
 21092  004DA0                     l14694:
 21093                           
 21094                           ; BSR set to: 0
 21095                           ;USBapp.c: 107: if( USBDeviceState < CONFIGURED_STATE )
 21096  004DA0  0E20               	movlw	32
 21097  004DA2  0100               	movlb	0	; () banked
 21098  004DA4  61D2               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 21099  004DA6  D001               	goto	l14698
 21100  004DA8  D022               	goto	l855
 21101  004DAA                     l14698:
 21102                           
 21103                           ; BSR set to: 0
 21104                           ;USBapp.c: 111: }
 21105                           ;USBapp.c: 112: usbState = USB_CDC;
 21106  004DAA  0E02               	movlw	2
 21107  004DAC                     L18:
 21108  004DAC  0100               	movlb	0	; () banked
 21109  004DAE  6FF1               	movwf	_usbState& (0+255),b
 21110                           
 21111                           ;USBapp.c: 113: break;
 21112  004DB0  D01E               	goto	l855
 21113  004DB2                     l14700:
 21114                           
 21115                           ; BSR set to: 0
 21116                           ;USBapp.c: 116: USBapp_DeviceCdcEmulatorHandler();
 21117  004DB2  EC30  F023         	call	_USBapp_DeviceCdcEmulatorHandler	;wreg free
 21118                           
 21119                           ;USBapp.c: 120: buttonStates_t buttonPress = Released;
 21120  004DB6  0E03               	movlw	3
 21121  004DB8  0100               	movlb	0	; () banked
 21122  004DBA  6F76               	movwf	USBapp_Handler@buttonPress& (0+255),b
 21123                           
 21124                           ; BSR set to: 0
 21125                           ;USBapp.c: 121: buttonPress = service_pushbutton();
 21126  004DBC  ECB2  F02D         	call	_service_pushbutton	;wreg free
 21127  004DC0  0100               	movlb	0	; () banked
 21128  004DC2  6F76               	movwf	USBapp_Handler@buttonPress& (0+255),b
 21129                           
 21130                           ; BSR set to: 0
 21131                           ;USBapp.c: 122: if (buttonPress != Released )
 21132  004DC4  0E03               	movlw	3
 21133  004DC6  0100               	movlb	0	; () banked
 21134  004DC8  1976               	xorwf	USBapp_Handler@buttonPress& (0+255),w,b
 21135  004DCA  B4D8               	btfsc	status,2,c
 21136  004DCC  D010               	goto	l855
 21137                           
 21138                           ; BSR set to: 0
 21139                           ;USBapp.c: 123: {
 21140                           ;USBapp.c: 124: exitUSB = USB_BAT;
 21141  004DCE  0E02               	movlw	2
 21142  004DD0  0100               	movlb	0	; () banked
 21143  004DD2  6FF8               	movwf	_exitUSB& (0+255),b
 21144                           
 21145                           ; BSR set to: 0
 21146                           ;USBapp.c: 127: }
 21147                           
 21148                           ; BSR set to: 0
 21149                           ;USBapp.c: 125: }
 21150                           ;USBapp.c: 126: break;
 21151  004DD4  D00C               	goto	l855
 21152  004DD6                     l14712:
 21153  004DD6  0100               	movlb	0	; () banked
 21154  004DD8  51F1               	movf	_usbState& (0+255),w,b
 21155                           
 21156                           ; Switch size 1, requested type "space"
 21157                           ; Number of cases is 3, Range of values is 0 to 2
 21158                           ; switch strategies available:
 21159                           ; Name         Instructions Cycles
 21160                           ; simple_byte           10     6 (average)
 21161                           ;	Chosen strategy is simple_byte
 21162  004DDA  0A00               	xorlw	0	; case 0
 21163  004DDC  B4D8               	btfsc	status,2,c
 21164  004DDE  D7B2               	goto	l14684
 21165  004DE0  0A01               	xorlw	1	; case 1
 21166  004DE2  B4D8               	btfsc	status,2,c
 21167  004DE4  D7DD               	goto	l14694
 21168  004DE6  0A03               	xorlw	3	; case 2
 21169  004DE8  B4D8               	btfsc	status,2,c
 21170  004DEA  D7E3               	goto	l14700
 21171  004DEC  D7AA               	goto	l849
 21172  004DEE                     l855:
 21173                           
 21174                           ;USBapp.c: 128: }while((PORTAbits.RA0) && (exitUSB == NO_USB));
 21175  004DEE  A080               	btfss	3968,0,c	;volatile
 21176  004DF0  D004               	goto	l860
 21177  004DF2  0100               	movlb	0	; () banked
 21178  004DF4  51F8               	movf	_exitUSB& (0+255),w,b
 21179  004DF6  B4D8               	btfsc	status,2,c
 21180  004DF8  D7EE               	goto	l14712
 21181  004DFA                     l860:
 21182                           
 21183                           ;USBapp.c: 129: __nop();
 21184  004DFA  F000               	nop	
 21185                           
 21186                           ;USBapp.c: 130: if (exitUSB != USB_BAT)
 21187  004DFC  0E02               	movlw	2
 21188  004DFE  0100               	movlb	0	; () banked
 21189  004E00  19F8               	xorwf	_exitUSB& (0+255),w,b
 21190  004E02  B4D8               	btfsc	status,2,c
 21191  004E04  0012               	return	
 21192                           
 21193                           ; BSR set to: 0
 21194                           ;USBapp.c: 131: exitUSB = NO_USB;
 21195  004E06  0E00               	movlw	0
 21196  004E08  0100               	movlb	0	; () banked
 21197  004E0A  6FF8               	movwf	_exitUSB& (0+255),b
 21198  004E0C  0012               	return	
 21199  004E0E                     __end_of_USBapp_Handler:
 21200                           	opt stack 0
 21201                           tblptru	equ	0xFF8
 21202                           tblptrh	equ	0xFF7
 21203                           tblptrl	equ	0xFF6
 21204                           tablat	equ	0xFF5
 21205                           prodh	equ	0xFF4
 21206                           prodl	equ	0xFF3
 21207                           intcon	equ	0xFF2
 21208                           intcon3	equ	0xFF0
 21209                           postinc0	equ	0xFEE
 21210                           wreg	equ	0xFE8
 21211                           indf1	equ	0xFE7
 21212                           postdec1	equ	0xFE5
 21213                           fsr1h	equ	0xFE2
 21214                           fsr1l	equ	0xFE1
 21215                           indf2	equ	0xFDF
 21216                           fsr2h	equ	0xFDA
 21217                           fsr2l	equ	0xFD9
 21218                           status	equ	0xFD8
 21219                           
 21220 ;; *************** function _service_pushbutton *****************
 21221 ;; Defined at:
 21222 ;;		line 49 in file "../Includes/Drivers/buttons.c"
 21223 ;; Parameters:    Size  Location     Type
 21224 ;;		None
 21225 ;; Auto vars:     Size  Location     Type
 21226 ;;  bs              1    0[BANK0 ] enum E6669
 21227 ;; Return value:  Size  Location     Type
 21228 ;;                  1    wreg      enum E6757
 21229 ;; Registers used:
 21230 ;;		wreg, status,2, status,0
 21231 ;; Tracked objects:
 21232 ;;		On entry : 0/0
 21233 ;;		On exit  : 0/0
 21234 ;;		Unchanged: 0/0
 21235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21236 ;;      Params:         0       0       0       0       0       0       0       0       0
 21237 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21238 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21239 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21240 ;;Total ram usage:        1 bytes
 21241 ;; Hardware stack levels used:    1
 21242 ;; Hardware stack levels required when called:   11
 21243 ;; This function calls:
 21244 ;;		Nothing
 21245 ;; This function is called by:
 21246 ;;		_moteHandler
 21247 ;;		_USBapp_Handler
 21248 ;; This function uses a non-reentrant model
 21249 ;;
 21250                           
 21251                           	psect	text68
 21252  005B64                     __ptext68:
 21253                           	opt stack 0
 21254  005B64                     _service_pushbutton:
 21255                           	opt stack 18
 21256                           
 21257                           ;buttons.c: 51: static uint32_t PB_Timer = 0;
 21258                           ;buttons.c: 52: static uint8_t Release_Timer = 0;
 21259                           ;buttons.c: 53: buttonStates_t bs = NoButton;
 21260                           
 21261                           ; BSR set to: 0
 21262                           ;incstack = 0
 21263  005B64  0E00               	movlw	0
 21264  005B66  0100               	movlb	0	; () banked
 21265  005B68  6F60               	movwf	service_pushbutton@bs& (0+255),b
 21266                           
 21267                           ; BSR set to: 0
 21268                           ;buttons.c: 55: if ((PORTBbits.RB1 == 0) || (PORTBbits.RB0 == 0) )
 21269  005B6A  B281               	btfsc	3969,1,c	;volatile
 21270                           
 21271                           ; BSR set to: 0
 21272  005B6C  A081               	btfss	3969,0,c	;volatile
 21273  005B6E  D001               	goto	l13678
 21274  005B70  D01D               	goto	l13690
 21275  005B72                     l13678:
 21276                           
 21277                           ; BSR set to: 0
 21278                           ;buttons.c: 56: {
 21279                           ;buttons.c: 57: ++PB_Timer;
 21280  005B72  0E01               	movlw	1
 21281  005B74  0101               	movlb	1	; () banked
 21282  005B76  274A               	addwf	service_pushbutton@PB_Timer& (0+255),f,b
 21283  005B78  0E00               	movlw	0
 21284  005B7A  234B               	addwfc	(service_pushbutton@PB_Timer+1)& (0+255),f,b
 21285  005B7C  234C               	addwfc	(service_pushbutton@PB_Timer+2)& (0+255),f,b
 21286  005B7E  234D               	addwfc	(service_pushbutton@PB_Timer+3)& (0+255),f,b
 21287                           
 21288                           ;buttons.c: 61: if (PB_Timer == 55)
 21289  005B80  0E37               	movlw	55
 21290  005B82  0101               	movlb	1	; () banked
 21291  005B84  194A               	xorwf	service_pushbutton@PB_Timer& (0+255),w,b
 21292  005B86  0101               	movlb	1	; () banked
 21293  005B88  114B               	iorwf	(service_pushbutton@PB_Timer+1)& (0+255),w,b
 21294  005B8A  0101               	movlb	1	; () banked
 21295  005B8C  114C               	iorwf	(service_pushbutton@PB_Timer+2)& (0+255),w,b
 21296  005B8E  0101               	movlb	1	; () banked
 21297  005B90  114D               	iorwf	(service_pushbutton@PB_Timer+3)& (0+255),w,b
 21298  005B92  A4D8               	btfss	status,2,c
 21299  005B94  D009               	goto	l13688
 21300                           
 21301                           ; BSR set to: 1
 21302                           ;buttons.c: 62: {
 21303                           ;buttons.c: 63: Release_Timer = 0;
 21304  005B96  0E00               	movlw	0
 21305  005B98  0100               	movlb	0	; () banked
 21306  005B9A  6FF2               	movwf	service_pushbutton@Release_Timer& (0+255),b
 21307                           
 21308                           ; BSR set to: 0
 21309                           ;buttons.c: 65: if (PORTBbits.RB1 == 0)
 21310  005B9C  B281               	btfsc	3969,1,c	;volatile
 21311  005B9E  D002               	goto	l13686
 21312                           
 21313                           ; BSR set to: 0
 21314                           ;buttons.c: 66: {
 21315                           ;buttons.c: 67: bs = ShortPress1;
 21316  005BA0  0E01               	movlw	1
 21317  005BA2  D019               	goto	L21
 21318  005BA4                     l13686:
 21319                           
 21320                           ; BSR set to: 0
 21321                           ;buttons.c: 69: else
 21322                           ;buttons.c: 70: {
 21323                           ;buttons.c: 71: bs = ShortPress2;
 21324  005BA4  0E02               	movlw	2
 21325  005BA6  D017               	goto	L21
 21326  005BA8                     l13688:
 21327                           
 21328                           ;buttons.c: 74: else
 21329                           ;buttons.c: 75: {
 21330                           ;buttons.c: 76: bs = NoButton;
 21331  005BA8  0E00               	movlw	0
 21332  005BAA  D015               	goto	L21
 21333  005BAC                     l13690:
 21334                           
 21335                           ; BSR set to: 0
 21336                           ;buttons.c: 79: else
 21337                           ;buttons.c: 80: {
 21338                           ;buttons.c: 81: if (Release_Timer == 20)
 21339  005BAC  0E14               	movlw	20
 21340  005BAE  0100               	movlb	0	; () banked
 21341  005BB0  19F2               	xorwf	service_pushbutton@Release_Timer& (0+255),w,b
 21342  005BB2  A4D8               	btfss	status,2,c
 21343  005BB4  D00D               	goto	l13694
 21344                           
 21345                           ; BSR set to: 0
 21346                           ;buttons.c: 82: {
 21347                           ;buttons.c: 83: PB_Timer = 0;
 21348  005BB6  0E00               	movlw	0
 21349  005BB8  0101               	movlb	1	; () banked
 21350  005BBA  6F4A               	movwf	service_pushbutton@PB_Timer& (0+255),b
 21351  005BBC  0E00               	movlw	0
 21352  005BBE  6F4B               	movwf	(service_pushbutton@PB_Timer+1)& (0+255),b
 21353  005BC0  0E00               	movlw	0
 21354  005BC2  6F4C               	movwf	(service_pushbutton@PB_Timer+2)& (0+255),b
 21355  005BC4  0E00               	movlw	0
 21356  005BC6  6F4D               	movwf	(service_pushbutton@PB_Timer+3)& (0+255),b
 21357                           
 21358                           ;buttons.c: 84: Release_Timer = 0;
 21359  005BC8  0E00               	movlw	0
 21360  005BCA  0100               	movlb	0	; () banked
 21361  005BCC  6FF2               	movwf	service_pushbutton@Release_Timer& (0+255),b
 21362                           
 21363                           ;buttons.c: 85: }
 21364  005BCE  D002               	goto	l13696
 21365  005BD0                     l13694:
 21366                           
 21367                           ; BSR set to: 0
 21368                           ;buttons.c: 86: else
 21369                           ;buttons.c: 87: {
 21370                           ;buttons.c: 88: Release_Timer++;
 21371  005BD0  0100               	movlb	0	; () banked
 21372  005BD2  2BF2               	incf	service_pushbutton@Release_Timer& (0+255),f,b
 21373  005BD4                     l13696:
 21374                           
 21375                           ; BSR set to: 0
 21376                           ;buttons.c: 89: }
 21377                           ;buttons.c: 90: bs = Released;
 21378  005BD4  0E03               	movlw	3
 21379  005BD6                     L21:
 21380  005BD6  0100               	movlb	0	; () banked
 21381  005BD8  6F60               	movwf	service_pushbutton@bs& (0+255),b
 21382                           
 21383                           ; BSR set to: 0
 21384                           ;buttons.c: 91: }
 21385                           ;buttons.c: 93: return bs;
 21386                           
 21387                           ; BSR set to: 0
 21388  005BDA  0100               	movlb	0	; () banked
 21389  005BDC  5160               	movf	service_pushbutton@bs& (0+255),w,b
 21390  005BDE  0012               	return	
 21391  005BE0                     __end_of_service_pushbutton:
 21392                           	opt stack 0
 21393                           tblptru	equ	0xFF8
 21394                           tblptrh	equ	0xFF7
 21395                           tblptrl	equ	0xFF6
 21396                           tablat	equ	0xFF5
 21397                           prodh	equ	0xFF4
 21398                           prodl	equ	0xFF3
 21399                           intcon	equ	0xFF2
 21400                           intcon3	equ	0xFF0
 21401                           postinc0	equ	0xFEE
 21402                           wreg	equ	0xFE8
 21403                           indf1	equ	0xFE7
 21404                           postdec1	equ	0xFE5
 21405                           fsr1h	equ	0xFE2
 21406                           fsr1l	equ	0xFE1
 21407                           indf2	equ	0xFDF
 21408                           fsr2h	equ	0xFDA
 21409                           fsr2l	equ	0xFD9
 21410                           status	equ	0xFD8
 21411                           
 21412 ;; *************** function _oled_putString *****************
 21413 ;; Defined at:
 21414 ;;		line 331 in file "../Includes/Drivers/SSD1306oLED.c"
 21415 ;; Parameters:    Size  Location     Type
 21416 ;;  string          2   17[BANK0 ] PTR const unsigned char 
 21417 ;;		 -> oled_putUint16@numData(6), oled_putint8@numData(6), oled_putUint8@numData(6), STR_196(12), 
 21418 ;;		 -> STR_195(8), STR_194(9), storedLight(5), STR_189(5), 
 21419 ;;		 -> STR_188(8), STR_187(8), STR_186(9), STR_162(16), 
 21420 ;;		 -> STR_161(17), STR_160(17), STR_159(4), STR_158(4), 
 21421 ;;		 -> STR_157(4), STR_156(4), STR_155(4), STR_154(4), 
 21422 ;;		 -> STR_153(4), STR_152(16), STR_151(17), STR_150(4), 
 21423 ;;		 -> STR_149(4), STR_148(4), STR_147(4), STR_146(4), 
 21424 ;;		 -> STR_145(4), STR_144(4), STR_143(4), STR_142(4), 
 21425 ;;		 -> STR_141(4), STR_140(4), STR_139(4), STR_138(4), 
 21426 ;;		 -> STR_137(16), STR_136(12), STR_135(17), STR_134(16), 
 21427 ;;		 -> STR_133(16), STR_132(16), STR_131(15), STR_130(15), 
 21428 ;;		 -> STR_129(16), STR_128(4), STR_127(3), STR_126(3), 
 21429 ;;		 -> STR_125(3), STR_124(3), STR_123(2), STR_122(5), 
 21430 ;;		 -> STR_121(7), STR_120(17), STR_119(17), STR_118(2), 
 21431 ;;		 -> STR_117(7), STR_116(7), STR_115(16), STR_114(16), 
 21432 ;;		 -> STR_113(15), STR_112(15), STR_111(17), STR_110(16), 
 21433 ;;		 -> STR_109(17), STR_108(17), STR_107(7), STR_106(10), 
 21434 ;;		 -> STR_105(17), STR_104(16), STR_103(16), STR_102(16), 
 21435 ;;		 -> STR_101(16), STR_100(17), STR_99(17), STR_98(16), 
 21436 ;;		 -> STR_96(19), STR_94(17), STR_92(17), STR_91(17), 
 21437 ;;		 -> responseData(32), responsePortNum(3), STR_88(13), STR_87(12), 
 21438 ;;		 -> STR_86(12), STR_83(18), STR_82(13), STR_81(17), 
 21439 ;;		 -> STR_80(16), STR_79(17), STR_78(17), STR_77(16), 
 21440 ;;		 -> STR_76(17), STR_75(17), STR_73(13), STR_72(12), 
 21441 ;;		 -> STR_71(17), STR_65(7), STR_64(10), STR_62(11), 
 21442 ;;		 -> STR_61(11), STR_56(9), STR_55(11), STR_51(11), 
 21443 ;;		 -> STR_50(10), STR_47(9), STR_46(11), STR_42(17), 
 21444 ;;		 -> STR_40(17), STR_38(17), STR_37(17), STR_36(17), 
 21445 ;;		 -> STR_34(17), STR_33(17), STR_32(17), moduleResonseBuffer(64), 
 21446 ;;		 -> STR_29(17), STR_28(17), STR_27(17), STR_26(17), 
 21447 ;;		 -> STR_25(9), STR_24(10), STR_23(5), STR_20(9), 
 21448 ;;		 -> STR_19(8), STR_18(8), STR_17(9), STR_16(10), 
 21449 ;;		 -> STR_15(11), STR_14(13), STR_13(13), STR_12(13), 
 21450 ;;		 -> STR_11(12), STR_10(13), STR_9(9), STR_8(12), 
 21451 ;;		 -> STR_7(16), STR_6(2), STR_5(2), STR_4(9), 
 21452 ;;		 -> STR_3(15), STR_2(15), STR_1(15), 
 21453 ;;  station_dot     1   19[BANK0 ] unsigned char 
 21454 ;;  start_page      1   20[BANK0 ] unsigned char 
 21455 ;; Auto vars:     Size  Location     Type
 21456 ;;  index           1   21[BANK0 ] unsigned char 
 21457 ;; Return value:  Size  Location     Type
 21458 ;;		None               void
 21459 ;; Registers used:
 21460 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21461 ;; Tracked objects:
 21462 ;;		On entry : 0/0
 21463 ;;		On exit  : 0/0
 21464 ;;		Unchanged: 0/0
 21465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21466 ;;      Params:         0       4       0       0       0       0       0       0       0
 21467 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21468 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21469 ;;      Totals:         0       5       0       0       0       0       0       0       0
 21470 ;;Total ram usage:        5 bytes
 21471 ;; Hardware stack levels used:    1
 21472 ;; Hardware stack levels required when called:   14
 21473 ;; This function calls:
 21474 ;;		_oled_putChar
 21475 ;; This function is called by:
 21476 ;;		_main
 21477 ;;		_test_oled
 21478 ;;		_test_switch
 21479 ;;		_test_comms
 21480 ;;		_test_leds
 21481 ;;		_moteHandler
 21482 ;;		_moteJoiningProcess
 21483 ;;		_moteRunningProcess
 21484 ;;		_moteApp_testSensors
 21485 ;;		_USBapp_Handler
 21486 ;;		_oled_putUint8
 21487 ;;		_oled_putint8
 21488 ;;		_test_adc
 21489 ;;		_test_rf
 21490 ;;		_oled_putUint16
 21491 ;; This function uses a non-reentrant model
 21492 ;;
 21493                           
 21494                           	psect	text69
 21495  005E92                     __ptext69:
 21496                           	opt stack 0
 21497  005E92                     _oled_putString:
 21498                           	opt stack 14
 21499                           
 21500                           ;SSD1306oLED.c: 333: uint8_t index;
 21501                           ;SSD1306oLED.c: 334: for(index = station_dot; index < 16; index++)
 21502                           
 21503                           ; BSR set to: 0
 21504                           ;incstack = 0
 21505  005E92  C073  F075         	movff	oled_putString@station_dot,oled_putString@index
 21506  005E96                     l12038:
 21507  005E96  0E0F               	movlw	15
 21508  005E98  0100               	movlb	0	; () banked
 21509  005E9A  6575               	cpfsgt	oled_putString@index& (0+255),b
 21510  005E9C  D001               	goto	l12042
 21511  005E9E  0012               	return	
 21512  005EA0                     l12042:
 21513                           
 21514                           ; BSR set to: 0
 21515                           ;SSD1306oLED.c: 335: {
 21516                           ;SSD1306oLED.c: 336: if (*string != 0)
 21517  005EA0  C071  FFF6         	movff	oled_putString@string,tblptrl
 21518  005EA4  C072  FFF7         	movff	oled_putString@string+1,tblptrh
 21519  005EA8  6AF8               	clrf	tblptru,c
 21520  005EAA  0E07               	movlw	(high __ramtop+-1)
 21521  005EAC  64F7               	cpfsgt	tblptrh,c
 21522  005EAE  D003               	bra	u10827
 21523  005EB0  0008               	tblrd		*
 21524  005EB2  50F5               	movf	tablat,w,c
 21525  005EB4  D005               	bra	u10820
 21526  005EB6                     u10827:
 21527  005EB6  CFF6 FFE9          	movff	tblptrl,fsr0l
 21528  005EBA  CFF7 FFEA          	movff	tblptrh,fsr0h
 21529  005EBE  50EF               	movf	indf0,w,c
 21530  005EC0                     u10820:
 21531  005EC0  0900               	iorlw	0
 21532  005EC2  B4D8               	btfsc	status,2,c
 21533  005EC4  0012               	return	
 21534                           
 21535                           ;SSD1306oLED.c: 337: {
 21536                           ;SSD1306oLED.c: 338: oled_putChar(*string, index, start_page);
 21537  005EC6  C075  F062         	movff	oled_putString@index,oled_putChar@station_dot
 21538  005ECA  C074  F063         	movff	oled_putString@start_page,oled_putChar@start_page
 21539  005ECE  C071  FFF6         	movff	oled_putString@string,tblptrl
 21540  005ED2  C072  FFF7         	movff	oled_putString@string+1,tblptrh
 21541  005ED6  6AF8               	clrf	tblptru,c
 21542  005ED8  0E07               	movlw	(high __ramtop+-1)
 21543  005EDA  64F7               	cpfsgt	tblptrh,c
 21544  005EDC  D003               	bra	u10847
 21545  005EDE  0008               	tblrd		*
 21546  005EE0  50F5               	movf	tablat,w,c
 21547  005EE2  D005               	bra	u10840
 21548  005EE4                     u10847:
 21549  005EE4  CFF6 FFE9          	movff	tblptrl,fsr0l
 21550  005EE8  CFF7 FFEA          	movff	tblptrh,fsr0h
 21551  005EEC  50EF               	movf	indf0,w,c
 21552  005EEE                     u10840:
 21553  005EEE  EC48  F02A         	call	_oled_putChar
 21554                           
 21555                           ;SSD1306oLED.c: 339: *string++;
 21556  005EF2  0100               	movlb	0	; () banked
 21557  005EF4  4B71               	infsnz	oled_putString@string& (0+255),f,b
 21558  005EF6  2B72               	incf	(oled_putString@string+1)& (0+255),f,b
 21559                           
 21560                           ; BSR set to: 0
 21561                           
 21562                           ; BSR set to: 0
 21563                           
 21564                           ; BSR set to: 0
 21565                           ;SSD1306oLED.c: 341: else
 21566                           ;SSD1306oLED.c: 342: {
 21567                           ;SSD1306oLED.c: 343: break;
 21568                           
 21569                           ;SSD1306oLED.c: 340: }
 21570  005EF8  0100               	movlb	0	; () banked
 21571  005EFA  2B75               	incf	oled_putString@index& (0+255),f,b
 21572  005EFC  D7CC               	goto	l12038
 21573  005EFE                     __end_of_oled_putString:
 21574                           	opt stack 0
 21575                           tblptru	equ	0xFF8
 21576                           tblptrh	equ	0xFF7
 21577                           tblptrl	equ	0xFF6
 21578                           tablat	equ	0xFF5
 21579                           prodh	equ	0xFF4
 21580                           prodl	equ	0xFF3
 21581                           intcon	equ	0xFF2
 21582                           intcon3	equ	0xFF0
 21583                           indf0	equ	0xFEF
 21584                           postinc0	equ	0xFEE
 21585                           fsr0h	equ	0xFEA
 21586                           fsr0l	equ	0xFE9
 21587                           wreg	equ	0xFE8
 21588                           indf1	equ	0xFE7
 21589                           postdec1	equ	0xFE5
 21590                           fsr1h	equ	0xFE2
 21591                           fsr1l	equ	0xFE1
 21592                           indf2	equ	0xFDF
 21593                           fsr2h	equ	0xFDA
 21594                           fsr2l	equ	0xFD9
 21595                           status	equ	0xFD8
 21596                           
 21597 ;; *************** function _oled_clear *****************
 21598 ;; Defined at:
 21599 ;;		line 348 in file "../Includes/Drivers/SSD1306oLED.c"
 21600 ;; Parameters:    Size  Location     Type
 21601 ;;		None
 21602 ;; Auto vars:     Size  Location     Type
 21603 ;;		None
 21604 ;; Return value:  Size  Location     Type
 21605 ;;		None               void
 21606 ;; Registers used:
 21607 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21608 ;; Tracked objects:
 21609 ;;		On entry : 0/0
 21610 ;;		On exit  : 0/0
 21611 ;;		Unchanged: 0/0
 21612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21613 ;;      Params:         0       0       0       0       0       0       0       0       0
 21614 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21615 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21616 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21617 ;;Total ram usage:        0 bytes
 21618 ;; Hardware stack levels used:    1
 21619 ;; Hardware stack levels required when called:   15
 21620 ;; This function calls:
 21621 ;;		_oled_clearRow
 21622 ;; This function is called by:
 21623 ;;		_main
 21624 ;;		_test_powerup
 21625 ;;		_test_oled
 21626 ;;		_test_switch
 21627 ;;		_moteHandler
 21628 ;;		_moteJoiningProcess
 21629 ;;		_moteRunningProcess
 21630 ;;		_moteApp_testSensors
 21631 ;;		_USBapp_Handler
 21632 ;;		_oled_init
 21633 ;;		_test_adc
 21634 ;;		_test_rf
 21635 ;; This function uses a non-reentrant model
 21636 ;;
 21637                           
 21638                           	psect	text70
 21639  006956                     __ptext70:
 21640                           	opt stack 0
 21641  006956                     _oled_clear:
 21642                           	opt stack 13
 21643                           
 21644                           ;SSD1306oLED.c: 350: oled_clearRow(0);
 21645                           
 21646                           ;incstack = 0
 21647  006956  0E00               	movlw	0
 21648  006958  EC34  F034         	call	_oled_clearRow
 21649                           
 21650                           ;SSD1306oLED.c: 351: oled_clearRow(1);
 21651  00695C  0E01               	movlw	1
 21652  00695E  EC34  F034         	call	_oled_clearRow
 21653                           
 21654                           ;SSD1306oLED.c: 352: oled_clearRow(2);
 21655  006962  0E02               	movlw	2
 21656  006964  EC34  F034         	call	_oled_clearRow
 21657                           
 21658                           ;SSD1306oLED.c: 353: oled_clearRow(3);
 21659  006968  0E03               	movlw	3
 21660  00696A  EC34  F034         	call	_oled_clearRow
 21661  00696E  0012               	return		;funcret
 21662  006970                     __end_of_oled_clear:
 21663                           	opt stack 0
 21664                           tblptru	equ	0xFF8
 21665                           tblptrh	equ	0xFF7
 21666                           tblptrl	equ	0xFF6
 21667                           tablat	equ	0xFF5
 21668                           prodh	equ	0xFF4
 21669                           prodl	equ	0xFF3
 21670                           intcon	equ	0xFF2
 21671                           intcon3	equ	0xFF0
 21672                           indf0	equ	0xFEF
 21673                           postinc0	equ	0xFEE
 21674                           fsr0h	equ	0xFEA
 21675                           fsr0l	equ	0xFE9
 21676                           wreg	equ	0xFE8
 21677                           indf1	equ	0xFE7
 21678                           postdec1	equ	0xFE5
 21679                           fsr1h	equ	0xFE2
 21680                           fsr1l	equ	0xFE1
 21681                           indf2	equ	0xFDF
 21682                           fsr2h	equ	0xFDA
 21683                           fsr2l	equ	0xFD9
 21684                           status	equ	0xFD8
 21685                           
 21686 ;; *************** function _oled_clearRow *****************
 21687 ;; Defined at:
 21688 ;;		line 356 in file "../Includes/Drivers/SSD1306oLED.c"
 21689 ;; Parameters:    Size  Location     Type
 21690 ;;  page            1    wreg     unsigned char 
 21691 ;; Auto vars:     Size  Location     Type
 21692 ;;  page            1   12[BANK0 ] unsigned char 
 21693 ;;  index           1   13[BANK0 ] unsigned char 
 21694 ;; Return value:  Size  Location     Type
 21695 ;;		None               void
 21696 ;; Registers used:
 21697 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21698 ;; Tracked objects:
 21699 ;;		On entry : 0/0
 21700 ;;		On exit  : 0/0
 21701 ;;		Unchanged: 0/0
 21702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21703 ;;      Params:         0       0       0       0       0       0       0       0       0
 21704 ;;      Locals:         0       2       0       0       0       0       0       0       0
 21705 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21706 ;;      Totals:         0       2       0       0       0       0       0       0       0
 21707 ;;Total ram usage:        2 bytes
 21708 ;; Hardware stack levels used:    1
 21709 ;; Hardware stack levels required when called:   14
 21710 ;; This function calls:
 21711 ;;		_oled_putChar
 21712 ;; This function is called by:
 21713 ;;		_oled_clear
 21714 ;; This function uses a non-reentrant model
 21715 ;;
 21716                           
 21717                           	psect	text71
 21718  006868                     __ptext71:
 21719                           	opt stack 0
 21720  006868                     _oled_clearRow:
 21721                           	opt stack 13
 21722                           
 21723                           ;incstack = 0
 21724                           ;oled_clearRow@page stored from wreg
 21725  006868  0100               	movlb	0	; () banked
 21726  00686A  6F6C               	movwf	oled_clearRow@page& (0+255),b
 21727                           
 21728                           ;SSD1306oLED.c: 358: uint8_t index;
 21729                           ;SSD1306oLED.c: 360: for(index = 0; index < 16; index++)
 21730  00686C  0E00               	movlw	0
 21731  00686E  0100               	movlb	0	; () banked
 21732  006870  6F6D               	movwf	oled_clearRow@index& (0+255),b
 21733  006872                     l11874:
 21734                           
 21735                           ; BSR set to: 0
 21736  006872  0E0F               	movlw	15
 21737  006874  0100               	movlb	0	; () banked
 21738  006876  656D               	cpfsgt	oled_clearRow@index& (0+255),b
 21739  006878  D001               	goto	l11878
 21740  00687A  0012               	return	
 21741  00687C                     l11878:
 21742                           
 21743                           ; BSR set to: 0
 21744                           ;SSD1306oLED.c: 361: {
 21745                           ;SSD1306oLED.c: 362: oled_putChar( ' ', index, page);
 21746  00687C  C06D  F062         	movff	oled_clearRow@index,oled_putChar@station_dot
 21747  006880  C06C  F063         	movff	oled_clearRow@page,oled_putChar@start_page
 21748  006884  0E20               	movlw	32
 21749  006886  EC48  F02A         	call	_oled_putChar
 21750  00688A  0100               	movlb	0	; () banked
 21751  00688C  2B6D               	incf	oled_clearRow@index& (0+255),f,b
 21752  00688E  D7F1               	goto	l11874
 21753  006890                     __end_of_oled_clearRow:
 21754                           	opt stack 0
 21755                           tblptru	equ	0xFF8
 21756                           tblptrh	equ	0xFF7
 21757                           tblptrl	equ	0xFF6
 21758                           tablat	equ	0xFF5
 21759                           prodh	equ	0xFF4
 21760                           prodl	equ	0xFF3
 21761                           intcon	equ	0xFF2
 21762                           intcon3	equ	0xFF0
 21763                           indf0	equ	0xFEF
 21764                           postinc0	equ	0xFEE
 21765                           fsr0h	equ	0xFEA
 21766                           fsr0l	equ	0xFE9
 21767                           wreg	equ	0xFE8
 21768                           indf1	equ	0xFE7
 21769                           postdec1	equ	0xFE5
 21770                           fsr1h	equ	0xFE2
 21771                           fsr1l	equ	0xFE1
 21772                           indf2	equ	0xFDF
 21773                           fsr2h	equ	0xFDA
 21774                           fsr2l	equ	0xFD9
 21775                           status	equ	0xFD8
 21776                           
 21777 ;; *************** function _oled_putChar *****************
 21778 ;; Defined at:
 21779 ;;		line 318 in file "../Includes/Drivers/SSD1306oLED.c"
 21780 ;; Parameters:    Size  Location     Type
 21781 ;;  k               1    wreg     unsigned char 
 21782 ;;  station_dot     1    2[BANK0 ] unsigned char 
 21783 ;;  start_page      1    3[BANK0 ] unsigned char 
 21784 ;; Auto vars:     Size  Location     Type
 21785 ;;  k               1   10[BANK0 ] unsigned char 
 21786 ;;  index           1   11[BANK0 ] unsigned char 
 21787 ;; Return value:  Size  Location     Type
 21788 ;;		None               void
 21789 ;; Registers used:
 21790 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21791 ;; Tracked objects:
 21792 ;;		On entry : 0/0
 21793 ;;		On exit  : 0/0
 21794 ;;		Unchanged: 0/0
 21795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21796 ;;      Params:         0       2       0       0       0       0       0       0       0
 21797 ;;      Locals:         0       2       0       0       0       0       0       0       0
 21798 ;;      Temps:          0       6       0       0       0       0       0       0       0
 21799 ;;      Totals:         0      10       0       0       0       0       0       0       0
 21800 ;;Total ram usage:       10 bytes
 21801 ;; Hardware stack levels used:    1
 21802 ;; Hardware stack levels required when called:   13
 21803 ;; This function calls:
 21804 ;;		_Set_Column_Address
 21805 ;;		_Set_Page_Address
 21806 ;;		_oled_writeData
 21807 ;; This function is called by:
 21808 ;;		_moteApp_testSensors
 21809 ;;		_oled_putString
 21810 ;;		_oled_clearRow
 21811 ;;		_test_adc
 21812 ;; This function uses a non-reentrant model
 21813 ;;
 21814                           
 21815                           	psect	text72
 21816  005490                     __ptext72:
 21817                           	opt stack 0
 21818  005490                     _oled_putChar:
 21819                           	opt stack 14
 21820                           
 21821                           ; BSR set to: 0
 21822                           ;incstack = 0
 21823                           ;oled_putChar@k stored from wreg
 21824  005490  0100               	movlb	0	; () banked
 21825  005492  6F6A               	movwf	oled_putChar@k& (0+255),b
 21826                           
 21827                           ;SSD1306oLED.c: 320: uint8_t index;
 21828                           ;SSD1306oLED.c: 322: Set_Page_Address(start_page);
 21829  005494  0100               	movlb	0	; () banked
 21830  005496  5163               	movf	oled_putChar@start_page& (0+255),w,b
 21831  005498  ECC5  F034         	call	_Set_Page_Address
 21832                           
 21833                           ;SSD1306oLED.c: 323: Set_Column_Address(0x00 + station_dot * 8 + 4);
 21834  00549C  0100               	movlb	0	; () banked
 21835  00549E  5162               	movf	oled_putChar@station_dot& (0+255),w,b
 21836  0054A0  0D08               	mullw	8
 21837  0054A2  50F3               	movf	prodl,w,c
 21838  0054A4  0F04               	addlw	4
 21839  0054A6  EC9D  F034         	call	_Set_Column_Address
 21840                           
 21841                           ;SSD1306oLED.c: 325: for(index = 0; index < 8; index++)
 21842  0054AA  0E00               	movlw	0
 21843  0054AC  0100               	movlb	0	; () banked
 21844  0054AE  6F6B               	movwf	oled_putChar@index& (0+255),b
 21845  0054B0                     l11822:
 21846                           
 21847                           ; BSR set to: 0
 21848  0054B0  0E07               	movlw	7
 21849  0054B2  0100               	movlb	0	; () banked
 21850  0054B4  656B               	cpfsgt	oled_putChar@index& (0+255),b
 21851  0054B6  D001               	goto	l11826
 21852  0054B8  0012               	return	
 21853  0054BA                     l11826:
 21854                           
 21855                           ; BSR set to: 0
 21856                           ;SSD1306oLED.c: 326: {
 21857                           ;SSD1306oLED.c: 327: oled_writeData(*(selectedFont + 8 * (k - 0x20) + index));
 21858  0054BA  0100               	movlb	0	; () banked
 21859  0054BC  516B               	movf	oled_putChar@index& (0+255),w,b
 21860  0054BE  0D01               	mullw	1
 21861  0054C0  0E00               	movlw	0
 21862  0054C2  0100               	movlb	0	; () banked
 21863  0054C4  6F64               	movwf	??_oled_putChar& (0+255),b
 21864  0054C6  0EFF               	movlw	255
 21865  0054C8  0100               	movlb	0	; () banked
 21866  0054CA  6F65               	movwf	(??_oled_putChar+1)& (0+255),b
 21867  0054CC  0100               	movlb	0	; () banked
 21868  0054CE  516A               	movf	oled_putChar@k& (0+255),w,b
 21869  0054D0  0100               	movlb	0	; () banked
 21870  0054D2  6F66               	movwf	(??_oled_putChar+2)& (0+255),b
 21871  0054D4  6B67               	clrf	(??_oled_putChar+3)& (0+255),b
 21872  0054D6  0100               	movlb	0	; () banked
 21873  0054D8  90D8               	bcf	status,0,c
 21874  0054DA  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 21875  0054DC  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 21876  0054DE  0100               	movlb	0	; () banked
 21877  0054E0  90D8               	bcf	status,0,c
 21878  0054E2  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 21879  0054E4  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 21880  0054E6  0100               	movlb	0	; () banked
 21881  0054E8  90D8               	bcf	status,0,c
 21882  0054EA  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 21883  0054EC  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 21884  0054EE  0100               	movlb	0	; () banked
 21885  0054F0  5164               	movf	??_oled_putChar& (0+255),w,b
 21886  0054F2  0100               	movlb	0	; () banked
 21887  0054F4  2766               	addwf	(??_oled_putChar+2)& (0+255),f,b
 21888  0054F6  0100               	movlb	0	; () banked
 21889  0054F8  5165               	movf	(??_oled_putChar+1)& (0+255),w,b
 21890  0054FA  0100               	movlb	0	; () banked
 21891  0054FC  2367               	addwfc	(??_oled_putChar+3)& (0+255),f,b
 21892  0054FE  C1F1  F068         	movff	_selectedFont,??_oled_putChar+4
 21893  005502  C1F2  F069         	movff	_selectedFont+1,??_oled_putChar+5
 21894  005506  0100               	movlb	0	; () banked
 21895  005508  5166               	movf	(??_oled_putChar+2)& (0+255),w,b
 21896  00550A  0100               	movlb	0	; () banked
 21897  00550C  2768               	addwf	(??_oled_putChar+4)& (0+255),f,b
 21898  00550E  0100               	movlb	0	; () banked
 21899  005510  5167               	movf	(??_oled_putChar+3)& (0+255),w,b
 21900  005512  0100               	movlb	0	; () banked
 21901  005514  2369               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 21902  005516  50F3               	movf	prodl,w,c
 21903  005518  0100               	movlb	0	; () banked
 21904  00551A  2768               	addwf	(??_oled_putChar+4)& (0+255),f,b
 21905  00551C  50F4               	movf	prodh,w,c
 21906  00551E  0100               	movlb	0	; () banked
 21907  005520  2369               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 21908  005522  C068  FFF6         	movff	??_oled_putChar+4,tblptrl
 21909  005526  C069  FFF7         	movff	??_oled_putChar+5,tblptrh
 21910  00552A                     	if	0	;tblptru may be non-zero
 21911  00552A                     	endif
 21912  00552A                     	if	0	;tblptru may be non-zero
 21913  00552A                     	endif
 21914  00552A  0008               	tblrd		*
 21915  00552C  50F5               	movf	tablat,w,c
 21916  00552E  ECDC  F034         	call	_oled_writeData
 21917  005532  0100               	movlb	0	; () banked
 21918  005534  2B6B               	incf	oled_putChar@index& (0+255),f,b
 21919  005536  D7BC               	goto	l11822
 21920  005538                     __end_of_oled_putChar:
 21921                           	opt stack 0
 21922                           tblptru	equ	0xFF8
 21923                           tblptrh	equ	0xFF7
 21924                           tblptrl	equ	0xFF6
 21925                           tablat	equ	0xFF5
 21926                           prodh	equ	0xFF4
 21927                           prodl	equ	0xFF3
 21928                           intcon	equ	0xFF2
 21929                           intcon3	equ	0xFF0
 21930                           indf0	equ	0xFEF
 21931                           postinc0	equ	0xFEE
 21932                           fsr0h	equ	0xFEA
 21933                           fsr0l	equ	0xFE9
 21934                           wreg	equ	0xFE8
 21935                           indf1	equ	0xFE7
 21936                           postdec1	equ	0xFE5
 21937                           fsr1h	equ	0xFE2
 21938                           fsr1l	equ	0xFE1
 21939                           indf2	equ	0xFDF
 21940                           fsr2h	equ	0xFDA
 21941                           fsr2l	equ	0xFD9
 21942                           status	equ	0xFD8
 21943                           
 21944 ;; *************** function _oled_writeData *****************
 21945 ;; Defined at:
 21946 ;;		line 443 in file "../Includes/Drivers/SSD1306oLED.c"
 21947 ;; Parameters:    Size  Location     Type
 21948 ;;  data            1    wreg     unsigned char 
 21949 ;; Auto vars:     Size  Location     Type
 21950 ;;  data            1    0[BANK0 ] unsigned char 
 21951 ;; Return value:  Size  Location     Type
 21952 ;;		None               void
 21953 ;; Registers used:
 21954 ;;		wreg
 21955 ;; Tracked objects:
 21956 ;;		On entry : 0/0
 21957 ;;		On exit  : 0/0
 21958 ;;		Unchanged: 0/0
 21959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21960 ;;      Params:         0       0       0       0       0       0       0       0       0
 21961 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21962 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21963 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21964 ;;Total ram usage:        1 bytes
 21965 ;; Hardware stack levels used:    1
 21966 ;; Hardware stack levels required when called:   11
 21967 ;; This function calls:
 21968 ;;		Nothing
 21969 ;; This function is called by:
 21970 ;;		_oled_putChar
 21971 ;; This function uses a non-reentrant model
 21972 ;;
 21973                           
 21974                           	psect	text73
 21975  0069B8                     __ptext73:
 21976                           	opt stack 0
 21977  0069B8                     _oled_writeData:
 21978                           	opt stack 15
 21979                           
 21980                           ; BSR set to: 0
 21981                           ;incstack = 0
 21982                           ;oled_writeData@data stored from wreg
 21983  0069B8  0100               	movlb	0	; () banked
 21984  0069BA  6F60               	movwf	oled_writeData@data& (0+255),b
 21985                           
 21986                           ;SSD1306oLED.c: 445: LATBbits.LATB4=0;
 21987  0069BC  988A               	bcf	3978,4,c	;volatile
 21988                           
 21989                           ;SSD1306oLED.c: 446: LATCbits.LATC0=1;
 21990  0069BE  808B               	bsf	3979,0,c	;volatile
 21991                           
 21992                           ;SSD1306oLED.c: 447: LATD=data;
 21993  0069C0  C060  FF8C         	movff	oled_writeData@data,3980	;volatile
 21994                           
 21995                           ;SSD1306oLED.c: 448: LATCbits.LATC1=0;
 21996  0069C4  928B               	bcf	3979,1,c	;volatile
 21997                           
 21998                           ;SSD1306oLED.c: 449: __nop();
 21999  0069C6  F000               	nop	
 22000                           
 22001                           ;SSD1306oLED.c: 450: LATCbits.LATC1=1;
 22002  0069C8  828B               	bsf	3979,1,c	;volatile
 22003                           
 22004                           ;SSD1306oLED.c: 451: LATBbits.LATB4=1;
 22005  0069CA  888A               	bsf	3978,4,c	;volatile
 22006  0069CC  0012               	return	
 22007  0069CE                     __end_of_oled_writeData:
 22008                           	opt stack 0
 22009                           tblptru	equ	0xFF8
 22010                           tblptrh	equ	0xFF7
 22011                           tblptrl	equ	0xFF6
 22012                           tablat	equ	0xFF5
 22013                           prodh	equ	0xFF4
 22014                           prodl	equ	0xFF3
 22015                           intcon	equ	0xFF2
 22016                           intcon3	equ	0xFF0
 22017                           indf0	equ	0xFEF
 22018                           postinc0	equ	0xFEE
 22019                           fsr0h	equ	0xFEA
 22020                           fsr0l	equ	0xFE9
 22021                           wreg	equ	0xFE8
 22022                           indf1	equ	0xFE7
 22023                           postdec1	equ	0xFE5
 22024                           fsr1h	equ	0xFE2
 22025                           fsr1l	equ	0xFE1
 22026                           indf2	equ	0xFDF
 22027                           fsr2h	equ	0xFDA
 22028                           fsr2l	equ	0xFD9
 22029                           status	equ	0xFD8
 22030                           
 22031 ;; *************** function _Set_Page_Address *****************
 22032 ;; Defined at:
 22033 ;;		line 241 in file "../Includes/Drivers/SSD1306oLED.c"
 22034 ;; Parameters:    Size  Location     Type
 22035 ;;  address         1    wreg     unsigned char 
 22036 ;; Auto vars:     Size  Location     Type
 22037 ;;  address         1    1[BANK0 ] unsigned char 
 22038 ;; Return value:  Size  Location     Type
 22039 ;;		None               void
 22040 ;; Registers used:
 22041 ;;		wreg, status,2, status,0, cstack
 22042 ;; Tracked objects:
 22043 ;;		On entry : 0/0
 22044 ;;		On exit  : 0/0
 22045 ;;		Unchanged: 0/0
 22046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22047 ;;      Params:         0       0       0       0       0       0       0       0       0
 22048 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22049 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22050 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22051 ;;Total ram usage:        1 bytes
 22052 ;; Hardware stack levels used:    1
 22053 ;; Hardware stack levels required when called:   12
 22054 ;; This function calls:
 22055 ;;		_oled_writeCommand
 22056 ;; This function is called by:
 22057 ;;		_oled_putChar
 22058 ;; This function uses a non-reentrant model
 22059 ;;
 22060                           
 22061                           	psect	text74
 22062  00698A                     __ptext74:
 22063                           	opt stack 0
 22064  00698A                     _Set_Page_Address:
 22065                           	opt stack 14
 22066                           
 22067                           ;incstack = 0
 22068                           ;Set_Page_Address@address stored from wreg
 22069  00698A  0100               	movlb	0	; () banked
 22070  00698C  6F61               	movwf	Set_Page_Address@address& (0+255),b
 22071                           
 22072                           ;SSD1306oLED.c: 243: address = 0xb0 | address;
 22073  00698E  0100               	movlb	0	; () banked
 22074  006990  5161               	movf	Set_Page_Address@address& (0+255),w,b
 22075  006992  09B0               	iorlw	176
 22076  006994  0100               	movlb	0	; () banked
 22077  006996  6F61               	movwf	Set_Page_Address@address& (0+255),b
 22078                           
 22079                           ; BSR set to: 0
 22080                           ;SSD1306oLED.c: 244: oled_writeCommand(address);
 22081  006998  0100               	movlb	0	; () banked
 22082  00699A  5161               	movf	Set_Page_Address@address& (0+255),w,b
 22083  00699C  ECE7  F034         	call	_oled_writeCommand
 22084  0069A0  0012               	return	
 22085  0069A2                     __end_of_Set_Page_Address:
 22086                           	opt stack 0
 22087                           tblptru	equ	0xFF8
 22088                           tblptrh	equ	0xFF7
 22089                           tblptrl	equ	0xFF6
 22090                           tablat	equ	0xFF5
 22091                           prodh	equ	0xFF4
 22092                           prodl	equ	0xFF3
 22093                           intcon	equ	0xFF2
 22094                           intcon3	equ	0xFF0
 22095                           indf0	equ	0xFEF
 22096                           postinc0	equ	0xFEE
 22097                           fsr0h	equ	0xFEA
 22098                           fsr0l	equ	0xFE9
 22099                           wreg	equ	0xFE8
 22100                           indf1	equ	0xFE7
 22101                           postdec1	equ	0xFE5
 22102                           fsr1h	equ	0xFE2
 22103                           fsr1l	equ	0xFE1
 22104                           indf2	equ	0xFDF
 22105                           fsr2h	equ	0xFDA
 22106                           fsr2l	equ	0xFD9
 22107                           status	equ	0xFD8
 22108                           
 22109 ;; *************** function _Set_Column_Address *****************
 22110 ;; Defined at:
 22111 ;;		line 249 in file "../Includes/Drivers/SSD1306oLED.c"
 22112 ;; Parameters:    Size  Location     Type
 22113 ;;  address         1    wreg     unsigned char 
 22114 ;; Auto vars:     Size  Location     Type
 22115 ;;  address         1    1[BANK0 ] unsigned char 
 22116 ;; Return value:  Size  Location     Type
 22117 ;;		None               void
 22118 ;; Registers used:
 22119 ;;		wreg, status,2, status,0, cstack
 22120 ;; Tracked objects:
 22121 ;;		On entry : 0/0
 22122 ;;		On exit  : 0/0
 22123 ;;		Unchanged: 0/0
 22124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22125 ;;      Params:         0       0       0       0       0       0       0       0       0
 22126 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22127 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22128 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22129 ;;Total ram usage:        1 bytes
 22130 ;; Hardware stack levels used:    1
 22131 ;; Hardware stack levels required when called:   12
 22132 ;; This function calls:
 22133 ;;		_oled_writeCommand
 22134 ;; This function is called by:
 22135 ;;		_oled_putChar
 22136 ;; This function uses a non-reentrant model
 22137 ;;
 22138                           
 22139                           	psect	text75
 22140  00693A                     __ptext75:
 22141                           	opt stack 0
 22142  00693A                     _Set_Column_Address:
 22143                           	opt stack 14
 22144                           
 22145                           ;incstack = 0
 22146                           ;Set_Column_Address@address stored from wreg
 22147  00693A  0100               	movlb	0	; () banked
 22148  00693C  6F61               	movwf	Set_Column_Address@address& (0+255),b
 22149                           
 22150                           ;SSD1306oLED.c: 251: oled_writeCommand((0x10|(address>>4)));
 22151  00693E  0100               	movlb	0	; () banked
 22152  006940  3961               	swapf	Set_Column_Address@address& (0+255),w,b
 22153  006942  0B0F               	andlw	15
 22154  006944  0910               	iorlw	16
 22155  006946  ECE7  F034         	call	_oled_writeCommand
 22156                           
 22157                           ;SSD1306oLED.c: 252: oled_writeCommand((0x0f&address));
 22158  00694A  0100               	movlb	0	; () banked
 22159  00694C  5161               	movf	Set_Column_Address@address& (0+255),w,b
 22160  00694E  0B0F               	andlw	15
 22161  006950  ECE7  F034         	call	_oled_writeCommand
 22162  006954  0012               	return	
 22163  006956                     __end_of_Set_Column_Address:
 22164                           	opt stack 0
 22165                           tblptru	equ	0xFF8
 22166                           tblptrh	equ	0xFF7
 22167                           tblptrl	equ	0xFF6
 22168                           tablat	equ	0xFF5
 22169                           prodh	equ	0xFF4
 22170                           prodl	equ	0xFF3
 22171                           intcon	equ	0xFF2
 22172                           intcon3	equ	0xFF0
 22173                           indf0	equ	0xFEF
 22174                           postinc0	equ	0xFEE
 22175                           fsr0h	equ	0xFEA
 22176                           fsr0l	equ	0xFE9
 22177                           wreg	equ	0xFE8
 22178                           indf1	equ	0xFE7
 22179                           postdec1	equ	0xFE5
 22180                           fsr1h	equ	0xFE2
 22181                           fsr1l	equ	0xFE1
 22182                           indf2	equ	0xFDF
 22183                           fsr2h	equ	0xFDA
 22184                           fsr2l	equ	0xFD9
 22185                           status	equ	0xFD8
 22186                           
 22187 ;; *************** function _oled_writeCommand *****************
 22188 ;; Defined at:
 22189 ;;		line 431 in file "../Includes/Drivers/SSD1306oLED.c"
 22190 ;; Parameters:    Size  Location     Type
 22191 ;;  command         1    wreg     unsigned char 
 22192 ;; Auto vars:     Size  Location     Type
 22193 ;;  command         1    0[BANK0 ] unsigned char 
 22194 ;; Return value:  Size  Location     Type
 22195 ;;		None               void
 22196 ;; Registers used:
 22197 ;;		wreg
 22198 ;; Tracked objects:
 22199 ;;		On entry : 0/0
 22200 ;;		On exit  : 0/0
 22201 ;;		Unchanged: 0/0
 22202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22203 ;;      Params:         0       0       0       0       0       0       0       0       0
 22204 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22205 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22206 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22207 ;;Total ram usage:        1 bytes
 22208 ;; Hardware stack levels used:    1
 22209 ;; Hardware stack levels required when called:   11
 22210 ;; This function calls:
 22211 ;;		Nothing
 22212 ;; This function is called by:
 22213 ;;		_Set_Page_Address
 22214 ;;		_Set_Column_Address
 22215 ;;		_oled_devInit
 22216 ;;		_oled_setDisplay
 22217 ;;		_oled_displayOff
 22218 ;;		_oled_setContrastControlRegister
 22219 ;;		_oled_initialDispayLine
 22220 ;;		_oled_powerControl
 22221 ;;		_oled_regulorResistorSelect
 22222 ;; This function uses a non-reentrant model
 22223 ;;
 22224                           
 22225                           	psect	text76
 22226  0069CE                     __ptext76:
 22227                           	opt stack 0
 22228  0069CE                     _oled_writeCommand:
 22229                           	opt stack 14
 22230                           
 22231                           ;incstack = 0
 22232                           ;oled_writeCommand@command stored from wreg
 22233  0069CE  0100               	movlb	0	; () banked
 22234  0069D0  6F60               	movwf	oled_writeCommand@command& (0+255),b
 22235                           
 22236                           ;SSD1306oLED.c: 433: LATBbits.LATB4=0;
 22237  0069D2  988A               	bcf	3978,4,c	;volatile
 22238                           
 22239                           ;SSD1306oLED.c: 434: LATCbits.LATC0=0;
 22240  0069D4  908B               	bcf	3979,0,c	;volatile
 22241                           
 22242                           ;SSD1306oLED.c: 435: LATD=command;
 22243  0069D6  C060  FF8C         	movff	oled_writeCommand@command,3980	;volatile
 22244                           
 22245                           ;SSD1306oLED.c: 436: LATCbits.LATC1=0;
 22246  0069DA  928B               	bcf	3979,1,c	;volatile
 22247                           
 22248                           ;SSD1306oLED.c: 437: __nop();
 22249  0069DC  F000               	nop	
 22250                           
 22251                           ;SSD1306oLED.c: 438: LATCbits.LATC1=1;
 22252  0069DE  828B               	bsf	3979,1,c	;volatile
 22253                           
 22254                           ;SSD1306oLED.c: 439: LATBbits.LATB4=1;
 22255  0069E0  888A               	bsf	3978,4,c	;volatile
 22256  0069E2  0012               	return	
 22257  0069E4                     __end_of_oled_writeCommand:
 22258                           	opt stack 0
 22259                           tblptru	equ	0xFF8
 22260                           tblptrh	equ	0xFF7
 22261                           tblptrl	equ	0xFF6
 22262                           tablat	equ	0xFF5
 22263                           prodh	equ	0xFF4
 22264                           prodl	equ	0xFF3
 22265                           intcon	equ	0xFF2
 22266                           intcon3	equ	0xFF0
 22267                           indf0	equ	0xFEF
 22268                           postinc0	equ	0xFEE
 22269                           fsr0h	equ	0xFEA
 22270                           fsr0l	equ	0xFE9
 22271                           wreg	equ	0xFE8
 22272                           indf1	equ	0xFE7
 22273                           postdec1	equ	0xFE5
 22274                           fsr1h	equ	0xFE2
 22275                           fsr1l	equ	0xFE1
 22276                           indf2	equ	0xFDF
 22277                           fsr2h	equ	0xFDA
 22278                           fsr2l	equ	0xFD9
 22279                           status	equ	0xFD8
 22280                           
 22281 ;; *************** function _USBapp_DeviceCdcEmulatorHandler *****************
 22282 ;; Defined at:
 22283 ;;		line 162 in file "../Includes/Board/USBapp.c"
 22284 ;; Parameters:    Size  Location     Type
 22285 ;;		None
 22286 ;; Auto vars:     Size  Location     Type
 22287 ;;		None
 22288 ;; Return value:  Size  Location     Type
 22289 ;;		None               void
 22290 ;; Registers used:
 22291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22292 ;; Tracked objects:
 22293 ;;		On entry : 0/0
 22294 ;;		On exit  : 0/0
 22295 ;;		Unchanged: 0/0
 22296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22297 ;;      Params:         0       0       0       0       0       0       0       0       0
 22298 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22299 ;;      Temps:          0       1       0       0       0       0       0       0       0
 22300 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22301 ;;Total ram usage:        1 bytes
 22302 ;; Hardware stack levels used:    1
 22303 ;; Hardware stack levels required when called:   13
 22304 ;; This function calls:
 22305 ;;		_CDCTxService
 22306 ;;		_EUSART_Read
 22307 ;;		_EUSART_Write
 22308 ;;		_MOTEapp_setResponseReady
 22309 ;;		_USBapp_getrxByteFlag
 22310 ;;		_getsUSBUSART
 22311 ;;		_putUSBUSART
 22312 ;; This function is called by:
 22313 ;;		_USBapp_Handler
 22314 ;; This function uses a non-reentrant model
 22315 ;;
 22316                           
 22317                           	psect	text77
 22318  004660                     __ptext77:
 22319                           	opt stack 0
 22320  004660                     _USBapp_DeviceCdcEmulatorHandler:
 22321                           	opt stack 16
 22322                           
 22323                           ;USBapp.c: 165: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 22324                           
 22325                           ;incstack = 0
 22326  004660  0E1F               	movlw	31
 22327  004662  0100               	movlb	0	; () banked
 22328  004664  65D2               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
 22329  004666  0012               	return	
 22330                           
 22331                           ; BSR set to: 0
 22332  004668  B260               	btfsc	3936,1,c	;volatile
 22333  00466A  0012               	return	
 22334                           
 22335                           ; BSR set to: 0
 22336                           ;USBapp.c: 168: if (RS232_Out_Data_Rdy == 0)
 22337                           
 22338                           ; BSR set to: 0
 22339                           
 22340                           ; BSR set to: 0
 22341                           ;USBapp.c: 166: return;
 22342  00466C  504C               	movf	_RS232_Out_Data_Rdy,w,c
 22343  00466E  A4D8               	btfss	status,2,c
 22344  004670  D013               	goto	l880
 22345                           
 22346                           ; BSR set to: 0
 22347                           ;USBapp.c: 169: {
 22348                           ;USBapp.c: 170: LastRS232Out = getsUSBUSART(USB_Buffer,64);
 22349  004672  0E80               	movlw	low _USB_Buffer
 22350  004674  0100               	movlb	0	; () banked
 22351  004676  6F67               	movwf	getsUSBUSART@buffer& (0+255),b
 22352  004678  0E02               	movlw	high _USB_Buffer
 22353  00467A  0100               	movlb	0	; () banked
 22354  00467C  6F68               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 22355  00467E  0E40               	movlw	64
 22356  004680  0100               	movlb	0	; () banked
 22357  004682  6F69               	movwf	getsUSBUSART@len& (0+255),b
 22358  004684  ECBB  F022         	call	_getsUSBUSART	;wreg free
 22359  004688  6E4A               	movwf	_LastRS232Out,c
 22360                           
 22361                           ;USBapp.c: 171: if(LastRS232Out > 0)
 22362  00468A  504A               	movf	_LastRS232Out,w,c
 22363  00468C  B4D8               	btfsc	status,2,c
 22364  00468E  D004               	goto	l880
 22365                           
 22366                           ;USBapp.c: 172: {
 22367                           ;USBapp.c: 173: RS232_Out_Data_Rdy = 1;
 22368  004690  0E01               	movlw	1
 22369  004692  6E4C               	movwf	_RS232_Out_Data_Rdy,c
 22370                           
 22371                           ;USBapp.c: 174: RS232cp = 0;
 22372  004694  0E00               	movlw	0
 22373  004696  6E4D               	movwf	_RS232cp,c
 22374  004698                     l880:
 22375                           
 22376                           ;USBapp.c: 175: }
 22377                           ;USBapp.c: 176: }
 22378                           ;USBapp.c: 179: if(RS232_Out_Data_Rdy && TXSTAbits.TRMT)
 22379  004698  504C               	movf	_RS232_Out_Data_Rdy,w,c
 22380  00469A  A4D8               	btfss	status,2,c
 22381  00469C  A2AC               	btfss	4012,1,c	;volatile
 22382  00469E  D012               	goto	l882
 22383                           
 22384                           ;USBapp.c: 180: {
 22385                           ;USBapp.c: 182: EUSART_Write(USB_Buffer[RS232cp]);
 22386  0046A0  504D               	movf	_RS232cp,w,c
 22387  0046A2  0D01               	mullw	1
 22388  0046A4  0E80               	movlw	low _USB_Buffer
 22389  0046A6  24F3               	addwf	prodl,w,c
 22390  0046A8  6ED9               	movwf	fsr2l,c
 22391  0046AA  0E02               	movlw	high _USB_Buffer
 22392  0046AC  20F4               	addwfc	prodh,w,c
 22393  0046AE  6EDA               	movwf	fsr2h,c
 22394  0046B0  50DF               	movf	indf2,w,c
 22395  0046B2  ECE2  F031         	call	_EUSART_Write
 22396                           
 22397                           ;USBapp.c: 183: ++RS232cp;
 22398  0046B6  2A4D               	incf	_RS232cp,f,c
 22399                           
 22400                           ;USBapp.c: 184: if (RS232cp == LastRS232Out)
 22401  0046B8  504A               	movf	_LastRS232Out,w,c
 22402  0046BA  184D               	xorwf	_RS232cp,w,c
 22403  0046BC  A4D8               	btfss	status,2,c
 22404  0046BE  D002               	goto	l882
 22405                           
 22406                           ;USBapp.c: 185: RS232_Out_Data_Rdy = 0;
 22407  0046C0  0E00               	movlw	0
 22408  0046C2  6E4C               	movwf	_RS232_Out_Data_Rdy,c
 22409  0046C4                     l882:
 22410                           
 22411                           ;USBapp.c: 186: }
 22412                           ;USBapp.c: 189: if ((eusartRxCount))
 22413  0046C4  5053               	movf	_eusartRxCount,w,c	;volatile
 22414  0046C6  B4D8               	btfsc	status,2,c
 22415  0046C8  D024               	goto	l14468
 22416                           
 22417                           ;USBapp.c: 190: {
 22418                           ;USBapp.c: 191: if(USBapp_getrxByteFlag() && (NextUSBOut < (64 - 1)))
 22419  0046CA  EC8C  F035         	call	_USBapp_getrxByteFlag	;wreg free
 22420  0046CE  0900               	iorlw	0
 22421  0046D0  B4D8               	btfsc	status,2,c
 22422  0046D2  D01F               	goto	l14468
 22423  0046D4  0E3F               	movlw	63
 22424  0046D6  604B               	cpfslt	_NextUSBOut,c
 22425  0046D8  D01C               	goto	l14468
 22426                           
 22427                           ;USBapp.c: 192: {
 22428                           ;USBapp.c: 193: __nop();
 22429  0046DA  F000               	nop	
 22430                           
 22431                           ;USBapp.c: 194: USB_Buffer[NextUSBOut] = EUSART_Read();
 22432  0046DC  ECBF  F031         	call	_EUSART_Read	;wreg free
 22433  0046E0  0100               	movlb	0	; () banked
 22434  0046E2  6F6D               	movwf	??_USBapp_DeviceCdcEmulatorHandler& (0+255),b
 22435  0046E4  504B               	movf	_NextUSBOut,w,c
 22436  0046E6  0D01               	mullw	1
 22437  0046E8  0E80               	movlw	low _USB_Buffer
 22438  0046EA  24F3               	addwf	prodl,w,c
 22439  0046EC  6ED9               	movwf	fsr2l,c
 22440  0046EE  0E02               	movlw	high _USB_Buffer
 22441  0046F0  20F4               	addwfc	prodh,w,c
 22442  0046F2  6EDA               	movwf	fsr2h,c
 22443  0046F4  C06D  FFDF         	movff	??_USBapp_DeviceCdcEmulatorHandler,indf2
 22444                           
 22445                           ; BSR set to: 0
 22446                           ;USBapp.c: 195: ++NextUSBOut;
 22447  0046F8  2A4B               	incf	_NextUSBOut,f,c
 22448                           
 22449                           ; BSR set to: 0
 22450                           ;USBapp.c: 196: USB_Buffer[NextUSBOut] = 0;
 22451  0046FA  504B               	movf	_NextUSBOut,w,c
 22452  0046FC  0D01               	mullw	1
 22453  0046FE  0E80               	movlw	low _USB_Buffer
 22454  004700  24F3               	addwf	prodl,w,c
 22455  004702  6ED9               	movwf	fsr2l,c
 22456  004704  0E02               	movlw	high _USB_Buffer
 22457  004706  20F4               	addwfc	prodh,w,c
 22458  004708  6EDA               	movwf	fsr2h,c
 22459  00470A  0E00               	movlw	0
 22460  00470C  6EDF               	movwf	indf2,c
 22461                           
 22462                           ; BSR set to: 0
 22463                           ;USBapp.c: 197: rxByteFlag = 0;
 22464  00470E  0E00               	movlw	0
 22465  004710  6E56               	movwf	_rxByteFlag,c	;volatile
 22466  004712                     l14468:
 22467                           
 22468                           ;USBapp.c: 198: }
 22469                           ;USBapp.c: 199: }
 22470                           ;USBapp.c: 203: if(((cdc_trf_state == 0)) && (NextUSBOut > 0))
 22471  004712  5050               	movf	_cdc_trf_state,w,c
 22472  004714  A4D8               	btfss	status,2,c
 22473  004716  D011               	goto	l14478
 22474  004718  504B               	movf	_NextUSBOut,w,c
 22475  00471A  B4D8               	btfsc	status,2,c
 22476  00471C  D00E               	goto	l14478
 22477                           
 22478                           ;USBapp.c: 204: {
 22479                           ;USBapp.c: 205: putUSBUSART(&USB_Buffer[0], NextUSBOut);
 22480  00471E  0E80               	movlw	low _USB_Buffer
 22481  004720  0100               	movlb	0	; () banked
 22482  004722  6F60               	movwf	putUSBUSART@data& (0+255),b
 22483  004724  0E02               	movlw	high _USB_Buffer
 22484  004726  0100               	movlb	0	; () banked
 22485  004728  6F61               	movwf	(putUSBUSART@data+1)& (0+255),b
 22486  00472A  C04B  F062         	movff	_NextUSBOut,putUSBUSART@length
 22487  00472E  EC5B  F034         	call	_putUSBUSART	;wreg free
 22488                           
 22489                           ;USBapp.c: 206: MOTEapp_setResponseReady();
 22490  004732  EC7F  F035         	call	_MOTEapp_setResponseReady	;wreg free
 22491                           
 22492                           ;USBapp.c: 207: NextUSBOut = 0;
 22493  004736  0E00               	movlw	0
 22494  004738  6E4B               	movwf	_NextUSBOut,c
 22495  00473A                     l14478:
 22496                           
 22497                           ;USBapp.c: 208: }
 22498                           ;USBapp.c: 210: CDCTxService();
 22499  00473A  ECD7  F019         	call	_CDCTxService	;wreg free
 22500  00473E  0012               	return		;funcret
 22501  004740                     __end_of_USBapp_DeviceCdcEmulatorHandler:
 22502                           	opt stack 0
 22503                           tblptru	equ	0xFF8
 22504                           tblptrh	equ	0xFF7
 22505                           tblptrl	equ	0xFF6
 22506                           tablat	equ	0xFF5
 22507                           prodh	equ	0xFF4
 22508                           prodl	equ	0xFF3
 22509                           intcon	equ	0xFF2
 22510                           intcon3	equ	0xFF0
 22511                           indf0	equ	0xFEF
 22512                           postinc0	equ	0xFEE
 22513                           fsr0h	equ	0xFEA
 22514                           fsr0l	equ	0xFE9
 22515                           wreg	equ	0xFE8
 22516                           indf1	equ	0xFE7
 22517                           postdec1	equ	0xFE5
 22518                           fsr1h	equ	0xFE2
 22519                           fsr1l	equ	0xFE1
 22520                           indf2	equ	0xFDF
 22521                           fsr2h	equ	0xFDA
 22522                           fsr2l	equ	0xFD9
 22523                           status	equ	0xFD8
 22524                           
 22525 ;; *************** function _putUSBUSART *****************
 22526 ;; Defined at:
 22527 ;;		line 503 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 22528 ;; Parameters:    Size  Location     Type
 22529 ;;  data            2    0[BANK0 ] PTR unsigned char 
 22530 ;;		 -> USB_Buffer(64), 
 22531 ;;  length          1    2[BANK0 ] unsigned char 
 22532 ;; Auto vars:     Size  Location     Type
 22533 ;;		None
 22534 ;; Return value:  Size  Location     Type
 22535 ;;		None               void
 22536 ;; Registers used:
 22537 ;;		wreg, status,2, status,0
 22538 ;; Tracked objects:
 22539 ;;		On entry : 0/0
 22540 ;;		On exit  : 0/0
 22541 ;;		Unchanged: 0/0
 22542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22543 ;;      Params:         0       3       0       0       0       0       0       0       0
 22544 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22545 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22546 ;;      Totals:         0       3       0       0       0       0       0       0       0
 22547 ;;Total ram usage:        3 bytes
 22548 ;; Hardware stack levels used:    1
 22549 ;; Hardware stack levels required when called:   11
 22550 ;; This function calls:
 22551 ;;		Nothing
 22552 ;; This function is called by:
 22553 ;;		_USBapp_DeviceCdcEmulatorHandler
 22554 ;; This function uses a non-reentrant model
 22555 ;;
 22556                           
 22557                           	psect	text78
 22558  0068B6                     __ptext78:
 22559                           	opt stack 0
 22560  0068B6                     _putUSBUSART:
 22561                           	opt stack 17
 22562                           
 22563                           ;usb_device_cdc.c: 528: {PIE3bits.USBIE = 0;};
 22564                           
 22565                           ;incstack = 0
 22566  0068B6  94A3               	bcf	4003,2,c	;volatile
 22567                           
 22568                           ;usb_device_cdc.c: 529: if(cdc_trf_state == 0)
 22569  0068B8  5050               	movf	_cdc_trf_state,w,c
 22570  0068BA  A4D8               	btfss	status,2,c
 22571  0068BC  D00B               	goto	l13382
 22572                           
 22573                           ;usb_device_cdc.c: 530: {
 22574                           ;usb_device_cdc.c: 531: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 22575  0068BE  C060  F151         	movff	putUSBUSART@data,_pCDCSrc
 22576  0068C2  C061  F152         	movff	putUSBUSART@data+1,_pCDCSrc+1
 22577  0068C6  C062  F0DA         	movff	putUSBUSART@length,_cdc_tx_len
 22578  0068CA  0E01               	movlw	1
 22579  0068CC  0100               	movlb	0	; () banked
 22580  0068CE  6FD8               	movwf	_cdc_mem_type& (0+255),b
 22581                           
 22582                           ; BSR set to: 0
 22583  0068D0  0E01               	movlw	1
 22584  0068D2  6E50               	movwf	_cdc_trf_state,c
 22585  0068D4                     l13382:
 22586                           
 22587                           ;usb_device_cdc.c: 532: }
 22588                           ;usb_device_cdc.c: 533: {PIE3bits.USBIE = 1;};
 22589  0068D4  84A3               	bsf	4003,2,c	;volatile
 22590  0068D6  0012               	return		;funcret
 22591  0068D8                     __end_of_putUSBUSART:
 22592                           	opt stack 0
 22593                           tblptru	equ	0xFF8
 22594                           tblptrh	equ	0xFF7
 22595                           tblptrl	equ	0xFF6
 22596                           tablat	equ	0xFF5
 22597                           prodh	equ	0xFF4
 22598                           prodl	equ	0xFF3
 22599                           intcon	equ	0xFF2
 22600                           intcon3	equ	0xFF0
 22601                           indf0	equ	0xFEF
 22602                           postinc0	equ	0xFEE
 22603                           fsr0h	equ	0xFEA
 22604                           fsr0l	equ	0xFE9
 22605                           wreg	equ	0xFE8
 22606                           indf1	equ	0xFE7
 22607                           postdec1	equ	0xFE5
 22608                           fsr1h	equ	0xFE2
 22609                           fsr1l	equ	0xFE1
 22610                           indf2	equ	0xFDF
 22611                           fsr2h	equ	0xFDA
 22612                           fsr2l	equ	0xFD9
 22613                           status	equ	0xFD8
 22614                           
 22615 ;; *************** function _getsUSBUSART *****************
 22616 ;; Defined at:
 22617 ;;		line 432 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 22618 ;; Parameters:    Size  Location     Type
 22619 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 22620 ;;		 -> USB_Buffer(64), 
 22621 ;;  len             1    9[BANK0 ] unsigned char 
 22622 ;; Auto vars:     Size  Location     Type
 22623 ;;		None
 22624 ;; Return value:  Size  Location     Type
 22625 ;;                  1    wreg      unsigned char 
 22626 ;; Registers used:
 22627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22628 ;; Tracked objects:
 22629 ;;		On entry : 0/0
 22630 ;;		On exit  : 0/0
 22631 ;;		Unchanged: 0/0
 22632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22633 ;;      Params:         0       3       0       0       0       0       0       0       0
 22634 ;;      Locals:         0       2       0       0       0       0       0       0       0
 22635 ;;      Temps:          0       1       0       0       0       0       0       0       0
 22636 ;;      Totals:         0       6       0       0       0       0       0       0       0
 22637 ;;Total ram usage:        6 bytes
 22638 ;; Hardware stack levels used:    1
 22639 ;; Hardware stack levels required when called:   12
 22640 ;; This function calls:
 22641 ;;		_USBTransferOnePacket
 22642 ;; This function is called by:
 22643 ;;		_USBapp_DeviceCdcEmulatorHandler
 22644 ;; This function uses a non-reentrant model
 22645 ;;
 22646                           
 22647                           	psect	text79
 22648  004576                     __ptext79:
 22649                           	opt stack 0
 22650  004576                     _getsUSBUSART:
 22651                           	opt stack 16
 22652                           
 22653                           ;usb_device_cdc.c: 434: cdc_rx_len = 0;
 22654                           
 22655                           ;incstack = 0
 22656  004576  0E00               	movlw	0
 22657  004578  0100               	movlb	0	; () banked
 22658  00457A  6FD9               	movwf	_cdc_rx_len& (0+255),b
 22659                           
 22660                           ; BSR set to: 0
 22661                           ;usb_device_cdc.c: 436: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 22662  00457C  0100               	movlb	0	; () banked
 22663  00457E  51BF               	movf	_CDCDataOutHandle& (0+255),w,b
 22664  004580  0100               	movlb	0	; () banked
 22665  004582  11C0               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 22666  004584  B4D8               	btfsc	status,2,c
 22667  004586  D013               	goto	l13344
 22668                           
 22669                           ; BSR set to: 0
 22670  004588  C0BF  FFD9         	movff	_CDCDataOutHandle,fsr2l
 22671  00458C  C0C0  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 22672  004590  0100               	movlb	0	; () banked
 22673  004592  AEDF               	btfss	indf2,7,c
 22674  004594  D004               	goto	u12540
 22675  004596  0100               	movlb	0	; () banked
 22676  004598  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 22677  00459A  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 22678  00459C  D002               	goto	u12548
 22679  00459E                     u12540:
 22680  00459E  0100               	movlb	0	; () banked
 22681  0045A0  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 22682  0045A2                     u12548:
 22683  0045A2  0100               	movlb	0	; () banked
 22684  0045A4  516A               	movf	??_getsUSBUSART& (0+255),w,b
 22685  0045A6  0100               	movlb	0	; () banked
 22686  0045A8  6F6B               	movwf	_getsUSBUSART$6489& (0+255),b
 22687  0045AA  6B6C               	clrf	(_getsUSBUSART$6489+1)& (0+255),b
 22688  0045AC  D005               	goto	l13346
 22689  0045AE                     l13344:
 22690                           
 22691                           ; BSR set to: 0
 22692  0045AE  0E00               	movlw	0
 22693  0045B0  0100               	movlb	0	; () banked
 22694  0045B2  6F6C               	movwf	(_getsUSBUSART$6489+1)& (0+255),b
 22695  0045B4  0E00               	movlw	0
 22696  0045B6  6F6B               	movwf	_getsUSBUSART$6489& (0+255),b
 22697  0045B8                     l13346:
 22698                           
 22699                           ; BSR set to: 0
 22700  0045B8  0100               	movlb	0	; () banked
 22701  0045BA  516B               	movf	_getsUSBUSART$6489& (0+255),w,b
 22702  0045BC  0100               	movlb	0	; () banked
 22703  0045BE  116C               	iorwf	(_getsUSBUSART$6489+1)& (0+255),w,b
 22704  0045C0  A4D8               	btfss	status,2,c
 22705  0045C2  D04B               	goto	l13362
 22706                           
 22707                           ; BSR set to: 0
 22708                           ;usb_device_cdc.c: 437: {
 22709                           ;usb_device_cdc.c: 442: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 22710  0045C4  0100               	movlb	0	; () banked
 22711  0045C6  EE20 F001          	lfsr	2,1
 22712  0045CA  51BF               	movf	_CDCDataOutHandle& (0+255),w,b
 22713  0045CC  26D9               	addwf	fsr2l,f,c
 22714  0045CE  51C0               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 22715  0045D0  22DA               	addwfc	fsr2h,f,c
 22716  0045D2  0100               	movlb	0	; () banked
 22717  0045D4  5169               	movf	getsUSBUSART@len& (0+255),w,b
 22718  0045D6  5CDE               	subwf	postinc2,w,c
 22719  0045D8  B0D8               	btfsc	status,0,c
 22720  0045DA  D00A               	goto	l13352
 22721                           
 22722                           ; BSR set to: 0
 22723                           ;usb_device_cdc.c: 443: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 22724  0045DC  0100               	movlb	0	; () banked
 22725  0045DE  EE20 F001          	lfsr	2,1
 22726  0045E2  51BF               	movf	_CDCDataOutHandle& (0+255),w,b
 22727  0045E4  26D9               	addwf	fsr2l,f,c
 22728  0045E6  51C0               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 22729  0045E8  22DA               	addwfc	fsr2h,f,c
 22730  0045EA  50DF               	movf	indf2,w,c
 22731  0045EC  0100               	movlb	0	; () banked
 22732  0045EE  6F69               	movwf	getsUSBUSART@len& (0+255),b
 22733  0045F0                     l13352:
 22734                           
 22735                           ; BSR set to: 0
 22736                           ;usb_device_cdc.c: 448: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 22737  0045F0  0E00               	movlw	0
 22738  0045F2  0100               	movlb	0	; () banked
 22739  0045F4  6FD9               	movwf	_cdc_rx_len& (0+255),b
 22740  0045F6  D018               	goto	l13358
 22741  0045F8                     l13354:
 22742                           
 22743                           ; BSR set to: 0
 22744                           ;usb_device_cdc.c: 449: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 22745  0045F8  0100               	movlb	0	; () banked
 22746  0045FA  51D9               	movf	_cdc_rx_len& (0+255),w,b
 22747  0045FC  0D01               	mullw	1
 22748  0045FE  0E40               	movlw	64
 22749  004600  24F3               	addwf	prodl,w,c
 22750  004602  6ED9               	movwf	fsr2l,c
 22751  004604  0E05               	movlw	5
 22752  004606  20F4               	addwfc	prodh,w,c
 22753  004608  6EDA               	movwf	fsr2h,c
 22754  00460A  0100               	movlb	0	; () banked
 22755  00460C  51D9               	movf	_cdc_rx_len& (0+255),w,b
 22756  00460E  0D01               	mullw	1
 22757  004610  50F3               	movf	prodl,w,c
 22758  004612  0100               	movlb	0	; () banked
 22759  004614  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 22760  004616  6EE1               	movwf	fsr1l,c
 22761  004618  50F4               	movf	prodh,w,c
 22762  00461A  0100               	movlb	0	; () banked
 22763  00461C  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 22764  00461E  6EE2               	movwf	fsr1h,c
 22765  004620  CFDF FFE7          	movff	indf2,indf1
 22766                           
 22767                           ; BSR set to: 0
 22768  004624  0100               	movlb	0	; () banked
 22769  004626  2BD9               	incf	_cdc_rx_len& (0+255),f,b
 22770  004628                     l13358:
 22771                           
 22772                           ; BSR set to: 0
 22773  004628  0100               	movlb	0	; () banked
 22774  00462A  5169               	movf	getsUSBUSART@len& (0+255),w,b
 22775  00462C  0100               	movlb	0	; () banked
 22776  00462E  5DD9               	subwf	_cdc_rx_len& (0+255),w,b
 22777  004630  A0D8               	btfss	status,0,c
 22778  004632  D7E2               	goto	l13354
 22779                           
 22780                           ; BSR set to: 0
 22781                           ;usb_device_cdc.c: 455: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 22782                           
 22783                           ; BSR set to: 0
 22784  004634  0E00               	movlw	0
 22785  004636  0100               	movlb	0	; () banked
 22786  004638  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 22787  00463A  0E40               	movlw	64
 22788  00463C  0100               	movlb	0	; () banked
 22789  00463E  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 22790  004640  0E05               	movlw	5
 22791  004642  0100               	movlb	0	; () banked
 22792  004644  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 22793  004646  0E40               	movlw	64
 22794  004648  0100               	movlb	0	; () banked
 22795  00464A  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 22796  00464C  0E02               	movlw	2
 22797  00464E  ECCA  F025         	call	_USBTransferOnePacket
 22798  004652  C060  F0BF         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 22799  004656  C061  F0C0         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 22800  00465A                     l13362:
 22801                           
 22802                           ;usb_device_cdc.c: 457: }
 22803                           ;usb_device_cdc.c: 459: return cdc_rx_len;
 22804  00465A  0100               	movlb	0	; () banked
 22805  00465C  51D9               	movf	_cdc_rx_len& (0+255),w,b
 22806  00465E  0012               	return	
 22807  004660                     __end_of_getsUSBUSART:
 22808                           	opt stack 0
 22809                           tblptru	equ	0xFF8
 22810                           tblptrh	equ	0xFF7
 22811                           tblptrl	equ	0xFF6
 22812                           tablat	equ	0xFF5
 22813                           prodh	equ	0xFF4
 22814                           prodl	equ	0xFF3
 22815                           intcon	equ	0xFF2
 22816                           intcon3	equ	0xFF0
 22817                           indf0	equ	0xFEF
 22818                           postinc0	equ	0xFEE
 22819                           fsr0h	equ	0xFEA
 22820                           fsr0l	equ	0xFE9
 22821                           wreg	equ	0xFE8
 22822                           indf1	equ	0xFE7
 22823                           postdec1	equ	0xFE5
 22824                           fsr1h	equ	0xFE2
 22825                           fsr1l	equ	0xFE1
 22826                           indf2	equ	0xFDF
 22827                           postinc2	equ	0xFDE
 22828                           fsr2h	equ	0xFDA
 22829                           fsr2l	equ	0xFD9
 22830                           status	equ	0xFD8
 22831                           
 22832 ;; *************** function _USBapp_getrxByteFlag *****************
 22833 ;; Defined at:
 22834 ;;		line 268 in file "../Includes/Board/USBapp.c"
 22835 ;; Parameters:    Size  Location     Type
 22836 ;;		None
 22837 ;; Auto vars:     Size  Location     Type
 22838 ;;		None
 22839 ;; Return value:  Size  Location     Type
 22840 ;;                  1    wreg      unsigned char 
 22841 ;; Registers used:
 22842 ;;		wreg, status,2
 22843 ;; Tracked objects:
 22844 ;;		On entry : 0/0
 22845 ;;		On exit  : 0/0
 22846 ;;		Unchanged: 0/0
 22847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22848 ;;      Params:         0       0       0       0       0       0       0       0       0
 22849 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22850 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22851 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22852 ;;Total ram usage:        0 bytes
 22853 ;; Hardware stack levels used:    1
 22854 ;; Hardware stack levels required when called:   11
 22855 ;; This function calls:
 22856 ;;		Nothing
 22857 ;; This function is called by:
 22858 ;;		_USBapp_DeviceCdcEmulatorHandler
 22859 ;; This function uses a non-reentrant model
 22860 ;;
 22861                           
 22862                           	psect	text80
 22863  006B18                     __ptext80:
 22864                           	opt stack 0
 22865  006B18                     _USBapp_getrxByteFlag:
 22866                           	opt stack 17
 22867                           
 22868                           ;USBapp.c: 270: return rxByteFlag;
 22869                           
 22870                           ; BSR set to: 0
 22871                           ;incstack = 0
 22872  006B18  5056               	movf	_rxByteFlag,w,c	;volatile
 22873  006B1A  0012               	return	
 22874  006B1C                     __end_of_USBapp_getrxByteFlag:
 22875                           	opt stack 0
 22876                           tblptru	equ	0xFF8
 22877                           tblptrh	equ	0xFF7
 22878                           tblptrl	equ	0xFF6
 22879                           tablat	equ	0xFF5
 22880                           prodh	equ	0xFF4
 22881                           prodl	equ	0xFF3
 22882                           intcon	equ	0xFF2
 22883                           intcon3	equ	0xFF0
 22884                           indf0	equ	0xFEF
 22885                           postinc0	equ	0xFEE
 22886                           fsr0h	equ	0xFEA
 22887                           fsr0l	equ	0xFE9
 22888                           wreg	equ	0xFE8
 22889                           indf1	equ	0xFE7
 22890                           postdec1	equ	0xFE5
 22891                           fsr1h	equ	0xFE2
 22892                           fsr1l	equ	0xFE1
 22893                           indf2	equ	0xFDF
 22894                           postinc2	equ	0xFDE
 22895                           fsr2h	equ	0xFDA
 22896                           fsr2l	equ	0xFD9
 22897                           status	equ	0xFD8
 22898                           
 22899 ;; *************** function _MOTEapp_setResponseReady *****************
 22900 ;; Defined at:
 22901 ;;		line 1150 in file "../Includes/Board/MOTEapp.c"
 22902 ;; Parameters:    Size  Location     Type
 22903 ;;		None
 22904 ;; Auto vars:     Size  Location     Type
 22905 ;;		None
 22906 ;; Return value:  Size  Location     Type
 22907 ;;		None               void
 22908 ;; Registers used:
 22909 ;;		wreg, status,2
 22910 ;; Tracked objects:
 22911 ;;		On entry : 0/0
 22912 ;;		On exit  : 0/0
 22913 ;;		Unchanged: 0/0
 22914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22915 ;;      Params:         0       0       0       0       0       0       0       0       0
 22916 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22917 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22918 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22919 ;;Total ram usage:        0 bytes
 22920 ;; Hardware stack levels used:    1
 22921 ;; Hardware stack levels required when called:   11
 22922 ;; This function calls:
 22923 ;;		Nothing
 22924 ;; This function is called by:
 22925 ;;		_USBapp_DeviceCdcEmulatorHandler
 22926 ;; This function uses a non-reentrant model
 22927 ;;
 22928                           
 22929                           	psect	text81
 22930  006AFE                     __ptext81:
 22931                           	opt stack 0
 22932  006AFE                     _MOTEapp_setResponseReady:
 22933                           	opt stack 17
 22934                           
 22935                           ;MOTEapp.c: 1152: responseReady = 1;
 22936                           
 22937                           ;incstack = 0
 22938  006AFE  0E01               	movlw	1
 22939  006B00  0100               	movlb	0	; () banked
 22940  006B02  6FEB               	movwf	_responseReady& (0+255),b
 22941                           
 22942                           ; BSR set to: 0
 22943  006B04  0012               	return		;funcret
 22944  006B06                     __end_of_MOTEapp_setResponseReady:
 22945                           	opt stack 0
 22946                           tblptru	equ	0xFF8
 22947                           tblptrh	equ	0xFF7
 22948                           tblptrl	equ	0xFF6
 22949                           tablat	equ	0xFF5
 22950                           prodh	equ	0xFF4
 22951                           prodl	equ	0xFF3
 22952                           intcon	equ	0xFF2
 22953                           intcon3	equ	0xFF0
 22954                           indf0	equ	0xFEF
 22955                           postinc0	equ	0xFEE
 22956                           fsr0h	equ	0xFEA
 22957                           fsr0l	equ	0xFE9
 22958                           wreg	equ	0xFE8
 22959                           indf1	equ	0xFE7
 22960                           postdec1	equ	0xFE5
 22961                           fsr1h	equ	0xFE2
 22962                           fsr1l	equ	0xFE1
 22963                           indf2	equ	0xFDF
 22964                           postinc2	equ	0xFDE
 22965                           fsr2h	equ	0xFDA
 22966                           fsr2l	equ	0xFD9
 22967                           status	equ	0xFD8
 22968                           
 22969 ;; *************** function _EUSART_Write *****************
 22970 ;; Defined at:
 22971 ;;		line 139 in file "../Includes/MccGenerated/eusart.c"
 22972 ;; Parameters:    Size  Location     Type
 22973 ;;  txData          1    wreg     unsigned char 
 22974 ;; Auto vars:     Size  Location     Type
 22975 ;;  txData          1    0[BANK0 ] unsigned char 
 22976 ;; Return value:  Size  Location     Type
 22977 ;;		None               void
 22978 ;; Registers used:
 22979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22980 ;; Tracked objects:
 22981 ;;		On entry : 0/0
 22982 ;;		On exit  : 0/0
 22983 ;;		Unchanged: 0/0
 22984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22985 ;;      Params:         0       0       0       0       0       0       0       0       0
 22986 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22987 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22988 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22989 ;;Total ram usage:        1 bytes
 22990 ;; Hardware stack levels used:    1
 22991 ;; Hardware stack levels required when called:   11
 22992 ;; This function calls:
 22993 ;;		Nothing
 22994 ;; This function is called by:
 22995 ;;		_EndLine
 22996 ;;		_sendCommand
 22997 ;;		_sendDataCommand
 22998 ;;		_USBapp_DeviceCdcEmulatorHandler
 22999 ;; This function uses a non-reentrant model
 23000 ;;
 23001                           
 23002                           	psect	text82
 23003  0063C4                     __ptext82:
 23004                           	opt stack 0
 23005  0063C4                     _EUSART_Write:
 23006                           	opt stack 14
 23007                           
 23008                           ; BSR set to: 0
 23009                           ;incstack = 0
 23010                           ;EUSART_Write@txData stored from wreg
 23011  0063C4  0100               	movlb	0	; () banked
 23012  0063C6  6F60               	movwf	EUSART_Write@txData& (0+255),b
 23013  0063C8                     l11834:
 23014  0063C8  5054               	movf	_eusartTxBufferRemaining,w,c	;volatile
 23015  0063CA  B4D8               	btfsc	status,2,c
 23016  0063CC  D7FD               	goto	l11834
 23017                           
 23018                           ;eusart.c: 143: }
 23019                           ;eusart.c: 145: if(0 == PIE1bits.TXIE)
 23020  0063CE  B89D               	btfsc	3997,4,c	;volatile
 23021  0063D0  D003               	goto	l1142
 23022                           
 23023                           ;eusart.c: 146: {
 23024                           ;eusart.c: 147: TXREG = txData;
 23025  0063D2  C060  FFAD         	movff	EUSART_Write@txData,4013	;volatile
 23026                           
 23027                           ;eusart.c: 148: }
 23028  0063D6  D016               	goto	l11848
 23029  0063D8                     l1142:
 23030                           
 23031                           ;eusart.c: 149: else
 23032                           ;eusart.c: 150: {
 23033                           ;eusart.c: 151: PIE1bits.TXIE = 0;
 23034  0063D8  989D               	bcf	3997,4,c	;volatile
 23035                           
 23036                           ;eusart.c: 152: eusartTxBuffer[eusartTxHead++] = txData;
 23037  0063DA  0100               	movlb	0	; () banked
 23038  0063DC  51E1               	movf	_eusartTxHead& (0+255),w,b
 23039  0063DE  0D01               	mullw	1
 23040  0063E0  0E40               	movlw	low _eusartTxBuffer
 23041  0063E2  24F3               	addwf	prodl,w,c
 23042  0063E4  6ED9               	movwf	fsr2l,c
 23043  0063E6  0E02               	movlw	high _eusartTxBuffer
 23044  0063E8  20F4               	addwfc	prodh,w,c
 23045  0063EA  6EDA               	movwf	fsr2h,c
 23046  0063EC  C060  FFDF         	movff	EUSART_Write@txData,indf2
 23047                           
 23048                           ; BSR set to: 0
 23049  0063F0  0100               	movlb	0	; () banked
 23050  0063F2  2BE1               	incf	_eusartTxHead& (0+255),f,b
 23051                           
 23052                           ; BSR set to: 0
 23053                           ;eusart.c: 153: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 23054  0063F4  0E3F               	movlw	63
 23055  0063F6  0100               	movlb	0	; () banked
 23056  0063F8  65E1               	cpfsgt	_eusartTxHead& (0+255),b
 23057  0063FA  D003               	goto	l11846
 23058                           
 23059                           ; BSR set to: 0
 23060                           ;eusart.c: 154: {
 23061                           ;eusart.c: 155: eusartTxHead = 0;
 23062  0063FC  0E00               	movlw	0
 23063  0063FE  0100               	movlb	0	; () banked
 23064  006400  6FE1               	movwf	_eusartTxHead& (0+255),b
 23065  006402                     l11846:
 23066                           
 23067                           ; BSR set to: 0
 23068                           ;eusart.c: 156: }
 23069                           ;eusart.c: 157: eusartTxBufferRemaining--;
 23070  006402  0654               	decf	_eusartTxBufferRemaining,f,c	;volatile
 23071  006404                     l11848:
 23072                           
 23073                           ;eusart.c: 158: }
 23074                           ;eusart.c: 159: PIE1bits.TXIE = 1;
 23075  006404  889D               	bsf	3997,4,c	;volatile
 23076  006406  0012               	return		;funcret
 23077  006408                     __end_of_EUSART_Write:
 23078                           	opt stack 0
 23079                           tblptru	equ	0xFF8
 23080                           tblptrh	equ	0xFF7
 23081                           tblptrl	equ	0xFF6
 23082                           tablat	equ	0xFF5
 23083                           prodh	equ	0xFF4
 23084                           prodl	equ	0xFF3
 23085                           intcon	equ	0xFF2
 23086                           intcon3	equ	0xFF0
 23087                           indf0	equ	0xFEF
 23088                           postinc0	equ	0xFEE
 23089                           fsr0h	equ	0xFEA
 23090                           fsr0l	equ	0xFE9
 23091                           wreg	equ	0xFE8
 23092                           indf1	equ	0xFE7
 23093                           postdec1	equ	0xFE5
 23094                           fsr1h	equ	0xFE2
 23095                           fsr1l	equ	0xFE1
 23096                           indf2	equ	0xFDF
 23097                           postinc2	equ	0xFDE
 23098                           fsr2h	equ	0xFDA
 23099                           fsr2l	equ	0xFD9
 23100                           status	equ	0xFD8
 23101                           
 23102 ;; *************** function _EUSART_Read *****************
 23103 ;; Defined at:
 23104 ;;		line 117 in file "../Includes/MccGenerated/eusart.c"
 23105 ;; Parameters:    Size  Location     Type
 23106 ;;		None
 23107 ;; Auto vars:     Size  Location     Type
 23108 ;;  readValue       1    0[BANK0 ] unsigned char 
 23109 ;; Return value:  Size  Location     Type
 23110 ;;                  1    wreg      unsigned char 
 23111 ;; Registers used:
 23112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23113 ;; Tracked objects:
 23114 ;;		On entry : 0/0
 23115 ;;		On exit  : 0/0
 23116 ;;		Unchanged: 0/0
 23117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23118 ;;      Params:         0       0       0       0       0       0       0       0       0
 23119 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23120 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23121 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23122 ;;Total ram usage:        1 bytes
 23123 ;; Hardware stack levels used:    1
 23124 ;; Hardware stack levels required when called:   11
 23125 ;; This function calls:
 23126 ;;		Nothing
 23127 ;; This function is called by:
 23128 ;;		_MOTEapp_getModuleResponse
 23129 ;;		_USBapp_DeviceCdcEmulatorHandler
 23130 ;; This function uses a non-reentrant model
 23131 ;;
 23132                           
 23133                           	psect	text83
 23134  00637E                     __ptext83:
 23135                           	opt stack 0
 23136  00637E                     _EUSART_Read:
 23137                           	opt stack 15
 23138                           
 23139                           ;eusart.c: 119: uint8_t readValue = 0;
 23140                           
 23141                           ;incstack = 0
 23142  00637E  0E00               	movlw	0
 23143  006380  0100               	movlb	0	; () banked
 23144  006382  6F60               	movwf	EUSART_Read@readValue& (0+255),b
 23145                           
 23146                           ;eusart.c: 121: while(0 == eusartRxCount)
 23147  006384  D001               	goto	l11852
 23148  006386                     l1133:
 23149                           
 23150                           ;eusart.c: 122: {
 23151                           ;eusart.c: 123: LATAbits.LATA7 = 1;
 23152  006386  8E89               	bsf	3977,7,c	;volatile
 23153  006388                     l11852:
 23154  006388  5053               	movf	_eusartRxCount,w,c	;volatile
 23155  00638A  B4D8               	btfsc	status,2,c
 23156  00638C  D7FC               	goto	l1133
 23157                           
 23158                           ;eusart.c: 124: }
 23159                           ;eusart.c: 126: PIE1bits.RCIE = 0;
 23160  00638E  9A9D               	bcf	3997,5,c	;volatile
 23161                           
 23162                           ;eusart.c: 128: readValue = eusartRxBuffer[eusartRxTail++];
 23163  006390  0100               	movlb	0	; () banked
 23164  006392  51E0               	movf	_eusartRxTail& (0+255),w,b
 23165  006394  0D01               	mullw	1
 23166  006396  0E00               	movlw	low _eusartRxBuffer
 23167  006398  24F3               	addwf	prodl,w,c
 23168  00639A  6ED9               	movwf	fsr2l,c
 23169  00639C  0E02               	movlw	high _eusartRxBuffer
 23170  00639E  20F4               	addwfc	prodh,w,c
 23171  0063A0  6EDA               	movwf	fsr2h,c
 23172  0063A2  50DF               	movf	indf2,w,c
 23173  0063A4  0100               	movlb	0	; () banked
 23174  0063A6  6F60               	movwf	EUSART_Read@readValue& (0+255),b
 23175                           
 23176                           ; BSR set to: 0
 23177  0063A8  0100               	movlb	0	; () banked
 23178  0063AA  2BE0               	incf	_eusartRxTail& (0+255),f,b
 23179                           
 23180                           ; BSR set to: 0
 23181                           ;eusart.c: 129: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 23182  0063AC  0E3F               	movlw	63
 23183  0063AE  0100               	movlb	0	; () banked
 23184  0063B0  65E0               	cpfsgt	_eusartRxTail& (0+255),b
 23185  0063B2  D003               	goto	l11862
 23186                           
 23187                           ; BSR set to: 0
 23188                           ;eusart.c: 130: {
 23189                           ;eusart.c: 131: eusartRxTail = 0;
 23190  0063B4  0E00               	movlw	0
 23191  0063B6  0100               	movlb	0	; () banked
 23192  0063B8  6FE0               	movwf	_eusartRxTail& (0+255),b
 23193  0063BA                     l11862:
 23194                           
 23195                           ; BSR set to: 0
 23196                           ;eusart.c: 132: }
 23197                           ;eusart.c: 133: eusartRxCount--;
 23198  0063BA  0653               	decf	_eusartRxCount,f,c	;volatile
 23199                           
 23200                           ; BSR set to: 0
 23201                           ;eusart.c: 134: PIE1bits.RCIE = 1;
 23202  0063BC  8A9D               	bsf	3997,5,c	;volatile
 23203                           
 23204                           ; BSR set to: 0
 23205                           ;eusart.c: 136: return readValue;
 23206  0063BE  0100               	movlb	0	; () banked
 23207  0063C0  5160               	movf	EUSART_Read@readValue& (0+255),w,b
 23208  0063C2  0012               	return	
 23209  0063C4                     __end_of_EUSART_Read:
 23210                           	opt stack 0
 23211                           tblptru	equ	0xFF8
 23212                           tblptrh	equ	0xFF7
 23213                           tblptrl	equ	0xFF6
 23214                           tablat	equ	0xFF5
 23215                           prodh	equ	0xFF4
 23216                           prodl	equ	0xFF3
 23217                           intcon	equ	0xFF2
 23218                           intcon3	equ	0xFF0
 23219                           indf0	equ	0xFEF
 23220                           postinc0	equ	0xFEE
 23221                           fsr0h	equ	0xFEA
 23222                           fsr0l	equ	0xFE9
 23223                           wreg	equ	0xFE8
 23224                           indf1	equ	0xFE7
 23225                           postdec1	equ	0xFE5
 23226                           fsr1h	equ	0xFE2
 23227                           fsr1l	equ	0xFE1
 23228                           indf2	equ	0xFDF
 23229                           postinc2	equ	0xFDE
 23230                           fsr2h	equ	0xFDA
 23231                           fsr2l	equ	0xFD9
 23232                           status	equ	0xFD8
 23233                           
 23234 ;; *************** function _CDCTxService *****************
 23235 ;; Defined at:
 23236 ;;		line 783 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 23237 ;; Parameters:    Size  Location     Type
 23238 ;;		None
 23239 ;; Auto vars:     Size  Location     Type
 23240 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 23241 ;;  i               1   10[BANK0 ] unsigned char 
 23242 ;; Return value:  Size  Location     Type
 23243 ;;		None               void
 23244 ;; Registers used:
 23245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23246 ;; Tracked objects:
 23247 ;;		On entry : 0/0
 23248 ;;		On exit  : 0/0
 23249 ;;		Unchanged: 0/0
 23250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23251 ;;      Params:         0       0       0       0       0       0       0       0       0
 23252 ;;      Locals:         0       4       0       0       0       0       0       0       0
 23253 ;;      Temps:          0       1       0       0       0       0       0       0       0
 23254 ;;      Totals:         0       5       0       0       0       0       0       0       0
 23255 ;;Total ram usage:        5 bytes
 23256 ;; Hardware stack levels used:    1
 23257 ;; Hardware stack levels required when called:   12
 23258 ;; This function calls:
 23259 ;;		_USBTransferOnePacket
 23260 ;; This function is called by:
 23261 ;;		_USBapp_DeviceCdcEmulatorHandler
 23262 ;; This function uses a non-reentrant model
 23263 ;;
 23264                           
 23265                           	psect	text84
 23266  0033AE                     __ptext84:
 23267                           	opt stack 0
 23268  0033AE                     _CDCTxService:
 23269                           	opt stack 16
 23270                           
 23271                           ;usb_device_cdc.c: 785: uint8_t byte_to_send;
 23272                           ;usb_device_cdc.c: 786: uint8_t i;
 23273                           ;usb_device_cdc.c: 788: {PIE3bits.USBIE = 0;};
 23274                           
 23275                           ; BSR set to: 0
 23276                           ;incstack = 0
 23277  0033AE  94A3               	bcf	4003,2,c	;volatile
 23278                           
 23279                           ;usb_device_cdc.c: 790: {};
 23280                           ;usb_device_cdc.c: 792: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 23281  0033B0  0100               	movlb	0	; () banked
 23282  0033B2  51BD               	movf	_CDCDataInHandle& (0+255),w,b
 23283  0033B4  0100               	movlb	0	; () banked
 23284  0033B6  11BE               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 23285  0033B8  B4D8               	btfsc	status,2,c
 23286  0033BA  D013               	goto	l13390
 23287                           
 23288                           ; BSR set to: 0
 23289  0033BC  C0BD  FFD9         	movff	_CDCDataInHandle,fsr2l
 23290  0033C0  C0BE  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 23291  0033C4  0100               	movlb	0	; () banked
 23292  0033C6  AEDF               	btfss	indf2,7,c
 23293  0033C8  D004               	goto	u12600
 23294  0033CA  0100               	movlb	0	; () banked
 23295  0033CC  6B67               	clrf	??_CDCTxService& (0+255),b
 23296  0033CE  2B67               	incf	??_CDCTxService& (0+255),f,b
 23297  0033D0  D002               	goto	u12608
 23298  0033D2                     u12600:
 23299  0033D2  0100               	movlb	0	; () banked
 23300  0033D4  6B67               	clrf	??_CDCTxService& (0+255),b
 23301  0033D6                     u12608:
 23302  0033D6  0100               	movlb	0	; () banked
 23303  0033D8  5167               	movf	??_CDCTxService& (0+255),w,b
 23304  0033DA  0100               	movlb	0	; () banked
 23305  0033DC  6F68               	movwf	_CDCTxService$6537& (0+255),b
 23306  0033DE  6B69               	clrf	(_CDCTxService$6537+1)& (0+255),b
 23307  0033E0  D005               	goto	l13392
 23308  0033E2                     l13390:
 23309                           
 23310                           ; BSR set to: 0
 23311  0033E2  0E00               	movlw	0
 23312  0033E4  0100               	movlb	0	; () banked
 23313  0033E6  6F69               	movwf	(_CDCTxService$6537+1)& (0+255),b
 23314  0033E8  0E00               	movlw	0
 23315  0033EA  6F68               	movwf	_CDCTxService$6537& (0+255),b
 23316  0033EC                     l13392:
 23317                           
 23318                           ; BSR set to: 0
 23319  0033EC  0100               	movlb	0	; () banked
 23320  0033EE  5168               	movf	_CDCTxService$6537& (0+255),w,b
 23321  0033F0  0100               	movlb	0	; () banked
 23322  0033F2  1169               	iorwf	(_CDCTxService$6537+1)& (0+255),w,b
 23323  0033F4  B4D8               	btfsc	status,2,c
 23324  0033F6  D002               	goto	l13396
 23325                           
 23326                           ; BSR set to: 0
 23327                           ;usb_device_cdc.c: 793: {
 23328                           ;usb_device_cdc.c: 794: {PIE3bits.USBIE = 1;};
 23329  0033F8  84A3               	bsf	4003,2,c	;volatile
 23330                           
 23331                           ;usb_device_cdc.c: 795: return;
 23332  0033FA  0012               	return	
 23333  0033FC                     l13396:
 23334                           
 23335                           ; BSR set to: 0
 23336                           ;usb_device_cdc.c: 796: }
 23337                           ;usb_device_cdc.c: 803: if(cdc_trf_state == 3)
 23338  0033FC  0E03               	movlw	3
 23339  0033FE  1850               	xorwf	_cdc_trf_state,w,c
 23340  003400  A4D8               	btfss	status,2,c
 23341  003402  D002               	goto	l2072
 23342                           
 23343                           ; BSR set to: 0
 23344                           ;usb_device_cdc.c: 804: cdc_trf_state = 0;
 23345  003404  0E00               	movlw	0
 23346  003406  6E50               	movwf	_cdc_trf_state,c
 23347  003408                     l2072:
 23348                           
 23349                           ; BSR set to: 0
 23350                           ;usb_device_cdc.c: 809: if(cdc_trf_state == 0)
 23351  003408  5050               	movf	_cdc_trf_state,w,c
 23352  00340A  A4D8               	btfss	status,2,c
 23353  00340C  D002               	goto	l13402
 23354                           
 23355                           ; BSR set to: 0
 23356                           ;usb_device_cdc.c: 810: {
 23357                           ;usb_device_cdc.c: 811: {PIE3bits.USBIE = 1;};
 23358  00340E  84A3               	bsf	4003,2,c	;volatile
 23359                           
 23360                           ;usb_device_cdc.c: 812: return;
 23361  003410  0012               	return	
 23362  003412                     l13402:
 23363                           
 23364                           ; BSR set to: 0
 23365                           ;usb_device_cdc.c: 813: }
 23366                           ;usb_device_cdc.c: 818: if(cdc_trf_state == 2)
 23367  003412  0E02               	movlw	2
 23368  003414  1850               	xorwf	_cdc_trf_state,w,c
 23369  003416  A4D8               	btfss	status,2,c
 23370  003418  D016               	goto	l13408
 23371                           
 23372                           ; BSR set to: 0
 23373                           ;usb_device_cdc.c: 819: {
 23374                           ;usb_device_cdc.c: 820: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 23375  00341A  0E01               	movlw	1
 23376  00341C  0100               	movlb	0	; () banked
 23377  00341E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 23378  003420  0E00               	movlw	0
 23379  003422  0100               	movlb	0	; () banked
 23380  003424  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 23381  003426  0E00               	movlw	0
 23382  003428  0100               	movlb	0	; () banked
 23383  00342A  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 23384  00342C  0E00               	movlw	0
 23385  00342E  0100               	movlb	0	; () banked
 23386  003430  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 23387  003432  0E02               	movlw	2
 23388  003434  ECCA  F025         	call	_USBTransferOnePacket
 23389  003438  C060  F0BD         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 23390  00343C  C061  F0BE         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 23391                           
 23392                           ;usb_device_cdc.c: 822: cdc_trf_state = 3;
 23393  003440  0E03               	movlw	3
 23394  003442  6E50               	movwf	_cdc_trf_state,c
 23395                           
 23396                           ;usb_device_cdc.c: 823: }
 23397  003444  D06F               	goto	l13452
 23398  003446                     l13408:
 23399                           
 23400                           ;usb_device_cdc.c: 824: else if(cdc_trf_state == 1)
 23401  003446  0450               	decf	_cdc_trf_state,w,c
 23402  003448  A4D8               	btfss	status,2,c
 23403  00344A  D06C               	goto	l13452
 23404                           
 23405                           ;usb_device_cdc.c: 825: {
 23406                           ;usb_device_cdc.c: 829: if(cdc_tx_len > sizeof(cdc_data_tx))
 23407  00344C  0E40               	movlw	64
 23408  00344E  0100               	movlb	0	; () banked
 23409  003450  65DA               	cpfsgt	_cdc_tx_len& (0+255),b
 23410  003452  D004               	goto	l2077
 23411                           
 23412                           ; BSR set to: 0
 23413                           ;usb_device_cdc.c: 830: byte_to_send = sizeof(cdc_data_tx);
 23414  003454  0E40               	movlw	64
 23415  003456  0100               	movlb	0	; () banked
 23416  003458  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 23417  00345A  D002               	goto	l13414
 23418  00345C                     l2077:
 23419                           
 23420                           ; BSR set to: 0
 23421                           ;usb_device_cdc.c: 831: else
 23422                           ;usb_device_cdc.c: 832: byte_to_send = cdc_tx_len;
 23423  00345C  C0DA  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 23424  003460                     l13414:
 23425                           
 23426                           ; BSR set to: 0
 23427                           ;usb_device_cdc.c: 837: cdc_tx_len = cdc_tx_len - byte_to_send;
 23428  003460  0100               	movlb	0	; () banked
 23429  003462  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 23430  003464  0800               	sublw	0
 23431  003466  0100               	movlb	0	; () banked
 23432  003468  25DA               	addwf	_cdc_tx_len& (0+255),w,b
 23433  00346A  0100               	movlb	0	; () banked
 23434  00346C  6FDA               	movwf	_cdc_tx_len& (0+255),b
 23435                           
 23436                           ;usb_device_cdc.c: 839: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 23437  00346E  0E00               	movlw	0
 23438  003470  0101               	movlb	1	; () banked
 23439  003472  6F4E               	movwf	_pCDCDst& (0+255),b
 23440  003474  0E05               	movlw	5
 23441  003476  0101               	movlb	1	; () banked
 23442  003478  6F4F               	movwf	(_pCDCDst+1)& (0+255),b
 23443                           
 23444                           ; BSR set to: 1
 23445                           ;usb_device_cdc.c: 841: i = byte_to_send;
 23446  00347A  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 23447                           
 23448                           ; BSR set to: 1
 23449                           ;usb_device_cdc.c: 842: if(cdc_mem_type == 0x00)
 23450  00347E  0100               	movlb	0	; () banked
 23451  003480  51D8               	movf	_cdc_mem_type& (0+255),w,b
 23452  003482  B4D8               	btfsc	status,2,c
 23453  003484  D013               	goto	l13430
 23454  003486  D02A               	goto	l13440
 23455  003488                     l13422:
 23456                           
 23457                           ; BSR set to: 0
 23458                           ;usb_device_cdc.c: 845: {
 23459                           ;usb_device_cdc.c: 846: *pCDCDst.bRam = *pCDCSrc.bRom;
 23460  003488  C151  FFD9         	movff	_pCDCSrc,fsr2l
 23461  00348C  C152  FFDA         	movff	_pCDCSrc+1,fsr2h
 23462  003490  C14E  FFE1         	movff	_pCDCDst,fsr1l
 23463  003494  C14F  FFE2         	movff	_pCDCDst+1,fsr1h
 23464  003498  CFDF FFE7          	movff	indf2,indf1
 23465                           
 23466                           ; BSR set to: 0
 23467                           ;usb_device_cdc.c: 847: pCDCDst.bRam++;
 23468  00349C  0101               	movlb	1	; () banked
 23469  00349E  4B4E               	infsnz	_pCDCDst& (0+255),f,b
 23470  0034A0  2B4F               	incf	(_pCDCDst+1)& (0+255),f,b
 23471                           
 23472                           ; BSR set to: 1
 23473                           ;usb_device_cdc.c: 848: pCDCSrc.bRom++;
 23474  0034A2  0101               	movlb	1	; () banked
 23475  0034A4  4B51               	infsnz	_pCDCSrc& (0+255),f,b
 23476  0034A6  2B52               	incf	(_pCDCSrc+1)& (0+255),f,b
 23477                           
 23478                           ; BSR set to: 1
 23479                           ;usb_device_cdc.c: 849: i--;
 23480  0034A8  0100               	movlb	0	; () banked
 23481  0034AA  076A               	decf	CDCTxService@i& (0+255),f,b
 23482  0034AC                     l13430:
 23483                           
 23484                           ; BSR set to: 0
 23485  0034AC  0100               	movlb	0	; () banked
 23486  0034AE  516A               	movf	CDCTxService@i& (0+255),w,b
 23487  0034B0  0100               	movlb	0	; () banked
 23488  0034B2  B4D8               	btfsc	status,2,c
 23489  0034B4  D018               	goto	l13442
 23490  0034B6  D7E8               	goto	l13422
 23491  0034B8                     l13432:
 23492                           
 23493                           ; BSR set to: 0
 23494                           ;usb_device_cdc.c: 855: {
 23495                           ;usb_device_cdc.c: 856: *pCDCDst.bRam = *pCDCSrc.bRam;
 23496  0034B8  C151  FFD9         	movff	_pCDCSrc,fsr2l
 23497  0034BC  C152  FFDA         	movff	_pCDCSrc+1,fsr2h
 23498  0034C0  C14E  FFE1         	movff	_pCDCDst,fsr1l
 23499  0034C4  C14F  FFE2         	movff	_pCDCDst+1,fsr1h
 23500  0034C8  CFDF FFE7          	movff	indf2,indf1
 23501                           
 23502                           ; BSR set to: 0
 23503                           ;usb_device_cdc.c: 857: pCDCDst.bRam++;
 23504  0034CC  0101               	movlb	1	; () banked
 23505  0034CE  4B4E               	infsnz	_pCDCDst& (0+255),f,b
 23506  0034D0  2B4F               	incf	(_pCDCDst+1)& (0+255),f,b
 23507                           
 23508                           ; BSR set to: 1
 23509                           ;usb_device_cdc.c: 858: pCDCSrc.bRam++;
 23510  0034D2  0101               	movlb	1	; () banked
 23511  0034D4  4B51               	infsnz	_pCDCSrc& (0+255),f,b
 23512  0034D6  2B52               	incf	(_pCDCSrc+1)& (0+255),f,b
 23513                           
 23514                           ; BSR set to: 1
 23515                           ;usb_device_cdc.c: 859: i--;
 23516  0034D8  0100               	movlb	0	; () banked
 23517  0034DA  076A               	decf	CDCTxService@i& (0+255),f,b
 23518  0034DC                     l13440:
 23519                           
 23520                           ; BSR set to: 0
 23521  0034DC  0100               	movlb	0	; () banked
 23522  0034DE  516A               	movf	CDCTxService@i& (0+255),w,b
 23523  0034E0  0100               	movlb	0	; () banked
 23524  0034E2  A4D8               	btfss	status,2,c
 23525  0034E4  D7E9               	goto	l13432
 23526  0034E6                     l13442:
 23527                           
 23528                           ; BSR set to: 0
 23529                           ;usb_device_cdc.c: 860: }
 23530                           ;usb_device_cdc.c: 861: }
 23531                           ;usb_device_cdc.c: 867: if(cdc_tx_len == 0)
 23532  0034E6  0100               	movlb	0	; () banked
 23533  0034E8  51DA               	movf	_cdc_tx_len& (0+255),w,b
 23534  0034EA  A4D8               	btfss	status,2,c
 23535  0034EC  D009               	goto	l13450
 23536                           
 23537                           ; BSR set to: 0
 23538                           ;usb_device_cdc.c: 868: {
 23539                           ;usb_device_cdc.c: 869: if(byte_to_send == 64)
 23540  0034EE  0E40               	movlw	64
 23541  0034F0  0100               	movlb	0	; () banked
 23542  0034F2  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 23543  0034F4  A4D8               	btfss	status,2,c
 23544  0034F6  D002               	goto	l13448
 23545                           
 23546                           ; BSR set to: 0
 23547                           ;usb_device_cdc.c: 870: cdc_trf_state = 2;
 23548  0034F8  0E02               	movlw	2
 23549  0034FA  D001               	goto	L22
 23550  0034FC                     l13448:
 23551                           
 23552                           ; BSR set to: 0
 23553                           ;usb_device_cdc.c: 871: else
 23554                           ;usb_device_cdc.c: 872: cdc_trf_state = 3;
 23555  0034FC  0E03               	movlw	3
 23556  0034FE                     L22:
 23557  0034FE  6E50               	movwf	_cdc_trf_state,c
 23558  003500                     l13450:
 23559                           
 23560                           ; BSR set to: 0
 23561                           ;usb_device_cdc.c: 873: }
 23562                           ;usb_device_cdc.c: 874: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 23563  003500  0E01               	movlw	1
 23564  003502  0100               	movlb	0	; () banked
 23565  003504  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 23566  003506  0E00               	movlw	0
 23567  003508  0100               	movlb	0	; () banked
 23568  00350A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 23569  00350C  0E05               	movlw	5
 23570  00350E  0100               	movlb	0	; () banked
 23571  003510  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 23572  003512  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 23573  003516  0E02               	movlw	2
 23574  003518  ECCA  F025         	call	_USBTransferOnePacket
 23575  00351C  C060  F0BD         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 23576  003520  C061  F0BE         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 23577  003524                     l13452:
 23578                           
 23579                           ;usb_device_cdc.c: 876: }
 23580                           ;usb_device_cdc.c: 878: {PIE3bits.USBIE = 1;};
 23581  003524  84A3               	bsf	4003,2,c	;volatile
 23582  003526  0012               	return		;funcret
 23583  003528                     __end_of_CDCTxService:
 23584                           	opt stack 0
 23585                           tblptru	equ	0xFF8
 23586                           tblptrh	equ	0xFF7
 23587                           tblptrl	equ	0xFF6
 23588                           tablat	equ	0xFF5
 23589                           prodh	equ	0xFF4
 23590                           prodl	equ	0xFF3
 23591                           intcon	equ	0xFF2
 23592                           intcon3	equ	0xFF0
 23593                           indf0	equ	0xFEF
 23594                           postinc0	equ	0xFEE
 23595                           fsr0h	equ	0xFEA
 23596                           fsr0l	equ	0xFE9
 23597                           wreg	equ	0xFE8
 23598                           indf1	equ	0xFE7
 23599                           postdec1	equ	0xFE5
 23600                           fsr1h	equ	0xFE2
 23601                           fsr1l	equ	0xFE1
 23602                           indf2	equ	0xFDF
 23603                           postinc2	equ	0xFDE
 23604                           fsr2h	equ	0xFDA
 23605                           fsr2l	equ	0xFD9
 23606                           status	equ	0xFD8
 23607                           
 23608 ;; *************** function _USBTransferOnePacket *****************
 23609 ;; Defined at:
 23610 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 23611 ;; Parameters:    Size  Location     Type
 23612 ;;  ep              1    wreg     unsigned char 
 23613 ;;  dir             1    0[BANK0 ] unsigned char 
 23614 ;;  data            2    1[BANK0 ] PTR unsigned char 
 23615 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 23616 ;;  len             1    3[BANK0 ] unsigned char 
 23617 ;; Auto vars:     Size  Location     Type
 23618 ;;  ep              1    4[BANK0 ] unsigned char 
 23619 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 23620 ;;		 -> BDT(48), NULL(0), 
 23621 ;; Return value:  Size  Location     Type
 23622 ;;                  2    0[BANK0 ] PTR void 
 23623 ;; Registers used:
 23624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23625 ;; Tracked objects:
 23626 ;;		On entry : 0/0
 23627 ;;		On exit  : 0/0
 23628 ;;		Unchanged: 0/0
 23629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23630 ;;      Params:         0       4       0       0       0       0       0       0       0
 23631 ;;      Locals:         0       3       0       0       0       0       0       0       0
 23632 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23633 ;;      Totals:         0       7       0       0       0       0       0       0       0
 23634 ;;Total ram usage:        7 bytes
 23635 ;; Hardware stack levels used:    1
 23636 ;; Hardware stack levels required when called:   11
 23637 ;; This function calls:
 23638 ;;		Nothing
 23639 ;; This function is called by:
 23640 ;;		_getsUSBUSART
 23641 ;;		_CDCTxService
 23642 ;;		_USBCDCEventHandler
 23643 ;; This function uses a non-reentrant model
 23644 ;;
 23645                           
 23646                           	psect	text85
 23647  004B94                     __ptext85:
 23648                           	opt stack 0
 23649  004B94                     _USBTransferOnePacket:
 23650                           	opt stack 16
 23651                           
 23652                           ;incstack = 0
 23653                           ;USBTransferOnePacket@ep stored from wreg
 23654  004B94  0100               	movlb	0	; () banked
 23655  004B96  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 23656                           
 23657                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 23658                           ;usb_device.c: 762: if(dir != 0)
 23659  004B98  0100               	movlb	0	; () banked
 23660  004B9A  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 23661  004B9C  0100               	movlb	0	; () banked
 23662  004B9E  B4D8               	btfsc	status,2,c
 23663  004BA0  D008               	goto	l12148
 23664                           
 23665                           ; BSR set to: 0
 23666                           ;usb_device.c: 763: {
 23667                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 23668  004BA2  0100               	movlb	0	; () banked
 23669  004BA4  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 23670  004BA6  0D02               	mullw	2
 23671  004BA8  0E3C               	movlw	low _pBDTEntryIn
 23672  004BAA  24F3               	addwf	prodl,w,c
 23673  004BAC  6ED9               	movwf	fsr2l,c
 23674  004BAE  0E00               	movlw	high _pBDTEntryIn
 23675  004BB0  D007               	goto	L23
 23676  004BB2                     l12148:
 23677                           
 23678                           ; BSR set to: 0
 23679                           ;usb_device.c: 767: else
 23680                           ;usb_device.c: 768: {
 23681                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 23682  004BB2  0100               	movlb	0	; () banked
 23683  004BB4  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 23684  004BB6  0D02               	mullw	2
 23685  004BB8  0E40               	movlw	low _pBDTEntryOut
 23686  004BBA  24F3               	addwf	prodl,w,c
 23687  004BBC  6ED9               	movwf	fsr2l,c
 23688  004BBE  0E01               	movlw	high _pBDTEntryOut
 23689  004BC0                     L23:
 23690  004BC0  20F4               	addwfc	prodh,w,c
 23691  004BC2  6EDA               	movwf	fsr2h,c
 23692  004BC4  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 23693  004BC8  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 23694                           
 23695                           ; BSR set to: 0
 23696                           ;usb_device.c: 771: }
 23697                           ;usb_device.c: 775: if(handle == 0)
 23698                           
 23699                           ; BSR set to: 0
 23700  004BCC  0100               	movlb	0	; () banked
 23701  004BCE  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 23702  004BD0  0100               	movlb	0	; () banked
 23703  004BD2  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 23704  004BD4  A4D8               	btfss	status,2,c
 23705  004BD6  D007               	goto	l12156
 23706                           
 23707                           ; BSR set to: 0
 23708                           ;usb_device.c: 776: {
 23709                           ;usb_device.c: 777: return 0;
 23710  004BD8  0E00               	movlw	0
 23711  004BDA  0100               	movlb	0	; () banked
 23712  004BDC  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 23713  004BDE  0E00               	movlw	0
 23714  004BE0  0100               	movlb	0	; () banked
 23715  004BE2  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 23716                           
 23717                           ; BSR set to: 0
 23718  004BE4  0012               	return	
 23719  004BE6                     l12156:
 23720                           
 23721                           ; BSR set to: 0
 23722                           ;usb_device.c: 778: }
 23723                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 23724  004BE6  0100               	movlb	0	; () banked
 23725  004BE8  EE20 F002          	lfsr	2,2
 23726  004BEC  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 23727  004BEE  26D9               	addwf	fsr2l,f,c
 23728  004BF0  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 23729  004BF2  22DA               	addwfc	fsr2h,f,c
 23730  004BF4  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 23731  004BF8  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 23732                           
 23733                           ;usb_device.c: 781: handle->CNT = len;
 23734  004BFC  0100               	movlb	0	; () banked
 23735  004BFE  EE20 F001          	lfsr	2,1
 23736  004C02  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 23737  004C04  26D9               	addwf	fsr2l,f,c
 23738  004C06  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 23739  004C08  22DA               	addwfc	fsr2h,f,c
 23740  004C0A  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 23741                           
 23742                           ; BSR set to: 0
 23743                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 23744  004C0E  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 23745  004C12  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 23746  004C16  0E40               	movlw	64
 23747  004C18  16DF               	andwf	indf2,f,c
 23748                           
 23749                           ; BSR set to: 0
 23750                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 23751  004C1A  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 23752  004C1E  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 23753  004C22  0E00               	movlw	0
 23754  004C24  86DB               	bsf	plusw2,3,c
 23755                           
 23756                           ; BSR set to: 0
 23757                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 23758  004C26  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 23759  004C2A  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 23760  004C2E  0E00               	movlw	0
 23761  004C30  8EDB               	bsf	plusw2,7,c
 23762                           
 23763                           ; BSR set to: 0
 23764                           ;usb_device.c: 787: if(dir != 0)
 23765  004C32  0100               	movlb	0	; () banked
 23766  004C34  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 23767  004C36  0100               	movlb	0	; () banked
 23768  004C38  B4D8               	btfsc	status,2,c
 23769  004C3A  D008               	goto	l12168
 23770                           
 23771                           ; BSR set to: 0
 23772                           ;usb_device.c: 788: {
 23773                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 23774  004C3C  0100               	movlb	0	; () banked
 23775  004C3E  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 23776  004C40  0D02               	mullw	2
 23777  004C42  0E3C               	movlw	low _pBDTEntryIn
 23778  004C44  24F3               	addwf	prodl,w,c
 23779  004C46  6ED9               	movwf	fsr2l,c
 23780  004C48  0E00               	movlw	high _pBDTEntryIn
 23781  004C4A  D007               	goto	L24
 23782  004C4C                     l12168:
 23783                           
 23784                           ; BSR set to: 0
 23785                           ;usb_device.c: 792: else
 23786                           ;usb_device.c: 793: {
 23787                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 23788  004C4C  0100               	movlb	0	; () banked
 23789  004C4E  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 23790  004C50  0D02               	mullw	2
 23791  004C52  0E40               	movlw	low _pBDTEntryOut
 23792  004C54  24F3               	addwf	prodl,w,c
 23793  004C56  6ED9               	movwf	fsr2l,c
 23794  004C58  0E01               	movlw	high _pBDTEntryOut
 23795  004C5A                     L24:
 23796  004C5A  20F4               	addwfc	prodh,w,c
 23797  004C5C  6EDA               	movwf	fsr2h,c
 23798  004C5E  0E04               	movlw	4
 23799  004C60  1ADF               	xorwf	indf2,f,c
 23800                           
 23801                           ; BSR set to: 0
 23802                           ;usb_device.c: 796: }
 23803                           ;usb_device.c: 797: return (void*)handle;
 23804                           
 23805                           ; BSR set to: 0
 23806  004C62  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 23807  004C66  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 23808  004C6A  0012               	return	
 23809  004C6C                     __end_of_USBTransferOnePacket:
 23810                           	opt stack 0
 23811                           tblptru	equ	0xFF8
 23812                           tblptrh	equ	0xFF7
 23813                           tblptrl	equ	0xFF6
 23814                           tablat	equ	0xFF5
 23815                           prodh	equ	0xFF4
 23816                           prodl	equ	0xFF3
 23817                           intcon	equ	0xFF2
 23818                           intcon3	equ	0xFF0
 23819                           indf0	equ	0xFEF
 23820                           postinc0	equ	0xFEE
 23821                           fsr0h	equ	0xFEA
 23822                           fsr0l	equ	0xFE9
 23823                           wreg	equ	0xFE8
 23824                           indf1	equ	0xFE7
 23825                           postdec1	equ	0xFE5
 23826                           fsr1h	equ	0xFE2
 23827                           fsr1l	equ	0xFE1
 23828                           indf2	equ	0xFDF
 23829                           postinc2	equ	0xFDE
 23830                           postdec2	equ	0xFDD
 23831                           plusw2	equ	0xFDB
 23832                           fsr2h	equ	0xFDA
 23833                           fsr2l	equ	0xFD9
 23834                           status	equ	0xFD8
 23835                           
 23836 ;; *************** function _USBDeviceInit *****************
 23837 ;; Defined at:
 23838 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 23839 ;; Parameters:    Size  Location     Type
 23840 ;;		None
 23841 ;; Auto vars:     Size  Location     Type
 23842 ;;  i               1    8[BANK0 ] unsigned char 
 23843 ;; Return value:  Size  Location     Type
 23844 ;;		None               void
 23845 ;; Registers used:
 23846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23847 ;; Tracked objects:
 23848 ;;		On entry : 0/0
 23849 ;;		On exit  : 0/0
 23850 ;;		Unchanged: 0/0
 23851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23852 ;;      Params:         0       0       0       0       0       0       0       0       0
 23853 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23854 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23855 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23856 ;;Total ram usage:        1 bytes
 23857 ;; Hardware stack levels used:    1
 23858 ;; Hardware stack levels required when called:   12
 23859 ;; This function calls:
 23860 ;;		_memset
 23861 ;; This function is called by:
 23862 ;;		_main
 23863 ;; This function uses a non-reentrant model
 23864 ;;
 23865                           
 23866                           	psect	text86
 23867  003528                     __ptext86:
 23868                           	opt stack 0
 23869  003528                     _USBDeviceInit:
 23870                           	opt stack 18
 23871                           
 23872                           ;usb_device.c: 239: uint8_t i;
 23873                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 23874                           
 23875                           ; BSR set to: 0
 23876                           ;incstack = 0
 23877  003528  94A3               	bcf	4003,2,c	;volatile
 23878                           
 23879                           ;usb_device.c: 244: {UEIR = 0;};
 23880  00352A  0E00               	movlw	0
 23881  00352C  6E67               	movwf	3943,c	;volatile
 23882                           
 23883                           ;usb_device.c: 247: {UIR = 0;};
 23884  00352E  0E00               	movlw	0
 23885  003530  6E65               	movwf	3941,c	;volatile
 23886                           
 23887                           ;usb_device.c: 250: UEP0 = 0;
 23888  003532  0E00               	movlw	0
 23889  003534  6E6A               	movwf	3946,c	;volatile
 23890                           
 23891                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 23892  003536  0E6B               	movlw	107
 23893  003538  0100               	movlb	0	; () banked
 23894  00353A  6F60               	movwf	memset@p1& (0+255),b
 23895  00353C  0E0F               	movlw	15
 23896  00353E  0100               	movlb	0	; () banked
 23897  003540  6F61               	movwf	(memset@p1+1)& (0+255),b
 23898  003542  0E00               	movlw	0
 23899  003544  0100               	movlb	0	; () banked
 23900  003546  6F63               	movwf	(memset@c+1)& (0+255),b
 23901  003548  0E00               	movlw	0
 23902  00354A  6F62               	movwf	memset@c& (0+255),b
 23903  00354C  0E00               	movlw	0
 23904  00354E  0100               	movlb	0	; () banked
 23905  003550  6F65               	movwf	(memset@n+1)& (0+255),b
 23906  003552  0E02               	movlw	2
 23907  003554  6F64               	movwf	memset@n& (0+255),b
 23908  003556  EC63  F033         	call	_memset	;wreg free
 23909                           
 23910                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 23911  00355A  0E16               	movlw	22
 23912  00355C  6E62               	movwf	3938,c	;volatile
 23913  00355E  0E9F               	movlw	159
 23914  003560  6E66               	movwf	3942,c	;volatile
 23915  003562  0E7B               	movlw	123
 23916  003564  6E64               	movwf	3940,c	;volatile
 23917                           
 23918                           ;usb_device.c: 257: ;
 23919                           ;usb_device.c: 260: ;
 23920                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 23921  003566  0E00               	movlw	0
 23922  003568  0100               	movlb	0	; () banked
 23923  00356A  6F68               	movwf	USBDeviceInit@i& (0+255),b
 23924  00356C                     l14570:
 23925                           
 23926                           ; BSR set to: 0
 23927  00356C  0E0B               	movlw	11
 23928  00356E  0100               	movlb	0	; () banked
 23929  003570  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 23930  003572  D001               	goto	l14574
 23931  003574  D010               	goto	l1712
 23932  003576                     l14574:
 23933                           
 23934                           ; BSR set to: 0
 23935                           ;usb_device.c: 264: {
 23936                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 23937  003576  0100               	movlb	0	; () banked
 23938  003578  5168               	movf	USBDeviceInit@i& (0+255),w,b
 23939  00357A  0D04               	mullw	4
 23940  00357C  0E00               	movlw	0
 23941  00357E  24F3               	addwf	prodl,w,c
 23942  003580  6ED9               	movwf	fsr2l,c
 23943  003582  0E04               	movlw	4
 23944  003584  20F4               	addwfc	prodh,w,c
 23945  003586  6EDA               	movwf	fsr2h,c
 23946  003588  6ADE               	clrf	postinc2,c
 23947  00358A  6ADE               	clrf	postinc2,c
 23948  00358C  6ADE               	clrf	postinc2,c
 23949  00358E  6ADD               	clrf	postdec2,c
 23950                           
 23951                           ; BSR set to: 0
 23952  003590  0100               	movlb	0	; () banked
 23953  003592  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 23954  003594  D7EB               	goto	l14570
 23955  003596                     l1712:
 23956                           
 23957                           ; BSR set to: 0
 23958                           ;usb_device.c: 266: }
 23959                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 23960  003596  8C60               	bsf	3936,6,c	;volatile
 23961                           
 23962                           ; BSR set to: 0
 23963                           ;usb_device.c: 272: UADDR = 0x00;
 23964  003598  0E00               	movlw	0
 23965  00359A  6E63               	movwf	3939,c	;volatile
 23966                           
 23967                           ; BSR set to: 0
 23968                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 23969  00359C  9860               	bcf	3936,4,c	;volatile
 23970                           
 23971                           ; BSR set to: 0
 23972                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 23973  00359E  9C60               	bcf	3936,6,c	;volatile
 23974                           
 23975                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 23976  0035A0  D009               	goto	l14594
 23977  0035A2                     l14586:
 23978                           
 23979                           ;usb_device.c: 282: {
 23980                           ;usb_device.c: 283: (UIR &= 0xF7);
 23981  0035A2  9665               	bcf	3941,3,c	;volatile
 23982                           
 23983                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 23984  0035A4  0E00               	movlw	0
 23985  0035A6  6E39               	movwf	_inPipes+3,c	;volatile
 23986                           
 23987                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 23988  0035A8  0E00               	movlw	0
 23989  0035AA  6E31               	movwf	_outPipes+3,c	;volatile
 23990                           
 23991                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 23992  0035AC  0E00               	movlw	0
 23993  0035AE  6E33               	movwf	_outPipes+5,c	;volatile
 23994  0035B0  0E00               	movlw	0
 23995  0035B2  6E32               	movwf	_outPipes+4,c	;volatile
 23996  0035B4                     l14594:
 23997  0035B4  B665               	btfsc	3941,3,c	;volatile
 23998  0035B6  D7F5               	goto	l14586
 23999                           
 24000                           ;usb_device.c: 288: }
 24001                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 24002  0035B8  0E01               	movlw	1
 24003  0035BA  0100               	movlb	0	; () banked
 24004  0035BC  6FD3               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 24005                           
 24006                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 24007  0035BE  0E01               	movlw	1
 24008  0035C0  0100               	movlb	0	; () banked
 24009  0035C2  6FD4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 24010                           
 24011                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 24012  0035C4  0E00               	movlw	0
 24013  0035C6  0100               	movlb	0	; () banked
 24014  0035C8  6FD0               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 24015                           
 24016                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 24017  0035CA  0E00               	movlw	0
 24018  0035CC  0100               	movlb	0	; () banked
 24019  0035CE  6FD1               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 24020                           
 24021                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 24022  0035D0  0E00               	movlw	0
 24023  0035D2  0100               	movlb	0	; () banked
 24024  0035D4  6FCF               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24025                           
 24026                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 24027  0035D6  0E00               	movlw	0
 24028  0035D8  0100               	movlb	0	; () banked
 24029  0035DA  6F68               	movwf	USBDeviceInit@i& (0+255),b
 24030  0035DC                     l14598:
 24031                           
 24032                           ; BSR set to: 0
 24033  0035DC  0E02               	movlw	2
 24034  0035DE  0100               	movlb	0	; () banked
 24035  0035E0  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 24036  0035E2  D001               	goto	l14602
 24037  0035E4  D033               	goto	l14608
 24038  0035E6                     l14602:
 24039                           
 24040                           ; BSR set to: 0
 24041                           ;usb_device.c: 302: {
 24042                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 24043  0035E6  0100               	movlb	0	; () banked
 24044  0035E8  5168               	movf	USBDeviceInit@i& (0+255),w,b
 24045  0035EA  0D02               	mullw	2
 24046  0035EC  0E3C               	movlw	low _pBDTEntryIn
 24047  0035EE  24F3               	addwf	prodl,w,c
 24048  0035F0  6ED9               	movwf	fsr2l,c
 24049  0035F2  0E00               	movlw	high _pBDTEntryIn
 24050  0035F4  20F4               	addwfc	prodh,w,c
 24051  0035F6  6EDA               	movwf	fsr2h,c
 24052  0035F8  0E00               	movlw	0
 24053  0035FA  6EDE               	movwf	postinc2,c
 24054  0035FC  0E00               	movlw	0
 24055  0035FE  6EDD               	movwf	postdec2,c
 24056                           
 24057                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 24058  003600  0100               	movlb	0	; () banked
 24059  003602  5168               	movf	USBDeviceInit@i& (0+255),w,b
 24060  003604  0D02               	mullw	2
 24061  003606  0E40               	movlw	low _pBDTEntryOut
 24062  003608  24F3               	addwf	prodl,w,c
 24063  00360A  6ED9               	movwf	fsr2l,c
 24064  00360C  0E01               	movlw	high _pBDTEntryOut
 24065  00360E  20F4               	addwfc	prodh,w,c
 24066  003610  6EDA               	movwf	fsr2h,c
 24067  003612  0E00               	movlw	0
 24068  003614  6EDE               	movwf	postinc2,c
 24069  003616  0E00               	movlw	0
 24070  003618  6EDD               	movwf	postdec2,c
 24071                           
 24072                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 24073  00361A  0100               	movlb	0	; () banked
 24074  00361C  5168               	movf	USBDeviceInit@i& (0+255),w,b
 24075  00361E  0D01               	mullw	1
 24076  003620  0EB7               	movlw	low _ep_data_in
 24077  003622  24F3               	addwf	prodl,w,c
 24078  003624  6ED9               	movwf	fsr2l,c
 24079  003626  0E00               	movlw	high _ep_data_in
 24080  003628  20F4               	addwfc	prodh,w,c
 24081  00362A  6EDA               	movwf	fsr2h,c
 24082  00362C  0E00               	movlw	0
 24083  00362E  6EDF               	movwf	indf2,c
 24084                           
 24085                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 24086  003630  0100               	movlb	0	; () banked
 24087  003632  5168               	movf	USBDeviceInit@i& (0+255),w,b
 24088  003634  0D01               	mullw	1
 24089  003636  0EBA               	movlw	low _ep_data_out
 24090  003638  24F3               	addwf	prodl,w,c
 24091  00363A  6ED9               	movwf	fsr2l,c
 24092  00363C  0E00               	movlw	high _ep_data_out
 24093  00363E  20F4               	addwfc	prodh,w,c
 24094  003640  6EDA               	movwf	fsr2h,c
 24095  003642  0E00               	movlw	0
 24096  003644  6EDF               	movwf	indf2,c
 24097                           
 24098                           ; BSR set to: 0
 24099  003646  0100               	movlb	0	; () banked
 24100  003648  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 24101  00364A  D7C8               	goto	l14598
 24102  00364C                     l14608:
 24103                           
 24104                           ; BSR set to: 0
 24105                           ;usb_device.c: 307: }
 24106                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 24107  00364C  0E08               	movlw	8
 24108  00364E  6E3C               	movwf	_pBDTEntryIn,c
 24109  003650  0E04               	movlw	4
 24110  003652  6E3D               	movwf	_pBDTEntryIn+1,c
 24111                           
 24112                           ; BSR set to: 0
 24113                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 24114  003654  0E16               	movlw	22
 24115  003656  6E6A               	movwf	3946,c	;volatile
 24116                           
 24117                           ; BSR set to: 0
 24118                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 24119  003658  0E04               	movlw	4
 24120  00365A  0104               	movlb	4	; () banked
 24121  00365C  6F03               	movwf	3,b	;volatile
 24122  00365E  0E30               	movlw	48
 24123  003660  6F02               	movwf	2,b	;volatile
 24124                           
 24125                           ; BSR set to: 4
 24126                           ;usb_device.c: 315: BDT[0].CNT = 8;
 24127  003662  0E08               	movlw	8
 24128  003664  0104               	movlb	4	; () banked
 24129  003666  6F01               	movwf	1,b	;volatile
 24130                           
 24131                           ; BSR set to: 4
 24132                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 24133  003668  0E04               	movlw	4
 24134  00366A  0104               	movlb	4	; () banked
 24135  00366C  6F00               	movwf	0,b	;volatile
 24136                           
 24137                           ; BSR set to: 4
 24138                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 24139  00366E  0104               	movlb	4	; () banked
 24140  003670  8F00               	bsf	0,7,b	;volatile
 24141                           
 24142                           ; BSR set to: 4
 24143                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 24144  003672  0E00               	movlw	0
 24145  003674  6E58               	movwf	_USBActiveConfiguration,c	;volatile
 24146                           
 24147                           ; BSR set to: 4
 24148                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 24149  003676  0E00               	movlw	0
 24150  003678  0100               	movlb	0	; () banked
 24151  00367A  6FD2               	movwf	_USBDeviceState& (0+255),b	;volatile
 24152                           
 24153                           ; BSR set to: 0
 24154  00367C  0012               	return		;funcret
 24155  00367E                     __end_of_USBDeviceInit:
 24156                           	opt stack 0
 24157                           tblptru	equ	0xFF8
 24158                           tblptrh	equ	0xFF7
 24159                           tblptrl	equ	0xFF6
 24160                           tablat	equ	0xFF5
 24161                           prodh	equ	0xFF4
 24162                           prodl	equ	0xFF3
 24163                           intcon	equ	0xFF2
 24164                           intcon3	equ	0xFF0
 24165                           indf0	equ	0xFEF
 24166                           postinc0	equ	0xFEE
 24167                           fsr0h	equ	0xFEA
 24168                           fsr0l	equ	0xFE9
 24169                           wreg	equ	0xFE8
 24170                           indf1	equ	0xFE7
 24171                           postdec1	equ	0xFE5
 24172                           fsr1h	equ	0xFE2
 24173                           fsr1l	equ	0xFE1
 24174                           indf2	equ	0xFDF
 24175                           postinc2	equ	0xFDE
 24176                           postdec2	equ	0xFDD
 24177                           plusw2	equ	0xFDB
 24178                           fsr2h	equ	0xFDA
 24179                           fsr2l	equ	0xFD9
 24180                           status	equ	0xFD8
 24181                           
 24182 ;; *************** function _memset *****************
 24183 ;; Defined at:
 24184 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 24185 ;; Parameters:    Size  Location     Type
 24186 ;;  p1              2    0[BANK0 ] PTR void 
 24187 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 24188 ;;  c               2    2[BANK0 ] int 
 24189 ;;  n               2    4[BANK0 ] unsigned int 
 24190 ;; Auto vars:     Size  Location     Type
 24191 ;;  p               2    6[BANK0 ] PTR unsigned char 
 24192 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 24193 ;; Return value:  Size  Location     Type
 24194 ;;                  2    0[BANK0 ] PTR void 
 24195 ;; Registers used:
 24196 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24197 ;; Tracked objects:
 24198 ;;		On entry : 0/0
 24199 ;;		On exit  : 0/0
 24200 ;;		Unchanged: 0/0
 24201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24202 ;;      Params:         0       6       0       0       0       0       0       0       0
 24203 ;;      Locals:         0       2       0       0       0       0       0       0       0
 24204 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24205 ;;      Totals:         0       8       0       0       0       0       0       0       0
 24206 ;;Total ram usage:        8 bytes
 24207 ;; Hardware stack levels used:    1
 24208 ;; Hardware stack levels required when called:   11
 24209 ;; This function calls:
 24210 ;;		Nothing
 24211 ;; This function is called by:
 24212 ;;		_USBDeviceInit
 24213 ;; This function uses a non-reentrant model
 24214 ;;
 24215                           
 24216                           	psect	text87
 24217  0066C6                     __ptext87:
 24218                           	opt stack 0
 24219  0066C6                     _memset:
 24220                           	opt stack 18
 24221                           
 24222                           ; BSR set to: 0
 24223                           ;incstack = 0
 24224  0066C6  C060  F066         	movff	memset@p1,memset@p
 24225  0066CA  C061  F067         	movff	memset@p1+1,memset@p+1
 24226  0066CE  D009               	goto	l14540
 24227  0066D0                     l14536:
 24228  0066D0  C066  FFD9         	movff	memset@p,fsr2l
 24229  0066D4  C067  FFDA         	movff	memset@p+1,fsr2h
 24230  0066D8  C062  FFDF         	movff	memset@c,indf2
 24231  0066DC  0100               	movlb	0	; () banked
 24232  0066DE  4B66               	infsnz	memset@p& (0+255),f,b
 24233  0066E0  2B67               	incf	(memset@p+1)& (0+255),f,b
 24234  0066E2                     l14540:
 24235  0066E2  0100               	movlb	0	; () banked
 24236  0066E4  0764               	decf	memset@n& (0+255),f,b
 24237  0066E6  A0D8               	btfss	status,0,c
 24238  0066E8  0765               	decf	(memset@n+1)& (0+255),f,b
 24239  0066EA  0100               	movlb	0	; () banked
 24240  0066EC  2964               	incf	memset@n& (0+255),w,b
 24241  0066EE  E1F0               	bnz	l14536
 24242  0066F0  0100               	movlb	0	; () banked
 24243  0066F2  2965               	incf	(memset@n+1)& (0+255),w,b
 24244  0066F4  B4D8               	btfsc	status,2,c
 24245  0066F6  0012               	return	
 24246  0066F8  D7EB               	goto	l14536
 24247  0066FA                     __end_of_memset:
 24248                           	opt stack 0
 24249                           tblptru	equ	0xFF8
 24250                           tblptrh	equ	0xFF7
 24251                           tblptrl	equ	0xFF6
 24252                           tablat	equ	0xFF5
 24253                           prodh	equ	0xFF4
 24254                           prodl	equ	0xFF3
 24255                           intcon	equ	0xFF2
 24256                           intcon3	equ	0xFF0
 24257                           indf0	equ	0xFEF
 24258                           postinc0	equ	0xFEE
 24259                           fsr0h	equ	0xFEA
 24260                           fsr0l	equ	0xFE9
 24261                           wreg	equ	0xFE8
 24262                           indf1	equ	0xFE7
 24263                           postdec1	equ	0xFE5
 24264                           fsr1h	equ	0xFE2
 24265                           fsr1l	equ	0xFE1
 24266                           indf2	equ	0xFDF
 24267                           postinc2	equ	0xFDE
 24268                           postdec2	equ	0xFDD
 24269                           plusw2	equ	0xFDB
 24270                           fsr2h	equ	0xFDA
 24271                           fsr2l	equ	0xFD9
 24272                           status	equ	0xFD8
 24273                           
 24274 ;; *************** function _USBDeviceAttach *****************
 24275 ;; Defined at:
 24276 ;;		line 1046 in file "../Includes/Usb/Framework/usb_device.c"
 24277 ;; Parameters:    Size  Location     Type
 24278 ;;		None
 24279 ;; Auto vars:     Size  Location     Type
 24280 ;;		None
 24281 ;; Return value:  Size  Location     Type
 24282 ;;		None               void
 24283 ;; Registers used:
 24284 ;;		wreg, status,2
 24285 ;; Tracked objects:
 24286 ;;		On entry : 0/0
 24287 ;;		On exit  : 0/0
 24288 ;;		Unchanged: 0/0
 24289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24290 ;;      Params:         0       0       0       0       0       0       0       0       0
 24291 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24292 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24293 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24294 ;;Total ram usage:        0 bytes
 24295 ;; Hardware stack levels used:    1
 24296 ;; Hardware stack levels required when called:   11
 24297 ;; This function calls:
 24298 ;;		Nothing
 24299 ;; This function is called by:
 24300 ;;		_main
 24301 ;; This function uses a non-reentrant model
 24302 ;;
 24303                           
 24304                           	psect	text88
 24305  0066FA                     __ptext88:
 24306                           	opt stack 0
 24307  0066FA                     _USBDeviceAttach:
 24308                           	opt stack 19
 24309                           
 24310                           ;usb_device.c: 1050: {
 24311                           ;usb_device.c: 1051: if(1 == 1)
 24312                           
 24313                           ; BSR set to: 0
 24314                           ;incstack = 0
 24315  0066FA  0100               	movlb	0	; () banked
 24316  0066FC  51D2               	movf	_USBDeviceState& (0+255),w,b	;volatile
 24317  0066FE  A4D8               	btfss	status,2,c
 24318  006700  0012               	return	
 24319                           
 24320                           ; BSR set to: 0
 24321                           ;usb_device.c: 1052: {
 24322                           ;usb_device.c: 1054: UCON = 0;
 24323  006702  0E00               	movlw	0
 24324  006704  6E60               	movwf	3936,c	;volatile
 24325                           
 24326                           ;usb_device.c: 1057: UIE = 0;
 24327  006706  0E00               	movlw	0
 24328  006708  6E64               	movwf	3940,c	;volatile
 24329                           
 24330                           ;usb_device.c: 1061: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 24331  00670A  0E16               	movlw	22
 24332  00670C  6E62               	movwf	3938,c	;volatile
 24333  00670E  0E9F               	movlw	159
 24334  006710  6E66               	movwf	3942,c	;volatile
 24335  006712  0E7B               	movlw	123
 24336  006714  6E64               	movwf	3940,c	;volatile
 24337                           
 24338                           ; BSR set to: 0
 24339                           ;usb_device.c: 1063: {RCONbits.IPEN = 1;IPR3bits.USBIP = 1;PIE3bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 24340  006716  8ED0               	bsf	4048,7,c	;volatile
 24341                           
 24342                           ; BSR set to: 0
 24343  006718  84A5               	bsf	4005,2,c	;volatile
 24344                           
 24345                           ; BSR set to: 0
 24346  00671A  84A3               	bsf	4003,2,c	;volatile
 24347                           
 24348                           ; BSR set to: 0
 24349  00671C  8EF2               	bsf	intcon,7,c	;volatile
 24350                           
 24351                           ;usb_device.c: 1066: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 24352  00671E  D001               	goto	l1773
 24353  006720                     l1774:
 24354  006720  8660               	bsf	3936,3,c	;volatile
 24355  006722                     l1773:
 24356  006722  A660               	btfss	3936,3,c	;volatile
 24357  006724  D7FD               	goto	l1774
 24358                           
 24359                           ;usb_device.c: 1069: USBDeviceState = ATTACHED_STATE;
 24360  006726  0E01               	movlw	1
 24361  006728  0100               	movlb	0	; () banked
 24362  00672A  6FD2               	movwf	_USBDeviceState& (0+255),b	;volatile
 24363                           
 24364                           ; BSR set to: 0
 24365  00672C  0012               	return	
 24366  00672E                     __end_of_USBDeviceAttach:
 24367                           	opt stack 0
 24368                           tblptru	equ	0xFF8
 24369                           tblptrh	equ	0xFF7
 24370                           tblptrl	equ	0xFF6
 24371                           tablat	equ	0xFF5
 24372                           prodh	equ	0xFF4
 24373                           prodl	equ	0xFF3
 24374                           intcon	equ	0xFF2
 24375                           intcon3	equ	0xFF0
 24376                           indf0	equ	0xFEF
 24377                           postinc0	equ	0xFEE
 24378                           fsr0h	equ	0xFEA
 24379                           fsr0l	equ	0xFE9
 24380                           wreg	equ	0xFE8
 24381                           indf1	equ	0xFE7
 24382                           postdec1	equ	0xFE5
 24383                           fsr1h	equ	0xFE2
 24384                           fsr1l	equ	0xFE1
 24385                           indf2	equ	0xFDF
 24386                           postinc2	equ	0xFDE
 24387                           postdec2	equ	0xFDD
 24388                           plusw2	equ	0xFDB
 24389                           fsr2h	equ	0xFDA
 24390                           fsr2l	equ	0xFD9
 24391                           status	equ	0xFD8
 24392                           
 24393 ;; *************** function _SYSTEM_Initialize *****************
 24394 ;; Defined at:
 24395 ;;		line 93 in file "../Includes/MccGenerated/mcc.c"
 24396 ;; Parameters:    Size  Location     Type
 24397 ;;		None
 24398 ;; Auto vars:     Size  Location     Type
 24399 ;;		None
 24400 ;; Return value:  Size  Location     Type
 24401 ;;		None               void
 24402 ;; Registers used:
 24403 ;;		wreg, status,2, status,0, cstack
 24404 ;; Tracked objects:
 24405 ;;		On entry : 0/0
 24406 ;;		On exit  : 0/0
 24407 ;;		Unchanged: 0/0
 24408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24409 ;;      Params:         0       0       0       0       0       0       0       0       0
 24410 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24411 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24412 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24413 ;;Total ram usage:        0 bytes
 24414 ;; Hardware stack levels used:    1
 24415 ;; Hardware stack levels required when called:   13
 24416 ;; This function calls:
 24417 ;;		_ADC_Initialize
 24418 ;;		_CMP1_Initialize
 24419 ;;		_EUSART_Initialize
 24420 ;;		_OSCILLATOR_Initialize
 24421 ;;		_PIN_MANAGER_Initialize
 24422 ;;		_TMR1_Initialize
 24423 ;;		_TMR2_Initialize
 24424 ;;		_TMR3_Initialize
 24425 ;; This function is called by:
 24426 ;;		_main
 24427 ;; This function uses a non-reentrant model
 24428 ;;
 24429                           
 24430                           	psect	text89
 24431  0068D8                     __ptext89:
 24432                           	opt stack 0
 24433  0068D8                     _SYSTEM_Initialize:
 24434                           	opt stack 17
 24435                           
 24436                           ;mcc.c: 95: OSCILLATOR_Initialize();
 24437                           
 24438                           ; BSR set to: 0
 24439                           ;incstack = 0
 24440  0068D8  ECF2  F034         	call	_OSCILLATOR_Initialize	;wreg free
 24441                           
 24442                           ;mcc.c: 96: PIN_MANAGER_Initialize();
 24443  0068DC  EC22  F031         	call	_PIN_MANAGER_Initialize	;wreg free
 24444                           
 24445                           ;mcc.c: 98: TMR1_Initialize();
 24446  0068E0  ECF6  F032         	call	_TMR1_Initialize	;wreg free
 24447                           
 24448                           ;mcc.c: 99: TMR2_Initialize();
 24449  0068E4  EC12  F035         	call	_TMR2_Initialize	;wreg free
 24450                           
 24451                           ;mcc.c: 100: TMR3_Initialize();
 24452  0068E8  EC7D  F034         	call	_TMR3_Initialize	;wreg free
 24453                           
 24454                           ;mcc.c: 101: EUSART_Initialize();
 24455  0068EC  EC25  F032         	call	_EUSART_Initialize	;wreg free
 24456                           
 24457                           ;mcc.c: 102: ADC_Initialize();
 24458  0068F0  ECB8  F034         	call	_ADC_Initialize	;wreg free
 24459                           
 24460                           ;mcc.c: 103: CMP1_Initialize();
 24461  0068F4  EC2E  F035         	call	_CMP1_Initialize	;wreg free
 24462  0068F8  0012               	return		;funcret
 24463  0068FA                     __end_of_SYSTEM_Initialize:
 24464                           	opt stack 0
 24465                           tblptru	equ	0xFF8
 24466                           tblptrh	equ	0xFF7
 24467                           tblptrl	equ	0xFF6
 24468                           tablat	equ	0xFF5
 24469                           prodh	equ	0xFF4
 24470                           prodl	equ	0xFF3
 24471                           intcon	equ	0xFF2
 24472                           intcon3	equ	0xFF0
 24473                           indf0	equ	0xFEF
 24474                           postinc0	equ	0xFEE
 24475                           fsr0h	equ	0xFEA
 24476                           fsr0l	equ	0xFE9
 24477                           wreg	equ	0xFE8
 24478                           indf1	equ	0xFE7
 24479                           postdec1	equ	0xFE5
 24480                           fsr1h	equ	0xFE2
 24481                           fsr1l	equ	0xFE1
 24482                           indf2	equ	0xFDF
 24483                           postinc2	equ	0xFDE
 24484                           postdec2	equ	0xFDD
 24485                           plusw2	equ	0xFDB
 24486                           fsr2h	equ	0xFDA
 24487                           fsr2l	equ	0xFD9
 24488                           status	equ	0xFD8
 24489                           
 24490 ;; *************** function _TMR3_Initialize *****************
 24491 ;; Defined at:
 24492 ;;		line 67 in file "../Includes/MccGenerated/tmr3.c"
 24493 ;; Parameters:    Size  Location     Type
 24494 ;;		None
 24495 ;; Auto vars:     Size  Location     Type
 24496 ;;		None
 24497 ;; Return value:  Size  Location     Type
 24498 ;;		None               void
 24499 ;; Registers used:
 24500 ;;		wreg, status,2, cstack
 24501 ;; Tracked objects:
 24502 ;;		On entry : 0/0
 24503 ;;		On exit  : 0/0
 24504 ;;		Unchanged: 0/0
 24505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24506 ;;      Params:         0       0       0       0       0       0       0       0       0
 24507 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24508 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24509 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24510 ;;Total ram usage:        0 bytes
 24511 ;; Hardware stack levels used:    1
 24512 ;; Hardware stack levels required when called:   12
 24513 ;; This function calls:
 24514 ;;		_TMR3_StartTimer
 24515 ;; This function is called by:
 24516 ;;		_SYSTEM_Initialize
 24517 ;; This function uses a non-reentrant model
 24518 ;;
 24519                           
 24520                           	psect	text90
 24521  0068FA                     __ptext90:
 24522                           	opt stack 0
 24523  0068FA                     _TMR3_Initialize:
 24524                           	opt stack 17
 24525                           
 24526                           ;tmr3.c: 72: T3CON = 0x04;
 24527                           
 24528                           ;incstack = 0
 24529  0068FA  0E04               	movlw	4
 24530  0068FC  6EB1               	movwf	4017,c	;volatile
 24531                           
 24532                           ;tmr3.c: 75: T3GCON = 0x00;
 24533  0068FE  0E00               	movlw	0
 24534  006900  6EB4               	movwf	4020,c	;volatile
 24535                           
 24536                           ;tmr3.c: 78: TMR3H = 0xD5;
 24537  006902  0ED5               	movlw	213
 24538  006904  6EB3               	movwf	4019,c	;volatile
 24539                           
 24540                           ;tmr3.c: 81: TMR3L = 0xD0;
 24541  006906  0ED0               	movlw	208
 24542  006908  6EB2               	movwf	4018,c	;volatile
 24543                           
 24544                           ;tmr3.c: 84: timer3ReloadVal=TMR3;
 24545  00690A  CFB2 F0C7          	movff	4018,_timer3ReloadVal	;volatile
 24546  00690E  CFB3 F0C8          	movff	4019,_timer3ReloadVal+1	;volatile
 24547                           
 24548                           ;tmr3.c: 87: PIR2bits.TMR3IF = 0;
 24549  006912  92A1               	bcf	4001,1,c	;volatile
 24550                           
 24551                           ;tmr3.c: 90: PIE2bits.TMR3IE = 1;
 24552  006914  82A0               	bsf	4000,1,c	;volatile
 24553                           
 24554                           ;tmr3.c: 93: TMR3_StartTimer();
 24555  006916  EC8E  F035         	call	_TMR3_StartTimer	;wreg free
 24556  00691A  0012               	return		;funcret
 24557  00691C                     __end_of_TMR3_Initialize:
 24558                           	opt stack 0
 24559                           tblptru	equ	0xFF8
 24560                           tblptrh	equ	0xFF7
 24561                           tblptrl	equ	0xFF6
 24562                           tablat	equ	0xFF5
 24563                           prodh	equ	0xFF4
 24564                           prodl	equ	0xFF3
 24565                           intcon	equ	0xFF2
 24566                           intcon3	equ	0xFF0
 24567                           indf0	equ	0xFEF
 24568                           postinc0	equ	0xFEE
 24569                           fsr0h	equ	0xFEA
 24570                           fsr0l	equ	0xFE9
 24571                           wreg	equ	0xFE8
 24572                           indf1	equ	0xFE7
 24573                           postdec1	equ	0xFE5
 24574                           fsr1h	equ	0xFE2
 24575                           fsr1l	equ	0xFE1
 24576                           indf2	equ	0xFDF
 24577                           postinc2	equ	0xFDE
 24578                           postdec2	equ	0xFDD
 24579                           plusw2	equ	0xFDB
 24580                           fsr2h	equ	0xFDA
 24581                           fsr2l	equ	0xFD9
 24582                           status	equ	0xFD8
 24583                           
 24584 ;; *************** function _TMR3_StartTimer *****************
 24585 ;; Defined at:
 24586 ;;		line 96 in file "../Includes/MccGenerated/tmr3.c"
 24587 ;; Parameters:    Size  Location     Type
 24588 ;;		None
 24589 ;; Auto vars:     Size  Location     Type
 24590 ;;		None
 24591 ;; Return value:  Size  Location     Type
 24592 ;;		None               void
 24593 ;; Registers used:
 24594 ;;		None
 24595 ;; Tracked objects:
 24596 ;;		On entry : 0/0
 24597 ;;		On exit  : 0/0
 24598 ;;		Unchanged: 0/0
 24599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24600 ;;      Params:         0       0       0       0       0       0       0       0       0
 24601 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24602 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24603 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24604 ;;Total ram usage:        0 bytes
 24605 ;; Hardware stack levels used:    1
 24606 ;; Hardware stack levels required when called:   11
 24607 ;; This function calls:
 24608 ;;		Nothing
 24609 ;; This function is called by:
 24610 ;;		_TMR3_Initialize
 24611 ;; This function uses a non-reentrant model
 24612 ;;
 24613                           
 24614                           	psect	text91
 24615  006B1C                     __ptext91:
 24616                           	opt stack 0
 24617  006B1C                     _TMR3_StartTimer:
 24618                           	opt stack 17
 24619                           
 24620                           ;tmr3.c: 99: T3CONbits.TMR3ON = 1;
 24621                           
 24622                           ;incstack = 0
 24623  006B1C  80B1               	bsf	4017,0,c	;volatile
 24624  006B1E  0012               	return		;funcret
 24625  006B20                     __end_of_TMR3_StartTimer:
 24626                           	opt stack 0
 24627                           tblptru	equ	0xFF8
 24628                           tblptrh	equ	0xFF7
 24629                           tblptrl	equ	0xFF6
 24630                           tablat	equ	0xFF5
 24631                           prodh	equ	0xFF4
 24632                           prodl	equ	0xFF3
 24633                           intcon	equ	0xFF2
 24634                           intcon3	equ	0xFF0
 24635                           indf0	equ	0xFEF
 24636                           postinc0	equ	0xFEE
 24637                           fsr0h	equ	0xFEA
 24638                           fsr0l	equ	0xFE9
 24639                           wreg	equ	0xFE8
 24640                           indf1	equ	0xFE7
 24641                           postdec1	equ	0xFE5
 24642                           fsr1h	equ	0xFE2
 24643                           fsr1l	equ	0xFE1
 24644                           indf2	equ	0xFDF
 24645                           postinc2	equ	0xFDE
 24646                           postdec2	equ	0xFDD
 24647                           plusw2	equ	0xFDB
 24648                           fsr2h	equ	0xFDA
 24649                           fsr2l	equ	0xFD9
 24650                           status	equ	0xFD8
 24651                           
 24652 ;; *************** function _TMR2_Initialize *****************
 24653 ;; Defined at:
 24654 ;;		line 58 in file "../Includes/MccGenerated/tmr2.c"
 24655 ;; Parameters:    Size  Location     Type
 24656 ;;		None
 24657 ;; Auto vars:     Size  Location     Type
 24658 ;;		None
 24659 ;; Return value:  Size  Location     Type
 24660 ;;		None               void
 24661 ;; Registers used:
 24662 ;;		wreg, status,2, cstack
 24663 ;; Tracked objects:
 24664 ;;		On entry : 0/0
 24665 ;;		On exit  : 0/0
 24666 ;;		Unchanged: 0/0
 24667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24668 ;;      Params:         0       0       0       0       0       0       0       0       0
 24669 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24670 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24671 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24672 ;;Total ram usage:        0 bytes
 24673 ;; Hardware stack levels used:    1
 24674 ;; Hardware stack levels required when called:   12
 24675 ;; This function calls:
 24676 ;;		_TMR2_StartTimer
 24677 ;; This function is called by:
 24678 ;;		_SYSTEM_Initialize
 24679 ;; This function uses a non-reentrant model
 24680 ;;
 24681                           
 24682                           	psect	text92
 24683  006A24                     __ptext92:
 24684                           	opt stack 0
 24685  006A24                     _TMR2_Initialize:
 24686                           	opt stack 17
 24687                           
 24688                           ;tmr2.c: 62: T2CON = 0x7A;
 24689                           
 24690                           ;incstack = 0
 24691  006A24  0E7A               	movlw	122
 24692  006A26  6EBA               	movwf	4026,c	;volatile
 24693                           
 24694                           ;tmr2.c: 65: PR2 = 0x9B;
 24695  006A28  0E9B               	movlw	155
 24696  006A2A  6EBB               	movwf	4027,c	;volatile
 24697                           
 24698                           ;tmr2.c: 68: TMR2 = 0x00;
 24699  006A2C  0E00               	movlw	0
 24700  006A2E  6EBC               	movwf	4028,c	;volatile
 24701                           
 24702                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
 24703  006A30  929E               	bcf	3998,1,c	;volatile
 24704                           
 24705                           ;tmr2.c: 74: TMR2_StartTimer();
 24706  006A32  EC90  F035         	call	_TMR2_StartTimer	;wreg free
 24707  006A36  0012               	return		;funcret
 24708  006A38                     __end_of_TMR2_Initialize:
 24709                           	opt stack 0
 24710                           tblptru	equ	0xFF8
 24711                           tblptrh	equ	0xFF7
 24712                           tblptrl	equ	0xFF6
 24713                           tablat	equ	0xFF5
 24714                           prodh	equ	0xFF4
 24715                           prodl	equ	0xFF3
 24716                           intcon	equ	0xFF2
 24717                           intcon3	equ	0xFF0
 24718                           indf0	equ	0xFEF
 24719                           postinc0	equ	0xFEE
 24720                           fsr0h	equ	0xFEA
 24721                           fsr0l	equ	0xFE9
 24722                           wreg	equ	0xFE8
 24723                           indf1	equ	0xFE7
 24724                           postdec1	equ	0xFE5
 24725                           fsr1h	equ	0xFE2
 24726                           fsr1l	equ	0xFE1
 24727                           indf2	equ	0xFDF
 24728                           postinc2	equ	0xFDE
 24729                           postdec2	equ	0xFDD
 24730                           plusw2	equ	0xFDB
 24731                           fsr2h	equ	0xFDA
 24732                           fsr2l	equ	0xFD9
 24733                           status	equ	0xFD8
 24734                           
 24735 ;; *************** function _TMR2_StartTimer *****************
 24736 ;; Defined at:
 24737 ;;		line 77 in file "../Includes/MccGenerated/tmr2.c"
 24738 ;; Parameters:    Size  Location     Type
 24739 ;;		None
 24740 ;; Auto vars:     Size  Location     Type
 24741 ;;		None
 24742 ;; Return value:  Size  Location     Type
 24743 ;;		None               void
 24744 ;; Registers used:
 24745 ;;		None
 24746 ;; Tracked objects:
 24747 ;;		On entry : 0/0
 24748 ;;		On exit  : 0/0
 24749 ;;		Unchanged: 0/0
 24750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24751 ;;      Params:         0       0       0       0       0       0       0       0       0
 24752 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24753 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24754 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24755 ;;Total ram usage:        0 bytes
 24756 ;; Hardware stack levels used:    1
 24757 ;; Hardware stack levels required when called:   11
 24758 ;; This function calls:
 24759 ;;		Nothing
 24760 ;; This function is called by:
 24761 ;;		_TMR2_Initialize
 24762 ;; This function uses a non-reentrant model
 24763 ;;
 24764                           
 24765                           	psect	text93
 24766  006B20                     __ptext93:
 24767                           	opt stack 0
 24768  006B20                     _TMR2_StartTimer:
 24769                           	opt stack 17
 24770                           
 24771                           ;tmr2.c: 79: T2CONbits.TMR2ON = 1;
 24772                           
 24773                           ;incstack = 0
 24774  006B20  84BA               	bsf	4026,2,c	;volatile
 24775  006B22  0012               	return		;funcret
 24776  006B24                     __end_of_TMR2_StartTimer:
 24777                           	opt stack 0
 24778                           tblptru	equ	0xFF8
 24779                           tblptrh	equ	0xFF7
 24780                           tblptrl	equ	0xFF6
 24781                           tablat	equ	0xFF5
 24782                           prodh	equ	0xFF4
 24783                           prodl	equ	0xFF3
 24784                           intcon	equ	0xFF2
 24785                           intcon3	equ	0xFF0
 24786                           indf0	equ	0xFEF
 24787                           postinc0	equ	0xFEE
 24788                           fsr0h	equ	0xFEA
 24789                           fsr0l	equ	0xFE9
 24790                           wreg	equ	0xFE8
 24791                           indf1	equ	0xFE7
 24792                           postdec1	equ	0xFE5
 24793                           fsr1h	equ	0xFE2
 24794                           fsr1l	equ	0xFE1
 24795                           indf2	equ	0xFDF
 24796                           postinc2	equ	0xFDE
 24797                           postdec2	equ	0xFDD
 24798                           plusw2	equ	0xFDB
 24799                           fsr2h	equ	0xFDA
 24800                           fsr2l	equ	0xFD9
 24801                           status	equ	0xFD8
 24802                           
 24803 ;; *************** function _TMR1_Initialize *****************
 24804 ;; Defined at:
 24805 ;;		line 63 in file "../Includes/MccGenerated/tmr1.c"
 24806 ;; Parameters:    Size  Location     Type
 24807 ;;		None
 24808 ;; Auto vars:     Size  Location     Type
 24809 ;;		None
 24810 ;; Return value:  Size  Location     Type
 24811 ;;		None               void
 24812 ;; Registers used:
 24813 ;;		wreg, status,2, status,0, cstack
 24814 ;; Tracked objects:
 24815 ;;		On entry : 0/0
 24816 ;;		On exit  : 0/0
 24817 ;;		Unchanged: 0/0
 24818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24819 ;;      Params:         0       0       0       0       0       0       0       0       0
 24820 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24821 ;;      Temps:          0       2       0       0       0       0       0       0       0
 24822 ;;      Totals:         0       2       0       0       0       0       0       0       0
 24823 ;;Total ram usage:        2 bytes
 24824 ;; Hardware stack levels used:    1
 24825 ;; Hardware stack levels required when called:   12
 24826 ;; This function calls:
 24827 ;;		_TMR1_StartTimer
 24828 ;; This function is called by:
 24829 ;;		_SYSTEM_Initialize
 24830 ;; This function uses a non-reentrant model
 24831 ;;
 24832                           
 24833                           	psect	text94
 24834  0065EC                     __ptext94:
 24835                           	opt stack 0
 24836  0065EC                     _TMR1_Initialize:
 24837                           	opt stack 17
 24838                           
 24839                           ;tmr1.c: 68: T1CON = 0x00;
 24840                           
 24841                           ;incstack = 0
 24842  0065EC  0E00               	movlw	0
 24843  0065EE  6ECD               	movwf	4045,c	;volatile
 24844                           
 24845                           ;tmr1.c: 71: T1GCON = 0x00;
 24846  0065F0  0E00               	movlw	0
 24847  0065F2  6ECC               	movwf	4044,c	;volatile
 24848                           
 24849                           ;tmr1.c: 74: TMR1H = 0xD0;
 24850  0065F4  0ED0               	movlw	208
 24851  0065F6  6ECF               	movwf	4047,c	;volatile
 24852                           
 24853                           ;tmr1.c: 77: TMR1L = 0x20;
 24854  0065F8  0E20               	movlw	32
 24855  0065FA  6ECE               	movwf	4046,c	;volatile
 24856                           
 24857                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
 24858  0065FC  50CE               	movf	4046,w,c	;volatile
 24859  0065FE  CFCF F060          	movff	4047,??_TMR1_Initialize	;volatile
 24860  006602  0100               	movlb	0	; () banked
 24861  006604  6B61               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 24862  006606  C060  F061         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 24863  00660A  0100               	movlb	0	; () banked
 24864  00660C  6B60               	clrf	??_TMR1_Initialize& (0+255),b
 24865  00660E  0100               	movlb	0	; () banked
 24866  006610  1160               	iorwf	??_TMR1_Initialize& (0+255),w,b
 24867  006612  6E48               	movwf	_timer1ReloadVal,c	;volatile
 24868  006614  0100               	movlb	0	; () banked
 24869  006616  5161               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 24870  006618  6E49               	movwf	_timer1ReloadVal+1,c	;volatile
 24871                           
 24872                           ; BSR set to: 0
 24873                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
 24874  00661A  909E               	bcf	3998,0,c	;volatile
 24875                           
 24876                           ; BSR set to: 0
 24877                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
 24878  00661C  809D               	bsf	3997,0,c	;volatile
 24879                           
 24880                           ; BSR set to: 0
 24881                           ;tmr1.c: 89: TMR1_StartTimer();
 24882  00661E  EC92  F035         	call	_TMR1_StartTimer	;wreg free
 24883  006622  0012               	return		;funcret
 24884  006624                     __end_of_TMR1_Initialize:
 24885                           	opt stack 0
 24886                           tblptru	equ	0xFF8
 24887                           tblptrh	equ	0xFF7
 24888                           tblptrl	equ	0xFF6
 24889                           tablat	equ	0xFF5
 24890                           prodh	equ	0xFF4
 24891                           prodl	equ	0xFF3
 24892                           intcon	equ	0xFF2
 24893                           intcon3	equ	0xFF0
 24894                           indf0	equ	0xFEF
 24895                           postinc0	equ	0xFEE
 24896                           fsr0h	equ	0xFEA
 24897                           fsr0l	equ	0xFE9
 24898                           wreg	equ	0xFE8
 24899                           indf1	equ	0xFE7
 24900                           postdec1	equ	0xFE5
 24901                           fsr1h	equ	0xFE2
 24902                           fsr1l	equ	0xFE1
 24903                           indf2	equ	0xFDF
 24904                           postinc2	equ	0xFDE
 24905                           postdec2	equ	0xFDD
 24906                           plusw2	equ	0xFDB
 24907                           fsr2h	equ	0xFDA
 24908                           fsr2l	equ	0xFD9
 24909                           status	equ	0xFD8
 24910                           
 24911 ;; *************** function _TMR1_StartTimer *****************
 24912 ;; Defined at:
 24913 ;;		line 92 in file "../Includes/MccGenerated/tmr1.c"
 24914 ;; Parameters:    Size  Location     Type
 24915 ;;		None
 24916 ;; Auto vars:     Size  Location     Type
 24917 ;;		None
 24918 ;; Return value:  Size  Location     Type
 24919 ;;		None               void
 24920 ;; Registers used:
 24921 ;;		None
 24922 ;; Tracked objects:
 24923 ;;		On entry : 0/0
 24924 ;;		On exit  : 0/0
 24925 ;;		Unchanged: 0/0
 24926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24927 ;;      Params:         0       0       0       0       0       0       0       0       0
 24928 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24929 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24930 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24931 ;;Total ram usage:        0 bytes
 24932 ;; Hardware stack levels used:    1
 24933 ;; Hardware stack levels required when called:   11
 24934 ;; This function calls:
 24935 ;;		Nothing
 24936 ;; This function is called by:
 24937 ;;		_TMR1_Initialize
 24938 ;; This function uses a non-reentrant model
 24939 ;;
 24940                           
 24941                           	psect	text95
 24942  006B24                     __ptext95:
 24943                           	opt stack 0
 24944  006B24                     _TMR1_StartTimer:
 24945                           	opt stack 17
 24946                           
 24947                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
 24948                           
 24949                           ;incstack = 0
 24950  006B24  80CD               	bsf	4045,0,c	;volatile
 24951  006B26  0012               	return		;funcret
 24952  006B28                     __end_of_TMR1_StartTimer:
 24953                           	opt stack 0
 24954                           tblptru	equ	0xFF8
 24955                           tblptrh	equ	0xFF7
 24956                           tblptrl	equ	0xFF6
 24957                           tablat	equ	0xFF5
 24958                           prodh	equ	0xFF4
 24959                           prodl	equ	0xFF3
 24960                           intcon	equ	0xFF2
 24961                           intcon3	equ	0xFF0
 24962                           indf0	equ	0xFEF
 24963                           postinc0	equ	0xFEE
 24964                           fsr0h	equ	0xFEA
 24965                           fsr0l	equ	0xFE9
 24966                           wreg	equ	0xFE8
 24967                           indf1	equ	0xFE7
 24968                           postdec1	equ	0xFE5
 24969                           fsr1h	equ	0xFE2
 24970                           fsr1l	equ	0xFE1
 24971                           indf2	equ	0xFDF
 24972                           postinc2	equ	0xFDE
 24973                           postdec2	equ	0xFDD
 24974                           plusw2	equ	0xFDB
 24975                           fsr2h	equ	0xFDA
 24976                           fsr2l	equ	0xFD9
 24977                           status	equ	0xFD8
 24978                           
 24979 ;; *************** function _PIN_MANAGER_Initialize *****************
 24980 ;; Defined at:
 24981 ;;		line 51 in file "../Includes/MccGenerated/pin_manager.c"
 24982 ;; Parameters:    Size  Location     Type
 24983 ;;		None
 24984 ;; Auto vars:     Size  Location     Type
 24985 ;;		None
 24986 ;; Return value:  Size  Location     Type
 24987 ;;		None               void
 24988 ;; Registers used:
 24989 ;;		wreg, status,2
 24990 ;; Tracked objects:
 24991 ;;		On entry : 0/0
 24992 ;;		On exit  : 0/0
 24993 ;;		Unchanged: 0/0
 24994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24995 ;;      Params:         0       0       0       0       0       0       0       0       0
 24996 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24997 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24998 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24999 ;;Total ram usage:        0 bytes
 25000 ;; Hardware stack levels used:    1
 25001 ;; Hardware stack levels required when called:   11
 25002 ;; This function calls:
 25003 ;;		Nothing
 25004 ;; This function is called by:
 25005 ;;		_moteApp_GoToSleep
 25006 ;;		_SYSTEM_Initialize
 25007 ;; This function uses a non-reentrant model
 25008 ;;
 25009                           
 25010                           	psect	text96
 25011  006244                     __ptext96:
 25012                           	opt stack 0
 25013  006244                     _PIN_MANAGER_Initialize:
 25014                           	opt stack 16
 25015                           
 25016                           ;pin_manager.c: 55: TRISAbits.TRISA0 = 1;
 25017                           
 25018                           ;incstack = 0
 25019  006244  8092               	bsf	3986,0,c	;volatile
 25020                           
 25021                           ;pin_manager.c: 56: TRISAbits.TRISA1 = 1;
 25022  006246  8292               	bsf	3986,1,c	;volatile
 25023                           
 25024                           ;pin_manager.c: 57: TRISAbits.TRISA2 = 1;
 25025  006248  8492               	bsf	3986,2,c	;volatile
 25026                           
 25027                           ;pin_manager.c: 58: TRISAbits.TRISA3 = 1;
 25028  00624A  8692               	bsf	3986,3,c	;volatile
 25029                           
 25030                           ;pin_manager.c: 60: LATEbits.LATE2 = 0;
 25031  00624C  948D               	bcf	3981,2,c	;volatile
 25032                           
 25033                           ;pin_manager.c: 61: TRISEbits.TRISE2 = 0;
 25034  00624E  9496               	bcf	3990,2,c	;volatile
 25035                           
 25036                           ;pin_manager.c: 62: TRISAbits.TRISA5 = 0;
 25037  006250  9A92               	bcf	3986,5,c	;volatile
 25038                           
 25039                           ;pin_manager.c: 63: TRISAbits.TRISA6 = 0;
 25040  006252  9C92               	bcf	3986,6,c	;volatile
 25041                           
 25042                           ;pin_manager.c: 64: TRISAbits.TRISA7 = 0;
 25043  006254  9E92               	bcf	3986,7,c	;volatile
 25044                           
 25045                           ;pin_manager.c: 66: TRISBbits.TRISB1 = 1;
 25046  006256  8293               	bsf	3987,1,c	;volatile
 25047                           
 25048                           ;pin_manager.c: 67: TRISBbits.TRISB0 = 1;
 25049  006258  8093               	bsf	3987,0,c	;volatile
 25050                           
 25051                           ;pin_manager.c: 68: TRISBbits.TRISB2 = 0;
 25052  00625A  9493               	bcf	3987,2,c	;volatile
 25053                           
 25054                           ;pin_manager.c: 69: TRISBbits.TRISB3 = 0;
 25055  00625C  9693               	bcf	3987,3,c	;volatile
 25056                           
 25057                           ;pin_manager.c: 70: TRISBbits.TRISB4 = 0;
 25058  00625E  9893               	bcf	3987,4,c	;volatile
 25059                           
 25060                           ;pin_manager.c: 71: TRISBbits.TRISB5 = 0;
 25061  006260  9A93               	bcf	3987,5,c	;volatile
 25062                           
 25063                           ;pin_manager.c: 73: TRISCbits.TRISC0 = 0;
 25064  006262  9094               	bcf	3988,0,c	;volatile
 25065                           
 25066                           ;pin_manager.c: 74: TRISCbits.TRISC1 = 0;
 25067  006264  9294               	bcf	3988,1,c	;volatile
 25068                           
 25069                           ;pin_manager.c: 75: TRISCbits.TRISC2 = 1;
 25070  006266  8494               	bsf	3988,2,c	;volatile
 25071                           
 25072                           ;pin_manager.c: 76: TRISCbits.TRISC6 = 0;
 25073  006268  9C94               	bcf	3988,6,c	;volatile
 25074                           
 25075                           ;pin_manager.c: 77: TRISCbits.TRISC7 = 1;
 25076  00626A  8E94               	bsf	3988,7,c	;volatile
 25077                           
 25078                           ;pin_manager.c: 79: TRISD = 0b00000000;
 25079  00626C  0E00               	movlw	0
 25080  00626E  6E95               	movwf	3989,c	;volatile
 25081                           
 25082                           ;pin_manager.c: 81: TRISEbits.TRISE2 = 0;
 25083  006270  9496               	bcf	3990,2,c	;volatile
 25084                           
 25085                           ;pin_manager.c: 84: LATAbits.LATA5 = 0;
 25086  006272  9A89               	bcf	3977,5,c	;volatile
 25087                           
 25088                           ;pin_manager.c: 85: LATAbits.LATA6 = 0;
 25089  006274  9C89               	bcf	3977,6,c	;volatile
 25090                           
 25091                           ;pin_manager.c: 86: LATAbits.LATA7 = 0;
 25092  006276  9E89               	bcf	3977,7,c	;volatile
 25093                           
 25094                           ;pin_manager.c: 88: LATBbits.LATB2 = 0;
 25095  006278  948A               	bcf	3978,2,c	;volatile
 25096                           
 25097                           ;pin_manager.c: 90: LATCbits.LATC2 = 0;
 25098  00627A  948B               	bcf	3979,2,c	;volatile
 25099                           
 25100                           ;pin_manager.c: 91: LATCbits.LATC6 = 0;
 25101  00627C  9C8B               	bcf	3979,6,c	;volatile
 25102                           
 25103                           ;pin_manager.c: 93: LATEbits.LATE2 = 1;
 25104  00627E  848D               	bsf	3981,2,c	;volatile
 25105                           
 25106                           ;pin_manager.c: 95: ANSELAbits.ANSA0 = 0;
 25107  006280  010F               	movlb	15	; () banked
 25108  006282  915B               	bcf	91,0,b	;volatile
 25109                           
 25110                           ; BSR set to: 15
 25111                           ;pin_manager.c: 96: ANSELAbits.ANSA1 = 1;
 25112  006284  010F               	movlb	15	; () banked
 25113  006286  835B               	bsf	91,1,b	;volatile
 25114                           
 25115                           ; BSR set to: 15
 25116                           ;pin_manager.c: 97: ANSELAbits.ANSA2 = 1;
 25117  006288  010F               	movlb	15	; () banked
 25118  00628A  855B               	bsf	91,2,b	;volatile
 25119                           
 25120                           ; BSR set to: 15
 25121                           ;pin_manager.c: 98: ANSELAbits.ANSA3 = 1;
 25122  00628C  010F               	movlb	15	; () banked
 25123  00628E  875B               	bsf	91,3,b	;volatile
 25124                           
 25125                           ; BSR set to: 15
 25126                           ;pin_manager.c: 99: ANSELCbits.ANSC7 = 0;
 25127  006290  010F               	movlb	15	; () banked
 25128  006292  9F5D               	bcf	93,7,b	;volatile
 25129                           
 25130                           ; BSR set to: 15
 25131                           ;pin_manager.c: 100: ANSELCbits.ANSC6 = 0;
 25132  006294  010F               	movlb	15	; () banked
 25133  006296  9D5D               	bcf	93,6,b	;volatile
 25134                           
 25135                           ; BSR set to: 15
 25136  006298  0012               	return		;funcret
 25137  00629A                     __end_of_PIN_MANAGER_Initialize:
 25138                           	opt stack 0
 25139                           tblptru	equ	0xFF8
 25140                           tblptrh	equ	0xFF7
 25141                           tblptrl	equ	0xFF6
 25142                           tablat	equ	0xFF5
 25143                           prodh	equ	0xFF4
 25144                           prodl	equ	0xFF3
 25145                           intcon	equ	0xFF2
 25146                           intcon3	equ	0xFF0
 25147                           indf0	equ	0xFEF
 25148                           postinc0	equ	0xFEE
 25149                           fsr0h	equ	0xFEA
 25150                           fsr0l	equ	0xFE9
 25151                           wreg	equ	0xFE8
 25152                           indf1	equ	0xFE7
 25153                           postdec1	equ	0xFE5
 25154                           fsr1h	equ	0xFE2
 25155                           fsr1l	equ	0xFE1
 25156                           indf2	equ	0xFDF
 25157                           postinc2	equ	0xFDE
 25158                           postdec2	equ	0xFDD
 25159                           plusw2	equ	0xFDB
 25160                           fsr2h	equ	0xFDA
 25161                           fsr2l	equ	0xFD9
 25162                           status	equ	0xFD8
 25163                           
 25164 ;; *************** function _OSCILLATOR_Initialize *****************
 25165 ;; Defined at:
 25166 ;;		line 106 in file "../Includes/MccGenerated/mcc.c"
 25167 ;; Parameters:    Size  Location     Type
 25168 ;;		None
 25169 ;; Auto vars:     Size  Location     Type
 25170 ;;		None
 25171 ;; Return value:  Size  Location     Type
 25172 ;;		None               void
 25173 ;; Registers used:
 25174 ;;		wreg, status,2
 25175 ;; Tracked objects:
 25176 ;;		On entry : 0/0
 25177 ;;		On exit  : 0/0
 25178 ;;		Unchanged: 0/0
 25179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25180 ;;      Params:         0       0       0       0       0       0       0       0       0
 25181 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25182 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25183 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25184 ;;Total ram usage:        0 bytes
 25185 ;; Hardware stack levels used:    1
 25186 ;; Hardware stack levels required when called:   11
 25187 ;; This function calls:
 25188 ;;		Nothing
 25189 ;; This function is called by:
 25190 ;;		_SYSTEM_Initialize
 25191 ;; This function uses a non-reentrant model
 25192 ;;
 25193                           
 25194                           	psect	text97
 25195  0069E4                     __ptext97:
 25196                           	opt stack 0
 25197  0069E4                     _OSCILLATOR_Initialize:
 25198                           	opt stack 18
 25199                           
 25200                           ;mcc.c: 108: OSCTUNE = 0x80;
 25201                           
 25202                           ; BSR set to: 15
 25203                           ;incstack = 0
 25204  0069E4  0E80               	movlw	128
 25205  0069E6  6E9B               	movwf	3995,c	;volatile
 25206                           
 25207                           ;mcc.c: 109: OSCCON = 0x70;
 25208  0069E8  0E70               	movlw	112
 25209  0069EA  6ED3               	movwf	4051,c	;volatile
 25210                           
 25211                           ;mcc.c: 110: OSCCON2 = 0x10;
 25212  0069EC  0E10               	movlw	16
 25213  0069EE  6ED2               	movwf	4050,c	;volatile
 25214  0069F0                     l1232:
 25215  0069F0  AED2               	btfss	4050,7,c	;volatile
 25216  0069F2  D7FE               	goto	l1232
 25217                           
 25218                           ;mcc.c: 112: ACTCON = 0x90;
 25219  0069F4  0E90               	movlw	144
 25220  0069F6  6EB5               	movwf	4021,c	;volatile
 25221  0069F8  0012               	return		;funcret
 25222  0069FA                     __end_of_OSCILLATOR_Initialize:
 25223                           	opt stack 0
 25224                           tblptru	equ	0xFF8
 25225                           tblptrh	equ	0xFF7
 25226                           tblptrl	equ	0xFF6
 25227                           tablat	equ	0xFF5
 25228                           prodh	equ	0xFF4
 25229                           prodl	equ	0xFF3
 25230                           intcon	equ	0xFF2
 25231                           intcon3	equ	0xFF0
 25232                           indf0	equ	0xFEF
 25233                           postinc0	equ	0xFEE
 25234                           fsr0h	equ	0xFEA
 25235                           fsr0l	equ	0xFE9
 25236                           wreg	equ	0xFE8
 25237                           indf1	equ	0xFE7
 25238                           postdec1	equ	0xFE5
 25239                           fsr1h	equ	0xFE2
 25240                           fsr1l	equ	0xFE1
 25241                           indf2	equ	0xFDF
 25242                           postinc2	equ	0xFDE
 25243                           postdec2	equ	0xFDD
 25244                           plusw2	equ	0xFDB
 25245                           fsr2h	equ	0xFDA
 25246                           fsr2l	equ	0xFD9
 25247                           status	equ	0xFD8
 25248                           
 25249 ;; *************** function _EUSART_Initialize *****************
 25250 ;; Defined at:
 25251 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 25252 ;; Parameters:    Size  Location     Type
 25253 ;;		None
 25254 ;; Auto vars:     Size  Location     Type
 25255 ;;		None
 25256 ;; Return value:  Size  Location     Type
 25257 ;;		None               void
 25258 ;; Registers used:
 25259 ;;		wreg, status,2
 25260 ;; Tracked objects:
 25261 ;;		On entry : 0/0
 25262 ;;		On exit  : 0/0
 25263 ;;		Unchanged: 0/0
 25264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25265 ;;      Params:         0       0       0       0       0       0       0       0       0
 25266 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25267 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25268 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25269 ;;Total ram usage:        0 bytes
 25270 ;; Hardware stack levels used:    1
 25271 ;; Hardware stack levels required when called:   11
 25272 ;; This function calls:
 25273 ;;		Nothing
 25274 ;; This function is called by:
 25275 ;;		_SYSTEM_Initialize
 25276 ;; This function uses a non-reentrant model
 25277 ;;
 25278                           
 25279                           	psect	text98
 25280  00644A                     __ptext98:
 25281                           	opt stack 0
 25282  00644A                     _EUSART_Initialize:
 25283                           	opt stack 18
 25284                           
 25285                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 25286                           
 25287                           ;incstack = 0
 25288  00644A  9A9D               	bcf	3997,5,c	;volatile
 25289                           
 25290                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 25291  00644C  989D               	bcf	3997,4,c	;volatile
 25292                           
 25293                           ;eusart.c: 85: BAUDCON = 0x48;
 25294  00644E  0E48               	movlw	72
 25295  006450  6EB8               	movwf	4024,c	;volatile
 25296                           
 25297                           ;eusart.c: 88: RCSTA = 0x90;
 25298  006452  0E90               	movlw	144
 25299  006454  6EAB               	movwf	4011,c	;volatile
 25300                           
 25301                           ;eusart.c: 91: TXSTA = 0x26;
 25302  006456  0E26               	movlw	38
 25303  006458  6EAC               	movwf	4012,c	;volatile
 25304                           
 25305                           ;eusart.c: 95: SPBRG = 0xD0;
 25306  00645A  0ED0               	movlw	208
 25307  00645C  6EAF               	movwf	4015,c	;volatile
 25308                           
 25309                           ;eusart.c: 100: SPBRGH = 0x00;
 25310  00645E  0E00               	movlw	0
 25311  006460  6EB0               	movwf	4016,c	;volatile
 25312                           
 25313                           ;eusart.c: 103: eusartTxHead = 0;
 25314  006462  0E00               	movlw	0
 25315  006464  0100               	movlb	0	; () banked
 25316  006466  6FE1               	movwf	_eusartTxHead& (0+255),b
 25317                           
 25318                           ;eusart.c: 104: eusartTxTail = 0;
 25319  006468  0E00               	movlw	0
 25320  00646A  0100               	movlb	0	; () banked
 25321  00646C  6FE2               	movwf	_eusartTxTail& (0+255),b
 25322                           
 25323                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 25324  00646E  0E40               	movlw	64
 25325  006470  6E54               	movwf	_eusartTxBufferRemaining,c	;volatile
 25326                           
 25327                           ;eusart.c: 107: eusartRxHead = 0;
 25328  006472  0E00               	movlw	0
 25329  006474  0100               	movlb	0	; () banked
 25330  006476  6FDF               	movwf	_eusartRxHead& (0+255),b
 25331                           
 25332                           ;eusart.c: 108: eusartRxTail = 0;
 25333  006478  0E00               	movlw	0
 25334  00647A  0100               	movlb	0	; () banked
 25335  00647C  6FE0               	movwf	_eusartRxTail& (0+255),b
 25336                           
 25337                           ;eusart.c: 109: eusartRxCount = 0;
 25338  00647E  0E00               	movlw	0
 25339  006480  6E53               	movwf	_eusartRxCount,c	;volatile
 25340                           
 25341                           ; BSR set to: 0
 25342                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 25343  006482  8A9D               	bsf	3997,5,c	;volatile
 25344                           
 25345                           ; BSR set to: 0
 25346                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 25347  006484  88AB               	bsf	4011,4,c	;volatile
 25348                           
 25349                           ; BSR set to: 0
 25350  006486  0012               	return		;funcret
 25351  006488                     __end_of_EUSART_Initialize:
 25352                           	opt stack 0
 25353                           tblptru	equ	0xFF8
 25354                           tblptrh	equ	0xFF7
 25355                           tblptrl	equ	0xFF6
 25356                           tablat	equ	0xFF5
 25357                           prodh	equ	0xFF4
 25358                           prodl	equ	0xFF3
 25359                           intcon	equ	0xFF2
 25360                           intcon3	equ	0xFF0
 25361                           indf0	equ	0xFEF
 25362                           postinc0	equ	0xFEE
 25363                           fsr0h	equ	0xFEA
 25364                           fsr0l	equ	0xFE9
 25365                           wreg	equ	0xFE8
 25366                           indf1	equ	0xFE7
 25367                           postdec1	equ	0xFE5
 25368                           fsr1h	equ	0xFE2
 25369                           fsr1l	equ	0xFE1
 25370                           indf2	equ	0xFDF
 25371                           postinc2	equ	0xFDE
 25372                           postdec2	equ	0xFDD
 25373                           plusw2	equ	0xFDB
 25374                           fsr2h	equ	0xFDA
 25375                           fsr2l	equ	0xFD9
 25376                           status	equ	0xFD8
 25377                           
 25378 ;; *************** function _CMP1_Initialize *****************
 25379 ;; Defined at:
 25380 ;;		line 58 in file "../Includes/MccGenerated/cmp1.c"
 25381 ;; Parameters:    Size  Location     Type
 25382 ;;		None
 25383 ;; Auto vars:     Size  Location     Type
 25384 ;;		None
 25385 ;; Return value:  Size  Location     Type
 25386 ;;		None               void
 25387 ;; Registers used:
 25388 ;;		wreg, status,2
 25389 ;; Tracked objects:
 25390 ;;		On entry : 0/0
 25391 ;;		On exit  : 0/0
 25392 ;;		Unchanged: 0/0
 25393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25394 ;;      Params:         0       0       0       0       0       0       0       0       0
 25395 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25396 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25397 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25398 ;;Total ram usage:        0 bytes
 25399 ;; Hardware stack levels used:    1
 25400 ;; Hardware stack levels required when called:   11
 25401 ;; This function calls:
 25402 ;;		Nothing
 25403 ;; This function is called by:
 25404 ;;		_SYSTEM_Initialize
 25405 ;; This function uses a non-reentrant model
 25406 ;;
 25407                           
 25408                           	psect	text99
 25409  006A5C                     __ptext99:
 25410                           	opt stack 0
 25411  006A5C                     _CMP1_Initialize:
 25412                           	opt stack 18
 25413                           
 25414                           ;cmp1.c: 65: PIE2bits.C1IE = 0;
 25415                           
 25416                           ; BSR set to: 0
 25417                           ;incstack = 0
 25418  006A5C  9CA0               	bcf	4000,6,c	;volatile
 25419                           
 25420                           ;cmp1.c: 70: CM1CON0 = 0x9C;
 25421  006A5E  0E9C               	movlw	156
 25422  006A60  6E98               	movwf	3992,c	;volatile
 25423                           
 25424                           ;cmp1.c: 73: CM2CON1bits.C1RSEL = 0x1;
 25425  006A62  8A9A               	bsf	3994,5,c	;volatile
 25426                           
 25427                           ;cmp1.c: 76: CM2CON1bits.C1SYNC = 0x0;
 25428  006A64  929A               	bcf	3994,1,c	;volatile
 25429                           
 25430                           ;cmp1.c: 79: CM2CON1bits.C1HYS = 0x0;
 25431  006A66  969A               	bcf	3994,3,c	;volatile
 25432                           
 25433                           ;cmp1.c: 83: PIR2bits.C1IF = 0;
 25434  006A68  9CA1               	bcf	4001,6,c	;volatile
 25435                           
 25436                           ;cmp1.c: 86: PIE2bits.C1IE = 0;
 25437  006A6A  9CA0               	bcf	4000,6,c	;volatile
 25438  006A6C  0012               	return		;funcret
 25439  006A6E                     __end_of_CMP1_Initialize:
 25440                           	opt stack 0
 25441                           tblptru	equ	0xFF8
 25442                           tblptrh	equ	0xFF7
 25443                           tblptrl	equ	0xFF6
 25444                           tablat	equ	0xFF5
 25445                           prodh	equ	0xFF4
 25446                           prodl	equ	0xFF3
 25447                           intcon	equ	0xFF2
 25448                           intcon3	equ	0xFF0
 25449                           indf0	equ	0xFEF
 25450                           postinc0	equ	0xFEE
 25451                           fsr0h	equ	0xFEA
 25452                           fsr0l	equ	0xFE9
 25453                           wreg	equ	0xFE8
 25454                           indf1	equ	0xFE7
 25455                           postdec1	equ	0xFE5
 25456                           fsr1h	equ	0xFE2
 25457                           fsr1l	equ	0xFE1
 25458                           indf2	equ	0xFDF
 25459                           postinc2	equ	0xFDE
 25460                           postdec2	equ	0xFDD
 25461                           plusw2	equ	0xFDB
 25462                           fsr2h	equ	0xFDA
 25463                           fsr2l	equ	0xFD9
 25464                           status	equ	0xFD8
 25465                           
 25466 ;; *************** function _ADC_Initialize *****************
 25467 ;; Defined at:
 25468 ;;		line 65 in file "../Includes/MccGenerated/adc.c"
 25469 ;; Parameters:    Size  Location     Type
 25470 ;;		None
 25471 ;; Auto vars:     Size  Location     Type
 25472 ;;		None
 25473 ;; Return value:  Size  Location     Type
 25474 ;;		None               void
 25475 ;; Registers used:
 25476 ;;		wreg, status,2
 25477 ;; Tracked objects:
 25478 ;;		On entry : 0/0
 25479 ;;		On exit  : 0/0
 25480 ;;		Unchanged: 0/0
 25481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25482 ;;      Params:         0       0       0       0       0       0       0       0       0
 25483 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25484 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25485 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25486 ;;Total ram usage:        0 bytes
 25487 ;; Hardware stack levels used:    1
 25488 ;; Hardware stack levels required when called:   11
 25489 ;; This function calls:
 25490 ;;		Nothing
 25491 ;; This function is called by:
 25492 ;;		_SYSTEM_Initialize
 25493 ;; This function uses a non-reentrant model
 25494 ;;
 25495                           
 25496                           	psect	text100
 25497  006970                     __ptext100:
 25498                           	opt stack 0
 25499  006970                     _ADC_Initialize:
 25500                           	opt stack 18
 25501                           
 25502                           ;adc.c: 68: VREFCON0 = 0b10100000;
 25503                           
 25504                           ;incstack = 0
 25505  006970  0EA0               	movlw	160
 25506  006972  6E7D               	movwf	3965,c	;volatile
 25507                           
 25508                           ;adc.c: 70: ADCON0 = 0x01;
 25509  006974  0E01               	movlw	1
 25510  006976  6EC2               	movwf	4034,c	;volatile
 25511                           
 25512                           ;adc.c: 73: ADCON1 = 0x08;
 25513  006978  0E08               	movlw	8
 25514  00697A  6EC1               	movwf	4033,c	;volatile
 25515                           
 25516                           ;adc.c: 76: ADCON2 = 0b10001110;
 25517  00697C  0E8E               	movlw	142
 25518  00697E  6EC0               	movwf	4032,c	;volatile
 25519                           
 25520                           ;adc.c: 79: ADRESL = 0x00;
 25521  006980  0E00               	movlw	0
 25522  006982  6EC3               	movwf	4035,c	;volatile
 25523                           
 25524                           ;adc.c: 82: ADRESH = 0x00;
 25525  006984  0E00               	movlw	0
 25526  006986  6EC4               	movwf	4036,c	;volatile
 25527  006988  0012               	return		;funcret
 25528  00698A                     __end_of_ADC_Initialize:
 25529                           	opt stack 0
 25530                           tblptru	equ	0xFF8
 25531                           tblptrh	equ	0xFF7
 25532                           tblptrl	equ	0xFF6
 25533                           tablat	equ	0xFF5
 25534                           prodh	equ	0xFF4
 25535                           prodl	equ	0xFF3
 25536                           intcon	equ	0xFF2
 25537                           intcon3	equ	0xFF0
 25538                           indf0	equ	0xFEF
 25539                           postinc0	equ	0xFEE
 25540                           fsr0h	equ	0xFEA
 25541                           fsr0l	equ	0xFE9
 25542                           wreg	equ	0xFE8
 25543                           indf1	equ	0xFE7
 25544                           postdec1	equ	0xFE5
 25545                           fsr1h	equ	0xFE2
 25546                           fsr1l	equ	0xFE1
 25547                           indf2	equ	0xFDF
 25548                           postinc2	equ	0xFDE
 25549                           postdec2	equ	0xFDD
 25550                           plusw2	equ	0xFDB
 25551                           fsr2h	equ	0xFDA
 25552                           fsr2l	equ	0xFD9
 25553                           status	equ	0xFD8
 25554                           
 25555 ;; *************** function _MOTEapp_handlerState *****************
 25556 ;; Defined at:
 25557 ;;		line 181 in file "../Includes/Board/MOTEapp.c"
 25558 ;; Parameters:    Size  Location     Type
 25559 ;;  state           1    wreg     enum E6785
 25560 ;; Auto vars:     Size  Location     Type
 25561 ;;  state           1    0[BANK0 ] enum E6785
 25562 ;; Return value:  Size  Location     Type
 25563 ;;		None               void
 25564 ;; Registers used:
 25565 ;;		wreg
 25566 ;; Tracked objects:
 25567 ;;		On entry : 0/0
 25568 ;;		On exit  : 0/0
 25569 ;;		Unchanged: 0/0
 25570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25571 ;;      Params:         0       0       0       0       0       0       0       0       0
 25572 ;;      Locals:         0       1       0       0       0       0       0       0       0
 25573 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25574 ;;      Totals:         0       1       0       0       0       0       0       0       0
 25575 ;;Total ram usage:        1 bytes
 25576 ;; Hardware stack levels used:    1
 25577 ;; Hardware stack levels required when called:   11
 25578 ;; This function calls:
 25579 ;;		Nothing
 25580 ;; This function is called by:
 25581 ;;		_main
 25582 ;; This function uses a non-reentrant model
 25583 ;;
 25584                           
 25585                           	psect	text101
 25586  006AE2                     __ptext101:
 25587                           	opt stack 0
 25588  006AE2                     _MOTEapp_handlerState:
 25589                           	opt stack 19
 25590                           
 25591                           ;incstack = 0
 25592                           ;MOTEapp_handlerState@state stored from wreg
 25593  006AE2  0100               	movlb	0	; () banked
 25594  006AE4  6F60               	movwf	MOTEapp_handlerState@state& (0+255),b
 25595                           
 25596                           ;MOTEapp.c: 183: moteState = state;
 25597  006AE6  C060  F0FA         	movff	MOTEapp_handlerState@state,_moteState
 25598  006AEA  0012               	return		;funcret
 25599  006AEC                     __end_of_MOTEapp_handlerState:
 25600                           	opt stack 0
 25601                           tblptru	equ	0xFF8
 25602                           tblptrh	equ	0xFF7
 25603                           tblptrl	equ	0xFF6
 25604                           tablat	equ	0xFF5
 25605                           prodh	equ	0xFF4
 25606                           prodl	equ	0xFF3
 25607                           intcon	equ	0xFF2
 25608                           intcon3	equ	0xFF0
 25609                           indf0	equ	0xFEF
 25610                           postinc0	equ	0xFEE
 25611                           fsr0h	equ	0xFEA
 25612                           fsr0l	equ	0xFE9
 25613                           wreg	equ	0xFE8
 25614                           indf1	equ	0xFE7
 25615                           postdec1	equ	0xFE5
 25616                           fsr1h	equ	0xFE2
 25617                           fsr1l	equ	0xFE1
 25618                           indf2	equ	0xFDF
 25619                           postinc2	equ	0xFDE
 25620                           postdec2	equ	0xFDD
 25621                           plusw2	equ	0xFDB
 25622                           fsr2h	equ	0xFDA
 25623                           fsr2l	equ	0xFD9
 25624                           status	equ	0xFD8
 25625                           
 25626 ;; *************** function _DATAEE_ReadByte *****************
 25627 ;; Defined at:
 25628 ;;		line 188 in file "../Includes/MccGenerated/memory.c"
 25629 ;; Parameters:    Size  Location     Type
 25630 ;;  bAdd            1    wreg     unsigned char 
 25631 ;; Auto vars:     Size  Location     Type
 25632 ;;  bAdd            1    0[BANK0 ] unsigned char 
 25633 ;; Return value:  Size  Location     Type
 25634 ;;                  1    wreg      unsigned char 
 25635 ;; Registers used:
 25636 ;;		wreg, status,2
 25637 ;; Tracked objects:
 25638 ;;		On entry : 0/0
 25639 ;;		On exit  : 0/0
 25640 ;;		Unchanged: 0/0
 25641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25642 ;;      Params:         0       0       0       0       0       0       0       0       0
 25643 ;;      Locals:         0       1       0       0       0       0       0       0       0
 25644 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25645 ;;      Totals:         0       1       0       0       0       0       0       0       0
 25646 ;;Total ram usage:        1 bytes
 25647 ;; Hardware stack levels used:    1
 25648 ;; Hardware stack levels required when called:   11
 25649 ;; This function calls:
 25650 ;;		Nothing
 25651 ;; This function is called by:
 25652 ;;		_main
 25653 ;; This function uses a non-reentrant model
 25654 ;;
 25655                           
 25656                           	psect	text102
 25657  0069FA                     __ptext102:
 25658                           	opt stack 0
 25659  0069FA                     _DATAEE_ReadByte:
 25660                           	opt stack 19
 25661                           
 25662                           ;incstack = 0
 25663                           ;DATAEE_ReadByte@bAdd stored from wreg
 25664  0069FA  0100               	movlb	0	; () banked
 25665  0069FC  6F60               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 25666                           
 25667                           ;memory.c: 190: EEADR = (bAdd & 0xFF);
 25668  0069FE  C060  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
 25669                           
 25670                           ;memory.c: 191: EECON1bits.CFGS = 0;
 25671  006A02  9CA6               	bcf	4006,6,c	;volatile
 25672                           
 25673                           ;memory.c: 192: EECON1bits.EEPGD = 0;
 25674  006A04  9EA6               	bcf	4006,7,c	;volatile
 25675                           
 25676                           ;memory.c: 193: EECON1bits.RD = 1;
 25677  006A06  80A6               	bsf	4006,0,c	;volatile
 25678                           
 25679                           ;memory.c: 194: __nop();
 25680  006A08  F000               	nop	
 25681                           
 25682                           ;memory.c: 195: __nop();
 25683  006A0A  F000               	nop	
 25684                           
 25685                           ;memory.c: 197: return (EEDATA);
 25686  006A0C  50A8               	movf	4008,w,c	;volatile
 25687  006A0E  0012               	return	
 25688  006A10                     __end_of_DATAEE_ReadByte:
 25689                           	opt stack 0
 25690                           tblptru	equ	0xFF8
 25691                           tblptrh	equ	0xFF7
 25692                           tblptrl	equ	0xFF6
 25693                           tablat	equ	0xFF5
 25694                           prodh	equ	0xFF4
 25695                           prodl	equ	0xFF3
 25696                           intcon	equ	0xFF2
 25697                           intcon3	equ	0xFF0
 25698                           indf0	equ	0xFEF
 25699                           postinc0	equ	0xFEE
 25700                           fsr0h	equ	0xFEA
 25701                           fsr0l	equ	0xFE9
 25702                           wreg	equ	0xFE8
 25703                           indf1	equ	0xFE7
 25704                           postdec1	equ	0xFE5
 25705                           fsr1h	equ	0xFE2
 25706                           fsr1l	equ	0xFE1
 25707                           indf2	equ	0xFDF
 25708                           postinc2	equ	0xFDE
 25709                           postdec2	equ	0xFDD
 25710                           plusw2	equ	0xFDB
 25711                           fsr2h	equ	0xFDA
 25712                           fsr2l	equ	0xFD9
 25713                           status	equ	0xFD8
 25714                           
 25715 ;; *************** function _INTERRUPT_InterruptManager *****************
 25716 ;; Defined at:
 25717 ;;		line 55 in file "../Includes/MccGenerated/interrupt_manager.c"
 25718 ;; Parameters:    Size  Location     Type
 25719 ;;		None
 25720 ;; Auto vars:     Size  Location     Type
 25721 ;;		None
 25722 ;; Return value:  Size  Location     Type
 25723 ;;		None               void
 25724 ;; Registers used:
 25725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 25726 ;; Tracked objects:
 25727 ;;		On entry : 0/0
 25728 ;;		On exit  : 0/0
 25729 ;;		Unchanged: 0/0
 25730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25731 ;;      Params:         0       0       0       0       0       0       0       0       0
 25732 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25733 ;;      Temps:         14       0       0       0       0       0       0       0       0
 25734 ;;      Totals:        14       0       0       0       0       0       0       0       0
 25735 ;;Total ram usage:       14 bytes
 25736 ;; Hardware stack levels used:    1
 25737 ;; Hardware stack levels required when called:   10
 25738 ;; This function calls:
 25739 ;;		_CMP1_ISR
 25740 ;;		_EUSART_Receive_ISR
 25741 ;;		_EUSART_Transmit_ISR
 25742 ;;		_TMR1_ISR
 25743 ;;		_TMR3_ISR
 25744 ;;		_TMRapp_Tick
 25745 ;;		_USBDeviceTasks
 25746 ;;		_USBapp_setrxByteFlag
 25747 ;; This function is called by:
 25748 ;;		Interrupt level 2
 25749 ;; This function uses a non-reentrant model
 25750 ;;
 25751                           
 25752                           	psect	intcode
 25753  000008                     __pintcode:
 25754                           	opt stack 0
 25755  000008                     _INTERRUPT_InterruptManager:
 25756                           	opt stack 11
 25757                           
 25758                           ;incstack = 0
 25759  000008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 25760  00000A  CFFA F020          	movff	pclath,??_INTERRUPT_InterruptManager
 25761  00000E  CFFB F021          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 25762  000012  CFE9 F022          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 25763  000016  CFEA F023          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 25764  00001A  CFE1 F024          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 25765  00001E  CFE2 F025          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 25766  000022  CFD9 F026          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 25767  000026  CFDA F027          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 25768  00002A  CFF3 F028          	movff	prodl,??_INTERRUPT_InterruptManager+8
 25769  00002E  CFF4 F029          	movff	prodh,??_INTERRUPT_InterruptManager+9
 25770  000032  CFF6 F02A          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 25771  000036  CFF7 F02B          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 25772  00003A  CFF8 F02C          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 25773  00003E  CFF5 F02D          	movff	tablat,??_INTERRUPT_InterruptManager+13
 25774                           
 25775                           ;interrupt_manager.c: 58: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 25776  000042  B09D               	btfsc	3997,0,c	;volatile
 25777  000044  A09E               	btfss	3998,0,c	;volatile
 25778  000046  D004               	goto	i2l11634
 25779                           
 25780                           ;interrupt_manager.c: 59: {
 25781                           ;interrupt_manager.c: 60: TMR1_ISR();
 25782  000048  EC5C  F035         	call	_TMR1_ISR	;wreg free
 25783                           
 25784                           ;interrupt_manager.c: 62: TMRapp_Tick();
 25785  00004C  EC89  F035         	call	_TMRapp_Tick	;wreg free
 25786  000050                     i2l11634:
 25787                           
 25788                           ;interrupt_manager.c: 63: }
 25789                           ;interrupt_manager.c: 64: if(PIE2bits.TMR3IE == 1 && PIR2bits.TMR3IF == 1)
 25790  000050  B2A0               	btfsc	4000,1,c	;volatile
 25791  000052  A2A1               	btfss	4001,1,c	;volatile
 25792  000054  D003               	goto	i2l1192
 25793                           
 25794                           ;interrupt_manager.c: 65: {
 25795                           ;interrupt_manager.c: 66: TMR3_ISR();
 25796  000056  EC8E  F034         	call	_TMR3_ISR	;wreg free
 25797                           
 25798                           ;interrupt_manager.c: 67: }
 25799  00005A  D016               	goto	i2l1200
 25800  00005C                     i2l1192:
 25801                           
 25802                           ;interrupt_manager.c: 68: else if( (PIE1bits.RCIE == 1) && (PIR1bits.RCIF == 1) )
 25803  00005C  BA9D               	btfsc	3997,5,c	;volatile
 25804  00005E  AA9E               	btfss	3998,5,c	;volatile
 25805  000060  D005               	goto	i2l1194
 25806                           
 25807                           ;interrupt_manager.c: 69: {
 25808                           ;interrupt_manager.c: 70: USBapp_setrxByteFlag();
 25809  000062  EC86  F035         	call	_USBapp_setrxByteFlag	;wreg free
 25810                           
 25811                           ;interrupt_manager.c: 71: EUSART_Receive_ISR();
 25812  000066  EC48  F033         	call	_EUSART_Receive_ISR	;wreg free
 25813                           
 25814                           ;interrupt_manager.c: 72: }
 25815  00006A  D00E               	goto	i2l1200
 25816  00006C                     i2l1194:
 25817                           
 25818                           ;interrupt_manager.c: 73: else if( (PIE1bits.TXIE == 1) && (PIR1bits.TXIF == 1) )
 25819  00006C  B89D               	btfsc	3997,4,c	;volatile
 25820  00006E  A89E               	btfss	3998,4,c	;volatile
 25821  000070  D003               	goto	i2l1196
 25822                           
 25823                           ;interrupt_manager.c: 74: {
 25824                           ;interrupt_manager.c: 75: EUSART_Transmit_ISR();
 25825  000072  EC2D  F033         	call	_EUSART_Transmit_ISR	;wreg free
 25826                           
 25827                           ;interrupt_manager.c: 76: }
 25828  000076  D008               	goto	i2l1200
 25829  000078                     i2l1196:
 25830                           
 25831                           ;interrupt_manager.c: 77: else if(PIE2bits.C1IE == 1 && PIR2bits.C1IF == 1)
 25832  000078  BCA0               	btfsc	4000,6,c	;volatile
 25833  00007A  ACA1               	btfss	4001,6,c	;volatile
 25834  00007C  D003               	goto	i2l11654
 25835                           
 25836                           ;interrupt_manager.c: 78: {
 25837                           ;interrupt_manager.c: 79: CMP1_ISR();
 25838  00007E  EC94  F035         	call	_CMP1_ISR	;wreg free
 25839                           
 25840                           ;interrupt_manager.c: 80: }
 25841  000082  D002               	goto	i2l1200
 25842  000084                     i2l11654:
 25843                           
 25844                           ;interrupt_manager.c: 81: else
 25845                           ;interrupt_manager.c: 82: {
 25846                           ;interrupt_manager.c: 84: USBDeviceTasks();
 25847  000084  EC7C  F01C         	call	_USBDeviceTasks	;wreg free
 25848  000088                     i2l1200:
 25849  000088  C02D  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 25850  00008C  C02C  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 25851  000090  C02B  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 25852  000094  C02A  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 25853  000098  C029  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 25854  00009C  C028  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 25855  0000A0  C027  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 25856  0000A4  C026  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 25857  0000A8  C025  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 25858  0000AC  C024  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 25859  0000B0  C023  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 25860  0000B4  C022  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 25861  0000B8  C021  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 25862  0000BC  C020  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 25863  0000C0  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 25864  0000C2  0011               	retfie		f
 25865  0000C4                     __end_of_INTERRUPT_InterruptManager:
 25866                           	opt stack 0
 25867                           pclatu	equ	0xFFB
 25868                           pclath	equ	0xFFA
 25869                           tblptru	equ	0xFF8
 25870                           tblptrh	equ	0xFF7
 25871                           tblptrl	equ	0xFF6
 25872                           tablat	equ	0xFF5
 25873                           prodh	equ	0xFF4
 25874                           prodl	equ	0xFF3
 25875                           intcon	equ	0xFF2
 25876                           intcon3	equ	0xFF0
 25877                           indf0	equ	0xFEF
 25878                           postinc0	equ	0xFEE
 25879                           fsr0h	equ	0xFEA
 25880                           fsr0l	equ	0xFE9
 25881                           wreg	equ	0xFE8
 25882                           indf1	equ	0xFE7
 25883                           postdec1	equ	0xFE5
 25884                           fsr1h	equ	0xFE2
 25885                           fsr1l	equ	0xFE1
 25886                           indf2	equ	0xFDF
 25887                           postinc2	equ	0xFDE
 25888                           postdec2	equ	0xFDD
 25889                           plusw2	equ	0xFDB
 25890                           fsr2h	equ	0xFDA
 25891                           fsr2l	equ	0xFD9
 25892                           status	equ	0xFD8
 25893                           
 25894 ;; *************** function _USBapp_setrxByteFlag *****************
 25895 ;; Defined at:
 25896 ;;		line 263 in file "../Includes/Board/USBapp.c"
 25897 ;; Parameters:    Size  Location     Type
 25898 ;;		None
 25899 ;; Auto vars:     Size  Location     Type
 25900 ;;		None
 25901 ;; Return value:  Size  Location     Type
 25902 ;;		None               void
 25903 ;; Registers used:
 25904 ;;		wreg, status,2
 25905 ;; Tracked objects:
 25906 ;;		On entry : 0/0
 25907 ;;		On exit  : 0/0
 25908 ;;		Unchanged: 0/0
 25909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25910 ;;      Params:         0       0       0       0       0       0       0       0       0
 25911 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25912 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25913 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25914 ;;Total ram usage:        0 bytes
 25915 ;; Hardware stack levels used:    1
 25916 ;; This function calls:
 25917 ;;		Nothing
 25918 ;; This function is called by:
 25919 ;;		_INTERRUPT_InterruptManager
 25920 ;; This function uses a non-reentrant model
 25921 ;;
 25922                           
 25923                           	psect	text104
 25924  006B0C                     __ptext104:
 25925                           	opt stack 0
 25926  006B0C                     _USBapp_setrxByteFlag:
 25927                           	opt stack 20
 25928                           
 25929                           ;USBapp.c: 265: rxByteFlag = 1;
 25930                           
 25931                           ;incstack = 0
 25932  006B0C  0E01               	movlw	1
 25933  006B0E  6E56               	movwf	_rxByteFlag,c	;volatile
 25934  006B10  0012               	return		;funcret
 25935  006B12                     __end_of_USBapp_setrxByteFlag:
 25936                           	opt stack 0
 25937                           pclatu	equ	0xFFB
 25938                           pclath	equ	0xFFA
 25939                           tblptru	equ	0xFF8
 25940                           tblptrh	equ	0xFF7
 25941                           tblptrl	equ	0xFF6
 25942                           tablat	equ	0xFF5
 25943                           prodh	equ	0xFF4
 25944                           prodl	equ	0xFF3
 25945                           intcon	equ	0xFF2
 25946                           intcon3	equ	0xFF0
 25947                           indf0	equ	0xFEF
 25948                           postinc0	equ	0xFEE
 25949                           fsr0h	equ	0xFEA
 25950                           fsr0l	equ	0xFE9
 25951                           wreg	equ	0xFE8
 25952                           indf1	equ	0xFE7
 25953                           postdec1	equ	0xFE5
 25954                           fsr1h	equ	0xFE2
 25955                           fsr1l	equ	0xFE1
 25956                           indf2	equ	0xFDF
 25957                           postinc2	equ	0xFDE
 25958                           postdec2	equ	0xFDD
 25959                           plusw2	equ	0xFDB
 25960                           fsr2h	equ	0xFDA
 25961                           fsr2l	equ	0xFD9
 25962                           status	equ	0xFD8
 25963                           
 25964 ;; *************** function _USBDeviceTasks *****************
 25965 ;; Defined at:
 25966 ;;		line 428 in file "../Includes/Usb/Framework/usb_device.c"
 25967 ;; Parameters:    Size  Location     Type
 25968 ;;		None
 25969 ;; Auto vars:     Size  Location     Type
 25970 ;;  i               1   30[COMRAM] unsigned char 
 25971 ;; Return value:  Size  Location     Type
 25972 ;;		None               void
 25973 ;; Registers used:
 25974 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 25975 ;; Tracked objects:
 25976 ;;		On entry : 0/0
 25977 ;;		On exit  : 0/0
 25978 ;;		Unchanged: 0/0
 25979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25980 ;;      Params:         0       0       0       0       0       0       0       0       0
 25981 ;;      Locals:         1       0       0       0       0       0       0       0       0
 25982 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25983 ;;      Totals:         1       0       0       0       0       0       0       0       0
 25984 ;;Total ram usage:        1 bytes
 25985 ;; Hardware stack levels used:    1
 25986 ;; Hardware stack levels required when called:    9
 25987 ;; This function calls:
 25988 ;;		_USBCtrlEPAllowStatusStage
 25989 ;;		_USBCtrlEPService
 25990 ;;		_USBStallHandler
 25991 ;;		_USBSuspend
 25992 ;;		_USBWakeFromSuspend
 25993 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 25994 ;;		i2_USBDeviceInit
 25995 ;; This function is called by:
 25996 ;;		_INTERRUPT_InterruptManager
 25997 ;; This function uses a non-reentrant model
 25998 ;;
 25999                           
 26000                           	psect	text105
 26001  0038F8                     __ptext105:
 26002                           	opt stack 0
 26003  0038F8                     _USBDeviceTasks:
 26004                           	opt stack 11
 26005                           
 26006                           ;usb_device.c: 430: uint8_t i;
 26007                           ;usb_device.c: 432: if(USBDeviceState == ATTACHED_STATE)
 26008                           
 26009                           ;incstack = 0
 26010  0038F8  0100               	movlb	0	; () banked
 26011  0038FA  05D2               	decf	_USBDeviceState& (0+255),w,b	;volatile
 26012  0038FC  B4D8               	btfsc	status,2,c
 26013                           
 26014                           ; BSR set to: 0
 26015                           ;usb_device.c: 433: {
 26016                           ;usb_device.c: 443: if(!UCONbits.SE0)
 26017  0038FE  BA60               	btfsc	3936,5,c	;volatile
 26018  003900  D007               	goto	i2l11352
 26019                           
 26020                           ; BSR set to: 0
 26021                           ;usb_device.c: 444: {
 26022                           ;usb_device.c: 445: {UIR = 0;};
 26023  003902  0E00               	movlw	0
 26024  003904  6E65               	movwf	3941,c	;volatile
 26025                           
 26026                           ; BSR set to: 0
 26027                           ;usb_device.c: 446: UIEbits.URSTIE = 1;
 26028  003906  8064               	bsf	3940,0,c	;volatile
 26029                           
 26030                           ; BSR set to: 0
 26031                           ;usb_device.c: 447: UIEbits.IDLEIE = 1;
 26032  003908  8864               	bsf	3940,4,c	;volatile
 26033                           
 26034                           ;usb_device.c: 448: USBDeviceState = POWERED_STATE;
 26035  00390A  0E02               	movlw	2
 26036  00390C  0100               	movlb	0	; () banked
 26037  00390E  6FD2               	movwf	_USBDeviceState& (0+255),b	;volatile
 26038  003910                     i2l11352:
 26039                           
 26040                           ; BSR set to: 0
 26041                           ;usb_device.c: 449: }
 26042                           ;usb_device.c: 450: }
 26043                           ;usb_device.c: 454: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 26044  003910  B465               	btfsc	3941,2,c	;volatile
 26045                           
 26046                           ; BSR set to: 0
 26047  003912  A464               	btfss	3940,2,c	;volatile
 26048  003914  D003               	goto	i2l11360
 26049                           
 26050                           ; BSR set to: 0
 26051                           ;usb_device.c: 455: {
 26052                           ;usb_device.c: 456: (UIR &= 0xFB);
 26053  003916  9465               	bcf	3941,2,c	;volatile
 26054                           
 26055                           ; BSR set to: 0
 26056                           ;usb_device.c: 457: USBWakeFromSuspend();
 26057  003918  ECC8  F033         	call	_USBWakeFromSuspend	;wreg free
 26058  00391C                     i2l11360:
 26059                           
 26060                           ;usb_device.c: 458: }
 26061                           ;usb_device.c: 463: if(UCONbits.SUSPND==1)
 26062  00391C  A260               	btfss	3936,1,c	;volatile
 26063  00391E  D002               	goto	i2l1724
 26064                           
 26065                           ;usb_device.c: 464: {
 26066                           ;usb_device.c: 465: PIR3bits.USBIF = 0;;
 26067  003920  94A4               	bcf	4004,2,c	;volatile
 26068                           
 26069                           ;usb_device.c: 466: return;
 26070  003922  0012               	return	
 26071  003924                     i2l1724:
 26072                           
 26073                           ;usb_device.c: 467: }
 26074                           ;usb_device.c: 479: if(UIRbits.URSTIF && UIEbits.URSTIE)
 26075  003924  B065               	btfsc	3941,0,c	;volatile
 26076  003926  A064               	btfss	3940,0,c	;volatile
 26077  003928  D007               	goto	i2l11374
 26078                           
 26079                           ;usb_device.c: 480: {
 26080                           ;usb_device.c: 481: USBDeviceInit();
 26081  00392A  ECE0  F01B         	call	i2_USBDeviceInit	;wreg free
 26082                           
 26083                           ;usb_device.c: 485: {PIE3bits.USBIE = 1;};
 26084  00392E  84A3               	bsf	4003,2,c	;volatile
 26085                           
 26086                           ;usb_device.c: 487: USBDeviceState = DEFAULT_STATE;
 26087  003930  0E04               	movlw	4
 26088  003932  0100               	movlb	0	; () banked
 26089  003934  6FD2               	movwf	_USBDeviceState& (0+255),b	;volatile
 26090                           
 26091                           ; BSR set to: 0
 26092                           ;usb_device.c: 489: (UIR &= 0xFE);
 26093  003936  9065               	bcf	3941,0,c	;volatile
 26094  003938                     i2l11374:
 26095                           
 26096                           ;usb_device.c: 490: }
 26097                           ;usb_device.c: 495: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 26098  003938  B865               	btfsc	3941,4,c	;volatile
 26099  00393A  A864               	btfss	3940,4,c	;volatile
 26100  00393C  D003               	goto	i2l11382
 26101                           
 26102                           ;usb_device.c: 496: {
 26103                           ;usb_device.c: 497: USBSuspend();
 26104  00393E  EC0B  F034         	call	_USBSuspend	;wreg free
 26105                           
 26106                           ;usb_device.c: 498: (UIR &= 0xEF);
 26107  003942  9865               	bcf	3941,4,c	;volatile
 26108  003944                     i2l11382:
 26109                           
 26110                           ;usb_device.c: 499: }
 26111                           ;usb_device.c: 501: if(UIRbits.SOFIF)
 26112  003944  AC65               	btfss	3941,6,c	;volatile
 26113  003946  D018               	goto	i2l11398
 26114                           
 26115                           ;usb_device.c: 502: {
 26116                           ;usb_device.c: 503: if(UIEbits.SOFIE)
 26117  003948  AC64               	btfss	3940,6,c	;volatile
 26118  00394A  D00E               	goto	i2l11388
 26119                           
 26120                           ;usb_device.c: 504: {
 26121                           ;usb_device.c: 505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 26122  00394C  0E00               	movlw	0
 26123  00394E  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26124  003950  0E73               	movlw	115
 26125  003952  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26126  003954  0E00               	movlw	0
 26127  003956  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26128  003958  0E00               	movlw	0
 26129  00395A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26130  00395C  0E00               	movlw	0
 26131  00395E  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26132  003960  0E01               	movlw	1
 26133  003962  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26134  003964  EC41  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26135  003968                     i2l11388:
 26136                           
 26137                           ;usb_device.c: 506: }
 26138                           ;usb_device.c: 507: (UIR &= 0xBF);
 26139  003968  9C65               	bcf	3941,6,c	;volatile
 26140                           
 26141                           ;usb_device.c: 512: if(USBStatusStageTimeoutCounter != 0u)
 26142  00396A  504F               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 26143  00396C  A4D8               	btfss	status,2,c
 26144                           
 26145                           ;usb_device.c: 513: {
 26146                           ;usb_device.c: 514: USBStatusStageTimeoutCounter--;
 26147  00396E  064F               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 26148                           
 26149                           ;usb_device.c: 515: }
 26150                           ;usb_device.c: 521: if(USBStatusStageTimeoutCounter == 0)
 26151  003970  504F               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 26152  003972  B4D8               	btfsc	status,2,c
 26153                           
 26154                           ;usb_device.c: 522: {
 26155                           ;usb_device.c: 523: USBCtrlEPAllowStatusStage();
 26156  003974  EC6E  F027         	call	_USBCtrlEPAllowStatusStage	;wreg free
 26157  003978                     i2l11398:
 26158                           
 26159                           ;usb_device.c: 524: }
 26160                           ;usb_device.c: 525: }
 26161                           ;usb_device.c: 527: if(UIRbits.STALLIF && UIEbits.STALLIE)
 26162  003978  BA65               	btfsc	3941,5,c	;volatile
 26163  00397A  AA64               	btfss	3940,5,c	;volatile
 26164  00397C  D002               	goto	i2l11404
 26165                           
 26166                           ;usb_device.c: 528: {
 26167                           ;usb_device.c: 529: USBStallHandler();
 26168  00397E  EC04  F032         	call	_USBStallHandler	;wreg free
 26169  003982                     i2l11404:
 26170                           
 26171                           ;usb_device.c: 530: }
 26172                           ;usb_device.c: 532: if(UIRbits.UERRIF && UIEbits.UERRIE)
 26173  003982  B265               	btfsc	3941,1,c	;volatile
 26174  003984  A264               	btfss	3940,1,c	;volatile
 26175  003986  D00F               	goto	i2l11412
 26176                           
 26177                           ;usb_device.c: 533: {
 26178                           ;usb_device.c: 534: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 26179  003988  0E7F               	movlw	127
 26180  00398A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26181  00398C  680E               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26182  00398E  0E00               	movlw	0
 26183  003990  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26184  003992  0E00               	movlw	0
 26185  003994  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26186  003996  0E00               	movlw	0
 26187  003998  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26188  00399A  0E01               	movlw	1
 26189  00399C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26190  00399E  EC41  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26191                           
 26192                           ;usb_device.c: 535: {UEIR = 0;};
 26193  0039A2  0E00               	movlw	0
 26194  0039A4  6E67               	movwf	3943,c	;volatile
 26195  0039A6                     i2l11412:
 26196                           
 26197                           ;usb_device.c: 536: }
 26198                           ;usb_device.c: 543: if(USBDeviceState < DEFAULT_STATE)
 26199  0039A6  0E04               	movlw	4
 26200  0039A8  0100               	movlb	0	; () banked
 26201  0039AA  61D2               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 26202  0039AC  D002               	goto	i2l1734
 26203                           
 26204                           ; BSR set to: 0
 26205                           ;usb_device.c: 544: {
 26206                           ;usb_device.c: 545: PIR3bits.USBIF = 0;;
 26207  0039AE  94A4               	bcf	4004,2,c	;volatile
 26208                           
 26209                           ;usb_device.c: 546: return;
 26210  0039B0  0012               	return	
 26211  0039B2                     i2l1734:
 26212                           
 26213                           ; BSR set to: 0
 26214                           ;usb_device.c: 547: }
 26215                           ;usb_device.c: 552: if(UIEbits.TRNIE)
 26216  0039B2  A664               	btfss	3940,3,c	;volatile
 26217  0039B4  D039               	goto	i2l1735
 26218                           
 26219                           ; BSR set to: 0
 26220                           ;usb_device.c: 553: {
 26221                           ;usb_device.c: 554: for(i = 0; i < 4u; i++)
 26222  0039B6  0E00               	movlw	0
 26223  0039B8  6E1F               	movwf	USBDeviceTasks@i,c
 26224  0039BA                     i2l11418:
 26225                           
 26226                           ; BSR set to: 0
 26227  0039BA  0E03               	movlw	3
 26228  0039BC  641F               	cpfsgt	USBDeviceTasks@i,c
 26229  0039BE  D001               	goto	i2l1736
 26230  0039C0  D033               	goto	i2l1735
 26231  0039C2                     i2l1736:
 26232                           
 26233                           ;usb_device.c: 555: {
 26234                           ;usb_device.c: 556: if(UIRbits.TRNIF)
 26235  0039C2  A665               	btfss	3941,3,c	;volatile
 26236  0039C4  D031               	goto	i2l1735
 26237                           
 26238                           ;usb_device.c: 557: {
 26239                           ;usb_device.c: 559: USTATcopy.Val = USTAT;
 26240  0039C6  CF61 F059          	movff	3937,_USTATcopy	;volatile
 26241                           
 26242                           ;usb_device.c: 560: endpoint_number = USTATcopy.endpoint_number;
 26243  0039CA  3059               	rrcf	_USTATcopy,w,c	;volatile
 26244  0039CC  32E8               	rrcf	wreg,f,c
 26245  0039CE  32E8               	rrcf	wreg,f,c
 26246  0039D0  0B0F               	andlw	15
 26247  0039D2  6E52               	movwf	_endpoint_number,c	;volatile
 26248                           
 26249                           ;usb_device.c: 562: (UIR &= 0xF7);
 26250  0039D4  9665               	bcf	3941,3,c	;volatile
 26251                           
 26252                           ;usb_device.c: 566: if(USTATcopy.direction == 0)
 26253  0039D6  B459               	btfsc	_USTATcopy,2,c	;volatile
 26254  0039D8  D007               	goto	i2l11432
 26255                           
 26256                           ;usb_device.c: 567: {
 26257                           ;usb_device.c: 568: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 26258  0039DA  5052               	movf	_endpoint_number,w,c	;volatile
 26259  0039DC  0D01               	mullw	1
 26260  0039DE  0EBA               	movlw	low _ep_data_out
 26261  0039E0  24F3               	addwf	prodl,w,c
 26262  0039E2  6ED9               	movwf	fsr2l,c
 26263  0039E4  0E00               	movlw	high _ep_data_out
 26264  0039E6  D006               	goto	L25
 26265  0039E8                     i2l11432:
 26266                           
 26267                           ;usb_device.c: 570: else
 26268                           ;usb_device.c: 571: {
 26269                           ;usb_device.c: 572: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 26270  0039E8  5052               	movf	_endpoint_number,w,c	;volatile
 26271  0039EA  0D01               	mullw	1
 26272  0039EC  0EB7               	movlw	low _ep_data_in
 26273  0039EE  24F3               	addwf	prodl,w,c
 26274  0039F0  6ED9               	movwf	fsr2l,c
 26275  0039F2  0E00               	movlw	high _ep_data_in
 26276  0039F4                     L25:
 26277  0039F4  20F4               	addwfc	prodh,w,c
 26278  0039F6  6EDA               	movwf	fsr2h,c
 26279  0039F8  0100               	movlb	0	; () banked
 26280  0039FA  70DF               	btg	indf2,0,c
 26281                           
 26282                           ; BSR set to: 0
 26283                           ;usb_device.c: 573: }
 26284                           ;usb_device.c: 577: if(endpoint_number == 0)
 26285                           
 26286                           ; BSR set to: 0
 26287  0039FC  5052               	movf	_endpoint_number,w,c	;volatile
 26288  0039FE  A4D8               	btfss	status,2,c
 26289  003A00  D003               	goto	i2l11438
 26290                           
 26291                           ; BSR set to: 0
 26292                           ;usb_device.c: 578: {
 26293                           ;usb_device.c: 579: USBCtrlEPService();
 26294  003A02  EC07  F027         	call	_USBCtrlEPService	;wreg free
 26295                           
 26296                           ;usb_device.c: 580: }
 26297  003A06  D00E               	goto	i2l11440
 26298  003A08                     i2l11438:
 26299                           
 26300                           ;usb_device.c: 581: else
 26301                           ;usb_device.c: 582: {
 26302                           ;usb_device.c: 583: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 26303  003A08  0E00               	movlw	0
 26304  003A0A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26305  003A0C  0E72               	movlw	114
 26306  003A0E  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26307  003A10  0E59               	movlw	low _USTATcopy
 26308  003A12  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26309  003A14  0E00               	movlw	high _USTATcopy
 26310  003A16  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26311  003A18  0E00               	movlw	0
 26312  003A1A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26313  003A1C  0E00               	movlw	0
 26314  003A1E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26315  003A20  EC41  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26316  003A24                     i2l11440:
 26317  003A24  2A1F               	incf	USBDeviceTasks@i,f,c
 26318  003A26  D7C9               	goto	i2l11418
 26319  003A28                     i2l1735:
 26320                           
 26321                           ;usb_device.c: 589: }
 26322                           ;usb_device.c: 590: }
 26323                           ;usb_device.c: 591: }
 26324                           ;usb_device.c: 593: PIR3bits.USBIF = 0;;
 26325  003A28  94A4               	bcf	4004,2,c	;volatile
 26326  003A2A  0012               	return		;funcret
 26327  003A2C                     __end_of_USBDeviceTasks:
 26328                           	opt stack 0
 26329                           pclatu	equ	0xFFB
 26330                           pclath	equ	0xFFA
 26331                           tblptru	equ	0xFF8
 26332                           tblptrh	equ	0xFF7
 26333                           tblptrl	equ	0xFF6
 26334                           tablat	equ	0xFF5
 26335                           prodh	equ	0xFF4
 26336                           prodl	equ	0xFF3
 26337                           intcon	equ	0xFF2
 26338                           intcon3	equ	0xFF0
 26339                           indf0	equ	0xFEF
 26340                           postinc0	equ	0xFEE
 26341                           fsr0h	equ	0xFEA
 26342                           fsr0l	equ	0xFE9
 26343                           wreg	equ	0xFE8
 26344                           indf1	equ	0xFE7
 26345                           postdec1	equ	0xFE5
 26346                           fsr1h	equ	0xFE2
 26347                           fsr1l	equ	0xFE1
 26348                           indf2	equ	0xFDF
 26349                           postinc2	equ	0xFDE
 26350                           postdec2	equ	0xFDD
 26351                           plusw2	equ	0xFDB
 26352                           fsr2h	equ	0xFDA
 26353                           fsr2l	equ	0xFD9
 26354                           status	equ	0xFD8
 26355                           
 26356 ;; *************** function i2_USBDeviceInit *****************
 26357 ;; Defined at:
 26358 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 26359 ;; Parameters:    Size  Location     Type
 26360 ;;		None
 26361 ;; Auto vars:     Size  Location     Type
 26362 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 26363 ;; Return value:  Size  Location     Type
 26364 ;;		None               void
 26365 ;; Registers used:
 26366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26367 ;; Tracked objects:
 26368 ;;		On entry : 0/0
 26369 ;;		On exit  : 0/0
 26370 ;;		Unchanged: 0/0
 26371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26372 ;;      Params:         0       0       0       0       0       0       0       0       0
 26373 ;;      Locals:         1       0       0       0       0       0       0       0       0
 26374 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26375 ;;      Totals:         1       0       0       0       0       0       0       0       0
 26376 ;;Total ram usage:        1 bytes
 26377 ;; Hardware stack levels used:    1
 26378 ;; Hardware stack levels required when called:    1
 26379 ;; This function calls:
 26380 ;;		i2_memset
 26381 ;; This function is called by:
 26382 ;;		_USBDeviceTasks
 26383 ;; This function uses a non-reentrant model
 26384 ;;
 26385                           
 26386                           	psect	text106
 26387  0037C0                     __ptext106:
 26388                           	opt stack 0
 26389  0037C0                     i2_USBDeviceInit:
 26390                           	opt stack 18
 26391                           
 26392                           ;usb_device.c: 239: uint8_t i;
 26393                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 26394                           
 26395                           ;incstack = 0
 26396  0037C0  94A3               	bcf	4003,2,c	;volatile
 26397                           
 26398                           ;usb_device.c: 244: {UEIR = 0;};
 26399  0037C2  0E00               	movlw	0
 26400  0037C4  6E67               	movwf	3943,c	;volatile
 26401                           
 26402                           ;usb_device.c: 247: {UIR = 0;};
 26403  0037C6  0E00               	movlw	0
 26404  0037C8  6E65               	movwf	3941,c	;volatile
 26405                           
 26406                           ;usb_device.c: 250: UEP0 = 0;
 26407  0037CA  0E00               	movlw	0
 26408  0037CC  6E6A               	movwf	3946,c	;volatile
 26409                           
 26410                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 26411  0037CE  0E6B               	movlw	107
 26412  0037D0  6E01               	movwf	i2memset@p1,c
 26413  0037D2  0E0F               	movlw	15
 26414  0037D4  6E02               	movwf	i2memset@p1+1,c
 26415  0037D6  0E00               	movlw	0
 26416  0037D8  6E04               	movwf	i2memset@c+1,c
 26417  0037DA  0E00               	movlw	0
 26418  0037DC  6E03               	movwf	i2memset@c,c
 26419  0037DE  0E00               	movlw	0
 26420  0037E0  6E06               	movwf	i2memset@n+1,c
 26421  0037E2  0E02               	movlw	2
 26422  0037E4  6E05               	movwf	i2memset@n,c
 26423  0037E6  ECE0  F033         	call	i2_memset	;wreg free
 26424                           
 26425                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 26426  0037EA  0E16               	movlw	22
 26427  0037EC  6E62               	movwf	3938,c	;volatile
 26428  0037EE  0E9F               	movlw	159
 26429  0037F0  6E66               	movwf	3942,c	;volatile
 26430  0037F2  0E7B               	movlw	123
 26431  0037F4  6E64               	movwf	3940,c	;volatile
 26432                           
 26433                           ;usb_device.c: 257: ;
 26434                           ;usb_device.c: 260: ;
 26435                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 26436  0037F6  0E00               	movlw	0
 26437  0037F8  6E09               	movwf	i2USBDeviceInit@i,c
 26438  0037FA                     i2l10984:
 26439  0037FA  0E0B               	movlw	11
 26440  0037FC  6409               	cpfsgt	i2USBDeviceInit@i,c
 26441  0037FE  D001               	goto	i2l10988
 26442  003800  D00E               	goto	i2l1712
 26443  003802                     i2l10988:
 26444                           
 26445                           ;usb_device.c: 264: {
 26446                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 26447  003802  5009               	movf	i2USBDeviceInit@i,w,c
 26448  003804  0D04               	mullw	4
 26449  003806  0E00               	movlw	0
 26450  003808  24F3               	addwf	prodl,w,c
 26451  00380A  6ED9               	movwf	fsr2l,c
 26452  00380C  0E04               	movlw	4
 26453  00380E  20F4               	addwfc	prodh,w,c
 26454  003810  6EDA               	movwf	fsr2h,c
 26455  003812  6ADE               	clrf	postinc2,c
 26456  003814  6ADE               	clrf	postinc2,c
 26457  003816  6ADE               	clrf	postinc2,c
 26458  003818  6ADD               	clrf	postdec2,c
 26459  00381A  2A09               	incf	i2USBDeviceInit@i,f,c
 26460  00381C  D7EE               	goto	i2l10984
 26461  00381E                     i2l1712:
 26462                           
 26463                           ;usb_device.c: 266: }
 26464                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 26465  00381E  8C60               	bsf	3936,6,c	;volatile
 26466                           
 26467                           ;usb_device.c: 272: UADDR = 0x00;
 26468  003820  0E00               	movlw	0
 26469  003822  6E63               	movwf	3939,c	;volatile
 26470                           
 26471                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 26472  003824  9860               	bcf	3936,4,c	;volatile
 26473                           
 26474                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 26475  003826  9C60               	bcf	3936,6,c	;volatile
 26476                           
 26477                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 26478  003828  D009               	goto	i2l11008
 26479  00382A                     i2l11000:
 26480                           
 26481                           ;usb_device.c: 282: {
 26482                           ;usb_device.c: 283: (UIR &= 0xF7);
 26483  00382A  9665               	bcf	3941,3,c	;volatile
 26484                           
 26485                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 26486  00382C  0E00               	movlw	0
 26487  00382E  6E39               	movwf	_inPipes+3,c	;volatile
 26488                           
 26489                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 26490  003830  0E00               	movlw	0
 26491  003832  6E31               	movwf	_outPipes+3,c	;volatile
 26492                           
 26493                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 26494  003834  0E00               	movlw	0
 26495  003836  6E33               	movwf	_outPipes+5,c	;volatile
 26496  003838  0E00               	movlw	0
 26497  00383A  6E32               	movwf	_outPipes+4,c	;volatile
 26498  00383C                     i2l11008:
 26499  00383C  B665               	btfsc	3941,3,c	;volatile
 26500  00383E  D7F5               	goto	i2l11000
 26501                           
 26502                           ;usb_device.c: 288: }
 26503                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 26504  003840  0E01               	movlw	1
 26505  003842  0100               	movlb	0	; () banked
 26506  003844  6FD3               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 26507                           
 26508                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 26509  003846  0E01               	movlw	1
 26510  003848  0100               	movlb	0	; () banked
 26511  00384A  6FD4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 26512                           
 26513                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 26514  00384C  0E00               	movlw	0
 26515  00384E  0100               	movlb	0	; () banked
 26516  003850  6FD0               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 26517                           
 26518                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 26519  003852  0E00               	movlw	0
 26520  003854  0100               	movlb	0	; () banked
 26521  003856  6FD1               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 26522                           
 26523                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 26524  003858  0E00               	movlw	0
 26525  00385A  0100               	movlb	0	; () banked
 26526  00385C  6FCF               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 26527                           
 26528                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 26529  00385E  0E00               	movlw	0
 26530  003860  6E09               	movwf	i2USBDeviceInit@i,c
 26531  003862                     i2l11012:
 26532                           
 26533                           ; BSR set to: 0
 26534  003862  0E02               	movlw	2
 26535  003864  6409               	cpfsgt	i2USBDeviceInit@i,c
 26536  003866  D001               	goto	i2l11016
 26537  003868  D02E               	goto	i2l11022
 26538  00386A                     i2l11016:
 26539                           
 26540                           ;usb_device.c: 302: {
 26541                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 26542  00386A  5009               	movf	i2USBDeviceInit@i,w,c
 26543  00386C  0D02               	mullw	2
 26544  00386E  0E3C               	movlw	low _pBDTEntryIn
 26545  003870  24F3               	addwf	prodl,w,c
 26546  003872  6ED9               	movwf	fsr2l,c
 26547  003874  0E00               	movlw	high _pBDTEntryIn
 26548  003876  20F4               	addwfc	prodh,w,c
 26549  003878  6EDA               	movwf	fsr2h,c
 26550  00387A  0E00               	movlw	0
 26551  00387C  6EDE               	movwf	postinc2,c
 26552  00387E  0E00               	movlw	0
 26553  003880  6EDD               	movwf	postdec2,c
 26554                           
 26555                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 26556  003882  5009               	movf	i2USBDeviceInit@i,w,c
 26557  003884  0D02               	mullw	2
 26558  003886  0E40               	movlw	low _pBDTEntryOut
 26559  003888  24F3               	addwf	prodl,w,c
 26560  00388A  6ED9               	movwf	fsr2l,c
 26561  00388C  0E01               	movlw	high _pBDTEntryOut
 26562  00388E  20F4               	addwfc	prodh,w,c
 26563  003890  6EDA               	movwf	fsr2h,c
 26564  003892  0E00               	movlw	0
 26565  003894  6EDE               	movwf	postinc2,c
 26566  003896  0E00               	movlw	0
 26567  003898  6EDD               	movwf	postdec2,c
 26568                           
 26569                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 26570  00389A  5009               	movf	i2USBDeviceInit@i,w,c
 26571  00389C  0D01               	mullw	1
 26572  00389E  0EB7               	movlw	low _ep_data_in
 26573  0038A0  24F3               	addwf	prodl,w,c
 26574  0038A2  6ED9               	movwf	fsr2l,c
 26575  0038A4  0E00               	movlw	high _ep_data_in
 26576  0038A6  20F4               	addwfc	prodh,w,c
 26577  0038A8  6EDA               	movwf	fsr2h,c
 26578  0038AA  0E00               	movlw	0
 26579  0038AC  6EDF               	movwf	indf2,c
 26580                           
 26581                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 26582  0038AE  5009               	movf	i2USBDeviceInit@i,w,c
 26583  0038B0  0D01               	mullw	1
 26584  0038B2  0EBA               	movlw	low _ep_data_out
 26585  0038B4  24F3               	addwf	prodl,w,c
 26586  0038B6  6ED9               	movwf	fsr2l,c
 26587  0038B8  0E00               	movlw	high _ep_data_out
 26588  0038BA  20F4               	addwfc	prodh,w,c
 26589  0038BC  6EDA               	movwf	fsr2h,c
 26590  0038BE  0E00               	movlw	0
 26591  0038C0  6EDF               	movwf	indf2,c
 26592  0038C2  2A09               	incf	i2USBDeviceInit@i,f,c
 26593  0038C4  D7CE               	goto	i2l11012
 26594  0038C6                     i2l11022:
 26595                           
 26596                           ;usb_device.c: 307: }
 26597                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 26598  0038C6  0E08               	movlw	8
 26599  0038C8  6E3C               	movwf	_pBDTEntryIn,c
 26600  0038CA  0E04               	movlw	4
 26601  0038CC  6E3D               	movwf	_pBDTEntryIn+1,c
 26602                           
 26603                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 26604  0038CE  0E16               	movlw	22
 26605  0038D0  6E6A               	movwf	3946,c	;volatile
 26606                           
 26607                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 26608  0038D2  0E04               	movlw	4
 26609  0038D4  0104               	movlb	4	; () banked
 26610  0038D6  6F03               	movwf	3,b	;volatile
 26611  0038D8  0E30               	movlw	48
 26612  0038DA  6F02               	movwf	2,b	;volatile
 26613                           
 26614                           ; BSR set to: 4
 26615                           ;usb_device.c: 315: BDT[0].CNT = 8;
 26616  0038DC  0E08               	movlw	8
 26617  0038DE  0104               	movlb	4	; () banked
 26618  0038E0  6F01               	movwf	1,b	;volatile
 26619                           
 26620                           ; BSR set to: 4
 26621                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 26622  0038E2  0E04               	movlw	4
 26623  0038E4  0104               	movlb	4	; () banked
 26624  0038E6  6F00               	movwf	0,b	;volatile
 26625                           
 26626                           ; BSR set to: 4
 26627                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 26628  0038E8  0104               	movlb	4	; () banked
 26629  0038EA  8F00               	bsf	0,7,b	;volatile
 26630                           
 26631                           ; BSR set to: 4
 26632                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 26633  0038EC  0E00               	movlw	0
 26634  0038EE  6E58               	movwf	_USBActiveConfiguration,c	;volatile
 26635                           
 26636                           ; BSR set to: 4
 26637                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 26638  0038F0  0E00               	movlw	0
 26639  0038F2  0100               	movlb	0	; () banked
 26640  0038F4  6FD2               	movwf	_USBDeviceState& (0+255),b	;volatile
 26641                           
 26642                           ; BSR set to: 0
 26643  0038F6  0012               	return		;funcret
 26644  0038F8                     __end_ofi2_USBDeviceInit:
 26645                           	opt stack 0
 26646                           pclatu	equ	0xFFB
 26647                           pclath	equ	0xFFA
 26648                           tblptru	equ	0xFF8
 26649                           tblptrh	equ	0xFF7
 26650                           tblptrl	equ	0xFF6
 26651                           tablat	equ	0xFF5
 26652                           prodh	equ	0xFF4
 26653                           prodl	equ	0xFF3
 26654                           intcon	equ	0xFF2
 26655                           intcon3	equ	0xFF0
 26656                           indf0	equ	0xFEF
 26657                           postinc0	equ	0xFEE
 26658                           fsr0h	equ	0xFEA
 26659                           fsr0l	equ	0xFE9
 26660                           wreg	equ	0xFE8
 26661                           indf1	equ	0xFE7
 26662                           postdec1	equ	0xFE5
 26663                           fsr1h	equ	0xFE2
 26664                           fsr1l	equ	0xFE1
 26665                           indf2	equ	0xFDF
 26666                           postinc2	equ	0xFDE
 26667                           postdec2	equ	0xFDD
 26668                           plusw2	equ	0xFDB
 26669                           fsr2h	equ	0xFDA
 26670                           fsr2l	equ	0xFD9
 26671                           status	equ	0xFD8
 26672                           
 26673 ;; *************** function _USBWakeFromSuspend *****************
 26674 ;; Defined at:
 26675 ;;		line 1944 in file "../Includes/Usb/Framework/usb_device.c"
 26676 ;; Parameters:    Size  Location     Type
 26677 ;;		None
 26678 ;; Auto vars:     Size  Location     Type
 26679 ;;		None
 26680 ;; Return value:  Size  Location     Type
 26681 ;;		None               void
 26682 ;; Registers used:
 26683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26684 ;; Tracked objects:
 26685 ;;		On entry : 0/0
 26686 ;;		On exit  : 0/0
 26687 ;;		Unchanged: 0/0
 26688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26689 ;;      Params:         0       0       0       0       0       0       0       0       0
 26690 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26691 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26692 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26693 ;;Total ram usage:        0 bytes
 26694 ;; Hardware stack levels used:    1
 26695 ;; Hardware stack levels required when called:    5
 26696 ;; This function calls:
 26697 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26698 ;; This function is called by:
 26699 ;;		_USBDeviceTasks
 26700 ;; This function uses a non-reentrant model
 26701 ;;
 26702                           
 26703                           	psect	text107
 26704  006790                     __ptext107:
 26705                           	opt stack 0
 26706  006790                     _USBWakeFromSuspend:
 26707                           	opt stack 14
 26708                           
 26709                           ;usb_device.c: 1946: USBBusIsSuspended = 0;
 26710                           
 26711                           ; BSR set to: 0
 26712                           ;incstack = 0
 26713  006790  0E00               	movlw	0
 26714  006792  0100               	movlb	0	; () banked
 26715  006794  6FCF               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 26716                           
 26717                           ; BSR set to: 0
 26718                           ;usb_device.c: 1952: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 26719  006796  0E00               	movlw	0
 26720  006798  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26721  00679A  0E74               	movlw	116
 26722  00679C  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26723  00679E  0E00               	movlw	0
 26724  0067A0  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26725  0067A2  0E00               	movlw	0
 26726  0067A4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26727  0067A6  0E00               	movlw	0
 26728  0067A8  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26729  0067AA  0E00               	movlw	0
 26730  0067AC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26731  0067AE  EC41  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26732                           
 26733                           ;usb_device.c: 1958: UCONbits.SUSPND = 0;
 26734  0067B2  9260               	bcf	3936,1,c	;volatile
 26735                           
 26736                           ;usb_device.c: 1960: UIEbits.ACTVIE = 0;
 26737  0067B4  9464               	bcf	3940,2,c	;volatile
 26738                           
 26739                           ;usb_device.c: 1976: while(UIRbits.ACTVIF)
 26740  0067B6  D001               	goto	i2l10910
 26741  0067B8                     i2l10908:
 26742                           
 26743                           ;usb_device.c: 1977: {
 26744                           ;usb_device.c: 1978: (UIR &= 0xFB);
 26745  0067B8  9465               	bcf	3941,2,c	;volatile
 26746  0067BA                     i2l10910:
 26747  0067BA  A465               	btfss	3941,2,c	;volatile
 26748  0067BC  0012               	return	
 26749  0067BE  D7FC               	goto	i2l10908
 26750  0067C0                     __end_of_USBWakeFromSuspend:
 26751                           	opt stack 0
 26752                           pclatu	equ	0xFFB
 26753                           pclath	equ	0xFFA
 26754                           tblptru	equ	0xFF8
 26755                           tblptrh	equ	0xFF7
 26756                           tblptrl	equ	0xFF6
 26757                           tablat	equ	0xFF5
 26758                           prodh	equ	0xFF4
 26759                           prodl	equ	0xFF3
 26760                           intcon	equ	0xFF2
 26761                           intcon3	equ	0xFF0
 26762                           indf0	equ	0xFEF
 26763                           postinc0	equ	0xFEE
 26764                           fsr0h	equ	0xFEA
 26765                           fsr0l	equ	0xFE9
 26766                           wreg	equ	0xFE8
 26767                           indf1	equ	0xFE7
 26768                           postdec1	equ	0xFE5
 26769                           fsr1h	equ	0xFE2
 26770                           fsr1l	equ	0xFE1
 26771                           indf2	equ	0xFDF
 26772                           postinc2	equ	0xFDE
 26773                           postdec2	equ	0xFDD
 26774                           plusw2	equ	0xFDB
 26775                           fsr2h	equ	0xFDA
 26776                           fsr2l	equ	0xFD9
 26777                           status	equ	0xFD8
 26778                           
 26779 ;; *************** function _USBSuspend *****************
 26780 ;; Defined at:
 26781 ;;		line 1889 in file "../Includes/Usb/Framework/usb_device.c"
 26782 ;; Parameters:    Size  Location     Type
 26783 ;;		None
 26784 ;; Auto vars:     Size  Location     Type
 26785 ;;		None
 26786 ;; Return value:  Size  Location     Type
 26787 ;;		None               void
 26788 ;; Registers used:
 26789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26790 ;; Tracked objects:
 26791 ;;		On entry : 0/0
 26792 ;;		On exit  : 0/0
 26793 ;;		Unchanged: 0/0
 26794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26795 ;;      Params:         0       0       0       0       0       0       0       0       0
 26796 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26797 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26798 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26799 ;;Total ram usage:        0 bytes
 26800 ;; Hardware stack levels used:    1
 26801 ;; Hardware stack levels required when called:    5
 26802 ;; This function calls:
 26803 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26804 ;; This function is called by:
 26805 ;;		_USBDeviceTasks
 26806 ;; This function uses a non-reentrant model
 26807 ;;
 26808                           
 26809                           	psect	text108
 26810  006816                     __ptext108:
 26811                           	opt stack 0
 26812  006816                     _USBSuspend:
 26813                           	opt stack 14
 26814                           
 26815                           ;usb_device.c: 1914: UIEbits.ACTVIE = 1;
 26816                           
 26817                           ;incstack = 0
 26818  006816  8464               	bsf	3940,2,c	;volatile
 26819                           
 26820                           ;usb_device.c: 1915: (UIR &= 0xEF);
 26821  006818  9865               	bcf	3941,4,c	;volatile
 26822                           
 26823                           ;usb_device.c: 1917: UCONbits.SUSPND = 1;
 26824  00681A  8260               	bsf	3936,1,c	;volatile
 26825                           
 26826                           ;usb_device.c: 1919: USBBusIsSuspended = 1;
 26827  00681C  0E01               	movlw	1
 26828  00681E  0100               	movlb	0	; () banked
 26829  006820  6FCF               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 26830                           
 26831                           ; BSR set to: 0
 26832                           ;usb_device.c: 1926: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 26833  006822  0E00               	movlw	0
 26834  006824  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26835  006826  0E75               	movlw	117
 26836  006828  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26837  00682A  0E00               	movlw	0
 26838  00682C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26839  00682E  0E00               	movlw	0
 26840  006830  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26841  006832  0E00               	movlw	0
 26842  006834  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26843  006836  0E00               	movlw	0
 26844  006838  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26845  00683A  EC41  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26846  00683E  0012               	return		;funcret
 26847  006840                     __end_of_USBSuspend:
 26848                           	opt stack 0
 26849                           pclatu	equ	0xFFB
 26850                           pclath	equ	0xFFA
 26851                           tblptru	equ	0xFF8
 26852                           tblptrh	equ	0xFF7
 26853                           tblptrl	equ	0xFF6
 26854                           tablat	equ	0xFF5
 26855                           prodh	equ	0xFF4
 26856                           prodl	equ	0xFF3
 26857                           intcon	equ	0xFF2
 26858                           intcon3	equ	0xFF0
 26859                           indf0	equ	0xFEF
 26860                           postinc0	equ	0xFEE
 26861                           fsr0h	equ	0xFEA
 26862                           fsr0l	equ	0xFE9
 26863                           wreg	equ	0xFE8
 26864                           indf1	equ	0xFE7
 26865                           postdec1	equ	0xFE5
 26866                           fsr1h	equ	0xFE2
 26867                           fsr1l	equ	0xFE1
 26868                           indf2	equ	0xFDF
 26869                           postinc2	equ	0xFDE
 26870                           postdec2	equ	0xFDD
 26871                           plusw2	equ	0xFDB
 26872                           fsr2h	equ	0xFDA
 26873                           fsr2l	equ	0xFD9
 26874                           status	equ	0xFD8
 26875                           
 26876 ;; *************** function _USBStallHandler *****************
 26877 ;; Defined at:
 26878 ;;		line 1846 in file "../Includes/Usb/Framework/usb_device.c"
 26879 ;; Parameters:    Size  Location     Type
 26880 ;;		None
 26881 ;; Auto vars:     Size  Location     Type
 26882 ;;		None
 26883 ;; Return value:  Size  Location     Type
 26884 ;;		None               void
 26885 ;; Registers used:
 26886 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26887 ;; Tracked objects:
 26888 ;;		On entry : 0/0
 26889 ;;		On exit  : 0/0
 26890 ;;		Unchanged: 0/0
 26891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26892 ;;      Params:         0       0       0       0       0       0       0       0       0
 26893 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26894 ;;      Temps:          1       0       0       0       0       0       0       0       0
 26895 ;;      Totals:         1       0       0       0       0       0       0       0       0
 26896 ;;Total ram usage:        1 bytes
 26897 ;; Hardware stack levels used:    1
 26898 ;; This function calls:
 26899 ;;		Nothing
 26900 ;; This function is called by:
 26901 ;;		_USBDeviceTasks
 26902 ;; This function uses a non-reentrant model
 26903 ;;
 26904                           
 26905                           	psect	text109
 26906  006408                     __ptext109:
 26907                           	opt stack 0
 26908  006408                     _USBStallHandler:
 26909                           	opt stack 19
 26910                           
 26911                           ;usb_device.c: 1858: if(UEP0bits.EPSTALL == 1)
 26912                           
 26913                           ;incstack = 0
 26914  006408  A06A               	btfss	3946,0,c	;volatile
 26915  00640A  D01D               	goto	i2l1874
 26916                           
 26917                           ;usb_device.c: 1859: {
 26918                           ;usb_device.c: 1861: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 26919  00640C  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26920  006410  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26921  006414  0E80               	movlw	128
 26922  006416  18DE               	xorwf	postinc2,w,c
 26923  006418  A4D8               	btfss	status,2,c
 26924  00641A  D014               	goto	i2l10932
 26925  00641C  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 26926  006420  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26927  006424  0E84               	movlw	132
 26928  006426  18DE               	xorwf	postinc2,w,c
 26929  006428  A4D8               	btfss	status,2,c
 26930  00642A  D00C               	goto	i2l10932
 26931                           
 26932                           ;usb_device.c: 1862: {
 26933                           ;usb_device.c: 1864: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 26934  00642C  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26935  006430  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26936  006434  0E0C               	movlw	12
 26937  006436  6EDF               	movwf	indf2,c
 26938                           
 26939                           ;usb_device.c: 1865: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 26940  006438  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26941  00643C  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26942  006440  0E00               	movlw	0
 26943  006442  8EDB               	bsf	plusw2,7,c
 26944  006444                     i2l10932:
 26945                           
 26946                           ;usb_device.c: 1866: }
 26947                           ;usb_device.c: 1867: UEP0bits.EPSTALL = 0;
 26948  006444  906A               	bcf	3946,0,c	;volatile
 26949  006446                     i2l1874:
 26950                           
 26951                           ;usb_device.c: 1868: }
 26952                           ;usb_device.c: 1870: (UIR &= 0xDF);
 26953  006446  9A65               	bcf	3941,5,c	;volatile
 26954  006448  0012               	return		;funcret
 26955  00644A                     __end_of_USBStallHandler:
 26956                           	opt stack 0
 26957                           pclatu	equ	0xFFB
 26958                           pclath	equ	0xFFA
 26959                           tblptru	equ	0xFF8
 26960                           tblptrh	equ	0xFF7
 26961                           tblptrl	equ	0xFF6
 26962                           tablat	equ	0xFF5
 26963                           prodh	equ	0xFF4
 26964                           prodl	equ	0xFF3
 26965                           intcon	equ	0xFF2
 26966                           intcon3	equ	0xFF0
 26967                           indf0	equ	0xFEF
 26968                           postinc0	equ	0xFEE
 26969                           fsr0h	equ	0xFEA
 26970                           fsr0l	equ	0xFE9
 26971                           wreg	equ	0xFE8
 26972                           indf1	equ	0xFE7
 26973                           postdec1	equ	0xFE5
 26974                           fsr1h	equ	0xFE2
 26975                           fsr1l	equ	0xFE1
 26976                           indf2	equ	0xFDF
 26977                           postinc2	equ	0xFDE
 26978                           postdec2	equ	0xFDD
 26979                           plusw2	equ	0xFDB
 26980                           fsr2h	equ	0xFDA
 26981                           fsr2l	equ	0xFD9
 26982                           status	equ	0xFD8
 26983                           
 26984 ;; *************** function _USBCtrlEPService *****************
 26985 ;; Defined at:
 26986 ;;		line 2004 in file "../Includes/Usb/Framework/usb_device.c"
 26987 ;; Parameters:    Size  Location     Type
 26988 ;;		None
 26989 ;; Auto vars:     Size  Location     Type
 26990 ;;  setup_cnt       1   29[COMRAM] unsigned char 
 26991 ;; Return value:  Size  Location     Type
 26992 ;;		None               void
 26993 ;; Registers used:
 26994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 26995 ;; Tracked objects:
 26996 ;;		On entry : 0/0
 26997 ;;		On exit  : 0/0
 26998 ;;		Unchanged: 0/0
 26999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27000 ;;      Params:         0       0       0       0       0       0       0       0       0
 27001 ;;      Locals:         1       0       0       0       0       0       0       0       0
 27002 ;;      Temps:          2       0       0       0       0       0       0       0       0
 27003 ;;      Totals:         3       0       0       0       0       0       0       0       0
 27004 ;;Total ram usage:        3 bytes
 27005 ;; Hardware stack levels used:    1
 27006 ;; Hardware stack levels required when called:    8
 27007 ;; This function calls:
 27008 ;;		_USBCtrlTrfInHandler
 27009 ;;		_USBCtrlTrfOutHandler
 27010 ;;		_USBCtrlTrfSetupHandler
 27011 ;; This function is called by:
 27012 ;;		_USBDeviceTasks
 27013 ;; This function uses a non-reentrant model
 27014 ;;
 27015                           
 27016                           	psect	text110
 27017  004E0E                     __ptext110:
 27018                           	opt stack 0
 27019  004E0E                     _USBCtrlEPService:
 27020                           	opt stack 11
 27021                           
 27022                           ;usb_device.c: 2009: USBStatusStageTimeoutCounter = (uint8_t)45;
 27023                           
 27024                           ;incstack = 0
 27025  004E0E  0E2D               	movlw	45
 27026  004E10  6E4F               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 27027                           
 27028                           ;usb_device.c: 2012: if((USTATcopy.Val & ~0x02) == 0x00)
 27029  004E12  C059  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 27030  004E16  0EFD               	movlw	253
 27031  004E18  161C               	andwf	??_USBCtrlEPService,f,c
 27032  004E1A  A4D8               	btfss	status,2,c
 27033  004E1C  D057               	goto	i2l10966
 27034                           
 27035                           ;usb_device.c: 2013: {
 27036                           ;usb_device.c: 2015: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 27037  004E1E  C059  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 27038  004E22  90D8               	bcf	status,0,c
 27039  004E24  321C               	rrcf	??_USBCtrlEPService,f,c
 27040  004E26  0E3F               	movlw	63
 27041  004E28  161C               	andwf	??_USBCtrlEPService,f,c
 27042  004E2A  501C               	movf	??_USBCtrlEPService,w,c
 27043  004E2C  0D04               	mullw	4
 27044  004E2E  0E00               	movlw	0
 27045  004E30  24F3               	addwf	prodl,w,c
 27046  004E32  6E44               	movwf	_pBDTEntryEP0OutCurrent,c
 27047  004E34  0E04               	movlw	4
 27048  004E36  20F4               	addwfc	prodh,w,c
 27049  004E38  6E45               	movwf	_pBDTEntryEP0OutCurrent+1,c
 27050                           
 27051                           ;usb_device.c: 2019: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 27052  004E3A  C044  F046         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 27053  004E3E  C045  F047         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 27054                           
 27055                           ;usb_device.c: 2021: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 27056  004E42  0E04               	movlw	4
 27057  004E44  1A46               	xorwf	_pBDTEntryEP0OutNext,f,c
 27058                           
 27059                           ;usb_device.c: 2024: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 27060  004E46  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 27061  004E4A  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 27062  004E4E  30DF               	rrcf	indf2,w,c
 27063  004E50  32E8               	rrcf	wreg,f,c
 27064  004E52  0B0F               	andlw	15
 27065  004E54  0A0D               	xorlw	13
 27066  004E56  A4D8               	btfss	status,2,c
 27067  004E58  D036               	goto	i2l10964
 27068                           
 27069                           ;usb_device.c: 2025: {
 27070                           ;usb_device.c: 2026: unsigned char setup_cnt;
 27071                           ;usb_device.c: 2032: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 27072  004E5A  0E00               	movlw	0
 27073  004E5C  6E1E               	movwf	USBCtrlEPService@setup_cnt,c
 27074  004E5E                     i2l10948:
 27075  004E5E  0E07               	movlw	7
 27076  004E60  641E               	cpfsgt	USBCtrlEPService@setup_cnt,c
 27077  004E62  D001               	goto	i2l10952
 27078  004E64  D023               	goto	i2l10960
 27079  004E66                     i2l10952:
 27080                           
 27081                           ;usb_device.c: 2033: {
 27082                           ;usb_device.c: 2034: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 27083  004E66  EE20 F002          	lfsr	2,2
 27084  004E6A  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 27085  004E6C  26D9               	addwf	fsr2l,f,c
 27086  004E6E  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 27087  004E70  22DA               	addwfc	fsr2h,f,c
 27088  004E72  CFDE F01C          	movff	postinc2,??_USBCtrlEPService
 27089  004E76  CFDD F01D          	movff	postdec2,??_USBCtrlEPService+1
 27090  004E7A  C01C  FFD9         	movff	??_USBCtrlEPService,fsr2l
 27091  004E7E  C01D  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 27092  004E82  501E               	movf	USBCtrlEPService@setup_cnt,w,c
 27093  004E84  0D01               	mullw	1
 27094  004E86  0E30               	movlw	48
 27095  004E88  24F3               	addwf	prodl,w,c
 27096  004E8A  6EE1               	movwf	fsr1l,c
 27097  004E8C  0E04               	movlw	4
 27098  004E8E  20F4               	addwfc	prodh,w,c
 27099  004E90  6EE2               	movwf	fsr1h,c
 27100  004E92  CFDF FFE7          	movff	indf2,indf1
 27101                           
 27102                           ;usb_device.c: 2035: pBDTEntryEP0OutCurrent->ADR++;
 27103  004E96  EE20 F002          	lfsr	2,2
 27104  004E9A  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 27105  004E9C  26D9               	addwf	fsr2l,f,c
 27106  004E9E  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 27107  004EA0  22DA               	addwfc	fsr2h,f,c
 27108  004EA2  2ADE               	incf	postinc2,f,c
 27109  004EA4  0E00               	movlw	0
 27110  004EA6  22DD               	addwfc	postdec2,f,c
 27111  004EA8  2A1E               	incf	USBCtrlEPService@setup_cnt,f,c
 27112  004EAA  D7D9               	goto	i2l10948
 27113  004EAC                     i2l10960:
 27114                           
 27115                           ;usb_device.c: 2036: }
 27116                           ;usb_device.c: 2037: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 27117  004EAC  EE20 F002          	lfsr	2,2
 27118  004EB0  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 27119  004EB2  26D9               	addwf	fsr2l,f,c
 27120  004EB4  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 27121  004EB6  22DA               	addwfc	fsr2h,f,c
 27122  004EB8  0E30               	movlw	48
 27123  004EBA  6EDE               	movwf	postinc2,c
 27124  004EBC  0E04               	movlw	4
 27125  004EBE  6EDD               	movwf	postdec2,c
 27126                           
 27127                           ;usb_device.c: 2040: USBCtrlTrfSetupHandler();
 27128  004EC0  ECAF  F02C         	call	_USBCtrlTrfSetupHandler	;wreg free
 27129                           
 27130                           ;usb_device.c: 2041: }
 27131  004EC4  0012               	return	
 27132  004EC6                     i2l10964:
 27133                           
 27134                           ;usb_device.c: 2042: else
 27135                           ;usb_device.c: 2043: {
 27136                           ;usb_device.c: 2045: USBCtrlTrfOutHandler();
 27137  004EC6  ECE3  F02F         	call	_USBCtrlTrfOutHandler	;wreg free
 27138                           
 27139                           ;usb_device.c: 2046: }
 27140                           ;usb_device.c: 2047: }
 27141  004ECA  0012               	return	
 27142  004ECC                     i2l10966:
 27143                           
 27144                           ;usb_device.c: 2048: else if((USTATcopy.Val & ~0x02) == 0x04)
 27145  004ECC  5059               	movf	_USTATcopy,w,c	;volatile
 27146  004ECE  0BFD               	andlw	253
 27147  004ED0  0A04               	xorlw	4
 27148  004ED2  A4D8               	btfss	status,2,c
 27149  004ED4  0012               	return	
 27150                           
 27151                           ;usb_device.c: 2049: {
 27152                           ;usb_device.c: 2052: USBCtrlTrfInHandler();
 27153  004ED6  EC10  F024         	call	_USBCtrlTrfInHandler	;wreg free
 27154  004EDA  0012               	return	
 27155  004EDC                     __end_of_USBCtrlEPService:
 27156                           	opt stack 0
 27157                           pclatu	equ	0xFFB
 27158                           pclath	equ	0xFFA
 27159                           tblptru	equ	0xFF8
 27160                           tblptrh	equ	0xFF7
 27161                           tblptrl	equ	0xFF6
 27162                           tablat	equ	0xFF5
 27163                           prodh	equ	0xFF4
 27164                           prodl	equ	0xFF3
 27165                           intcon	equ	0xFF2
 27166                           intcon3	equ	0xFF0
 27167                           indf0	equ	0xFEF
 27168                           postinc0	equ	0xFEE
 27169                           fsr0h	equ	0xFEA
 27170                           fsr0l	equ	0xFE9
 27171                           wreg	equ	0xFE8
 27172                           indf1	equ	0xFE7
 27173                           postdec1	equ	0xFE5
 27174                           fsr1h	equ	0xFE2
 27175                           fsr1l	equ	0xFE1
 27176                           indf2	equ	0xFDF
 27177                           postinc2	equ	0xFDE
 27178                           postdec2	equ	0xFDD
 27179                           plusw2	equ	0xFDB
 27180                           fsr2h	equ	0xFDA
 27181                           fsr2l	equ	0xFD9
 27182                           status	equ	0xFD8
 27183                           
 27184 ;; *************** function _USBCtrlTrfSetupHandler *****************
 27185 ;; Defined at:
 27186 ;;		line 2097 in file "../Includes/Usb/Framework/usb_device.c"
 27187 ;; Parameters:    Size  Location     Type
 27188 ;;		None
 27189 ;; Auto vars:     Size  Location     Type
 27190 ;;		None
 27191 ;; Return value:  Size  Location     Type
 27192 ;;		None               void
 27193 ;; Registers used:
 27194 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27195 ;; Tracked objects:
 27196 ;;		On entry : 0/0
 27197 ;;		On exit  : 0/0
 27198 ;;		Unchanged: 0/0
 27199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27200 ;;      Params:         0       0       0       0       0       0       0       0       0
 27201 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27202 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27203 ;;      Totals:         0       0       0       0       0       0       0       0       0
 27204 ;;Total ram usage:        0 bytes
 27205 ;; Hardware stack levels used:    1
 27206 ;; Hardware stack levels required when called:    7
 27207 ;; This function calls:
 27208 ;;		_USBCheckStdRequest
 27209 ;;		_USBCtrlEPServiceComplete
 27210 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27211 ;; This function is called by:
 27212 ;;		_USBCtrlEPService
 27213 ;; This function uses a non-reentrant model
 27214 ;;
 27215                           
 27216                           	psect	text111
 27217  00595E                     __ptext111:
 27218                           	opt stack 0
 27219  00595E                     _USBCtrlTrfSetupHandler:
 27220                           	opt stack 11
 27221                           
 27222                           ;usb_device.c: 2102: shortPacketStatus = 0;
 27223                           
 27224                           ;incstack = 0
 27225  00595E  0E00               	movlw	0
 27226  005960  6E57               	movwf	_shortPacketStatus,c	;volatile
 27227                           
 27228                           ;usb_device.c: 2103: USBDeferStatusStagePacket = 0;
 27229  005962  0E00               	movlw	0
 27230  005964  6E4E               	movwf	_USBDeferStatusStagePacket,c	;volatile
 27231                           
 27232                           ;usb_device.c: 2104: USBDeferINDataStagePackets = 0;
 27233  005966  0E00               	movlw	0
 27234  005968  0100               	movlb	0	; () banked
 27235  00596A  6FD0               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 27236                           
 27237                           ;usb_device.c: 2105: USBDeferOUTDataStagePackets = 0;
 27238  00596C  0E00               	movlw	0
 27239  00596E  0100               	movlb	0	; () banked
 27240  005970  6FD1               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 27241                           
 27242                           ;usb_device.c: 2106: BothEP0OutUOWNsSet = 0;
 27243  005972  0E00               	movlw	0
 27244  005974  0100               	movlb	0	; () banked
 27245  005976  6FCD               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 27246                           
 27247                           ;usb_device.c: 2107: controlTransferState = 0;
 27248  005978  0E00               	movlw	0
 27249  00597A  6E51               	movwf	_controlTransferState,c	;volatile
 27250                           
 27251                           ; BSR set to: 0
 27252                           ;usb_device.c: 2116: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 27253  00597C  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 27254  005980  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27255  005984  0E7F               	movlw	127
 27256  005986  16DF               	andwf	indf2,f,c
 27257                           
 27258                           ; BSR set to: 0
 27259                           ;usb_device.c: 2117: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 27260  005988  0E04               	movlw	4
 27261  00598A  1A3C               	xorwf	_pBDTEntryIn,f,c
 27262                           
 27263                           ; BSR set to: 0
 27264                           ;usb_device.c: 2118: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 27265  00598C  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 27266  005990  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27267  005994  0E7F               	movlw	127
 27268  005996  16DF               	andwf	indf2,f,c
 27269                           
 27270                           ; BSR set to: 0
 27271                           ;usb_device.c: 2119: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 27272  005998  0E04               	movlw	4
 27273  00599A  1A3C               	xorwf	_pBDTEntryIn,f,c
 27274                           
 27275                           ; BSR set to: 0
 27276                           ;usb_device.c: 2120: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 27277  00599C  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27278  0059A0  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27279  0059A4  0E7F               	movlw	127
 27280  0059A6  16DF               	andwf	indf2,f,c
 27281                           
 27282                           ; BSR set to: 0
 27283                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 27284  0059A8  0E00               	movlw	0
 27285  0059AA  6E39               	movwf	_inPipes+3,c	;volatile
 27286                           
 27287                           ; BSR set to: 0
 27288                           ;usb_device.c: 2123: inPipes[0].wCount.Val = 0;
 27289  0059AC  0E00               	movlw	0
 27290  0059AE  6E3B               	movwf	_inPipes+5,c	;volatile
 27291  0059B0  0E00               	movlw	0
 27292  0059B2  6E3A               	movwf	_inPipes+4,c	;volatile
 27293                           
 27294                           ; BSR set to: 0
 27295                           ;usb_device.c: 2124: outPipes[0].info.Val = 0;
 27296  0059B4  0E00               	movlw	0
 27297  0059B6  6E31               	movwf	_outPipes+3,c	;volatile
 27298                           
 27299                           ; BSR set to: 0
 27300                           ;usb_device.c: 2125: outPipes[0].wCount.Val = 0;
 27301  0059B8  0E00               	movlw	0
 27302  0059BA  6E33               	movwf	_outPipes+5,c	;volatile
 27303  0059BC  0E00               	movlw	0
 27304  0059BE  6E32               	movwf	_outPipes+4,c	;volatile
 27305                           
 27306                           ; BSR set to: 0
 27307                           ;usb_device.c: 2131: USBCheckStdRequest();
 27308  0059C0  ECEF  F024         	call	_USBCheckStdRequest	;wreg free
 27309                           
 27310                           ;usb_device.c: 2132: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 27311  0059C4  0E00               	movlw	0
 27312  0059C6  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27313  0059C8  0E03               	movlw	3
 27314  0059CA  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27315  0059CC  0E00               	movlw	0
 27316  0059CE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 27317  0059D0  0E00               	movlw	0
 27318  0059D2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 27319  0059D4  0E00               	movlw	0
 27320  0059D6  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27321  0059D8  0E00               	movlw	0
 27322  0059DA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27323  0059DC  EC41  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27324                           
 27325                           ;usb_device.c: 2145: USBCtrlEPServiceComplete();
 27326  0059E0  ECDB  F01F         	call	_USBCtrlEPServiceComplete	;wreg free
 27327  0059E4  0012               	return		;funcret
 27328  0059E6                     __end_of_USBCtrlTrfSetupHandler:
 27329                           	opt stack 0
 27330                           pclatu	equ	0xFFB
 27331                           pclath	equ	0xFFA
 27332                           tblptru	equ	0xFF8
 27333                           tblptrh	equ	0xFF7
 27334                           tblptrl	equ	0xFF6
 27335                           tablat	equ	0xFF5
 27336                           prodh	equ	0xFF4
 27337                           prodl	equ	0xFF3
 27338                           intcon	equ	0xFF2
 27339                           intcon3	equ	0xFF0
 27340                           indf0	equ	0xFEF
 27341                           postinc0	equ	0xFEE
 27342                           fsr0h	equ	0xFEA
 27343                           fsr0l	equ	0xFE9
 27344                           wreg	equ	0xFE8
 27345                           indf1	equ	0xFE7
 27346                           postdec1	equ	0xFE5
 27347                           fsr1h	equ	0xFE2
 27348                           fsr1l	equ	0xFE1
 27349                           indf2	equ	0xFDF
 27350                           postinc2	equ	0xFDE
 27351                           postdec2	equ	0xFDD
 27352                           plusw2	equ	0xFDB
 27353                           fsr2h	equ	0xFDA
 27354                           fsr2l	equ	0xFD9
 27355                           status	equ	0xFD8
 27356                           
 27357 ;; *************** function _USBCtrlEPServiceComplete *****************
 27358 ;; Defined at:
 27359 ;;		line 1282 in file "../Includes/Usb/Framework/usb_device.c"
 27360 ;; Parameters:    Size  Location     Type
 27361 ;;		None
 27362 ;; Auto vars:     Size  Location     Type
 27363 ;;		None
 27364 ;; Return value:  Size  Location     Type
 27365 ;;		None               void
 27366 ;; Registers used:
 27367 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27368 ;; Tracked objects:
 27369 ;;		On entry : 0/0
 27370 ;;		On exit  : 0/0
 27371 ;;		Unchanged: 0/0
 27372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27373 ;;      Params:         0       0       0       0       0       0       0       0       0
 27374 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27375 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27376 ;;      Totals:         0       0       0       0       0       0       0       0       0
 27377 ;;Total ram usage:        0 bytes
 27378 ;; Hardware stack levels used:    1
 27379 ;; Hardware stack levels required when called:    2
 27380 ;; This function calls:
 27381 ;;		_USBCtrlEPAllowDataStage
 27382 ;;		_USBCtrlEPAllowStatusStage
 27383 ;; This function is called by:
 27384 ;;		_USBCtrlTrfSetupHandler
 27385 ;; This function uses a non-reentrant model
 27386 ;;
 27387                           
 27388                           	psect	text112
 27389  003FB6                     __ptext112:
 27390                           	opt stack 0
 27391  003FB6                     _USBCtrlEPServiceComplete:
 27392                           	opt stack 15
 27393                           
 27394                           ;usb_device.c: 1288: UCONbits.PKTDIS = 0;
 27395                           
 27396                           ;incstack = 0
 27397  003FB6  9860               	bcf	3936,4,c	;volatile
 27398                           
 27399                           ;usb_device.c: 1294: if(inPipes[0].info.bits.busy == 0)
 27400  003FB8  BE39               	btfsc	_inPipes+3,7,c	;volatile
 27401  003FBA  D03B               	goto	i2l1798
 27402                           
 27403                           ;usb_device.c: 1295: {
 27404                           ;usb_device.c: 1296: if(outPipes[0].info.bits.busy == 1)
 27405  003FBC  AE31               	btfss	_outPipes+3,7,c	;volatile
 27406  003FBE  D00E               	goto	i2l8324
 27407                           
 27408                           ;usb_device.c: 1297: {
 27409                           ;usb_device.c: 1298: controlTransferState = 2;
 27410  003FC0  0E02               	movlw	2
 27411  003FC2  6E51               	movwf	_controlTransferState,c	;volatile
 27412                           
 27413                           ;usb_device.c: 1309: if(USBDeferOUTDataStagePackets == 0)
 27414  003FC4  0100               	movlb	0	; () banked
 27415  003FC6  51D1               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 27416  003FC8  B4D8               	btfsc	status,2,c
 27417                           
 27418                           ; BSR set to: 0
 27419                           ;usb_device.c: 1310: {
 27420                           ;usb_device.c: 1311: USBCtrlEPAllowDataStage();
 27421  003FCA  EC8D  F02B         	call	_USBCtrlEPAllowDataStage	;wreg free
 27422                           
 27423                           ;usb_device.c: 1312: }
 27424                           ;usb_device.c: 1316: USBStatusStageEnabledFlag2 = 0;
 27425  003FCE  0E00               	movlw	0
 27426  003FD0  0100               	movlb	0	; () banked
 27427  003FD2  6FD4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 27428                           
 27429                           ; BSR set to: 0
 27430                           ;usb_device.c: 1317: USBStatusStageEnabledFlag1 = 0;
 27431  003FD4  0E00               	movlw	0
 27432  003FD6  0100               	movlb	0	; () banked
 27433  003FD8  6FD3               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 27434                           
 27435                           ;usb_device.c: 1318: }
 27436  003FDA  0012               	return	
 27437  003FDC                     i2l8324:
 27438                           
 27439                           ;usb_device.c: 1319: else
 27440                           ;usb_device.c: 1320: {
 27441                           ;usb_device.c: 1325: pBDTEntryEP0OutNext->CNT = 8;
 27442  003FDC  EE20 F001          	lfsr	2,1
 27443  003FE0  5046               	movf	_pBDTEntryEP0OutNext,w,c
 27444  003FE2  26D9               	addwf	fsr2l,f,c
 27445  003FE4  5047               	movf	_pBDTEntryEP0OutNext+1,w,c
 27446  003FE6  22DA               	addwfc	fsr2h,f,c
 27447  003FE8  0E08               	movlw	8
 27448  003FEA  6EDF               	movwf	indf2,c
 27449                           
 27450                           ;usb_device.c: 1326: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 27451  003FEC  EE20 F002          	lfsr	2,2
 27452  003FF0  5046               	movf	_pBDTEntryEP0OutNext,w,c
 27453  003FF2  26D9               	addwf	fsr2l,f,c
 27454  003FF4  5047               	movf	_pBDTEntryEP0OutNext+1,w,c
 27455  003FF6  22DA               	addwfc	fsr2h,f,c
 27456  003FF8  0E30               	movlw	48
 27457  003FFA  6EDE               	movwf	postinc2,c
 27458  003FFC  0E04               	movlw	4
 27459  003FFE  6EDD               	movwf	postdec2,c
 27460                           
 27461                           ;usb_device.c: 1327: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 27462  004000  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27463  004004  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27464  004008  0E0C               	movlw	12
 27465  00400A  6EDF               	movwf	indf2,c
 27466                           
 27467                           ;usb_device.c: 1328: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 27468  00400C  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27469  004010  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27470  004014  0E00               	movlw	0
 27471  004016  8EDB               	bsf	plusw2,7,c
 27472                           
 27473                           ;usb_device.c: 1329: pBDTEntryIn[0]->STAT.Val = 0x04;
 27474  004018  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 27475  00401C  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27476  004020  0E04               	movlw	4
 27477  004022  6EDF               	movwf	indf2,c
 27478                           
 27479                           ;usb_device.c: 1330: pBDTEntryIn[0]->STAT.Val |= 0x80;
 27480  004024  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 27481  004028  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27482  00402C  0E00               	movlw	0
 27483  00402E  8EDB               	bsf	plusw2,7,c
 27484                           
 27485                           ;usb_device.c: 1331: }
 27486                           ;usb_device.c: 1332: }
 27487  004030  0012               	return	
 27488  004032                     i2l1798:
 27489                           
 27490                           ;usb_device.c: 1333: else
 27491                           ;usb_device.c: 1334: {
 27492                           ;usb_device.c: 1335: if(SetupPkt.DataDir == (0x80>>7))
 27493  004032  0104               	movlb	4	; () banked
 27494  004034  AF30               	btfss	48,7,b	;volatile
 27495  004036  D013               	goto	i2l8344
 27496                           
 27497                           ; BSR set to: 4
 27498                           ;usb_device.c: 1336: {
 27499                           ;usb_device.c: 1337: controlTransferState = 1;
 27500  004038  0E01               	movlw	1
 27501  00403A  6E51               	movwf	_controlTransferState,c	;volatile
 27502                           
 27503                           ;usb_device.c: 1351: if(USBDeferINDataStagePackets == 0)
 27504  00403C  0100               	movlb	0	; () banked
 27505  00403E  51D0               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 27506  004040  B4D8               	btfsc	status,2,c
 27507                           
 27508                           ; BSR set to: 0
 27509                           ;usb_device.c: 1352: {
 27510                           ;usb_device.c: 1353: USBCtrlEPAllowDataStage();
 27511  004042  EC8D  F02B         	call	_USBCtrlEPAllowDataStage	;wreg free
 27512                           
 27513                           ;usb_device.c: 1354: }
 27514                           ;usb_device.c: 1376: USBStatusStageEnabledFlag2 = 0;
 27515  004046  0E00               	movlw	0
 27516  004048  0100               	movlb	0	; () banked
 27517  00404A  6FD4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 27518                           
 27519                           ; BSR set to: 0
 27520                           ;usb_device.c: 1377: USBStatusStageEnabledFlag1 = 0;
 27521  00404C  0E00               	movlw	0
 27522  00404E  0100               	movlb	0	; () banked
 27523  004050  6FD3               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 27524                           
 27525                           ; BSR set to: 0
 27526                           ;usb_device.c: 1378: if(USBDeferStatusStagePacket == 0)
 27527  004052  504E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 27528  004054  A4D8               	btfss	status,2,c
 27529  004056  0012               	return	
 27530                           
 27531                           ; BSR set to: 0
 27532                           ;usb_device.c: 1379: {
 27533                           ;usb_device.c: 1380: USBCtrlEPAllowStatusStage();
 27534  004058  EC6E  F027         	call	_USBCtrlEPAllowStatusStage	;wreg free
 27535                           
 27536                           ;usb_device.c: 1381: }
 27537                           ;usb_device.c: 1382: }
 27538  00405C  0012               	return	
 27539  00405E                     i2l8344:
 27540                           
 27541                           ;usb_device.c: 1383: else
 27542                           ;usb_device.c: 1384: {
 27543                           ;usb_device.c: 1395: controlTransferState = 2;
 27544  00405E  0E02               	movlw	2
 27545  004060  6E51               	movwf	_controlTransferState,c	;volatile
 27546                           
 27547                           ;usb_device.c: 1398: pBDTEntryEP0OutNext->CNT = 8;
 27548  004062  EE20 F001          	lfsr	2,1
 27549  004066  5046               	movf	_pBDTEntryEP0OutNext,w,c
 27550  004068  26D9               	addwf	fsr2l,f,c
 27551  00406A  5047               	movf	_pBDTEntryEP0OutNext+1,w,c
 27552  00406C  22DA               	addwfc	fsr2h,f,c
 27553  00406E  0E08               	movlw	8
 27554  004070  6EDF               	movwf	indf2,c
 27555                           
 27556                           ;usb_device.c: 1399: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 27557  004072  EE20 F002          	lfsr	2,2
 27558  004076  5046               	movf	_pBDTEntryEP0OutNext,w,c
 27559  004078  26D9               	addwf	fsr2l,f,c
 27560  00407A  5047               	movf	_pBDTEntryEP0OutNext+1,w,c
 27561  00407C  22DA               	addwfc	fsr2h,f,c
 27562  00407E  0E30               	movlw	48
 27563  004080  6EDE               	movwf	postinc2,c
 27564  004082  0E04               	movlw	4
 27565  004084  6EDD               	movwf	postdec2,c
 27566                           
 27567                           ;usb_device.c: 1400: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 27568  004086  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27569  00408A  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27570  00408E  0E04               	movlw	4
 27571  004090  6EDF               	movwf	indf2,c
 27572                           
 27573                           ;usb_device.c: 1401: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 27574  004092  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27575  004096  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27576  00409A  0E00               	movlw	0
 27577  00409C  8EDB               	bsf	plusw2,7,c
 27578                           
 27579                           ;usb_device.c: 1404: USBStatusStageEnabledFlag2 = 0;
 27580  00409E  0E00               	movlw	0
 27581  0040A0  0100               	movlb	0	; () banked
 27582  0040A2  6FD4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 27583                           
 27584                           ; BSR set to: 0
 27585                           ;usb_device.c: 1405: USBStatusStageEnabledFlag1 = 0;
 27586  0040A4  0E00               	movlw	0
 27587  0040A6  0100               	movlb	0	; () banked
 27588  0040A8  6FD3               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 27589                           
 27590                           ; BSR set to: 0
 27591                           ;usb_device.c: 1406: if(USBDeferStatusStagePacket == 0)
 27592  0040AA  504E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 27593  0040AC  A4D8               	btfss	status,2,c
 27594  0040AE  0012               	return	
 27595                           
 27596                           ; BSR set to: 0
 27597                           ;usb_device.c: 1407: {
 27598                           ;usb_device.c: 1408: USBCtrlEPAllowStatusStage();
 27599  0040B0  EC6E  F027         	call	_USBCtrlEPAllowStatusStage	;wreg free
 27600  0040B4  0012               	return	
 27601  0040B6                     __end_of_USBCtrlEPServiceComplete:
 27602                           	opt stack 0
 27603                           pclatu	equ	0xFFB
 27604                           pclath	equ	0xFFA
 27605                           tblptru	equ	0xFF8
 27606                           tblptrh	equ	0xFF7
 27607                           tblptrl	equ	0xFF6
 27608                           tablat	equ	0xFF5
 27609                           prodh	equ	0xFF4
 27610                           prodl	equ	0xFF3
 27611                           intcon	equ	0xFF2
 27612                           intcon3	equ	0xFF0
 27613                           indf0	equ	0xFEF
 27614                           postinc0	equ	0xFEE
 27615                           fsr0h	equ	0xFEA
 27616                           fsr0l	equ	0xFE9
 27617                           wreg	equ	0xFE8
 27618                           indf1	equ	0xFE7
 27619                           postdec1	equ	0xFE5
 27620                           fsr1h	equ	0xFE2
 27621                           fsr1l	equ	0xFE1
 27622                           indf2	equ	0xFDF
 27623                           postinc2	equ	0xFDE
 27624                           postdec2	equ	0xFDD
 27625                           plusw2	equ	0xFDB
 27626                           fsr2h	equ	0xFDA
 27627                           fsr2l	equ	0xFD9
 27628                           status	equ	0xFD8
 27629                           
 27630 ;; *************** function _USBCtrlEPAllowDataStage *****************
 27631 ;; Defined at:
 27632 ;;		line 1173 in file "../Includes/Usb/Framework/usb_device.c"
 27633 ;; Parameters:    Size  Location     Type
 27634 ;;		None
 27635 ;; Auto vars:     Size  Location     Type
 27636 ;;		None
 27637 ;; Return value:  Size  Location     Type
 27638 ;;		None               void
 27639 ;; Registers used:
 27640 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27641 ;; Tracked objects:
 27642 ;;		On entry : 0/0
 27643 ;;		On exit  : 0/0
 27644 ;;		Unchanged: 0/0
 27645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27646 ;;      Params:         0       0       0       0       0       0       0       0       0
 27647 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27648 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27649 ;;      Totals:         0       0       0       0       0       0       0       0       0
 27650 ;;Total ram usage:        0 bytes
 27651 ;; Hardware stack levels used:    1
 27652 ;; Hardware stack levels required when called:    1
 27653 ;; This function calls:
 27654 ;;		_USBCtrlTrfTxService
 27655 ;; This function is called by:
 27656 ;;		_USBCtrlEPServiceComplete
 27657 ;; This function uses a non-reentrant model
 27658 ;;
 27659                           
 27660                           	psect	text113
 27661  00571A                     __ptext113:
 27662                           	opt stack 0
 27663  00571A                     _USBCtrlEPAllowDataStage:
 27664                           	opt stack 15
 27665                           
 27666                           ;usb_device.c: 1175: USBDeferINDataStagePackets = 0;
 27667                           
 27668                           ;incstack = 0
 27669  00571A  0E00               	movlw	0
 27670  00571C  0100               	movlb	0	; () banked
 27671  00571E  6FD0               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 27672                           
 27673                           ;usb_device.c: 1176: USBDeferOUTDataStagePackets = 0;
 27674  005720  0E00               	movlw	0
 27675  005722  0100               	movlb	0	; () banked
 27676  005724  6FD1               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 27677                           
 27678                           ; BSR set to: 0
 27679                           ;usb_device.c: 1178: if(controlTransferState == 2)
 27680  005726  0E02               	movlw	2
 27681  005728  1851               	xorwf	_controlTransferState,w,c	;volatile
 27682  00572A  A4D8               	btfss	status,2,c
 27683  00572C  D01F               	goto	i2l7946
 27684                           
 27685                           ; BSR set to: 0
 27686                           ;usb_device.c: 1179: {
 27687                           ;usb_device.c: 1181: pBDTEntryEP0OutNext->CNT = 8;
 27688  00572E  EE20 F001          	lfsr	2,1
 27689  005732  5046               	movf	_pBDTEntryEP0OutNext,w,c
 27690  005734  26D9               	addwf	fsr2l,f,c
 27691  005736  5047               	movf	_pBDTEntryEP0OutNext+1,w,c
 27692  005738  22DA               	addwfc	fsr2h,f,c
 27693  00573A  0E08               	movlw	8
 27694  00573C  6EDF               	movwf	indf2,c
 27695                           
 27696                           ;usb_device.c: 1182: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 27697  00573E  EE20 F002          	lfsr	2,2
 27698  005742  5046               	movf	_pBDTEntryEP0OutNext,w,c
 27699  005744  26D9               	addwf	fsr2l,f,c
 27700  005746  5047               	movf	_pBDTEntryEP0OutNext+1,w,c
 27701  005748  22DA               	addwfc	fsr2h,f,c
 27702  00574A  0E38               	movlw	56
 27703  00574C  6EDE               	movwf	postinc2,c
 27704  00574E  0E04               	movlw	4
 27705  005750  6EDD               	movwf	postdec2,c
 27706                           
 27707                           ; BSR set to: 0
 27708                           ;usb_device.c: 1183: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 27709  005752  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27710  005756  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27711  00575A  0E48               	movlw	72
 27712  00575C  6EDF               	movwf	indf2,c
 27713                           
 27714                           ; BSR set to: 0
 27715                           ;usb_device.c: 1184: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 27716  00575E  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27717  005762  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27718  005766  0E00               	movlw	0
 27719  005768  8EDB               	bsf	plusw2,7,c
 27720                           
 27721                           ;usb_device.c: 1185: }
 27722  00576A  0012               	return	
 27723  00576C                     i2l7946:
 27724                           
 27725                           ; BSR set to: 0
 27726                           ;usb_device.c: 1186: else
 27727                           ;usb_device.c: 1187: {
 27728                           ;usb_device.c: 1190: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 27729  00576C  503A               	movf	_inPipes+4,w,c	;volatile
 27730  00576E  0104               	movlb	4	; () banked
 27731  005770  5D36               	subwf	54,w,b	;volatile
 27732  005772  503B               	movf	_inPipes+5,w,c	;volatile
 27733  005774  0104               	movlb	4	; () banked
 27734  005776  5937               	subwfb	55,w,b	;volatile
 27735  005778  B0D8               	btfsc	status,0,c
 27736  00577A  D004               	goto	i2l7950
 27737                           
 27738                           ; BSR set to: 4
 27739                           ;usb_device.c: 1191: {
 27740                           ;usb_device.c: 1192: inPipes[0].wCount.Val = SetupPkt.wLength;
 27741  00577C  C436 F03A          	movff	1078,_inPipes+4	;volatile
 27742  005780  C437 F03B          	movff	1079,_inPipes+5	;volatile
 27743  005784                     i2l7950:
 27744                           
 27745                           ; BSR set to: 4
 27746                           ;usb_device.c: 1193: }
 27747                           ;usb_device.c: 1194: USBCtrlTrfTxService();
 27748  005784  ECD5  F027         	call	_USBCtrlTrfTxService	;wreg free
 27749                           
 27750                           ;usb_device.c: 1199: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 27751  005788  EE20 F002          	lfsr	2,2
 27752  00578C  503C               	movf	_pBDTEntryIn,w,c
 27753  00578E  26D9               	addwf	fsr2l,f,c
 27754  005790  503D               	movf	_pBDTEntryIn+1,w,c
 27755  005792  22DA               	addwfc	fsr2h,f,c
 27756  005794  0E38               	movlw	56
 27757  005796  6EDE               	movwf	postinc2,c
 27758  005798  0E04               	movlw	4
 27759  00579A  6EDD               	movwf	postdec2,c
 27760                           
 27761                           ;usb_device.c: 1200: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 27762  00579C  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 27763  0057A0  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27764  0057A4  0E48               	movlw	72
 27765  0057A6  6EDF               	movwf	indf2,c
 27766                           
 27767                           ;usb_device.c: 1201: pBDTEntryIn[0]->STAT.Val |= 0x80;
 27768  0057A8  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 27769  0057AC  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27770  0057B0  0E00               	movlw	0
 27771  0057B2  8EDB               	bsf	plusw2,7,c
 27772  0057B4  0012               	return	
 27773  0057B6                     __end_of_USBCtrlEPAllowDataStage:
 27774                           	opt stack 0
 27775                           pclatu	equ	0xFFB
 27776                           pclath	equ	0xFFA
 27777                           tblptru	equ	0xFF8
 27778                           tblptrh	equ	0xFF7
 27779                           tblptrl	equ	0xFF6
 27780                           tablat	equ	0xFF5
 27781                           prodh	equ	0xFF4
 27782                           prodl	equ	0xFF3
 27783                           intcon	equ	0xFF2
 27784                           intcon3	equ	0xFF0
 27785                           indf0	equ	0xFEF
 27786                           postinc0	equ	0xFEE
 27787                           fsr0h	equ	0xFEA
 27788                           fsr0l	equ	0xFE9
 27789                           wreg	equ	0xFE8
 27790                           indf1	equ	0xFE7
 27791                           postdec1	equ	0xFE5
 27792                           fsr1h	equ	0xFE2
 27793                           fsr1l	equ	0xFE1
 27794                           indf2	equ	0xFDF
 27795                           postinc2	equ	0xFDE
 27796                           postdec2	equ	0xFDD
 27797                           plusw2	equ	0xFDB
 27798                           fsr2h	equ	0xFDA
 27799                           fsr2l	equ	0xFD9
 27800                           status	equ	0xFD8
 27801                           
 27802 ;; *************** function _USBCheckStdRequest *****************
 27803 ;; Defined at:
 27804 ;;		line 2317 in file "../Includes/Usb/Framework/usb_device.c"
 27805 ;; Parameters:    Size  Location     Type
 27806 ;;		None
 27807 ;; Auto vars:     Size  Location     Type
 27808 ;;		None
 27809 ;; Return value:  Size  Location     Type
 27810 ;;		None               void
 27811 ;; Registers used:
 27812 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27813 ;; Tracked objects:
 27814 ;;		On entry : 0/0
 27815 ;;		On exit  : 0/0
 27816 ;;		Unchanged: 0/0
 27817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27818 ;;      Params:         0       0       0       0       0       0       0       0       0
 27819 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27820 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27821 ;;      Totals:         0       0       0       0       0       0       0       0       0
 27822 ;;Total ram usage:        0 bytes
 27823 ;; Hardware stack levels used:    1
 27824 ;; Hardware stack levels required when called:    6
 27825 ;; This function calls:
 27826 ;;		_USBStdFeatureReqHandler
 27827 ;;		_USBStdGetDscHandler
 27828 ;;		_USBStdGetStatusHandler
 27829 ;;		_USBStdSetCfgHandler
 27830 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27831 ;; This function is called by:
 27832 ;;		_USBCtrlTrfSetupHandler
 27833 ;; This function uses a non-reentrant model
 27834 ;;
 27835                           
 27836                           	psect	text114
 27837  0049DE                     __ptext114:
 27838                           	opt stack 0
 27839  0049DE                     _USBCheckStdRequest:
 27840                           	opt stack 11
 27841                           
 27842                           ;usb_device.c: 2319: if(SetupPkt.RequestType != (0x00>>5)) return;
 27843                           
 27844                           ;incstack = 0
 27845  0049DE  0104               	movlb	4	; () banked
 27846  0049E0  3930               	swapf	48,w,b	;volatile
 27847  0049E2  32E8               	rrcf	wreg,f,c
 27848  0049E4  0B03               	andlw	3
 27849  0049E6  0900               	iorlw	0
 27850  0049E8  A4D8               	btfss	status,2,c
 27851  0049EA  0012               	return	
 27852  0049EC  D044               	goto	i2l8446
 27853  0049EE                     i2l1925:
 27854                           
 27855                           ; BSR set to: 4
 27856                           ;usb_device.c: 2324: inPipes[0].info.bits.busy = 1;
 27857  0049EE  8E39               	bsf	_inPipes+3,7,c	;volatile
 27858                           
 27859                           ; BSR set to: 4
 27860                           ;usb_device.c: 2325: USBDeviceState = ADR_PENDING_STATE;
 27861  0049F0  0E08               	movlw	8
 27862  0049F2  0100               	movlb	0	; () banked
 27863  0049F4  6FD2               	movwf	_USBDeviceState& (0+255),b	;volatile
 27864                           
 27865                           ;usb_device.c: 2327: break;
 27866  0049F6  0012               	return	
 27867  0049F8                     i2l8416:
 27868                           
 27869                           ;usb_device.c: 2329: USBStdGetDscHandler();
 27870  0049F8  EC44  F01E         	call	_USBStdGetDscHandler	;wreg free
 27871                           
 27872                           ;usb_device.c: 2330: break;
 27873  0049FC  0012               	return	
 27874  0049FE                     i2l8418:
 27875                           
 27876                           ;usb_device.c: 2332: USBStdSetCfgHandler();
 27877  0049FE  ECA0  F023         	call	_USBStdSetCfgHandler	;wreg free
 27878                           
 27879                           ;usb_device.c: 2333: break;
 27880  004A02  0012               	return	
 27881  004A04                     i2l8420:
 27882                           
 27883                           ;usb_device.c: 2335: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 27884  004A04  0E58               	movlw	low _USBActiveConfiguration
 27885  004A06  6E36               	movwf	_inPipes,c	;volatile
 27886  004A08  0E00               	movlw	high _USBActiveConfiguration
 27887  004A0A  6E37               	movwf	_inPipes+1,c	;volatile
 27888                           
 27889                           ;usb_device.c: 2336: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27890  004A0C  8039               	bsf	_inPipes+3,0,c	;volatile
 27891                           
 27892                           ;usb_device.c: 2337: inPipes[0].wCount.v[0] = 1;
 27893  004A0E  0E01               	movlw	1
 27894  004A10  6E3A               	movwf	_inPipes+4,c	;volatile
 27895                           
 27896                           ;usb_device.c: 2338: inPipes[0].info.bits.busy = 1;
 27897  004A12  8E39               	bsf	_inPipes+3,7,c	;volatile
 27898                           
 27899                           ;usb_device.c: 2339: break;
 27900  004A14  0012               	return	
 27901  004A16                     i2l8428:
 27902                           
 27903                           ;usb_device.c: 2341: USBStdGetStatusHandler();
 27904  004A16  EC48  F029         	call	_USBStdGetStatusHandler	;wreg free
 27905                           
 27906                           ;usb_device.c: 2342: break;
 27907  004A1A  0012               	return	
 27908  004A1C                     i2l8430:
 27909                           
 27910                           ;usb_device.c: 2344: case 3:
 27911                           ;usb_device.c: 2345: USBStdFeatureReqHandler();
 27912  004A1C  EC9A  F015         	call	_USBStdFeatureReqHandler	;wreg free
 27913                           
 27914                           ;usb_device.c: 2346: break;
 27915  004A20  0012               	return	
 27916  004A22                     i2l8432:
 27917                           
 27918                           ;usb_device.c: 2348: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 27919  004A22  0104               	movlb	4	; () banked
 27920  004A24  5134               	movf	52,w,b	;volatile
 27921  004A26  0D01               	mullw	1
 27922  004A28  0EF3               	movlw	low _USBAlternateInterface
 27923  004A2A  24F3               	addwf	prodl,w,c
 27924  004A2C  6E36               	movwf	_inPipes,c	;volatile
 27925  004A2E  0E00               	movlw	high _USBAlternateInterface
 27926  004A30  20F4               	addwfc	prodh,w,c
 27927  004A32  6E37               	movwf	_inPipes+1,c	;volatile
 27928                           
 27929                           ; BSR set to: 4
 27930                           ;usb_device.c: 2349: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27931  004A34  8039               	bsf	_inPipes+3,0,c	;volatile
 27932                           
 27933                           ; BSR set to: 4
 27934                           ;usb_device.c: 2350: inPipes[0].wCount.v[0] = 1;
 27935  004A36  0E01               	movlw	1
 27936  004A38  6E3A               	movwf	_inPipes+4,c	;volatile
 27937                           
 27938                           ; BSR set to: 4
 27939                           ;usb_device.c: 2351: inPipes[0].info.bits.busy = 1;
 27940  004A3A  8E39               	bsf	_inPipes+3,7,c	;volatile
 27941                           
 27942                           ;usb_device.c: 2352: break;
 27943  004A3C  0012               	return	
 27944  004A3E                     i2l1934:
 27945                           
 27946                           ; BSR set to: 4
 27947                           ;usb_device.c: 2354: inPipes[0].info.bits.busy = 1;
 27948  004A3E  8E39               	bsf	_inPipes+3,7,c	;volatile
 27949                           
 27950                           ; BSR set to: 4
 27951                           ;usb_device.c: 2355: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 27952  004A40  0104               	movlb	4	; () banked
 27953  004A42  5134               	movf	52,w,b	;volatile
 27954  004A44  0D01               	mullw	1
 27955  004A46  0EF3               	movlw	low _USBAlternateInterface
 27956  004A48  24F3               	addwf	prodl,w,c
 27957  004A4A  6ED9               	movwf	fsr2l,c
 27958  004A4C  0E00               	movlw	high _USBAlternateInterface
 27959  004A4E  20F4               	addwfc	prodh,w,c
 27960  004A50  6EDA               	movwf	fsr2h,c
 27961  004A52  C432 FFDF          	movff	1074,indf2	;volatile
 27962                           
 27963                           ;usb_device.c: 2356: break;
 27964  004A56  0012               	return	
 27965  004A58                     i2l8442:
 27966                           
 27967                           ; BSR set to: 4
 27968                           ;usb_device.c: 2358: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 27969  004A58  0E00               	movlw	0
 27970  004A5A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27971  004A5C  0E02               	movlw	2
 27972  004A5E  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27973  004A60  0E00               	movlw	0
 27974  004A62  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 27975  004A64  0E00               	movlw	0
 27976  004A66  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 27977  004A68  0E00               	movlw	0
 27978  004A6A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27979  004A6C  0E00               	movlw	0
 27980  004A6E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27981  004A70  EC41  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27982                           
 27983                           ;usb_device.c: 2363: }
 27984                           
 27985                           ;usb_device.c: 2362: break;
 27986                           
 27987                           ;usb_device.c: 2361: default:
 27988                           
 27989                           ;usb_device.c: 2360: case 12:
 27990                           
 27991                           ;usb_device.c: 2359: break;
 27992  004A74  0012               	return	
 27993  004A76                     i2l8446:
 27994  004A76  0104               	movlb	4	; () banked
 27995  004A78  5131               	movf	49,w,b	;volatile
 27996                           
 27997                           ; Switch size 1, requested type "space"
 27998                           ; Number of cases is 11, Range of values is 0 to 12
 27999                           ; switch strategies available:
 28000                           ; Name         Instructions Cycles
 28001                           ; simple_byte           34    18 (average)
 28002                           ;	Chosen strategy is simple_byte
 28003  004A7A  0A00               	xorlw	0	; case 0
 28004  004A7C  B4D8               	btfsc	status,2,c
 28005  004A7E  D7CB               	goto	i2l8428
 28006  004A80  0A01               	xorlw	1	; case 1
 28007  004A82  B4D8               	btfsc	status,2,c
 28008  004A84  D7CB               	goto	i2l8430
 28009  004A86  0A02               	xorlw	2	; case 3
 28010  004A88  B4D8               	btfsc	status,2,c
 28011  004A8A  D7C8               	goto	i2l8430
 28012  004A8C  0A06               	xorlw	6	; case 5
 28013  004A8E  B4D8               	btfsc	status,2,c
 28014  004A90  D7AE               	goto	i2l1925
 28015  004A92  0A03               	xorlw	3	; case 6
 28016  004A94  B4D8               	btfsc	status,2,c
 28017  004A96  D7B0               	goto	i2l8416
 28018  004A98  0A01               	xorlw	1	; case 7
 28019  004A9A  B4D8               	btfsc	status,2,c
 28020  004A9C  D7DD               	goto	i2l8442
 28021  004A9E  0A0F               	xorlw	15	; case 8
 28022  004AA0  B4D8               	btfsc	status,2,c
 28023  004AA2  D7B0               	goto	i2l8420
 28024  004AA4  0A01               	xorlw	1	; case 9
 28025  004AA6  B4D8               	btfsc	status,2,c
 28026  004AA8  D7AA               	goto	i2l8418
 28027  004AAA  0A03               	xorlw	3	; case 10
 28028  004AAC  B4D8               	btfsc	status,2,c
 28029  004AAE  D7B9               	goto	i2l8432
 28030  004AB0  0A01               	xorlw	1	; case 11
 28031  004AB2  B4D8               	btfsc	status,2,c
 28032  004AB4  D7C4               	goto	i2l1934
 28033  004AB6  0A07               	xorlw	7	; case 12
 28034  004AB8  0012               	return	
 28035  004ABA                     __end_of_USBCheckStdRequest:
 28036                           	opt stack 0
 28037                           pclatu	equ	0xFFB
 28038                           pclath	equ	0xFFA
 28039                           tblptru	equ	0xFF8
 28040                           tblptrh	equ	0xFF7
 28041                           tblptrl	equ	0xFF6
 28042                           tablat	equ	0xFF5
 28043                           prodh	equ	0xFF4
 28044                           prodl	equ	0xFF3
 28045                           intcon	equ	0xFF2
 28046                           intcon3	equ	0xFF0
 28047                           indf0	equ	0xFEF
 28048                           postinc0	equ	0xFEE
 28049                           fsr0h	equ	0xFEA
 28050                           fsr0l	equ	0xFE9
 28051                           wreg	equ	0xFE8
 28052                           indf1	equ	0xFE7
 28053                           postdec1	equ	0xFE5
 28054                           fsr1h	equ	0xFE2
 28055                           fsr1l	equ	0xFE1
 28056                           indf2	equ	0xFDF
 28057                           postinc2	equ	0xFDE
 28058                           postdec2	equ	0xFDD
 28059                           plusw2	equ	0xFDB
 28060                           fsr2h	equ	0xFDA
 28061                           fsr2l	equ	0xFD9
 28062                           status	equ	0xFD8
 28063                           
 28064 ;; *************** function _USBStdSetCfgHandler *****************
 28065 ;; Defined at:
 28066 ;;		line 1629 in file "../Includes/Usb/Framework/usb_device.c"
 28067 ;; Parameters:    Size  Location     Type
 28068 ;;		None
 28069 ;; Auto vars:     Size  Location     Type
 28070 ;;  i               1   21[COMRAM] unsigned char 
 28071 ;; Return value:  Size  Location     Type
 28072 ;;		None               void
 28073 ;; Registers used:
 28074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28075 ;; Tracked objects:
 28076 ;;		On entry : 0/0
 28077 ;;		On exit  : 0/0
 28078 ;;		Unchanged: 0/0
 28079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28080 ;;      Params:         0       0       0       0       0       0       0       0       0
 28081 ;;      Locals:         1       0       0       0       0       0       0       0       0
 28082 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28083 ;;      Totals:         1       0       0       0       0       0       0       0       0
 28084 ;;Total ram usage:        1 bytes
 28085 ;; Hardware stack levels used:    1
 28086 ;; Hardware stack levels required when called:    5
 28087 ;; This function calls:
 28088 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28089 ;;		i2_memset
 28090 ;; This function is called by:
 28091 ;;		_USBCheckStdRequest
 28092 ;; This function uses a non-reentrant model
 28093 ;;
 28094                           
 28095                           	psect	text115
 28096  004740                     __ptext115:
 28097                           	opt stack 0
 28098  004740                     _USBStdSetCfgHandler:
 28099                           	opt stack 11
 28100                           
 28101                           ;usb_device.c: 1631: uint8_t i;
 28102                           ;usb_device.c: 1634: inPipes[0].info.bits.busy = 1;
 28103                           
 28104                           ;incstack = 0
 28105  004740  8E39               	bsf	_inPipes+3,7,c	;volatile
 28106                           
 28107                           ;usb_device.c: 1637: memset((void*)&UEP1,0x00,(2));;
 28108  004742  0E6B               	movlw	107
 28109  004744  6E01               	movwf	i2memset@p1,c
 28110  004746  0E0F               	movlw	15
 28111  004748  6E02               	movwf	i2memset@p1+1,c
 28112  00474A  0E00               	movlw	0
 28113  00474C  6E04               	movwf	i2memset@c+1,c
 28114  00474E  0E00               	movlw	0
 28115  004750  6E03               	movwf	i2memset@c,c
 28116  004752  0E00               	movlw	0
 28117  004754  6E06               	movwf	i2memset@n+1,c
 28118  004756  0E02               	movlw	2
 28119  004758  6E05               	movwf	i2memset@n,c
 28120  00475A  ECE0  F033         	call	i2_memset	;wreg free
 28121                           
 28122                           ;usb_device.c: 1640: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 28123  00475E  0E00               	movlw	0
 28124  004760  6E01               	movwf	i2memset@p1,c
 28125  004762  0E04               	movlw	4
 28126  004764  6E02               	movwf	i2memset@p1+1,c
 28127  004766  0E00               	movlw	0
 28128  004768  6E04               	movwf	i2memset@c+1,c
 28129  00476A  0E00               	movlw	0
 28130  00476C  6E03               	movwf	i2memset@c,c
 28131  00476E  0E00               	movlw	0
 28132  004770  6E06               	movwf	i2memset@n+1,c
 28133  004772  0E30               	movlw	48
 28134  004774  6E05               	movwf	i2memset@n,c
 28135  004776  ECE0  F033         	call	i2_memset	;wreg free
 28136                           
 28137                           ;usb_device.c: 1643: UCONbits.PPBRST = 1;
 28138  00477A  8C60               	bsf	3936,6,c	;volatile
 28139                           
 28140                           ;usb_device.c: 1648: for(i = 0; i < (uint8_t)(2+1u); i++)
 28141  00477C  0E00               	movlw	0
 28142  00477E  6E16               	movwf	USBStdSetCfgHandler@i,c
 28143  004780                     i2l7966:
 28144  004780  0E02               	movlw	2
 28145  004782  6416               	cpfsgt	USBStdSetCfgHandler@i,c
 28146  004784  D001               	goto	i2l7970
 28147  004786  D016               	goto	i2l7976
 28148  004788                     i2l7970:
 28149                           
 28150                           ;usb_device.c: 1649: {
 28151                           ;usb_device.c: 1650: ep_data_in[i].Val = 0u;
 28152  004788  5016               	movf	USBStdSetCfgHandler@i,w,c
 28153  00478A  0D01               	mullw	1
 28154  00478C  0EB7               	movlw	low _ep_data_in
 28155  00478E  24F3               	addwf	prodl,w,c
 28156  004790  6ED9               	movwf	fsr2l,c
 28157  004792  0E00               	movlw	high _ep_data_in
 28158  004794  20F4               	addwfc	prodh,w,c
 28159  004796  6EDA               	movwf	fsr2h,c
 28160  004798  0E00               	movlw	0
 28161  00479A  6EDF               	movwf	indf2,c
 28162                           
 28163                           ;usb_device.c: 1651: ep_data_out[i].Val = 0u;
 28164  00479C  5016               	movf	USBStdSetCfgHandler@i,w,c
 28165  00479E  0D01               	mullw	1
 28166  0047A0  0EBA               	movlw	low _ep_data_out
 28167  0047A2  24F3               	addwf	prodl,w,c
 28168  0047A4  6ED9               	movwf	fsr2l,c
 28169  0047A6  0E00               	movlw	high _ep_data_out
 28170  0047A8  20F4               	addwfc	prodh,w,c
 28171  0047AA  6EDA               	movwf	fsr2h,c
 28172  0047AC  0E00               	movlw	0
 28173  0047AE  6EDF               	movwf	indf2,c
 28174  0047B0  2A16               	incf	USBStdSetCfgHandler@i,f,c
 28175  0047B2  D7E6               	goto	i2l7966
 28176  0047B4                     i2l7976:
 28177                           
 28178                           ;usb_device.c: 1652: }
 28179                           ;usb_device.c: 1655: memset((void*)&USBAlternateInterface,0x00,2);
 28180  0047B4  0EF3               	movlw	low _USBAlternateInterface
 28181  0047B6  6E01               	movwf	i2memset@p1,c
 28182  0047B8  0E00               	movlw	high _USBAlternateInterface
 28183  0047BA  6E02               	movwf	i2memset@p1+1,c
 28184  0047BC  0E00               	movlw	0
 28185  0047BE  6E04               	movwf	i2memset@c+1,c
 28186  0047C0  0E00               	movlw	0
 28187  0047C2  6E03               	movwf	i2memset@c,c
 28188  0047C4  0E00               	movlw	0
 28189  0047C6  6E06               	movwf	i2memset@n+1,c
 28190  0047C8  0E02               	movlw	2
 28191  0047CA  6E05               	movwf	i2memset@n,c
 28192  0047CC  ECE0  F033         	call	i2_memset	;wreg free
 28193                           
 28194                           ;usb_device.c: 1658: UCONbits.PPBRST = 0;
 28195  0047D0  9C60               	bcf	3936,6,c	;volatile
 28196                           
 28197                           ;usb_device.c: 1660: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 28198  0047D2  0E08               	movlw	8
 28199  0047D4  6E3C               	movwf	_pBDTEntryIn,c
 28200  0047D6  0E04               	movlw	4
 28201  0047D8  6E3D               	movwf	_pBDTEntryIn+1,c
 28202                           
 28203                           ;usb_device.c: 1663: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 28204  0047DA  0E00               	movlw	0
 28205  0047DC  6E44               	movwf	_pBDTEntryEP0OutCurrent,c
 28206  0047DE  0E04               	movlw	4
 28207  0047E0  6E45               	movwf	_pBDTEntryEP0OutCurrent+1,c
 28208                           
 28209                           ;usb_device.c: 1664: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 28210  0047E2  C044  F046         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 28211  0047E6  C045  F047         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 28212                           
 28213                           ;usb_device.c: 1667: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 28214  0047EA  C432 F058          	movff	1074,_USBActiveConfiguration	;volatile
 28215                           
 28216                           ;usb_device.c: 1670: if(USBActiveConfiguration == 0)
 28217  0047EE  5058               	movf	_USBActiveConfiguration,w,c	;volatile
 28218  0047F0  A4D8               	btfss	status,2,c
 28219  0047F2  D004               	goto	i2l7992
 28220                           
 28221                           ;usb_device.c: 1671: {
 28222                           ;usb_device.c: 1673: USBDeviceState = ADDRESS_STATE;
 28223  0047F4  0E10               	movlw	16
 28224  0047F6  0100               	movlb	0	; () banked
 28225  0047F8  6FD2               	movwf	_USBDeviceState& (0+255),b	;volatile
 28226                           
 28227                           ;usb_device.c: 1674: }
 28228  0047FA  0012               	return	
 28229  0047FC                     i2l7992:
 28230                           
 28231                           ;usb_device.c: 1675: else
 28232                           ;usb_device.c: 1676: {
 28233                           ;usb_device.c: 1678: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 28234  0047FC  0E00               	movlw	0
 28235  0047FE  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 28236  004800  0E01               	movlw	1
 28237  004802  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 28238  004804  0E58               	movlw	low _USBActiveConfiguration
 28239  004806  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 28240  004808  0E00               	movlw	high _USBActiveConfiguration
 28241  00480A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 28242  00480C  0E00               	movlw	0
 28243  00480E  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 28244  004810  0E01               	movlw	1
 28245  004812  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 28246  004814  EC41  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 28247                           
 28248                           ;usb_device.c: 1683: USBDeviceState = CONFIGURED_STATE;
 28249  004818  0E20               	movlw	32
 28250  00481A  0100               	movlb	0	; () banked
 28251  00481C  6FD2               	movwf	_USBDeviceState& (0+255),b	;volatile
 28252  00481E  0012               	return	
 28253  004820                     __end_of_USBStdSetCfgHandler:
 28254                           	opt stack 0
 28255                           pclatu	equ	0xFFB
 28256                           pclath	equ	0xFFA
 28257                           tblptru	equ	0xFF8
 28258                           tblptrh	equ	0xFF7
 28259                           tblptrl	equ	0xFF6
 28260                           tablat	equ	0xFF5
 28261                           prodh	equ	0xFF4
 28262                           prodl	equ	0xFF3
 28263                           intcon	equ	0xFF2
 28264                           intcon3	equ	0xFF0
 28265                           indf0	equ	0xFEF
 28266                           postinc0	equ	0xFEE
 28267                           fsr0h	equ	0xFEA
 28268                           fsr0l	equ	0xFE9
 28269                           wreg	equ	0xFE8
 28270                           indf1	equ	0xFE7
 28271                           postdec1	equ	0xFE5
 28272                           fsr1h	equ	0xFE2
 28273                           fsr1l	equ	0xFE1
 28274                           indf2	equ	0xFDF
 28275                           postinc2	equ	0xFDE
 28276                           postdec2	equ	0xFDD
 28277                           plusw2	equ	0xFDB
 28278                           fsr2h	equ	0xFDA
 28279                           fsr2l	equ	0xFD9
 28280                           status	equ	0xFD8
 28281                           
 28282 ;; *************** function i2_memset *****************
 28283 ;; Defined at:
 28284 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 28285 ;; Parameters:    Size  Location     Type
 28286 ;;  p1              2    0[COMRAM] PTR void 
 28287 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 28288 ;;  c               2    2[COMRAM] int 
 28289 ;;  n               2    4[COMRAM] unsigned int 
 28290 ;; Auto vars:     Size  Location     Type
 28291 ;;  memset          2    6[COMRAM] PTR unsigned char 
 28292 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 28293 ;; Return value:  Size  Location     Type
 28294 ;;                  2    0[COMRAM] PTR void 
 28295 ;; Registers used:
 28296 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28297 ;; Tracked objects:
 28298 ;;		On entry : 0/0
 28299 ;;		On exit  : 0/0
 28300 ;;		Unchanged: 0/0
 28301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28302 ;;      Params:         6       0       0       0       0       0       0       0       0
 28303 ;;      Locals:         2       0       0       0       0       0       0       0       0
 28304 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28305 ;;      Totals:         8       0       0       0       0       0       0       0       0
 28306 ;;Total ram usage:        8 bytes
 28307 ;; Hardware stack levels used:    1
 28308 ;; This function calls:
 28309 ;;		Nothing
 28310 ;; This function is called by:
 28311 ;;		_USBStdSetCfgHandler
 28312 ;;		i2_USBDeviceInit
 28313 ;; This function uses a non-reentrant model
 28314 ;;
 28315                           
 28316                           	psect	text116
 28317  0067C0                     __ptext116:
 28318                           	opt stack 0
 28319  0067C0                     i2_memset:
 28320                           	opt stack 18
 28321                           
 28322                           ; BSR set to: 0
 28323                           ;incstack = 0
 28324  0067C0  C001  F007         	movff	i2memset@p1,i2memset@p
 28325  0067C4  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 28326  0067C8  D008               	goto	i2l7792
 28327  0067CA                     i2l7788:
 28328  0067CA  C007  FFD9         	movff	i2memset@p,fsr2l
 28329  0067CE  C008  FFDA         	movff	i2memset@p+1,fsr2h
 28330  0067D2  C003  FFDF         	movff	i2memset@c,indf2
 28331  0067D6  4A07               	infsnz	i2memset@p,f,c
 28332  0067D8  2A08               	incf	i2memset@p+1,f,c
 28333  0067DA                     i2l7792:
 28334  0067DA  0605               	decf	i2memset@n,f,c
 28335  0067DC  A0D8               	btfss	status,0,c
 28336  0067DE  0606               	decf	i2memset@n+1,f,c
 28337  0067E0  2805               	incf	i2memset@n,w,c
 28338  0067E2  E1F3               	bnz	i2l7788
 28339  0067E4  2806               	incf	i2memset@n+1,w,c
 28340  0067E6  B4D8               	btfsc	status,2,c
 28341  0067E8  0012               	return	
 28342  0067EA  D7EF               	goto	i2l7788
 28343  0067EC                     __end_ofi2_memset:
 28344                           	opt stack 0
 28345                           pclatu	equ	0xFFB
 28346                           pclath	equ	0xFFA
 28347                           tblptru	equ	0xFF8
 28348                           tblptrh	equ	0xFF7
 28349                           tblptrl	equ	0xFF6
 28350                           tablat	equ	0xFF5
 28351                           prodh	equ	0xFF4
 28352                           prodl	equ	0xFF3
 28353                           intcon	equ	0xFF2
 28354                           intcon3	equ	0xFF0
 28355                           indf0	equ	0xFEF
 28356                           postinc0	equ	0xFEE
 28357                           fsr0h	equ	0xFEA
 28358                           fsr0l	equ	0xFE9
 28359                           wreg	equ	0xFE8
 28360                           indf1	equ	0xFE7
 28361                           postdec1	equ	0xFE5
 28362                           fsr1h	equ	0xFE2
 28363                           fsr1l	equ	0xFE1
 28364                           indf2	equ	0xFDF
 28365                           postinc2	equ	0xFDE
 28366                           postdec2	equ	0xFDD
 28367                           plusw2	equ	0xFDB
 28368                           fsr2h	equ	0xFDA
 28369                           fsr2l	equ	0xFD9
 28370                           status	equ	0xFD8
 28371                           
 28372 ;; *************** function _USBStdGetStatusHandler *****************
 28373 ;; Defined at:
 28374 ;;		line 1773 in file "../Includes/Usb/Framework/usb_device.c"
 28375 ;; Parameters:    Size  Location     Type
 28376 ;;		None
 28377 ;; Auto vars:     Size  Location     Type
 28378 ;;  p               2    1[COMRAM] PTR struct __BDT
 28379 ;;		 -> BDT(48), NULL(0), 
 28380 ;; Return value:  Size  Location     Type
 28381 ;;		None               void
 28382 ;; Registers used:
 28383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28384 ;; Tracked objects:
 28385 ;;		On entry : 0/0
 28386 ;;		On exit  : 0/0
 28387 ;;		Unchanged: 0/0
 28388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28389 ;;      Params:         0       0       0       0       0       0       0       0       0
 28390 ;;      Locals:         2       0       0       0       0       0       0       0       0
 28391 ;;      Temps:          1       0       0       0       0       0       0       0       0
 28392 ;;      Totals:         3       0       0       0       0       0       0       0       0
 28393 ;;Total ram usage:        3 bytes
 28394 ;; Hardware stack levels used:    1
 28395 ;; This function calls:
 28396 ;;		Nothing
 28397 ;; This function is called by:
 28398 ;;		_USBCheckStdRequest
 28399 ;; This function uses a non-reentrant model
 28400 ;;
 28401                           
 28402                           	psect	text117
 28403  005290                     __ptext117:
 28404                           	opt stack 0
 28405  005290                     _USBStdGetStatusHandler:
 28406                           	opt stack 16
 28407                           
 28408                           ;usb_device.c: 1775: CtrlTrfData[0] = 0;
 28409                           
 28410                           ;incstack = 0
 28411  005290  0E00               	movlw	0
 28412  005292  0104               	movlb	4	; () banked
 28413  005294  6F38               	movwf	56,b	;volatile
 28414                           
 28415                           ;usb_device.c: 1776: CtrlTrfData[1] = 0;
 28416  005296  0E00               	movlw	0
 28417  005298  0104               	movlb	4	; () banked
 28418  00529A  6F39               	movwf	57,b	;volatile
 28419                           
 28420                           ;usb_device.c: 1778: switch(SetupPkt.Recipient)
 28421  00529C  D039               	goto	i2l8048
 28422  00529E                     i2l1861:
 28423                           
 28424                           ; BSR set to: 4
 28425                           ;usb_device.c: 1781: inPipes[0].info.bits.busy = 1;
 28426  00529E  8E39               	bsf	_inPipes+3,7,c	;volatile
 28427                           
 28428                           ; BSR set to: 4
 28429                           ;usb_device.c: 1789: }
 28430                           ;usb_device.c: 1791: if(RemoteWakeup == 1)
 28431                           
 28432                           ; BSR set to: 4
 28433                           
 28434                           ; BSR set to: 4
 28435                           ;usb_device.c: 1787: {
 28436                           ;usb_device.c: 1788: CtrlTrfData[0]|=0x01;
 28437                           
 28438                           ;usb_device.c: 1786: if(0 == 1)
 28439  0052A0  0100               	movlb	0	; () banked
 28440  0052A2  05CE               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 28441  0052A4  A4D8               	btfss	status,2,c
 28442  0052A6  D040               	goto	i2l1864
 28443                           
 28444                           ; BSR set to: 0
 28445                           ;usb_device.c: 1792: {
 28446                           ;usb_device.c: 1793: CtrlTrfData[0]|=0x02;
 28447  0052A8  0104               	movlb	4	; () banked
 28448  0052AA  8338               	bsf	56,1,b	;volatile
 28449                           
 28450                           ; BSR set to: 4
 28451                           ;usb_device.c: 1794: }
 28452                           ;usb_device.c: 1795: break;
 28453  0052AC  D03D               	goto	i2l1864
 28454  0052AE                     i2l1865:
 28455                           
 28456                           ; BSR set to: 4
 28457                           ;usb_device.c: 1797: inPipes[0].info.bits.busy = 1;
 28458  0052AE  8E39               	bsf	_inPipes+3,7,c	;volatile
 28459                           
 28460                           ;usb_device.c: 1798: break;
 28461  0052B0  D03B               	goto	i2l1864
 28462  0052B2                     i2l1866:
 28463                           
 28464                           ; BSR set to: 4
 28465                           ;usb_device.c: 1800: inPipes[0].info.bits.busy = 1;
 28466  0052B2  8E39               	bsf	_inPipes+3,7,c	;volatile
 28467                           
 28468                           ;usb_device.c: 1804: {
 28469                           ;usb_device.c: 1805: BDT_ENTRY *p;
 28470                           ;usb_device.c: 1807: if(SetupPkt.EPDir == 0)
 28471  0052B4  0104               	movlb	4	; () banked
 28472  0052B6  BF34               	btfsc	52,7,b	;volatile
 28473  0052B8  D00B               	goto	i2l8038
 28474                           
 28475                           ; BSR set to: 4
 28476                           ;usb_device.c: 1808: {
 28477                           ;usb_device.c: 1809: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 28478  0052BA  0104               	movlb	4	; () banked
 28479  0052BC  5134               	movf	52,w,b	;volatile
 28480  0052BE  0B0F               	andlw	15
 28481  0052C0  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 28482  0052C2  5001               	movf	??_USBStdGetStatusHandler,w,c
 28483  0052C4  0D02               	mullw	2
 28484  0052C6  0E40               	movlw	low _pBDTEntryOut
 28485  0052C8  24F3               	addwf	prodl,w,c
 28486  0052CA  6ED9               	movwf	fsr2l,c
 28487  0052CC  0E01               	movlw	high _pBDTEntryOut
 28488  0052CE  D00A               	goto	L26
 28489  0052D0                     i2l8038:
 28490                           
 28491                           ; BSR set to: 4
 28492                           ;usb_device.c: 1811: else
 28493                           ;usb_device.c: 1812: {
 28494                           ;usb_device.c: 1813: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 28495  0052D0  0104               	movlb	4	; () banked
 28496  0052D2  5134               	movf	52,w,b	;volatile
 28497  0052D4  0B0F               	andlw	15
 28498  0052D6  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 28499  0052D8  5001               	movf	??_USBStdGetStatusHandler,w,c
 28500  0052DA  0D02               	mullw	2
 28501  0052DC  0E3C               	movlw	low _pBDTEntryIn
 28502  0052DE  24F3               	addwf	prodl,w,c
 28503  0052E0  6ED9               	movwf	fsr2l,c
 28504  0052E2  0E00               	movlw	high _pBDTEntryIn
 28505  0052E4                     L26:
 28506  0052E4  20F4               	addwfc	prodh,w,c
 28507  0052E6  6EDA               	movwf	fsr2h,c
 28508  0052E8  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 28509  0052EC  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 28510                           
 28511                           ; BSR set to: 4
 28512                           ;usb_device.c: 1814: }
 28513                           ;usb_device.c: 1816: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 28514                           
 28515                           ; BSR set to: 4
 28516  0052F0  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 28517  0052F4  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 28518  0052F8  AEDF               	btfss	indf2,7,c
 28519  0052FA  D016               	goto	i2l1864
 28520                           
 28521                           ; BSR set to: 4
 28522  0052FC  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 28523  005300  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 28524  005304  A4DF               	btfss	indf2,2,c
 28525  005306  D010               	goto	i2l1864
 28526                           
 28527                           ; BSR set to: 4
 28528                           ;usb_device.c: 1817: CtrlTrfData[0]=0x01;
 28529  005308  0E01               	movlw	1
 28530  00530A  0104               	movlb	4	; () banked
 28531  00530C  6F38               	movwf	56,b	;volatile
 28532                           
 28533                           ; BSR set to: 4
 28534                           ;usb_device.c: 1819: }
 28535                           ;usb_device.c: 1820: }
 28536                           
 28537                           ; BSR set to: 4
 28538                           ;usb_device.c: 1818: break;
 28539  00530E  D00C               	goto	i2l1864
 28540  005310                     i2l8048:
 28541                           
 28542                           ; BSR set to: 4
 28543  005310  0104               	movlb	4	; () banked
 28544  005312  5130               	movf	48,w,b	;volatile
 28545  005314  0B1F               	andlw	31
 28546                           
 28547                           ; Switch size 1, requested type "space"
 28548                           ; Number of cases is 3, Range of values is 0 to 2
 28549                           ; switch strategies available:
 28550                           ; Name         Instructions Cycles
 28551                           ; simple_byte           10     6 (average)
 28552                           ;	Chosen strategy is simple_byte
 28553  005316  0A00               	xorlw	0	; case 0
 28554  005318  B4D8               	btfsc	status,2,c
 28555  00531A  D7C1               	goto	i2l1861
 28556  00531C  0A01               	xorlw	1	; case 1
 28557  00531E  B4D8               	btfsc	status,2,c
 28558  005320  D7C6               	goto	i2l1865
 28559  005322  0A03               	xorlw	3	; case 2
 28560  005324  B4D8               	btfsc	status,2,c
 28561  005326  D7C5               	goto	i2l1866
 28562  005328                     i2l1864:
 28563                           
 28564                           ;usb_device.c: 1822: if(inPipes[0].info.bits.busy == 1)
 28565  005328  AE39               	btfss	_inPipes+3,7,c	;volatile
 28566  00532A  0012               	return	
 28567                           
 28568                           ;usb_device.c: 1823: {
 28569                           ;usb_device.c: 1824: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 28570  00532C  0E38               	movlw	56
 28571  00532E  6E36               	movwf	_inPipes,c	;volatile
 28572  005330  0E04               	movlw	4
 28573  005332  6E37               	movwf	_inPipes+1,c	;volatile
 28574                           
 28575                           ;usb_device.c: 1825: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 28576  005334  8039               	bsf	_inPipes+3,0,c	;volatile
 28577                           
 28578                           ;usb_device.c: 1826: inPipes[0].wCount.v[0] = 2;
 28579  005336  0E02               	movlw	2
 28580  005338  6E3A               	movwf	_inPipes+4,c	;volatile
 28581  00533A  0012               	return	
 28582  00533C                     __end_of_USBStdGetStatusHandler:
 28583                           	opt stack 0
 28584                           pclatu	equ	0xFFB
 28585                           pclath	equ	0xFFA
 28586                           tblptru	equ	0xFF8
 28587                           tblptrh	equ	0xFF7
 28588                           tblptrl	equ	0xFF6
 28589                           tablat	equ	0xFF5
 28590                           prodh	equ	0xFF4
 28591                           prodl	equ	0xFF3
 28592                           intcon	equ	0xFF2
 28593                           intcon3	equ	0xFF0
 28594                           indf0	equ	0xFEF
 28595                           postinc0	equ	0xFEE
 28596                           fsr0h	equ	0xFEA
 28597                           fsr0l	equ	0xFE9
 28598                           wreg	equ	0xFE8
 28599                           indf1	equ	0xFE7
 28600                           postdec1	equ	0xFE5
 28601                           fsr1h	equ	0xFE2
 28602                           fsr1l	equ	0xFE1
 28603                           indf2	equ	0xFDF
 28604                           postinc2	equ	0xFDE
 28605                           postdec2	equ	0xFDD
 28606                           plusw2	equ	0xFDB
 28607                           fsr2h	equ	0xFDA
 28608                           fsr2l	equ	0xFD9
 28609                           status	equ	0xFD8
 28610                           
 28611 ;; *************** function _USBStdGetDscHandler *****************
 28612 ;; Defined at:
 28613 ;;		line 1704 in file "../Includes/Usb/Framework/usb_device.c"
 28614 ;; Parameters:    Size  Location     Type
 28615 ;;		None
 28616 ;; Auto vars:     Size  Location     Type
 28617 ;;		None
 28618 ;; Return value:  Size  Location     Type
 28619 ;;		None               void
 28620 ;; Registers used:
 28621 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 28622 ;; Tracked objects:
 28623 ;;		On entry : 0/0
 28624 ;;		On exit  : 0/0
 28625 ;;		Unchanged: 0/0
 28626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28627 ;;      Params:         0       0       0       0       0       0       0       0       0
 28628 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28629 ;;      Temps:          2       0       0       0       0       0       0       0       0
 28630 ;;      Totals:         2       0       0       0       0       0       0       0       0
 28631 ;;Total ram usage:        2 bytes
 28632 ;; Hardware stack levels used:    1
 28633 ;; This function calls:
 28634 ;;		Nothing
 28635 ;; This function is called by:
 28636 ;;		_USBCheckStdRequest
 28637 ;; This function uses a non-reentrant model
 28638 ;;
 28639                           
 28640                           	psect	text118
 28641  003C88                     __ptext118:
 28642                           	opt stack 0
 28643  003C88                     _USBStdGetDscHandler:
 28644                           	opt stack 16
 28645                           
 28646                           ;usb_device.c: 1706: if(SetupPkt.bmRequestType == 0x80)
 28647                           
 28648                           ;incstack = 0
 28649  003C88  0E80               	movlw	128
 28650  003C8A  0104               	movlb	4	; () banked
 28651  003C8C  1930               	xorwf	48,w,b	;volatile
 28652  003C8E  A4D8               	btfss	status,2,c
 28653  003C90  0012               	return	
 28654                           
 28655                           ; BSR set to: 4
 28656                           ;usb_device.c: 1707: {
 28657                           ;usb_device.c: 1708: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 28658  003C92  0EC0               	movlw	192
 28659  003C94  6E39               	movwf	_inPipes+3,c	;volatile
 28660                           
 28661                           ;usb_device.c: 1710: switch(SetupPkt.bDescriptorType)
 28662  003C96  D07C               	goto	i2l8026
 28663  003C98                     i2l8000:
 28664                           
 28665                           ; BSR set to: 4
 28666                           ;usb_device.c: 1713: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 28667  003C98  0E4E               	movlw	low _device_dsc
 28668  003C9A  6E36               	movwf	_inPipes,c	;volatile
 28669  003C9C  0E79               	movlw	high _device_dsc
 28670  003C9E  6E37               	movwf	_inPipes+1,c	;volatile
 28671                           
 28672                           ; BSR set to: 4
 28673                           ;usb_device.c: 1714: inPipes[0].wCount.Val = sizeof(device_dsc);
 28674  003CA0  0E00               	movlw	0
 28675  003CA2  6E3B               	movwf	_inPipes+5,c	;volatile
 28676  003CA4  0E12               	movlw	18
 28677  003CA6  6E3A               	movwf	_inPipes+4,c	;volatile
 28678                           
 28679                           ;usb_device.c: 1715: break;
 28680  003CA8  0012               	return	
 28681  003CAA                     i2l8004:
 28682                           
 28683                           ; BSR set to: 4
 28684                           ;usb_device.c: 1720: if(SetupPkt.bDscIndex < 1)
 28685  003CAA  0104               	movlb	4	; () banked
 28686  003CAC  5132               	movf	50,w,b	;volatile
 28687  003CAE  A4D8               	btfss	status,2,c
 28688  003CB0  D03E               	goto	i2l8012
 28689                           
 28690                           ; BSR set to: 4
 28691                           ;usb_device.c: 1721: {
 28692                           ;usb_device.c: 1722: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 28693  003CB2  0104               	movlb	4	; () banked
 28694  003CB4  5132               	movf	50,w,b	;volatile
 28695  003CB6  0D02               	mullw	2
 28696  003CB8  0EA1               	movlw	low _USB_CD_Ptr
 28697  003CBA  24F3               	addwf	prodl,w,c
 28698  003CBC  6EF6               	movwf	tblptrl,c
 28699  003CBE  0E75               	movlw	high _USB_CD_Ptr
 28700  003CC0  20F4               	addwfc	prodh,w,c
 28701  003CC2  6EF7               	movwf	tblptrh,c
 28702  003CC4                     	if	0	;There are less than 3 active tblptr bytes
 28703  003CC4                     	endif
 28704  003CC4  0009               	tblrd		*+
 28705  003CC6  CFF5 F036          	movff	tablat,_inPipes	;volatile
 28706  003CCA  000A               	tblrd		*-
 28707  003CCC  CFF5 F037          	movff	tablat,_inPipes+1	;volatile
 28708                           
 28709                           ; BSR set to: 4
 28710                           ;usb_device.c: 1727: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 28711  003CD0  0E02               	movlw	2
 28712  003CD2  2436               	addwf	_inPipes,w,c	;volatile
 28713  003CD4  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 28714  003CD6  0E00               	movlw	0
 28715  003CD8  2037               	addwfc	_inPipes+1,w,c	;volatile
 28716  003CDA  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 28717  003CDC  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 28718  003CE0  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 28719  003CE4  6AF8               	clrf	tblptru,c
 28720  003CE6  0E07               	movlw	(high __ramtop+-1)
 28721  003CE8  64F7               	cpfsgt	tblptrh,c
 28722  003CEA  D003               	bra	i2u594_47
 28723  003CEC  0008               	tblrd		*
 28724  003CEE  50F5               	movf	tablat,w,c
 28725  003CF0  D005               	bra	i2u594_40
 28726  003CF2                     i2u594_47:
 28727  003CF2  CFF6 FFE9          	movff	tblptrl,fsr0l
 28728  003CF6  CFF7 FFEA          	movff	tblptrh,fsr0h
 28729  003CFA  50EF               	movf	indf0,w,c
 28730  003CFC                     i2u594_40:
 28731  003CFC  6E3A               	movwf	_inPipes+4,c	;volatile
 28732                           
 28733                           ;usb_device.c: 1728: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 28734  003CFE  0E03               	movlw	3
 28735  003D00  2436               	addwf	_inPipes,w,c	;volatile
 28736  003D02  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 28737  003D04  0E00               	movlw	0
 28738  003D06  2037               	addwfc	_inPipes+1,w,c	;volatile
 28739  003D08  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 28740  003D0A  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 28741  003D0E  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 28742  003D12  6AF8               	clrf	tblptru,c
 28743  003D14  0E07               	movlw	(high __ramtop+-1)
 28744  003D16  64F7               	cpfsgt	tblptrh,c
 28745  003D18  D003               	bra	i2u595_47
 28746  003D1A  0008               	tblrd		*
 28747  003D1C  50F5               	movf	tablat,w,c
 28748  003D1E  D005               	bra	i2u595_40
 28749  003D20                     i2u595_47:
 28750  003D20  CFF6 FFE9          	movff	tblptrl,fsr0l
 28751  003D24  CFF7 FFEA          	movff	tblptrh,fsr0h
 28752  003D28  50EF               	movf	indf0,w,c
 28753  003D2A                     i2u595_40:
 28754  003D2A  6E3B               	movwf	_inPipes+5,c	;volatile
 28755                           
 28756                           ;usb_device.c: 1729: }
 28757  003D2C  0012               	return	
 28758  003D2E                     i2l8012:
 28759                           
 28760                           ;usb_device.c: 1730: else
 28761                           ;usb_device.c: 1731: {
 28762                           ;usb_device.c: 1732: inPipes[0].info.Val = 0;
 28763  003D2E  0E00               	movlw	0
 28764  003D30  6E39               	movwf	_inPipes+3,c	;volatile
 28765                           
 28766                           ;usb_device.c: 1733: }
 28767                           ;usb_device.c: 1734: break;
 28768  003D32  0012               	return	
 28769  003D34                     i2l8014:
 28770                           
 28771                           ;usb_device.c: 1739: if(SetupPkt.bDscIndex<3)
 28772  003D34  0E03               	movlw	3
 28773  003D36  0104               	movlb	4	; () banked
 28774  003D38  6132               	cpfslt	50,b	;volatile
 28775  003D3A  D024               	goto	i2l8020
 28776                           
 28777                           ; BSR set to: 4
 28778                           ;usb_device.c: 1740: {
 28779                           ;usb_device.c: 1742: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 28780  003D3C  0104               	movlb	4	; () banked
 28781  003D3E  5132               	movf	50,w,b	;volatile
 28782  003D40  0D02               	mullw	2
 28783  003D42  0E9B               	movlw	low _USB_SD_Ptr
 28784  003D44  24F3               	addwf	prodl,w,c
 28785  003D46  6EF6               	movwf	tblptrl,c
 28786  003D48  0E75               	movlw	high _USB_SD_Ptr
 28787  003D4A  20F4               	addwfc	prodh,w,c
 28788  003D4C  6EF7               	movwf	tblptrh,c
 28789  003D4E                     	if	0	;There are less than 3 active tblptr bytes
 28790  003D4E                     	endif
 28791  003D4E  0009               	tblrd		*+
 28792  003D50  CFF5 F036          	movff	tablat,_inPipes	;volatile
 28793  003D54  000A               	tblrd		*-
 28794  003D56  CFF5 F037          	movff	tablat,_inPipes+1	;volatile
 28795                           
 28796                           ; BSR set to: 4
 28797                           ;usb_device.c: 1744: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 28798  003D5A  C036  FFF6         	movff	_inPipes,tblptrl	;volatile
 28799  003D5E  C037  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 28800  003D62  6AF8               	clrf	tblptru,c
 28801  003D64  0E07               	movlw	(high __ramtop+-1)
 28802  003D66  64F7               	cpfsgt	tblptrh,c
 28803  003D68  D003               	bra	i2u597_47
 28804  003D6A  0008               	tblrd		*
 28805  003D6C  50F5               	movf	tablat,w,c
 28806  003D6E  D005               	bra	i2u597_40
 28807  003D70                     i2u597_47:
 28808  003D70  CFF6 FFE9          	movff	tblptrl,fsr0l
 28809  003D74  CFF7 FFEA          	movff	tblptrh,fsr0h
 28810  003D78  50EF               	movf	indf0,w,c
 28811  003D7A                     i2u597_40:
 28812  003D7A  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 28813  003D7C  5001               	movf	??_USBStdGetDscHandler,w,c
 28814  003D7E  6E3A               	movwf	_inPipes+4,c	;volatile
 28815  003D80  6A3B               	clrf	_inPipes+5,c	;volatile
 28816                           
 28817                           ;usb_device.c: 1745: }
 28818  003D82  0012               	return	
 28819  003D84                     i2l8020:
 28820                           
 28821                           ;usb_device.c: 1746: else
 28822                           ;usb_device.c: 1747: {
 28823                           ;usb_device.c: 1748: inPipes[0].info.Val = 0;
 28824  003D84  0E00               	movlw	0
 28825  003D86  6E39               	movwf	_inPipes+3,c	;volatile
 28826                           
 28827                           ;usb_device.c: 1749: }
 28828                           ;usb_device.c: 1750: break;
 28829  003D88  0012               	return	
 28830  003D8A                     i2l8022:
 28831                           
 28832                           ;usb_device.c: 1752: inPipes[0].info.Val = 0;
 28833  003D8A  0E00               	movlw	0
 28834  003D8C  6E39               	movwf	_inPipes+3,c	;volatile
 28835                           
 28836                           ;usb_device.c: 1754: }
 28837                           
 28838                           ;usb_device.c: 1753: break;
 28839  003D8E  0012               	return	
 28840  003D90                     i2l8026:
 28841  003D90  0104               	movlb	4	; () banked
 28842  003D92  5133               	movf	51,w,b	;volatile
 28843                           
 28844                           ; Switch size 1, requested type "space"
 28845                           ; Number of cases is 3, Range of values is 1 to 3
 28846                           ; switch strategies available:
 28847                           ; Name         Instructions Cycles
 28848                           ; simple_byte           10     6 (average)
 28849                           ;	Chosen strategy is simple_byte
 28850  003D94  0A01               	xorlw	1	; case 1
 28851  003D96  B4D8               	btfsc	status,2,c
 28852  003D98  D77F               	goto	i2l8000
 28853  003D9A  0A03               	xorlw	3	; case 2
 28854  003D9C  B4D8               	btfsc	status,2,c
 28855  003D9E  D785               	goto	i2l8004
 28856  003DA0  0A01               	xorlw	1	; case 3
 28857  003DA2  B4D8               	btfsc	status,2,c
 28858  003DA4  D7C7               	goto	i2l8014
 28859  003DA6  D7F1               	goto	i2l8022
 28860  003DA8                     __end_of_USBStdGetDscHandler:
 28861                           	opt stack 0
 28862                           pclatu	equ	0xFFB
 28863                           pclath	equ	0xFFA
 28864                           tblptru	equ	0xFF8
 28865                           tblptrh	equ	0xFF7
 28866                           tblptrl	equ	0xFF6
 28867                           tablat	equ	0xFF5
 28868                           prodh	equ	0xFF4
 28869                           prodl	equ	0xFF3
 28870                           intcon	equ	0xFF2
 28871                           intcon3	equ	0xFF0
 28872                           indf0	equ	0xFEF
 28873                           postinc0	equ	0xFEE
 28874                           fsr0h	equ	0xFEA
 28875                           fsr0l	equ	0xFE9
 28876                           wreg	equ	0xFE8
 28877                           indf1	equ	0xFE7
 28878                           postdec1	equ	0xFE5
 28879                           fsr1h	equ	0xFE2
 28880                           fsr1l	equ	0xFE1
 28881                           indf2	equ	0xFDF
 28882                           postinc2	equ	0xFDE
 28883                           postdec2	equ	0xFDD
 28884                           plusw2	equ	0xFDB
 28885                           fsr2h	equ	0xFDA
 28886                           fsr2l	equ	0xFD9
 28887                           status	equ	0xFD8
 28888                           
 28889 ;; *************** function _USBStdFeatureReqHandler *****************
 28890 ;; Defined at:
 28891 ;;		line 2385 in file "../Includes/Usb/Framework/usb_device.c"
 28892 ;; Parameters:    Size  Location     Type
 28893 ;;		None
 28894 ;; Auto vars:     Size  Location     Type
 28895 ;;  p               2   25[COMRAM] PTR struct __BDT
 28896 ;;		 -> BDT(48), NULL(0), 
 28897 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
 28898 ;;		 -> UEP0(1), 
 28899 ;;  current_ep_d    1   24[COMRAM] struct .
 28900 ;; Return value:  Size  Location     Type
 28901 ;;		None               void
 28902 ;; Registers used:
 28903 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28904 ;; Tracked objects:
 28905 ;;		On entry : 0/0
 28906 ;;		On exit  : 0/0
 28907 ;;		Unchanged: 0/0
 28908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28909 ;;      Params:         0       0       0       0       0       0       0       0       0
 28910 ;;      Locals:         5       0       0       0       0       0       0       0       0
 28911 ;;      Temps:          1       0       0       0       0       0       0       0       0
 28912 ;;      Totals:         6       0       0       0       0       0       0       0       0
 28913 ;;Total ram usage:        6 bytes
 28914 ;; Hardware stack levels used:    1
 28915 ;; Hardware stack levels required when called:    5
 28916 ;; This function calls:
 28917 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28918 ;; This function is called by:
 28919 ;;		_USBCheckStdRequest
 28920 ;; This function uses a non-reentrant model
 28921 ;;
 28922                           
 28923                           	psect	text119
 28924  002B34                     __ptext119:
 28925                           	opt stack 0
 28926  002B34                     _USBStdFeatureReqHandler:
 28927                           	opt stack 11
 28928                           
 28929                           ;usb_device.c: 2387: BDT_ENTRY *p;
 28930                           ;usb_device.c: 2388: EP_STATUS current_ep_data;
 28931                           ;usb_device.c: 2390: unsigned char* pUEP;
 28932                           ;usb_device.c: 2393: if((SetupPkt.bFeature == 1)&&
 28933                           ;usb_device.c: 2394: (SetupPkt.Recipient == (0x00)))
 28934                           
 28935                           ;incstack = 0
 28936  002B34  0104               	movlb	4	; () banked
 28937  002B36  0532               	decf	50,w,b	;volatile
 28938  002B38  A4D8               	btfss	status,2,c
 28939  002B3A  D011               	goto	i2l1940
 28940                           
 28941                           ; BSR set to: 4
 28942  002B3C  0104               	movlb	4	; () banked
 28943  002B3E  5130               	movf	48,w,b	;volatile
 28944  002B40  0B1F               	andlw	31
 28945  002B42  0900               	iorlw	0
 28946  002B44  A4D8               	btfss	status,2,c
 28947  002B46  D00B               	goto	i2l1940
 28948                           
 28949                           ; BSR set to: 4
 28950                           ;usb_device.c: 2395: {
 28951                           ;usb_device.c: 2396: inPipes[0].info.bits.busy = 1;
 28952  002B48  8E39               	bsf	_inPipes+3,7,c	;volatile
 28953                           
 28954                           ; BSR set to: 4
 28955                           ;usb_device.c: 2397: if(SetupPkt.bRequest == 3)
 28956  002B4A  0E03               	movlw	3
 28957  002B4C  0104               	movlb	4	; () banked
 28958  002B4E  1931               	xorwf	49,w,b	;volatile
 28959  002B50  A4D8               	btfss	status,2,c
 28960  002B52  D002               	goto	i2l8066
 28961                           
 28962                           ; BSR set to: 4
 28963                           ;usb_device.c: 2398: RemoteWakeup = 1;
 28964  002B54  0E01               	movlw	1
 28965  002B56  D001               	goto	L27
 28966  002B58                     i2l8066:
 28967                           
 28968                           ;usb_device.c: 2399: else
 28969                           ;usb_device.c: 2400: RemoteWakeup = 0;
 28970  002B58  0E00               	movlw	0
 28971  002B5A                     L27:
 28972  002B5A  0100               	movlb	0	; () banked
 28973  002B5C  6FCE               	movwf	_RemoteWakeup& (0+255),b	;volatile
 28974  002B5E                     i2l1940:
 28975                           
 28976                           ;usb_device.c: 2401: }
 28977                           ;usb_device.c: 2404: if((SetupPkt.bFeature == 0)&&
 28978                           ;usb_device.c: 2405: (SetupPkt.Recipient == (0x02))&&
 28979                           ;usb_device.c: 2406: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 28980                           ;usb_device.c: 2407: (USBDeviceState == CONFIGURED_STATE))
 28981  002B5E  0104               	movlb	4	; () banked
 28982  002B60  5132               	movf	50,w,b	;volatile
 28983  002B62  A4D8               	btfss	status,2,c
 28984  002B64  0012               	return	
 28985                           
 28986                           ; BSR set to: 4
 28987  002B66  0104               	movlb	4	; () banked
 28988  002B68  5130               	movf	48,w,b	;volatile
 28989  002B6A  0B1F               	andlw	31
 28990  002B6C  0A02               	xorlw	2
 28991  002B6E  A4D8               	btfss	status,2,c
 28992  002B70  0012               	return	
 28993                           
 28994                           ; BSR set to: 4
 28995  002B72  0104               	movlb	4	; () banked
 28996  002B74  5134               	movf	52,w,b	;volatile
 28997  002B76  0B0F               	andlw	15
 28998  002B78  0900               	iorlw	0
 28999  002B7A  B4D8               	btfsc	status,2,c
 29000  002B7C  0012               	return	
 29001                           
 29002                           ; BSR set to: 4
 29003  002B7E  0104               	movlb	4	; () banked
 29004  002B80  5134               	movf	52,w,b	;volatile
 29005  002B82  0B0F               	andlw	15
 29006  002B84  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29007  002B86  0E03               	movlw	3
 29008  002B88  6016               	cpfslt	??_USBStdFeatureReqHandler,c
 29009  002B8A  0012               	return	
 29010                           
 29011                           ; BSR set to: 4
 29012  002B8C  0E20               	movlw	32
 29013  002B8E  0100               	movlb	0	; () banked
 29014  002B90  19D2               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 29015  002B92  A4D8               	btfss	status,2,c
 29016  002B94  0012               	return	
 29017                           
 29018                           ; BSR set to: 0
 29019                           ;usb_device.c: 2408: {
 29020                           ;usb_device.c: 2411: inPipes[0].info.bits.busy = 1;
 29021  002B96  8E39               	bsf	_inPipes+3,7,c	;volatile
 29022                           
 29023                           ;usb_device.c: 2414: if(SetupPkt.EPDir == 0)
 29024  002B98  0104               	movlb	4	; () banked
 29025  002B9A  BF34               	btfsc	52,7,b	;volatile
 29026  002B9C  D01B               	goto	i2l8080
 29027                           
 29028                           ; BSR set to: 4
 29029                           ;usb_device.c: 2415: {
 29030                           ;usb_device.c: 2416: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 29031  002B9E  0104               	movlb	4	; () banked
 29032  002BA0  5134               	movf	52,w,b	;volatile
 29033  002BA2  0B0F               	andlw	15
 29034  002BA4  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29035  002BA6  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29036  002BA8  0D02               	mullw	2
 29037  002BAA  0E40               	movlw	low _pBDTEntryOut
 29038  002BAC  24F3               	addwf	prodl,w,c
 29039  002BAE  6ED9               	movwf	fsr2l,c
 29040  002BB0  0E01               	movlw	high _pBDTEntryOut
 29041  002BB2  20F4               	addwfc	prodh,w,c
 29042  002BB4  6EDA               	movwf	fsr2h,c
 29043  002BB6  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 29044  002BBA  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 29045                           
 29046                           ;usb_device.c: 2417: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 29047  002BBE  0104               	movlb	4	; () banked
 29048  002BC0  5134               	movf	52,w,b	;volatile
 29049  002BC2  0B0F               	andlw	15
 29050  002BC4  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29051  002BC6  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29052  002BC8  0D01               	mullw	1
 29053  002BCA  0EBA               	movlw	low _ep_data_out
 29054  002BCC  24F3               	addwf	prodl,w,c
 29055  002BCE  6ED9               	movwf	fsr2l,c
 29056  002BD0  0E00               	movlw	high _ep_data_out
 29057  002BD2  D01A               	goto	L28
 29058  002BD4                     i2l8080:
 29059                           
 29060                           ; BSR set to: 4
 29061                           ;usb_device.c: 2419: else
 29062                           ;usb_device.c: 2420: {
 29063                           ;usb_device.c: 2421: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 29064  002BD4  0104               	movlb	4	; () banked
 29065  002BD6  5134               	movf	52,w,b	;volatile
 29066  002BD8  0B0F               	andlw	15
 29067  002BDA  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29068  002BDC  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29069  002BDE  0D02               	mullw	2
 29070  002BE0  0E3C               	movlw	low _pBDTEntryIn
 29071  002BE2  24F3               	addwf	prodl,w,c
 29072  002BE4  6ED9               	movwf	fsr2l,c
 29073  002BE6  0E00               	movlw	high _pBDTEntryIn
 29074  002BE8  20F4               	addwfc	prodh,w,c
 29075  002BEA  6EDA               	movwf	fsr2h,c
 29076  002BEC  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 29077  002BF0  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 29078                           
 29079                           ;usb_device.c: 2422: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 29080  002BF4  0104               	movlb	4	; () banked
 29081  002BF6  5134               	movf	52,w,b	;volatile
 29082  002BF8  0B0F               	andlw	15
 29083  002BFA  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29084  002BFC  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29085  002BFE  0D01               	mullw	1
 29086  002C00  0EB7               	movlw	low _ep_data_in
 29087  002C02  24F3               	addwf	prodl,w,c
 29088  002C04  6ED9               	movwf	fsr2l,c
 29089  002C06  0E00               	movlw	high _ep_data_in
 29090  002C08                     L28:
 29091  002C08  20F4               	addwfc	prodh,w,c
 29092  002C0A  6EDA               	movwf	fsr2h,c
 29093  002C0C  50DF               	movf	indf2,w,c
 29094  002C0E  6E19               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 29095                           
 29096                           ; BSR set to: 4
 29097                           ;usb_device.c: 2423: }
 29098                           ;usb_device.c: 2428: if(current_ep_data.bits.ping_pong_state == 0)
 29099                           
 29100                           ; BSR set to: 4
 29101  002C10  B019               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 29102  002C12  D002               	goto	i2l8086
 29103                           
 29104                           ; BSR set to: 4
 29105                           ;usb_device.c: 2429: {
 29106                           ;usb_device.c: 2430: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 29107  002C14  941A               	bcf	USBStdFeatureReqHandler@p,2,c
 29108                           
 29109                           ;usb_device.c: 2431: }
 29110  002C16  D001               	goto	i2l8088
 29111  002C18                     i2l8086:
 29112                           
 29113                           ; BSR set to: 4
 29114                           ;usb_device.c: 2432: else
 29115                           ;usb_device.c: 2433: {
 29116                           ;usb_device.c: 2434: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 29117  002C18  841A               	bsf	USBStdFeatureReqHandler@p,2,c
 29118  002C1A                     i2l8088:
 29119                           
 29120                           ; BSR set to: 4
 29121                           ;usb_device.c: 2435: }
 29122                           ;usb_device.c: 2439: if(SetupPkt.EPDir == 0)
 29123  002C1A  0104               	movlb	4	; () banked
 29124  002C1C  BF34               	btfsc	52,7,b	;volatile
 29125  002C1E  D00B               	goto	i2l8092
 29126                           
 29127                           ; BSR set to: 4
 29128                           ;usb_device.c: 2440: {
 29129                           ;usb_device.c: 2441: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 29130  002C20  0104               	movlb	4	; () banked
 29131  002C22  5134               	movf	52,w,b	;volatile
 29132  002C24  0B0F               	andlw	15
 29133  002C26  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29134  002C28  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29135  002C2A  0D02               	mullw	2
 29136  002C2C  0E40               	movlw	low _pBDTEntryOut
 29137  002C2E  24F3               	addwf	prodl,w,c
 29138  002C30  6ED9               	movwf	fsr2l,c
 29139  002C32  0E01               	movlw	high _pBDTEntryOut
 29140  002C34  D00A               	goto	L29
 29141  002C36                     i2l8092:
 29142                           
 29143                           ; BSR set to: 4
 29144                           ;usb_device.c: 2443: else
 29145                           ;usb_device.c: 2444: {
 29146                           ;usb_device.c: 2445: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 29147  002C36  0104               	movlb	4	; () banked
 29148  002C38  5134               	movf	52,w,b	;volatile
 29149  002C3A  0B0F               	andlw	15
 29150  002C3C  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29151  002C3E  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29152  002C40  0D02               	mullw	2
 29153  002C42  0E3C               	movlw	low _pBDTEntryIn
 29154  002C44  24F3               	addwf	prodl,w,c
 29155  002C46  6ED9               	movwf	fsr2l,c
 29156  002C48  0E00               	movlw	high _pBDTEntryIn
 29157  002C4A                     L29:
 29158  002C4A  20F4               	addwfc	prodh,w,c
 29159  002C4C  6EDA               	movwf	fsr2h,c
 29160  002C4E  C01A  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 29161  002C52  C01B  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 29162                           
 29163                           ; BSR set to: 4
 29164                           ;usb_device.c: 2446: }
 29165                           ;usb_device.c: 2449: if(SetupPkt.bRequest == 3)
 29166                           
 29167                           ; BSR set to: 4
 29168  002C56  0E03               	movlw	3
 29169  002C58  0104               	movlb	4	; () banked
 29170  002C5A  1931               	xorwf	49,w,b	;volatile
 29171  002C5C  A4D8               	btfss	status,2,c
 29172  002C5E  D02F               	goto	i2l8108
 29173                           
 29174                           ; BSR set to: 4
 29175                           ;usb_device.c: 2450: {
 29176                           ;usb_device.c: 2451: if(p->STAT.UOWN == 1)
 29177  002C60  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29178  002C64  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29179  002C68  AEDF               	btfss	indf2,7,c
 29180  002C6A  D01C               	goto	i2l8104
 29181                           
 29182                           ; BSR set to: 4
 29183                           ;usb_device.c: 2452: {
 29184                           ;usb_device.c: 2455: if(SetupPkt.EPDir == 0)
 29185  002C6C  0104               	movlb	4	; () banked
 29186  002C6E  BF34               	btfsc	52,7,b	;volatile
 29187  002C70  D00B               	goto	i2l8102
 29188                           
 29189                           ; BSR set to: 4
 29190                           ;usb_device.c: 2456: {
 29191                           ;usb_device.c: 2457: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 29192  002C72  0104               	movlb	4	; () banked
 29193  002C74  5134               	movf	52,w,b	;volatile
 29194  002C76  0B0F               	andlw	15
 29195  002C78  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29196  002C7A  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29197  002C7C  0D01               	mullw	1
 29198  002C7E  0EBA               	movlw	low _ep_data_out
 29199  002C80  24F3               	addwf	prodl,w,c
 29200  002C82  6ED9               	movwf	fsr2l,c
 29201  002C84  0E00               	movlw	high _ep_data_out
 29202  002C86  D00A               	goto	L30
 29203  002C88                     i2l8102:
 29204                           
 29205                           ;usb_device.c: 2459: else
 29206                           ;usb_device.c: 2460: {
 29207                           ;usb_device.c: 2461: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 29208  002C88  0104               	movlb	4	; () banked
 29209  002C8A  5134               	movf	52,w,b	;volatile
 29210  002C8C  0B0F               	andlw	15
 29211  002C8E  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29212  002C90  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29213  002C92  0D01               	mullw	1
 29214  002C94  0EB7               	movlw	low _ep_data_in
 29215  002C96  24F3               	addwf	prodl,w,c
 29216  002C98  6ED9               	movwf	fsr2l,c
 29217  002C9A  0E00               	movlw	high _ep_data_in
 29218  002C9C                     L30:
 29219  002C9C  20F4               	addwfc	prodh,w,c
 29220  002C9E  6EDA               	movwf	fsr2h,c
 29221  002CA0  0100               	movlb	0	; () banked
 29222  002CA2  82DF               	bsf	indf2,1,c
 29223  002CA4                     i2l8104:
 29224                           
 29225                           ;usb_device.c: 2462: }
 29226                           ;usb_device.c: 2463: }
 29227                           ;usb_device.c: 2466: p->STAT.Val |= 0x04;
 29228  002CA4  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29229  002CA8  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29230  002CAC  0E00               	movlw	0
 29231  002CAE  84DB               	bsf	plusw2,2,c
 29232                           
 29233                           ;usb_device.c: 2467: p->STAT.Val |= 0x80;
 29234  002CB0  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29235  002CB4  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29236  002CB8  0E00               	movlw	0
 29237  002CBA  8EDB               	bsf	plusw2,7,c
 29238                           
 29239                           ;usb_device.c: 2468: }
 29240  002CBC  0012               	return	
 29241  002CBE                     i2l8108:
 29242                           
 29243                           ;usb_device.c: 2469: else
 29244                           ;usb_device.c: 2470: {
 29245                           ;usb_device.c: 2473: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 29246  002CBE  0E04               	movlw	4
 29247  002CC0  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 29248                           
 29249                           ;usb_device.c: 2475: if(p->STAT.UOWN == 1)
 29250  002CC2  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29251  002CC6  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29252  002CCA  AEDF               	btfss	indf2,7,c
 29253  002CCC  D01B               	goto	i2l8118
 29254                           
 29255                           ;usb_device.c: 2476: {
 29256                           ;usb_device.c: 2479: p->STAT.Val &= (~0x80);
 29257  002CCE  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29258  002CD2  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29259  002CD6  0E7F               	movlw	127
 29260  002CD8  16DF               	andwf	indf2,f,c
 29261                           
 29262                           ;usb_device.c: 2480: p->STAT.Val |= 0x40;
 29263  002CDA  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29264  002CDE  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29265  002CE2  0E00               	movlw	0
 29266  002CE4  8CDB               	bsf	plusw2,6,c
 29267                           
 29268                           ;usb_device.c: 2481: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 29269  002CE6  0E00               	movlw	0
 29270  002CE8  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 29271  002CEA  0E05               	movlw	5
 29272  002CEC  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 29273  002CEE  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 29274  002CF2  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 29275  002CF6  0E00               	movlw	0
 29276  002CF8  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 29277  002CFA  0E02               	movlw	2
 29278  002CFC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 29279  002CFE  EC41  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 29280                           
 29281                           ;usb_device.c: 2482: }
 29282  002D02  D006               	goto	i2l8120
 29283  002D04                     i2l8118:
 29284                           
 29285                           ;usb_device.c: 2483: else
 29286                           ;usb_device.c: 2484: {
 29287                           ;usb_device.c: 2486: p->STAT.Val |= 0x40;
 29288  002D04  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29289  002D08  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29290  002D0C  0E00               	movlw	0
 29291  002D0E  8CDB               	bsf	plusw2,6,c
 29292  002D10                     i2l8120:
 29293                           
 29294                           ;usb_device.c: 2487: }
 29295                           ;usb_device.c: 2491: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 29296  002D10  0E04               	movlw	4
 29297  002D12  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 29298                           
 29299                           ;usb_device.c: 2497: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 29300  002D14  B219               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 29301  002D16  D006               	goto	i2l1959
 29302  002D18  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29303  002D1C  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29304  002D20  AEDF               	btfss	indf2,7,c
 29305  002D22  D031               	goto	i2l8134
 29306  002D24                     i2l1959:
 29307                           
 29308                           ;usb_device.c: 2498: {
 29309                           ;usb_device.c: 2499: if(SetupPkt.EPDir == 0)
 29310  002D24  0104               	movlb	4	; () banked
 29311  002D26  BF34               	btfsc	52,7,b	;volatile
 29312  002D28  D00B               	goto	i2l8128
 29313                           
 29314                           ; BSR set to: 4
 29315                           ;usb_device.c: 2500: {
 29316                           ;usb_device.c: 2501: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 29317  002D2A  0104               	movlb	4	; () banked
 29318  002D2C  5134               	movf	52,w,b	;volatile
 29319  002D2E  0B0F               	andlw	15
 29320  002D30  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29321  002D32  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29322  002D34  0D01               	mullw	1
 29323  002D36  0EBA               	movlw	low _ep_data_out
 29324  002D38  24F3               	addwf	prodl,w,c
 29325  002D3A  6ED9               	movwf	fsr2l,c
 29326  002D3C  0E00               	movlw	high _ep_data_out
 29327  002D3E  D00A               	goto	L31
 29328  002D40                     i2l8128:
 29329                           
 29330                           ;usb_device.c: 2503: else
 29331                           ;usb_device.c: 2504: {
 29332                           ;usb_device.c: 2505: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 29333  002D40  0104               	movlb	4	; () banked
 29334  002D42  5134               	movf	52,w,b	;volatile
 29335  002D44  0B0F               	andlw	15
 29336  002D46  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29337  002D48  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29338  002D4A  0D01               	mullw	1
 29339  002D4C  0EB7               	movlw	low _ep_data_in
 29340  002D4E  24F3               	addwf	prodl,w,c
 29341  002D50  6ED9               	movwf	fsr2l,c
 29342  002D52  0E00               	movlw	high _ep_data_in
 29343  002D54                     L31:
 29344  002D54  20F4               	addwfc	prodh,w,c
 29345  002D56  6EDA               	movwf	fsr2h,c
 29346  002D58  0100               	movlb	0	; () banked
 29347  002D5A  92DF               	bcf	indf2,1,c
 29348                           
 29349                           ; BSR set to: 0
 29350                           ;usb_device.c: 2506: }
 29351                           ;usb_device.c: 2508: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 29352                           
 29353                           ; BSR set to: 0
 29354  002D5C  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29355  002D60  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29356  002D64  0E3B               	movlw	59
 29357  002D66  16DF               	andwf	indf2,f,c
 29358                           
 29359                           ; BSR set to: 0
 29360                           ;usb_device.c: 2511: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 29361  002D68  0E00               	movlw	0
 29362  002D6A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 29363  002D6C  0E05               	movlw	5
 29364  002D6E  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 29365  002D70  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 29366  002D74  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 29367  002D78  0E00               	movlw	0
 29368  002D7A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 29369  002D7C  0E02               	movlw	2
 29370  002D7E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 29371  002D80  EC41  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 29372                           
 29373                           ;usb_device.c: 2512: }
 29374  002D84  D006               	goto	i2l8136
 29375  002D86                     i2l8134:
 29376                           
 29377                           ;usb_device.c: 2513: else
 29378                           ;usb_device.c: 2514: {
 29379                           ;usb_device.c: 2516: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 29380  002D86  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29381  002D8A  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29382  002D8E  0E3B               	movlw	59
 29383  002D90  16DF               	andwf	indf2,f,c
 29384  002D92                     i2l8136:
 29385                           
 29386                           ;usb_device.c: 2517: }
 29387                           ;usb_device.c: 2519: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 29388  002D92  0104               	movlb	4	; () banked
 29389  002D94  5134               	movf	52,w,b	;volatile
 29390  002D96  0B0F               	andlw	15
 29391  002D98  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29392  002D9A  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29393  002D9C  0D01               	mullw	1
 29394  002D9E  0E6A               	movlw	106
 29395  002DA0  24F3               	addwf	prodl,w,c
 29396  002DA2  6E17               	movwf	USBStdFeatureReqHandler@pUEP,c
 29397  002DA4  0E0F               	movlw	15
 29398  002DA6  20F4               	addwfc	prodh,w,c
 29399  002DA8  6E18               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 29400                           
 29401                           ; BSR set to: 4
 29402                           ;usb_device.c: 2522: *pUEP &= ~0x0001;
 29403  002DAA  C017  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 29404  002DAE  C018  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 29405  002DB2  0EFE               	movlw	254
 29406  002DB4  16DF               	andwf	indf2,f,c
 29407                           
 29408                           ; BSR set to: 4
 29409  002DB6  0012               	return	
 29410  002DB8                     __end_of_USBStdFeatureReqHandler:
 29411                           	opt stack 0
 29412                           pclatu	equ	0xFFB
 29413                           pclath	equ	0xFFA
 29414                           tblptru	equ	0xFF8
 29415                           tblptrh	equ	0xFF7
 29416                           tblptrl	equ	0xFF6
 29417                           tablat	equ	0xFF5
 29418                           prodh	equ	0xFF4
 29419                           prodl	equ	0xFF3
 29420                           intcon	equ	0xFF2
 29421                           intcon3	equ	0xFF0
 29422                           indf0	equ	0xFEF
 29423                           postinc0	equ	0xFEE
 29424                           fsr0h	equ	0xFEA
 29425                           fsr0l	equ	0xFE9
 29426                           wreg	equ	0xFE8
 29427                           indf1	equ	0xFE7
 29428                           postdec1	equ	0xFE5
 29429                           fsr1h	equ	0xFE2
 29430                           fsr1l	equ	0xFE1
 29431                           indf2	equ	0xFDF
 29432                           postinc2	equ	0xFDE
 29433                           postdec2	equ	0xFDD
 29434                           plusw2	equ	0xFDB
 29435                           fsr2h	equ	0xFDA
 29436                           fsr2l	equ	0xFD9
 29437                           status	equ	0xFD8
 29438                           
 29439 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 29440 ;; Defined at:
 29441 ;;		line 308 in file "../Includes/Board/USBapp.c"
 29442 ;; Parameters:    Size  Location     Type
 29443 ;;  event           2   13[COMRAM] enum E6902
 29444 ;;  pdata           2   15[COMRAM] PTR void 
 29445 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
 29446 ;;  size            2   17[COMRAM] unsigned int 
 29447 ;; Auto vars:     Size  Location     Type
 29448 ;;		None
 29449 ;; Return value:  Size  Location     Type
 29450 ;;                  1    wreg      unsigned char 
 29451 ;; Registers used:
 29452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29453 ;; Tracked objects:
 29454 ;;		On entry : 0/0
 29455 ;;		On exit  : 0/0
 29456 ;;		Unchanged: 0/0
 29457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29458 ;;      Params:         6       0       0       0       0       0       0       0       0
 29459 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29460 ;;      Temps:          2       0       0       0       0       0       0       0       0
 29461 ;;      Totals:         8       0       0       0       0       0       0       0       0
 29462 ;;Total ram usage:        8 bytes
 29463 ;; Hardware stack levels used:    1
 29464 ;; Hardware stack levels required when called:    4
 29465 ;; This function calls:
 29466 ;;		_USBCheckCDCRequest
 29467 ;;		_USBapp_CdcEmulatorInitialize
 29468 ;; This function is called by:
 29469 ;;		_USBDeviceTasks
 29470 ;;		_USBStdSetCfgHandler
 29471 ;;		_USBSuspend
 29472 ;;		_USBWakeFromSuspend
 29473 ;;		_USBCtrlTrfSetupHandler
 29474 ;;		_USBCheckStdRequest
 29475 ;;		_USBStdFeatureReqHandler
 29476 ;; This function uses a non-reentrant model
 29477 ;;
 29478                           
 29479                           	psect	text120
 29480  006082                     __ptext120:
 29481                           	opt stack 0
 29482  006082                     _USER_USB_CALLBACK_EVENT_HANDLER:
 29483                           	opt stack 15
 29484                           
 29485                           ;USBapp.c: 310: switch( (int) event )
 29486                           
 29487                           ;incstack = 0
 29488  006082  D006               	goto	i2l7678
 29489  006084                     i2l7672:
 29490                           
 29491                           ;USBapp.c: 334: USBapp_CdcEmulatorInitialize();
 29492  006084  EC9C  F030         	call	_USBapp_CdcEmulatorInitialize	;wreg free
 29493                           
 29494                           ;USBapp.c: 338: break;
 29495                           
 29496                           ;USBapp.c: 337: case EVENT_SET_DESCRIPTOR:
 29497                           
 29498                           ;USBapp.c: 335: break;
 29499  006088  0012               	return	
 29500  00608A                     i2l7674:
 29501                           
 29502                           ;USBapp.c: 343: USBCheckCDCRequest();
 29503  00608A  EC9E  F029         	call	_USBCheckCDCRequest	;wreg free
 29504                           
 29505                           ;USBapp.c: 354: }
 29506                           
 29507                           ;USBapp.c: 353: break;
 29508                           
 29509                           ;USBapp.c: 352: default:
 29510                           
 29511                           ;USBapp.c: 350: break;
 29512                           
 29513                           ;USBapp.c: 349: case EVENT_TRANSFER_TERMINATED:
 29514                           
 29515                           ;USBapp.c: 347: break;
 29516                           
 29517                           ;USBapp.c: 346: case EVENT_BUS_ERROR:
 29518                           
 29519                           ;USBapp.c: 344: break;
 29520  00608E  0012               	return	
 29521  006090                     i2l7678:
 29522  006090  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 29523  006094  C00F  F015         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 29524                           
 29525                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 29526                           ; Switch size 1, requested type "space"
 29527                           ; Number of cases is 2, Range of values is 0 to 127
 29528                           ; switch strategies available:
 29529                           ; Name         Instructions Cycles
 29530                           ; simple_byte            7     4 (average)
 29531                           ;	Chosen strategy is simple_byte
 29532  006098  5015               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 29533  00609A  0A00               	xorlw	0	; case 0
 29534  00609C  B4D8               	btfsc	status,2,c
 29535  00609E  D004               	goto	i2l14992
 29536  0060A0  0A7F               	xorlw	127	; case 127
 29537  0060A2  A4D8               	btfss	status,2,c
 29538  0060A4  0012               	return	
 29539  0060A6  D018               	goto	i2l14994
 29540  0060A8                     i2l14992:
 29541                           
 29542                           ; Switch size 1, requested type "space"
 29543                           ; Number of cases is 8, Range of values is 1 to 117
 29544                           ; switch strategies available:
 29545                           ; Name         Instructions Cycles
 29546                           ; simple_byte           25    13 (average)
 29547                           ;	Chosen strategy is simple_byte
 29548  0060A8  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 29549  0060AA  0A01               	xorlw	1	; case 1
 29550  0060AC  B4D8               	btfsc	status,2,c
 29551  0060AE  D7EA               	goto	i2l7672
 29552  0060B0  0A03               	xorlw	3	; case 2
 29553  0060B2  B4D8               	btfsc	status,2,c
 29554  0060B4  0012               	return	
 29555  0060B6  0A01               	xorlw	1	; case 3
 29556  0060B8  B4D8               	btfsc	status,2,c
 29557  0060BA  D7E7               	goto	i2l7674
 29558  0060BC  0A06               	xorlw	6	; case 5
 29559  0060BE  B4D8               	btfsc	status,2,c
 29560  0060C0  0012               	return	
 29561  0060C2  0A77               	xorlw	119	; case 114
 29562  0060C4  B4D8               	btfsc	status,2,c
 29563  0060C6  0012               	return	
 29564  0060C8  0A01               	xorlw	1	; case 115
 29565  0060CA  B4D8               	btfsc	status,2,c
 29566  0060CC  0012               	return	
 29567  0060CE  0A07               	xorlw	7	; case 116
 29568  0060D0  B4D8               	btfsc	status,2,c
 29569  0060D2  0012               	return	
 29570  0060D4  0A01               	xorlw	1	; case 117
 29571  0060D6  0012               	return	
 29572  0060D8                     i2l14994:
 29573                           
 29574                           ; Switch size 1, requested type "space"
 29575                           ; Number of cases is 1, Range of values is 255 to 255
 29576                           ; switch strategies available:
 29577                           ; Name         Instructions Cycles
 29578                           ; simple_byte            4     3 (average)
 29579                           ;	Chosen strategy is simple_byte
 29580  0060D8  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 29581  0060DA  0AFF               	xorlw	255	; case 255
 29582  0060DC  0012               	return	
 29583  0060DE                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 29584                           	opt stack 0
 29585                           pclatu	equ	0xFFB
 29586                           pclath	equ	0xFFA
 29587                           tblptru	equ	0xFF8
 29588                           tblptrh	equ	0xFF7
 29589                           tblptrl	equ	0xFF6
 29590                           tablat	equ	0xFF5
 29591                           prodh	equ	0xFF4
 29592                           prodl	equ	0xFF3
 29593                           intcon	equ	0xFF2
 29594                           intcon3	equ	0xFF0
 29595                           indf0	equ	0xFEF
 29596                           postinc0	equ	0xFEE
 29597                           fsr0h	equ	0xFEA
 29598                           fsr0l	equ	0xFE9
 29599                           wreg	equ	0xFE8
 29600                           indf1	equ	0xFE7
 29601                           postdec1	equ	0xFE5
 29602                           fsr1h	equ	0xFE2
 29603                           fsr1l	equ	0xFE1
 29604                           indf2	equ	0xFDF
 29605                           postinc2	equ	0xFDE
 29606                           postdec2	equ	0xFDD
 29607                           plusw2	equ	0xFDB
 29608                           fsr2h	equ	0xFDA
 29609                           fsr2l	equ	0xFD9
 29610                           status	equ	0xFD8
 29611                           
 29612 ;; *************** function _USBapp_CdcEmulatorInitialize *****************
 29613 ;; Defined at:
 29614 ;;		line 144 in file "../Includes/Board/USBapp.c"
 29615 ;; Parameters:    Size  Location     Type
 29616 ;;		None
 29617 ;; Auto vars:     Size  Location     Type
 29618 ;;  i               1   12[COMRAM] unsigned char 
 29619 ;; Return value:  Size  Location     Type
 29620 ;;		None               void
 29621 ;; Registers used:
 29622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29623 ;; Tracked objects:
 29624 ;;		On entry : 0/0
 29625 ;;		On exit  : 0/0
 29626 ;;		Unchanged: 0/0
 29627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29628 ;;      Params:         0       0       0       0       0       0       0       0       0
 29629 ;;      Locals:         1       0       0       0       0       0       0       0       0
 29630 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29631 ;;      Totals:         1       0       0       0       0       0       0       0       0
 29632 ;;Total ram usage:        1 bytes
 29633 ;; Hardware stack levels used:    1
 29634 ;; Hardware stack levels required when called:    3
 29635 ;; This function calls:
 29636 ;;		_CDCInitEP
 29637 ;;		i2_EUSART_Initialize
 29638 ;; This function is called by:
 29639 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 29640 ;; This function uses a non-reentrant model
 29641 ;;
 29642                           
 29643                           	psect	text121
 29644  006138                     __ptext121:
 29645                           	opt stack 0
 29646  006138                     _USBapp_CdcEmulatorInitialize:
 29647                           	opt stack 15
 29648                           
 29649                           ;USBapp.c: 147: CDCInitEP();
 29650                           
 29651                           ;incstack = 0
 29652  006138  EC12  F02F         	call	_CDCInitEP	;wreg free
 29653                           
 29654                           ;USBapp.c: 148: line_coding.bCharFormat = 0;
 29655  00613C  0E00               	movlw	0
 29656  00613E  0101               	movlb	1	; () banked
 29657  006140  6FDC               	movwf	(_line_coding+4)& (0+255),b
 29658                           
 29659                           ; BSR set to: 1
 29660                           ;USBapp.c: 149: line_coding.bDataBits = 8;
 29661  006142  0E08               	movlw	8
 29662  006144  0101               	movlb	1	; () banked
 29663  006146  6FDE               	movwf	(_line_coding+6)& (0+255),b
 29664                           
 29665                           ; BSR set to: 1
 29666                           ;USBapp.c: 150: line_coding.bParityType = 0;
 29667  006148  0E00               	movlw	0
 29668  00614A  0101               	movlb	1	; () banked
 29669  00614C  6FDD               	movwf	(_line_coding+5)& (0+255),b
 29670                           
 29671                           ; BSR set to: 1
 29672                           ;USBapp.c: 151: line_coding.dwDTERate = 19200;
 29673  00614E  0E00               	movlw	0
 29674  006150  0101               	movlb	1	; () banked
 29675  006152  6FD8               	movwf	_line_coding& (0+255),b
 29676  006154  0E4B               	movlw	75
 29677  006156  6FD9               	movwf	(_line_coding+1)& (0+255),b
 29678  006158  0E00               	movlw	0
 29679  00615A  6FDA               	movwf	(_line_coding+2)& (0+255),b
 29680  00615C  0E00               	movlw	0
 29681  00615E  6FDB               	movwf	(_line_coding+3)& (0+255),b
 29682                           
 29683                           ; BSR set to: 1
 29684                           ;USBapp.c: 152: EUSART_Initialize();
 29685  006160  EC44  F032         	call	i2_EUSART_Initialize	;wreg free
 29686                           
 29687                           ;USBapp.c: 154: for (unsigned char i = 0; i <sizeof (USB_Buffer); i++)
 29688  006164  0E00               	movlw	0
 29689  006166  6E0D               	movwf	USBapp_CdcEmulatorInitialize@i,c
 29690  006168                     i2l7596:
 29691  006168  0E3F               	movlw	63
 29692  00616A  640D               	cpfsgt	USBapp_CdcEmulatorInitialize@i,c
 29693  00616C  D001               	goto	i2l7600
 29694  00616E  D00C               	goto	i2l7606
 29695  006170                     i2l7600:
 29696                           
 29697                           ;USBapp.c: 155: {
 29698                           ;USBapp.c: 156: USB_Buffer[i] = 0;
 29699  006170  500D               	movf	USBapp_CdcEmulatorInitialize@i,w,c
 29700  006172  0D01               	mullw	1
 29701  006174  0E80               	movlw	low _USB_Buffer
 29702  006176  24F3               	addwf	prodl,w,c
 29703  006178  6ED9               	movwf	fsr2l,c
 29704  00617A  0E02               	movlw	high _USB_Buffer
 29705  00617C  20F4               	addwfc	prodh,w,c
 29706  00617E  6EDA               	movwf	fsr2h,c
 29707  006180  0E00               	movlw	0
 29708  006182  6EDF               	movwf	indf2,c
 29709  006184  2A0D               	incf	USBapp_CdcEmulatorInitialize@i,f,c
 29710  006186  D7F0               	goto	i2l7596
 29711  006188                     i2l7606:
 29712                           
 29713                           ;USBapp.c: 157: }
 29714                           ;USBapp.c: 158: NextUSBOut = 0;
 29715  006188  0E00               	movlw	0
 29716  00618A  6E4B               	movwf	_NextUSBOut,c
 29717                           
 29718                           ;USBapp.c: 159: LastRS232Out = 0;
 29719  00618C  0E00               	movlw	0
 29720  00618E  6E4A               	movwf	_LastRS232Out,c
 29721  006190  0012               	return		;funcret
 29722  006192                     __end_of_USBapp_CdcEmulatorInitialize:
 29723                           	opt stack 0
 29724                           pclatu	equ	0xFFB
 29725                           pclath	equ	0xFFA
 29726                           tblptru	equ	0xFF8
 29727                           tblptrh	equ	0xFF7
 29728                           tblptrl	equ	0xFF6
 29729                           tablat	equ	0xFF5
 29730                           prodh	equ	0xFF4
 29731                           prodl	equ	0xFF3
 29732                           intcon	equ	0xFF2
 29733                           intcon3	equ	0xFF0
 29734                           indf0	equ	0xFEF
 29735                           postinc0	equ	0xFEE
 29736                           fsr0h	equ	0xFEA
 29737                           fsr0l	equ	0xFE9
 29738                           wreg	equ	0xFE8
 29739                           indf1	equ	0xFE7
 29740                           postdec1	equ	0xFE5
 29741                           fsr1h	equ	0xFE2
 29742                           fsr1l	equ	0xFE1
 29743                           indf2	equ	0xFDF
 29744                           postinc2	equ	0xFDE
 29745                           postdec2	equ	0xFDD
 29746                           plusw2	equ	0xFDB
 29747                           fsr2h	equ	0xFDA
 29748                           fsr2l	equ	0xFD9
 29749                           status	equ	0xFD8
 29750                           
 29751 ;; *************** function _CDCInitEP *****************
 29752 ;; Defined at:
 29753 ;;		line 296 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 29754 ;; Parameters:    Size  Location     Type
 29755 ;;		None
 29756 ;; Auto vars:     Size  Location     Type
 29757 ;;		None
 29758 ;; Return value:  Size  Location     Type
 29759 ;;		None               void
 29760 ;; Registers used:
 29761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29762 ;; Tracked objects:
 29763 ;;		On entry : 0/0
 29764 ;;		On exit  : 0/0
 29765 ;;		Unchanged: 0/0
 29766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29767 ;;      Params:         0       0       0       0       0       0       0       0       0
 29768 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29769 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29770 ;;      Totals:         0       0       0       0       0       0       0       0       0
 29771 ;;Total ram usage:        0 bytes
 29772 ;; Hardware stack levels used:    1
 29773 ;; Hardware stack levels required when called:    2
 29774 ;; This function calls:
 29775 ;;		_USBEnableEndpoint
 29776 ;;		i2_USBTransferOnePacket
 29777 ;; This function is called by:
 29778 ;;		_USBapp_CdcEmulatorInitialize
 29779 ;; This function uses a non-reentrant model
 29780 ;;
 29781                           
 29782                           	psect	text122
 29783  005E24                     __ptext122:
 29784                           	opt stack 0
 29785  005E24                     _CDCInitEP:
 29786                           	opt stack 15
 29787                           
 29788                           ;usb_device_cdc.c: 299: line_coding.dwDTERate = 19200;
 29789                           
 29790                           ;incstack = 0
 29791  005E24  0E00               	movlw	0
 29792  005E26  0101               	movlb	1	; () banked
 29793  005E28  6FD8               	movwf	_line_coding& (0+255),b
 29794  005E2A  0E4B               	movlw	75
 29795  005E2C  6FD9               	movwf	(_line_coding+1)& (0+255),b
 29796  005E2E  0E00               	movlw	0
 29797  005E30  6FDA               	movwf	(_line_coding+2)& (0+255),b
 29798  005E32  0E00               	movlw	0
 29799  005E34  6FDB               	movwf	(_line_coding+3)& (0+255),b
 29800                           
 29801                           ;usb_device_cdc.c: 300: line_coding.bCharFormat = 0x00;
 29802  005E36  0E00               	movlw	0
 29803  005E38  0101               	movlb	1	; () banked
 29804  005E3A  6FDC               	movwf	(_line_coding+4)& (0+255),b
 29805                           
 29806                           ;usb_device_cdc.c: 301: line_coding.bParityType = 0x00;
 29807  005E3C  0E00               	movlw	0
 29808  005E3E  0101               	movlb	1	; () banked
 29809  005E40  6FDD               	movwf	(_line_coding+5)& (0+255),b
 29810                           
 29811                           ;usb_device_cdc.c: 302: line_coding.bDataBits = 0x08;
 29812  005E42  0E08               	movlw	8
 29813  005E44  0101               	movlb	1	; () banked
 29814  005E46  6FDE               	movwf	(_line_coding+6)& (0+255),b
 29815                           
 29816                           ;usb_device_cdc.c: 304: cdc_rx_len = 0;
 29817  005E48  0E00               	movlw	0
 29818  005E4A  0100               	movlb	0	; () banked
 29819  005E4C  6FD9               	movwf	_cdc_rx_len& (0+255),b
 29820                           
 29821                           ; BSR set to: 0
 29822                           ;usb_device_cdc.c: 317: USBEnableEndpoint(1,0x02|0x10|0x08);
 29823  005E4E  0E1A               	movlw	26
 29824  005E50  6E09               	movwf	USBEnableEndpoint@options,c
 29825  005E52  0E01               	movlw	1
 29826  005E54  EC81  F032         	call	_USBEnableEndpoint
 29827                           
 29828                           ;usb_device_cdc.c: 318: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 29829  005E58  0E1E               	movlw	30
 29830  005E5A  6E09               	movwf	USBEnableEndpoint@options,c
 29831  005E5C  0E02               	movlw	2
 29832  005E5E  EC81  F032         	call	_USBEnableEndpoint
 29833                           
 29834                           ;usb_device_cdc.c: 320: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 29835  005E62  0E00               	movlw	0
 29836  005E64  6E01               	movwf	i2USBTransferOnePacket@dir,c
 29837  005E66  0E40               	movlw	64
 29838  005E68  6E02               	movwf	i2USBTransferOnePacket@data,c
 29839  005E6A  0E05               	movlw	5
 29840  005E6C  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 29841  005E6E  0E40               	movlw	64
 29842  005E70  6E04               	movwf	i2USBTransferOnePacket@len,c
 29843  005E72  0E02               	movlw	2
 29844  005E74  EC3C  F028         	call	i2_USBTransferOnePacket
 29845  005E78  C001  F0BF         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 29846  005E7C  C002  F0C0         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 29847                           
 29848                           ;usb_device_cdc.c: 321: CDCDataInHandle = (0);
 29849  005E80  0E00               	movlw	0
 29850  005E82  0100               	movlb	0	; () banked
 29851  005E84  6FBD               	movwf	_CDCDataInHandle& (0+255),b
 29852  005E86  0E00               	movlw	0
 29853  005E88  0100               	movlb	0	; () banked
 29854  005E8A  6FBE               	movwf	(_CDCDataInHandle+1)& (0+255),b
 29855                           
 29856                           ; BSR set to: 0
 29857                           ;usb_device_cdc.c: 326: cdc_trf_state = 0;
 29858  005E8C  0E00               	movlw	0
 29859  005E8E  6E50               	movwf	_cdc_trf_state,c
 29860                           
 29861                           ; BSR set to: 0
 29862  005E90  0012               	return		;funcret
 29863  005E92                     __end_of_CDCInitEP:
 29864                           	opt stack 0
 29865                           pclatu	equ	0xFFB
 29866                           pclath	equ	0xFFA
 29867                           tblptru	equ	0xFF8
 29868                           tblptrh	equ	0xFF7
 29869                           tblptrl	equ	0xFF6
 29870                           tablat	equ	0xFF5
 29871                           prodh	equ	0xFF4
 29872                           prodl	equ	0xFF3
 29873                           intcon	equ	0xFF2
 29874                           intcon3	equ	0xFF0
 29875                           indf0	equ	0xFEF
 29876                           postinc0	equ	0xFEE
 29877                           fsr0h	equ	0xFEA
 29878                           fsr0l	equ	0xFE9
 29879                           wreg	equ	0xFE8
 29880                           indf1	equ	0xFE7
 29881                           postdec1	equ	0xFE5
 29882                           fsr1h	equ	0xFE2
 29883                           fsr1l	equ	0xFE1
 29884                           indf2	equ	0xFDF
 29885                           postinc2	equ	0xFDE
 29886                           postdec2	equ	0xFDD
 29887                           plusw2	equ	0xFDB
 29888                           fsr2h	equ	0xFDA
 29889                           fsr2l	equ	0xFD9
 29890                           status	equ	0xFD8
 29891                           
 29892 ;; *************** function i2_USBTransferOnePacket *****************
 29893 ;; Defined at:
 29894 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 29895 ;; Parameters:    Size  Location     Type
 29896 ;;  ep              1    wreg     unsigned char 
 29897 ;;  dir             1    0[COMRAM] unsigned char 
 29898 ;;  data            2    1[COMRAM] PTR unsigned char 
 29899 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 29900 ;;  len             1    3[COMRAM] unsigned char 
 29901 ;; Auto vars:     Size  Location     Type
 29902 ;;  ep              1    4[COMRAM] unsigned char 
 29903 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 29904 ;;		 -> BDT(48), NULL(0), 
 29905 ;; Return value:  Size  Location     Type
 29906 ;;                  2    0[COMRAM] PTR void 
 29907 ;; Registers used:
 29908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29909 ;; Tracked objects:
 29910 ;;		On entry : 0/0
 29911 ;;		On exit  : 0/0
 29912 ;;		Unchanged: 0/0
 29913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29914 ;;      Params:         4       0       0       0       0       0       0       0       0
 29915 ;;      Locals:         3       0       0       0       0       0       0       0       0
 29916 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29917 ;;      Totals:         7       0       0       0       0       0       0       0       0
 29918 ;;Total ram usage:        7 bytes
 29919 ;; Hardware stack levels used:    1
 29920 ;; This function calls:
 29921 ;;		Nothing
 29922 ;; This function is called by:
 29923 ;;		_CDCInitEP
 29924 ;; This function uses a non-reentrant model
 29925 ;;
 29926                           
 29927                           	psect	text123
 29928  005078                     __ptext123:
 29929                           	opt stack 0
 29930  005078                     i2_USBTransferOnePacket:
 29931                           	opt stack 16
 29932                           
 29933                           ; BSR set to: 0
 29934                           ;incstack = 0
 29935                           ;i2USBTransferOnePacket@ep stored from wreg
 29936  005078  6E05               	movwf	i2USBTransferOnePacket@ep,c
 29937                           
 29938                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 29939                           ;usb_device.c: 762: if(dir != 0)
 29940  00507A  5001               	movf	i2USBTransferOnePacket@dir,w,c
 29941  00507C  B4D8               	btfsc	status,2,c
 29942  00507E  D007               	goto	i2l7478
 29943                           
 29944                           ;usb_device.c: 763: {
 29945                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 29946  005080  5005               	movf	i2USBTransferOnePacket@ep,w,c
 29947  005082  0D02               	mullw	2
 29948  005084  0E3C               	movlw	low _pBDTEntryIn
 29949  005086  24F3               	addwf	prodl,w,c
 29950  005088  6ED9               	movwf	fsr2l,c
 29951  00508A  0E00               	movlw	high _pBDTEntryIn
 29952  00508C  D006               	goto	L32
 29953  00508E                     i2l7478:
 29954                           
 29955                           ;usb_device.c: 767: else
 29956                           ;usb_device.c: 768: {
 29957                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 29958  00508E  5005               	movf	i2USBTransferOnePacket@ep,w,c
 29959  005090  0D02               	mullw	2
 29960  005092  0E40               	movlw	low _pBDTEntryOut
 29961  005094  24F3               	addwf	prodl,w,c
 29962  005096  6ED9               	movwf	fsr2l,c
 29963  005098  0E01               	movlw	high _pBDTEntryOut
 29964  00509A                     L32:
 29965  00509A  20F4               	addwfc	prodh,w,c
 29966  00509C  6EDA               	movwf	fsr2h,c
 29967  00509E  CFDE F006          	movff	postinc2,i2USBTransferOnePacket@handle
 29968  0050A2  CFDD F007          	movff	postdec2,i2USBTransferOnePacket@handle+1
 29969                           
 29970                           ;usb_device.c: 771: }
 29971                           ;usb_device.c: 775: if(handle == 0)
 29972  0050A6  5006               	movf	i2USBTransferOnePacket@handle,w,c
 29973  0050A8  1007               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 29974  0050AA  A4D8               	btfss	status,2,c
 29975  0050AC  D005               	goto	i2l7486
 29976                           
 29977                           ;usb_device.c: 776: {
 29978                           ;usb_device.c: 777: return 0;
 29979  0050AE  0E00               	movlw	0
 29980  0050B0  6E01               	movwf	?i2_USBTransferOnePacket,c
 29981  0050B2  0E00               	movlw	0
 29982  0050B4  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 29983  0050B6  0012               	return	
 29984  0050B8                     i2l7486:
 29985                           
 29986                           ;usb_device.c: 778: }
 29987                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 29988  0050B8  EE20 F002          	lfsr	2,2
 29989  0050BC  5006               	movf	i2USBTransferOnePacket@handle,w,c
 29990  0050BE  26D9               	addwf	fsr2l,f,c
 29991  0050C0  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 29992  0050C2  22DA               	addwfc	fsr2h,f,c
 29993  0050C4  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 29994  0050C8  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 29995                           
 29996                           ;usb_device.c: 781: handle->CNT = len;
 29997  0050CC  EE20 F001          	lfsr	2,1
 29998  0050D0  5006               	movf	i2USBTransferOnePacket@handle,w,c
 29999  0050D2  26D9               	addwf	fsr2l,f,c
 30000  0050D4  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 30001  0050D6  22DA               	addwfc	fsr2h,f,c
 30002  0050D8  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 30003                           
 30004                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 30005  0050DC  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 30006  0050E0  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 30007  0050E4  0E40               	movlw	64
 30008  0050E6  16DF               	andwf	indf2,f,c
 30009                           
 30010                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 30011  0050E8  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 30012  0050EC  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 30013  0050F0  0E00               	movlw	0
 30014  0050F2  86DB               	bsf	plusw2,3,c
 30015                           
 30016                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 30017  0050F4  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 30018  0050F8  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 30019  0050FC  0E00               	movlw	0
 30020  0050FE  8EDB               	bsf	plusw2,7,c
 30021                           
 30022                           ;usb_device.c: 787: if(dir != 0)
 30023  005100  5001               	movf	i2USBTransferOnePacket@dir,w,c
 30024  005102  B4D8               	btfsc	status,2,c
 30025  005104  D007               	goto	i2l7498
 30026                           
 30027                           ;usb_device.c: 788: {
 30028                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 30029  005106  5005               	movf	i2USBTransferOnePacket@ep,w,c
 30030  005108  0D02               	mullw	2
 30031  00510A  0E3C               	movlw	low _pBDTEntryIn
 30032  00510C  24F3               	addwf	prodl,w,c
 30033  00510E  6ED9               	movwf	fsr2l,c
 30034  005110  0E00               	movlw	high _pBDTEntryIn
 30035  005112  D006               	goto	L33
 30036  005114                     i2l7498:
 30037                           
 30038                           ;usb_device.c: 792: else
 30039                           ;usb_device.c: 793: {
 30040                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 30041  005114  5005               	movf	i2USBTransferOnePacket@ep,w,c
 30042  005116  0D02               	mullw	2
 30043  005118  0E40               	movlw	low _pBDTEntryOut
 30044  00511A  24F3               	addwf	prodl,w,c
 30045  00511C  6ED9               	movwf	fsr2l,c
 30046  00511E  0E01               	movlw	high _pBDTEntryOut
 30047  005120                     L33:
 30048  005120  20F4               	addwfc	prodh,w,c
 30049  005122  6EDA               	movwf	fsr2h,c
 30050  005124  0E04               	movlw	4
 30051  005126  1ADF               	xorwf	indf2,f,c
 30052                           
 30053                           ;usb_device.c: 796: }
 30054                           ;usb_device.c: 797: return (void*)handle;
 30055  005128  C006  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 30056  00512C  C007  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 30057  005130  0012               	return	
 30058  005132                     __end_ofi2_USBTransferOnePacket:
 30059                           	opt stack 0
 30060                           pclatu	equ	0xFFB
 30061                           pclath	equ	0xFFA
 30062                           tblptru	equ	0xFF8
 30063                           tblptrh	equ	0xFF7
 30064                           tblptrl	equ	0xFF6
 30065                           tablat	equ	0xFF5
 30066                           prodh	equ	0xFF4
 30067                           prodl	equ	0xFF3
 30068                           intcon	equ	0xFF2
 30069                           intcon3	equ	0xFF0
 30070                           indf0	equ	0xFEF
 30071                           postinc0	equ	0xFEE
 30072                           fsr0h	equ	0xFEA
 30073                           fsr0l	equ	0xFE9
 30074                           wreg	equ	0xFE8
 30075                           indf1	equ	0xFE7
 30076                           postdec1	equ	0xFE5
 30077                           fsr1h	equ	0xFE2
 30078                           fsr1l	equ	0xFE1
 30079                           indf2	equ	0xFDF
 30080                           postinc2	equ	0xFDE
 30081                           postdec2	equ	0xFDD
 30082                           plusw2	equ	0xFDB
 30083                           fsr2h	equ	0xFDA
 30084                           fsr2l	equ	0xFD9
 30085                           status	equ	0xFD8
 30086                           
 30087 ;; *************** function _USBEnableEndpoint *****************
 30088 ;; Defined at:
 30089 ;;		line 645 in file "../Includes/Usb/Framework/usb_device.c"
 30090 ;; Parameters:    Size  Location     Type
 30091 ;;  ep              1    wreg     unsigned char 
 30092 ;;  options         1    8[COMRAM] unsigned char 
 30093 ;; Auto vars:     Size  Location     Type
 30094 ;;  ep              1   11[COMRAM] unsigned char 
 30095 ;;  p               2    9[COMRAM] PTR unsigned char 
 30096 ;;		 -> UEP0(1), 
 30097 ;; Return value:  Size  Location     Type
 30098 ;;		None               void
 30099 ;; Registers used:
 30100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30101 ;; Tracked objects:
 30102 ;;		On entry : 0/0
 30103 ;;		On exit  : 0/0
 30104 ;;		Unchanged: 0/0
 30105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30106 ;;      Params:         1       0       0       0       0       0       0       0       0
 30107 ;;      Locals:         3       0       0       0       0       0       0       0       0
 30108 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30109 ;;      Totals:         4       0       0       0       0       0       0       0       0
 30110 ;;Total ram usage:        4 bytes
 30111 ;; Hardware stack levels used:    1
 30112 ;; Hardware stack levels required when called:    1
 30113 ;; This function calls:
 30114 ;;		_USBConfigureEndpoint
 30115 ;; This function is called by:
 30116 ;;		_CDCInitEP
 30117 ;; This function uses a non-reentrant model
 30118 ;;
 30119                           
 30120                           	psect	text124
 30121  006502                     __ptext124:
 30122                           	opt stack 0
 30123  006502                     _USBEnableEndpoint:
 30124                           	opt stack 15
 30125                           
 30126                           ;incstack = 0
 30127                           ;USBEnableEndpoint@ep stored from wreg
 30128  006502  6E0C               	movwf	USBEnableEndpoint@ep,c
 30129                           
 30130                           ;usb_device.c: 647: unsigned char* p;
 30131                           ;usb_device.c: 651: if(options & 0x04)
 30132  006504  A409               	btfss	USBEnableEndpoint@options,2,c
 30133  006506  D005               	goto	i2l7466
 30134                           
 30135                           ;usb_device.c: 652: {
 30136                           ;usb_device.c: 653: USBConfigureEndpoint(ep, 0);
 30137  006508  0E00               	movlw	0
 30138  00650A  6E01               	movwf	USBConfigureEndpoint@direction,c
 30139  00650C  500C               	movf	USBEnableEndpoint@ep,w,c
 30140  00650E  ECDB  F02B         	call	_USBConfigureEndpoint
 30141  006512                     i2l7466:
 30142                           
 30143                           ;usb_device.c: 654: }
 30144                           ;usb_device.c: 655: if(options & 0x02)
 30145  006512  A209               	btfss	USBEnableEndpoint@options,1,c
 30146  006514  D005               	goto	i2l7470
 30147                           
 30148                           ;usb_device.c: 656: {
 30149                           ;usb_device.c: 657: USBConfigureEndpoint(ep, 1);
 30150  006516  0E01               	movlw	1
 30151  006518  6E01               	movwf	USBConfigureEndpoint@direction,c
 30152  00651A  500C               	movf	USBEnableEndpoint@ep,w,c
 30153  00651C  ECDB  F02B         	call	_USBConfigureEndpoint
 30154  006520                     i2l7470:
 30155                           
 30156                           ;usb_device.c: 658: }
 30157                           ;usb_device.c: 663: p = (unsigned char*)(&UEP0+ep);
 30158  006520  500C               	movf	USBEnableEndpoint@ep,w,c
 30159  006522  0D01               	mullw	1
 30160  006524  0E6A               	movlw	106
 30161  006526  24F3               	addwf	prodl,w,c
 30162  006528  6E0A               	movwf	USBEnableEndpoint@p,c
 30163  00652A  0E0F               	movlw	15
 30164  00652C  20F4               	addwfc	prodh,w,c
 30165  00652E  6E0B               	movwf	USBEnableEndpoint@p+1,c
 30166                           
 30167                           ;usb_device.c: 664: *p = options;
 30168  006530  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 30169  006534  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 30170  006538  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 30171  00653C  0012               	return		;funcret
 30172  00653E                     __end_of_USBEnableEndpoint:
 30173                           	opt stack 0
 30174                           pclatu	equ	0xFFB
 30175                           pclath	equ	0xFFA
 30176                           tblptru	equ	0xFF8
 30177                           tblptrh	equ	0xFF7
 30178                           tblptrl	equ	0xFF6
 30179                           tablat	equ	0xFF5
 30180                           prodh	equ	0xFF4
 30181                           prodl	equ	0xFF3
 30182                           intcon	equ	0xFF2
 30183                           intcon3	equ	0xFF0
 30184                           indf0	equ	0xFEF
 30185                           postinc0	equ	0xFEE
 30186                           fsr0h	equ	0xFEA
 30187                           fsr0l	equ	0xFE9
 30188                           wreg	equ	0xFE8
 30189                           indf1	equ	0xFE7
 30190                           postdec1	equ	0xFE5
 30191                           fsr1h	equ	0xFE2
 30192                           fsr1l	equ	0xFE1
 30193                           indf2	equ	0xFDF
 30194                           postinc2	equ	0xFDE
 30195                           postdec2	equ	0xFDD
 30196                           plusw2	equ	0xFDB
 30197                           fsr2h	equ	0xFDA
 30198                           fsr2l	equ	0xFD9
 30199                           status	equ	0xFD8
 30200                           
 30201 ;; *************** function _USBConfigureEndpoint *****************
 30202 ;; Defined at:
 30203 ;;		line 1228 in file "../Includes/Usb/Framework/usb_device.c"
 30204 ;; Parameters:    Size  Location     Type
 30205 ;;  EPNum           1    wreg     unsigned char 
 30206 ;;  direction       1    0[COMRAM] unsigned char 
 30207 ;; Auto vars:     Size  Location     Type
 30208 ;;  EPNum           1    5[COMRAM] unsigned char 
 30209 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 30210 ;;		 -> BDT(48), 
 30211 ;; Return value:  Size  Location     Type
 30212 ;;		None               void
 30213 ;; Registers used:
 30214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30215 ;; Tracked objects:
 30216 ;;		On entry : 0/0
 30217 ;;		On exit  : 0/0
 30218 ;;		Unchanged: 0/0
 30219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30220 ;;      Params:         1       0       0       0       0       0       0       0       0
 30221 ;;      Locals:         3       0       0       0       0       0       0       0       0
 30222 ;;      Temps:          4       0       0       0       0       0       0       0       0
 30223 ;;      Totals:         8       0       0       0       0       0       0       0       0
 30224 ;;Total ram usage:        8 bytes
 30225 ;; Hardware stack levels used:    1
 30226 ;; This function calls:
 30227 ;;		Nothing
 30228 ;; This function is called by:
 30229 ;;		_USBEnableEndpoint
 30230 ;; This function uses a non-reentrant model
 30231 ;;
 30232                           
 30233                           	psect	text125
 30234  0057B6                     __ptext125:
 30235                           	opt stack 0
 30236  0057B6                     _USBConfigureEndpoint:
 30237                           	opt stack 15
 30238                           
 30239                           ;incstack = 0
 30240                           ;USBConfigureEndpoint@EPNum stored from wreg
 30241  0057B6  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 30242                           
 30243                           ;usb_device.c: 1230: volatile BDT_ENTRY* handle;
 30244                           ;usb_device.c: 1234: handle = (volatile BDT_ENTRY*)&BDT[0];
 30245  0057B8  0E00               	movlw	0
 30246  0057BA  6E07               	movwf	USBConfigureEndpoint@handle,c
 30247  0057BC  0E04               	movlw	4
 30248  0057BE  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 30249                           
 30250                           ;usb_device.c: 1235: handle += (4*EPNum+2*direction+0u);
 30251  0057C0  5001               	movf	USBConfigureEndpoint@direction,w,c
 30252  0057C2  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 30253  0057C4  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 30254  0057C6  90D8               	bcf	status,0,c
 30255  0057C8  3602               	rlcf	??_USBConfigureEndpoint,f,c
 30256  0057CA  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 30257  0057CC  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 30258  0057CE  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 30259  0057D0  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 30260  0057D2  90D8               	bcf	status,0,c
 30261  0057D4  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 30262  0057D6  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 30263  0057D8  90D8               	bcf	status,0,c
 30264  0057DA  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 30265  0057DC  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 30266  0057DE  5002               	movf	??_USBConfigureEndpoint,w,c
 30267  0057E0  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 30268  0057E2  5003               	movf	??_USBConfigureEndpoint+1,w,c
 30269  0057E4  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 30270  0057E6  90D8               	bcf	status,0,c
 30271  0057E8  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 30272  0057EA  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 30273  0057EC  90D8               	bcf	status,0,c
 30274  0057EE  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 30275  0057F0  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 30276  0057F2  5004               	movf	??_USBConfigureEndpoint+2,w,c
 30277  0057F4  2607               	addwf	USBConfigureEndpoint@handle,f,c
 30278  0057F6  5005               	movf	??_USBConfigureEndpoint+3,w,c
 30279  0057F8  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 30280                           
 30281                           ;usb_device.c: 1237: handle->STAT.UOWN = 0;
 30282  0057FA  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 30283  0057FE  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 30284  005802  9EDF               	bcf	indf2,7,c
 30285                           
 30286                           ;usb_device.c: 1242: if(direction == 0)
 30287  005804  5001               	movf	USBConfigureEndpoint@direction,w,c
 30288  005806  A4D8               	btfss	status,2,c
 30289  005808  D007               	goto	i2l7442
 30290                           
 30291                           ;usb_device.c: 1243: {
 30292                           ;usb_device.c: 1244: pBDTEntryOut[EPNum] = handle;
 30293  00580A  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 30294  00580C  0D02               	mullw	2
 30295  00580E  0E40               	movlw	low _pBDTEntryOut
 30296  005810  24F3               	addwf	prodl,w,c
 30297  005812  6ED9               	movwf	fsr2l,c
 30298  005814  0E01               	movlw	high _pBDTEntryOut
 30299  005816  D006               	goto	L34
 30300  005818                     i2l7442:
 30301                           
 30302                           ;usb_device.c: 1246: else
 30303                           ;usb_device.c: 1247: {
 30304                           ;usb_device.c: 1248: pBDTEntryIn[EPNum] = handle;
 30305  005818  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 30306  00581A  0D02               	mullw	2
 30307  00581C  0E3C               	movlw	low _pBDTEntryIn
 30308  00581E  24F3               	addwf	prodl,w,c
 30309  005820  6ED9               	movwf	fsr2l,c
 30310  005822  0E00               	movlw	high _pBDTEntryIn
 30311  005824                     L34:
 30312  005824  20F4               	addwfc	prodh,w,c
 30313  005826  6EDA               	movwf	fsr2h,c
 30314  005828  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 30315  00582C  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 30316                           
 30317                           ;usb_device.c: 1249: }
 30318                           ;usb_device.c: 1250: handle->STAT.DTS = 0;
 30319  005830  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 30320  005834  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 30321  005838  9CDF               	bcf	indf2,6,c
 30322                           
 30323                           ;usb_device.c: 1251: (handle+1)->STAT.DTS = 1;
 30324  00583A  EE20 F004          	lfsr	2,4
 30325  00583E  5007               	movf	USBConfigureEndpoint@handle,w,c
 30326  005840  26D9               	addwf	fsr2l,f,c
 30327  005842  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 30328  005844  22DA               	addwfc	fsr2h,f,c
 30329  005846  8CDF               	bsf	indf2,6,c
 30330  005848  0012               	return		;funcret
 30331  00584A                     __end_of_USBConfigureEndpoint:
 30332                           	opt stack 0
 30333                           pclatu	equ	0xFFB
 30334                           pclath	equ	0xFFA
 30335                           tblptru	equ	0xFF8
 30336                           tblptrh	equ	0xFF7
 30337                           tblptrl	equ	0xFF6
 30338                           tablat	equ	0xFF5
 30339                           prodh	equ	0xFF4
 30340                           prodl	equ	0xFF3
 30341                           intcon	equ	0xFF2
 30342                           intcon3	equ	0xFF0
 30343                           indf0	equ	0xFEF
 30344                           postinc0	equ	0xFEE
 30345                           fsr0h	equ	0xFEA
 30346                           fsr0l	equ	0xFE9
 30347                           wreg	equ	0xFE8
 30348                           indf1	equ	0xFE7
 30349                           postdec1	equ	0xFE5
 30350                           fsr1h	equ	0xFE2
 30351                           fsr1l	equ	0xFE1
 30352                           indf2	equ	0xFDF
 30353                           postinc2	equ	0xFDE
 30354                           postdec2	equ	0xFDD
 30355                           plusw2	equ	0xFDB
 30356                           fsr2h	equ	0xFDA
 30357                           fsr2l	equ	0xFD9
 30358                           status	equ	0xFD8
 30359                           
 30360 ;; *************** function _USBCheckCDCRequest *****************
 30361 ;; Defined at:
 30362 ;;		line 184 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 30363 ;; Parameters:    Size  Location     Type
 30364 ;;		None
 30365 ;; Auto vars:     Size  Location     Type
 30366 ;;		None
 30367 ;; Return value:  Size  Location     Type
 30368 ;;		None               void
 30369 ;; Registers used:
 30370 ;;		wreg, status,2, status,0
 30371 ;; Tracked objects:
 30372 ;;		On entry : 0/0
 30373 ;;		On exit  : 0/0
 30374 ;;		Unchanged: 0/0
 30375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30376 ;;      Params:         0       0       0       0       0       0       0       0       0
 30377 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30378 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30379 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30380 ;;Total ram usage:        0 bytes
 30381 ;; Hardware stack levels used:    1
 30382 ;; This function calls:
 30383 ;;		Nothing
 30384 ;; This function is called by:
 30385 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 30386 ;; This function uses a non-reentrant model
 30387 ;;
 30388                           
 30389                           	psect	text126
 30390  00533C                     __ptext126:
 30391                           	opt stack 0
 30392  00533C                     _USBCheckCDCRequest:
 30393                           	opt stack 18
 30394                           
 30395                           ;usb_device_cdc.c: 189: if(SetupPkt.Recipient != (0x01)) return;
 30396                           
 30397                           ;incstack = 0
 30398  00533C  0104               	movlb	4	; () banked
 30399  00533E  5130               	movf	48,w,b	;volatile
 30400  005340  0B1F               	andlw	31
 30401  005342  06E8               	decf	wreg,f,c
 30402  005344  A4D8               	btfss	status,2,c
 30403  005346  0012               	return	
 30404                           
 30405                           ; BSR set to: 4
 30406                           ;usb_device_cdc.c: 194: if(SetupPkt.RequestType != (0x20>>5)) return;
 30407                           
 30408                           ; BSR set to: 4
 30409                           
 30410                           ; BSR set to: 4
 30411  005348  0104               	movlb	4	; () banked
 30412  00534A  3930               	swapf	48,w,b	;volatile
 30413  00534C  32E8               	rrcf	wreg,f,c
 30414  00534E  0B03               	andlw	3
 30415  005350  06E8               	decf	wreg,f,c
 30416  005352  A4D8               	btfss	status,2,c
 30417  005354  0012               	return	
 30418                           
 30419                           ; BSR set to: 4
 30420                           ;usb_device_cdc.c: 200: if((SetupPkt.bIntfID != 0x0)&&
 30421                           ;usb_device_cdc.c: 201: (SetupPkt.bIntfID != 0x01)) return;
 30422                           
 30423                           ; BSR set to: 4
 30424                           
 30425                           ; BSR set to: 4
 30426  005356  0104               	movlb	4	; () banked
 30427  005358  5134               	movf	52,w,b	;volatile
 30428  00535A  B4D8               	btfsc	status,2,c
 30429  00535C  D033               	goto	i2l7646
 30430                           
 30431                           ; BSR set to: 4
 30432  00535E  0104               	movlb	4	; () banked
 30433  005360  0534               	decf	52,w,b	;volatile
 30434  005362  A4D8               	btfss	status,2,c
 30435  005364  0012               	return	
 30436  005366  D02E               	goto	i2l7646
 30437  005368                     i2l7622:
 30438                           
 30439                           ; BSR set to: 4
 30440                           ;usb_device_cdc.c: 208: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 30441  005368  0ED0               	movlw	low _dummy_encapsulated_cmd_response
 30442  00536A  6E36               	movwf	_inPipes,c	;volatile
 30443  00536C  0E01               	movlw	high _dummy_encapsulated_cmd_response
 30444  00536E  6E37               	movwf	_inPipes+1,c	;volatile
 30445                           
 30446                           ; BSR set to: 4
 30447                           ;usb_device_cdc.c: 209: inPipes[0].wCount.Val = 0x08;
 30448  005370  0E00               	movlw	0
 30449  005372  6E3B               	movwf	_inPipes+5,c	;volatile
 30450  005374  0E08               	movlw	8
 30451  005376  6E3A               	movwf	_inPipes+4,c	;volatile
 30452                           
 30453                           ; BSR set to: 4
 30454                           ;usb_device_cdc.c: 210: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 30455  005378  8039               	bsf	_inPipes+3,0,c	;volatile
 30456                           
 30457                           ; BSR set to: 4
 30458                           ;usb_device_cdc.c: 211: inPipes[0].info.bits.busy = 1;
 30459  00537A  8E39               	bsf	_inPipes+3,7,c	;volatile
 30460                           
 30461                           ;usb_device_cdc.c: 212: break;
 30462  00537C  0012               	return	
 30463  00537E                     i2l7630:
 30464                           
 30465                           ; BSR set to: 4
 30466                           ;usb_device_cdc.c: 215: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 30467  00537E  0ED0               	movlw	low _dummy_encapsulated_cmd_response
 30468  005380  6E36               	movwf	_inPipes,c	;volatile
 30469  005382  0E01               	movlw	high _dummy_encapsulated_cmd_response
 30470  005384  6E37               	movwf	_inPipes+1,c	;volatile
 30471                           
 30472                           ; BSR set to: 4
 30473                           ;usb_device_cdc.c: 216: inPipes[0].info.bits.busy = 1;
 30474  005386  8E39               	bsf	_inPipes+3,7,c	;volatile
 30475                           
 30476                           ;usb_device_cdc.c: 217: break;
 30477  005388  0012               	return	
 30478  00538A                     i2l2018:
 30479                           
 30480                           ; BSR set to: 4
 30481                           ;usb_device_cdc.c: 220: outPipes[0].wCount.Val = SetupPkt.wLength;
 30482  00538A  C436 F032          	movff	1078,_outPipes+4	;volatile
 30483  00538E  C437 F033          	movff	1079,_outPipes+5	;volatile
 30484                           
 30485                           ; BSR set to: 4
 30486                           ;usb_device_cdc.c: 221: outPipes[0].pDst.bRam = (uint8_t*)&cdc_notice.SetLineCoding._byt
      +                          e[0];
 30487  005392  0EC6               	movlw	low _cdc_notice
 30488  005394  6E2E               	movwf	_outPipes,c	;volatile
 30489  005396  0E01               	movlw	high _cdc_notice
 30490  005398  6E2F               	movwf	_outPipes+1,c	;volatile
 30491                           
 30492                           ;usb_device_cdc.c: 222: outPipes[0].pFunc = &USART_mySetLineCodingHandler;
 30493  00539A  0E92               	movlw	low _USART_mySetLineCodingHandler
 30494  00539C  6E34               	movwf	_outPipes+6,c	;volatile
 30495  00539E  0E61               	movlw	high _USART_mySetLineCodingHandler
 30496  0053A0  6E35               	movwf	_outPipes+7,c	;volatile
 30497                           
 30498                           ; BSR set to: 4
 30499                           ;usb_device_cdc.c: 223: outPipes[0].info.bits.busy = 1;
 30500  0053A2  8E31               	bsf	_outPipes+3,7,c	;volatile
 30501                           
 30502                           ;usb_device_cdc.c: 224: break;
 30503  0053A4  0012               	return	
 30504  0053A6                     i2l7638:
 30505                           
 30506                           ; BSR set to: 4
 30507                           ;usb_device_cdc.c: 227: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 30508  0053A6  0ED8               	movlw	low _line_coding
 30509  0053A8  6E36               	movwf	_inPipes,c	;volatile
 30510  0053AA  0E01               	movlw	high _line_coding
 30511  0053AC  6E37               	movwf	_inPipes+1,c	;volatile
 30512                           
 30513                           ; BSR set to: 4
 30514  0053AE  0E00               	movlw	0
 30515  0053B0  6E3B               	movwf	_inPipes+5,c	;volatile
 30516  0053B2  0E07               	movlw	7
 30517  0053B4  6E3A               	movwf	_inPipes+4,c	;volatile
 30518                           
 30519                           ; BSR set to: 4
 30520  0053B6  0EC1               	movlw	193
 30521  0053B8  6E39               	movwf	_inPipes+3,c	;volatile
 30522                           
 30523                           ;usb_device_cdc.c: 231: break;
 30524  0053BA  0012               	return	
 30525  0053BC                     i2l2020:
 30526                           
 30527                           ; BSR set to: 4
 30528                           ;usb_device_cdc.c: 234: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 30529  0053BC  C432 F0DB          	movff	1074,_control_signal_bitmap	;volatile
 30530                           
 30531                           ;usb_device_cdc.c: 255: inPipes[0].info.bits.busy = 1;
 30532  0053C0  8E39               	bsf	_inPipes+3,7,c	;volatile
 30533                           
 30534                           ; BSR set to: 4
 30535                           ;usb_device_cdc.c: 260: }
 30536                           
 30537                           ; BSR set to: 4
 30538                           ;usb_device_cdc.c: 259: break;
 30539                           
 30540                           ;usb_device_cdc.c: 258: default:
 30541                           
 30542                           ;usb_device_cdc.c: 256: break;
 30543  0053C2  0012               	return	
 30544  0053C4                     i2l7646:
 30545                           
 30546                           ; BSR set to: 4
 30547  0053C4  0104               	movlb	4	; () banked
 30548  0053C6  5131               	movf	49,w,b	;volatile
 30549                           
 30550                           ; Switch size 1, requested type "space"
 30551                           ; Number of cases is 5, Range of values is 0 to 34
 30552                           ; switch strategies available:
 30553                           ; Name         Instructions Cycles
 30554                           ; simple_byte           16     9 (average)
 30555                           ;	Chosen strategy is simple_byte
 30556  0053C8  0A00               	xorlw	0	; case 0
 30557  0053CA  B4D8               	btfsc	status,2,c
 30558  0053CC  D7CD               	goto	i2l7622
 30559  0053CE  0A01               	xorlw	1	; case 1
 30560  0053D0  B4D8               	btfsc	status,2,c
 30561  0053D2  D7D5               	goto	i2l7630
 30562  0053D4  0A21               	xorlw	33	; case 32
 30563  0053D6  B4D8               	btfsc	status,2,c
 30564  0053D8  D7D8               	goto	i2l2018
 30565  0053DA  0A01               	xorlw	1	; case 33
 30566  0053DC  B4D8               	btfsc	status,2,c
 30567  0053DE  D7E3               	goto	i2l7638
 30568  0053E0  0A03               	xorlw	3	; case 34
 30569  0053E2  A4D8               	btfss	status,2,c
 30570  0053E4  0012               	return	
 30571  0053E6  D7EA               	goto	i2l2020
 30572  0053E8                     __end_of_USBCheckCDCRequest:
 30573                           	opt stack 0
 30574                           pclatu	equ	0xFFB
 30575                           pclath	equ	0xFFA
 30576                           tblptru	equ	0xFF8
 30577                           tblptrh	equ	0xFF7
 30578                           tblptrl	equ	0xFF6
 30579                           tablat	equ	0xFF5
 30580                           prodh	equ	0xFF4
 30581                           prodl	equ	0xFF3
 30582                           intcon	equ	0xFF2
 30583                           intcon3	equ	0xFF0
 30584                           indf0	equ	0xFEF
 30585                           postinc0	equ	0xFEE
 30586                           fsr0h	equ	0xFEA
 30587                           fsr0l	equ	0xFE9
 30588                           wreg	equ	0xFE8
 30589                           indf1	equ	0xFE7
 30590                           postdec1	equ	0xFE5
 30591                           fsr1h	equ	0xFE2
 30592                           fsr1l	equ	0xFE1
 30593                           indf2	equ	0xFDF
 30594                           postinc2	equ	0xFDE
 30595                           postdec2	equ	0xFDD
 30596                           plusw2	equ	0xFDB
 30597                           fsr2h	equ	0xFDA
 30598                           fsr2l	equ	0xFD9
 30599                           status	equ	0xFD8
 30600                           
 30601 ;; *************** function _USBCtrlTrfOutHandler *****************
 30602 ;; Defined at:
 30603 ;;		line 2169 in file "../Includes/Usb/Framework/usb_device.c"
 30604 ;; Parameters:    Size  Location     Type
 30605 ;;		None
 30606 ;; Auto vars:     Size  Location     Type
 30607 ;;		None
 30608 ;; Return value:  Size  Location     Type
 30609 ;;		None               void
 30610 ;; Registers used:
 30611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 30612 ;; Tracked objects:
 30613 ;;		On entry : 0/0
 30614 ;;		On exit  : 0/0
 30615 ;;		Unchanged: 0/0
 30616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30617 ;;      Params:         0       0       0       0       0       0       0       0       0
 30618 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30619 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30620 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30621 ;;Total ram usage:        0 bytes
 30622 ;; Hardware stack levels used:    1
 30623 ;; Hardware stack levels required when called:    3
 30624 ;; This function calls:
 30625 ;;		_USBCtrlTrfRxService
 30626 ;; This function is called by:
 30627 ;;		_USBCtrlEPService
 30628 ;; This function uses a non-reentrant model
 30629 ;;
 30630                           
 30631                           	psect	text127
 30632  005FC6                     __ptext127:
 30633                           	opt stack 0
 30634  005FC6                     _USBCtrlTrfOutHandler:
 30635                           	opt stack 15
 30636                           
 30637                           ;usb_device.c: 2171: if(controlTransferState == 2)
 30638                           
 30639                           ; BSR set to: 4
 30640                           ;incstack = 0
 30641  005FC6  0E02               	movlw	2
 30642  005FC8  1851               	xorwf	_controlTransferState,w,c	;volatile
 30643  005FCA  A4D8               	btfss	status,2,c
 30644  005FCC  D003               	goto	i2l9764
 30645                           
 30646                           ;usb_device.c: 2172: {
 30647                           ;usb_device.c: 2173: USBCtrlTrfRxService();
 30648  005FCE  EC16  F01D         	call	_USBCtrlTrfRxService	;wreg free
 30649                           
 30650                           ;usb_device.c: 2174: }
 30651  005FD2  0012               	return	
 30652  005FD4                     i2l9764:
 30653                           
 30654                           ;usb_device.c: 2175: else
 30655                           ;usb_device.c: 2176: {
 30656                           ;usb_device.c: 2179: controlTransferState = 0;
 30657  005FD4  0E00               	movlw	0
 30658  005FD6  6E51               	movwf	_controlTransferState,c	;volatile
 30659                           
 30660                           ;usb_device.c: 2186: if(BothEP0OutUOWNsSet == 0)
 30661  005FD8  0100               	movlb	0	; () banked
 30662  005FDA  51CD               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 30663  005FDC  A4D8               	btfss	status,2,c
 30664  005FDE  D01F               	goto	i2l9772
 30665                           
 30666                           ; BSR set to: 0
 30667                           ;usb_device.c: 2187: {
 30668                           ;usb_device.c: 2188: pBDTEntryEP0OutNext->CNT = 8;
 30669  005FE0  EE20 F001          	lfsr	2,1
 30670  005FE4  5046               	movf	_pBDTEntryEP0OutNext,w,c
 30671  005FE6  26D9               	addwf	fsr2l,f,c
 30672  005FE8  5047               	movf	_pBDTEntryEP0OutNext+1,w,c
 30673  005FEA  22DA               	addwfc	fsr2h,f,c
 30674  005FEC  0E08               	movlw	8
 30675  005FEE  6EDF               	movwf	indf2,c
 30676                           
 30677                           ;usb_device.c: 2189: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 30678  005FF0  EE20 F002          	lfsr	2,2
 30679  005FF4  5046               	movf	_pBDTEntryEP0OutNext,w,c
 30680  005FF6  26D9               	addwf	fsr2l,f,c
 30681  005FF8  5047               	movf	_pBDTEntryEP0OutNext+1,w,c
 30682  005FFA  22DA               	addwfc	fsr2h,f,c
 30683  005FFC  0E30               	movlw	48
 30684  005FFE  6EDE               	movwf	postinc2,c
 30685  006000  0E04               	movlw	4
 30686  006002  6EDD               	movwf	postdec2,c
 30687                           
 30688                           ; BSR set to: 0
 30689                           ;usb_device.c: 2190: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 30690  006004  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30691  006008  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30692  00600C  0E0C               	movlw	12
 30693  00600E  6EDF               	movwf	indf2,c
 30694                           
 30695                           ; BSR set to: 0
 30696                           ;usb_device.c: 2191: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 30697  006010  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30698  006014  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30699  006018  0E00               	movlw	0
 30700  00601A  8EDB               	bsf	plusw2,7,c
 30701                           
 30702                           ;usb_device.c: 2192: }
 30703  00601C  0012               	return	
 30704  00601E                     i2l9772:
 30705                           
 30706                           ; BSR set to: 0
 30707                           ;usb_device.c: 2193: else
 30708                           ;usb_device.c: 2194: {
 30709                           ;usb_device.c: 2195: BothEP0OutUOWNsSet = 0;
 30710  00601E  0E00               	movlw	0
 30711  006020  0100               	movlb	0	; () banked
 30712  006022  6FCD               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 30713                           
 30714                           ; BSR set to: 0
 30715  006024  0012               	return	
 30716  006026                     __end_of_USBCtrlTrfOutHandler:
 30717                           	opt stack 0
 30718                           pclatu	equ	0xFFB
 30719                           pclath	equ	0xFFA
 30720                           tblptru	equ	0xFF8
 30721                           tblptrh	equ	0xFF7
 30722                           tblptrl	equ	0xFF6
 30723                           tablat	equ	0xFF5
 30724                           prodh	equ	0xFF4
 30725                           prodl	equ	0xFF3
 30726                           intcon	equ	0xFF2
 30727                           intcon3	equ	0xFF0
 30728                           indf0	equ	0xFEF
 30729                           postinc0	equ	0xFEE
 30730                           fsr0h	equ	0xFEA
 30731                           fsr0l	equ	0xFE9
 30732                           wreg	equ	0xFE8
 30733                           indf1	equ	0xFE7
 30734                           postdec1	equ	0xFE5
 30735                           fsr1h	equ	0xFE2
 30736                           fsr1l	equ	0xFE1
 30737                           indf2	equ	0xFDF
 30738                           postinc2	equ	0xFDE
 30739                           postdec2	equ	0xFDD
 30740                           plusw2	equ	0xFDB
 30741                           fsr2h	equ	0xFDA
 30742                           fsr2l	equ	0xFD9
 30743                           status	equ	0xFD8
 30744                           
 30745 ;; *************** function _USBCtrlTrfRxService *****************
 30746 ;; Defined at:
 30747 ;;		line 1518 in file "../Includes/Usb/Framework/usb_device.c"
 30748 ;; Parameters:    Size  Location     Type
 30749 ;;		None
 30750 ;; Auto vars:     Size  Location     Type
 30751 ;;  byteToRead      1   18[COMRAM] unsigned char 
 30752 ;;  i               1   17[COMRAM] unsigned char 
 30753 ;; Return value:  Size  Location     Type
 30754 ;;		None               void
 30755 ;; Registers used:
 30756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 30757 ;; Tracked objects:
 30758 ;;		On entry : 0/0
 30759 ;;		On exit  : 0/0
 30760 ;;		Unchanged: 0/0
 30761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30762 ;;      Params:         0       0       0       0       0       0       0       0       0
 30763 ;;      Locals:         2       0       0       0       0       0       0       0       0
 30764 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30765 ;;      Totals:         2       0       0       0       0       0       0       0       0
 30766 ;;Total ram usage:        2 bytes
 30767 ;; Hardware stack levels used:    1
 30768 ;; Hardware stack levels required when called:    2
 30769 ;; This function calls:
 30770 ;;		_USART_mySetLineCodingHandler
 30771 ;;		_USBCtrlEPAllowStatusStage
 30772 ;; This function is called by:
 30773 ;;		_USBCtrlTrfOutHandler
 30774 ;; This function uses a non-reentrant model
 30775 ;;
 30776                           
 30777                           	psect	text128
 30778  003A2C                     __ptext128:
 30779                           	opt stack 0
 30780  003A2C                     _USBCtrlTrfRxService:
 30781                           	opt stack 15
 30782                           
 30783                           ;usb_device.c: 1520: uint8_t byteToRead;
 30784                           ;usb_device.c: 1521: uint8_t i;
 30785                           ;usb_device.c: 1525: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 30786                           
 30787                           ;incstack = 0
 30788  003A2C  EE20 F001          	lfsr	2,1
 30789  003A30  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 30790  003A32  26D9               	addwf	fsr2l,f,c
 30791  003A34  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 30792  003A36  22DA               	addwfc	fsr2h,f,c
 30793  003A38  50DF               	movf	indf2,w,c
 30794  003A3A  6E13               	movwf	USBCtrlTrfRxService@byteToRead,c
 30795                           
 30796                           ;usb_device.c: 1531: if(byteToRead > outPipes[0].wCount.Val)
 30797  003A3C  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 30798  003A3E  5C32               	subwf	_outPipes+4,w,c	;volatile
 30799  003A40  0E00               	movlw	0
 30800  003A42  5833               	subwfb	_outPipes+5,w,c	;volatile
 30801  003A44  A0D8               	btfss	status,0,c
 30802                           
 30803                           ;usb_device.c: 1532: {
 30804                           ;usb_device.c: 1533: byteToRead = outPipes[0].wCount.Val;
 30805  003A46  C032  F013         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 30806                           
 30807                           ;usb_device.c: 1534: }
 30808                           ;usb_device.c: 1536: outPipes[0].wCount.Val -= byteToRead;
 30809  003A4A  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 30810  003A4C  5E32               	subwf	_outPipes+4,f,c	;volatile
 30811  003A4E  0E00               	movlw	0
 30812  003A50  5A33               	subwfb	_outPipes+5,f,c	;volatile
 30813                           
 30814                           ;usb_device.c: 1540: for(i=0;i<byteToRead;i++)
 30815  003A52  0E00               	movlw	0
 30816  003A54  6E12               	movwf	USBCtrlTrfRxService@i,c
 30817  003A56  D011               	goto	i2l8378
 30818  003A58                     i2l8372:
 30819                           
 30820                           ;usb_device.c: 1541: {
 30821                           ;usb_device.c: 1542: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 30822  003A58  5012               	movf	USBCtrlTrfRxService@i,w,c
 30823  003A5A  0D01               	mullw	1
 30824  003A5C  0E38               	movlw	56
 30825  003A5E  24F3               	addwf	prodl,w,c
 30826  003A60  6ED9               	movwf	fsr2l,c
 30827  003A62  0E04               	movlw	4
 30828  003A64  20F4               	addwfc	prodh,w,c
 30829  003A66  6EDA               	movwf	fsr2h,c
 30830  003A68  C02E  FFE1         	movff	_outPipes,fsr1l	;volatile
 30831  003A6C  C02F  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 30832  003A70  CFDF FFE7          	movff	indf2,indf1
 30833  003A74  4A2E               	infsnz	_outPipes,f,c	;volatile
 30834  003A76  2A2F               	incf	_outPipes+1,f,c	;volatile
 30835  003A78  2A12               	incf	USBCtrlTrfRxService@i,f,c
 30836  003A7A                     i2l8378:
 30837  003A7A  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 30838  003A7C  5C12               	subwf	USBCtrlTrfRxService@i,w,c
 30839  003A7E  A0D8               	btfss	status,0,c
 30840  003A80  D7EB               	goto	i2l8372
 30841                           
 30842                           ;usb_device.c: 1543: }
 30843                           ;usb_device.c: 1547: if(outPipes[0].wCount.Val > 0)
 30844  003A82  5032               	movf	_outPipes+4,w,c	;volatile
 30845  003A84  1033               	iorwf	_outPipes+5,w,c	;volatile
 30846  003A86  B4D8               	btfsc	status,2,c
 30847  003A88  D032               	goto	i2l8394
 30848                           
 30849                           ;usb_device.c: 1548: {
 30850                           ;usb_device.c: 1549: pBDTEntryEP0OutNext->CNT = 8;
 30851  003A8A  EE20 F001          	lfsr	2,1
 30852  003A8E  5046               	movf	_pBDTEntryEP0OutNext,w,c
 30853  003A90  26D9               	addwf	fsr2l,f,c
 30854  003A92  5047               	movf	_pBDTEntryEP0OutNext+1,w,c
 30855  003A94  22DA               	addwfc	fsr2h,f,c
 30856  003A96  0E08               	movlw	8
 30857  003A98  6EDF               	movwf	indf2,c
 30858                           
 30859                           ;usb_device.c: 1550: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 30860  003A9A  EE20 F002          	lfsr	2,2
 30861  003A9E  5046               	movf	_pBDTEntryEP0OutNext,w,c
 30862  003AA0  26D9               	addwf	fsr2l,f,c
 30863  003AA2  5047               	movf	_pBDTEntryEP0OutNext+1,w,c
 30864  003AA4  22DA               	addwfc	fsr2h,f,c
 30865  003AA6  0E38               	movlw	56
 30866  003AA8  6EDE               	movwf	postinc2,c
 30867  003AAA  0E04               	movlw	4
 30868  003AAC  6EDD               	movwf	postdec2,c
 30869                           
 30870                           ;usb_device.c: 1551: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 30871  003AAE  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 30872  003AB2  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 30873  003AB6  BCDF               	btfsc	indf2,6,c
 30874  003AB8  D00D               	goto	i2l8390
 30875                           
 30876                           ;usb_device.c: 1552: {
 30877                           ;usb_device.c: 1553: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 30878  003ABA  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30879  003ABE  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30880  003AC2  0E48               	movlw	72
 30881  003AC4  6EDF               	movwf	indf2,c
 30882                           
 30883                           ;usb_device.c: 1554: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 30884  003AC6  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30885  003ACA  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30886  003ACE  0E00               	movlw	0
 30887  003AD0  8EDB               	bsf	plusw2,7,c
 30888                           
 30889                           ;usb_device.c: 1555: }
 30890  003AD2  0012               	return	
 30891  003AD4                     i2l8390:
 30892                           
 30893                           ;usb_device.c: 1556: else
 30894                           ;usb_device.c: 1557: {
 30895                           ;usb_device.c: 1558: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 30896  003AD4  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30897  003AD8  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30898  003ADC  0E08               	movlw	8
 30899  003ADE  6EDF               	movwf	indf2,c
 30900                           
 30901                           ;usb_device.c: 1559: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 30902  003AE0  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30903  003AE4  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30904  003AE8  0E00               	movlw	0
 30905  003AEA  8EDB               	bsf	plusw2,7,c
 30906                           
 30907                           ;usb_device.c: 1560: }
 30908                           ;usb_device.c: 1561: }
 30909  003AEC  0012               	return	
 30910  003AEE                     i2l8394:
 30911                           
 30912                           ;usb_device.c: 1562: else
 30913                           ;usb_device.c: 1563: {
 30914                           ;usb_device.c: 1567: pBDTEntryEP0OutNext->CNT = 8;
 30915  003AEE  EE20 F001          	lfsr	2,1
 30916  003AF2  5046               	movf	_pBDTEntryEP0OutNext,w,c
 30917  003AF4  26D9               	addwf	fsr2l,f,c
 30918  003AF6  5047               	movf	_pBDTEntryEP0OutNext+1,w,c
 30919  003AF8  22DA               	addwfc	fsr2h,f,c
 30920  003AFA  0E08               	movlw	8
 30921  003AFC  6EDF               	movwf	indf2,c
 30922                           
 30923                           ;usb_device.c: 1568: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 30924  003AFE  EE20 F002          	lfsr	2,2
 30925  003B02  5046               	movf	_pBDTEntryEP0OutNext,w,c
 30926  003B04  26D9               	addwf	fsr2l,f,c
 30927  003B06  5047               	movf	_pBDTEntryEP0OutNext+1,w,c
 30928  003B08  22DA               	addwfc	fsr2h,f,c
 30929  003B0A  0E30               	movlw	48
 30930  003B0C  6EDE               	movwf	postinc2,c
 30931  003B0E  0E04               	movlw	4
 30932  003B10  6EDD               	movwf	postdec2,c
 30933                           
 30934                           ;usb_device.c: 1572: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 30935  003B12  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30936  003B16  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30937  003B1A  0E04               	movlw	4
 30938  003B1C  6EDF               	movwf	indf2,c
 30939                           
 30940                           ;usb_device.c: 1573: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 30941  003B1E  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30942  003B22  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30943  003B26  0E00               	movlw	0
 30944  003B28  8EDB               	bsf	plusw2,7,c
 30945                           
 30946                           ;usb_device.c: 1580: if(outPipes[0].pFunc != (0))
 30947  003B2A  5034               	movf	_outPipes+6,w,c	;volatile
 30948  003B2C  1035               	iorwf	_outPipes+7,w,c	;volatile
 30949  003B2E  B4D8               	btfsc	status,2,c
 30950  003B30  D00E               	goto	i2l8404
 30951                           
 30952                           ;usb_device.c: 1581: {
 30953                           ;usb_device.c: 1586: outPipes[0].pFunc();
 30954  003B32  EE20  F034         	lfsr	2,_outPipes+6	;volatile
 30955  003B36  D801               	call	i2u654_48
 30956  003B38  D00A               	goto	i2l8404
 30957  003B3A                     i2u654_48:
 30958  003B3A  0005               	push	
 30959  003B3C  6EFA               	movwf	pclath,c
 30960  003B3E  50DE               	movf	postinc2,w,c
 30961  003B40  6EFD               	movwf	tosl,c
 30962  003B42  50DE               	movf	postinc2,w,c
 30963  003B44  6EFE               	movwf	tosh,c
 30964  003B46  50F8               	movf	tblptru,w,c
 30965  003B48  6EFF               	movwf	tosu,c
 30966  003B4A  50FA               	movf	pclath,w,c
 30967  003B4C  0012               	return		;indir
 30968  003B4E                     i2l8404:
 30969                           
 30970                           ;usb_device.c: 1588: }
 30971                           ;usb_device.c: 1589: outPipes[0].info.bits.busy = 0;
 30972  003B4E  9E31               	bcf	_outPipes+3,7,c	;volatile
 30973                           
 30974                           ;usb_device.c: 1603: if(USBDeferStatusStagePacket == 0)
 30975  003B50  504E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 30976  003B52  A4D8               	btfss	status,2,c
 30977  003B54  0012               	return	
 30978                           
 30979                           ;usb_device.c: 1604: {
 30980                           ;usb_device.c: 1605: USBCtrlEPAllowStatusStage();
 30981  003B56  EC6E  F027         	call	_USBCtrlEPAllowStatusStage	;wreg free
 30982  003B5A  0012               	return	
 30983  003B5C                     __end_of_USBCtrlTrfRxService:
 30984                           	opt stack 0
 30985                           tosu	equ	0xFFF
 30986                           tosh	equ	0xFFE
 30987                           tosl	equ	0xFFD
 30988                           pclatu	equ	0xFFB
 30989                           pclath	equ	0xFFA
 30990                           tblptru	equ	0xFF8
 30991                           tblptrh	equ	0xFF7
 30992                           tblptrl	equ	0xFF6
 30993                           tablat	equ	0xFF5
 30994                           prodh	equ	0xFF4
 30995                           prodl	equ	0xFF3
 30996                           intcon	equ	0xFF2
 30997                           intcon3	equ	0xFF0
 30998                           indf0	equ	0xFEF
 30999                           postinc0	equ	0xFEE
 31000                           fsr0h	equ	0xFEA
 31001                           fsr0l	equ	0xFE9
 31002                           wreg	equ	0xFE8
 31003                           indf1	equ	0xFE7
 31004                           postdec1	equ	0xFE5
 31005                           fsr1h	equ	0xFE2
 31006                           fsr1l	equ	0xFE1
 31007                           indf2	equ	0xFDF
 31008                           postinc2	equ	0xFDE
 31009                           postdec2	equ	0xFDD
 31010                           plusw2	equ	0xFDB
 31011                           fsr2h	equ	0xFDA
 31012                           fsr2l	equ	0xFD9
 31013                           status	equ	0xFD8
 31014                           
 31015 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 31016 ;; Defined at:
 31017 ;;		line 1104 in file "../Includes/Usb/Framework/usb_device.c"
 31018 ;; Parameters:    Size  Location     Type
 31019 ;;		None
 31020 ;; Auto vars:     Size  Location     Type
 31021 ;;		None
 31022 ;; Return value:  Size  Location     Type
 31023 ;;		None               void
 31024 ;; Registers used:
 31025 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31026 ;; Tracked objects:
 31027 ;;		On entry : 0/0
 31028 ;;		On exit  : 0/0
 31029 ;;		Unchanged: 0/0
 31030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31031 ;;      Params:         0       0       0       0       0       0       0       0       0
 31032 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31033 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31034 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31035 ;;Total ram usage:        0 bytes
 31036 ;; Hardware stack levels used:    1
 31037 ;; This function calls:
 31038 ;;		Nothing
 31039 ;; This function is called by:
 31040 ;;		_USBDeviceTasks
 31041 ;;		_USBCtrlEPServiceComplete
 31042 ;;		_USBCtrlTrfRxService
 31043 ;; This function uses a non-reentrant model
 31044 ;;
 31045                           
 31046                           	psect	text129
 31047  004EDC                     __ptext129:
 31048                           	opt stack 0
 31049  004EDC                     _USBCtrlEPAllowStatusStage:
 31050                           	opt stack 16
 31051                           
 31052                           ;usb_device.c: 1111: if(USBStatusStageEnabledFlag1 == 0)
 31053                           
 31054                           ;incstack = 0
 31055  004EDC  0100               	movlb	0	; () banked
 31056  004EDE  51D3               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 31057  004EE0  A4D8               	btfss	status,2,c
 31058  004EE2  0012               	return	
 31059                           
 31060                           ; BSR set to: 0
 31061                           ;usb_device.c: 1112: {
 31062                           ;usb_device.c: 1113: USBStatusStageEnabledFlag1 = 1;
 31063  004EE4  0E01               	movlw	1
 31064  004EE6  0100               	movlb	0	; () banked
 31065  004EE8  6FD3               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 31066                           
 31067                           ;usb_device.c: 1114: if(USBStatusStageEnabledFlag2 == 0)
 31068  004EEA  0100               	movlb	0	; () banked
 31069  004EEC  51D4               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 31070  004EEE  A4D8               	btfss	status,2,c
 31071  004EF0  0012               	return	
 31072                           
 31073                           ; BSR set to: 0
 31074                           ;usb_device.c: 1115: {
 31075                           ;usb_device.c: 1116: USBStatusStageEnabledFlag2 = 1;
 31076  004EF2  0E01               	movlw	1
 31077  004EF4  0100               	movlb	0	; () banked
 31078  004EF6  6FD4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 31079                           
 31080                           ; BSR set to: 0
 31081                           ;usb_device.c: 1120: if(controlTransferState == 2)
 31082  004EF8  0E02               	movlw	2
 31083  004EFA  1851               	xorwf	_controlTransferState,w,c	;volatile
 31084  004EFC  A4D8               	btfss	status,2,c
 31085  004EFE  D015               	goto	i2l7916
 31086                           
 31087                           ; BSR set to: 0
 31088                           ;usb_device.c: 1121: {
 31089                           ;usb_device.c: 1122: pBDTEntryIn[0]->CNT = 0;
 31090  004F00  EE20 F001          	lfsr	2,1
 31091  004F04  503C               	movf	_pBDTEntryIn,w,c
 31092  004F06  26D9               	addwf	fsr2l,f,c
 31093  004F08  503D               	movf	_pBDTEntryIn+1,w,c
 31094  004F0A  22DA               	addwfc	fsr2h,f,c
 31095  004F0C  0E00               	movlw	0
 31096  004F0E  6EDF               	movwf	indf2,c
 31097                           
 31098                           ; BSR set to: 0
 31099                           ;usb_device.c: 1123: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 31100  004F10  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 31101  004F14  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31102  004F18  0E48               	movlw	72
 31103  004F1A  6EDF               	movwf	indf2,c
 31104                           
 31105                           ; BSR set to: 0
 31106                           ;usb_device.c: 1124: pBDTEntryIn[0]->STAT.Val |= 0x80;
 31107  004F1C  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 31108  004F20  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31109  004F24  0E00               	movlw	0
 31110  004F26  8EDB               	bsf	plusw2,7,c
 31111                           
 31112                           ;usb_device.c: 1125: }
 31113  004F28  0012               	return	
 31114  004F2A                     i2l7916:
 31115                           
 31116                           ; BSR set to: 0
 31117                           ;usb_device.c: 1126: else if(controlTransferState == 1)
 31118  004F2A  0451               	decf	_controlTransferState,w,c	;volatile
 31119  004F2C  A4D8               	btfss	status,2,c
 31120  004F2E  0012               	return	
 31121                           
 31122                           ; BSR set to: 0
 31123                           ;usb_device.c: 1127: {
 31124                           ;usb_device.c: 1128: BothEP0OutUOWNsSet = 0;
 31125  004F30  0E00               	movlw	0
 31126  004F32  0100               	movlb	0	; () banked
 31127  004F34  6FCD               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 31128                           
 31129                           ; BSR set to: 0
 31130                           ;usb_device.c: 1132: pBDTEntryEP0OutCurrent->CNT = 8;
 31131  004F36  EE20 F001          	lfsr	2,1
 31132  004F3A  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 31133  004F3C  26D9               	addwf	fsr2l,f,c
 31134  004F3E  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 31135  004F40  22DA               	addwfc	fsr2h,f,c
 31136  004F42  0E08               	movlw	8
 31137  004F44  6EDF               	movwf	indf2,c
 31138                           
 31139                           ; BSR set to: 0
 31140                           ;usb_device.c: 1133: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 31141  004F46  EE20 F002          	lfsr	2,2
 31142  004F4A  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 31143  004F4C  26D9               	addwf	fsr2l,f,c
 31144  004F4E  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 31145  004F50  22DA               	addwfc	fsr2h,f,c
 31146  004F52  0E30               	movlw	48
 31147  004F54  6EDE               	movwf	postinc2,c
 31148  004F56  0E04               	movlw	4
 31149  004F58  6EDD               	movwf	postdec2,c
 31150                           
 31151                           ; BSR set to: 0
 31152                           ;usb_device.c: 1134: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 31153  004F5A  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 31154  004F5E  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 31155  004F62  0E04               	movlw	4
 31156  004F64  6EDF               	movwf	indf2,c
 31157                           
 31158                           ; BSR set to: 0
 31159                           ;usb_device.c: 1135: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 31160  004F66  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 31161  004F6A  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 31162  004F6E  0E00               	movlw	0
 31163  004F70  8EDB               	bsf	plusw2,7,c
 31164                           
 31165                           ; BSR set to: 0
 31166                           ;usb_device.c: 1136: BothEP0OutUOWNsSet = 1;
 31167  004F72  0E01               	movlw	1
 31168  004F74  0100               	movlb	0	; () banked
 31169  004F76  6FCD               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 31170                           
 31171                           ; BSR set to: 0
 31172                           ;usb_device.c: 1139: pBDTEntryEP0OutNext->CNT = 8;
 31173  004F78  EE20 F001          	lfsr	2,1
 31174  004F7C  5046               	movf	_pBDTEntryEP0OutNext,w,c
 31175  004F7E  26D9               	addwf	fsr2l,f,c
 31176  004F80  5047               	movf	_pBDTEntryEP0OutNext+1,w,c
 31177  004F82  22DA               	addwfc	fsr2h,f,c
 31178  004F84  0E08               	movlw	8
 31179  004F86  6EDF               	movwf	indf2,c
 31180                           
 31181                           ; BSR set to: 0
 31182                           ;usb_device.c: 1140: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 31183  004F88  EE20 F002          	lfsr	2,2
 31184  004F8C  5046               	movf	_pBDTEntryEP0OutNext,w,c
 31185  004F8E  26D9               	addwf	fsr2l,f,c
 31186  004F90  5047               	movf	_pBDTEntryEP0OutNext+1,w,c
 31187  004F92  22DA               	addwfc	fsr2h,f,c
 31188  004F94  0E30               	movlw	48
 31189  004F96  6EDE               	movwf	postinc2,c
 31190  004F98  0E04               	movlw	4
 31191  004F9A  6EDD               	movwf	postdec2,c
 31192                           
 31193                           ; BSR set to: 0
 31194                           ;usb_device.c: 1141: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 31195  004F9C  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 31196  004FA0  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 31197  004FA4  0E80               	movlw	128
 31198  004FA6  6EDF               	movwf	indf2,c
 31199                           
 31200                           ; BSR set to: 0
 31201                           
 31202                           ; BSR set to: 0
 31203                           
 31204                           ; BSR set to: 0
 31205  004FA8  0012               	return	
 31206  004FAA                     __end_of_USBCtrlEPAllowStatusStage:
 31207                           	opt stack 0
 31208                           tosu	equ	0xFFF
 31209                           tosh	equ	0xFFE
 31210                           tosl	equ	0xFFD
 31211                           pclatu	equ	0xFFB
 31212                           pclath	equ	0xFFA
 31213                           tblptru	equ	0xFF8
 31214                           tblptrh	equ	0xFF7
 31215                           tblptrl	equ	0xFF6
 31216                           tablat	equ	0xFF5
 31217                           prodh	equ	0xFF4
 31218                           prodl	equ	0xFF3
 31219                           intcon	equ	0xFF2
 31220                           intcon3	equ	0xFF0
 31221                           indf0	equ	0xFEF
 31222                           postinc0	equ	0xFEE
 31223                           fsr0h	equ	0xFEA
 31224                           fsr0l	equ	0xFE9
 31225                           wreg	equ	0xFE8
 31226                           indf1	equ	0xFE7
 31227                           postdec1	equ	0xFE5
 31228                           fsr1h	equ	0xFE2
 31229                           fsr1l	equ	0xFE1
 31230                           indf2	equ	0xFDF
 31231                           postinc2	equ	0xFDE
 31232                           postdec2	equ	0xFDD
 31233                           plusw2	equ	0xFDB
 31234                           fsr2h	equ	0xFDA
 31235                           fsr2l	equ	0xFD9
 31236                           status	equ	0xFD8
 31237                           
 31238 ;; *************** function _USBCtrlTrfInHandler *****************
 31239 ;; Defined at:
 31240 ;;		line 2223 in file "../Includes/Usb/Framework/usb_device.c"
 31241 ;; Parameters:    Size  Location     Type
 31242 ;;		None
 31243 ;; Auto vars:     Size  Location     Type
 31244 ;;  lastDTS         1   17[COMRAM] unsigned char 
 31245 ;; Return value:  Size  Location     Type
 31246 ;;		None               void
 31247 ;; Registers used:
 31248 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 31249 ;; Tracked objects:
 31250 ;;		On entry : 0/0
 31251 ;;		On exit  : 0/0
 31252 ;;		Unchanged: 0/0
 31253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31254 ;;      Params:         0       0       0       0       0       0       0       0       0
 31255 ;;      Locals:         1       0       0       0       0       0       0       0       0
 31256 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31257 ;;      Totals:         1       0       0       0       0       0       0       0       0
 31258 ;;Total ram usage:        1 bytes
 31259 ;; Hardware stack levels used:    1
 31260 ;; Hardware stack levels required when called:    2
 31261 ;; This function calls:
 31262 ;;		_USART_mySetLineCodingHandler
 31263 ;;		_USBCtrlTrfTxService
 31264 ;; This function is called by:
 31265 ;;		_USBCtrlEPService
 31266 ;; This function uses a non-reentrant model
 31267 ;;
 31268                           
 31269                           	psect	text130
 31270  004820                     __ptext130:
 31271                           	opt stack 0
 31272  004820                     _USBCtrlTrfInHandler:
 31273                           	opt stack 16
 31274                           
 31275                           ;usb_device.c: 2225: uint8_t lastDTS;
 31276                           ;usb_device.c: 2227: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 31277                           
 31278                           ; BSR set to: 0
 31279                           ;incstack = 0
 31280  004820  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 31281  004824  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31282  004828  0E00               	movlw	0
 31283  00482A  BCDF               	btfsc	indf2,6,c
 31284  00482C  0E01               	movlw	1
 31285  00482E  6E12               	movwf	USBCtrlTrfInHandler@lastDTS,c
 31286                           
 31287                           ;usb_device.c: 2230: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 31288  004830  0E04               	movlw	4
 31289  004832  1A3C               	xorwf	_pBDTEntryIn,f,c
 31290                           
 31291                           ;usb_device.c: 2235: if(USBDeviceState == ADR_PENDING_STATE)
 31292  004834  0E08               	movlw	8
 31293  004836  0100               	movlb	0	; () banked
 31294  004838  19D2               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 31295  00483A  A4D8               	btfss	status,2,c
 31296  00483C  D00C               	goto	i2l9788
 31297                           
 31298                           ; BSR set to: 0
 31299                           ;usb_device.c: 2236: {
 31300                           ;usb_device.c: 2237: UADDR = (SetupPkt.bDevADR & 0x7F);
 31301  00483E  0104               	movlb	4	; () banked
 31302  004840  5132               	movf	50,w,b	;volatile
 31303  004842  0B7F               	andlw	127
 31304  004844  6E63               	movwf	3939,c	;volatile
 31305                           
 31306                           ; BSR set to: 4
 31307                           ;usb_device.c: 2238: if(UADDR != 0u)
 31308  004846  5063               	movf	3939,w,c	;volatile
 31309  004848  B4D8               	btfsc	status,2,c
 31310  00484A  D002               	goto	i2l9786
 31311                           
 31312                           ; BSR set to: 4
 31313                           ;usb_device.c: 2239: {
 31314                           ;usb_device.c: 2240: USBDeviceState=ADDRESS_STATE;
 31315  00484C  0E10               	movlw	16
 31316  00484E  D001               	goto	L35
 31317  004850                     i2l9786:
 31318                           
 31319                           ;usb_device.c: 2242: else
 31320                           ;usb_device.c: 2243: {
 31321                           ;usb_device.c: 2244: USBDeviceState=DEFAULT_STATE;
 31322  004850  0E04               	movlw	4
 31323  004852                     L35:
 31324  004852  0100               	movlb	0	; () banked
 31325  004854  6FD2               	movwf	_USBDeviceState& (0+255),b	;volatile
 31326  004856                     i2l9788:
 31327                           
 31328                           ; BSR set to: 0
 31329                           ;usb_device.c: 2245: }
 31330                           ;usb_device.c: 2246: }
 31331                           ;usb_device.c: 2249: if(controlTransferState == 1)
 31332  004856  0451               	decf	_controlTransferState,w,c	;volatile
 31333  004858  A4D8               	btfss	status,2,c
 31334  00485A  D03A               	goto	i2l1911
 31335                           
 31336                           ; BSR set to: 0
 31337                           ;usb_device.c: 2250: {
 31338                           ;usb_device.c: 2251: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 31339  00485C  EE20 F002          	lfsr	2,2
 31340  004860  503C               	movf	_pBDTEntryIn,w,c
 31341  004862  26D9               	addwf	fsr2l,f,c
 31342  004864  503D               	movf	_pBDTEntryIn+1,w,c
 31343  004866  22DA               	addwfc	fsr2h,f,c
 31344  004868  0E38               	movlw	56
 31345  00486A  6EDE               	movwf	postinc2,c
 31346  00486C  0E04               	movlw	4
 31347  00486E  6EDD               	movwf	postdec2,c
 31348                           
 31349                           ; BSR set to: 0
 31350                           ;usb_device.c: 2252: USBCtrlTrfTxService();
 31351  004870  ECD5  F027         	call	_USBCtrlTrfTxService	;wreg free
 31352                           
 31353                           ;usb_device.c: 2258: if(shortPacketStatus == 2)
 31354  004874  0E02               	movlw	2
 31355  004876  1857               	xorwf	_shortPacketStatus,w,c	;volatile
 31356  004878  A4D8               	btfss	status,2,c
 31357  00487A  D00D               	goto	i2l9800
 31358                           
 31359                           ;usb_device.c: 2259: {
 31360                           ;usb_device.c: 2262: pBDTEntryIn[0]->STAT.Val = 0x04;
 31361  00487C  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 31362  004880  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31363  004884  0E04               	movlw	4
 31364  004886  6EDF               	movwf	indf2,c
 31365                           
 31366                           ;usb_device.c: 2263: pBDTEntryIn[0]->STAT.Val |= 0x80;
 31367  004888  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 31368  00488C  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31369  004890  0E00               	movlw	0
 31370  004892  8EDB               	bsf	plusw2,7,c
 31371                           
 31372                           ;usb_device.c: 2264: }
 31373  004894  0012               	return	
 31374  004896                     i2l9800:
 31375                           
 31376                           ;usb_device.c: 2265: else
 31377                           ;usb_device.c: 2266: {
 31378                           ;usb_device.c: 2267: if(lastDTS == 0)
 31379  004896  5012               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 31380  004898  A4D8               	btfss	status,2,c
 31381  00489A  D00D               	goto	i2l9806
 31382                           
 31383                           ;usb_device.c: 2268: {
 31384                           ;usb_device.c: 2269: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 31385  00489C  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 31386  0048A0  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31387  0048A4  0E48               	movlw	72
 31388  0048A6  6EDF               	movwf	indf2,c
 31389                           
 31390                           ;usb_device.c: 2270: pBDTEntryIn[0]->STAT.Val |= 0x80;
 31391  0048A8  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 31392  0048AC  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31393  0048B0  0E00               	movlw	0
 31394  0048B2  8EDB               	bsf	plusw2,7,c
 31395                           
 31396                           ;usb_device.c: 2271: }
 31397  0048B4  0012               	return	
 31398  0048B6                     i2l9806:
 31399                           
 31400                           ;usb_device.c: 2272: else
 31401                           ;usb_device.c: 2273: {
 31402                           ;usb_device.c: 2274: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 31403  0048B6  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 31404  0048BA  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31405  0048BE  0E08               	movlw	8
 31406  0048C0  6EDF               	movwf	indf2,c
 31407                           
 31408                           ;usb_device.c: 2275: pBDTEntryIn[0]->STAT.Val |= 0x80;
 31409  0048C2  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 31410  0048C6  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31411  0048CA  0E00               	movlw	0
 31412  0048CC  8EDB               	bsf	plusw2,7,c
 31413                           
 31414                           ;usb_device.c: 2276: }
 31415                           ;usb_device.c: 2277: }
 31416                           ;usb_device.c: 2278: }
 31417  0048CE  0012               	return	
 31418  0048D0                     i2l1911:
 31419                           
 31420                           ; BSR set to: 0
 31421                           ;usb_device.c: 2279: else
 31422                           ;usb_device.c: 2280: {
 31423                           ;usb_device.c: 2284: if(outPipes[0].info.bits.busy == 1)
 31424  0048D0  AE31               	btfss	_outPipes+3,7,c	;volatile
 31425  0048D2  D013               	goto	i2l9816
 31426                           
 31427                           ; BSR set to: 0
 31428                           ;usb_device.c: 2285: {
 31429                           ;usb_device.c: 2286: if(outPipes[0].pFunc != (0))
 31430  0048D4  5034               	movf	_outPipes+6,w,c	;volatile
 31431  0048D6  1035               	iorwf	_outPipes+7,w,c	;volatile
 31432  0048D8  B4D8               	btfsc	status,2,c
 31433  0048DA  D00E               	goto	i2l9814
 31434                           
 31435                           ; BSR set to: 0
 31436                           ;usb_device.c: 2287: {
 31437                           ;usb_device.c: 2288: outPipes[0].pFunc();
 31438  0048DC  EE20  F034         	lfsr	2,_outPipes+6	;volatile
 31439  0048E0  D801               	call	i2u840_48
 31440  0048E2  D00A               	goto	i2l9814
 31441  0048E4                     i2u840_48:
 31442  0048E4  0005               	push	
 31443  0048E6  6EFA               	movwf	pclath,c
 31444  0048E8  50DE               	movf	postinc2,w,c
 31445  0048EA  6EFD               	movwf	tosl,c
 31446  0048EC  50DE               	movf	postinc2,w,c
 31447  0048EE  6EFE               	movwf	tosh,c
 31448  0048F0  50F8               	movf	tblptru,w,c
 31449  0048F2  6EFF               	movwf	tosu,c
 31450  0048F4  50FA               	movf	pclath,w,c
 31451  0048F6  0012               	return		;indir
 31452  0048F8                     i2l9814:
 31453                           
 31454                           ;usb_device.c: 2289: }
 31455                           ;usb_device.c: 2290: outPipes[0].info.bits.busy = 0;
 31456  0048F8  9E31               	bcf	_outPipes+3,7,c	;volatile
 31457  0048FA                     i2l9816:
 31458                           
 31459                           ;usb_device.c: 2291: }
 31460                           ;usb_device.c: 2293: controlTransferState = 0;
 31461  0048FA  0E00               	movlw	0
 31462  0048FC  6E51               	movwf	_controlTransferState,c	;volatile
 31463  0048FE  0012               	return	
 31464  004900                     __end_of_USBCtrlTrfInHandler:
 31465                           	opt stack 0
 31466                           tosu	equ	0xFFF
 31467                           tosh	equ	0xFFE
 31468                           tosl	equ	0xFFD
 31469                           pclatu	equ	0xFFB
 31470                           pclath	equ	0xFFA
 31471                           tblptru	equ	0xFF8
 31472                           tblptrh	equ	0xFF7
 31473                           tblptrl	equ	0xFF6
 31474                           tablat	equ	0xFF5
 31475                           prodh	equ	0xFF4
 31476                           prodl	equ	0xFF3
 31477                           intcon	equ	0xFF2
 31478                           intcon3	equ	0xFF0
 31479                           indf0	equ	0xFEF
 31480                           postinc0	equ	0xFEE
 31481                           fsr0h	equ	0xFEA
 31482                           fsr0l	equ	0xFE9
 31483                           wreg	equ	0xFE8
 31484                           indf1	equ	0xFE7
 31485                           postdec1	equ	0xFE5
 31486                           fsr1h	equ	0xFE2
 31487                           fsr1l	equ	0xFE1
 31488                           indf2	equ	0xFDF
 31489                           postinc2	equ	0xFDE
 31490                           postdec2	equ	0xFDD
 31491                           plusw2	equ	0xFDB
 31492                           fsr2h	equ	0xFDA
 31493                           fsr2l	equ	0xFD9
 31494                           status	equ	0xFD8
 31495                           
 31496 ;; *************** function _USBCtrlTrfTxService *****************
 31497 ;; Defined at:
 31498 ;;		line 1437 in file "../Includes/Usb/Framework/usb_device.c"
 31499 ;; Parameters:    Size  Location     Type
 31500 ;;		None
 31501 ;; Auto vars:     Size  Location     Type
 31502 ;;  byteToSend      1    0[COMRAM] unsigned char 
 31503 ;; Return value:  Size  Location     Type
 31504 ;;		None               void
 31505 ;; Registers used:
 31506 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 31507 ;; Tracked objects:
 31508 ;;		On entry : 0/0
 31509 ;;		On exit  : 0/0
 31510 ;;		Unchanged: 0/0
 31511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31512 ;;      Params:         0       0       0       0       0       0       0       0       0
 31513 ;;      Locals:         1       0       0       0       0       0       0       0       0
 31514 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31515 ;;      Totals:         1       0       0       0       0       0       0       0       0
 31516 ;;Total ram usage:        1 bytes
 31517 ;; Hardware stack levels used:    1
 31518 ;; This function calls:
 31519 ;;		Nothing
 31520 ;; This function is called by:
 31521 ;;		_USBCtrlEPAllowDataStage
 31522 ;;		_USBCtrlTrfInHandler
 31523 ;; This function uses a non-reentrant model
 31524 ;;
 31525                           
 31526                           	psect	text131
 31527  004FAA                     __ptext131:
 31528                           	opt stack 0
 31529  004FAA                     _USBCtrlTrfTxService:
 31530                           	opt stack 15
 31531                           
 31532                           ;usb_device.c: 1439: uint8_t byteToSend;
 31533                           ;usb_device.c: 1443: byteToSend = 8;
 31534                           
 31535                           ;incstack = 0
 31536  004FAA  0E08               	movlw	8
 31537  004FAC  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 31538                           
 31539                           ;usb_device.c: 1444: if(inPipes[0].wCount.Val < (uint8_t)8)
 31540  004FAE  503B               	movf	_inPipes+5,w,c	;volatile
 31541  004FB0  E110               	bnz	i2l7734
 31542  004FB2  0E08               	movlw	8
 31543  004FB4  5C3A               	subwf	_inPipes+4,w,c	;volatile
 31544  004FB6  B0D8               	btfsc	status,0,c
 31545  004FB8  D00C               	goto	i2l7734
 31546                           
 31547                           ;usb_device.c: 1445: {
 31548                           ;usb_device.c: 1446: byteToSend = inPipes[0].wCount.Val;
 31549  004FBA  C03A  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 31550                           
 31551                           ;usb_device.c: 1453: if(shortPacketStatus == 0)
 31552  004FBE  5057               	movf	_shortPacketStatus,w,c	;volatile
 31553  004FC0  A4D8               	btfss	status,2,c
 31554  004FC2  D002               	goto	i2l7730
 31555                           
 31556                           ;usb_device.c: 1454: {
 31557                           ;usb_device.c: 1455: shortPacketStatus = 1;
 31558  004FC4  0E01               	movlw	1
 31559  004FC6  D004               	goto	L36
 31560  004FC8                     i2l7730:
 31561                           
 31562                           ;usb_device.c: 1457: else if(shortPacketStatus == 1)
 31563  004FC8  0457               	decf	_shortPacketStatus,w,c	;volatile
 31564  004FCA  A4D8               	btfss	status,2,c
 31565  004FCC  D002               	goto	i2l7734
 31566                           
 31567                           ;usb_device.c: 1458: {
 31568                           ;usb_device.c: 1459: shortPacketStatus = 2;
 31569  004FCE  0E02               	movlw	2
 31570  004FD0                     L36:
 31571  004FD0  6E57               	movwf	_shortPacketStatus,c	;volatile
 31572  004FD2                     i2l7734:
 31573                           
 31574                           ;usb_device.c: 1460: }
 31575                           ;usb_device.c: 1461: }
 31576                           ;usb_device.c: 1465: inPipes[0].wCount.Val -= byteToSend;
 31577  004FD2  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 31578  004FD4  5E3A               	subwf	_inPipes+4,f,c	;volatile
 31579  004FD6  0E00               	movlw	0
 31580  004FD8  5A3B               	subwfb	_inPipes+5,f,c	;volatile
 31581                           
 31582                           ;usb_device.c: 1470: pBDTEntryIn[0]->CNT = byteToSend;
 31583  004FDA  EE20 F001          	lfsr	2,1
 31584  004FDE  503C               	movf	_pBDTEntryIn,w,c
 31585  004FE0  26D9               	addwf	fsr2l,f,c
 31586  004FE2  503D               	movf	_pBDTEntryIn+1,w,c
 31587  004FE4  22DA               	addwfc	fsr2h,f,c
 31588  004FE6  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 31589                           
 31590                           ;usb_device.c: 1474: pDst = (volatile uint8_t*)CtrlTrfData;
 31591  004FEA  0E38               	movlw	56
 31592  004FEC  0100               	movlb	0	; () banked
 31593  004FEE  6FC3               	movwf	_pDst& (0+255),b
 31594  004FF0  0E04               	movlw	4
 31595  004FF2  0100               	movlb	0	; () banked
 31596  004FF4  6FC4               	movwf	(_pDst+1)& (0+255),b
 31597                           
 31598                           ; BSR set to: 0
 31599                           ;usb_device.c: 1475: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 31600  004FF6  A039               	btfss	_inPipes+3,0,c	;volatile
 31601  004FF8  D01C               	goto	i2l7752
 31602  004FFA  D03A               	goto	i2l7762
 31603  004FFC                     i2l7744:
 31604                           
 31605                           ; BSR set to: 0
 31606                           ;usb_device.c: 1478: {
 31607                           ;usb_device.c: 1479: *pDst++ = *inPipes[0].pSrc.bRom++;
 31608  004FFC  C036  FFF6         	movff	_inPipes,tblptrl	;volatile
 31609  005000  C037  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 31610  005004  6AF8               	clrf	tblptru,c
 31611  005006  C0C3  FFD9         	movff	_pDst,fsr2l
 31612  00500A  C0C4  FFDA         	movff	_pDst+1,fsr2h
 31613  00500E  0E07               	movlw	(high __ramtop+-1)
 31614  005010  64F7               	cpfsgt	tblptrh,c
 31615  005012  D003               	bra	i2u566_47
 31616  005014  0008               	tblrd		*
 31617  005016  50F5               	movf	tablat,w,c
 31618  005018  D005               	bra	i2u566_40
 31619  00501A                     i2u566_47:
 31620  00501A  CFF6 FFE9          	movff	tblptrl,fsr0l
 31621  00501E  CFF7 FFEA          	movff	tblptrh,fsr0h
 31622  005022  50EF               	movf	indf0,w,c
 31623  005024                     i2u566_40:
 31624  005024  6EDF               	movwf	indf2,c
 31625  005026  4A36               	infsnz	_inPipes,f,c	;volatile
 31626  005028  2A37               	incf	_inPipes+1,f,c	;volatile
 31627  00502A  0100               	movlb	0	; () banked
 31628  00502C  4BC3               	infsnz	_pDst& (0+255),f,b
 31629  00502E  2BC4               	incf	(_pDst+1)& (0+255),f,b
 31630                           
 31631                           ; BSR set to: 0
 31632                           ;usb_device.c: 1480: byteToSend--;
 31633  005030  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 31634  005032                     i2l7752:
 31635                           
 31636                           ; BSR set to: 0
 31637  005032  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 31638  005034  B4D8               	btfsc	status,2,c
 31639  005036  0012               	return	
 31640  005038  D7E1               	goto	i2l7744
 31641  00503A                     i2l7754:
 31642                           
 31643                           ; BSR set to: 0
 31644                           ;usb_device.c: 1486: {
 31645                           ;usb_device.c: 1487: *pDst++ = *inPipes[0].pSrc.bRam++;
 31646  00503A  C036  FFF6         	movff	_inPipes,tblptrl	;volatile
 31647  00503E  C037  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 31648  005042  6AF8               	clrf	tblptru,c
 31649  005044  C0C3  FFD9         	movff	_pDst,fsr2l
 31650  005048  C0C4  FFDA         	movff	_pDst+1,fsr2h
 31651  00504C  0E07               	movlw	(high __ramtop+-1)
 31652  00504E  64F7               	cpfsgt	tblptrh,c
 31653  005050  D003               	bra	i2u568_47
 31654  005052  0008               	tblrd		*
 31655  005054  50F5               	movf	tablat,w,c
 31656  005056  D005               	bra	i2u568_40
 31657  005058                     i2u568_47:
 31658  005058  CFF6 FFE9          	movff	tblptrl,fsr0l
 31659  00505C  CFF7 FFEA          	movff	tblptrh,fsr0h
 31660  005060  50EF               	movf	indf0,w,c
 31661  005062                     i2u568_40:
 31662  005062  6EDF               	movwf	indf2,c
 31663  005064  4A36               	infsnz	_inPipes,f,c	;volatile
 31664  005066  2A37               	incf	_inPipes+1,f,c	;volatile
 31665  005068  0100               	movlb	0	; () banked
 31666  00506A  4BC3               	infsnz	_pDst& (0+255),f,b
 31667  00506C  2BC4               	incf	(_pDst+1)& (0+255),f,b
 31668                           
 31669                           ; BSR set to: 0
 31670                           ;usb_device.c: 1488: byteToSend--;
 31671  00506E  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 31672  005070                     i2l7762:
 31673                           
 31674                           ; BSR set to: 0
 31675  005070  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 31676  005072  B4D8               	btfsc	status,2,c
 31677  005074  0012               	return	
 31678  005076  D7E1               	goto	i2l7754
 31679  005078                     __end_of_USBCtrlTrfTxService:
 31680                           	opt stack 0
 31681                           tosu	equ	0xFFF
 31682                           tosh	equ	0xFFE
 31683                           tosl	equ	0xFFD
 31684                           pclatu	equ	0xFFB
 31685                           pclath	equ	0xFFA
 31686                           tblptru	equ	0xFF8
 31687                           tblptrh	equ	0xFF7
 31688                           tblptrl	equ	0xFF6
 31689                           tablat	equ	0xFF5
 31690                           prodh	equ	0xFF4
 31691                           prodl	equ	0xFF3
 31692                           intcon	equ	0xFF2
 31693                           intcon3	equ	0xFF0
 31694                           indf0	equ	0xFEF
 31695                           postinc0	equ	0xFEE
 31696                           fsr0h	equ	0xFEA
 31697                           fsr0l	equ	0xFE9
 31698                           wreg	equ	0xFE8
 31699                           indf1	equ	0xFE7
 31700                           postdec1	equ	0xFE5
 31701                           fsr1h	equ	0xFE2
 31702                           fsr1l	equ	0xFE1
 31703                           indf2	equ	0xFDF
 31704                           postinc2	equ	0xFDE
 31705                           postdec2	equ	0xFDD
 31706                           plusw2	equ	0xFDB
 31707                           fsr2h	equ	0xFDA
 31708                           fsr2l	equ	0xFD9
 31709                           status	equ	0xFD8
 31710                           
 31711 ;; *************** function _USART_mySetLineCodingHandler *****************
 31712 ;; Defined at:
 31713 ;;		line 273 in file "../Includes/Board/USBapp.c"
 31714 ;; Parameters:    Size  Location     Type
 31715 ;;		None
 31716 ;; Auto vars:     Size  Location     Type
 31717 ;;  dwBaud          4   13[COMRAM] unsigned long 
 31718 ;; Return value:  Size  Location     Type
 31719 ;;		None               void
 31720 ;; Registers used:
 31721 ;;		wreg, status,2, status,0, cstack
 31722 ;; Tracked objects:
 31723 ;;		On entry : 0/0
 31724 ;;		On exit  : 0/0
 31725 ;;		Unchanged: 0/0
 31726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31727 ;;      Params:         0       0       0       0       0       0       0       0       0
 31728 ;;      Locals:         4       0       0       0       0       0       0       0       0
 31729 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31730 ;;      Totals:         4       0       0       0       0       0       0       0       0
 31731 ;;Total ram usage:        4 bytes
 31732 ;; Hardware stack levels used:    1
 31733 ;; Hardware stack levels required when called:    1
 31734 ;; This function calls:
 31735 ;;		___lldiv
 31736 ;;		i2_EUSART_Initialize
 31737 ;; This function is called by:
 31738 ;;		_USBCheckCDCRequest
 31739 ;;		_USBCtrlTrfRxService
 31740 ;;		_USBCtrlTrfInHandler
 31741 ;; This function uses a non-reentrant model
 31742 ;;
 31743                           
 31744                           	psect	text132
 31745  006192                     __ptext132:
 31746                           	opt stack 0
 31747  006192                     _USART_mySetLineCodingHandler:
 31748                           	opt stack 15
 31749                           
 31750                           ;USBapp.c: 276: {line_coding.dwDTERate=cdc_notice.GetLineCoding.dwDTERate;};
 31751                           
 31752                           ; BSR set to: 0
 31753                           ;incstack = 0
 31754  006192  C1C6  F1D8         	movff	_cdc_notice,_line_coding
 31755  006196  C1C7  F1D9         	movff	_cdc_notice+1,_line_coding+1
 31756  00619A  C1C8  F1DA         	movff	_cdc_notice+2,_line_coding+2
 31757  00619E  C1C9  F1DB         	movff	_cdc_notice+3,_line_coding+3
 31758                           
 31759                           ;USBapp.c: 278: uint32_t dwBaud;
 31760                           ;USBapp.c: 279: dwBaud = ((48000000/4) / line_coding.dwDTERate) - 1;
 31761  0061A2  0E00               	movlw	0
 31762  0061A4  6E01               	movwf	___lldiv@dividend,c
 31763  0061A6  0E1B               	movlw	27
 31764  0061A8  6E02               	movwf	___lldiv@dividend+1,c
 31765  0061AA  0EB7               	movlw	183
 31766  0061AC  6E03               	movwf	___lldiv@dividend+2,c
 31767  0061AE  0E00               	movlw	0
 31768  0061B0  6E04               	movwf	___lldiv@dividend+3,c
 31769  0061B2  C1D8  F005         	movff	_line_coding,___lldiv@divisor
 31770  0061B6  C1D9  F006         	movff	_line_coding+1,___lldiv@divisor+1
 31771  0061BA  C1DA  F007         	movff	_line_coding+2,___lldiv@divisor+2
 31772  0061BE  C1DB  F008         	movff	_line_coding+3,___lldiv@divisor+3
 31773  0061C2  ECF3  F02C         	call	___lldiv	;wreg free
 31774  0061C6  0EFF               	movlw	255
 31775  0061C8  2401               	addwf	?___lldiv,w,c
 31776  0061CA  6E0E               	movwf	USART_mySetLineCodingHandler@dwBaud,c
 31777  0061CC  0EFF               	movlw	255
 31778  0061CE  2002               	addwfc	?___lldiv+1,w,c
 31779  0061D0  6E0F               	movwf	USART_mySetLineCodingHandler@dwBaud+1,c
 31780  0061D2  0EFF               	movlw	255
 31781  0061D4  2003               	addwfc	?___lldiv+2,w,c
 31782  0061D6  6E10               	movwf	USART_mySetLineCodingHandler@dwBaud+2,c
 31783  0061D8  0EFF               	movlw	255
 31784  0061DA  2004               	addwfc	?___lldiv+3,w,c
 31785  0061DC  6E11               	movwf	USART_mySetLineCodingHandler@dwBaud+3,c
 31786                           
 31787                           ;USBapp.c: 280: SPBRG = (uint8_t) dwBaud;
 31788  0061DE  C00E  FFAF         	movff	USART_mySetLineCodingHandler@dwBaud,4015	;volatile
 31789                           
 31790                           ;USBapp.c: 281: SPBRGH = (uint8_t)((uint16_t) (dwBaud >> 8));
 31791  0061E2  C00F  FFB0         	movff	USART_mySetLineCodingHandler@dwBaud+1,4016	;volatile
 31792                           
 31793                           ;USBapp.c: 283: EUSART_Initialize();
 31794  0061E6  EC44  F032         	call	i2_EUSART_Initialize	;wreg free
 31795  0061EA  0012               	return		;funcret
 31796  0061EC                     __end_of_USART_mySetLineCodingHandler:
 31797                           	opt stack 0
 31798                           tosu	equ	0xFFF
 31799                           tosh	equ	0xFFE
 31800                           tosl	equ	0xFFD
 31801                           pclatu	equ	0xFFB
 31802                           pclath	equ	0xFFA
 31803                           tblptru	equ	0xFF8
 31804                           tblptrh	equ	0xFF7
 31805                           tblptrl	equ	0xFF6
 31806                           tablat	equ	0xFF5
 31807                           prodh	equ	0xFF4
 31808                           prodl	equ	0xFF3
 31809                           intcon	equ	0xFF2
 31810                           intcon3	equ	0xFF0
 31811                           indf0	equ	0xFEF
 31812                           postinc0	equ	0xFEE
 31813                           fsr0h	equ	0xFEA
 31814                           fsr0l	equ	0xFE9
 31815                           wreg	equ	0xFE8
 31816                           indf1	equ	0xFE7
 31817                           postdec1	equ	0xFE5
 31818                           fsr1h	equ	0xFE2
 31819                           fsr1l	equ	0xFE1
 31820                           indf2	equ	0xFDF
 31821                           postinc2	equ	0xFDE
 31822                           postdec2	equ	0xFDD
 31823                           plusw2	equ	0xFDB
 31824                           fsr2h	equ	0xFDA
 31825                           fsr2l	equ	0xFD9
 31826                           status	equ	0xFD8
 31827                           
 31828 ;; *************** function i2_EUSART_Initialize *****************
 31829 ;; Defined at:
 31830 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 31831 ;; Parameters:    Size  Location     Type
 31832 ;;		None
 31833 ;; Auto vars:     Size  Location     Type
 31834 ;;		None
 31835 ;; Return value:  Size  Location     Type
 31836 ;;		None               void
 31837 ;; Registers used:
 31838 ;;		wreg, status,2
 31839 ;; Tracked objects:
 31840 ;;		On entry : 0/0
 31841 ;;		On exit  : 0/0
 31842 ;;		Unchanged: 0/0
 31843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31844 ;;      Params:         0       0       0       0       0       0       0       0       0
 31845 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31846 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31847 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31848 ;;Total ram usage:        0 bytes
 31849 ;; Hardware stack levels used:    1
 31850 ;; This function calls:
 31851 ;;		Nothing
 31852 ;; This function is called by:
 31853 ;;		_USBapp_CdcEmulatorInitialize
 31854 ;;		_USART_mySetLineCodingHandler
 31855 ;; This function uses a non-reentrant model
 31856 ;;
 31857                           
 31858                           	psect	text133
 31859  006488                     __ptext133:
 31860                           	opt stack 0
 31861  006488                     i2_EUSART_Initialize:
 31862                           	opt stack 17
 31863                           
 31864                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 31865                           
 31866                           ;incstack = 0
 31867  006488  9A9D               	bcf	3997,5,c	;volatile
 31868                           
 31869                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 31870  00648A  989D               	bcf	3997,4,c	;volatile
 31871                           
 31872                           ;eusart.c: 85: BAUDCON = 0x48;
 31873  00648C  0E48               	movlw	72
 31874  00648E  6EB8               	movwf	4024,c	;volatile
 31875                           
 31876                           ;eusart.c: 88: RCSTA = 0x90;
 31877  006490  0E90               	movlw	144
 31878  006492  6EAB               	movwf	4011,c	;volatile
 31879                           
 31880                           ;eusart.c: 91: TXSTA = 0x26;
 31881  006494  0E26               	movlw	38
 31882  006496  6EAC               	movwf	4012,c	;volatile
 31883                           
 31884                           ;eusart.c: 95: SPBRG = 0xD0;
 31885  006498  0ED0               	movlw	208
 31886  00649A  6EAF               	movwf	4015,c	;volatile
 31887                           
 31888                           ;eusart.c: 100: SPBRGH = 0x00;
 31889  00649C  0E00               	movlw	0
 31890  00649E  6EB0               	movwf	4016,c	;volatile
 31891                           
 31892                           ;eusart.c: 103: eusartTxHead = 0;
 31893  0064A0  0E00               	movlw	0
 31894  0064A2  0100               	movlb	0	; () banked
 31895  0064A4  6FE1               	movwf	_eusartTxHead& (0+255),b
 31896                           
 31897                           ;eusart.c: 104: eusartTxTail = 0;
 31898  0064A6  0E00               	movlw	0
 31899  0064A8  0100               	movlb	0	; () banked
 31900  0064AA  6FE2               	movwf	_eusartTxTail& (0+255),b
 31901                           
 31902                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 31903  0064AC  0E40               	movlw	64
 31904  0064AE  6E54               	movwf	_eusartTxBufferRemaining,c	;volatile
 31905                           
 31906                           ;eusart.c: 107: eusartRxHead = 0;
 31907  0064B0  0E00               	movlw	0
 31908  0064B2  0100               	movlb	0	; () banked
 31909  0064B4  6FDF               	movwf	_eusartRxHead& (0+255),b
 31910                           
 31911                           ;eusart.c: 108: eusartRxTail = 0;
 31912  0064B6  0E00               	movlw	0
 31913  0064B8  0100               	movlb	0	; () banked
 31914  0064BA  6FE0               	movwf	_eusartRxTail& (0+255),b
 31915                           
 31916                           ;eusart.c: 109: eusartRxCount = 0;
 31917  0064BC  0E00               	movlw	0
 31918  0064BE  6E53               	movwf	_eusartRxCount,c	;volatile
 31919                           
 31920                           ; BSR set to: 0
 31921                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 31922  0064C0  8A9D               	bsf	3997,5,c	;volatile
 31923                           
 31924                           ; BSR set to: 0
 31925                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 31926  0064C2  88AB               	bsf	4011,4,c	;volatile
 31927                           
 31928                           ; BSR set to: 0
 31929  0064C4  0012               	return		;funcret
 31930  0064C6                     __end_ofi2_EUSART_Initialize:
 31931                           	opt stack 0
 31932                           tosu	equ	0xFFF
 31933                           tosh	equ	0xFFE
 31934                           tosl	equ	0xFFD
 31935                           pclatu	equ	0xFFB
 31936                           pclath	equ	0xFFA
 31937                           tblptru	equ	0xFF8
 31938                           tblptrh	equ	0xFF7
 31939                           tblptrl	equ	0xFF6
 31940                           tablat	equ	0xFF5
 31941                           prodh	equ	0xFF4
 31942                           prodl	equ	0xFF3
 31943                           intcon	equ	0xFF2
 31944                           intcon3	equ	0xFF0
 31945                           indf0	equ	0xFEF
 31946                           postinc0	equ	0xFEE
 31947                           fsr0h	equ	0xFEA
 31948                           fsr0l	equ	0xFE9
 31949                           wreg	equ	0xFE8
 31950                           indf1	equ	0xFE7
 31951                           postdec1	equ	0xFE5
 31952                           fsr1h	equ	0xFE2
 31953                           fsr1l	equ	0xFE1
 31954                           indf2	equ	0xFDF
 31955                           postinc2	equ	0xFDE
 31956                           postdec2	equ	0xFDD
 31957                           plusw2	equ	0xFDB
 31958                           fsr2h	equ	0xFDA
 31959                           fsr2l	equ	0xFD9
 31960                           status	equ	0xFD8
 31961                           
 31962 ;; *************** function ___lldiv *****************
 31963 ;; Defined at:
 31964 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 31965 ;; Parameters:    Size  Location     Type
 31966 ;;  dividend        4    0[COMRAM] unsigned long 
 31967 ;;  divisor         4    4[COMRAM] unsigned long 
 31968 ;; Auto vars:     Size  Location     Type
 31969 ;;  quotient        4    8[COMRAM] unsigned long 
 31970 ;;  counter         1   12[COMRAM] unsigned char 
 31971 ;; Return value:  Size  Location     Type
 31972 ;;                  4    0[COMRAM] unsigned long 
 31973 ;; Registers used:
 31974 ;;		wreg, status,2, status,0
 31975 ;; Tracked objects:
 31976 ;;		On entry : 0/0
 31977 ;;		On exit  : 0/0
 31978 ;;		Unchanged: 0/0
 31979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31980 ;;      Params:         8       0       0       0       0       0       0       0       0
 31981 ;;      Locals:         5       0       0       0       0       0       0       0       0
 31982 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31983 ;;      Totals:        13       0       0       0       0       0       0       0       0
 31984 ;;Total ram usage:       13 bytes
 31985 ;; Hardware stack levels used:    1
 31986 ;; This function calls:
 31987 ;;		Nothing
 31988 ;; This function is called by:
 31989 ;;		_USART_mySetLineCodingHandler
 31990 ;; This function uses a non-reentrant model
 31991 ;;
 31992                           
 31993                           	psect	text134
 31994  0059E6                     __ptext134:
 31995                           	opt stack 0
 31996  0059E6                     ___lldiv:
 31997                           	opt stack 15
 31998                           
 31999                           ; BSR set to: 0
 32000                           ;incstack = 0
 32001  0059E6  0E00               	movlw	0
 32002  0059E8  6E09               	movwf	___lldiv@quotient,c
 32003  0059EA  0E00               	movlw	0
 32004  0059EC  6E0A               	movwf	___lldiv@quotient+1,c
 32005  0059EE  0E00               	movlw	0
 32006  0059F0  6E0B               	movwf	___lldiv@quotient+2,c
 32007  0059F2  0E00               	movlw	0
 32008  0059F4  6E0C               	movwf	___lldiv@quotient+3,c
 32009  0059F6  5005               	movf	___lldiv@divisor,w,c
 32010  0059F8  1006               	iorwf	___lldiv@divisor+1,w,c
 32011  0059FA  1007               	iorwf	___lldiv@divisor+2,w,c
 32012  0059FC  1008               	iorwf	___lldiv@divisor+3,w,c
 32013  0059FE  B4D8               	btfsc	status,2,c
 32014  005A00  D02A               	goto	i2l2453
 32015  005A02  0E01               	movlw	1
 32016  005A04  6E0D               	movwf	___lldiv@counter,c
 32017  005A06  D006               	goto	i2l7772
 32018  005A08                     i2l7770:
 32019  005A08  90D8               	bcf	status,0,c
 32020  005A0A  3605               	rlcf	___lldiv@divisor,f,c
 32021  005A0C  3606               	rlcf	___lldiv@divisor+1,f,c
 32022  005A0E  3607               	rlcf	___lldiv@divisor+2,f,c
 32023  005A10  3608               	rlcf	___lldiv@divisor+3,f,c
 32024  005A12  2A0D               	incf	___lldiv@counter,f,c
 32025  005A14                     i2l7772:
 32026  005A14  AE08               	btfss	___lldiv@divisor+3,7,c
 32027  005A16  D7F8               	goto	i2l7770
 32028  005A18                     i2l7774:
 32029  005A18  90D8               	bcf	status,0,c
 32030  005A1A  3609               	rlcf	___lldiv@quotient,f,c
 32031  005A1C  360A               	rlcf	___lldiv@quotient+1,f,c
 32032  005A1E  360B               	rlcf	___lldiv@quotient+2,f,c
 32033  005A20  360C               	rlcf	___lldiv@quotient+3,f,c
 32034  005A22  5005               	movf	___lldiv@divisor,w,c
 32035  005A24  5C01               	subwf	___lldiv@dividend,w,c
 32036  005A26  5006               	movf	___lldiv@divisor+1,w,c
 32037  005A28  5802               	subwfb	___lldiv@dividend+1,w,c
 32038  005A2A  5007               	movf	___lldiv@divisor+2,w,c
 32039  005A2C  5803               	subwfb	___lldiv@dividend+2,w,c
 32040  005A2E  5008               	movf	___lldiv@divisor+3,w,c
 32041  005A30  5804               	subwfb	___lldiv@dividend+3,w,c
 32042  005A32  A0D8               	btfss	status,0,c
 32043  005A34  D009               	goto	i2l7782
 32044  005A36  5005               	movf	___lldiv@divisor,w,c
 32045  005A38  5E01               	subwf	___lldiv@dividend,f,c
 32046  005A3A  5006               	movf	___lldiv@divisor+1,w,c
 32047  005A3C  5A02               	subwfb	___lldiv@dividend+1,f,c
 32048  005A3E  5007               	movf	___lldiv@divisor+2,w,c
 32049  005A40  5A03               	subwfb	___lldiv@dividend+2,f,c
 32050  005A42  5008               	movf	___lldiv@divisor+3,w,c
 32051  005A44  5A04               	subwfb	___lldiv@dividend+3,f,c
 32052  005A46  8009               	bsf	___lldiv@quotient,0,c
 32053  005A48                     i2l7782:
 32054  005A48  90D8               	bcf	status,0,c
 32055  005A4A  3208               	rrcf	___lldiv@divisor+3,f,c
 32056  005A4C  3207               	rrcf	___lldiv@divisor+2,f,c
 32057  005A4E  3206               	rrcf	___lldiv@divisor+1,f,c
 32058  005A50  3205               	rrcf	___lldiv@divisor,f,c
 32059  005A52  2E0D               	decfsz	___lldiv@counter,f,c
 32060  005A54  D7E1               	goto	i2l7774
 32061  005A56                     i2l2453:
 32062  005A56  C009  F001         	movff	___lldiv@quotient,?___lldiv
 32063  005A5A  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 32064  005A5E  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 32065  005A62  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 32066  005A66  0012               	return		;funcret
 32067  005A68                     __end_of___lldiv:
 32068                           	opt stack 0
 32069                           tosu	equ	0xFFF
 32070                           tosh	equ	0xFFE
 32071                           tosl	equ	0xFFD
 32072                           pclatu	equ	0xFFB
 32073                           pclath	equ	0xFFA
 32074                           tblptru	equ	0xFF8
 32075                           tblptrh	equ	0xFF7
 32076                           tblptrl	equ	0xFF6
 32077                           tablat	equ	0xFF5
 32078                           prodh	equ	0xFF4
 32079                           prodl	equ	0xFF3
 32080                           intcon	equ	0xFF2
 32081                           intcon3	equ	0xFF0
 32082                           indf0	equ	0xFEF
 32083                           postinc0	equ	0xFEE
 32084                           fsr0h	equ	0xFEA
 32085                           fsr0l	equ	0xFE9
 32086                           wreg	equ	0xFE8
 32087                           indf1	equ	0xFE7
 32088                           postdec1	equ	0xFE5
 32089                           fsr1h	equ	0xFE2
 32090                           fsr1l	equ	0xFE1
 32091                           indf2	equ	0xFDF
 32092                           postinc2	equ	0xFDE
 32093                           postdec2	equ	0xFDD
 32094                           plusw2	equ	0xFDB
 32095                           fsr2h	equ	0xFDA
 32096                           fsr2l	equ	0xFD9
 32097                           status	equ	0xFD8
 32098                           
 32099 ;; *************** function _TMRapp_Tick *****************
 32100 ;; Defined at:
 32101 ;;		line 45 in file "../Includes/Drivers/TMRapp.c"
 32102 ;; Parameters:    Size  Location     Type
 32103 ;;		None
 32104 ;; Auto vars:     Size  Location     Type
 32105 ;;		None
 32106 ;; Return value:  Size  Location     Type
 32107 ;;		None               void
 32108 ;; Registers used:
 32109 ;;		None
 32110 ;; Tracked objects:
 32111 ;;		On entry : 0/0
 32112 ;;		On exit  : 0/0
 32113 ;;		Unchanged: 0/0
 32114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32115 ;;      Params:         0       0       0       0       0       0       0       0       0
 32116 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32117 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32118 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32119 ;;Total ram usage:        0 bytes
 32120 ;; Hardware stack levels used:    1
 32121 ;; This function calls:
 32122 ;;		Nothing
 32123 ;; This function is called by:
 32124 ;;		_INTERRUPT_InterruptManager
 32125 ;; This function uses a non-reentrant model
 32126 ;;
 32127                           
 32128                           	psect	text135
 32129  006B12                     __ptext135:
 32130                           	opt stack 0
 32131  006B12                     _TMRapp_Tick:
 32132                           	opt stack 20
 32133                           
 32134                           ;TMRapp.c: 48: appTimer.mSecTick = 1;
 32135                           
 32136                           ;incstack = 0
 32137  006B12  0100               	movlb	0	; () banked
 32138  006B14  81D7               	bsf	_appTimer& (0+255),0,b
 32139                           
 32140                           ; BSR set to: 0
 32141  006B16  0012               	return		;funcret
 32142  006B18                     __end_of_TMRapp_Tick:
 32143                           	opt stack 0
 32144                           tosu	equ	0xFFF
 32145                           tosh	equ	0xFFE
 32146                           tosl	equ	0xFFD
 32147                           pclatu	equ	0xFFB
 32148                           pclath	equ	0xFFA
 32149                           tblptru	equ	0xFF8
 32150                           tblptrh	equ	0xFF7
 32151                           tblptrl	equ	0xFF6
 32152                           tablat	equ	0xFF5
 32153                           prodh	equ	0xFF4
 32154                           prodl	equ	0xFF3
 32155                           intcon	equ	0xFF2
 32156                           intcon3	equ	0xFF0
 32157                           indf0	equ	0xFEF
 32158                           postinc0	equ	0xFEE
 32159                           fsr0h	equ	0xFEA
 32160                           fsr0l	equ	0xFE9
 32161                           wreg	equ	0xFE8
 32162                           indf1	equ	0xFE7
 32163                           postdec1	equ	0xFE5
 32164                           fsr1h	equ	0xFE2
 32165                           fsr1l	equ	0xFE1
 32166                           indf2	equ	0xFDF
 32167                           postinc2	equ	0xFDE
 32168                           postdec2	equ	0xFDD
 32169                           plusw2	equ	0xFDB
 32170                           fsr2h	equ	0xFDA
 32171                           fsr2l	equ	0xFD9
 32172                           status	equ	0xFD8
 32173                           
 32174 ;; *************** function _TMR3_ISR *****************
 32175 ;; Defined at:
 32176 ;;		line 161 in file "../Includes/MccGenerated/tmr3.c"
 32177 ;; Parameters:    Size  Location     Type
 32178 ;;		None
 32179 ;; Auto vars:     Size  Location     Type
 32180 ;;		None
 32181 ;; Return value:  Size  Location     Type
 32182 ;;		None               void
 32183 ;; Registers used:
 32184 ;;		wreg, status,2
 32185 ;; Tracked objects:
 32186 ;;		On entry : 0/0
 32187 ;;		On exit  : 0/0
 32188 ;;		Unchanged: 0/0
 32189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32190 ;;      Params:         0       0       0       0       0       0       0       0       0
 32191 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32192 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32193 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32194 ;;Total ram usage:        0 bytes
 32195 ;; Hardware stack levels used:    1
 32196 ;; This function calls:
 32197 ;;		Nothing
 32198 ;; This function is called by:
 32199 ;;		_INTERRUPT_InterruptManager
 32200 ;; This function uses a non-reentrant model
 32201 ;;
 32202                           
 32203                           	psect	text136
 32204  00691C                     __ptext136:
 32205                           	opt stack 0
 32206  00691C                     _TMR3_ISR:
 32207                           	opt stack 20
 32208                           
 32209                           ;tmr3.c: 164: PIR2bits.TMR3IF = 0;
 32210                           
 32211                           ; BSR set to: 0
 32212                           ;incstack = 0
 32213  00691C  92A1               	bcf	4001,1,c	;volatile
 32214                           
 32215                           ;tmr3.c: 167: if(LATEbits.LATE2 == 1)
 32216  00691E  A48D               	btfss	3981,2,c	;volatile
 32217  006920  D006               	goto	i2l1578
 32218                           
 32219                           ;tmr3.c: 168: {
 32220                           ;tmr3.c: 169: LATEbits.LATE2 = 0;
 32221  006922  948D               	bcf	3981,2,c	;volatile
 32222                           
 32223                           ;tmr3.c: 170: TMR3H = 0xD5;
 32224  006924  0ED5               	movlw	213
 32225  006926  6EB3               	movwf	4019,c	;volatile
 32226                           
 32227                           ;tmr3.c: 171: TMR3L = 0xD0;
 32228  006928  0ED0               	movlw	208
 32229  00692A  6EB2               	movwf	4018,c	;volatile
 32230                           
 32231                           ;tmr3.c: 172: } else {
 32232  00692C  0012               	return	
 32233  00692E                     i2l1578:
 32234                           
 32235                           ;tmr3.c: 173: LATEbits.LATE2 = 1;
 32236  00692E  848D               	bsf	3981,2,c	;volatile
 32237                           
 32238                           ;tmr3.c: 174: TMR3H = 0xFB;
 32239  006930  0EFB               	movlw	251
 32240  006932  6EB3               	movwf	4019,c	;volatile
 32241                           
 32242                           ;tmr3.c: 175: TMR3L = 0x50;
 32243  006934  0E50               	movlw	80
 32244  006936  6EB2               	movwf	4018,c	;volatile
 32245  006938  0012               	return	
 32246  00693A                     __end_of_TMR3_ISR:
 32247                           	opt stack 0
 32248                           tosu	equ	0xFFF
 32249                           tosh	equ	0xFFE
 32250                           tosl	equ	0xFFD
 32251                           pclatu	equ	0xFFB
 32252                           pclath	equ	0xFFA
 32253                           tblptru	equ	0xFF8
 32254                           tblptrh	equ	0xFF7
 32255                           tblptrl	equ	0xFF6
 32256                           tablat	equ	0xFF5
 32257                           prodh	equ	0xFF4
 32258                           prodl	equ	0xFF3
 32259                           intcon	equ	0xFF2
 32260                           intcon3	equ	0xFF0
 32261                           indf0	equ	0xFEF
 32262                           postinc0	equ	0xFEE
 32263                           fsr0h	equ	0xFEA
 32264                           fsr0l	equ	0xFE9
 32265                           wreg	equ	0xFE8
 32266                           indf1	equ	0xFE7
 32267                           postdec1	equ	0xFE5
 32268                           fsr1h	equ	0xFE2
 32269                           fsr1l	equ	0xFE1
 32270                           indf2	equ	0xFDF
 32271                           postinc2	equ	0xFDE
 32272                           postdec2	equ	0xFDD
 32273                           plusw2	equ	0xFDB
 32274                           fsr2h	equ	0xFDA
 32275                           fsr2l	equ	0xFD9
 32276                           status	equ	0xFD8
 32277                           
 32278 ;; *************** function _TMR1_ISR *****************
 32279 ;; Defined at:
 32280 ;;		line 152 in file "../Includes/MccGenerated/tmr1.c"
 32281 ;; Parameters:    Size  Location     Type
 32282 ;;		None
 32283 ;; Auto vars:     Size  Location     Type
 32284 ;;		None
 32285 ;; Return value:  Size  Location     Type
 32286 ;;		None               void
 32287 ;; Registers used:
 32288 ;;		wreg, status,2
 32289 ;; Tracked objects:
 32290 ;;		On entry : 0/0
 32291 ;;		On exit  : 0/0
 32292 ;;		Unchanged: 0/0
 32293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32294 ;;      Params:         0       0       0       0       0       0       0       0       0
 32295 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32296 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32297 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32298 ;;Total ram usage:        0 bytes
 32299 ;; Hardware stack levels used:    1
 32300 ;; This function calls:
 32301 ;;		Nothing
 32302 ;; This function is called by:
 32303 ;;		_INTERRUPT_InterruptManager
 32304 ;; This function uses a non-reentrant model
 32305 ;;
 32306                           
 32307                           	psect	text137
 32308  006AB8                     __ptext137:
 32309                           	opt stack 0
 32310  006AB8                     _TMR1_ISR:
 32311                           	opt stack 20
 32312                           
 32313                           ;tmr1.c: 156: PIR1bits.TMR1IF = 0;
 32314                           
 32315                           ;incstack = 0
 32316  006AB8  909E               	bcf	3998,0,c	;volatile
 32317                           
 32318                           ;tmr1.c: 158: TMR1H = (timer1ReloadVal >> 8);
 32319  006ABA  5049               	movf	_timer1ReloadVal+1,w,c	;volatile
 32320  006ABC  6ECF               	movwf	4047,c	;volatile
 32321                           
 32322                           ;tmr1.c: 159: TMR1L = timer1ReloadVal;
 32323  006ABE  C048  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 32324  006AC2  0012               	return		;funcret
 32325  006AC4                     __end_of_TMR1_ISR:
 32326                           	opt stack 0
 32327                           tosu	equ	0xFFF
 32328                           tosh	equ	0xFFE
 32329                           tosl	equ	0xFFD
 32330                           pclatu	equ	0xFFB
 32331                           pclath	equ	0xFFA
 32332                           tblptru	equ	0xFF8
 32333                           tblptrh	equ	0xFF7
 32334                           tblptrl	equ	0xFF6
 32335                           tablat	equ	0xFF5
 32336                           prodh	equ	0xFF4
 32337                           prodl	equ	0xFF3
 32338                           intcon	equ	0xFF2
 32339                           intcon3	equ	0xFF0
 32340                           indf0	equ	0xFEF
 32341                           postinc0	equ	0xFEE
 32342                           fsr0h	equ	0xFEA
 32343                           fsr0l	equ	0xFE9
 32344                           wreg	equ	0xFE8
 32345                           indf1	equ	0xFE7
 32346                           postdec1	equ	0xFE5
 32347                           fsr1h	equ	0xFE2
 32348                           fsr1l	equ	0xFE1
 32349                           indf2	equ	0xFDF
 32350                           postinc2	equ	0xFDE
 32351                           postdec2	equ	0xFDD
 32352                           plusw2	equ	0xFDB
 32353                           fsr2h	equ	0xFDA
 32354                           fsr2l	equ	0xFD9
 32355                           status	equ	0xFD8
 32356                           
 32357 ;; *************** function _EUSART_Transmit_ISR *****************
 32358 ;; Defined at:
 32359 ;;		line 162 in file "../Includes/MccGenerated/eusart.c"
 32360 ;; Parameters:    Size  Location     Type
 32361 ;;		None
 32362 ;; Auto vars:     Size  Location     Type
 32363 ;;		None
 32364 ;; Return value:  Size  Location     Type
 32365 ;;		None               void
 32366 ;; Registers used:
 32367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32368 ;; Tracked objects:
 32369 ;;		On entry : 0/0
 32370 ;;		On exit  : 0/0
 32371 ;;		Unchanged: 0/0
 32372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32373 ;;      Params:         0       0       0       0       0       0       0       0       0
 32374 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32375 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32376 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32377 ;;Total ram usage:        0 bytes
 32378 ;; Hardware stack levels used:    1
 32379 ;; This function calls:
 32380 ;;		Nothing
 32381 ;; This function is called by:
 32382 ;;		_INTERRUPT_InterruptManager
 32383 ;; This function uses a non-reentrant model
 32384 ;;
 32385                           
 32386                           	psect	text138
 32387  00665A                     __ptext138:
 32388                           	opt stack 0
 32389  00665A                     _EUSART_Transmit_ISR:
 32390                           	opt stack 20
 32391                           
 32392                           ;eusart.c: 166: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 32393                           
 32394                           ;incstack = 0
 32395  00665A  0E40               	movlw	64
 32396  00665C  6054               	cpfslt	_eusartTxBufferRemaining,c	;volatile
 32397  00665E  D016               	goto	i2l1148
 32398                           
 32399                           ;eusart.c: 167: {
 32400                           ;eusart.c: 168: TXREG = eusartTxBuffer[eusartTxTail++];
 32401  006660  0100               	movlb	0	; () banked
 32402  006662  51E2               	movf	_eusartTxTail& (0+255),w,b
 32403  006664  0D01               	mullw	1
 32404  006666  0E40               	movlw	low _eusartTxBuffer
 32405  006668  24F3               	addwf	prodl,w,c
 32406  00666A  6ED9               	movwf	fsr2l,c
 32407  00666C  0E02               	movlw	high _eusartTxBuffer
 32408  00666E  20F4               	addwfc	prodh,w,c
 32409  006670  6EDA               	movwf	fsr2h,c
 32410  006672  50DF               	movf	indf2,w,c
 32411  006674  6EAD               	movwf	4013,c	;volatile
 32412                           
 32413                           ; BSR set to: 0
 32414  006676  0100               	movlb	0	; () banked
 32415  006678  2BE2               	incf	_eusartTxTail& (0+255),f,b
 32416                           
 32417                           ; BSR set to: 0
 32418                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 32419  00667A  0E3F               	movlw	63
 32420  00667C  0100               	movlb	0	; () banked
 32421  00667E  65E2               	cpfsgt	_eusartTxTail& (0+255),b
 32422  006680  D003               	goto	i2l11326
 32423                           
 32424                           ; BSR set to: 0
 32425                           ;eusart.c: 170: {
 32426                           ;eusart.c: 171: eusartTxTail = 0;
 32427  006682  0E00               	movlw	0
 32428  006684  0100               	movlb	0	; () banked
 32429  006686  6FE2               	movwf	_eusartTxTail& (0+255),b
 32430  006688                     i2l11326:
 32431                           
 32432                           ; BSR set to: 0
 32433                           ;eusart.c: 172: }
 32434                           ;eusart.c: 173: eusartTxBufferRemaining++;
 32435  006688  2A54               	incf	_eusartTxBufferRemaining,f,c	;volatile
 32436                           
 32437                           ;eusart.c: 174: }
 32438  00668A  0012               	return	
 32439  00668C                     i2l1148:
 32440                           
 32441                           ;eusart.c: 175: else
 32442                           ;eusart.c: 176: {
 32443                           ;eusart.c: 177: PIE1bits.TXIE = 0;
 32444  00668C  989D               	bcf	3997,4,c	;volatile
 32445  00668E  0012               	return	
 32446  006690                     __end_of_EUSART_Transmit_ISR:
 32447                           	opt stack 0
 32448                           tosu	equ	0xFFF
 32449                           tosh	equ	0xFFE
 32450                           tosl	equ	0xFFD
 32451                           pclatu	equ	0xFFB
 32452                           pclath	equ	0xFFA
 32453                           tblptru	equ	0xFF8
 32454                           tblptrh	equ	0xFF7
 32455                           tblptrl	equ	0xFF6
 32456                           tablat	equ	0xFF5
 32457                           prodh	equ	0xFF4
 32458                           prodl	equ	0xFF3
 32459                           intcon	equ	0xFF2
 32460                           intcon3	equ	0xFF0
 32461                           indf0	equ	0xFEF
 32462                           postinc0	equ	0xFEE
 32463                           fsr0h	equ	0xFEA
 32464                           fsr0l	equ	0xFE9
 32465                           wreg	equ	0xFE8
 32466                           indf1	equ	0xFE7
 32467                           postdec1	equ	0xFE5
 32468                           fsr1h	equ	0xFE2
 32469                           fsr1l	equ	0xFE1
 32470                           indf2	equ	0xFDF
 32471                           postinc2	equ	0xFDE
 32472                           postdec2	equ	0xFDD
 32473                           plusw2	equ	0xFDB
 32474                           fsr2h	equ	0xFDA
 32475                           fsr2l	equ	0xFD9
 32476                           status	equ	0xFD8
 32477                           
 32478 ;; *************** function _EUSART_Receive_ISR *****************
 32479 ;; Defined at:
 32480 ;;		line 181 in file "../Includes/MccGenerated/eusart.c"
 32481 ;; Parameters:    Size  Location     Type
 32482 ;;		None
 32483 ;; Auto vars:     Size  Location     Type
 32484 ;;		None
 32485 ;; Return value:  Size  Location     Type
 32486 ;;		None               void
 32487 ;; Registers used:
 32488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32489 ;; Tracked objects:
 32490 ;;		On entry : 0/0
 32491 ;;		On exit  : 0/0
 32492 ;;		Unchanged: 0/0
 32493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32494 ;;      Params:         0       0       0       0       0       0       0       0       0
 32495 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32496 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32497 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32498 ;;Total ram usage:        0 bytes
 32499 ;; Hardware stack levels used:    1
 32500 ;; This function calls:
 32501 ;;		Nothing
 32502 ;; This function is called by:
 32503 ;;		_INTERRUPT_InterruptManager
 32504 ;; This function uses a non-reentrant model
 32505 ;;
 32506                           
 32507                           	psect	text139
 32508  006690                     __ptext139:
 32509                           	opt stack 0
 32510  006690                     _EUSART_Receive_ISR:
 32511                           	opt stack 20
 32512                           
 32513                           ;eusart.c: 183: if(1 == RCSTAbits.OERR)
 32514                           
 32515                           ;incstack = 0
 32516  006690  A2AB               	btfss	4011,1,c	;volatile
 32517  006692  D003               	goto	i2l11332
 32518                           
 32519                           ;eusart.c: 184: {
 32520                           ;eusart.c: 187: RCSTAbits.CREN = 0;
 32521  006694  98AB               	bcf	4011,4,c	;volatile
 32522                           
 32523                           ;eusart.c: 188: RCSTAbits.CREN = 1;
 32524  006696  88AB               	bsf	4011,4,c	;volatile
 32525                           
 32526                           ;eusart.c: 189: }
 32527  006698  0012               	return	
 32528  00669A                     i2l11332:
 32529                           
 32530                           ;eusart.c: 190: else
 32531                           ;eusart.c: 191: {
 32532                           ;eusart.c: 193: eusartRxBuffer[eusartRxHead++] = RCREG;
 32533  00669A  0100               	movlb	0	; () banked
 32534  00669C  51DF               	movf	_eusartRxHead& (0+255),w,b
 32535  00669E  0D01               	mullw	1
 32536  0066A0  0E00               	movlw	low _eusartRxBuffer
 32537  0066A2  24F3               	addwf	prodl,w,c
 32538  0066A4  6ED9               	movwf	fsr2l,c
 32539  0066A6  0E02               	movlw	high _eusartRxBuffer
 32540  0066A8  20F4               	addwfc	prodh,w,c
 32541  0066AA  6EDA               	movwf	fsr2h,c
 32542  0066AC  CFAE FFDF          	movff	4014,indf2	;volatile
 32543                           
 32544                           ; BSR set to: 0
 32545  0066B0  0100               	movlb	0	; () banked
 32546  0066B2  2BDF               	incf	_eusartRxHead& (0+255),f,b
 32547                           
 32548                           ; BSR set to: 0
 32549                           ;eusart.c: 194: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 32550  0066B4  0E3F               	movlw	63
 32551  0066B6  0100               	movlb	0	; () banked
 32552  0066B8  65DF               	cpfsgt	_eusartRxHead& (0+255),b
 32553  0066BA  D003               	goto	i2l11340
 32554                           
 32555                           ; BSR set to: 0
 32556                           ;eusart.c: 195: {
 32557                           ;eusart.c: 196: eusartRxHead = 0;
 32558  0066BC  0E00               	movlw	0
 32559  0066BE  0100               	movlb	0	; () banked
 32560  0066C0  6FDF               	movwf	_eusartRxHead& (0+255),b
 32561  0066C2                     i2l11340:
 32562                           
 32563                           ; BSR set to: 0
 32564                           ;eusart.c: 197: }
 32565                           ;eusart.c: 198: eusartRxCount++;
 32566  0066C2  2A53               	incf	_eusartRxCount,f,c	;volatile
 32567  0066C4  0012               	return	
 32568  0066C6                     __end_of_EUSART_Receive_ISR:
 32569                           	opt stack 0
 32570                           tosu	equ	0xFFF
 32571                           tosh	equ	0xFFE
 32572                           tosl	equ	0xFFD
 32573                           pclatu	equ	0xFFB
 32574                           pclath	equ	0xFFA
 32575                           tblptru	equ	0xFF8
 32576                           tblptrh	equ	0xFF7
 32577                           tblptrl	equ	0xFF6
 32578                           tablat	equ	0xFF5
 32579                           prodh	equ	0xFF4
 32580                           prodl	equ	0xFF3
 32581                           intcon	equ	0xFF2
 32582                           intcon3	equ	0xFF0
 32583                           indf0	equ	0xFEF
 32584                           postinc0	equ	0xFEE
 32585                           fsr0h	equ	0xFEA
 32586                           fsr0l	equ	0xFE9
 32587                           wreg	equ	0xFE8
 32588                           indf1	equ	0xFE7
 32589                           postdec1	equ	0xFE5
 32590                           fsr1h	equ	0xFE2
 32591                           fsr1l	equ	0xFE1
 32592                           indf2	equ	0xFDF
 32593                           postinc2	equ	0xFDE
 32594                           postdec2	equ	0xFDD
 32595                           plusw2	equ	0xFDB
 32596                           fsr2h	equ	0xFDA
 32597                           fsr2l	equ	0xFD9
 32598                           status	equ	0xFD8
 32599                           
 32600 ;; *************** function _CMP1_ISR *****************
 32601 ;; Defined at:
 32602 ;;		line 95 in file "../Includes/MccGenerated/cmp1.c"
 32603 ;; Parameters:    Size  Location     Type
 32604 ;;		None
 32605 ;; Auto vars:     Size  Location     Type
 32606 ;;		None
 32607 ;; Return value:  Size  Location     Type
 32608 ;;		None               void
 32609 ;; Registers used:
 32610 ;;		None
 32611 ;; Tracked objects:
 32612 ;;		On entry : 0/0
 32613 ;;		On exit  : 0/0
 32614 ;;		Unchanged: 0/0
 32615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32616 ;;      Params:         0       0       0       0       0       0       0       0       0
 32617 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32618 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32619 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32620 ;;Total ram usage:        0 bytes
 32621 ;; Hardware stack levels used:    1
 32622 ;; This function calls:
 32623 ;;		Nothing
 32624 ;; This function is called by:
 32625 ;;		_INTERRUPT_InterruptManager
 32626 ;; This function uses a non-reentrant model
 32627 ;;
 32628                           
 32629                           	psect	text140
 32630  006B28                     __ptext140:
 32631                           	opt stack 0
 32632  006B28                     _CMP1_ISR:
 32633                           	opt stack 20
 32634                           
 32635                           ;cmp1.c: 98: PIR2bits.C1IF = 0;
 32636                           
 32637                           ;incstack = 0
 32638  006B28  9CA1               	bcf	4001,6,c	;volatile
 32639  006B2A  0012               	return		;funcret
 32640  006B2C                     __end_of_CMP1_ISR:
 32641                           	opt stack 0
 32642                           tosu	equ	0xFFF
 32643                           tosh	equ	0xFFE
 32644                           tosl	equ	0xFFD
 32645                           pclatu	equ	0xFFB
 32646                           pclath	equ	0xFFA
 32647                           tblptru	equ	0xFF8
 32648                           tblptrh	equ	0xFF7
 32649                           tblptrl	equ	0xFF6
 32650                           tablat	equ	0xFF5
 32651                           prodh	equ	0xFF4
 32652                           prodl	equ	0xFF3
 32653                           intcon	equ	0xFF2
 32654                           intcon3	equ	0xFF0
 32655                           indf0	equ	0xFEF
 32656                           postinc0	equ	0xFEE
 32657                           fsr0h	equ	0xFEA
 32658                           fsr0l	equ	0xFE9
 32659                           wreg	equ	0xFE8
 32660                           indf1	equ	0xFE7
 32661                           postdec1	equ	0xFE5
 32662                           fsr1h	equ	0xFE2
 32663                           fsr1l	equ	0xFE1
 32664                           indf2	equ	0xFDF
 32665                           postinc2	equ	0xFDE
 32666                           postdec2	equ	0xFDD
 32667                           plusw2	equ	0xFDB
 32668                           fsr2h	equ	0xFDA
 32669                           fsr2l	equ	0xFD9
 32670                           status	equ	0xFD8
 32671                           tosu	equ	0xFFF
 32672                           tosh	equ	0xFFE
 32673                           tosl	equ	0xFFD
 32674                           pclatu	equ	0xFFB
 32675                           pclath	equ	0xFFA
 32676                           tblptru	equ	0xFF8
 32677                           tblptrh	equ	0xFF7
 32678                           tblptrl	equ	0xFF6
 32679                           tablat	equ	0xFF5
 32680                           prodh	equ	0xFF4
 32681                           prodl	equ	0xFF3
 32682                           intcon	equ	0xFF2
 32683                           intcon3	equ	0xFF0
 32684                           indf0	equ	0xFEF
 32685                           postinc0	equ	0xFEE
 32686                           fsr0h	equ	0xFEA
 32687                           fsr0l	equ	0xFE9
 32688                           wreg	equ	0xFE8
 32689                           indf1	equ	0xFE7
 32690                           postdec1	equ	0xFE5
 32691                           fsr1h	equ	0xFE2
 32692                           fsr1l	equ	0xFE1
 32693                           indf2	equ	0xFDF
 32694                           postinc2	equ	0xFDE
 32695                           postdec2	equ	0xFDD
 32696                           plusw2	equ	0xFDB
 32697                           fsr2h	equ	0xFDA
 32698                           fsr2l	equ	0xFD9
 32699                           status	equ	0xFD8
 32700                           
 32701                           	psect	text141
 32702  000000                     __ptext141:
 32703                           	opt stack 0
 32704                           tosu	equ	0xFFF
 32705                           tosh	equ	0xFFE
 32706                           tosl	equ	0xFFD
 32707                           pclatu	equ	0xFFB
 32708                           pclath	equ	0xFFA
 32709                           tblptru	equ	0xFF8
 32710                           tblptrh	equ	0xFF7
 32711                           tblptrl	equ	0xFF6
 32712                           tablat	equ	0xFF5
 32713                           prodh	equ	0xFF4
 32714                           prodl	equ	0xFF3
 32715                           intcon	equ	0xFF2
 32716                           intcon3	equ	0xFF0
 32717                           indf0	equ	0xFEF
 32718                           postinc0	equ	0xFEE
 32719                           fsr0h	equ	0xFEA
 32720                           fsr0l	equ	0xFE9
 32721                           wreg	equ	0xFE8
 32722                           indf1	equ	0xFE7
 32723                           postdec1	equ	0xFE5
 32724                           fsr1h	equ	0xFE2
 32725                           fsr1l	equ	0xFE1
 32726                           indf2	equ	0xFDF
 32727                           postinc2	equ	0xFDE
 32728                           postdec2	equ	0xFDD
 32729                           plusw2	equ	0xFDB
 32730                           fsr2h	equ	0xFDA
 32731                           fsr2l	equ	0xFD9
 32732                           status	equ	0xFD8
 32733                           
 32734                           	psect	rparam
 32735  0000                     tosu	equ	0xFFF
 32736                           tosh	equ	0xFFE
 32737                           tosl	equ	0xFFD
 32738                           pclatu	equ	0xFFB
 32739                           pclath	equ	0xFFA
 32740                           tblptru	equ	0xFF8
 32741                           tblptrh	equ	0xFF7
 32742                           tblptrl	equ	0xFF6
 32743                           tablat	equ	0xFF5
 32744                           prodh	equ	0xFF4
 32745                           prodl	equ	0xFF3
 32746                           intcon	equ	0xFF2
 32747                           intcon3	equ	0xFF0
 32748                           indf0	equ	0xFEF
 32749                           postinc0	equ	0xFEE
 32750                           fsr0h	equ	0xFEA
 32751                           fsr0l	equ	0xFE9
 32752                           wreg	equ	0xFE8
 32753                           indf1	equ	0xFE7
 32754                           postdec1	equ	0xFE5
 32755                           fsr1h	equ	0xFE2
 32756                           fsr1l	equ	0xFE1
 32757                           indf2	equ	0xFDF
 32758                           postinc2	equ	0xFDE
 32759                           postdec2	equ	0xFDD
 32760                           plusw2	equ	0xFDB
 32761                           fsr2h	equ	0xFDA
 32762                           fsr2l	equ	0xFD9
 32763                           status	equ	0xFD8
 32764                           
 32765                           	psect	temp
 32766  00005B                     btemp:
 32767                           	opt stack 0
 32768  00005B                     	ds	1
 32769  0000                     int$flags	set	btemp
 32770                           tosu	equ	0xFFF
 32771                           tosh	equ	0xFFE
 32772                           tosl	equ	0xFFD
 32773                           pclatu	equ	0xFFB
 32774                           pclath	equ	0xFFA
 32775                           tblptru	equ	0xFF8
 32776                           tblptrh	equ	0xFF7
 32777                           tblptrl	equ	0xFF6
 32778                           tablat	equ	0xFF5
 32779                           prodh	equ	0xFF4
 32780                           prodl	equ	0xFF3
 32781                           intcon	equ	0xFF2
 32782                           intcon3	equ	0xFF0
 32783                           indf0	equ	0xFEF
 32784                           postinc0	equ	0xFEE
 32785                           fsr0h	equ	0xFEA
 32786                           fsr0l	equ	0xFE9
 32787                           wreg	equ	0xFE8
 32788                           indf1	equ	0xFE7
 32789                           postdec1	equ	0xFE5
 32790                           fsr1h	equ	0xFE2
 32791                           fsr1l	equ	0xFE1
 32792                           indf2	equ	0xFDF
 32793                           postinc2	equ	0xFDE
 32794                           postdec2	equ	0xFDD
 32795                           plusw2	equ	0xFDB
 32796                           fsr2h	equ	0xFDA
 32797                           fsr2l	equ	0xFD9
 32798                           status	equ	0xFD8


Data Sizes:
    Strings     1691
    Constant    969
    Data        11
    BSS         534
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160     87     158
    BANK1           256      5     243
    BANK2           256      0     192
    BANK3           256      0       0
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_97(CODE[7]), STR_95(CODE[7]), STR_93(CODE[7]), STR_90(CODE[7]), 
		 -> STR_35(CODE[5]), STR_31(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_89(CODE[3]), STR_69(CODE[14]), STR_67(CODE[11]), STR_63(CODE[7]), 
		 -> STR_60(CODE[9]), STR_59(CODE[11]), STR_57(CODE[14]), STR_54(CODE[14]), 
		 -> STR_53(CODE[3]), STR_49(CODE[9]), STR_45(CODE[14]), STR_44(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> clearLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> clearLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK2[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK2[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S6121_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S6121_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S6121_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S6121_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S4834$pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> USART_mySetLineCodingHandler(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> USART_mySetLineCodingHandler(), 

    S4824$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S4824$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4800$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4800$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4800$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4800$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    oled_putString@string	PTR const unsigned char  size(2) Largest target is 64
		 -> oled_putUint16@numData(COMRAM[6]), oled_putint8@numData(BANK0[6]), oled_putUint8@numData(BANK0[6]), STR_196(CODE[12]), 
		 -> STR_195(CODE[8]), STR_194(CODE[9]), storedLight(BANK1[5]), STR_189(CODE[5]), 
		 -> STR_188(CODE[8]), STR_187(CODE[8]), STR_186(CODE[9]), STR_162(CODE[16]), 
		 -> STR_161(CODE[17]), STR_160(CODE[17]), STR_159(CODE[4]), STR_158(CODE[4]), 
		 -> STR_157(CODE[4]), STR_156(CODE[4]), STR_155(CODE[4]), STR_154(CODE[4]), 
		 -> STR_153(CODE[4]), STR_152(CODE[16]), STR_151(CODE[17]), STR_150(CODE[4]), 
		 -> STR_149(CODE[4]), STR_148(CODE[4]), STR_147(CODE[4]), STR_146(CODE[4]), 
		 -> STR_145(CODE[4]), STR_144(CODE[4]), STR_143(CODE[4]), STR_142(CODE[4]), 
		 -> STR_141(CODE[4]), STR_140(CODE[4]), STR_139(CODE[4]), STR_138(CODE[4]), 
		 -> STR_137(CODE[16]), STR_136(CODE[12]), STR_135(CODE[17]), STR_134(CODE[16]), 
		 -> STR_133(CODE[16]), STR_132(CODE[16]), STR_131(CODE[15]), STR_130(CODE[15]), 
		 -> STR_129(CODE[16]), STR_128(CODE[4]), STR_127(CODE[3]), STR_126(CODE[3]), 
		 -> STR_125(CODE[3]), STR_124(CODE[3]), STR_123(CODE[2]), STR_122(CODE[5]), 
		 -> STR_121(CODE[7]), STR_120(CODE[17]), STR_119(CODE[17]), STR_118(CODE[2]), 
		 -> STR_117(CODE[7]), STR_116(CODE[7]), STR_115(CODE[16]), STR_114(CODE[16]), 
		 -> STR_113(CODE[15]), STR_112(CODE[15]), STR_111(CODE[17]), STR_110(CODE[16]), 
		 -> STR_109(CODE[17]), STR_108(CODE[17]), STR_107(CODE[7]), STR_106(CODE[10]), 
		 -> STR_105(CODE[17]), STR_104(CODE[16]), STR_103(CODE[16]), STR_102(CODE[16]), 
		 -> STR_101(CODE[16]), STR_100(CODE[17]), STR_99(CODE[17]), STR_98(CODE[16]), 
		 -> STR_96(CODE[19]), STR_94(CODE[17]), STR_92(CODE[17]), STR_91(CODE[17]), 
		 -> responseData(BANK1[32]), responsePortNum(BANK1[3]), STR_88(CODE[13]), STR_87(CODE[12]), 
		 -> STR_86(CODE[12]), STR_83(CODE[18]), STR_82(CODE[13]), STR_81(CODE[17]), 
		 -> STR_80(CODE[16]), STR_79(CODE[17]), STR_78(CODE[17]), STR_77(CODE[16]), 
		 -> STR_76(CODE[17]), STR_75(CODE[17]), STR_73(CODE[13]), STR_72(CODE[12]), 
		 -> STR_71(CODE[17]), STR_65(CODE[7]), STR_64(CODE[10]), STR_62(CODE[11]), 
		 -> STR_61(CODE[11]), STR_56(CODE[9]), STR_55(CODE[11]), STR_51(CODE[11]), 
		 -> STR_50(CODE[10]), STR_47(CODE[9]), STR_46(CODE[11]), STR_42(CODE[17]), 
		 -> STR_40(CODE[17]), STR_38(CODE[17]), STR_37(CODE[17]), STR_36(CODE[17]), 
		 -> STR_34(CODE[17]), STR_33(CODE[17]), STR_32(CODE[17]), moduleResonseBuffer(BANK1[64]), 
		 -> STR_29(CODE[17]), STR_28(CODE[17]), STR_27(CODE[17]), STR_26(CODE[17]), 
		 -> STR_25(CODE[9]), STR_24(CODE[10]), STR_23(CODE[5]), STR_20(CODE[9]), 
		 -> STR_19(CODE[8]), STR_18(CODE[8]), STR_17(CODE[9]), STR_16(CODE[10]), 
		 -> STR_15(CODE[11]), STR_14(CODE[13]), STR_13(CODE[13]), STR_12(CODE[13]), 
		 -> STR_11(CODE[12]), STR_10(CODE[13]), STR_9(CODE[9]), STR_8(CODE[12]), 
		 -> STR_7(CODE[16]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[9]), 
		 -> STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    oled_setFont@font	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    selectedFont	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    moteApp_setLightString@lightString	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sp__memcpy	PTR void  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    moteApp_convertSensorValue@string	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sendDataCommand@appData	PTR unsigned char  size(2) Largest target is 16
		 -> dataBuffer(BANK1[16]), 

    sendDataCommand@string	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_85(CODE[12]), STR_84(CODE[14]), STR_74(CODE[14]), 

    sendCommand@string	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_193(CODE[22]), STR_192(CODE[22]), STR_191(CODE[27]), STR_190(CODE[27]), 
		 -> STR_185(CODE[26]), STR_184(CODE[26]), STR_183(CODE[26]), STR_182(CODE[26]), 
		 -> STR_181(CODE[3]), STR_180(CODE[9]), STR_179(CODE[15]), STR_178(CODE[13]), 
		 -> STR_177(CODE[13]), STR_176(CODE[17]), STR_175(CODE[13]), STR_174(CODE[17]), 
		 -> STR_173(CODE[13]), STR_172(CODE[17]), STR_171(CODE[13]), STR_170(CODE[17]), 
		 -> STR_169(CODE[13]), STR_168(CODE[17]), STR_167(CODE[13]), STR_166(CODE[17]), 
		 -> STR_165(CODE[13]), STR_164(CODE[17]), STR_163(CODE[16]), STR_70(CODE[11]), 
		 -> STR_68(CODE[11]), STR_66(CODE[14]), STR_58(CODE[14]), STR_52(CODE[10]), 
		 -> STR_48(CODE[13]), STR_43(CODE[14]), STR_41(CODE[13]), STR_39(CODE[10]), 
		 -> STR_30(CODE[10]), STR_22(CODE[20]), STR_21(CODE[2]), 

    sp__moteApp_getLightString	PTR unsigned char  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    sp__moteApp_getTempValue	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sp__moteApp_getLightValue	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBapp_CdcEmulatorInitialize
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USART_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_USART_mySetLineCodingHandler
    _USART_mySetLineCodingHandler->___lldiv

Critical Paths under _main in BANK0

    _main->_moteHandler
    _test_powerup->_moteApp_testSensors
    _test_switch->_oled_putString
    _test_oled->_oled_putString
    _test_leds->_oled_putString
    _test_comms->_oled_putString
    _moteApp_toggleLeds->_sendCommand
    _moteApp_testSensors->_ADC_TempConversion
    _moteHandler->_moteRunningProcess
    _moteRunningProcess->_ADC_TempConversion
    _sendDataCommand->_EUSART_Write
    _sendDataCommand->_hexToStr
    _oled_putint8->_oled_putString
    _oled_putUint8->_oled_putString
    _moteApp_setSensorsInput->_moteApp_delayms
    _moteApp_getTempValue->_MOTEapp_getModuleResponse
    _moteApp_getTempValue->_sendCommand
    _moteApp_getLightValue->_moteApp_setLightString
    _moteApp_setLightString->_memcpy
    _moteApp_convertSensorValue->_moteApp_getLightValue
    _moteApp_add8bToDataBuffer->___awmod
    _moteApp_add16bToDataBuffer->___lwdiv
    _oled_setDisplay->_oled_writeCommand
    _oled_devInit->_oled_initialDispayLine
    _oled_devInit->_oled_powerControl
    _oled_devInit->_oled_regulorResistorSelect
    _oled_devInit->_oled_setContrastControlRegister
    _oled_setContrastControlRegister->_oled_writeCommand
    _oled_regulorResistorSelect->_oled_writeCommand
    _oled_powerControl->_oled_writeCommand
    _oled_initialDispayLine->_oled_writeCommand
    _oled_displayOff->_oled_writeCommand
    _moduleSleep->_sendCommand
    _moduleResync->_moteApp_delayms
    _MOTEapp_getModuleResponse->_EUSART_Read
    _MOTEapp_SetDataRateSetting->_sendCommand
    _ADC_TempConversion->___fldiv
    ___flmul->___fladd
    ___fldiv->___flmul
    _moteJoiningProcess->_oled_putString
    _TMRapp_Handler->___almod
    _moteApp_clearCommand->_sendCommand
    _sendCommand->_EUSART_Write
    _EndLine->_EUSART_Write
    _USBapp_Handler->_oled_putString
    _oled_putString->_moteApp_getLightValue
    _oled_clear->_oled_clearRow
    _oled_clearRow->_oled_putChar
    _oled_putChar->_Set_Column_Address
    _oled_putChar->_Set_Page_Address
    _Set_Page_Address->_oled_writeCommand
    _Set_Column_Address->_oled_writeCommand
    _USBapp_DeviceCdcEmulatorHandler->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_moteHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  877603
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
               _MOTEapp_handlerState
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _USBapp_Handler
                _USBapp_handlerState
                       _moduleResync
               _moteApp_clearCommand
                    _moteApp_delayms
                        _moteHandler
                         _oled_clear
                          _oled_init
                     _oled_putString
                       _test_powerup
 ---------------------------------------------------------------------------------
 (1) _test_powerup                                         0     0      0  337952
                 _EUSART_FlushBuffer
                    _moteApp_delayms
                _moteApp_testSensors
                         _oled_clear
                         _test_comms
                          _test_leds
                          _test_oled
                        _test_switch
 ---------------------------------------------------------------------------------
 (2) _test_switch                                          4     4      0   48844
                                             22 BANK0      4     4      0
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_oled                                            0     0      0   48708
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_leds                                            0     0      0   48234
                            _delayms
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_comms                                           0     0      0   52510
                            _delayms
                 _moteApp_toggleLeds
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_toggleLeds                                   2     2      0    4276
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _delayms                                              5     3      2     900
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _moteApp_testSensors                                  3     3      0  135931
                                             76 BANK0      1     1      0
                 _ADC_TempConversion
         _moteApp_convertSensorValue
              _moteApp_getLightValue
               _moteApp_getTempValue
            _moteApp_setSensorsInput
                         _oled_clear
                       _oled_putChar
                     _oled_putString
                       _oled_putint8
 ---------------------------------------------------------------------------------
 (1) _moteHandler                                          6     6      0  420438
                                             86 BANK0      1     1      0
                                              0 BANK1      5     5      0
                 _ADC_TempConversion
             _MOTEapp_TimerBasedTask
          _MOTEapp_getModuleResponse
               _TMRapp_ClearBitFlags
                     _TMRapp_Handler
                     _USBapp_exitCDC
                _USBapp_exitCDCState
         _moteApp_convertSensorValue
              _moteApp_getLightValue
               _moteApp_getTempValue
                 _moteJoiningProcess
                 _moteRunningProcess
                         _oled_clear
                     _oled_putString
                       _oled_putint8
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _moteRunningProcess                                  10     7      3  226718
                                             76 BANK0     10     7      3
                 _ADC_TempConversion
         _MOTEapp_SetDataRateSetting
                     _TMR2_ReadTimer
                  _moteApp_GoToSleep
         _moteApp_add16bToDataBuffer
          _moteApp_add8bToDataBuffer
               _moteApp_clearBuffers
         _moteApp_convertSensorValue
                    _moteApp_delayms
             _moteApp_getLightString
              _moteApp_getLightValue
               _moteApp_getTempValue
            _moteApp_setSensorsInput
                         _oled_clear
                     _oled_putString
                      _oled_putUint8
                       _oled_putint8
                    _sendDataCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _sendDataCommand                                      8     3      5    1667
                                              1 BANK0      8     3      5
                       _EUSART_Write
                            _EndLine
                           _hexToStr
 ---------------------------------------------------------------------------------
 (4) _hexToStr                                             1     1      0     189
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putint8                                        10     8      2   51815
                                             22 BANK0     10     8      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _oled_putUint8                                        9     7      2   51710
                                             22 BANK0      9     7      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_setSensorsInput                              2     2      0    6769
                                              5 BANK0      2     2      0
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _moteApp_getTempValue                                 4     2      2    4483
                                              3 BANK0      4     2      2
          _MOTEapp_getModuleResponse
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _moteApp_getLightValue                                4     2      2    5546
                                             13 BANK0      4     2      2
          _MOTEapp_getModuleResponse
             _moteApp_setLightString
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _moteApp_setLightString                               3     1      2    1063
                                             10 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              10     4      6     798
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (3) _moteApp_getLightString                               2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _moteApp_convertSensorValue                           8     6      2    7958
                                             17 BANK0      8     6      2
                             ___wmul
              _moteApp_getLightValue (ARG)
               _moteApp_getTempValue (ARG)
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    7068
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_clearBuffers                                 4     4      0     396
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_add8bToDataBuffer                            4     3      1    3840
                                              6 BANK0      4     3      1
                            ___awmod
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     865
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    2305
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_add16bToDataBuffer                           5     2      3    6327
                                              7 BANK0      5     2      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    1905
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_GoToSleep                                    1     1      0   15335
                                             14 BANK0      1     1      0
                 _EUSART_FlushBuffer
             _PIN_MANAGER_Initialize
                       _moduleResync
                        _moduleSleep
                    _moteApp_delayms
                    _oled_displayOff
                          _oled_init
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            0     0      0    1884
                         _oled_clear
                       _oled_devInit
                    _oled_setDisplay
                       _oled_setFont
 ---------------------------------------------------------------------------------
 (2) _oled_setFont                                         2     0      2     166
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _oled_setDisplay                                      1     1      0      62
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (2) _oled_devInit                                         1     1      0     282
                                              2 BANK0      1     1      0
             _oled_initialDispayLine
                  _oled_powerControl
         _oled_regulorResistorSelect
    _oled_setContrastControlRegister
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_setContrastControlRegister                      1     1      0      62
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_regulorResistorSelect                           1     1      0      62
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_powerControl                                    1     1      0      62
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_initialDispayLine                               1     1      0      65
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_displayOff                                      1     1      0      31
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _moduleSleep                                          1     1      0    4245
                                              3 BANK0      1     1      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _moduleResync                                         3     3      0    6775
                                              5 BANK0      3     3      0
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _MOTEapp_getModuleResponse                            2     2      0     204
                                              1 BANK0      2     2      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART_FlushBuffer                                   1     1      0      99
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_ReadTimer                                       1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_SetDataRateSetting                           2     2      0    4307
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _ADC_TempConversion                                   6     6      0    9408
                                             70 BANK0      6     6      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     580
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     441
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    2777
                                             20 BANK0     25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    1991
                                             45 BANK0     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3486
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (2) _moteJoiningProcess                                   6     4      2   60791
                                             22 BANK0      6     4      2
                   _DATAEE_WriteByte
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                        _sendCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6    2064
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    2629
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _moteApp_delayms                                      5     3      2    2252
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     3     2      1     304
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDCState                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMRapp_Handler                                       0     0      0    4201
                            ___almod
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4    3560
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     641
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (2) _TMRapp_ClearBitFlags                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MOTEapp_TimerBasedTask                               1     1      0     217
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _moteApp_clearCommand                                 0     0      0    4245
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _sendCommand                                          2     0      2    4245
                                              1 BANK0      2     0      2
                       _EUSART_Write
                            _EndLine
 ---------------------------------------------------------------------------------
 (5) _EndLine                                              0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (1) _USBapp_handlerState                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_Handler                                       1     1      0   53591
                                             22 BANK0      1     1      0
    _USBapp_DeviceCdcEmulatorHandler
                         _oled_clear
                     _oled_putString
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _service_pushbutton                                   1     1      0      46
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putString                                       5     1      4   47334
                                             17 BANK0      5     1      4
             _moteApp_getLightString (ARG)
              _moteApp_getLightValue (ARG)
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (3) _oled_clear                                           0     0      0    1374
                      _oled_clearRow
 ---------------------------------------------------------------------------------
 (4) _oled_clearRow                                        2     2      0    1374
                                             12 BANK0      2     2      0
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (4) _oled_putChar                                        10     8      2    1244
                                              2 BANK0     10     8      2
                 _Set_Column_Address
                   _Set_Page_Address
                     _oled_writeData
 ---------------------------------------------------------------------------------
 (5) _oled_writeData                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _Set_Page_Address                                     1     1      0      96
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (5) _Set_Column_Address                                   1     1      0      93
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (6) _oled_writeCommand                                    1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_DeviceCdcEmulatorHandler                      1     1      0    4800
                                             13 BANK0      1     1      0
                       _CDCTxService
                        _EUSART_Read
                       _EUSART_Write
           _MOTEapp_setResponseReady
               _USBapp_getrxByteFlag
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     270
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2267
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBapp_getrxByteFlag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_setResponseReady                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Read                                          1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2164
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1926
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CMP1_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0       0
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOTEapp_handlerState                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                         14    14      0   30063
                                             31 COMRAM    14    14      0
                           _CMP1_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR1_ISR
                           _TMR3_ISR
                        _TMRapp_Tick
                     _USBDeviceTasks
               _USBapp_setrxByteFlag
 ---------------------------------------------------------------------------------
 (11) _USBapp_setrxByteFlag                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USBDeviceTasks                                      1     1      0   30063
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (12) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (12) _USBWakeFromSuspend                                  0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBSuspend                                          0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPService                                    3     3      0   17698
                                             27 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfSetupHandler                              0     0      0   16631
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (14) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) _USBCheckStdRequest                                  0     0      0   12636
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStdSetCfgHandler                                 1     1      0    4401
                                             21 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (15) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (15) _USBStdFeatureReqHandler                             6     6      0    4286
                                             21 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3903
                                             13 COMRAM     8     2      6
                 _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
 ---------------------------------------------------------------------------------
 (13) _USBapp_CdcEmulatorInitialize                        1     1      0    1211
                                             12 COMRAM     1     1      0
                          _CDCInitEP
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (13) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfOutHandler                                0     0      0     499
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfRxService                                 2     2      0     499
                                             17 COMRAM     2     2      0
       _USART_mySetLineCodingHandler *
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfInHandler                                 1     1      0     500
                                             17 COMRAM     1     1      0
       _USART_mySetLineCodingHandler *
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USART_mySetLineCodingHandler                        4     4      0     385
                                             13 COMRAM     4     4      0
                            ___lldiv
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (14) i2_EUSART_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) ___lldiv                                            13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (11) _TMRapp_Tick                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR3_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CMP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _MOTEapp_handlerState
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
     _TMR3_Initialize
       _TMR3_StartTimer
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBapp_Handler
     _USBapp_DeviceCdcEmulatorHandler
       _CDCTxService
         _USBTransferOnePacket
       _EUSART_Read
       _EUSART_Write
       _MOTEapp_setResponseReady
       _USBapp_getrxByteFlag
       _getsUSBUSART
         _USBTransferOnePacket
       _putUSBUSART
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_putString
       _moteApp_getLightString (ARG)
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putChar (ARG)
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
     _service_pushbutton
   _USBapp_handlerState
   _moduleResync
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _moteApp_delayms
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_clearCommand
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_delayms
   _moteHandler
     _ADC_TempConversion
       ___fladd
       ___fldiv
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
     _MOTEapp_TimerBasedTask
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _TMRapp_ClearBitFlags
     _TMRapp_Handler
       ___almod
       ___lwmod
     _USBapp_exitCDC
     _USBapp_exitCDCState
     _moteApp_convertSensorValue
       ___wmul
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
     _moteApp_getLightValue
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _moteApp_setLightString
         _memcpy
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _moteApp_getTempValue
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _moteJoiningProcess
       _DATAEE_WriteByte
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
       _strcmp
       _strncmp
     _moteRunningProcess
       _ADC_TempConversion
         ___fladd
         ___fldiv
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _MOTEapp_SetDataRateSetting
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _TMR2_ReadTimer
       _moteApp_GoToSleep
         _EUSART_FlushBuffer
         _PIN_MANAGER_Initialize
         _moduleResync
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moduleSleep
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_delayms
         _oled_displayOff
           _oled_writeCommand
         _oled_init
           _oled_clear
             _oled_clearRow
               _oled_putChar
                 _Set_Column_Address
                   _oled_writeCommand
                 _Set_Page_Address
                   _oled_writeCommand
                 _oled_writeData
           _oled_devInit
             _oled_initialDispayLine
               _oled_writeCommand
             _oled_powerControl
               _oled_writeCommand
             _oled_regulorResistorSelect
               _oled_writeCommand
             _oled_setContrastControlRegister
               _oled_writeCommand
             _oled_writeCommand
           _oled_setDisplay
             _oled_writeCommand
           _oled_setFont
       _moteApp_add16bToDataBuffer
         ___lwdiv
         ___lwmod
       _moteApp_add8bToDataBuffer
         ___awmod
         ___lbdiv
       _moteApp_clearBuffers
       _moteApp_convertSensorValue
         ___wmul
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_getTempValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_delayms
       _moteApp_getLightString
       _moteApp_getLightValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_setSensorsInput
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putUint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _sendDataCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
         _hexToStr
       _strcmp
       _strncmp
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_putString
       _moteApp_getLightString (ARG)
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putChar (ARG)
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
     _oled_putint8
       ___awmod
       ___lbdiv
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _service_pushbutton
   _oled_clear
     _oled_clearRow
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
   _oled_init
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_devInit
       _oled_initialDispayLine
         _oled_writeCommand
       _oled_powerControl
         _oled_writeCommand
       _oled_regulorResistorSelect
         _oled_writeCommand
       _oled_setContrastControlRegister
         _oled_writeCommand
       _oled_writeCommand
     _oled_setDisplay
       _oled_writeCommand
     _oled_setFont
   _oled_putString
     _moteApp_getLightString (ARG)
     _moteApp_getLightValue (ARG)
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _moteApp_setLightString
         _memcpy
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _oled_putChar (ARG)
       _Set_Column_Address
         _oled_writeCommand
       _Set_Page_Address
         _oled_writeCommand
       _oled_writeData
   _test_powerup
     _EUSART_FlushBuffer
     _moteApp_delayms
     _moteApp_testSensors
       _ADC_TempConversion
         ___fladd
         ___fldiv
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _moteApp_convertSensorValue
         ___wmul
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_getTempValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_getLightValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_setSensorsInput
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_comms
       _delayms
       _moteApp_toggleLeds
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_leds
       _delayms
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_oled
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_switch
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData

 _INTERRUPT_InterruptManager (ROOT)
   _CMP1_ISR
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR1_ISR
   _TMR3_ISR
   _TMRapp_Tick
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USART_mySetLineCodingHandler *
           ___lldiv
           i2_EUSART_Initialize
         _USBCtrlTrfTxService *
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USART_mySetLineCodingHandler *
             ___lldiv
             i2_EUSART_Initialize
           _USBCtrlEPAllowStatusStage *
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             _USBapp_CdcEmulatorInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               i2_EUSART_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           _USBapp_CdcEmulatorInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             i2_EUSART_Initialize
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         i2_EUSART_Initialize
     i2_USBDeviceInit
       i2_memset
   _USBapp_setrxByteFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C0       9       75.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      5      F3       7       94.9%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     57      9E       5       98.8%
BITBANK5            80      0       0      15        0.0%
BANK5               80      0       0      16        0.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     2D      5A       1       95.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2AB      14        0.0%
DATA                 0      0     2AB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Dec 15 11:49:34 2016

                                 _USB_SD_Ptr 759B                                 ___fldiv@aexp 00A5  
                               ___fldiv@bexp 00A4                                 ___fldiv@sign 0099  
                ?_moteApp_add16bToDataBuffer 0067                        ??_moteApp_testSensors 00AC  
                                         l60 3C4C                            ??_CMP1_Initialize 0060  
                                 _USB_Buffer 0280                    _MOTEapp_getModuleResponse 5CD0  
             moteJoiningProcess@selectButton 0077                                _USBDeviceInit 3528  
                        ___wmul@multiplicand 0062                      EUSART_FlushBuffer@index 0060  
                     __end_of_oled_writeData 69CE                         ??_moteApp_toggleLeds 0063  
                         __size_of_CDCInitEP 006E                     USBapp_handlerState@state 0060  
                               __CFG_CP0$OFF 000000                                 __CFG_CP1$OFF 000000  
                               __CFG_CP2$OFF 000000                                 __CFG_CP3$OFF 000000  
             __end_of_moteApp_setLightString 5B64         USER_USB_CALLBACK_EVENT_HANDLER@event 000E  
       USER_USB_CALLBACK_EVENT_HANDLER@pdata 0010                                          l109 6562  
                                        l126 412A                                          l402 134E  
                                        l340 5880                                          l500 0762  
                __end_of_USBStdGetDscHandler 3DA8                                          l343 58CA  
                                        l352 65D6                                          l523 0B20  
                                        l446 18F8                                          l358 6850  
                                        l383 2F16                                          l713 5710  
                                        l473 02D2                                          l397 132A  
                                        l568 105E                                          l675 3F54  
                                        l755 5B60                                          l587 1256  
                                        l860 4DFA                                          _BDT 000400  
                                        l669 3EBA                                          l855 4DEE  
                                        _CKE 007E3E                                          l880 4698  
                                        l849 4D42                                          l882 46C4  
                                        _CKP 007E34                                          _GIE 007F97  
                               __CFG_CPB$OFF 000000                      ?_oled_initialDispayLine 0001  
                                        _PR2 000FBB                                 __CFG_CPD$OFF 000000  
                         _moteJoiningProcess 131E                                          _UIE 000F64  
                                        _UIR 000F65                              _timer1ReloadVal 0048  
                                        _log 02D0                                   _USBSuspend 6816  
                               ___awmod@sign 0065                 __end_of_moteApp_clearBuffers 51E2  
               __end_of_moteApp_clearCommand 6A5C                         USBStdSetCfgHandler@i 0016  
                            _TMR2_Initialize 6A24                                          prod 000FF3  
                                        tosl 000FFD                                          wreg 000FE8  
                             _USBDeviceTasks 38F8                               _USBDeviceState 00D2  
                               ___flmul@aexp 0081                                 ___flmul@bexp 0086  
                               ___flmul@sign 0080                                 ___flmul@temp 008B  
                               ___flmul@prod 0087                        moteApp_delayms@length 0060  
               MOTEapp_SetDataRateSetting@dr 0064                        ??_USBCtrlTrfRxService 0012  
                   __size_ofi2_USBDeviceInit 0138                               ??_getsUSBUSART 006A  
                               ?_EUSART_Read 0001                     USBEnableEndpoint@options 0009  
                               __CFG_LVP$OFF 000000                          ?_moteJoiningProcess 0076  
                               ___fltol@exp1 0069                                         l1034 4D20  
                                       l1133 6386                                         l1142 63D8  
                                       l1232 69F0                                         l2072 3408  
                            _timer3ReloadVal 00C7                                         l1444 64EE  
                                       l2077 345C                                         l1712 3596  
                                       l2506 5CC6                                         l2611 29A2  
                                       l2516 5FBC                                         l2620 29DA  
                 USBConfigureEndpoint@handle 0007                                         l2622 2A48  
                                       l2614 294A                                         l2641 1EE4  
                                       l2650 21EE                                         l2555 1B68  
                                       l2572 1CDC                                         l2556 1B5C  
                                       l1773 6722                                         l2581 1D70  
                                       l2557 1B28                                         l1774 6720  
                                       l2648 2180                                         l2680 3078  
                                       l2658 2292                                         l2694 3180  
                                       l2695 3198                                         l2687 3124  
                                       STR_1 7D1F                                         STR_2 7D01  
                                       STR_3 7D10                                         STR_4 7F3E  
                                       STR_5 7D8B                                         STR_6 7D98  
                                       STR_7 7CC4                                         STR_8 7E71  
                                       STR_9 7F47                              _lightStringSize 00E3  
                                       _LATD 000F8C              __size_of_MOTEapp_TimerBasedTask 0026  
                                       _PEIE 007F96                        ??_USBCtrlTrfTxService 0001  
                                       _UCFG 000F62                                         _UEP0 000F6A  
                                       _UEP1 000F6B                                         _UEIE 000F66  
                                       _UEIR 000F67                                         _UCON 000F60  
                                       _TMR2 000FBC                                         _TMR3 000FB2  
                            _CDCDataInHandle 00BD       USBStdFeatureReqHandler@current_ep_data 0019  
                                       _pDst 00C3                                         _main 3B5C  
                   ??i2_USBTransferOnePacket 0005            __end_of_moteApp_add8bToDataBuffer 49DE  
                                       fsr0h 000FEA                                         fsr1h 000FE2  
                                       indf0 000FEF                                         fsr0l 000FE9  
                                       fsr2h 000FDA                                         indf1 000FE7  
                                _BaudRateGen 0146                                         fsr1l 000FE1  
                                       indf2 000FDF                                         fsr2l 000FD9  
                            _USBDeviceAttach 66FA                                         btemp 005B  
                              __CFG_BORV$190 000000                                         pclat 000FFA  
                                       prodh 000FF4                                         prodl 000FF3  
                       _USBapp_setrxByteFlag 6B0C                                         start 00C4  
                              __CFG_IESO$OFF 000000                              ___fldiv@new_exp 009E  
                            __end_of_EndLine 6AB8                              _TMR3_Initialize 68FA  
                                _storedLight 01E4                  __end_of_USBapp_exitCDCState 6AD8  
                           __end_of_CMP1_ISR 6B2C                              ?_oled_putString 0071  
                 __end_of_USBCheckStdRequest 4ABA                       ??_USBCtrlTrfOutHandler 0014  
                __size_of_moteRunningProcess 1256                             ?_oled_setDisplay 0001  
                              __CFG_MCLRE$ON 000000                                 ___param_bank 000010  
                  ??_USBStdFeatureReqHandler 0016                                  _TMRapp_Tick 6B12  
                       ??_moteJoiningProcess 0078                       moteApp_delayms@counter 0063  
              ?_USART_mySetLineCodingHandler 0001                       sendDataCommand@appData 0063  
                          sendCommand@string 0061                     ??_USBStdGetStatusHandler 0001  
               __end_of_USBapp_getrxByteFlag 6B1C                    __size_of_DATAEE_WriteByte 003C  
                             ?_USBDeviceInit 0001                       _moteApp_getLightString 6A8E  
                              ?_EUSART_Write 0001               __size_of_OSCILLATOR_Initialize 0016  
             __end_of_oled_initialDispayLine 6A4A                              ?_oled_writeData 0001  
              __end_of_OSCILLATOR_Initialize 69FA                                        l12000 6808  
                                      l12042 5EA0                                        l12210 1A14  
                                      l12034 58C4                                        l12300 1BDA  
                                      l12220 1A42                                        l12204 1A00  
                                      l12028 58A4                                        l13020 516E  
                                      l13004 5138                                        l12132 5B36  
                                      l12038 5E96                                        l12054 62A0  
                                      l13014 515E                                        l13110 4AD2  
                                      l12304 1BEC                                        l12216 1A38  
                                      l12064 62C6                                        l13040 51BC  
                                      l13032 519A                                        l13016 5164  
                                      l13008 5142                                        l12136 5B40  
                                      l12080 6596                                        l12322 1D0E  
                                      l12314 1CBC                                        l13210 26CE  
                                      l12058 62AA                                        l13026 518A  
                                      l12090 65AE                                        l13114 4AEA  
                                      l13106 4ABC                                        l12156 4BE6  
                                      l12148 4BB2                                        l12332 1D30  
                                      l12340 1D4A                                        l12228 1A6C  
                                      l12500 2ADA                                        l13212 26E0  
                                      l13044 51C6                                        l13028 5190  
                                      l13060 5912                                        l13132 4B82  
                                      l13124 4B16                                        l12270 1B3C  
                                      l12510 2B10                                        l12502 2AFC  
                                      l12430 2872                                        l12414 2814  
                                      l13038 51B6                                        l13070 594E  
                                      l13054 58F2                                        l13118 4AF4  
                                      l14022 0446                                        l12168 4C4C  
                                      l12328 1D24                                        l12272 1B42  
                                      l12192 19CA                                        l12408 27F0  
                                      l12600 216A                                        l13208 26BC  
                                      l13216 26F2                                        l13064 592E  
                                      l13128 4B32                                        l14200 0A40  
                                      l14120 0706                                        l13402 3412  
                                      l12370 1E06                                        l12362 1DD8  
                                      l12338 1D44                                        l12258 1AA8  
                                      l12186 19A6                                        l12418 281E  
                                      l12530 1E72                                        l13218 272C  
                                      l13058 5908                                        l14130 0756  
                                      l14018 0434                                        l12372 1E0A  
                                      l12348 1D6A                                        l12276 1B4C  
                                      l12196 19D4                                        l12508 2B0C  
                                      l12532 1E78                                        l12524 1E4E  
                                      l13148 2372                                        l13324 3F88  
                                      l13068 5944                                        l14204 0A54  
                                      l14132 075C                                        l14124 0710  
                                      l13422 3488                                        l13430 34AC  
                                      l13414 3460                                        l11822 54B0  
                                      l12366 1DFA                                        l12358 1DC6  
                                      l12294 1BCA                                        l12286 1B8C  
                                      l12462 299E                                        l12438 28A0  
                                      l12630 2264                                        l12606 2194  
                                      l12550 1ED2                                        l12542 1EA8  
                                      l12534 1E8A                                        l12710 3E50  
                                      l13158 23FE                                        l13318 3F78  
                                      l14302 0E1E                                        l14214 0AB4  
                                      l14118 0700                                        l14070 057C  
                                      l14062 053C                                        l13432 34B8  
                                      l13440 34DC                                        l13408 3446  
                                      l13352 45F0                                        l13344 45AE  
                                      l12296 1BD0                                        l12456 2956  
                                      l12448 291E                                        l12640 22B2  
                                      l12632 2278                                        l12616 21E8  
                                      l12720 3E86                                        l13168 248A  
                                      l14400 11AA                                        l14320 0EE2  
                                      l14224 0B04                                        l14144 07F2  
                                      l14152 0890                                        l13520 40EE  
                                      l13450 3500                                        l13442 34E6  
                                      l11834 63C8                                        l13354 45F8  
                                      l13362 465A                                        l13346 45B8  
                                      l11826 54BA                                        l11914 6762  
                                      l11906 65BE                                        l12378 1E1E  
                                      l12474 29EE                                        l12394 27B6  
                                      l12642 22BC                                        l12626 223E  
                                      l12554 1EF8                                        l12706 3E3C  
                                      l12810 3106                                        l13178 2516  
                                      l14410 1234                                        l14402 11C8  
                                      l14322 0F00                                        l14314 0E88  
                                      l14330 0F5A                                        l14138 07A0  
                                      l14154 08A2                                        l14066 0568  
                                      l14058 0510                                        l13522 410C  
                                      l13452 3524                                        l11852 6388  
                                      l12484 2A42                                        l12468 29C4  
                                      l12388 2792                                        l12548 1ECC  
                                      l12724 3EA2                                        l12716 3E6C  
                                      l12804 30B0                                        l13188 25A2  
                                      l12660 5564                                        l12740 6052  
                                      l14404 11E6                                        l14340 0FAA  
                                      l14324 0F1E                                        l14316 0EA6  
                                      l14332 0F8A                                        l14260 0C8A  
                                      l14244 0BCE                                        l14228 0B44  
                                      l14180 0980                                        l14148 0842  
                                      l13540 419A                                        l13390 33E2  
                                      l11862 63BA                                        l11846 6402  
                                      l13358 4628                                        l13382 68D4  
                                      l11918 6778                                        l12494 2A98  
                                      l12398 27C0                                        l12558 1F0C  
                                      l12718 3E7C                                        l12830 31EA  
                                      l12806 30B8                                        l13198 262E  
                                      l12734 6042                                        l12750 607C  
                                      l11950 6346                                        l12902 60FA  
                                      l14326 0F3C                                        l14318 0EC4  
                                      l14262 0CA8                                        l14270 0D02  
                                      l14158 08B6                                        l14430 12C0  
                                      l13534 417E                                        l13448 34FC  
                                      l13392 33EC                                        l11848 6404  
                                      l13480 4406                                        l13472 43D4  
                                      l13800 1660                                        l13704 132C  
                                      l12816 3162                                        l12808 30C8  
                                      l11936 5D14                                        l11944 5D3E  
                                      l12760 5C76                                        l12680 55D0  
                                      l12672 55AE                                        l12664 5578  
                                      l12656 5554                                        l14416 1250  
                                      l14408 1204                                        l14352 1016  
                                      l14344 0FCE                                        l14264 0CC6  
                                      l14272 0D2C                                        l14256 0C4E  
                                      l14168 0916                                        l14096 065C  
                                      l14088 0622                                        l13528 4154  
                                      l14602 35E6                                        l11874 6872  
                                      l13802 1664                                        l12498 2AC6  
                                      l12690 3DCE                                        l12818 3172  
                                      l12762 5C82                                        l12666 5584  
                                      l12746 6070                                        l12738 604C  
                                      l12930 568C                                        l12906 6110  
                                      l12922 631C                                        l14338 0FA2  
                                      l14266 0CE4                                        l14258 0C6C  
                                      l14540 66E2                                        l13396 33FC  
                                      l14700 4DB2                                        l13492 4478  
                                      l13484 444A                                        l13476 43F0  
                                      l13468 43BC                                        l12780 5F78  
                                      l13740 1484                                        l13708 133E  
                                      l12772 5CB8                                        l12764 5C88  
                                      l12668 558A                                        l12676 55BC  
                                      l12940 56CC                                        l11956 6366  
                                      l12908 611A                                        l12924 6326  
                                      l14356 103A                                        l14348 0FF2  
                                      l14364 1080                                        l14292 0DBE  
                                      l14284 0D86                                        l14276 0D50  
                                      l11878 687C                                        l13662 68AA  
                                      l13478 4400                                        l12782 5F84  
                                      l13726 13F0                                        l12934 5696  
                                      l12918 6306                                        l14390 112A  
                                      l14366 10AA                                        l14536 66D0  
                                      l14608 364C                                        l14712 4DD6  
                                      l13488 445C                                        l12784 5F8A  
                                      l13840 17CC                                        l13824 173C  
                                      l13816 16FE                                        l13808 169A  
                                      l14392 1132                                        l14288 0DAA  
                                      l12856 654A                                        l14570 356C  
                                      l13690 5BAC                                        l13658 68A0  
                                      l13850 1840                                        l13818 1702  
                                      l13746 14A4                                        l13738 1480  
                                      l12954 4C82                                        l14394 1150  
                                      l14378 10FE                                        l14730 2DEC  
                                      l12874 424E                                        l14468 4712  
                                      l12788 5FAE                                        l13860 1882  
                                      l13852 1844                                        l13828 175A  
                                      l13772 1566                                        l13756 14EA  
                                      l14396 116E                                        l14388 1124  
                                      l14812 300C                                        l14740 2E08  
                                      l14732 2DF2                                        l14574 3576  
                                      l14478 473A                                        l13694 5BD0  
                                      l13686 5BA4                                        l13678 5B72  
                                      l12982 564E                                        l12974 55DC  
                                      l13854 186C                                        l13838 17C8  
                                      l13782 15CC                                        l13766 1530  
                                      l12798 3088                                        l14398 118C  
                                      l14814 3028                                        l14750 2E3C  
                                      l13696 5BD4                                        l13688 5BA8  
                                      l12992 61EE                                        l12984 565A  
                                      l13856 1870                                        l13784 15DC  
                                      l13944 023E                                        l14808 2FF6  
                                      l14586 35A2                                        l14594 35B4  
                                      l12994 61FA                                        l12978 560C  
                                      l13882 1900                                        l13874 18DE  
                                      l13866 18C4                                        l13786 15E0  
                                      l13970 02C8                                        l13962 02AC  
                                      l14754 2E4A                                        l14746 2E26  
                                      l14684 4D44                                        l13868 18C8  
                                      l13972 02D4                                        l13948 0250  
                                      l14598 35DC                                        l14694 4DA0  
                                      l12998 6234                                        l13878 18EC  
                                      l13798 1650                                        l13886 193A  
                                      l14782 2F18                                        l14774 2EF0  
                                      l14854 3BD8                                        l13888 1982  
                                      l13976 02E8                                        l14698 4DAA  
                                      l13986 0348                                        l14794 2F7A  
                                      l14874 3C60                                        l14882 3C76  
                                      l14868 3C4E                                        l13998 03B2  
                              ___fltol@sign1 0068                              __end_of___almod 448A  
                            __end_of___fladd 1E30                                        ?_main 0001  
                            __end_of___fldiv 2B34                              __end_of___lbdiv 6082  
                                      _EEADR 000FA9                                        STR_10 7DF5  
                                      STR_11 7E7D                                        STR_20 7F50  
                                      STR_12 7E1C                                        STR_21 7FFD  
                                      STR_13 7E02                                        STR_30 7EFD  
                                      STR_14 7E0F                                        STR_22 7A2E  
                                      STR_23 7A73                                        STR_31 7FB9  
                                      STR_15 7EC0                                        STR_16 7F07  
                                      STR_24 7EDF                                        STR_32 7AEF  
                                      STR_40 7A67                                        STR_17 7F59  
                                      STR_25 7F35                                        STR_41 7DE8  
                                      STR_33 7B99                                        STR_18 7F6A  
                                      STR_50 7ED5                                        STR_26 7BAA  
                                      STR_34 7A9A                                        STR_42 7A89  
                                      STR_35 7FBE                                        STR_19 7F72  
                                      STR_51 7E9F                                        STR_43 7D3C  
                                      STR_27 7BFF                                        STR_36 7AEF  
                                      STR_60 7F23                                        STR_44 7FF8  
                                      STR_52 7EF3                                        STR_28 7C10  
                            __end_of___awmod 55DA                                        STR_37 7B99  
                                      STR_53 7FF8                                        STR_61 7E89  
                                      STR_45 7D58                                        STR_29 7ADE  
                                      STR_38 7A9A                                        STR_62 7E9F  
                                      STR_70 7EAA                                        STR_54 7D58  
                                      STR_46 7EB5                                        STR_55 7EB5  
                                      STR_39 7EFD                                        STR_63 7F96  
                                      STR_47 7F1A                                        STR_71 7C32  
                                      STR_80 7C84                                        STR_56 7F1A  
                                      STR_48 7DE8                                        STR_64 7EE9  
                                      STR_72 7E35                                        STR_65 7F8F  
                                      STR_49 7F23                                        STR_73 7D73  
                                      STR_57 7D4A                                        STR_81 7BDD  
                                      STR_66 7D3C                                        STR_58 7D3C  
                                      STR_90 7FAB                                        STR_82 7D66  
                                      STR_74 7D2E                                        STR_67 7E94  
                                      STR_59 7E94                                        STR_91 7B00  
                                      STR_75 7ACD                                        STR_83 7A55  
                                      STR_84 7D2E                                        STR_68 7EAA  
                                      STR_76 7B33                                        STR_92 7A78  
                                      STR_69 7D4A                                        STR_93 7FB2  
                                      STR_85 7E65                                        STR_77 7C84  
                                      STR_86 7E4D                                        STR_94 7BBB  
                                      STR_78 7ABC                                        STR_95 7FA4  
                                      STR_87 7E41                                        STR_79 7AAB  
                                      STR_88 7D73                                        STR_96 7A42  
                            __end_of___flmul 22D6                                        STR_89 7FF8  
                                      STR_97 7F9D                                        STR_98 7CB4  
                                      STR_99 7ACD            __size_of_USBCtrlEPServiceComplete 0100  
                            __end_of___fltol 3EB4                              _TMR1_StartTimer 6B24  
                            __end_of___lldiv 5A68                                        u11070 1AF2  
                                      u11080 1B0A                                        u11090 1B0C  
          __size_of_MOTEapp_setResponseReady 0008                                        u12125 64FE  
                                      u12126 6500                                        _T1CON 000FCD  
                     __end_of_USBDeviceTasks 3A2C                                        u10820 5EC0  
                                      u12600 33D2                                        u10840 5EEE  
                                      _T2CON 000FBA                                        u11570 2AAC  
                                      u10827 5EB6                                        u12540 459E  
                                      u10847 5EE4                                        u14207 4190  
                                      u12608 33D6                                        u11760 2252  
                                      u11680 210C                      __end_of_sendDataCommand 4B94  
                                      _T3CON 000FB1                                        u14217 41BE  
                                      u14090 2E6A                                        u14307 6552  
                                      u14227 41D0                                        u12548 45A2  
                                      u11860 3DEE                                        u11685 2100  
                                      u14317 0898                                        u14237 41E2  
                                      u14407 2354                                        u14327 5A78  
                                      u14247 420E                                        u11865 3DE2  
                                      u14417 2366                                        u14337 5A8C  
                                      u14257 4220                    ?_USBCtrlEPServiceComplete 0001  
                                      u14507 243A                                        u14427 238A  
                                      u14347 5A9E                                        u14267 4232  
                                      u14517 245C                                        u14437 239C  
                                      u14357 685C                                        u14277 4266  
                                      u14607 252E                                        u14527 246E  
                                      u14447 23AE                                        u14367 22FC  
                                      u14287 4278                                        u14617 2540  
                                      u14537 2480                                        u14457 23D0  
                                      u14377 230E                                        u14297 428A  
                                      u14707 2612                                        u14627 2552  
                                      u14547 24A2                                        u14467 23E2  
                                      u14387 2320                                        u14717 2624  
                                      u14637 2574                                        u14557 24B4  
                                      u14477 23F4                                        u14397 2342  
                                      u14807 2758                                        u14727 2646  
                                      u14647 2586                                        u14567 24C6  
                                      u14487 2416                                        u14817 1908  
                                      u14737 2658                                        u14657 2598  
                                      u14577 24E8                                        u14497 2428  
                                      u14827 191A                                        u14747 266A  
                                      u14667 25BA                                        u14587 24FA  
                                      u14837 192C                                        u14757 268C  
                                      u14677 25CC                                        u14597 250C  
                                      u14847 65C6                                        u14767 269E  
                                      u14687 25DE                                        u14777 26B0  
                                      u14697 2600                                        u14787 2734  
                                      u14797 2746                              __end_of___lwdiv 5CD0  
                            __end_of___lwmod 5FC6                    ?_MOTEapp_setResponseReady 0001  
                        oled_putUint8@number 0078                                        _UADDR 000F63  
                                      _RCREG 000FAE                                        _RCSTA 000FAB  
                                      _TMR1H 000FCF                                        _TMR3H 000FB3  
                                      _TMR1L 000FCE                                        _TMR3L 000FB2  
                                      _SPBRG 000FAF                                        _TRISD 000F95  
   moteApp_add16bToDataBuffer@bufferLocation 0069      moteApp_add8bToDataBuffer@bufferLocation 0066  
                                      _USTAT 000F61                                        _TXREG 000FAD  
                                      _TXSTA 000FAC                                __CFG_WRT0$OFF 000000  
         __size_of_USBCtrlEPAllowStatusStage 00CE                              __end_of_delayms 6578  
                              __CFG_WRT1$OFF 000000                                __CFG_WRT2$OFF 000000  
                              __CFG_WRT3$OFF 000000                               __CFG_EBTR0$OFF 000000  
                             __CFG_FCMEN$OFF 000000                               __CFG_EBTR1$OFF 000000  
                             __CFG_EBTR2$OFF 000000                               __CFG_EBTR3$OFF 000000  
            __end_of_USBCtrlEPAllowDataStage 57B6                            oled_putChar@index 006B  
                           __end_of_TMR1_ISR 6AC4                                        _sd000 7960  
                                      _sd001 78E6              service_pushbutton@Release_Timer 00F2  
                                      _sd002 791A                                __CFG_WRTB$OFF 000000  
                           __end_of_TMR3_ISR 693A                                __CFG_WRTC$OFF 000000  
                              __CFG_WRTD$OFF 000000                              _DATAEE_ReadByte 69FA  
                             __CFG_EBTRB$OFF 000000                                   i2memset@p1 0001  
                                      _light 00C1                               __pbitbssCOMRAM 02D0  
                    __end_of_TMR1_Initialize 6624                                 _runningState 00EE  
                                      pclath 000FFA                                        tablat 000FF5  
                                      plusw2 000FDB                            __end_of_CDCInitEP 5E92  
                 oled_setDisplay@displayType 0061                                        status 000FD8  
                             __CFG_T3CMX$RC0 000000                              _TMR2_StartTimer 6B20  
                            __end_of_strncmp 567C                              ___lbdiv@divisor 0060  
                             __CFG_ICPRT$OFF 000000                        ?_USBapp_setrxByteFlag 0001  
                           __end_ofi2_memset 67EC                              ___lbdiv@counter 0062  
                               _m10SecTicker 0154                 __end_of_moteApp_getTempValue 6334  
                            putUSBUSART@data 0060           USART_mySetLineCodingHandler@dwBaud 000E  
               __size_of_USBStdSetCfgHandler 00E0                              __initialization 5BE0  
                      TMR2_ReadTimer@readVal 0060                __size_of_TMRapp_ClearBitFlags 0008  
                               __end_of_main 3C88                        _control_signal_bitmap 00DB  
              __size_of_MOTEapp_handlerState 000A                       _MOTEapp_TimerBasedTask 6890  
                             ??_EUSART_Write 0060                      __end_of_TMR2_Initialize 6A38  
                               ?_sendCommand 0061                  ?_INTERRUPT_InterruptManager 0001  
                  __size_of_USBCtrlEPService 00CE                                       ??_main 00B7  
                               ?_moduleSleep 0001                                 ?_moteHandler 0001  
                            _TMR3_StartTimer 6B1C                                __activetblptr 000002  
                            ?_USBDeviceTasks 0001                          i2_EUSART_Initialize 6488  
                  sendDataCommand@dataLength 0065                                  ?_USBSuspend 0001  
                                 _NextUSBOut 004B                               __CFG_SDOMX$RB3 000000  
                            __CFG_CCP2MX$RC1 000000                                 _cdc_mem_type 00D8  
           moteApp_convertSensorValue@string 0071                      __end_of_USBDeviceAttach 672E  
                                     _ADCON0 000FC2                                       _ADCON1 000FC1  
                                     _ADCON2 000FC0                             _CDCDataOutHandle 00BF  
                          _getsUSBUSART$6489 006B                                       _ACTCON 000FB5  
                                     STR_100 7B33                                       STR_101 7C84  
                                     STR_110 7C84                                       STR_102 7C64  
                                     STR_103 7C54                                       STR_111 7C21  
                                     STR_104 7C84                                       STR_112 7CD4  
                                     STR_120 7B11                                       STR_121 7F88  
                                     STR_113 7CE3                                       STR_105 7C43  
                                     STR_130 7CE3                                       STR_122 7FC3  
                                     STR_106 7ECB                                       STR_114 7C74  
                                     _ADRESH 000FC4                                       STR_131 7CD4  
                                     STR_115 7C64                                       STR_107 7E52  
                                     STR_123 7DCC                                       STR_132 7C64  
                                     STR_108 7ABC                                       STR_124 7FE1  
                                     STR_140 7FD0                                       STR_116 7F81  
                                     STR_133 7C54                                       STR_109 7AAB  
                                     STR_125 7FED                                       STR_141 7FD4  
                                     STR_117 7F7A                                       STR_134 7C84  
                                     STR_126 7FE5                                       STR_150 7FF0  
                                     STR_118 7FFB                                       STR_142 7FD8  
                                     _ADRESL 000FC3                                       STR_127 7FE9  
                                     STR_143 7FDC                                       STR_135 7BEE  
                                     STR_151 7BCC                                       STR_119 7B22  
                                     STR_160 7ACD                                       STR_144 7FF4  
                                     STR_128 7FF0                                       STR_136 7E59  
                                     STR_152 7C94                                       STR_137 7C74  
                                     STR_129 7C74                                       STR_153 7FC8  
                                     STR_145 7FDC                                       STR_161 7B33  
                                     STR_162 7C84                                       STR_154 7FCC  
                                     STR_146 7FE0                                       STR_138 7FC8  
                                     STR_170 7B55                                       STR_155 7FD0  
                                     STR_147 7FEC                                       STR_139 7FCC  
                                     STR_171 7DA7                                       STR_163 7CA4  
                                     STR_156 7FD4                                       STR_148 7FE4  
                                     STR_180 7F2C                                       STR_164 7B88  
                                     STR_172 7B66                                       STR_181 79B1  
                                     STR_157 7FD8                                       STR_149 7FE8  
                                     STR_173 7DB4                                       STR_165 7D80  
                                     _EEDATA 000FA8                                       STR_158 7FDC  
                                     STR_174 7B77                                       STR_166 7B44  
                                     STR_182 79CE                                       STR_190 797F  
                                     STR_159 7FF4                                       STR_175 7DC1  
                                     STR_167 7D8D                                       STR_183 79E8  
                                     STR_191 7964                                       STR_168 7B44  
                                     STR_176 7B88                                       STR_192 7A02  
                                     STR_184 799A                                       STR_177 7DCE  
                                     STR_169 7D9A                                       STR_193 7A18  
                                     STR_185 79B4                                       STR_186 7F59  
                                     STR_194 7F11                                       STR_178 7DDB  
                                     STR_187 7F72                                       STR_195 7F62  
                                     STR_179 7CF2                                       STR_188 7F6A  
                                     STR_196 7E29                                       STR_189 7A73  
                                     _EECON2 000FA7                                       _ANSELD 000F5E  
                            getsUSBUSART@len 0069                                       _T1GCON 000FCC  
                       oled_putUint8@numData 0079                                       _T3GCON 000FB4  
                      __size_of_CDCTxService 017A                                       i2l1200 0088  
                                     i2l2020 53BC                      __end_of_TMR3_Initialize 691C  
                                     i2l2018 538A                                       i2l1148 668C  
                                     i2l1192 005C                                       i2l1194 006C  
                                     i2l1196 0078                                       i2l1712 381E  
                                     i2l1724 3924                                       i2l2453 5A56  
                                     i2l1734 39B2                                       i2l1911 48D0  
                                     i2l1735 3A28                                       i2l1736 39C2  
                                     i2l1578 692E                                       i2l1940 2B5E  
                                     i2l1861 529E                                       i2l1925 49EE  
                                     i2l1934 4A3E                                       i2l1864 5328  
                                     i2l1865 52AE                                       i2l1866 52B2  
                                     i2l1874 6446                                       i2l1798 4032  
                                     i2l1959 2D24                                       i2l8000 3C98  
                                     i2l8020 3D84                                       i2l8012 3D2E  
                                     i2l8004 3CAA                                       i2l8102 2C88  
                                     i2l8022 3D8A                                       i2l8014 3D34  
                                     i2l8120 2D10                                       i2l8104 2CA4  
                                     i2l8026 3D90                                       i2l8108 2CBE  
                                     i2l8134 2D86                                       i2l8118 2D04  
                                     i2l8038 52D0                                       i2l7600 6170  
                                     i2l8136 2D92                                       i2l8128 2D40  
                                     i2l8080 2BD4                                       i2l8048 5310  
                                     i2l7442 5818                                       i2l8066 2B58  
                                     i2l8404 3B4E                                       i2l8092 2C36  
                                     i2l8420 4A04                                       i2l8324 3FDC  
                                     i2l7630 537E                                       i2l7622 5368  
                                     i2l7470 6520                                       i2l7606 6188  
                                     i2l8086 2C18                                       i2l8430 4A1C  
                                     _TABLAT 000FF5                                       i2l8088 2C1A  
                                     i2l8432 4A22                                       i2l8416 49F8  
                                     i2l8344 405E                                       i2l7730 4FC8  
                                     i2l7466 6512                                       i2l8442 4A58  
                                     i2l8418 49FE                                       i2l8372 3A58  
                                     i2l8428 4A16                                       i2l7734 4FD2  
                                     i2l8390 3AD4                                       i2l7638 53A6  
                                     i2l7646 53C4                                       i2l7486 50B8  
                                     i2l7478 508E                                       i2l8446 4A76  
                                     i2l7744 4FFC                                       i2l7752 5032  
                                     i2l7672 6084                                       i2l7770 5A08  
                                     i2l7754 503A                                       i2l7762 5070  
                                     i2l8394 3AEE                                       i2l8378 3A7A  
                                     i2l7498 5114                                       i2l7674 608A  
                                     i2l7772 5A14                                       i2l7916 4F2A  
                                     i2l7596 6168                                       i2l7782 5A48  
                                     i2l7774 5A18                                       i2l7678 6090  
                                     i2l7950 5784                                       i2l9800 4896  
                                     i2l7792 67DA                                       i2l7970 4788  
                                     i2l7946 576C                                       i2l7788 67CA  
                                     i2l9814 48F8                                       i2l9806 48B6  
                                     i2l7966 4780                                       i2l9816 48FA  
                                     i2l7992 47FC                                       i2l7976 47B4  
                                     i2l9772 601E                                       i2l9764 5FD4  
                                     i2l9786 4850                                       i2l9788 4856  
                                  ??_EndLine 0061                                       _OSCCON 000FD3  
                              CDCTxService@i 006A                                       _SPBRGH 000FB0  
                                     _SSPBUF 000FC9                             __end_of___xxtofl 31FC  
                   i2USBTransferOnePacket@ep 0005                            ??i2_USBDeviceInit 0009  
            __size_ofi2_USBTransferOnePacket 00BA                         ?i2_EUSART_Initialize 0001  
                       oled_displayOff@state 0001                                oled_putChar@k 006A  
             __size_of_moteApp_getLightValue 005A                __end_of_moteApp_getLightValue 6138  
                          _shortPacketStatus 0057               moteRunningProcess@changeStates 00B5  
                             __CFG_XINST$OFF 000000                         _moteApp_clearBuffers 5132  
                       _moteApp_clearCommand 6A4A                 ??_MOTEapp_SetDataRateSetting 0063  
                            USBDeviceTasks@i 001F                   __end_of_Set_Column_Address 6956  
                USBStdFeatureReqHandler@pUEP 0017                             __end_of_hexToStr 65B2  
                   USBTransferOnePacket@data 0061                   USBCtrlTrfInHandler@lastDTS 0012  
                            ??_USBDeviceInit 0068                    __size_of_Set_Page_Address 0018  
                    __end_of_TMR1_StartTimer 6B28                                 ?_putUSBUSART 0060  
                                  ??___almod 0068                                    ??___fladd 0068  
                                     ___wmul 6624                                    ??___fldiv 0095  
                                  ??___lbdiv 0061                               __CFG_STVREN$ON 000000  
                                  ??___awmod 0064                     ?_moteApp_setSensorsInput 0001  
                                  ??___flmul 007C                                    ??___fltol 0064  
                                  ??___lldiv 0009                                       _appKey 0100  
                       __end_of_getsUSBUSART 4660                                    ??___lwdiv 0064  
                                  ??___lwmod 0064                            _USBEnableEndpoint 6502  
            __size_of_USBStdGetStatusHandler 00AC                          _EUSART_Transmit_ISR 665A  
                                     _memcpy 6334                                       _memset 66C6  
                                     clear_0 5BE6                                       clear_1 5BF2  
                                     clear_2 5BFE                                       clear_3 5C0C  
                            ___awmod@divisor 0062                                    ??_delayms 0062  
                            ___awmod@counter 0064                           ?_USBEnableEndpoint 0009  
             ??_USART_mySetLineCodingHandler 000E                      __end_of_DATAEE_ReadByte 6A10  
                                     _strcmp 61EC                   __end_of_ADC_TempConversion 4398  
              __size_of_USBTransferOnePacket 00D8                             ?_sendDataCommand 0061  
                            _moteApp_delayms 65B2                  __size_of_service_pushbutton 007C  
                               _CDCTxService 33AE                                 __mediumconst 759A  
                                     tblptrh 000FF7                                       tblptrl 000FF6  
                                     tblptru 000FF8                          ??_USBEnableEndpoint 000A  
                                  ?_CMP1_ISR 0001                      __end_of_TMR2_StartTimer 6B24  
                               _dataRateRead 00DD                                  _CtrlTrfData 000438  
                                  ??_strncmp 0066                             ___lbdiv@dividend 0061  
                              ?_oled_devInit 0001                         ?_EUSART_Transmit_ISR 0001  
                       _controlTransferState 0051                    USBapp_Handler@buttonPress 0076  
                       _USBapp_getrxByteFlag 6B18                             ?_TMR1_Initialize 0001  
                       __CFG_LS48MHZ$SYS48X8 000000          __size_of_MOTEapp_SetDataRateSetting 049E  
                               ___xxtofl@arg 006A                         __size_of_EUSART_Read 0046  
                               ___xxtofl@exp 0069                            _SYSTEM_Initialize 68D8  
                               ___xxtofl@val 0060                 __size_of_USBapp_handlerState 000A  
         moteApp_getLightValue@escapeCounter 006F                                   __accesstop 0060  
                    __end_of__initialization 5C4A                       ??_USBapp_setrxByteFlag 0001  
                            __CFG_PBADEN$OFF 000000                                 ?_test_switch 0001  
                      ??i2_EUSART_Initialize 0001                              _CMP1_Initialize 6A5C  
                         ?_SYSTEM_Initialize 0001                           oled_writeData@data 0060  
                              ___rparam_used 000001                                ?_oled_setFont 0060  
                   __size_of_USBStallHandler 0042                                   ___fltol@f1 0060  
                              ?_oled_putChar 0062                        ?_moteApp_clearBuffers 0001  
                      ?_moteApp_clearCommand 0001                          __size_of_USBSuspend 002A  
                __size_of_EUSART_FlushBuffer 0050                                ?_oled_putint8 0076  
                             __pcstackCOMRAM 0001                    __end_of_USBEnableEndpoint 653E  
                           __CFG_nPWRTEN$OFF 000000                                __end_of_sd000 7964  
                              __end_of_sd001 791A                                __end_of_sd002 794E  
                               __pidataBANK0 6AEC                                 __pidataBANK1 6B2C  
                        ??_SYSTEM_Initialize 0062                      __end_of_TMR3_StartTimer 6B20  
                                  ?_TMR1_ISR 0001                                    ?_TMR3_ISR 0001  
           __size_of_USBCtrlEPAllowDataStage 009C                             _DATAEE_WriteByte 64C6  
              __size_of_USBConfigureEndpoint 0094      __end_of_oled_setContrastControlRegister 6A24  
   __size_of_oled_setContrastControlRegister 0014             ?_oled_setContrastControlRegister 0001  
          ??_oled_setContrastControlRegister 0061              _oled_setContrastControlRegister 6A10  
                __end_of_USBCtrlTrfInHandler 4900                             ?_TMR2_Initialize 0001  
                           ___lbdiv@quotient 0063         moteApp_setSensorsInput@escapeCounter 0065  
                     i2_USBTransferOnePacket 5078                              __CFG_PCLKEN$OFF 000000  
                             __CFG_nLPBOR$ON 000000                            __end_of_OledFont0 78A3  
                          _CDCTxService$6537 0068                                   _cdc_notice 01C6  
                                  ?i2_memset 0001                                   _cdc_rx_len 00D9  
                                 _cdc_tx_len 00DA                         _moteApp_getTempValue 62EA  
                                 ??_CMP1_ISR 0001                              _responsePortNum 01E9  
                   ??_USBCtrlTrfSetupHandler 001C                                   _dataBuffer 01B6  
                             ??_oled_devInit 0062                             ?_USBDeviceAttach 0001  
                  __end_of_SYSTEM_Initialize 68FA                        ??_EUSART_Transmit_ISR 0001  
                     _USBStdGetStatusHandler 5290                                ?_moduleResync 0001  
                      ?_USBapp_getrxByteFlag 0001                         service_pushbutton@bs 0060  
                                 __pbssBANK0 00B7                                   __pbssBANK1 0100  
                                 __pbssBANK2 0200                         __end_of_EUSART_Write 6408  
                    __size_of_TMR2_ReadTimer 000A                             ?_TMR3_Initialize 0001  
                           ??_oled_putString 0075                  oled_regulorResistorSelect@r 0061  
                    moduleResync@escapeEvent 0067                               ??_oled_setFont 0062  
               ??_moteApp_convertSensorValue 0073                              _periodicUpValue 00FD  
                __size_of_EUSART_Receive_ISR 0036                          oled_putString@index 0075  
                             ??_oled_putChar 0064                  __size_of_USBWakeFromSuspend 0030  
                                _pBDTEntryIn 003C                       __size_of_oled_clearRow 0028  
                                 _clearLight 01DF                  __end_of_moteApp_testSensors 4576  
                   sendDataCommand@byteCount 0067             __end_of_USBCtrlEPServiceComplete 40B6  
           __end_of_MOTEapp_setResponseReady 6B06                               ??_oled_putint8 0078  
                     oled_putChar@start_page 0063                  __size_of_USBCheckCDCRequest 00AC  
                          __CFG_PLLSEL$PLL3X 000000                           __size_of_oled_init 0032  
                    ?_moteApp_getLightString 0060                             ??_oled_writeData 0060  
                       USBCtrlTrfRxService@i 0012                                 ?_TMRapp_Tick 0001  
                                    ?___wmul 0060                             ?_TMR1_StartTimer 0001  
                                 ??_TMR1_ISR 0001                                   ??_TMR3_ISR 0001  
                    __end_of_moteApp_delayms 65EC                                      _CM1CON0 000F98  
                    __size_of_USBapp_Handler 00CE                      __size_of_TMRapp_Handler 0142  
                                    ?_memcpy 0060                                      _BAUDCON 000FB8  
                                    ?_memset 0060                                   _device_dsc 794E  
                  Set_Column_Address@address 0061                     __size_of_oled_displayOff 000E  
                           _USBCtrlEPService 4E0E                  __size_of_moteApp_toggleLeds 00F4  
                                 _ep_data_in 00B7                      __size_of_ADC_Initialize 001A  
                                    ?_strcmp 0060                             ?_DATAEE_ReadByte 0001  
                __end_of_USBCtrlTrfRxService 3B5C                         __size_of_sendCommand 0030  
                         _USBCheckStdRequest 49DE                                _eusartRxCount 0053  
                          _configDescriptor1 78A3                                      i2l11000 382A  
                                    i2l11012 3862                                      i2l11022 38C6  
                                    i2l11016 386A                                      i2l11008 383C  
                                    i2l11340 66C2                                      i2l11332 669A  
                                    i2l11412 39A6                                      i2l11404 3982  
                                    i2l11326 6688                                      i2l11440 3A24  
                                    i2l11432 39E8                                      i2l11360 391C  
                                    i2l11352 3910                                      i2l11418 39BA  
                                    i2l10910 67BA                                      i2l11438 3A08  
                                    i2l11382 3944                                      i2l11374 3938  
                                    i2l11634 0050                                      i2l10932 6444  
                                    i2l10908 67B8                                      i2l11388 3968  
                                    i2l11398 3978                                      i2l11654 0084  
                                    i2l10960 4EAC                                      i2l10952 4E66  
                                    i2l10948 4E5E                                      i2l10964 4EC6  
                                    i2l10966 4ECC                                      i2l10984 37FA  
                                    i2l10988 3802                                      i2l14992 60A8  
                                    i2l14994 60D8                                    ?___xxtofl 0060  
                                    _RS232cp 004D                              __CFG_WDTEN$SWON 000000  
                      ?_moteApp_getTempValue 0063                           __size_of_test_leds 0066  
                                 ??i2_memset 0007                           __size_of_test_oled 00AE  
                       __size_of_moduleSleep 0028                  __end_of_USBCtrlTrfTxService 5078  
                       __size_of_moteHandler 0276                          _USBStdSetCfgHandler 4740  
                                    _OSCCON2 000FD2                                      _TBLPTRH 000FF7  
                                    _TBLPTRL 000FF6                                      _TBLPTRU 000FF8  
                                    _OSCTUNE 000F9B                       __size_of_oled_putUint8 00A8  
             USBapp_LEDUpdateStatus@ledCount 0042                              __CFG_WDTPS$8192 000000  
        __size_of_moteApp_convertSensorValue 009E                                      _SSP1ADD 000FC8  
                    __end_of_CMP1_Initialize 6A6E                               ??_moduleResync 0065  
                        ?_USBCheckStdRequest 0001                             ?_TMR2_StartTimer 0001  
               __size_of_USBStdGetDscHandler 0120                                      _UIEbits 000F64  
                                  ?_hexToStr 0001                        ADC_TempConversion@val 00A8  
                                    _UIRbits 000F65                       test_switch@buttonCheck 0079  
            moteRunningProcess@bufferReadPos 00B4                                      _EndLine 6AAA  
                              _cdc_trf_state 0050                         DATAEE_WriteByte@bAdd 0061  
                    __size_of_USBapp_exitCDC 0006                   __end_of_moteRunningProcess 131E  
                     ??_moteApp_clearBuffers 0060                       ??_moteApp_clearCommand 0063  
                 ?_moteApp_add8bToDataBuffer 0066                                      _pCDCDst 014E  
                                    _pCDCSrc 0151                        __size_of_getsUSBUSART 00EA  
             __end_of_moteApp_getLightString 6A9C           __end_of_MOTEapp_SetDataRateSetting 2774  
                 _MOTEapp_SetDataRateSetting 22D6                                      __Hparam 0000  
                       ?_USBStdSetCfgHandler 0001                                    _CDCInitEP 5E24  
                    ?_MOTEapp_TimerBasedTask 0001                                      __Lparam 0000  
                 __size_of_USBEnableEndpoint 003C                  USBapp_exitCDCState@usbState 0060  
                        moteHandler@s2Button 01EE                             _Set_Page_Address 698A  
                       ??_USBCheckStdRequest 001C                 moteRunningProcess@sleepEvent 00AE  
                                    ___almod 4398                                      ___fladd 1988  
                          _timerMinTickCount 00C9                __size_of_USBCtrlTrfOutHandler 0060  
                __size_of_moteJoiningProcess 066A                                      ___fldiv 2774  
                                    ___lbdiv 6026                                      ___awmod 5538  
                                    ___flmul 1E30                             ?_TMR3_StartTimer 0001  
                                    ___fltol 3DA8                                      ___lldiv 59E6  
                           ??_USBDeviceTasks 001F                              __size_of___wmul 0036  
                                    ___lwdiv 5C58                            ??_USBStallHandler 0001  
                                    ___lwmod 5F64                         oled_putint8@negative 0078  
         oled_setContrastControlRegister@mod 0061                         __size_of_putUSBUSART 0022  
                                    __pcinit 5BE0                           getsUSBUSART@buffer 0067  
                            __size_of_memcpy 004A                 __size_of_USBapp_exitCDCState 000A  
                            __size_of_memset 0034                    __end_of_configDescriptor1 78E6  
                                    __ramtop 0800                                      _delayms 653E  
                          hexToStr@character 0060                                      __ptext0 3B5C  
                                    __ptext1 5D44                                      __ptext2 40B6  
                                    __ptext3 51E2                                      __ptext4 5EFE  
                                    __ptext5 5DB6                                      __ptext6 41B2  
                                    __ptext7 653E                                      __ptext8 448A  
                                    __ptext9 2DB8                     __size_of_oled_setDisplay 002A  
                                    _inPipes 0036                  _USBDeferOUTDataStagePackets 00D1  
                            __size_of_strcmp 0058                    moteRunningProcess@counter 00B3  
                           oled_setFont@font 0060                                    _T1CONbits 000FCD  
                      _OSCILLATOR_Initialize 69E4                                      _exitUSB 00F8  
                               ??_USBSuspend 0016                                _oled_clearRow 6868  
                                  _T2CONbits 000FBA              moteApp_add8bToDataBuffer@number 0069  
                                 ??___xxtofl 0064                                    _T3CONbits 000FB1  
                                 _oled_clear 6956                             ___awmod@dividend 0060  
                   ??_PIN_MANAGER_Initialize 0060                 __end_of_TMRapp_ClearBitFlags 6AFE  
                               _LastRS232Out 004A                              i2_USBDeviceInit 37C0  
                           i2USBDeviceInit@i 0009                            __end_of_oled_init 6760  
               __end_of_MOTEapp_handlerState 6AEC                       ??_USBapp_getrxByteFlag 0060  
                         __end_of_USB_CD_Ptr 75A3                   moteRunningProcess@readByte 00B0  
                 __size_of_SYSTEM_Initialize 0022              __size_of_USBCtrlTrfSetupHandler 0088  
                                 ??_hexToStr 0060                                      _strncmp 55DA  
                       end_of_initialization 5C4A                                 _getsUSBUSART 4576  
              sendDataCommand@byteCount_1872 0068                           __end_of_USB_SD_Ptr 75A1  
                                    memcpy@d 0066                                      memcpy@n 0064  
                                    memcpy@s 0068                          _pBDTEntryEP0OutNext 0046  
                                    memset@c 0062                                      memset@n 0064  
                                    memset@p 0066                                __Lmediumconst 759A  
            _dummy_encapsulated_cmd_response 01D0     moteApp_convertSensorValue@convertedValue 0077  
                   ?_USBStdFeatureReqHandler 0001               __end_of_MOTEapp_TimerBasedTask 68B6  
                          _EUSART_Initialize 644A                            _oled_powerControl 6A7E  
                                 _rxByteFlag 0056                        ??_USBStdSetCfgHandler 0016  
                            ___lldiv@divisor 0005                         __size_of_test_switch 00FC  
                                 ?_CDCInitEP 0001                              ___lldiv@counter 000D  
                          __end_of_test_leds 5F64                            __end_of_test_oled 5290  
             moteJoiningProcess@changeStates 0076                           ?_EUSART_Initialize 0001  
                         ?_oled_powerControl 0001                                _oled_putUint8 53E8  
                         __end_of_USBSuspend 6840               ??_USBapp_CdcEmulatorInitialize 000D  
                    _USBCtrlEPAllowDataStage 571A                                    _RCSTAbits 000FAB  
                   ??_moteApp_setLightString 006C                           test_switch@timeout 0077  
                                    postdec1 000FE5                                      postdec2 000FDD  
                                    postinc0 000FEE                                      postinc2 000FDE  
             moteApp_setLightString@stingPos 006C                         __end_of_oled_devInit 5AE8  
                   _USBCtrlEPServiceComplete 3FB6                      moteApp_toggleLeds@state 0064  
                                 _responseId 0130                                   _retryCount 00EC  
                           ?_moteApp_delayms 0060                                _randomPortNum 00EA  
                   _MOTEapp_setResponseReady 6AFE                                      strcmp@r 0065  
                 _USBStatusStageEnabledFlag1 00D3                   _USBStatusStageEnabledFlag2 00D4  
                              _dataRateValue 00F7                          _USBapp_handlerState 6AD8  
                        ??_EUSART_Initialize 0060                          ??_oled_powerControl 0061  
                         USBEnableEndpoint@p 000A                                    _PORTAbits 000F80  
                                  _PORTBbits 000F81                                    _PORTCbits 000F82  
                    oled_putUint8@start_page 0077                               ?_oled_clearRow 0001  
                                 _test_comms 5DB6                       ??_moteApp_getTempValue 0065  
                       __end_of_oled_setFont 69B8                                  ___fladd@grs 0073  
                         _Set_Column_Address 693A                         __end_of_oled_putChar 5538  
                              ___xxtofl@sign 0068                                    _TRISAbits 000F92  
                                  _TRISBbits 000F93                                    _TRISCbits 000F94  
                                  _TRISEbits 000F96                            ??_oled_displayOff 0061  
                      __size_of_EUSART_Write 0044                         __end_of_oled_putint8 4D40  
                         _BothEP0OutUOWNsSet 00CD             __size_of_moteApp_setSensorsInput 0088  
                              ?_test_powerup 0001                                  ___fldiv@grs 00A0  
                                ___fldiv@rem 009A                             ?_CMP1_Initialize 0001  
                  USBConfigureEndpoint@EPNum 0006                   ?_USBCtrlEPAllowStatusStage 0001  
                   __end_of_DATAEE_WriteByte 6502                          ?_Set_Column_Address 0001  
        USER_USB_CALLBACK_EVENT_HANDLER@size 0012                               _TMR2_ReadTimer 6AC4  
                                  _USTATcopy 0059                            __size_of_CMP1_ISR 0004  
                       ?_USBapp_handlerState 0001                           _ADC_TempConversion 42A6  
                   oled_putString@start_page 0074                                  _CM1CON0bits 000F98  
                                ___flmul@grs 0082           __end_of_moteApp_convertSensorValue 571A  
                 _moteApp_convertSensorValue 567C                    __end_of_EUSART_Initialize 6488  
                  __end_of_oled_powerControl 6A8E                      oled_putint8@station_dot 0076  
               ??_oled_regulorResistorSelect 0061                 __end_of_USBTransferOnePacket 4C6C  
                                _CM2CON1bits 000F9A                                    _TXSTAbits 000FAC  
                             ?_oled_putUint8 0076                            putUSBUSART@length 0062  
                        ?_ADC_TempConversion 0001                     ??_oled_initialDispayLine 0061  
                      _moteApp_getLightValue 60DE                       _USBCtrlTrfSetupHandler 595E  
                       ??_Set_Column_Address 0061                      ?i2_USBTransferOnePacket 0001  
                       __end_of_moduleResync 58D6                        __end_of_USBDeviceInit 367E  
                             _TMRapp_Handler 367E                               _USBapp_Handler 4D40  
                       __size_of_TMRapp_Tick 0006                 ??_moteApp_add16bToDataBuffer 006A  
        MOTEapp_getModuleResponse@bufferByte 0062                               __end_of___wmul 665A  
                               _EUSART_Write 63C4                        sendDataCommand@string 0061  
                    __end_ofi2_USBDeviceInit 38F8                            __size_of_TMR1_ISR 000C  
                 __end_of_service_pushbutton 5BE0                            __size_of_TMR3_ISR 001E  
                             _ADC_Initialize 6970                  moteApp_clearBuffers@counter 0060  
                    moteApp_GoToSleep@status 006E                                    i2memset@c 0003  
                                  i2memset@n 0005                                    i2memset@p 0007  
                             __end_of_memcpy 637E                       ?_OSCILLATOR_Initialize 0001  
                             __end_of_memset 66FA                            _USBBusIsSuspended 00CF  
                   oled_writeCommand@command 0060                               __end_of_strcmp 6244  
                                ?_oled_clear 0001                          start_initialization 5BE0  
                       ??_ADC_TempConversion 00A6                      ?_USBStdGetStatusHandler 0001  
              USBCtrlTrfRxService@byteToRead 0013                               ??_test_powerup 00AD  
        __size_of_oled_regulorResistorSelect 0010              __size_of_PIN_MANAGER_Initialize 0056  
                          ??_oled_setDisplay 0061                                ??_EUSART_Read 0060  
                     __end_of_TMR2_ReadTimer 6ACE                                  _cdc_data_rx 000540  
                                _cdc_data_tx 000500                  __end_ofi2_EUSART_Initialize 64C6  
                          __size_ofi2_memset 002C                                    _OledFont0 75A3  
               __end_of_USBConfigureEndpoint 584A              __end_of_USBStdFeatureReqHandler 2DB8  
                   __size_of_sendDataCommand 00DA                        ??_USBapp_handlerState 0060  
            moteApp_convertSensorValue@index 0076            __end_of_USBCtrlEPAllowStatusStage 4FAA  
                              _periodicState 00FB                               _USBapp_exitCDC 6B06  
                   __end_of_USBCtrlEPService 4EDC         __end_of_USART_mySetLineCodingHandler 61EC  
      __size_of_USART_mySetLineCodingHandler 005A                 _USART_mySetLineCodingHandler 6192  
                 __end_of_EUSART_FlushBuffer 62EA                          DATAEE_ReadByte@bAdd 0060  
              __size_of_USBapp_setrxByteFlag 0006          __size_of_moteApp_add16bToDataBuffer 01B2  
                              _moteModeState 00E7                    ??_USBCtrlEPAllowDataStage 0002  
                                ??_CDCInitEP 000D                               USBDeviceInit@i 0068  
                         _periodicTimerValue 00FC                       _pBDTEntryEP0OutCurrent 0044  
                   __size_of_TMR1_Initialize 0038                      USBTransferOnePacket@dir 0060  
                    USBTransferOnePacket@len 0063                       __end_of_USBapp_Handler 4E0E  
                     __end_of_TMRapp_Handler 37C0               __end_ofi2_USBTransferOnePacket 5132  
                       _TMRapp_ClearBitFlags 6AF6                                     ??___wmul 0064  
            __size_of_moteApp_setLightString 007C                          _USBStdGetDscHandler 3C88  
                       _MOTEapp_handlerState 6AE2                       __end_of_ADC_Initialize 698A  
                                __pdataBANK0 00F5                                  __pdataBANK1 01F1  
                                   ??_memcpy 0066                                     ??_memset 0066  
                            ??_oled_clearRow 006C              MOTEapp_TimerBasedTask@timerTask 0060  
                        _moduleResonseBuffer 0156                                     ??_strcmp 0064  
                                ?_test_comms 0001                    oled_putString@station_dot 0073  
                                  ___fladd@a 0064                                    ___fladd@b 0060  
                     _USBActiveConfiguration 0058               __end_of_USBStdGetStatusHandler 533C  
                                  ___fldiv@a 0091                                    ___fldiv@b 008D  
                __end_of_EUSART_Transmit_ISR 6690                                    ___flmul@a 0078  
                                  ___flmul@b 0074                                  __pbssCOMRAM 002E  
                 service_pushbutton@PB_Timer 014A                                __pcstackBANK0 0060  
                              __pcstackBANK1 01EC                 __size_of_USBCtrlTrfInHandler 00E0  
                   __size_of_TMR2_Initialize 0014                     __end_of_Set_Page_Address 69A2  
                          __size_of___xxtofl 01CE                              ?_TMR2_ReadTimer 0001  
                                _activeState 00D5                         ?_USBStdGetDscHandler 0001  
                     __end_of_USBapp_exitCDC 6B0C           __size_of_MOTEapp_getModuleResponse 0074  
                 ?_MOTEapp_getModuleResponse 0001                    ADC_TempConversion@tempRaw 00A6  
                 __end_of_EUSART_Receive_ISR 66C6               moteRunningProcess@messageReady 00AD  
                                   ?_EndLine 0001                          _USBapp_exitCDCState 6ACE  
                 __end_of_USBWakeFromSuspend 67C0                   __size_of_EUSART_Initialize 003E  
                 __size_of_oled_powerControl 0010                            __size_of_hexToStr 003A  
                            _USBStallHandler 6408                                 _pBDTEntryOut 0140  
                        __end_of_EUSART_Read 63C4                   __end_of_USBCheckCDCRequest 53E8  
                            ??_oled_putUint8 0078                         oled_putString@string 0071  
                   __size_of_USBDeviceAttach 0034                                    _appDevEui 0120  
                ??_moteApp_add8bToDataBuffer 0067                            _oled_writeCommand 69CE  
                      __size_of_oled_devInit 0080                      oled_putChar@station_dot 0062  
                ?_MOTEapp_SetDataRateSetting 0001                             ___lwdiv@dividend 0060  
                     _PIN_MANAGER_Initialize 6244                       ?_moteApp_getLightValue 006D  
                        __size_of_oled_clear 001A                        ?_TMRapp_ClearBitFlags 0001  
                            _messageReceived 00E5                     __size_of_TMR3_Initialize 0022  
                       EUSART_Read@readValue 0060              __size_of_oled_initialDispayLine 0012  
                            ?_TMRapp_Handler 0001                              ?_USBapp_Handler 0001  
                                  __pintcode 0008                           ?_oled_writeCommand 0001  
                              __pmediumconst 759A                                     ?___almod 0060  
                                   ?___fladd 0060                        ?_MOTEapp_handlerState 0001  
                                   ?___fldiv 008D                                    __ptext100 6970  
                                  __ptext101 6AE2                                     ?___lbdiv 0060  
                                  __ptext110 4E0E                                    __ptext102 69FA  
                                  __ptext111 595E                                    __ptext120 6082  
                                  __ptext112 3FB6                                    __ptext104 6B0C  
                                  __ptext121 6138                                    __ptext113 571A  
                                  __ptext105 38F8                                    __ptext130 4820  
                                  __ptext122 5E24                                    __ptext114 49DE  
                                  __ptext106 37C0                                    __ptext131 4FAA  
                                  __ptext123 5078                                    __ptext115 4740  
                                  __ptext107 6790                                    __ptext140 6B28  
                                  __ptext132 6192                                    __ptext124 6502  
                                  __ptext116 67C0                                    __ptext108 6816  
                                  __ptext141 0000                                    __ptext133 6488  
                                  __ptext125 57B6                                    __ptext117 5290  
                                  __ptext109 6408                                    __ptext134 59E6  
                                  __ptext126 533C                                    __ptext118 3C88  
                                  __ptext135 6B12                                    __ptext127 5FC6  
                                  __ptext119 2B34                                    __ptext136 691C  
                                  __ptext128 3A2C                                    __ptext137 6AB8  
                                  __ptext129 4EDC                                    __ptext138 665A  
                                  __ptext139 6690                                     ?___awmod 0060  
                                   ?___flmul 0074                                     ?___fltol 0060  
                 __end_of_moteApp_toggleLeds 42A6                                     ?___lldiv 0001  
                                   ?___lwdiv 0060                                     ?___lwmod 0060  
                            ?_ADC_Initialize 0001                        __size_of_oled_setFont 0016  
                               _eusartRxHead 00DF                                ??_sendCommand 0063  
          moteApp_getTempValue@escapeCounter 0065                                 _eusartTxHead 00E1  
                               _eusartRxTail 00E0                 __size_of_moteApp_testSensors 00EC  
                               _eusartTxTail 00E2                         ?_USBapp_exitCDCState 0001  
                      __size_of_oled_putChar 00A8                           _moteRunningProcess 00C8  
                          _moduleBufferIndex 0055                                     ?_delayms 0060  
               ??_INTERRUPT_InterruptManager 0020                             ___almod@dividend 0060  
                           ?i2_USBDeviceInit 0001                       moteHandler@readMessage 01F0  
                        ??_oled_writeCommand 0060                                ??_moduleSleep 0063  
                              ??_moteHandler 00B6                        __size_of_oled_putint8 00D4  
                    _eusartTxBufferRemaining 0054                         _USBTransferOnePacket 4B94  
                                  _mainState 00E4             moteApp_add16bToDataBuffer@number 0067  
                   __size_of_TMR1_StartTimer 0004                      _moteApp_setSensorsInput 58D6  
                     moteHandler@buttonPress 01EF                          ?_moteRunningProcess 00AC  
               __end_of_USBCtrlTrfOutHandler 6026                                    _minTicker 00E6  
                      ??_USBStdGetDscHandler 0001                                     _CMP1_ISR 6B28  
                     _moteApp_setLightString 5AE8                                  _ep_data_out 00BA  
                           ___lwdiv@quotient 0065                 __size_of_USBCtrlTrfRxService 0130  
                                  _secTicker 00EF                              ?_USBapp_exitCDC 0001  
              USBConfigureEndpoint@direction 0001                     __size_of_DATAEE_ReadByte 0016  
                                   ?_strncmp 0060                          oled_putint8@numData 0079  
                               _oled_devInit 5A68           __end_of_oled_regulorResistorSelect 6A7E  
                 _oled_regulorResistorSelect 6A6E                               _eusartRxBuffer 0200  
                          _dataRateSelection 00F6                             _timerMsTickCount 00CB  
                                  _oled_init 672E                 __size_of_USBCtrlTrfTxService 00CE  
          __end_of_MOTEapp_getModuleResponse 5D44                               _eusartTxBuffer 0240  
                             ___wmul@product 0064                                     _LATAbits 000F89  
                                   _IOCCbits 000F87                    __end_of_oled_writeCommand 69E4  
                                   _LATBbits 000F8A                                     _LATCbits 000F8B  
                                   _LATEbits 000F8D                   ??_USBCtrlEPServiceComplete 0002  
                 ??_MOTEapp_setResponseReady 0060                                     _PIE1bits 000F9D  
                                   _IPR3bits 000FA5                                     _PIE2bits 000FA0  
                                   _PIE3bits 000FA3                          __size_of_test_comms 006E  
                   __size_of_TMR2_StartTimer 0004                                 _oled_setFont 69A2  
                                  _moteState 00FA                            ??_sendDataCommand 0066  
                              _operationType 00E8                        __size_of_moduleResync 008C  
                       ??_moteRunningProcess 00AF                   __end_of_moteJoiningProcess 1988  
        __size_of_INTERRUPT_InterruptManager 00BC                                 _oled_putChar 5490  
                                   _PIR1bits 000F9E                                     _PIR2bits 000FA1  
              __size_of_moteApp_clearBuffers 00B0                __size_of_moteApp_clearCommand 0012  
                                   _PIR3bits 000FA4                                     i2u566_40 5024  
                                   i2u566_47 501A                                     i2u654_48 3B3A  
                                   i2u568_40 5062                    USBCtrlEPService@setup_cnt 001E  
                                   i2u568_47 5058                                     i2u840_48 48E4  
                                   i2u594_40 3CFC                                     i2u594_47 3CF2  
                                   i2u595_40 3D2A                                     i2u595_47 3D20  
                                   i2u597_40 3D7A                                     i2u597_47 3D70  
                                   _RCONbits 000FD0                         __end_of_test_powerup 5DB6  
                               _oled_putint8 4C6C                                ??_putUSBUSART 0063  
                                   _UEP0bits 000F6A                   _USBDeferINDataStagePackets 00D0  
                                   _SSP1CON1 000FC6           __end_of_moteApp_add16bToDataBuffer 33AE  
                 _moteApp_add16bToDataBuffer 31FC                  __size_of_USBCheckStdRequest 00DC  
                                   _TMR1_ISR 6AB8                      __size_of_oled_putString 006C  
                                   _TMR3_ISR 691C                                     _SSP1STAT 000FC7  
                                   _UCONbits 000F60                              _oled_displayOff 6A9C  
                                  _test_leds 5EFE                                     _VREFCON0 000F7D  
             moteRunningProcess@selectButton 00AC                         _USBConfigureEndpoint 57B6  
                                  _test_oled 51E2                        ??_USBapp_exitCDCState 0060  
           __size_of_USBStdFeatureReqHandler 0284                            ??_TMR1_Initialize 0060  
                                 _ADCON0bits 000FC2                      Set_Page_Address@address 0061  
                          ___wmul@multiplier 0060                        ?_USBTransferOnePacket 0060  
        moteRunningProcess@sizeOfUpdate_1735 00B2                       ADC_TempConversion@temp 00A7  
                     oled_putint8@start_page 0077                    _moteApp_add8bToDataBuffer 4900  
                    __size_of_oled_writeData 0016                                ?_CDCTxService 0001  
                   __size_of_TMR3_StartTimer 0004                     moteHandler@gotoNextState 01ED  
                               _RemoteWakeup 00CE                          __end_of_sendCommand 6790  
                                   i2_memset 67C0                            __CFG_CFGPLLEN$OFF 000000  
                     _oled_initialDispayLine 6A38                        DATAEE_WriteByte@bData 0060  
                         _RS232_Out_Data_Rdy 004C            moteApp_setLightString@lightString 006A  
                    __end_of_USBStallHandler 644A                          __end_of_moduleSleep 6868  
                        __end_of_moteHandler 302E                                  _EUSART_Read 637E  
                          _moteApp_GoToSleep 3EB4                                  _INTCON3bits 000FF0  
                                  copy_data0 5C3E                  ??_USBCtrlEPAllowStatusStage 0001  
                               _moduleResync 584A                  __end_of_USBStdSetCfgHandler 4820  
                          ?_DATAEE_WriteByte 0060                __size_of_USBapp_getrxByteFlag 0004  
                         ?_moteApp_GoToSleep 0001                                   ?_oled_init 0001  
                          ??_TMR2_Initialize 0060                                ??_test_switch 0076  
MOTEapp_getModuleResponse@terminatorReceived 0061                  ?_moteApp_convertSensorValue 0071  
                           __size_of_EndLine 000E                           ??_DATAEE_WriteByte 0061  
                         __end_of_device_dsc 7960                                   _EECON1bits 000FA6  
                    ?_USBCtrlTrfSetupHandler 0001                USBapp_CdcEmulatorInitialize@i 000D  
                     ??_TMRapp_ClearBitFlags 0060                      USBStdGetStatusHandler@p 0002  
                                   __Hrparam 0000                          ??_moteApp_GoToSleep 006E  
                                   __Lrparam 0000                       USBTransferOnePacket@ep 0064  
                     ??_MOTEapp_handlerState 0060                           __CFG_BOREN$SBORDIS 000000  
                                   _SetupPkt 000430                      ??_OSCILLATOR_Initialize 0060  
                      ?_USBConfigureEndpoint 0001                             __size_of___almod 00F2  
                           __size_of___fladd 04A8                            ??_USBDeviceAttach 0060  
                                 ?_test_leds 0001                             __size_of___fldiv 03C0  
                           __size_of___lbdiv 005C                                   ?_test_oled 0001  
                           __size_of___awmod 00A2                             __size_of___flmul 04A6  
                           __size_of___fltol 010C                   oled_initialDispayLine@line 0061  
             moteJoiningProcess@readDataRate 0079                                 _selectedFont 01F1  
                           __size_of___lldiv 0082                              _oled_setDisplay 67EC  
           moteApp_clearBuffers@counter_1954 0061             moteApp_clearBuffers@counter_1955 0062  
           moteApp_clearBuffers@counter_1956 0063                             __size_of___lwdiv 0078  
                           __size_of___lwmod 0062                    MOTEapp_handlerState@state 0060  
                          ??_TMR3_Initialize 0060                    ??_moteApp_setSensorsInput 0065  
                           __size_of_delayms 003A                                   _ANSELAbits 000F5B  
                        __end_of_putUSBUSART 68D8                                  _line_coding 01D8  
                                 _ANSELCbits 000F5D                               ??_CDCTxService 0067  
                              _responseReady 00EB                                 ??_oled_clear 006E  
                                   ___xxtofl 302E                                  _menuTimeout 00F9  
                   __size_of_moteApp_delayms 003A                    __end_of_moteApp_GoToSleep 3FB6  
              __size_of_moteApp_getTempValue 004A                      __size_of_USBDeviceTasks 0134  
                            ___lwdiv@divisor 0062                                     _appTimer 00D7  
                                   _appState 00D6                              ___lwdiv@counter 0064  
                                   __ptext10 00C8                                     __ptext11 4ABA  
                                   __ptext20 6A8E                                     __ptext12 6578  
                                   __ptext21 567C                                     __ptext13 4C6C  
                                 _T1GCONbits 000FCC                                     __ptext30 672E  
                                   __ptext22 6624                                     __ptext14 53E8  
                                   __ptext31 69A2                                     __ptext23 5132  
                                   __ptext15 58D6                                     __ptext40 584A  
                                   __ptext32 67EC                                     __ptext24 4900  
                                   __ptext16 62EA                                     __ptext41 5CD0  
                                   __ptext33 5A68                                     __ptext25 6026  
                                   __ptext17 60DE                                     __ptext50 1988  
                                   __ptext42 629A                                     __ptext34 6A10  
                                   __ptext26 5538                                     __ptext18 5AE8  
                                   __ptext51 131E                                     __ptext43 6AC4  
                                   __ptext35 6A6E                                     __ptext27 31FC  
                                   __ptext19 6334                                     __ptext60 4398  
                                   __ptext52 55DA                                     __ptext44 22D6  
                                   __ptext36 6A7E                                     __ptext28 5C58  
                                   __ptext61 6AF6                                     __ptext53 61EC  
                                   __ptext45 42A6                                     __ptext37 6A38  
                                   __ptext29 3EB4                                     __ptext70 6956  
                                   __ptext62 6890                                     __ptext54 65B2  
                                   __ptext46 302E                                     __ptext38 6A9C  
                                   __ptext71 6868                                     __ptext63 6A4A  
                                   __ptext55 64C6                                     __ptext47 3DA8  
                                   __ptext39 6840                                     __ptext80 6B18  
                                   __ptext72 5490                                     __ptext64 6760  
                                   __ptext56 6ACE                                     __ptext48 1E30  
                                   __ptext81 6AFE                                     __ptext73 69B8  
                                   __ptext65 6AAA                                     __ptext57 6B06  
                                   __ptext49 2774                                     __ptext90 68FA  
                                   __ptext82 63C4                                     __ptext74 698A  
                                   __ptext66 6AD8                                     __ptext58 367E  
                                   __ptext91 6B1C                                     __ptext83 637E  
                                   __ptext75 693A                                     __ptext67 4D40  
                                   __ptext59 5F64                                     __ptext92 6A24  
                                   __ptext84 33AE                                     __ptext76 69CE  
                                   __ptext68 5B64                                     __ptext93 6B20  
                                   __ptext85 4B94                                     __ptext77 4660  
                                   __ptext69 5E92                                     __ptext94 65EC  
                                   __ptext86 3528                                     __ptext78 68B6  
                                   __ptext95 6B24                                     __ptext87 66C6  
                                   __ptext79 4576                                     __ptext96 6244  
                                   __ptext88 66FA                                     __ptext97 69E4  
                                   __ptext89 68D8                                     __ptext98 644A  
                                   __ptext99 6A5C         __end_of_USBapp_CdcEmulatorInitialize 6192  
      __size_of_USBapp_CdcEmulatorInitialize 005A                 _USBapp_CdcEmulatorInitialize 6138  
                               _SSP1CON1bits 000FC6                                     _dotCount 00DE  
                                   _hexToStr 6578                           _service_pushbutton 5B64  
                            ___almod@divisor 0064                            ??_TMR1_StartTimer 0060  
                            ___almod@counter 0068                                   _T3GCONbits 000FB4  
                DATAEE_WriteByte@GIEBitValue 0062                     ??_moteApp_getLightString 0062  
                                _OSCCON2bits 000FD2                             __size_of_strncmp 00A2  
             __end_of_USBCtrlTrfSetupHandler 59E6                                __size_of_main 012C  
                          ?_USBCtrlEPService 0001                   __size_of_oled_writeCommand 0016  
                             _Contrast_level 00F5                                     _rnModule 00ED  
                         oled_putint8@number 007F                                   strncmp@len 0064  
                        ?_service_pushbutton 0001                            ??_DATAEE_ReadByte 0060  
                   __size_of_CMP1_Initialize 0012                      __end_of_oled_displayOff 6AAA  
                         ??_USBCtrlEPService 001C                    moduleResync@escapeCounter 0065  
                                   delayms@i 0063                                     delayms@t 0060  
                        _USBCtrlTrfInHandler 4820                                ??_TMRapp_Tick 0001  
                           _dataRatePosition 00DC                           __end_of_oled_clear 6970  
                        __end_of_test_switch 41B2                                     _outPipes 002E  
                       _USBCtrlTrfOutHandler 5FC6                                     int$flags 005B  
                                   _usbState 00F1                    _USBCtrlEPAllowStatusStage 4EDC  
                __size_of_Set_Column_Address 001C                            ??_TMR2_StartTimer 0060  
         __end_of_INTERRUPT_InterruptManager 00C4                   _INTERRUPT_InterruptManager 0008  
             moteRunningProcess@sizeOfUpdate 00B1                                 _SSP1STATbits 000FC7  
                                _sendCommand 6760                       ??_USBTransferOnePacket 0064  
                         oled_clearRow@index 006D                           _EUSART_FlushBuffer 629A  
                               ??_test_comms 0076                 __end_of_USBapp_setrxByteFlag 6B12  
                                _moduleSleep 6840                                  _moteHandler 2DB8  
                           ??_TMR2_ReadTimer 0060                         ??_service_pushbutton 0060  
                  _USBDeferStatusStagePacket 004E                     CDCTxService@byte_to_send 006B  
                                 _INTCONbits 000FF2                  __end_of_USBapp_handlerState 6AE2  
                       ?_USBCtrlTrfInHandler 0001                          ?_EUSART_FlushBuffer 0001  
                                   memcpy@d1 0060                  __size_of_ADC_TempConversion 00F2  
                                   memcpy@s1 0062                USBCtrlTrfTxService@byteToSend 0001  
                                   memset@p1 0060                             ?_USBStallHandler 0001  
                   USBStdFeatureReqHandler@p 001A                            ?_Set_Page_Address 0001  
                   ??_MOTEapp_TimerBasedTask 0060                                 _responseData 0196  
                          ??_TMR3_StartTimer 0060                ?_USBapp_CdcEmulatorInitialize 0001  
                                   intlevel2 0000                          _moteApp_testSensors 448A  
                                ??_oled_init 006E                  ??_MOTEapp_getModuleResponse 0061  
                         ??_Set_Page_Address 0061                       __size_of_USBDeviceInit 0156  
                       oled_powerControl@vol 0061      __end_of_USER_USB_CALLBACK_EVENT_HANDLER 60DE  
   __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C            ??_USER_USB_CALLBACK_EVENT_HANDLER 0014  
           ?_USER_USB_CALLBACK_EVENT_HANDLER 000E              _USER_USB_CALLBACK_EVENT_HANDLER 6082  
             moteJoiningProcess@messageReady 007B              __end_of_moteApp_setSensorsInput 595E  
                           ___lwmod@dividend 0060                 i2USBTransferOnePacket@handle 0006  
                               _VREFCON0bits 000F7D                             ___lldiv@dividend 0001  
                    ?_PIN_MANAGER_Initialize 0001                      ??_moteApp_getLightValue 006F  
                           ??_USBapp_Handler 0076                             ??_TMRapp_Handler 006A  
                      __size_of_test_powerup 0072                         moteHandler@gotoSleep 01EC  
               __size_ofi2_EUSART_Initialize 003E                                    strncmp@s1 0060  
                                  strncmp@s2 0062                             ??_ADC_Initialize 0060  
                         __end_of_test_comms 5E24                         ??_EUSART_FlushBuffer 0060  
                    __end_of_oled_setDisplay 6816                   i2USBTransferOnePacket@data 0002  
                                _sleepTicker 00F0                       ??_USBConfigureEndpoint 0002  
                      ?_USBCtrlTrfOutHandler 0001                               _oled_putString 5E92  
                                _putUSBUSART 68B6                           _EUSART_Receive_ISR 6690  
                          oled_clearRow@page 006C                         __CFG_CPUDIV$NOCLKDIV 000000  
                        _USBCtrlTrfRxService 3A2C                           _USBWakeFromSuspend 6790  
                                ??_test_leds 0076                                _powerOnStatus 00E9  
                                ??_test_oled 0076                      _USBStdFeatureReqHandler 2B34  
                       ?_moteApp_testSensors 0001      __end_of_USBapp_DeviceCdcEmulatorHandler 4740  
   __size_of_USBapp_DeviceCdcEmulatorHandler 00E0             ?_USBapp_DeviceCdcEmulatorHandler 0001  
          ??_USBapp_DeviceCdcEmulatorHandler 006D              _USBapp_DeviceCdcEmulatorHandler 4660  
                         _USBCheckCDCRequest 533C                          _USBCtrlTrfTxService 4FAA  
                        __end_of_TMRapp_Tick 6B18                        __end_of_oled_clearRow 6890  
                                _temperature 00C5                          ?_EUSART_Receive_ISR 0001  
                             _oled_writeData 69B8                          ?_USBWakeFromSuspend 0001  
                                   strcmp@s1 0060                                     strcmp@s2 0062  
                    ?_moteApp_setLightString 006A                             ___lldiv@quotient 0009  
                            ___lwmod@divisor 0062                             ??_USBapp_exitCDC 0060  
                      ??_USBCtrlTrfInHandler 0012                        _USBAlternateInterface 00F3  
                            ___lwmod@counter 0064                          ?_USBCheckCDCRequest 0001  
                 __size_of_moteApp_GoToSleep 0102                    i2USBTransferOnePacket@dir 0001  
                         _moteApp_toggleLeds 41B2                    i2USBTransferOnePacket@len 0004  
                        USBEnableEndpoint@ep 000C                              _endpoint_number 0052  
                                 _WDTCONbits 000FD1                                 _test_powerup 5D44  
                            _sendDataCommand 4ABA                         ?_USBCtrlTrfRxService 0001  
                              ___fladd@signs 0070                                ?_getsUSBUSART 0067  
                   oled_putUint8@station_dot 0076                           __CFG_FOSC$INTOSCIO 000000  
                         EUSART_Write@txData 0060                 __size_of_EUSART_Transmit_ISR 0036  
             __end_of_PIN_MANAGER_Initialize 629A                     ?_USBCtrlEPAllowDataStage 0001  
         __size_of_moteApp_add8bToDataBuffer 00DE                                 ___almod@sign 0069  
                       ?_USBCtrlTrfTxService 0001                            ??_moteApp_delayms 0062  
            __size_of_moteApp_getLightString 000E                  ?_oled_regulorResistorSelect 0001  
                        ?_moteApp_toggleLeds 0001                                 ___fladd@aexp 0071  
                               ___fladd@bexp 0072                 _USBStatusStageTimeoutCounter 004F  
                                _test_switch 40B6                         ??_EUSART_Receive_ISR 0001  
                       ??_USBWakeFromSuspend 0016                   USBTransferOnePacket@handle 0065  
                       __end_of_CDCTxService 3528                              _TMR1_Initialize 65EC  
          moteJoiningProcess@joiningComplete 007A                             ?_oled_displayOff 0001  
                      __end_of_oled_putUint8 5490                       __end_of_oled_putString 5EFE  
                       ??_USBCheckCDCRequest 0001                                   _USB_CD_Ptr 75A1  
