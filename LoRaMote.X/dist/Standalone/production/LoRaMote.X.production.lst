

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Feb 26 18:03:38 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18LF45K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=2,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=2,class=CODE,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,delta=1
   131                           	psect	text112,global,reloc=2,class=CODE,delta=1
   132                           	psect	text113,global,reloc=2,class=CODE,delta=1
   133                           	psect	text114,global,reloc=2,class=CODE,delta=1
   134                           	psect	text115,global,reloc=2,class=CODE,delta=1
   135                           	psect	text116,global,reloc=2,class=CODE,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,delta=1
   137                           	psect	text118,global,reloc=2,class=CODE,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,delta=1
   139                           	psect	text120,global,reloc=2,class=CODE,delta=1
   140                           	psect	text121,global,reloc=2,class=CODE,delta=1
   141                           	psect	text122,global,reloc=2,class=CODE,delta=1
   142                           	psect	text123,global,reloc=2,class=CODE,delta=1
   143                           	psect	text124,global,reloc=2,class=CODE,delta=1
   144                           	psect	text125,global,reloc=2,class=CODE,delta=1
   145                           	psect	text126,global,reloc=2,class=CODE,delta=1
   146                           	psect	text127,global,reloc=2,class=CODE,delta=1
   147                           	psect	text128,global,reloc=2,class=CODE,delta=1
   148                           	psect	text129,global,reloc=2,class=CODE,delta=1
   149                           	psect	text130,global,reloc=2,class=CODE,delta=1
   150                           	psect	text131,global,reloc=2,class=CODE,delta=1
   151                           	psect	text132,global,reloc=2,class=CODE,delta=1
   152                           	psect	text133,global,reloc=2,class=CODE,delta=1
   153                           	psect	text134,global,reloc=2,class=CODE,delta=1
   154                           	psect	text135,global,reloc=2,class=CODE,delta=1
   155                           	psect	text136,global,reloc=2,class=CODE,delta=1
   156                           	psect	text137,global,reloc=2,class=CODE,delta=1
   157                           	psect	text138,global,reloc=2,class=CODE,delta=1
   158                           	psect	text139,global,reloc=2,class=CODE,delta=1
   159                           	psect	text140,global,reloc=2,class=CODE,delta=1
   160                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   161                           	psect	text141,global,reloc=2,class=CODE,delta=1
   162                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   163                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   164                           	dabs	1,0x400,48,_BDT
   165                           	dabs	1,0x500,64,_cdc_data_tx
   166                           	dabs	1,0x438,8,_CtrlTrfData
   167                           	dabs	1,0x430,8,_SetupPkt
   168                           	dabs	1,0x540,64,_cdc_data_rx
   169  0000                     
   170                           	psect	idataBANK0
   171  006B38                     __pidataBANK0:
   172                           	opt stack 0
   173                           
   174                           ;initializer for _Contrast_level
   175  006B38  13                 	db	19
   176                           
   177                           ;initializer for _dataRateSelection
   178  006B39  02                 	db	2
   179                           
   180                           ;initializer for _dataRateValue
   181  006B3A  02                 	db	2
   182                           
   183                           ;initializer for _exitUSB
   184  006B3B  01                 	db	1
   185                           
   186                           ;initializer for _menuTimeout
   187  006B3C  01                 	db	1
   188                           
   189                           ;initializer for _moteState
   190  006B3D  01                 	db	1
   191                           
   192                           ;initializer for _periodicState
   193  006B3E  03                 	db	3
   194                           
   195                           ;initializer for _periodicTimerValue
   196  006B3F  03                 	db	3
   197                           
   198                           ;initializer for _periodicUpValue
   199  006B40  03                 	db	3
   200                           
   201                           	psect	idataBANK1
   202  006B78                     __pidataBANK1:
   203                           	opt stack 0
   204                           
   205                           ;initializer for _selectedFont
   206  006B78  BB                 	db	low _OledFont0
   207  006B79  75                 	db	high _OledFont0
   208                           
   209                           	psect	mediumconst
   210  0075B2                     __pmediumconst:
   211                           	opt stack 0
   212  0075B2  00                 	db	0
   213  0075B3                     _USB_SD_Ptr:
   214                           	opt stack 0
   215  0075B3  78                 	db	low _sd000
   216  0075B4  79                 	db	high _sd000
   217  0075B5  FE                 	db	low _sd001
   218  0075B6  78                 	db	high _sd001
   219  0075B7  32                 	db	low _sd002
   220  0075B8  79                 	db	high _sd002
   221  0075B9                     __end_of_USB_SD_Ptr:
   222                           	opt stack 0
   223  0075B9                     _USB_CD_Ptr:
   224                           	opt stack 0
   225  0075B9  BB                 	db	low _configDescriptor1
   226  0075BA  78                 	db	high _configDescriptor1
   227  0075BB                     __end_of_USB_CD_Ptr:
   228                           	opt stack 0
   229  0075BB                     _OledFont0:
   230                           	opt stack 0
   231  0075BB  00                 	db	0
   232  0075BC  00                 	db	0
   233  0075BD  00                 	db	0
   234  0075BE  00                 	db	0
   235  0075BF  00                 	db	0
   236  0075C0  00                 	db	0
   237  0075C1  00                 	db	0
   238  0075C2  00                 	db	0
   239  0075C3  00                 	db	0
   240  0075C4  00                 	db	0
   241  0075C5  00                 	db	0
   242  0075C6  5F                 	db	95
   243  0075C7  00                 	db	0
   244  0075C8  00                 	db	0
   245  0075C9  00                 	db	0
   246  0075CA  00                 	db	0
   247  0075CB  00                 	db	0
   248  0075CC  00                 	db	0
   249  0075CD  03                 	db	3
   250  0075CE  00                 	db	0
   251  0075CF  03                 	db	3
   252  0075D0  00                 	db	0
   253  0075D1  00                 	db	0
   254  0075D2  00                 	db	0
   255  0075D3  64                 	db	100
   256  0075D4  3C                 	db	60
   257  0075D5  26                 	db	38
   258  0075D6  64                 	db	100
   259  0075D7  3C                 	db	60
   260  0075D8  26                 	db	38
   261  0075D9  24                 	db	36
   262  0075DA  00                 	db	0
   263  0075DB  26                 	db	38
   264  0075DC  49                 	db	73
   265  0075DD  49                 	db	73
   266  0075DE  7F                 	db	127
   267  0075DF  49                 	db	73
   268  0075E0  49                 	db	73
   269  0075E1  32                 	db	50
   270  0075E2  00                 	db	0
   271  0075E3  42                 	db	66
   272  0075E4  25                 	db	37
   273  0075E5  12                 	db	18
   274  0075E6  08                 	db	8
   275  0075E7  24                 	db	36
   276  0075E8  52                 	db	82
   277  0075E9  21                 	db	33
   278  0075EA  00                 	db	0
   279  0075EB  20                 	db	32
   280  0075EC  50                 	db	80
   281  0075ED  4E                 	db	78
   282  0075EE  55                 	db	85
   283  0075EF  22                 	db	34
   284  0075F0  58                 	db	88
   285  0075F1  28                 	db	40
   286  0075F2  00                 	db	0
   287  0075F3  00                 	db	0
   288  0075F4  00                 	db	0
   289  0075F5  00                 	db	0
   290  0075F6  03                 	db	3
   291  0075F7  00                 	db	0
   292  0075F8  00                 	db	0
   293  0075F9  00                 	db	0
   294  0075FA  00                 	db	0
   295  0075FB  00                 	db	0
   296  0075FC  00                 	db	0
   297  0075FD  1C                 	db	28
   298  0075FE  22                 	db	34
   299  0075FF  41                 	db	65
   300  007600  00                 	db	0
   301  007601  00                 	db	0
   302  007602  00                 	db	0
   303  007603  00                 	db	0
   304  007604  00                 	db	0
   305  007605  00                 	db	0
   306  007606  41                 	db	65
   307  007607  22                 	db	34
   308  007608  1C                 	db	28
   309  007609  00                 	db	0
   310  00760A  00                 	db	0
   311  00760B  00                 	db	0
   312  00760C  15                 	db	21
   313  00760D  15                 	db	21
   314  00760E  0E                 	db	14
   315  00760F  0E                 	db	14
   316  007610  15                 	db	21
   317  007611  15                 	db	21
   318  007612  00                 	db	0
   319  007613  00                 	db	0
   320  007614  08                 	db	8
   321  007615  08                 	db	8
   322  007616  3E                 	db	62
   323  007617  08                 	db	8
   324  007618  08                 	db	8
   325  007619  00                 	db	0
   326  00761A  00                 	db	0
   327  00761B  00                 	db	0
   328  00761C  00                 	db	0
   329  00761D  00                 	db	0
   330  00761E  50                 	db	80
   331  00761F  30                 	db	48
   332  007620  00                 	db	0
   333  007621  00                 	db	0
   334  007622  00                 	db	0
   335  007623  00                 	db	0
   336  007624  08                 	db	8
   337  007625  08                 	db	8
   338  007626  08                 	db	8
   339  007627  08                 	db	8
   340  007628  08                 	db	8
   341  007629  00                 	db	0
   342  00762A  00                 	db	0
   343  00762B  00                 	db	0
   344  00762C  00                 	db	0
   345  00762D  00                 	db	0
   346  00762E  40                 	db	64
   347  00762F  00                 	db	0
   348  007630  00                 	db	0
   349  007631  00                 	db	0
   350  007632  00                 	db	0
   351  007633  40                 	db	64
   352  007634  20                 	db	32
   353  007635  10                 	db	16
   354  007636  08                 	db	8
   355  007637  04                 	db	4
   356  007638  02                 	db	2
   357  007639  01                 	db	1
   358  00763A  00                 	db	0
   359  00763B  00                 	db	0
   360  00763C  3E                 	db	62
   361  00763D  41                 	db	65
   362  00763E  41                 	db	65
   363  00763F  41                 	db	65
   364  007640  3E                 	db	62
   365  007641  00                 	db	0
   366  007642  00                 	db	0
   367  007643  00                 	db	0
   368  007644  00                 	db	0
   369  007645  41                 	db	65
   370  007646  7F                 	db	127
   371  007647  40                 	db	64
   372  007648  00                 	db	0
   373  007649  00                 	db	0
   374  00764A  00                 	db	0
   375  00764B  00                 	db	0
   376  00764C  42                 	db	66
   377  00764D  61                 	db	97
   378  00764E  51                 	db	81
   379  00764F  49                 	db	73
   380  007650  6E                 	db	110
   381  007651  00                 	db	0
   382  007652  00                 	db	0
   383  007653  00                 	db	0
   384  007654  22                 	db	34
   385  007655  41                 	db	65
   386  007656  49                 	db	73
   387  007657  49                 	db	73
   388  007658  36                 	db	54
   389  007659  00                 	db	0
   390  00765A  00                 	db	0
   391  00765B  00                 	db	0
   392  00765C  18                 	db	24
   393  00765D  14                 	db	20
   394  00765E  12                 	db	18
   395  00765F  7F                 	db	127
   396  007660  10                 	db	16
   397  007661  00                 	db	0
   398  007662  00                 	db	0
   399  007663  00                 	db	0
   400  007664  27                 	db	39
   401  007665  49                 	db	73
   402  007666  49                 	db	73
   403  007667  49                 	db	73
   404  007668  71                 	db	113
   405  007669  00                 	db	0
   406  00766A  00                 	db	0
   407  00766B  00                 	db	0
   408  00766C  3C                 	db	60
   409  00766D  4A                 	db	74
   410  00766E  49                 	db	73
   411  00766F  48                 	db	72
   412  007670  70                 	db	112
   413  007671  00                 	db	0
   414  007672  00                 	db	0
   415  007673  00                 	db	0
   416  007674  43                 	db	67
   417  007675  21                 	db	33
   418  007676  11                 	db	17
   419  007677  0D                 	db	13
   420  007678  03                 	db	3
   421  007679  00                 	db	0
   422  00767A  00                 	db	0
   423  00767B  00                 	db	0
   424  00767C  36                 	db	54
   425  00767D  49                 	db	73
   426  00767E  49                 	db	73
   427  00767F  49                 	db	73
   428  007680  36                 	db	54
   429  007681  00                 	db	0
   430  007682  00                 	db	0
   431  007683  00                 	db	0
   432  007684  06                 	db	6
   433  007685  09                 	db	9
   434  007686  49                 	db	73
   435  007687  29                 	db	41
   436  007688  1E                 	db	30
   437  007689  00                 	db	0
   438  00768A  00                 	db	0
   439  00768B  00                 	db	0
   440  00768C  00                 	db	0
   441  00768D  00                 	db	0
   442  00768E  12                 	db	18
   443  00768F  00                 	db	0
   444  007690  00                 	db	0
   445  007691  00                 	db	0
   446  007692  00                 	db	0
   447  007693  00                 	db	0
   448  007694  00                 	db	0
   449  007695  00                 	db	0
   450  007696  52                 	db	82
   451  007697  30                 	db	48
   452  007698  00                 	db	0
   453  007699  00                 	db	0
   454  00769A  00                 	db	0
   455  00769B  00                 	db	0
   456  00769C  00                 	db	0
   457  00769D  08                 	db	8
   458  00769E  14                 	db	20
   459  00769F  14                 	db	20
   460  0076A0  22                 	db	34
   461  0076A1  00                 	db	0
   462  0076A2  00                 	db	0
   463  0076A3  00                 	db	0
   464  0076A4  14                 	db	20
   465  0076A5  14                 	db	20
   466  0076A6  14                 	db	20
   467  0076A7  14                 	db	20
   468  0076A8  14                 	db	20
   469  0076A9  14                 	db	20
   470  0076AA  00                 	db	0
   471  0076AB  00                 	db	0
   472  0076AC  00                 	db	0
   473  0076AD  22                 	db	34
   474  0076AE  14                 	db	20
   475  0076AF  14                 	db	20
   476  0076B0  08                 	db	8
   477  0076B1  00                 	db	0
   478  0076B2  00                 	db	0
   479  0076B3  00                 	db	0
   480  0076B4  02                 	db	2
   481  0076B5  01                 	db	1
   482  0076B6  59                 	db	89
   483  0076B7  05                 	db	5
   484  0076B8  02                 	db	2
   485  0076B9  00                 	db	0
   486  0076BA  00                 	db	0
   487  0076BB  3E                 	db	62
   488  0076BC  41                 	db	65
   489  0076BD  5D                 	db	93
   490  0076BE  55                 	db	85
   491  0076BF  4D                 	db	77
   492  0076C0  51                 	db	81
   493  0076C1  2E                 	db	46
   494  0076C2  00                 	db	0
   495  0076C3  40                 	db	64
   496  0076C4  7C                 	db	124
   497  0076C5  4A                 	db	74
   498  0076C6  09                 	db	9
   499  0076C7  4A                 	db	74
   500  0076C8  7C                 	db	124
   501  0076C9  40                 	db	64
   502  0076CA  00                 	db	0
   503  0076CB  41                 	db	65
   504  0076CC  7F                 	db	127
   505  0076CD  49                 	db	73
   506  0076CE  49                 	db	73
   507  0076CF  49                 	db	73
   508  0076D0  49                 	db	73
   509  0076D1  36                 	db	54
   510  0076D2  00                 	db	0
   511  0076D3  1C                 	db	28
   512  0076D4  22                 	db	34
   513  0076D5  41                 	db	65
   514  0076D6  41                 	db	65
   515  0076D7  41                 	db	65
   516  0076D8  41                 	db	65
   517  0076D9  22                 	db	34
   518  0076DA  00                 	db	0
   519  0076DB  41                 	db	65
   520  0076DC  7F                 	db	127
   521  0076DD  41                 	db	65
   522  0076DE  41                 	db	65
   523  0076DF  41                 	db	65
   524  0076E0  22                 	db	34
   525  0076E1  1C                 	db	28
   526  0076E2  00                 	db	0
   527  0076E3  41                 	db	65
   528  0076E4  7F                 	db	127
   529  0076E5  49                 	db	73
   530  0076E6  49                 	db	73
   531  0076E7  5D                 	db	93
   532  0076E8  41                 	db	65
   533  0076E9  63                 	db	99
   534  0076EA  00                 	db	0
   535  0076EB  41                 	db	65
   536  0076EC  7F                 	db	127
   537  0076ED  49                 	db	73
   538  0076EE  09                 	db	9
   539  0076EF  1D                 	db	29
   540  0076F0  01                 	db	1
   541  0076F1  03                 	db	3
   542  0076F2  00                 	db	0
   543  0076F3  1C                 	db	28
   544  0076F4  22                 	db	34
   545  0076F5  41                 	db	65
   546  0076F6  49                 	db	73
   547  0076F7  49                 	db	73
   548  0076F8  3A                 	db	58
   549  0076F9  08                 	db	8
   550  0076FA  00                 	db	0
   551  0076FB  41                 	db	65
   552  0076FC  7F                 	db	127
   553  0076FD  08                 	db	8
   554  0076FE  08                 	db	8
   555  0076FF  08                 	db	8
   556  007700  7F                 	db	127
   557  007701  41                 	db	65
   558  007702  00                 	db	0
   559  007703  00                 	db	0
   560  007704  41                 	db	65
   561  007705  41                 	db	65
   562  007706  7F                 	db	127
   563  007707  41                 	db	65
   564  007708  41                 	db	65
   565  007709  00                 	db	0
   566  00770A  00                 	db	0
   567  00770B  30                 	db	48
   568  00770C  40                 	db	64
   569  00770D  41                 	db	65
   570  00770E  41                 	db	65
   571  00770F  3F                 	db	63
   572  007710  01                 	db	1
   573  007711  01                 	db	1
   574  007712  00                 	db	0
   575  007713  41                 	db	65
   576  007714  7F                 	db	127
   577  007715  08                 	db	8
   578  007716  0C                 	db	12
   579  007717  12                 	db	18
   580  007718  61                 	db	97
   581  007719  41                 	db	65
   582  00771A  00                 	db	0
   583  00771B  41                 	db	65
   584  00771C  7F                 	db	127
   585  00771D  41                 	db	65
   586  00771E  40                 	db	64
   587  00771F  40                 	db	64
   588  007720  40                 	db	64
   589  007721  60                 	db	96
   590  007722  00                 	db	0
   591  007723  41                 	db	65
   592  007724  7F                 	db	127
   593  007725  42                 	db	66
   594  007726  0C                 	db	12
   595  007727  42                 	db	66
   596  007728  7F                 	db	127
   597  007729  41                 	db	65
   598  00772A  00                 	db	0
   599  00772B  41                 	db	65
   600  00772C  7F                 	db	127
   601  00772D  42                 	db	66
   602  00772E  0C                 	db	12
   603  00772F  11                 	db	17
   604  007730  7F                 	db	127
   605  007731  01                 	db	1
   606  007732  00                 	db	0
   607  007733  1C                 	db	28
   608  007734  22                 	db	34
   609  007735  41                 	db	65
   610  007736  41                 	db	65
   611  007737  41                 	db	65
   612  007738  22                 	db	34
   613  007739  1C                 	db	28
   614  00773A  00                 	db	0
   615  00773B  41                 	db	65
   616  00773C  7F                 	db	127
   617  00773D  49                 	db	73
   618  00773E  09                 	db	9
   619  00773F  09                 	db	9
   620  007740  09                 	db	9
   621  007741  06                 	db	6
   622  007742  00                 	db	0
   623  007743  0C                 	db	12
   624  007744  12                 	db	18
   625  007745  21                 	db	33
   626  007746  21                 	db	33
   627  007747  61                 	db	97
   628  007748  52                 	db	82
   629  007749  4C                 	db	76
   630  00774A  00                 	db	0
   631  00774B  41                 	db	65
   632  00774C  7F                 	db	127
   633  00774D  09                 	db	9
   634  00774E  09                 	db	9
   635  00774F  19                 	db	25
   636  007750  69                 	db	105
   637  007751  46                 	db	70
   638  007752  00                 	db	0
   639  007753  66                 	db	102
   640  007754  49                 	db	73
   641  007755  49                 	db	73
   642  007756  49                 	db	73
   643  007757  49                 	db	73
   644  007758  49                 	db	73
   645  007759  33                 	db	51
   646  00775A  00                 	db	0
   647  00775B  03                 	db	3
   648  00775C  01                 	db	1
   649  00775D  41                 	db	65
   650  00775E  7F                 	db	127
   651  00775F  41                 	db	65
   652  007760  01                 	db	1
   653  007761  03                 	db	3
   654  007762  00                 	db	0
   655  007763  01                 	db	1
   656  007764  3F                 	db	63
   657  007765  41                 	db	65
   658  007766  40                 	db	64
   659  007767  41                 	db	65
   660  007768  3F                 	db	63
   661  007769  01                 	db	1
   662  00776A  00                 	db	0
   663  00776B  01                 	db	1
   664  00776C  0F                 	db	15
   665  00776D  31                 	db	49
   666  00776E  40                 	db	64
   667  00776F  31                 	db	49
   668  007770  0F                 	db	15
   669  007771  01                 	db	1
   670  007772  00                 	db	0
   671  007773  01                 	db	1
   672  007774  1F                 	db	31
   673  007775  61                 	db	97
   674  007776  14                 	db	20
   675  007777  61                 	db	97
   676  007778  1F                 	db	31
   677  007779  01                 	db	1
   678  00777A  00                 	db	0
   679  00777B  41                 	db	65
   680  00777C  41                 	db	65
   681  00777D  36                 	db	54
   682  00777E  08                 	db	8
   683  00777F  36                 	db	54
   684  007780  41                 	db	65
   685  007781  41                 	db	65
   686  007782  00                 	db	0
   687  007783  01                 	db	1
   688  007784  03                 	db	3
   689  007785  44                 	db	68
   690  007786  78                 	db	120
   691  007787  44                 	db	68
   692  007788  03                 	db	3
   693  007789  01                 	db	1
   694  00778A  00                 	db	0
   695  00778B  43                 	db	67
   696  00778C  61                 	db	97
   697  00778D  51                 	db	81
   698  00778E  49                 	db	73
   699  00778F  45                 	db	69
   700  007790  43                 	db	67
   701  007791  61                 	db	97
   702  007792  00                 	db	0
   703  007793  00                 	db	0
   704  007794  00                 	db	0
   705  007795  7F                 	db	127
   706  007796  41                 	db	65
   707  007797  41                 	db	65
   708  007798  00                 	db	0
   709  007799  00                 	db	0
   710  00779A  00                 	db	0
   711  00779B  01                 	db	1
   712  00779C  02                 	db	2
   713  00779D  04                 	db	4
   714  00779E  08                 	db	8
   715  00779F  10                 	db	16
   716  0077A0  20                 	db	32
   717  0077A1  40                 	db	64
   718  0077A2  00                 	db	0
   719  0077A3  00                 	db	0
   720  0077A4  00                 	db	0
   721  0077A5  41                 	db	65
   722  0077A6  41                 	db	65
   723  0077A7  7F                 	db	127
   724  0077A8  00                 	db	0
   725  0077A9  00                 	db	0
   726  0077AA  00                 	db	0
   727  0077AB  00                 	db	0
   728  0077AC  04                 	db	4
   729  0077AD  02                 	db	2
   730  0077AE  01                 	db	1
   731  0077AF  01                 	db	1
   732  0077B0  02                 	db	2
   733  0077B1  04                 	db	4
   734  0077B2  00                 	db	0
   735  0077B3  00                 	db	0
   736  0077B4  40                 	db	64
   737  0077B5  40                 	db	64
   738  0077B6  40                 	db	64
   739  0077B7  40                 	db	64
   740  0077B8  40                 	db	64
   741  0077B9  40                 	db	64
   742  0077BA  00                 	db	0
   743  0077BB  00                 	db	0
   744  0077BC  01                 	db	1
   745  0077BD  02                 	db	2
   746  0077BE  00                 	db	0
   747  0077BF  00                 	db	0
   748  0077C0  00                 	db	0
   749  0077C1  00                 	db	0
   750  0077C2  00                 	db	0
   751  0077C3  00                 	db	0
   752  0077C4  34                 	db	52
   753  0077C5  4A                 	db	74
   754  0077C6  4A                 	db	74
   755  0077C7  4A                 	db	74
   756  0077C8  3C                 	db	60
   757  0077C9  40                 	db	64
   758  0077CA  00                 	db	0
   759  0077CB  00                 	db	0
   760  0077CC  41                 	db	65
   761  0077CD  3F                 	db	63
   762  0077CE  48                 	db	72
   763  0077CF  48                 	db	72
   764  0077D0  48                 	db	72
   765  0077D1  30                 	db	48
   766  0077D2  00                 	db	0
   767  0077D3  00                 	db	0
   768  0077D4  3C                 	db	60
   769  0077D5  42                 	db	66
   770  0077D6  42                 	db	66
   771  0077D7  42                 	db	66
   772  0077D8  24                 	db	36
   773  0077D9  00                 	db	0
   774  0077DA  00                 	db	0
   775  0077DB  00                 	db	0
   776  0077DC  30                 	db	48
   777  0077DD  48                 	db	72
   778  0077DE  48                 	db	72
   779  0077DF  49                 	db	73
   780  0077E0  3F                 	db	63
   781  0077E1  40                 	db	64
   782  0077E2  00                 	db	0
   783  0077E3  00                 	db	0
   784  0077E4  3C                 	db	60
   785  0077E5  4A                 	db	74
   786  0077E6  4A                 	db	74
   787  0077E7  4A                 	db	74
   788  0077E8  2C                 	db	44
   789  0077E9  00                 	db	0
   790  0077EA  00                 	db	0
   791  0077EB  00                 	db	0
   792  0077EC  00                 	db	0
   793  0077ED  48                 	db	72
   794  0077EE  7E                 	db	126
   795  0077EF  49                 	db	73
   796  0077F0  09                 	db	9
   797  0077F1  00                 	db	0
   798  0077F2  00                 	db	0
   799  0077F3  00                 	db	0
   800  0077F4  26                 	db	38
   801  0077F5  49                 	db	73
   802  0077F6  49                 	db	73
   803  0077F7  49                 	db	73
   804  0077F8  3F                 	db	63
   805  0077F9  01                 	db	1
   806  0077FA  00                 	db	0
   807  0077FB  41                 	db	65
   808  0077FC  7F                 	db	127
   809  0077FD  48                 	db	72
   810  0077FE  04                 	db	4
   811  0077FF  44                 	db	68
   812  007800  78                 	db	120
   813  007801  40                 	db	64
   814  007802  00                 	db	0
   815  007803  00                 	db	0
   816  007804  00                 	db	0
   817  007805  44                 	db	68
   818  007806  7D                 	db	125
   819  007807  40                 	db	64
   820  007808  00                 	db	0
   821  007809  00                 	db	0
   822  00780A  00                 	db	0
   823  00780B  00                 	db	0
   824  00780C  00                 	db	0
   825  00780D  40                 	db	64
   826  00780E  44                 	db	68
   827  00780F  3D                 	db	61
   828  007810  00                 	db	0
   829  007811  00                 	db	0
   830  007812  00                 	db	0
   831  007813  41                 	db	65
   832  007814  7F                 	db	127
   833  007815  10                 	db	16
   834  007816  18                 	db	24
   835  007817  24                 	db	36
   836  007818  42                 	db	66
   837  007819  42                 	db	66
   838  00781A  00                 	db	0
   839  00781B  00                 	db	0
   840  00781C  40                 	db	64
   841  00781D  41                 	db	65
   842  00781E  7F                 	db	127
   843  00781F  40                 	db	64
   844  007820  40                 	db	64
   845  007821  00                 	db	0
   846  007822  00                 	db	0
   847  007823  42                 	db	66
   848  007824  7E                 	db	126
   849  007825  02                 	db	2
   850  007826  7C                 	db	124
   851  007827  02                 	db	2
   852  007828  7E                 	db	126
   853  007829  40                 	db	64
   854  00782A  00                 	db	0
   855  00782B  42                 	db	66
   856  00782C  7E                 	db	126
   857  00782D  44                 	db	68
   858  00782E  02                 	db	2
   859  00782F  42                 	db	66
   860  007830  7C                 	db	124
   861  007831  40                 	db	64
   862  007832  00                 	db	0
   863  007833  00                 	db	0
   864  007834  3C                 	db	60
   865  007835  42                 	db	66
   866  007836  42                 	db	66
   867  007837  42                 	db	66
   868  007838  3C                 	db	60
   869  007839  00                 	db	0
   870  00783A  00                 	db	0
   871  00783B  00                 	db	0
   872  00783C  41                 	db	65
   873  00783D  7F                 	db	127
   874  00783E  49                 	db	73
   875  00783F  09                 	db	9
   876  007840  09                 	db	9
   877  007841  06                 	db	6
   878  007842  00                 	db	0
   879  007843  00                 	db	0
   880  007844  06                 	db	6
   881  007845  09                 	db	9
   882  007846  09                 	db	9
   883  007847  49                 	db	73
   884  007848  7F                 	db	127
   885  007849  41                 	db	65
   886  00784A  00                 	db	0
   887  00784B  00                 	db	0
   888  00784C  42                 	db	66
   889  00784D  7E                 	db	126
   890  00784E  44                 	db	68
   891  00784F  02                 	db	2
   892  007850  02                 	db	2
   893  007851  04                 	db	4
   894  007852  00                 	db	0
   895  007853  00                 	db	0
   896  007854  64                 	db	100
   897  007855  4A                 	db	74
   898  007856  4A                 	db	74
   899  007857  4A                 	db	74
   900  007858  36                 	db	54
   901  007859  00                 	db	0
   902  00785A  00                 	db	0
   903  00785B  00                 	db	0
   904  00785C  04                 	db	4
   905  00785D  3F                 	db	63
   906  00785E  44                 	db	68
   907  00785F  44                 	db	68
   908  007860  20                 	db	32
   909  007861  00                 	db	0
   910  007862  00                 	db	0
   911  007863  00                 	db	0
   912  007864  02                 	db	2
   913  007865  3E                 	db	62
   914  007866  40                 	db	64
   915  007867  40                 	db	64
   916  007868  22                 	db	34
   917  007869  7E                 	db	126
   918  00786A  40                 	db	64
   919  00786B  02                 	db	2
   920  00786C  0E                 	db	14
   921  00786D  32                 	db	50
   922  00786E  40                 	db	64
   923  00786F  32                 	db	50
   924  007870  0E                 	db	14
   925  007871  02                 	db	2
   926  007872  00                 	db	0
   927  007873  02                 	db	2
   928  007874  1E                 	db	30
   929  007875  62                 	db	98
   930  007876  18                 	db	24
   931  007877  62                 	db	98
   932  007878  1E                 	db	30
   933  007879  02                 	db	2
   934  00787A  00                 	db	0
   935  00787B  42                 	db	66
   936  00787C  62                 	db	98
   937  00787D  14                 	db	20
   938  00787E  08                 	db	8
   939  00787F  14                 	db	20
   940  007880  62                 	db	98
   941  007881  42                 	db	66
   942  007882  00                 	db	0
   943  007883  01                 	db	1
   944  007884  43                 	db	67
   945  007885  45                 	db	69
   946  007886  38                 	db	56
   947  007887  05                 	db	5
   948  007888  03                 	db	3
   949  007889  01                 	db	1
   950  00788A  00                 	db	0
   951  00788B  00                 	db	0
   952  00788C  46                 	db	70
   953  00788D  62                 	db	98
   954  00788E  52                 	db	82
   955  00788F  4A                 	db	74
   956  007890  46                 	db	70
   957  007891  62                 	db	98
   958  007892  00                 	db	0
   959  007893  00                 	db	0
   960  007894  00                 	db	0
   961  007895  08                 	db	8
   962  007896  36                 	db	54
   963  007897  41                 	db	65
   964  007898  00                 	db	0
   965  007899  00                 	db	0
   966  00789A  00                 	db	0
   967  00789B  00                 	db	0
   968  00789C  00                 	db	0
   969  00789D  00                 	db	0
   970  00789E  7F                 	db	127
   971  00789F  00                 	db	0
   972  0078A0  00                 	db	0
   973  0078A1  00                 	db	0
   974  0078A2  00                 	db	0
   975  0078A3  00                 	db	0
   976  0078A4  00                 	db	0
   977  0078A5  00                 	db	0
   978  0078A6  41                 	db	65
   979  0078A7  36                 	db	54
   980  0078A8  08                 	db	8
   981  0078A9  00                 	db	0
   982  0078AA  00                 	db	0
   983  0078AB  00                 	db	0
   984  0078AC  18                 	db	24
   985  0078AD  08                 	db	8
   986  0078AE  08                 	db	8
   987  0078AF  10                 	db	16
   988  0078B0  10                 	db	16
   989  0078B1  18                 	db	24
   990  0078B2  00                 	db	0
   991  0078B3  AA                 	db	170
   992  0078B4  55                 	db	85
   993  0078B5  AA                 	db	170
   994  0078B6  55                 	db	85
   995  0078B7  AA                 	db	170
   996  0078B8  55                 	db	85
   997  0078B9  AA                 	db	170
   998  0078BA  55                 	db	85
   999  0078BB                     __end_of_OledFont0:
  1000                           	opt stack 0
  1001  0078BB                     _configDescriptor1:
  1002                           	opt stack 0
  1003  0078BB  09                 	db	9
  1004  0078BC  02                 	db	2
  1005  0078BD  43                 	db	67
  1006  0078BE  00                 	db	0
  1007  0078BF  02                 	db	2
  1008  0078C0  01                 	db	1
  1009  0078C1  00                 	db	0
  1010  0078C2  C0                 	db	192
  1011  0078C3  32                 	db	50
  1012  0078C4  09                 	db	9
  1013  0078C5  04                 	db	4
  1014  0078C6  00                 	db	0
  1015  0078C7  00                 	db	0
  1016  0078C8  01                 	db	1
  1017  0078C9  02                 	db	2
  1018  0078CA  02                 	db	2
  1019  0078CB  01                 	db	1
  1020  0078CC  00                 	db	0
  1021  0078CD  05                 	db	5
  1022  0078CE  24                 	db	36
  1023  0078CF  00                 	db	0
  1024  0078D0  10                 	db	16
  1025  0078D1  01                 	db	1
  1026  0078D2  04                 	db	4
  1027  0078D3  24                 	db	36
  1028  0078D4  02                 	db	2
  1029  0078D5  02                 	db	2
  1030  0078D6  05                 	db	5
  1031  0078D7  24                 	db	36
  1032  0078D8  06                 	db	6
  1033  0078D9  00                 	db	0
  1034  0078DA  01                 	db	1
  1035  0078DB  05                 	db	5
  1036  0078DC  24                 	db	36
  1037  0078DD  01                 	db	1
  1038  0078DE  00                 	db	0
  1039  0078DF  01                 	db	1
  1040  0078E0  07                 	db	7
  1041  0078E1  05                 	db	5
  1042  0078E2  81                 	db	129
  1043  0078E3  03                 	db	3
  1044  0078E4  08                 	db	8
  1045  0078E5  00                 	db	0
  1046  0078E6  02                 	db	2
  1047  0078E7  09                 	db	9
  1048  0078E8  04                 	db	4
  1049  0078E9  01                 	db	1
  1050  0078EA  00                 	db	0
  1051  0078EB  02                 	db	2
  1052  0078EC  0A                 	db	10
  1053  0078ED  00                 	db	0
  1054  0078EE  00                 	db	0
  1055  0078EF  00                 	db	0
  1056  0078F0  07                 	db	7
  1057  0078F1  05                 	db	5
  1058  0078F2  02                 	db	2
  1059  0078F3  02                 	db	2
  1060  0078F4  40                 	db	64
  1061  0078F5  00                 	db	0
  1062  0078F6  00                 	db	0
  1063  0078F7  07                 	db	7
  1064  0078F8  05                 	db	5
  1065  0078F9  82                 	db	130
  1066  0078FA  02                 	db	2
  1067  0078FB  40                 	db	64
  1068  0078FC  00                 	db	0
  1069  0078FD  00                 	db	0
  1070  0078FE                     __end_of_configDescriptor1:
  1071                           	opt stack 0
  1072  0078FE                     _sd001:
  1073                           	opt stack 0
  1074  0078FE  34                 	db	52
  1075  0078FF  03                 	db	3
  1076  007900  004D               	dw	77
  1077  007902  0069               	dw	105
  1078  007904  0063               	dw	99
  1079  007906  0072               	dw	114
  1080  007908  006F               	dw	111
  1081  00790A  0063               	dw	99
  1082  00790C  0068               	dw	104
  1083  00790E  0069               	dw	105
  1084  007910  0070               	dw	112
  1085  007912  0020               	dw	32
  1086  007914  0054               	dw	84
  1087  007916  0065               	dw	101
  1088  007918  0063               	dw	99
  1089  00791A  0068               	dw	104
  1090  00791C  006E               	dw	110
  1091  00791E  006F               	dw	111
  1092  007920  006C               	dw	108
  1093  007922  006F               	dw	111
  1094  007924  0067               	dw	103
  1095  007926  0079               	dw	121
  1096  007928  0020               	dw	32
  1097  00792A  0049               	dw	73
  1098  00792C  006E               	dw	110
  1099  00792E  0063               	dw	99
  1100  007930  002E               	dw	46
  1101  007932                     __end_of_sd001:
  1102                           	opt stack 0
  1103  007932                     _sd002:
  1104                           	opt stack 0
  1105  007932  34                 	db	52
  1106  007933  03                 	db	3
  1107  007934  0043               	dw	67
  1108  007936  0044               	dw	68
  1109  007938  0043               	dw	67
  1110  00793A  0020               	dw	32
  1111  00793C  0052               	dw	82
  1112  00793E  0053               	dw	83
  1113  007940  002D               	dw	45
  1114  007942  0032               	dw	50
  1115  007944  0033               	dw	51
  1116  007946  0032               	dw	50
  1117  007948  0020               	dw	32
  1118  00794A  0045               	dw	69
  1119  00794C  006D               	dw	109
  1120  00794E  0075               	dw	117
  1121  007950  006C               	dw	108
  1122  007952  0061               	dw	97
  1123  007954  0074               	dw	116
  1124  007956  0069               	dw	105
  1125  007958  006F               	dw	111
  1126  00795A  006E               	dw	110
  1127  00795C  0020               	dw	32
  1128  00795E  0044               	dw	68
  1129  007960  0065               	dw	101
  1130  007962  006D               	dw	109
  1131  007964  006F               	dw	111
  1132  007966                     __end_of_sd002:
  1133                           	opt stack 0
  1134  007966                     _device_dsc:
  1135                           	opt stack 0
  1136  007966  12                 	db	18
  1137  007967  01                 	db	1
  1138  007968  0200               	dw	512
  1139  00796A  02                 	db	2
  1140  00796B  00                 	db	0
  1141  00796C  00                 	db	0
  1142  00796D  08                 	db	8
  1143  00796E  04D8               	dw	1240
  1144  007970  000A               	dw	10
  1145  007972  0100               	dw	256
  1146  007974  01                 	db	1
  1147  007975  02                 	db	2
  1148  007976  00                 	db	0
  1149  007977  01                 	db	1
  1150  007978                     __end_of_device_dsc:
  1151                           	opt stack 0
  1152  007978                     _sd000:
  1153                           	opt stack 0
  1154  007978  04                 	db	4
  1155  007979  03                 	db	3
  1156  00797A  0409               	dw	1033
  1157  00797C                     __end_of_sd000:
  1158                           	opt stack 0
  1159  0000                     _ANSELAbits	set	3931
  1160  0000                     _ANSELCbits	set	3933
  1161  0000                     _ANSELD	set	3934
  1162  0000                     _TMR3	set	4018
  1163  0000                     _ACTCON	set	4021
  1164  0000                     _ADCON0	set	4034
  1165  0000                     _ADCON0bits	set	4034
  1166  0000                     _ADCON1	set	4033
  1167  0000                     _ADCON2	set	4032
  1168  0000                     _ADRESH	set	4036
  1169  0000                     _ADRESL	set	4035
  1170  0000                     _BAUDCON	set	4024
  1171  0000                     _CM1CON0	set	3992
  1172  0000                     _CM1CON0bits	set	3992
  1173  0000                     _CM2CON1bits	set	3994
  1174  0000                     _EEADR	set	4009
  1175  0000                     _EECON1bits	set	4006
  1176  0000                     _EECON2	set	4007
  1177  0000                     _EEDATA	set	4008
  1178  0000                     _INTCON3bits	set	4080
  1179  0000                     _INTCONbits	set	4082
  1180  0000                     _IOCCbits	set	3975
  1181  0000                     _IPR3bits	set	4005
  1182  0000                     _LATAbits	set	3977
  1183  0000                     _LATBbits	set	3978
  1184  0000                     _LATCbits	set	3979
  1185  0000                     _LATD	set	3980
  1186  0000                     _LATEbits	set	3981
  1187  0000                     _OSCCON	set	4051
  1188  0000                     _OSCCON2	set	4050
  1189  0000                     _OSCCON2bits	set	4050
  1190  0000                     _OSCTUNE	set	3995
  1191  0000                     _PIE1bits	set	3997
  1192  0000                     _PIE2bits	set	4000
  1193  0000                     _PIE3bits	set	4003
  1194  0000                     _PIR1bits	set	3998
  1195  0000                     _PIR2bits	set	4001
  1196  0000                     _PIR3bits	set	4004
  1197  0000                     _PORTAbits	set	3968
  1198  0000                     _PORTBbits	set	3969
  1199  0000                     _PORTCbits	set	3970
  1200  0000                     _PR2	set	4027
  1201  0000                     _RCONbits	set	4048
  1202  0000                     _RCREG	set	4014
  1203  0000                     _RCSTA	set	4011
  1204  0000                     _RCSTAbits	set	4011
  1205  0000                     _SPBRG	set	4015
  1206  0000                     _SPBRGH	set	4016
  1207  0000                     _SSP1ADD	set	4040
  1208  0000                     _SSP1CON1	set	4038
  1209  0000                     _SSP1CON1bits	set	4038
  1210  0000                     _SSP1STAT	set	4039
  1211  0000                     _SSP1STATbits	set	4039
  1212  0000                     _SSPBUF	set	4041
  1213  0000                     _T1CON	set	4045
  1214  0000                     _T1CONbits	set	4045
  1215  0000                     _T1GCON	set	4044
  1216  0000                     _T1GCONbits	set	4044
  1217  0000                     _T2CON	set	4026
  1218  0000                     _T2CONbits	set	4026
  1219  0000                     _T3CON	set	4017
  1220  0000                     _T3CONbits	set	4017
  1221  0000                     _T3GCON	set	4020
  1222  0000                     _T3GCONbits	set	4020
  1223  0000                     _TABLAT	set	4085
  1224  0000                     _TBLPTRH	set	4087
  1225  0000                     _TBLPTRL	set	4086
  1226  0000                     _TBLPTRU	set	4088
  1227  0000                     _TMR1H	set	4047
  1228  0000                     _TMR1L	set	4046
  1229  0000                     _TMR2	set	4028
  1230  0000                     _TMR3H	set	4019
  1231  0000                     _TMR3L	set	4018
  1232  0000                     _TRISAbits	set	3986
  1233  0000                     _TRISBbits	set	3987
  1234  0000                     _TRISCbits	set	3988
  1235  0000                     _TRISD	set	3989
  1236  0000                     _TRISEbits	set	3990
  1237  0000                     _TXREG	set	4013
  1238  0000                     _TXSTA	set	4012
  1239  0000                     _TXSTAbits	set	4012
  1240  0000                     _UADDR	set	3939
  1241  0000                     _UCFG	set	3938
  1242  0000                     _UCON	set	3936
  1243  0000                     _UCONbits	set	3936
  1244  0000                     _UEIE	set	3942
  1245  0000                     _UEIR	set	3943
  1246  0000                     _UEP0bits	set	3946
  1247  0000                     _UIE	set	3940
  1248  0000                     _UIEbits	set	3940
  1249  0000                     _UIR	set	3941
  1250  0000                     _UIRbits	set	3941
  1251  0000                     _USTAT	set	3937
  1252  0000                     _VREFCON0	set	3965
  1253  0000                     _VREFCON0bits	set	3965
  1254  0000                     _WDTCONbits	set	4049
  1255  0000                     _UEP0	set	3946
  1256  0000                     _UEP1	set	3947
  1257  0000                     _CKE	set	32318
  1258  0000                     _CKP	set	32308
  1259  0000                     _GIE	set	32663
  1260  0000                     _PEIE	set	32662
  1261  00797C                     STR_190:
  1262  00797C  73                 	db	115	;'s'
  1263  00797D  79                 	db	121	;'y'
  1264  00797E  73                 	db	115	;'s'
  1265  00797F  20                 	db	32
  1266  007980  73                 	db	115	;'s'
  1267  007981  65                 	db	101	;'e'
  1268  007982  74                 	db	116	;'t'
  1269  007983  20                 	db	32
  1270  007984  70                 	db	112	;'p'
  1271  007985  69                 	db	105	;'i'
  1272  007986  6E                 	db	110	;'n'
  1273  007987  6D                 	db	109	;'m'
  1274  007988  6F                 	db	111	;'o'
  1275  007989  64                 	db	100	;'d'
  1276  00798A  65                 	db	101	;'e'
  1277  00798B  20                 	db	32
  1278  00798C  47                 	db	71	;'G'
  1279  00798D  50                 	db	80	;'P'
  1280  00798E  49                 	db	73	;'I'
  1281  00798F  4F                 	db	79	;'O'
  1282  007990  31                 	db	49	;'1'
  1283  007991  32                 	db	50	;'2'
  1284  007992  20                 	db	32
  1285  007993  61                 	db	97	;'a'
  1286  007994  6E                 	db	110	;'n'
  1287  007995  61                 	db	97	;'a'
  1288  007996  00                 	db	0
  1289  007997                     STR_189:
  1290  007997  73                 	db	115	;'s'
  1291  007998  79                 	db	121	;'y'
  1292  007999  73                 	db	115	;'s'
  1293  00799A  20                 	db	32
  1294  00799B  73                 	db	115	;'s'
  1295  00799C  65                 	db	101	;'e'
  1296  00799D  74                 	db	116	;'t'
  1297  00799E  20                 	db	32
  1298  00799F  70                 	db	112	;'p'
  1299  0079A0  69                 	db	105	;'i'
  1300  0079A1  6E                 	db	110	;'n'
  1301  0079A2  6D                 	db	109	;'m'
  1302  0079A3  6F                 	db	111	;'o'
  1303  0079A4  64                 	db	100	;'d'
  1304  0079A5  65                 	db	101	;'e'
  1305  0079A6  20                 	db	32
  1306  0079A7  47                 	db	71	;'G'
  1307  0079A8  50                 	db	80	;'P'
  1308  0079A9  49                 	db	73	;'I'
  1309  0079AA  4F                 	db	79	;'O'
  1310  0079AB  31                 	db	49	;'1'
  1311  0079AC  33                 	db	51	;'3'
  1312  0079AD  20                 	db	32
  1313  0079AE  61                 	db	97	;'a'
  1314  0079AF  6E                 	db	110	;'n'
  1315  0079B0  61                 	db	97	;'a'
  1316  0079B1  00                 	db	0
  1317  0079B2                     STR_183:
  1318  0079B2  73                 	db	115	;'s'
  1319  0079B3  79                 	db	121	;'y'
  1320  0079B4  73                 	db	115	;'s'
  1321  0079B5  20                 	db	32
  1322  0079B6  73                 	db	115	;'s'
  1323  0079B7  65                 	db	101	;'e'
  1324  0079B8  74                 	db	116	;'t'
  1325  0079B9  20                 	db	32
  1326  0079BA  70                 	db	112	;'p'
  1327  0079BB  69                 	db	105	;'i'
  1328  0079BC  6E                 	db	110	;'n'
  1329  0079BD  64                 	db	100	;'d'
  1330  0079BE  69                 	db	105	;'i'
  1331  0079BF  67                 	db	103	;'g'
  1332  0079C0  20                 	db	32
  1333  0079C1  47                 	db	71	;'G'
  1334  0079C2  50                 	db	80	;'P'
  1335  0079C3  49                 	db	73	;'I'
  1336  0079C4  4F                 	db	79	;'O'
  1337  0079C5  31                 	db	49	;'1'
  1338  0079C6  30                 	db	48	;'0'
  1339  0079C7  20                 	db	32
  1340  0079C8  30                 	db	48	;'0'
  1341  0079C9  0D                 	db	13
  1342  0079CA  0A                 	db	10
  1343  0079CB  00                 	db	0
  1344  0079CC                     STR_184:
  1345  0079CC  73                 	db	115	;'s'
  1346  0079CD  79                 	db	121	;'y'
  1347  0079CE  73                 	db	115	;'s'
  1348  0079CF  20                 	db	32
  1349  0079D0  73                 	db	115	;'s'
  1350  0079D1  65                 	db	101	;'e'
  1351  0079D2  74                 	db	116	;'t'
  1352  0079D3  20                 	db	32
  1353  0079D4  70                 	db	112	;'p'
  1354  0079D5  69                 	db	105	;'i'
  1355  0079D6  6E                 	db	110	;'n'
  1356  0079D7  64                 	db	100	;'d'
  1357  0079D8  69                 	db	105	;'i'
  1358  0079D9  67                 	db	103	;'g'
  1359  0079DA  20                 	db	32
  1360  0079DB  47                 	db	71	;'G'
  1361  0079DC  50                 	db	80	;'P'
  1362  0079DD  49                 	db	73	;'I'
  1363  0079DE  4F                 	db	79	;'O'
  1364  0079DF  31                 	db	49	;'1'
  1365  0079E0  31                 	db	49	;'1'
  1366  0079E1  20                 	db	32
  1367  0079E2  30                 	db	48	;'0'
  1368  0079E3  0D                 	db	13
  1369  0079E4  0A                 	db	10
  1370  0079E5  00                 	db	0
  1371  0079E6                     STR_181:
  1372  0079E6  73                 	db	115	;'s'
  1373  0079E7  79                 	db	121	;'y'
  1374  0079E8  73                 	db	115	;'s'
  1375  0079E9  20                 	db	32
  1376  0079EA  73                 	db	115	;'s'
  1377  0079EB  65                 	db	101	;'e'
  1378  0079EC  74                 	db	116	;'t'
  1379  0079ED  20                 	db	32
  1380  0079EE  70                 	db	112	;'p'
  1381  0079EF  69                 	db	105	;'i'
  1382  0079F0  6E                 	db	110	;'n'
  1383  0079F1  64                 	db	100	;'d'
  1384  0079F2  69                 	db	105	;'i'
  1385  0079F3  67                 	db	103	;'g'
  1386  0079F4  20                 	db	32
  1387  0079F5  47                 	db	71	;'G'
  1388  0079F6  50                 	db	80	;'P'
  1389  0079F7  49                 	db	73	;'I'
  1390  0079F8  4F                 	db	79	;'O'
  1391  0079F9  31                 	db	49	;'1'
  1392  0079FA  30                 	db	48	;'0'
  1393  0079FB  20                 	db	32
  1394  0079FC  31                 	db	49	;'1'
  1395  0079FD  0D                 	db	13
  1396  0079FE  0A                 	db	10
  1397  0079FF  00                 	db	0
  1398  007A00                     STR_182:
  1399  007A00  73                 	db	115	;'s'
  1400  007A01  79                 	db	121	;'y'
  1401  007A02  73                 	db	115	;'s'
  1402  007A03  20                 	db	32
  1403  007A04  73                 	db	115	;'s'
  1404  007A05  65                 	db	101	;'e'
  1405  007A06  74                 	db	116	;'t'
  1406  007A07  20                 	db	32
  1407  007A08  70                 	db	112	;'p'
  1408  007A09  69                 	db	105	;'i'
  1409  007A0A  6E                 	db	110	;'n'
  1410  007A0B  64                 	db	100	;'d'
  1411  007A0C  69                 	db	105	;'i'
  1412  007A0D  67                 	db	103	;'g'
  1413  007A0E  20                 	db	32
  1414  007A0F  47                 	db	71	;'G'
  1415  007A10  50                 	db	80	;'P'
  1416  007A11  49                 	db	73	;'I'
  1417  007A12  4F                 	db	79	;'O'
  1418  007A13  31                 	db	49	;'1'
  1419  007A14  31                 	db	49	;'1'
  1420  007A15  20                 	db	32
  1421  007A16  31                 	db	49	;'1'
  1422  007A17  0D                 	db	13
  1423  007A18  0A                 	db	10
  1424  007A19  00                 	db	0
  1425  007A1A                     STR_191:
  1426  007A1A  73                 	db	115	;'s'
  1427  007A1B  79                 	db	121	;'y'
  1428  007A1C  73                 	db	115	;'s'
  1429  007A1D  20                 	db	32
  1430  007A1E  67                 	db	103	;'g'
  1431  007A1F  65                 	db	101	;'e'
  1432  007A20  74                 	db	116	;'t'
  1433  007A21  20                 	db	32
  1434  007A22  70                 	db	112	;'p'
  1435  007A23  69                 	db	105	;'i'
  1436  007A24  6E                 	db	110	;'n'
  1437  007A25  61                 	db	97	;'a'
  1438  007A26  6E                 	db	110	;'n'
  1439  007A27  61                 	db	97	;'a'
  1440  007A28  20                 	db	32
  1441  007A29  47                 	db	71	;'G'
  1442  007A2A  50                 	db	80	;'P'
  1443  007A2B  49                 	db	73	;'I'
  1444  007A2C  4F                 	db	79	;'O'
  1445  007A2D  31                 	db	49	;'1'
  1446  007A2E  32                 	db	50	;'2'
  1447  007A2F  00                 	db	0
  1448  007A30                     STR_192:
  1449  007A30  73                 	db	115	;'s'
  1450  007A31  79                 	db	121	;'y'
  1451  007A32  73                 	db	115	;'s'
  1452  007A33  20                 	db	32
  1453  007A34  67                 	db	103	;'g'
  1454  007A35  65                 	db	101	;'e'
  1455  007A36  74                 	db	116	;'t'
  1456  007A37  20                 	db	32
  1457  007A38  70                 	db	112	;'p'
  1458  007A39  69                 	db	105	;'i'
  1459  007A3A  6E                 	db	110	;'n'
  1460  007A3B  61                 	db	97	;'a'
  1461  007A3C  6E                 	db	110	;'n'
  1462  007A3D  61                 	db	97	;'a'
  1463  007A3E  20                 	db	32
  1464  007A3F  47                 	db	71	;'G'
  1465  007A40  50                 	db	80	;'P'
  1466  007A41  49                 	db	73	;'I'
  1467  007A42  4F                 	db	79	;'O'
  1468  007A43  31                 	db	49	;'1'
  1469  007A44  33                 	db	51	;'3'
  1470  007A45  00                 	db	0
  1471  007A46                     STR_22:
  1472  007A46  73                 	db	115	;'s'
  1473  007A47  79                 	db	121	;'y'
  1474  007A48  73                 	db	115	;'s'
  1475  007A49  20                 	db	32
  1476  007A4A  73                 	db	115	;'s'
  1477  007A4B  6C                 	db	108	;'l'
  1478  007A4C  65                 	db	101	;'e'
  1479  007A4D  65                 	db	101	;'e'
  1480  007A4E  70                 	db	112	;'p'
  1481  007A4F  20                 	db	32
  1482  007A50  39                 	db	57	;'9'
  1483  007A51  39                 	db	57	;'9'
  1484  007A52  39                 	db	57	;'9'
  1485  007A53  39                 	db	57	;'9'
  1486  007A54  39                 	db	57	;'9'
  1487  007A55  39                 	db	57	;'9'
  1488  007A56  39                 	db	57	;'9'
  1489  007A57  39                 	db	57	;'9'
  1490  007A58  39                 	db	57	;'9'
  1491  007A59  00                 	db	0
  1492  007A5A                     STR_82:
  1493  007A5A  28                 	db	40
  1494  007A5B  55                 	db	85	;'U'
  1495  007A5C  4E                 	db	78	;'N'
  1496  007A5D  43                 	db	67	;'C'
  1497  007A5E  4E                 	db	78	;'N'
  1498  007A5F  46                 	db	70	;'F'
  1499  007A60  29                 	db	41
  1500  007A61  20                 	db	32
  1501  007A62  20                 	db	32
  1502  007A63  20                 	db	32
  1503  007A64  28                 	db	40
  1504  007A65  42                 	db	66	;'B'
  1505  007A66  75                 	db	117	;'u'
  1506  007A67  72                 	db	114	;'r'
  1507  007A68  73                 	db	115	;'s'
  1508  007A69  74                 	db	116	;'t'
  1509  007A6A  29                 	db	41
  1510  007A6B  20                 	db	32
  1511  007A6C  00                 	db	0
  1512  007A6D                     STR_95:
  1513  007A6D  4D                 	db	77	;'M'
  1514  007A6E  61                 	db	97	;'a'
  1515  007A6F  63                 	db	99	;'c'
  1516  007A70  20                 	db	32
  1517  007A71  45                 	db	69	;'E'
  1518  007A72  72                 	db	114	;'r'
  1519  007A73  72                 	db	114	;'r'
  1520  007A74  6F                 	db	111	;'o'
  1521  007A75  72                 	db	114	;'r'
  1522  007A76  20                 	db	32
  1523  007A77  4F                 	db	79	;'O'
  1524  007A78  63                 	db	99	;'c'
  1525  007A79  63                 	db	99	;'c'
  1526  007A7A  75                 	db	117	;'u'
  1527  007A7B  72                 	db	114	;'r'
  1528  007A7C  72                 	db	114	;'r'
  1529  007A7D  65                 	db	101	;'e'
  1530  007A7E  64                 	db	100	;'d'
  1531  007A7F  00                 	db	0
  1532  007A80                     STR_40:
  1533  007A80  20                 	db	32
  1534  007A81  20                 	db	32
  1535  007A82  28                 	db	40
  1536  007A83  53                 	db	83	;'S'
  1537  007A84  32                 	db	50	;'2'
  1538  007A85  29                 	db	41
  1539  007A86  20                 	db	32
  1540  007A87  20                 	db	32
  1541  007A88  20                 	db	32
  1542  007A89  20                 	db	32
  1543  007A8A  20                 	db	32
  1544  007A8B  20                 	db	32
  1545  007A8C  20                 	db	32
  1546  007A8D  20                 	db	32
  1547  007A8E  20                 	db	32
  1548  007A8F  20                 	db	32
  1549  007A90  00                 	db	0
  1550  007A91                     STR_91:
  1551  007A91  20                 	db	32
  1552  007A92  20                 	db	32
  1553  007A93  20                 	db	32
  1554  007A94  20                 	db	32
  1555  007A95  52                 	db	82	;'R'
  1556  007A96  65                 	db	101	;'e'
  1557  007A97  63                 	db	99	;'c'
  1558  007A98  65                 	db	101	;'e'
  1559  007A99  69                 	db	105	;'i'
  1560  007A9A  76                 	db	118	;'v'
  1561  007A9B  65                 	db	101	;'e'
  1562  007A9C  64                 	db	100	;'d'
  1563  007A9D  20                 	db	32
  1564  007A9E  20                 	db	32
  1565  007A9F  20                 	db	32
  1566  007AA0  20                 	db	32
  1567  007AA1  00                 	db	0
  1568  007AA2                     STR_42:
  1569  007AA2  20                 	db	32
  1570  007AA3  20                 	db	32
  1571  007AA4  20                 	db	32
  1572  007AA5  20                 	db	32
  1573  007AA6  20                 	db	32
  1574  007AA7  20                 	db	32
  1575  007AA8  20                 	db	32
  1576  007AA9  20                 	db	32
  1577  007AAA  20                 	db	32
  1578  007AAB  28                 	db	40
  1579  007AAC  53                 	db	83	;'S'
  1580  007AAD  33                 	db	51	;'3'
  1581  007AAE  29                 	db	41
  1582  007AAF  20                 	db	32
  1583  007AB0  20                 	db	32
  1584  007AB1  20                 	db	32
  1585  007AB2  00                 	db	0
  1586  007AB3                     STR_34:
  1587  007AB3  20                 	db	32
  1588  007AB4  20                 	db	32
  1589  007AB5  28                 	db	40
  1590  007AB6  53                 	db	83	;'S'
  1591  007AB7  32                 	db	50	;'2'
  1592  007AB8  29                 	db	41
  1593  007AB9  20                 	db	32
  1594  007ABA  20                 	db	32
  1595  007ABB  20                 	db	32
  1596  007ABC  28                 	db	40
  1597  007ABD  53                 	db	83	;'S'
  1598  007ABE  33                 	db	51	;'3'
  1599  007ABF  29                 	db	41
  1600  007AC0  20                 	db	32
  1601  007AC1  20                 	db	32
  1602  007AC2  20                 	db	32
  1603  007AC3  00                 	db	0
  1604  007AC4                     STR_79:
  1605  007AC4  20                 	db	32
  1606  007AC5  20                 	db	32
  1607  007AC6  4C                 	db	76	;'L'
  1608  007AC7  61                 	db	97	;'a'
  1609  007AC8  73                 	db	115	;'s'
  1610  007AC9  74                 	db	116	;'t'
  1611  007ACA  20                 	db	32
  1612  007ACB  4D                 	db	77	;'M'
  1613  007ACC  65                 	db	101	;'e'
  1614  007ACD  73                 	db	115	;'s'
  1615  007ACE  73                 	db	115	;'s'
  1616  007ACF  61                 	db	97	;'a'
  1617  007AD0  67                 	db	103	;'g'
  1618  007AD1  65                 	db	101	;'e'
  1619  007AD2  20                 	db	32
  1620  007AD3  20                 	db	32
  1621  007AD4  00                 	db	0
  1622  007AD5                     STR_78:
  1623  007AD5  20                 	db	32
  1624  007AD6  56                 	db	86	;'V'
  1625  007AD7  69                 	db	105	;'i'
  1626  007AD8  65                 	db	101	;'e'
  1627  007AD9  77                 	db	119	;'w'
  1628  007ADA  20                 	db	32
  1629  007ADB  44                 	db	68	;'D'
  1630  007ADC  6F                 	db	111	;'o'
  1631  007ADD  77                 	db	119	;'w'
  1632  007ADE  6E                 	db	110	;'n'
  1633  007ADF  6C                 	db	108	;'l'
  1634  007AE0  69                 	db	105	;'i'
  1635  007AE1  6E                 	db	110	;'n'
  1636  007AE2  6B                 	db	107	;'k'
  1637  007AE3  20                 	db	32
  1638  007AE4  20                 	db	32
  1639  007AE5  00                 	db	0
  1640  007AE6                     STR_75:
  1641  007AE6  20                 	db	32
  1642  007AE7  20                 	db	32
  1643  007AE8  49                 	db	73	;'I'
  1644  007AE9  73                 	db	115	;'s'
  1645  007AEA  73                 	db	115	;'s'
  1646  007AEB  75                 	db	117	;'u'
  1647  007AEC  65                 	db	101	;'e'
  1648  007AED  20                 	db	32
  1649  007AEE  55                 	db	85	;'U'
  1650  007AEF  70                 	db	112	;'p'
  1651  007AF0  6C                 	db	108	;'l'
  1652  007AF1  69                 	db	105	;'i'
  1653  007AF2  6E                 	db	110	;'n'
  1654  007AF3  6B                 	db	107	;'k'
  1655  007AF4  20                 	db	32
  1656  007AF5  20                 	db	32
  1657  007AF6  00                 	db	0
  1658  007AF7                     STR_29:
  1659  007AF7  20                 	db	32
  1660  007AF8  28                 	db	40
  1661  007AF9  53                 	db	83	;'S'
  1662  007AFA  32                 	db	50	;'2'
  1663  007AFB  29                 	db	41
  1664  007AFC  20                 	db	32
  1665  007AFD  20                 	db	32
  1666  007AFE  20                 	db	32
  1667  007AFF  20                 	db	32
  1668  007B00  20                 	db	32
  1669  007B01  20                 	db	32
  1670  007B02  28                 	db	40
  1671  007B03  53                 	db	83	;'S'
  1672  007B04  33                 	db	51	;'3'
  1673  007B05  29                 	db	41
  1674  007B06  20                 	db	32
  1675  007B07  00                 	db	0
  1676  007B08                     STR_32:
  1677  007B08  20                 	db	32
  1678  007B09  4A                 	db	74	;'J'
  1679  007B0A  6F                 	db	111	;'o'
  1680  007B0B  69                 	db	105	;'i'
  1681  007B0C  6E                 	db	110	;'n'
  1682  007B0D  69                 	db	105	;'i'
  1683  007B0E  6E                 	db	110	;'n'
  1684  007B0F  67                 	db	103	;'g'
  1685  007B10  20                 	db	32
  1686  007B11  4D                 	db	77	;'M'
  1687  007B12  65                 	db	101	;'e'
  1688  007B13  74                 	db	116	;'t'
  1689  007B14  68                 	db	104	;'h'
  1690  007B15  6F                 	db	111	;'o'
  1691  007B16  64                 	db	100	;'d'
  1692  007B17  20                 	db	32
  1693  007B18  00                 	db	0
  1694  007B19                     STR_90:
  1695  007B19  53                 	db	83	;'S'
  1696  007B1A  65                 	db	101	;'e'
  1697  007B1B  72                 	db	114	;'r'
  1698  007B1C  76                 	db	118	;'v'
  1699  007B1D  65                 	db	101	;'e'
  1700  007B1E  72                 	db	114	;'r'
  1701  007B1F  20                 	db	32
  1702  007B20  52                 	db	82	;'R'
  1703  007B21  65                 	db	101	;'e'
  1704  007B22  73                 	db	115	;'s'
  1705  007B23  70                 	db	112	;'p'
  1706  007B24  6F                 	db	111	;'o'
  1707  007B25  6E                 	db	110	;'n'
  1708  007B26  73                 	db	115	;'s'
  1709  007B27  65                 	db	101	;'e'
  1710  007B28  20                 	db	32
  1711  007B29  00                 	db	0
  1712  007B2A                     STR_119:
  1713  007B2A  54                 	db	84	;'T'
  1714  007B2B  78                 	db	120	;'x'
  1715  007B2C  20                 	db	32
  1716  007B2D  45                 	db	69	;'E'
  1717  007B2E  76                 	db	118	;'v'
  1718  007B2F  65                 	db	101	;'e'
  1719  007B30  6E                 	db	110	;'n'
  1720  007B31  74                 	db	116	;'t'
  1721  007B32  20                 	db	32
  1722  007B33  54                 	db	84	;'T'
  1723  007B34  69                 	db	105	;'i'
  1724  007B35  6D                 	db	109	;'m'
  1725  007B36  69                 	db	105	;'i'
  1726  007B37  6E                 	db	110	;'n'
  1727  007B38  67                 	db	103	;'g'
  1728  007B39  20                 	db	32
  1729  007B3A  00                 	db	0
  1730  007B3B                     STR_118:
  1731  007B3B  50                 	db	80	;'P'
  1732  007B3C  65                 	db	101	;'e'
  1733  007B3D  72                 	db	114	;'r'
  1734  007B3E  69                 	db	105	;'i'
  1735  007B3F  6F                 	db	111	;'o'
  1736  007B40  64                 	db	100	;'d'
  1737  007B41  69                 	db	105	;'i'
  1738  007B42  63                 	db	99	;'c'
  1739  007B43  20                 	db	32
  1740  007B44  55                 	db	85	;'U'
  1741  007B45  70                 	db	112	;'p'
  1742  007B46  6C                 	db	108	;'l'
  1743  007B47  69                 	db	105	;'i'
  1744  007B48  6E                 	db	110	;'n'
  1745  007B49  6B                 	db	107	;'k'
  1746  007B4A  20                 	db	32
  1747  007B4B  00                 	db	0
  1748  007B4C                     STR_76:
  1749  007B4C  20                 	db	32
  1750  007B4D  4C                 	db	76	;'L'
  1751  007B4E  6F                 	db	111	;'o'
  1752  007B4F  52                 	db	82	;'R'
  1753  007B50  61                 	db	97	;'a'
  1754  007B51  57                 	db	87	;'W'
  1755  007B52  41                 	db	65	;'A'
  1756  007B53  4E                 	db	78	;'N'
  1757  007B54  20                 	db	32
  1758  007B55  50                 	db	80	;'P'
  1759  007B56  61                 	db	97	;'a'
  1760  007B57  63                 	db	99	;'c'
  1761  007B58  6B                 	db	107	;'k'
  1762  007B59  65                 	db	101	;'e'
  1763  007B5A  74                 	db	116	;'t'
  1764  007B5B  20                 	db	32
  1765  007B5C  00                 	db	0
  1766  007B5D                     STR_165:
  1767  007B5D  6D                 	db	109	;'m'
  1768  007B5E  61                 	db	97	;'a'
  1769  007B5F  63                 	db	99	;'c'
  1770  007B60  20                 	db	32
  1771  007B61  73                 	db	115	;'s'
  1772  007B62  65                 	db	101	;'e'
  1773  007B63  74                 	db	116	;'t'
  1774  007B64  20                 	db	32
  1775  007B65  70                 	db	112	;'p'
  1776  007B66  77                 	db	119	;'w'
  1777  007B67  72                 	db	114	;'r'
  1778  007B68  69                 	db	105	;'i'
  1779  007B69  64                 	db	100	;'d'
  1780  007B6A  78                 	db	120	;'x'
  1781  007B6B  20                 	db	32
  1782  007B6C  31                 	db	49	;'1'
  1783  007B6D  00                 	db	0
  1784  007B6E                     STR_169:
  1785  007B6E  6D                 	db	109	;'m'
  1786  007B6F  61                 	db	97	;'a'
  1787  007B70  63                 	db	99	;'c'
  1788  007B71  20                 	db	32
  1789  007B72  73                 	db	115	;'s'
  1790  007B73  65                 	db	101	;'e'
  1791  007B74  74                 	db	116	;'t'
  1792  007B75  20                 	db	32
  1793  007B76  70                 	db	112	;'p'
  1794  007B77  77                 	db	119	;'w'
  1795  007B78  72                 	db	114	;'r'
  1796  007B79  69                 	db	105	;'i'
  1797  007B7A  64                 	db	100	;'d'
  1798  007B7B  78                 	db	120	;'x'
  1799  007B7C  20                 	db	32
  1800  007B7D  32                 	db	50	;'2'
  1801  007B7E  00                 	db	0
  1802  007B7F                     STR_171:
  1803  007B7F  6D                 	db	109	;'m'
  1804  007B80  61                 	db	97	;'a'
  1805  007B81  63                 	db	99	;'c'
  1806  007B82  20                 	db	32
  1807  007B83  73                 	db	115	;'s'
  1808  007B84  65                 	db	101	;'e'
  1809  007B85  74                 	db	116	;'t'
  1810  007B86  20                 	db	32
  1811  007B87  70                 	db	112	;'p'
  1812  007B88  77                 	db	119	;'w'
  1813  007B89  72                 	db	114	;'r'
  1814  007B8A  69                 	db	105	;'i'
  1815  007B8B  64                 	db	100	;'d'
  1816  007B8C  78                 	db	120	;'x'
  1817  007B8D  20                 	db	32
  1818  007B8E  33                 	db	51	;'3'
  1819  007B8F  00                 	db	0
  1820  007B90                     STR_173:
  1821  007B90  6D                 	db	109	;'m'
  1822  007B91  61                 	db	97	;'a'
  1823  007B92  63                 	db	99	;'c'
  1824  007B93  20                 	db	32
  1825  007B94  73                 	db	115	;'s'
  1826  007B95  65                 	db	101	;'e'
  1827  007B96  74                 	db	116	;'t'
  1828  007B97  20                 	db	32
  1829  007B98  70                 	db	112	;'p'
  1830  007B99  77                 	db	119	;'w'
  1831  007B9A  72                 	db	114	;'r'
  1832  007B9B  69                 	db	105	;'i'
  1833  007B9C  64                 	db	100	;'d'
  1834  007B9D  78                 	db	120	;'x'
  1835  007B9E  20                 	db	32
  1836  007B9F  34                 	db	52	;'4'
  1837  007BA0  00                 	db	0
  1838  007BA1                     STR_163:
  1839  007BA1  6D                 	db	109	;'m'
  1840  007BA2  61                 	db	97	;'a'
  1841  007BA3  63                 	db	99	;'c'
  1842  007BA4  20                 	db	32
  1843  007BA5  73                 	db	115	;'s'
  1844  007BA6  65                 	db	101	;'e'
  1845  007BA7  74                 	db	116	;'t'
  1846  007BA8  20                 	db	32
  1847  007BA9  70                 	db	112	;'p'
  1848  007BAA  77                 	db	119	;'w'
  1849  007BAB  72                 	db	114	;'r'
  1850  007BAC  69                 	db	105	;'i'
  1851  007BAD  64                 	db	100	;'d'
  1852  007BAE  78                 	db	120	;'x'
  1853  007BAF  20                 	db	32
  1854  007BB0  35                 	db	53	;'5'
  1855  007BB1  00                 	db	0
  1856  007BB2                     STR_33:
  1857  007BB2  3C                 	db	60	;'<'
  1858  007BB3  2D                 	db	45
  1859  007BB4  20                 	db	32
  1860  007BB5  41                 	db	65	;'A'
  1861  007BB6  42                 	db	66	;'B'
  1862  007BB7  50                 	db	80	;'P'
  1863  007BB8  20                 	db	32
  1864  007BB9  20                 	db	32
  1865  007BBA  20                 	db	32
  1866  007BBB  4F                 	db	79	;'O'
  1867  007BBC  54                 	db	84	;'T'
  1868  007BBD  41                 	db	65	;'A'
  1869  007BBE  41                 	db	65	;'A'
  1870  007BBF  20                 	db	32
  1871  007BC0  2D                 	db	45
  1872  007BC1  3E                 	db	62	;'>'
  1873  007BC2  00                 	db	0
  1874  007BC3                     STR_26:
  1875  007BC3  52                 	db	82	;'R'
  1876  007BC4  65                 	db	101	;'e'
  1877  007BC5  52                 	db	82	;'R'
  1878  007BC6  75                 	db	117	;'u'
  1879  007BC7  6E                 	db	110	;'n'
  1880  007BC8  20                 	db	32
  1881  007BC9  50                 	db	80	;'P'
  1882  007BCA  77                 	db	119	;'w'
  1883  007BCB  72                 	db	114	;'r'
  1884  007BCC  54                 	db	84	;'T'
  1885  007BCD  73                 	db	115	;'s'
  1886  007BCE  74                 	db	116	;'t'
  1887  007BCF  3C                 	db	60	;'<'
  1888  007BD0  53                 	db	83	;'S'
  1889  007BD1  32                 	db	50	;'2'
  1890  007BD2  3E                 	db	62	;'>'
  1891  007BD3  00                 	db	0
  1892  007BD4                     STR_93:
  1893  007BD4  44                 	db	68	;'D'
  1894  007BD5  61                 	db	97	;'a'
  1895  007BD6  74                 	db	116	;'t'
  1896  007BD7  61                 	db	97	;'a'
  1897  007BD8  20                 	db	32
  1898  007BD9  54                 	db	84	;'T'
  1899  007BDA  72                 	db	114	;'r'
  1900  007BDB  61                 	db	97	;'a'
  1901  007BDC  6E                 	db	110	;'n'
  1902  007BDD  73                 	db	115	;'s'
  1903  007BDE  6D                 	db	109	;'m'
  1904  007BDF  69                 	db	105	;'i'
  1905  007BE0  74                 	db	116	;'t'
  1906  007BE1  74                 	db	116	;'t'
  1907  007BE2  65                 	db	101	;'e'
  1908  007BE3  64                 	db	100	;'d'
  1909  007BE4  00                 	db	0
  1910  007BE5                     STR_150:
  1911  007BE5  45                 	db	69	;'E'
  1912  007BE6  6E                 	db	110	;'n'
  1913  007BE7  74                 	db	116	;'t'
  1914  007BE8  65                 	db	101	;'e'
  1915  007BE9  72                 	db	114	;'r'
  1916  007BEA  20                 	db	32
  1917  007BEB  53                 	db	83	;'S'
  1918  007BEC  6C                 	db	108	;'l'
  1919  007BED  65                 	db	101	;'e'
  1920  007BEE  65                 	db	101	;'e'
  1921  007BEF  70                 	db	112	;'p'
  1922  007BF0  20                 	db	32
  1923  007BF1  4D                 	db	77	;'M'
  1924  007BF2  6F                 	db	111	;'o'
  1925  007BF3  64                 	db	100	;'d'
  1926  007BF4  65                 	db	101	;'e'
  1927  007BF5  00                 	db	0
  1928  007BF6                     STR_81:
  1929  007BF6  55                 	db	85	;'U'
  1930  007BF7  70                 	db	112	;'p'
  1931  007BF8  6C                 	db	108	;'l'
  1932  007BF9  69                 	db	105	;'i'
  1933  007BFA  6E                 	db	110	;'n'
  1934  007BFB  6B                 	db	107	;'k'
  1935  007BFC  20                 	db	32
  1936  007BFD  50                 	db	80	;'P'
  1937  007BFE  63                 	db	99	;'c'
  1938  007BFF  6B                 	db	107	;'k'
  1939  007C00  74                 	db	116	;'t'
  1940  007C01  20                 	db	32
  1941  007C02  54                 	db	84	;'T'
  1942  007C03  79                 	db	121	;'y'
  1943  007C04  70                 	db	112	;'p'
  1944  007C05  65                 	db	101	;'e'
  1945  007C06  00                 	db	0
  1946  007C07                     STR_134:
  1947  007C07  53                 	db	83	;'S'
  1948  007C08  65                 	db	101	;'e'
  1949  007C09  6C                 	db	108	;'l'
  1950  007C0A  65                 	db	101	;'e'
  1951  007C0B  63                 	db	99	;'c'
  1952  007C0C  74                 	db	116	;'t'
  1953  007C0D  20                 	db	32
  1954  007C0E  44                 	db	68	;'D'
  1955  007C0F  61                 	db	97	;'a'
  1956  007C10  74                 	db	116	;'t'
  1957  007C11  61                 	db	97	;'a'
  1958  007C12  20                 	db	32
  1959  007C13  52                 	db	82	;'R'
  1960  007C14  61                 	db	97	;'a'
  1961  007C15  74                 	db	116	;'t'
  1962  007C16  65                 	db	101	;'e'
  1963  007C17  00                 	db	0
  1964  007C18                     STR_27:
  1965  007C18  4D                 	db	77	;'M'
  1966  007C19  6F                 	db	111	;'o'
  1967  007C1A  62                 	db	98	;'b'
  1968  007C1B  69                 	db	105	;'i'
  1969  007C1C  6C                 	db	108	;'l'
  1970  007C1D  65                 	db	101	;'e'
  1971  007C1E  20                 	db	32
  1972  007C1F  4D                 	db	77	;'M'
  1973  007C20  6F                 	db	111	;'o'
  1974  007C21  74                 	db	116	;'t'
  1975  007C22  65                 	db	101	;'e'
  1976  007C23  20                 	db	32
  1977  007C24  2D                 	db	45
  1978  007C25  41                 	db	65	;'A'
  1979  007C26  70                 	db	112	;'p'
  1980  007C27  70                 	db	112	;'p'
  1981  007C28  00                 	db	0
  1982  007C29                     STR_28:
  1983  007C29  4E                 	db	78	;'N'
  1984  007C2A  61                 	db	97	;'a'
  1985  007C2B  76                 	db	118	;'v'
  1986  007C2C  69                 	db	105	;'i'
  1987  007C2D  67                 	db	103	;'g'
  1988  007C2E  61                 	db	97	;'a'
  1989  007C2F  74                 	db	116	;'t'
  1990  007C30  65                 	db	101	;'e'
  1991  007C31  20                 	db	32
  1992  007C32  20                 	db	32
  1993  007C33  53                 	db	83	;'S'
  1994  007C34  65                 	db	101	;'e'
  1995  007C35  6C                 	db	108	;'l'
  1996  007C36  65                 	db	101	;'e'
  1997  007C37  63                 	db	99	;'c'
  1998  007C38  74                 	db	116	;'t'
  1999  007C39  00                 	db	0
  2000  007C3A                     STR_110:
  2001  007C3A  4D                 	db	77	;'M'
  2002  007C3B  65                 	db	101	;'e'
  2003  007C3C  6E                 	db	110	;'n'
  2004  007C3D  75                 	db	117	;'u'
  2005  007C3E  20                 	db	32
  2006  007C3F  48                 	db	72	;'H'
  2007  007C40  61                 	db	97	;'a'
  2008  007C41  73                 	db	115	;'s'
  2009  007C42  20                 	db	32
  2010  007C43  54                 	db	84	;'T'
  2011  007C44  69                 	db	105	;'i'
  2012  007C45  6D                 	db	109	;'m'
  2013  007C46  65                 	db	101	;'e'
  2014  007C47  6F                 	db	111	;'o'
  2015  007C48  75                 	db	117	;'u'
  2016  007C49  74                 	db	116	;'t'
  2017  007C4A  00                 	db	0
  2018  007C4B                     STR_71:
  2019  007C4B  53                 	db	83	;'S'
  2020  007C4C  65                 	db	101	;'e'
  2021  007C4D  6E                 	db	110	;'n'
  2022  007C4E  64                 	db	100	;'d'
  2023  007C4F  20                 	db	32
  2024  007C50  50                 	db	80	;'P'
  2025  007C51  65                 	db	101	;'e'
  2026  007C52  72                 	db	114	;'r'
  2027  007C53  69                 	db	105	;'i'
  2028  007C54  6F                 	db	111	;'o'
  2029  007C55  64                 	db	100	;'d'
  2030  007C56  69                 	db	105	;'i'
  2031  007C57  63                 	db	99	;'c'
  2032  007C58  20                 	db	32
  2033  007C59  54                 	db	84	;'T'
  2034  007C5A  78                 	db	120	;'x'
  2035  007C5B  00                 	db	0
  2036  007C5C                     STR_104:
  2037  007C5C  44                 	db	68	;'D'
  2038  007C5D  6F                 	db	111	;'o'
  2039  007C5E  77                 	db	119	;'w'
  2040  007C5F  6E                 	db	110	;'n'
  2041  007C60  6C                 	db	108	;'l'
  2042  007C61  69                 	db	105	;'i'
  2043  007C62  6E                 	db	110	;'n'
  2044  007C63  6B                 	db	107	;'k'
  2045  007C64  20                 	db	32
  2046  007C65  44                 	db	68	;'D'
  2047  007C66  69                 	db	105	;'i'
  2048  007C67  73                 	db	115	;'s'
  2049  007C68  70                 	db	112	;'p'
  2050  007C69  6C                 	db	108	;'l'
  2051  007C6A  61                 	db	97	;'a'
  2052  007C6B  79                 	db	121	;'y'
  2053  007C6C  00                 	db	0
  2054  007C6D                     STR_102:
  2055  007C6D  20                 	db	32
  2056  007C6E  20                 	db	32
  2057  007C6F  20                 	db	32
  2058  007C70  20                 	db	32
  2059  007C71  44                 	db	68	;'D'
  2060  007C72  69                 	db	105	;'i'
  2061  007C73  73                 	db	115	;'s'
  2062  007C74  70                 	db	112	;'p'
  2063  007C75  6C                 	db	108	;'l'
  2064  007C76  61                 	db	97	;'a'
  2065  007C77  79                 	db	121	;'y'
  2066  007C78  20                 	db	32
  2067  007C79  20                 	db	32
  2068  007C7A  20                 	db	32
  2069  007C7B  20                 	db	32
  2070  007C7C  00                 	db	0
  2071  007C7D                     STR_101:
  2072  007C7D  20                 	db	32
  2073  007C7E  20                 	db	32
  2074  007C7F  53                 	db	83	;'S'
  2075  007C80  65                 	db	101	;'e'
  2076  007C81  6E                 	db	110	;'n'
  2077  007C82  73                 	db	115	;'s'
  2078  007C83  6F                 	db	111	;'o'
  2079  007C84  72                 	db	114	;'r'
  2080  007C85  20                 	db	32
  2081  007C86  44                 	db	68	;'D'
  2082  007C87  61                 	db	97	;'a'
  2083  007C88  74                 	db	116	;'t'
  2084  007C89  61                 	db	97	;'a'
  2085  007C8A  20                 	db	32
  2086  007C8B  20                 	db	32
  2087  007C8C  00                 	db	0
  2088  007C8D                     STR_113:
  2089  007C8D  28                 	db	40
  2090  007C8E  4E                 	db	78	;'N'
  2091  007C8F  41                 	db	65	;'A'
  2092  007C90  56                 	db	86	;'V'
  2093  007C91  29                 	db	41
  2094  007C92  20                 	db	32
  2095  007C93  20                 	db	32
  2096  007C94  20                 	db	32
  2097  007C95  20                 	db	32
  2098  007C96  28                 	db	40
  2099  007C97  43                 	db	67	;'C'
  2100  007C98  4E                 	db	78	;'N'
  2101  007C99  47                 	db	71	;'G'
  2102  007C9A  29                 	db	41
  2103  007C9B  20                 	db	32
  2104  007C9C  00                 	db	0
  2105  007C9D                     STR_77:
  2106  007C9D  28                 	db	40
  2107  007C9E  4E                 	db	78	;'N'
  2108  007C9F  41                 	db	65	;'A'
  2109  007CA0  56                 	db	86	;'V'
  2110  007CA1  29                 	db	41
  2111  007CA2  20                 	db	32
  2112  007CA3  20                 	db	32
  2113  007CA4  20                 	db	32
  2114  007CA5  20                 	db	32
  2115  007CA6  28                 	db	40
  2116  007CA7  53                 	db	83	;'S'
  2117  007CA8  45                 	db	69	;'E'
  2118  007CA9  4C                 	db	76	;'L'
  2119  007CAA  29                 	db	41
  2120  007CAB  20                 	db	32
  2121  007CAC  00                 	db	0
  2122  007CAD                     STR_151:
  2123  007CAD  28                 	db	40
  2124  007CAE  4E                 	db	78	;'N'
  2125  007CAF  41                 	db	65	;'A'
  2126  007CB0  56                 	db	86	;'V'
  2127  007CB1  29                 	db	41
  2128  007CB2  20                 	db	32
  2129  007CB3  20                 	db	32
  2130  007CB4  20                 	db	32
  2131  007CB5  20                 	db	32
  2132  007CB6  28                 	db	40
  2133  007CB7  53                 	db	83	;'S'
  2134  007CB8  4C                 	db	76	;'L'
  2135  007CB9  50                 	db	80	;'P'
  2136  007CBA  29                 	db	41
  2137  007CBB  20                 	db	32
  2138  007CBC  00                 	db	0
  2139  007CBD                     STR_162:
  2140  007CBD  6D                 	db	109	;'m'
  2141  007CBE  61                 	db	97	;'a'
  2142  007CBF  63                 	db	99	;'c'
  2143  007CC0  20                 	db	32
  2144  007CC1  73                 	db	115	;'s'
  2145  007CC2  65                 	db	101	;'e'
  2146  007CC3  74                 	db	116	;'t'
  2147  007CC4  20                 	db	32
  2148  007CC5  61                 	db	97	;'a'
  2149  007CC6  64                 	db	100	;'d'
  2150  007CC7  72                 	db	114	;'r'
  2151  007CC8  20                 	db	32
  2152  007CC9  6F                 	db	111	;'o'
  2153  007CCA  66                 	db	102	;'f'
  2154  007CCB  66                 	db	102	;'f'
  2155  007CCC  00                 	db	0
  2156  007CCD                     STR_97:
  2157  007CCD  4E                 	db	78	;'N'
  2158  007CCE  6F                 	db	111	;'o'
  2159  007CCF  20                 	db	32
  2160  007CD0  46                 	db	70	;'F'
  2161  007CD1  72                 	db	114	;'r'
  2162  007CD2  65                 	db	101	;'e'
  2163  007CD3  65                 	db	101	;'e'
  2164  007CD4  20                 	db	32
  2165  007CD5  43                 	db	67	;'C'
  2166  007CD6  68                 	db	104	;'h'
  2167  007CD7  61                 	db	97	;'a'
  2168  007CD8  6E                 	db	110	;'n'
  2169  007CD9  6E                 	db	110	;'n'
  2170  007CDA  65                 	db	101	;'e'
  2171  007CDB  6C                 	db	108	;'l'
  2172  007CDC  00                 	db	0
  2173  007CDD                     STR_7:
  2174  007CDD  42                 	db	66	;'B'
  2175  007CDE  75                 	db	117	;'u'
  2176  007CDF  69                 	db	105	;'i'
  2177  007CE0  6C                 	db	108	;'l'
  2178  007CE1  64                 	db	100	;'d'
  2179  007CE2  20                 	db	32
  2180  007CE3  44                 	db	68	;'D'
  2181  007CE4  61                 	db	97	;'a'
  2182  007CE5  74                 	db	116	;'t'
  2183  007CE6  65                 	db	101	;'e'
  2184  007CE7  2F                 	db	47
  2185  007CE8  54                 	db	84	;'T'
  2186  007CE9  69                 	db	105	;'i'
  2187  007CEA  6D                 	db	109	;'m'
  2188  007CEB  65                 	db	101	;'e'
  2189  007CEC  00                 	db	0
  2190  007CED                     STR_111:
  2191  007CED  20                 	db	32
  2192  007CEE  20                 	db	32
  2193  007CEF  20                 	db	32
  2194  007CF0  20                 	db	32
  2195  007CF1  45                 	db	69	;'E'
  2196  007CF2  6E                 	db	110	;'n'
  2197  007CF3  61                 	db	97	;'a'
  2198  007CF4  62                 	db	98	;'b'
  2199  007CF5  6C                 	db	108	;'l'
  2200  007CF6  65                 	db	101	;'e'
  2201  007CF7  64                 	db	100	;'d'
  2202  007CF8  20                 	db	32
  2203  007CF9  20                 	db	32
  2204  007CFA  20                 	db	32
  2205  007CFB  00                 	db	0
  2206  007CFC                     STR_112:
  2207  007CFC  20                 	db	32
  2208  007CFD  20                 	db	32
  2209  007CFE  20                 	db	32
  2210  007CFF  20                 	db	32
  2211  007D00  44                 	db	68	;'D'
  2212  007D01  69                 	db	105	;'i'
  2213  007D02  73                 	db	115	;'s'
  2214  007D03  61                 	db	97	;'a'
  2215  007D04  62                 	db	98	;'b'
  2216  007D05  6C                 	db	108	;'l'
  2217  007D06  65                 	db	101	;'e'
  2218  007D07  64                 	db	100	;'d'
  2219  007D08  20                 	db	32
  2220  007D09  20                 	db	32
  2221  007D0A  00                 	db	0
  2222  007D0B                     STR_178:
  2223  007D0B  6D                 	db	109	;'m'
  2224  007D0C  61                 	db	97	;'a'
  2225  007D0D  63                 	db	99	;'c'
  2226  007D0E  20                 	db	32
  2227  007D0F  73                 	db	115	;'s'
  2228  007D10  65                 	db	101	;'e'
  2229  007D11  74                 	db	116	;'t'
  2230  007D12  20                 	db	32
  2231  007D13  61                 	db	97	;'a'
  2232  007D14  64                 	db	100	;'d'
  2233  007D15  72                 	db	114	;'r'
  2234  007D16  20                 	db	32
  2235  007D17  6F                 	db	111	;'o'
  2236  007D18  6E                 	db	110	;'n'
  2237  007D19  00                 	db	0
  2238  007D1A                     STR_2:
  2239  007D1A  20                 	db	32
  2240  007D1B  20                 	db	32
  2241  007D1C  20                 	db	32
  2242  007D1D  4C                 	db	76	;'L'
  2243  007D1E  6F                 	db	111	;'o'
  2244  007D1F  52                 	db	82	;'R'
  2245  007D20  61                 	db	97	;'a'
  2246  007D21  20                 	db	32
  2247  007D22  44                 	db	68	;'D'
  2248  007D23  65                 	db	101	;'e'
  2249  007D24  6D                 	db	109	;'m'
  2250  007D25  6F                 	db	111	;'o'
  2251  007D26  20                 	db	32
  2252  007D27  20                 	db	32
  2253  007D28  00                 	db	0
  2254  007D29                     STR_3:
  2255  007D29  20                 	db	32
  2256  007D2A  56                 	db	86	;'V'
  2257  007D2B  20                 	db	32
  2258  007D2C  31                 	db	49	;'1'
  2259  007D2D  2E                 	db	46
  2260  007D2E  30                 	db	48	;'0'
  2261  007D2F  2E                 	db	46
  2262  007D30  31                 	db	49	;'1'
  2263  007D31  20                 	db	32
  2264  007D32  43                 	db	67	;'C'
  2265  007D33  6F                 	db	111	;'o'
  2266  007D34  64                 	db	100	;'d'
  2267  007D35  65                 	db	101	;'e'
  2268  007D36  20                 	db	32
  2269  007D37  00                 	db	0
  2270  007D38                     STR_1:
  2271  007D38  4D                 	db	77	;'M'
  2272  007D39  69                 	db	105	;'i'
  2273  007D3A  63                 	db	99	;'c'
  2274  007D3B  72                 	db	114	;'r'
  2275  007D3C  6F                 	db	111	;'o'
  2276  007D3D  63                 	db	99	;'c'
  2277  007D3E  68                 	db	104	;'h'
  2278  007D3F  69                 	db	105	;'i'
  2279  007D40  70                 	db	112	;'p'
  2280  007D41  20                 	db	32
  2281  007D42  4D                 	db	77	;'M'
  2282  007D43  6F                 	db	111	;'o'
  2283  007D44  74                 	db	116	;'t'
  2284  007D45  65                 	db	101	;'e'
  2285  007D46  00                 	db	0
  2286  007D47                     STR_74:
  2287  007D47  6D                 	db	109	;'m'
  2288  007D48  61                 	db	97	;'a'
  2289  007D49  63                 	db	99	;'c'
  2290  007D4A  20                 	db	32
  2291  007D4B  74                 	db	116	;'t'
  2292  007D4C  78                 	db	120	;'x'
  2293  007D4D  20                 	db	32
  2294  007D4E  75                 	db	117	;'u'
  2295  007D4F  6E                 	db	110	;'n'
  2296  007D50  63                 	db	99	;'c'
  2297  007D51  6E                 	db	110	;'n'
  2298  007D52  66                 	db	102	;'f'
  2299  007D53  20                 	db	32
  2300  007D54  00                 	db	0
  2301  007D55                     STR_43:
  2302  007D55  6D                 	db	109	;'m'
  2303  007D56  61                 	db	97	;'a'
  2304  007D57  63                 	db	99	;'c'
  2305  007D58  20                 	db	32
  2306  007D59  6A                 	db	106	;'j'
  2307  007D5A  6F                 	db	111	;'o'
  2308  007D5B  69                 	db	105	;'i'
  2309  007D5C  6E                 	db	110	;'n'
  2310  007D5D  20                 	db	32
  2311  007D5E  6F                 	db	111	;'o'
  2312  007D5F  74                 	db	116	;'t'
  2313  007D60  61                 	db	97	;'a'
  2314  007D61  61                 	db	97	;'a'
  2315  007D62  00                 	db	0
  2316  007D63                     STR_57:
  2317  007D63  69                 	db	105	;'i'
  2318  007D64  6E                 	db	110	;'n'
  2319  007D65  76                 	db	118	;'v'
  2320  007D66  61                 	db	97	;'a'
  2321  007D67  6C                 	db	108	;'l'
  2322  007D68  69                 	db	105	;'i'
  2323  007D69  64                 	db	100	;'d'
  2324  007D6A  5F                 	db	95	;'_'
  2325  007D6B  70                 	db	112	;'p'
  2326  007D6C  61                 	db	97	;'a'
  2327  007D6D  72                 	db	114	;'r'
  2328  007D6E  61                 	db	97	;'a'
  2329  007D6F  6D                 	db	109	;'m'
  2330  007D70  00                 	db	0
  2331  007D71                     STR_45:
  2332  007D71  6B                 	db	107	;'k'
  2333  007D72  65                 	db	101	;'e'
  2334  007D73  79                 	db	121	;'y'
  2335  007D74  73                 	db	115	;'s'
  2336  007D75  5F                 	db	95	;'_'
  2337  007D76  6E                 	db	110	;'n'
  2338  007D77  6F                 	db	111	;'o'
  2339  007D78  74                 	db	116	;'t'
  2340  007D79  5F                 	db	95	;'_'
  2341  007D7A  69                 	db	105	;'i'
  2342  007D7B  6E                 	db	110	;'n'
  2343  007D7C  69                 	db	105	;'i'
  2344  007D7D  74                 	db	116	;'t'
  2345  007D7E  00                 	db	0
  2346  007D7F                     STR_73:
  2347  007D7F  4C                 	db	76	;'L'
  2348  007D80  3A                 	db	58	;':'
  2349  007D81  20                 	db	32
  2350  007D82  20                 	db	32
  2351  007D83  20                 	db	32
  2352  007D84  20                 	db	32
  2353  007D85  20                 	db	32
  2354  007D86  20                 	db	32
  2355  007D87  20                 	db	32
  2356  007D88  54                 	db	84	;'T'
  2357  007D89  3A                 	db	58	;':'
  2358  007D8A  20                 	db	32
  2359  007D8B  00                 	db	0
  2360  007D8C                     STR_164:
  2361  007D8C  6D                 	db	109	;'m'
  2362  007D8D  61                 	db	97	;'a'
  2363  007D8E  63                 	db	99	;'c'
  2364  007D8F  20                 	db	32
  2365  007D90  73                 	db	115	;'s'
  2366  007D91  65                 	db	101	;'e'
  2367  007D92  74                 	db	116	;'t'
  2368  007D93  20                 	db	32
  2369  007D94  64                 	db	100	;'d'
  2370  007D95  72                 	db	114	;'r'
  2371  007D96  20                 	db	32
  2372  007D97  30                 	db	48	;'0'
  2373  007D98  00                 	db	0
  2374  007D99                     STR_166:
  2375  007D99  6D                 	db	109	;'m'
  2376  007D9A  61                 	db	97	;'a'
  2377  007D9B  63                 	db	99	;'c'
  2378  007D9C  20                 	db	32
  2379  007D9D  73                 	db	115	;'s'
  2380  007D9E  65                 	db	101	;'e'
  2381  007D9F  74                 	db	116	;'t'
  2382  007DA0  20                 	db	32
  2383  007DA1  64                 	db	100	;'d'
  2384  007DA2  72                 	db	114	;'r'
  2385  007DA3  20                 	db	32
  2386  007DA4  31                 	db	49	;'1'
  2387  007DA5  00                 	db	0
  2388  007DA6                     STR_168:
  2389  007DA6  6D                 	db	109	;'m'
  2390  007DA7  61                 	db	97	;'a'
  2391  007DA8  63                 	db	99	;'c'
  2392  007DA9  20                 	db	32
  2393  007DAA  73                 	db	115	;'s'
  2394  007DAB  65                 	db	101	;'e'
  2395  007DAC  74                 	db	116	;'t'
  2396  007DAD  20                 	db	32
  2397  007DAE  64                 	db	100	;'d'
  2398  007DAF  72                 	db	114	;'r'
  2399  007DB0  20                 	db	32
  2400  007DB1  32                 	db	50	;'2'
  2401  007DB2  00                 	db	0
  2402  007DB3                     STR_170:
  2403  007DB3  6D                 	db	109	;'m'
  2404  007DB4  61                 	db	97	;'a'
  2405  007DB5  63                 	db	99	;'c'
  2406  007DB6  20                 	db	32
  2407  007DB7  73                 	db	115	;'s'
  2408  007DB8  65                 	db	101	;'e'
  2409  007DB9  74                 	db	116	;'t'
  2410  007DBA  20                 	db	32
  2411  007DBB  64                 	db	100	;'d'
  2412  007DBC  72                 	db	114	;'r'
  2413  007DBD  20                 	db	32
  2414  007DBE  33                 	db	51	;'3'
  2415  007DBF  00                 	db	0
  2416  007DC0                     STR_172:
  2417  007DC0  6D                 	db	109	;'m'
  2418  007DC1  61                 	db	97	;'a'
  2419  007DC2  63                 	db	99	;'c'
  2420  007DC3  20                 	db	32
  2421  007DC4  73                 	db	115	;'s'
  2422  007DC5  65                 	db	101	;'e'
  2423  007DC6  74                 	db	116	;'t'
  2424  007DC7  20                 	db	32
  2425  007DC8  64                 	db	100	;'d'
  2426  007DC9  72                 	db	114	;'r'
  2427  007DCA  20                 	db	32
  2428  007DCB  34                 	db	52	;'4'
  2429  007DCC  00                 	db	0
  2430  007DCD                     STR_174:
  2431  007DCD  6D                 	db	109	;'m'
  2432  007DCE  61                 	db	97	;'a'
  2433  007DCF  63                 	db	99	;'c'
  2434  007DD0  20                 	db	32
  2435  007DD1  73                 	db	115	;'s'
  2436  007DD2  65                 	db	101	;'e'
  2437  007DD3  74                 	db	116	;'t'
  2438  007DD4  20                 	db	32
  2439  007DD5  64                 	db	100	;'d'
  2440  007DD6  72                 	db	114	;'r'
  2441  007DD7  20                 	db	32
  2442  007DD8  35                 	db	53	;'5'
  2443  007DD9  00                 	db	0
  2444  007DDA                     STR_176:
  2445  007DDA  6D                 	db	109	;'m'
  2446  007DDB  61                 	db	97	;'a'
  2447  007DDC  63                 	db	99	;'c'
  2448  007DDD  20                 	db	32
  2449  007DDE  73                 	db	115	;'s'
  2450  007DDF  65                 	db	101	;'e'
  2451  007DE0  74                 	db	116	;'t'
  2452  007DE1  20                 	db	32
  2453  007DE2  64                 	db	100	;'d'
  2454  007DE3  72                 	db	114	;'r'
  2455  007DE4  20                 	db	32
  2456  007DE5  36                 	db	54	;'6'
  2457  007DE6  00                 	db	0
  2458  007DE7                     STR_177:
  2459  007DE7  6D                 	db	109	;'m'
  2460  007DE8  61                 	db	97	;'a'
  2461  007DE9  63                 	db	99	;'c'
  2462  007DEA  20                 	db	32
  2463  007DEB  73                 	db	115	;'s'
  2464  007DEC  65                 	db	101	;'e'
  2465  007DED  74                 	db	116	;'t'
  2466  007DEE  20                 	db	32
  2467  007DEF  64                 	db	100	;'d'
  2468  007DF0  72                 	db	114	;'r'
  2469  007DF1  20                 	db	32
  2470  007DF2  37                 	db	55	;'7'
  2471  007DF3  00                 	db	0
  2472  007DF4                     STR_41:
  2473  007DF4  6D                 	db	109	;'m'
  2474  007DF5  61                 	db	97	;'a'
  2475  007DF6  63                 	db	99	;'c'
  2476  007DF7  20                 	db	32
  2477  007DF8  6A                 	db	106	;'j'
  2478  007DF9  6F                 	db	111	;'o'
  2479  007DFA  69                 	db	105	;'i'
  2480  007DFB  6E                 	db	110	;'n'
  2481  007DFC  20                 	db	32
  2482  007DFD  61                 	db	97	;'a'
  2483  007DFE  62                 	db	98	;'b'
  2484  007DFF  70                 	db	112	;'p'
  2485  007E00  00                 	db	0
  2486  007E01                     STR_10:
  2487  007E01  42                 	db	66	;'B'
  2488  007E02  75                 	db	117	;'u'
  2489  007E03  74                 	db	116	;'t'
  2490  007E04  74                 	db	116	;'t'
  2491  007E05  6F                 	db	111	;'o'
  2492  007E06  6E                 	db	110	;'n'
  2493  007E07  20                 	db	32
  2494  007E08  54                 	db	84	;'T'
  2495  007E09  65                 	db	101	;'e'
  2496  007E0A  73                 	db	115	;'s'
  2497  007E0B  74                 	db	116	;'t'
  2498  007E0C  3A                 	db	58	;':'
  2499  007E0D  00                 	db	0
  2500  007E0E                     STR_13:
  2501  007E0E  42                 	db	66	;'B'
  2502  007E0F  75                 	db	117	;'u'
  2503  007E10  74                 	db	116	;'t'
  2504  007E11  74                 	db	116	;'t'
  2505  007E12  6F                 	db	111	;'o'
  2506  007E13  6E                 	db	110	;'n'
  2507  007E14  31                 	db	49	;'1'
  2508  007E15  20                 	db	32
  2509  007E16  50                 	db	80	;'P'
  2510  007E17  41                 	db	65	;'A'
  2511  007E18  53                 	db	83	;'S'
  2512  007E19  53                 	db	83	;'S'
  2513  007E1A  00                 	db	0
  2514  007E1B                     STR_14:
  2515  007E1B  42                 	db	66	;'B'
  2516  007E1C  75                 	db	117	;'u'
  2517  007E1D  74                 	db	116	;'t'
  2518  007E1E  74                 	db	116	;'t'
  2519  007E1F  6F                 	db	111	;'o'
  2520  007E20  6E                 	db	110	;'n'
  2521  007E21  32                 	db	50	;'2'
  2522  007E22  20                 	db	32
  2523  007E23  50                 	db	80	;'P'
  2524  007E24  41                 	db	65	;'A'
  2525  007E25  53                 	db	83	;'S'
  2526  007E26  53                 	db	83	;'S'
  2527  007E27  00                 	db	0
  2528  007E28                     STR_12:
  2529  007E28  50                 	db	80	;'P'
  2530  007E29  72                 	db	114	;'r'
  2531  007E2A  65                 	db	101	;'e'
  2532  007E2B  73                 	db	115	;'s'
  2533  007E2C  73                 	db	115	;'s'
  2534  007E2D  20                 	db	32
  2535  007E2E  42                 	db	66	;'B'
  2536  007E2F  75                 	db	117	;'u'
  2537  007E30  74                 	db	116	;'t'
  2538  007E31  74                 	db	116	;'t'
  2539  007E32  6F                 	db	111	;'o'
  2540  007E33  6E                 	db	110	;'n'
  2541  007E34  00                 	db	0
  2542  007E35                     STR_195:
  2543  007E35  55                 	db	85	;'U'
  2544  007E36  53                 	db	83	;'S'
  2545  007E37  42                 	db	66	;'B'
  2546  007E38  20                 	db	32
  2547  007E39  48                 	db	72	;'H'
  2548  007E3A  61                 	db	97	;'a'
  2549  007E3B  6E                 	db	110	;'n'
  2550  007E3C  64                 	db	100	;'d'
  2551  007E3D  6C                 	db	108	;'l'
  2552  007E3E  65                 	db	101	;'e'
  2553  007E3F  72                 	db	114	;'r'
  2554  007E40  00                 	db	0
  2555  007E41                     STR_72:
  2556  007E41  4F                 	db	79	;'O'
  2557  007E42  6E                 	db	110	;'n'
  2558  007E43  20                 	db	32
  2559  007E44  50                 	db	80	;'P'
  2560  007E45  6F                 	db	111	;'o'
  2561  007E46  72                 	db	114	;'r'
  2562  007E47  74                 	db	116	;'t'
  2563  007E48  20                 	db	32
  2564  007E49  23                 	db	35
  2565  007E4A  3A                 	db	58	;':'
  2566  007E4B  20                 	db	32
  2567  007E4C  00                 	db	0
  2568  007E4D                     STR_86:
  2569  007E4D  54                 	db	84	;'T'
  2570  007E4E  78                 	db	120	;'x'
  2571  007E4F  20                 	db	32
  2572  007E50  50                 	db	80	;'P'
  2573  007E51  6F                 	db	111	;'o'
  2574  007E52  72                 	db	114	;'r'
  2575  007E53  74                 	db	116	;'t'
  2576  007E54  20                 	db	32
  2577  007E55  23                 	db	35
  2578  007E56  3A                 	db	58	;':'
  2579  007E57  20                 	db	32
  2580  007E58  00                 	db	0
  2581  007E59                     STR_85:
  2582  007E59  53                 	db	83	;'S'
  2583  007E5A  65                 	db	101	;'e'
  2584  007E5B  6E                 	db	110	;'n'
  2585  007E5C  74                 	db	116	;'t'
  2586  007E5D  20                 	db	32
  2587  007E5E  44                 	db	68	;'D'
  2588  007E5F  61                 	db	97	;'a'
  2589  007E60  74                 	db	116	;'t'
  2590  007E61  61                 	db	97	;'a'
  2591  007E62  3A                 	db	58	;':'
  2592  007E63  20                 	db	32
  2593  007E64  00                 	db	0
  2594  007E65                     STR_135:
  2595  007E65  44                 	db	68	;'D'
  2596  007E66  61                 	db	97	;'a'
  2597  007E67  74                 	db	116	;'t'
  2598  007E68  61                 	db	97	;'a'
  2599  007E69  20                 	db	32
  2600  007E6A  52                 	db	82	;'R'
  2601  007E6B  61                 	db	97	;'a'
  2602  007E6C  74                 	db	116	;'t'
  2603  007E6D  65                 	db	101	;'e'
  2604  007E6E  3A                 	db	58	;':'
  2605  007E6F  20                 	db	32
  2606  007E70  00                 	db	0
  2607  007E71                     STR_8:
  2608  007E71  46                 	db	70	;'F'
  2609  007E72  65                 	db	101	;'e'
  2610  007E73  62                 	db	98	;'b'
  2611  007E74  20                 	db	32
  2612  007E75  32                 	db	50	;'2'
  2613  007E76  36                 	db	54	;'6'
  2614  007E77  20                 	db	32
  2615  007E78  32                 	db	50	;'2'
  2616  007E79  30                 	db	48	;'0'
  2617  007E7A  31                 	db	49	;'1'
  2618  007E7B  37                 	db	55	;'7'
  2619  007E7C  00                 	db	0
  2620  007E7D                     STR_11:
  2621  007E7D  42                 	db	66	;'B'
  2622  007E7E  75                 	db	117	;'u'
  2623  007E7F  74                 	db	116	;'t'
  2624  007E80  74                 	db	116	;'t'
  2625  007E81  6F                 	db	111	;'o'
  2626  007E82  6E                 	db	110	;'n'
  2627  007E83  20                 	db	32
  2628  007E84  46                 	db	70	;'F'
  2629  007E85  41                 	db	65	;'A'
  2630  007E86  49                 	db	73	;'I'
  2631  007E87  4C                 	db	76	;'L'
  2632  007E88  00                 	db	0
  2633  007E89                     STR_61:
  2634  007E89  4F                 	db	79	;'O'
  2635  007E8A  54                 	db	84	;'T'
  2636  007E8B  41                 	db	65	;'A'
  2637  007E8C  41                 	db	65	;'A'
  2638  007E8D  20                 	db	32
  2639  007E8E  4A                 	db	74	;'J'
  2640  007E8F  6F                 	db	111	;'o'
  2641  007E90  69                 	db	105	;'i'
  2642  007E91  6E                 	db	110	;'n'
  2643  007E92  20                 	db	32
  2644  007E93  00                 	db	0
  2645  007E94                     STR_59:
  2646  007E94  6E                 	db	110	;'n'
  2647  007E95  6F                 	db	111	;'o'
  2648  007E96  5F                 	db	95	;'_'
  2649  007E97  66                 	db	102	;'f'
  2650  007E98  72                 	db	114	;'r'
  2651  007E99  65                 	db	101	;'e'
  2652  007E9A  65                 	db	101	;'e'
  2653  007E9B  5F                 	db	95	;'_'
  2654  007E9C  63                 	db	99	;'c'
  2655  007E9D  68                 	db	104	;'h'
  2656  007E9E  00                 	db	0
  2657  007E9F                     STR_51:
  2658  007E9F  53                 	db	83	;'S'
  2659  007EA0  75                 	db	117	;'u'
  2660  007EA1  63                 	db	99	;'c'
  2661  007EA2  63                 	db	99	;'c'
  2662  007EA3  65                 	db	101	;'e'
  2663  007EA4  73                 	db	115	;'s'
  2664  007EA5  73                 	db	115	;'s'
  2665  007EA6  66                 	db	102	;'f'
  2666  007EA7  75                 	db	117	;'u'
  2667  007EA8  6C                 	db	108	;'l'
  2668  007EA9  00                 	db	0
  2669  007EAA                     STR_68:
  2670  007EAA  6D                 	db	109	;'m'
  2671  007EAB  61                 	db	97	;'a'
  2672  007EAC  63                 	db	99	;'c'
  2673  007EAD  20                 	db	32
  2674  007EAE  67                 	db	103	;'g'
  2675  007EAF  65                 	db	101	;'e'
  2676  007EB0  74                 	db	116	;'t'
  2677  007EB1  20                 	db	32
  2678  007EB2  64                 	db	100	;'d'
  2679  007EB3  72                 	db	114	;'r'
  2680  007EB4  00                 	db	0
  2681  007EB5                     STR_46:
  2682  007EB5  56                 	db	86	;'V'
  2683  007EB6  61                 	db	97	;'a'
  2684  007EB7  6C                 	db	108	;'l'
  2685  007EB8  69                 	db	105	;'i'
  2686  007EB9  64                 	db	100	;'d'
  2687  007EBA  20                 	db	32
  2688  007EBB  4B                 	db	75	;'K'
  2689  007EBC  65                 	db	101	;'e'
  2690  007EBD  79                 	db	121	;'y'
  2691  007EBE  73                 	db	115	;'s'
  2692  007EBF  00                 	db	0
  2693  007EC0                     STR_15:
  2694  007EC0  43                 	db	67	;'C'
  2695  007EC1  6F                 	db	111	;'o'
  2696  007EC2  6D                 	db	109	;'m'
  2697  007EC3  6D                 	db	109	;'m'
  2698  007EC4  20                 	db	32
  2699  007EC5  54                 	db	84	;'T'
  2700  007EC6  65                 	db	101	;'e'
  2701  007EC7  73                 	db	115	;'s'
  2702  007EC8  74                 	db	116	;'t'
  2703  007EC9  3A                 	db	58	;':'
  2704  007ECA  00                 	db	0
  2705  007ECB                     STR_105:
  2706  007ECB  52                 	db	82	;'R'
  2707  007ECC  78                 	db	120	;'x'
  2708  007ECD  20                 	db	32
  2709  007ECE  50                 	db	80	;'P'
  2710  007ECF  6F                 	db	111	;'o'
  2711  007ED0  72                 	db	114	;'r'
  2712  007ED1  74                 	db	116	;'t'
  2713  007ED2  23                 	db	35
  2714  007ED3  20                 	db	32
  2715  007ED4  00                 	db	0
  2716  007ED5                     STR_50:
  2717  007ED5  41                 	db	65	;'A'
  2718  007ED6  42                 	db	66	;'B'
  2719  007ED7  50                 	db	80	;'P'
  2720  007ED8  20                 	db	32
  2721  007ED9  4A                 	db	74	;'J'
  2722  007EDA  6F                 	db	111	;'o'
  2723  007EDB  69                 	db	105	;'i'
  2724  007EDC  6E                 	db	110	;'n'
  2725  007EDD  20                 	db	32
  2726  007EDE  00                 	db	0
  2727  007EDF                     STR_24:
  2728  007EDF  4D                 	db	77	;'M'
  2729  007EE0  4F                 	db	79	;'O'
  2730  007EE1  54                 	db	84	;'T'
  2731  007EE2  45                 	db	69	;'E'
  2732  007EE3  20                 	db	32
  2733  007EE4  4D                 	db	77	;'M'
  2734  007EE5  6F                 	db	111	;'o'
  2735  007EE6  64                 	db	100	;'d'
  2736  007EE7  65                 	db	101	;'e'
  2737  007EE8  00                 	db	0
  2738  007EE9                     STR_64:
  2739  007EE9  4F                 	db	79	;'O'
  2740  007EEA  54                 	db	84	;'T'
  2741  007EEB  41                 	db	65	;'A'
  2742  007EEC  41                 	db	65	;'A'
  2743  007EED  20                 	db	32
  2744  007EEE  4A                 	db	74	;'J'
  2745  007EEF  6F                 	db	111	;'o'
  2746  007EF0  69                 	db	105	;'i'
  2747  007EF1  6E                 	db	110	;'n'
  2748  007EF2  00                 	db	0
  2749  007EF3                     STR_52:
  2750  007EF3  6D                 	db	109	;'m'
  2751  007EF4  61                 	db	97	;'a'
  2752  007EF5  63                 	db	99	;'c'
  2753  007EF6  20                 	db	32
  2754  007EF7  72                 	db	114	;'r'
  2755  007EF8  65                 	db	101	;'e'
  2756  007EF9  73                 	db	115	;'s'
  2757  007EFA  65                 	db	101	;'e'
  2758  007EFB  74                 	db	116	;'t'
  2759  007EFC  00                 	db	0
  2760  007EFD                     STR_30:
  2761  007EFD  73                 	db	115	;'s'
  2762  007EFE  79                 	db	121	;'y'
  2763  007EFF  73                 	db	115	;'s'
  2764  007F00  20                 	db	32
  2765  007F01  72                 	db	114	;'r'
  2766  007F02  65                 	db	101	;'e'
  2767  007F03  73                 	db	115	;'s'
  2768  007F04  65                 	db	101	;'e'
  2769  007F05  74                 	db	116	;'t'
  2770  007F06  00                 	db	0
  2771  007F07                     STR_16:
  2772  007F07  4C                 	db	76	;'L'
  2773  007F08  45                 	db	69	;'E'
  2774  007F09  44                 	db	68	;'D'
  2775  007F0A  20                 	db	32
  2776  007F0B  54                 	db	84	;'T'
  2777  007F0C  65                 	db	101	;'e'
  2778  007F0D  73                 	db	115	;'s'
  2779  007F0E  74                 	db	116	;'t'
  2780  007F0F  3A                 	db	58	;':'
  2781  007F10  00                 	db	0
  2782  007F11                     STR_193:
  2783  007F11  43                 	db	67	;'C'
  2784  007F12  44                 	db	68	;'D'
  2785  007F13  43                 	db	67	;'C'
  2786  007F14  20                 	db	32
  2787  007F15  4D                 	db	77	;'M'
  2788  007F16  6F                 	db	111	;'o'
  2789  007F17  64                 	db	100	;'d'
  2790  007F18  65                 	db	101	;'e'
  2791  007F19  00                 	db	0
  2792  007F1A                     STR_47:
  2793  007F1A  52                 	db	82	;'R'
  2794  007F1B  65                 	db	101	;'e'
  2795  007F1C  71                 	db	113	;'q'
  2796  007F1D  75                 	db	117	;'u'
  2797  007F1E  69                 	db	105	;'i'
  2798  007F1F  72                 	db	114	;'r'
  2799  007F20  65                 	db	101	;'e'
  2800  007F21  64                 	db	100	;'d'
  2801  007F22  00                 	db	0
  2802  007F23                     STR_49:
  2803  007F23  61                 	db	97	;'a'
  2804  007F24  63                 	db	99	;'c'
  2805  007F25  63                 	db	99	;'c'
  2806  007F26  65                 	db	101	;'e'
  2807  007F27  70                 	db	112	;'p'
  2808  007F28  74                 	db	116	;'t'
  2809  007F29  65                 	db	101	;'e'
  2810  007F2A  64                 	db	100	;'d'
  2811  007F2B  00                 	db	0
  2812  007F2C                     STR_179:
  2813  007F2C  6D                 	db	109	;'m'
  2814  007F2D  61                 	db	97	;'a'
  2815  007F2E  63                 	db	99	;'c'
  2816  007F2F  20                 	db	32
  2817  007F30  73                 	db	115	;'s'
  2818  007F31  61                 	db	97	;'a'
  2819  007F32  76                 	db	118	;'v'
  2820  007F33  65                 	db	101	;'e'
  2821  007F34  00                 	db	0
  2822  007F35                     STR_25:
  2823  007F35  53                 	db	83	;'S'
  2824  007F36  74                 	db	116	;'t'
  2825  007F37  61                 	db	97	;'a'
  2826  007F38  72                 	db	114	;'r'
  2827  007F39  74                 	db	116	;'t'
  2828  007F3A  69                 	db	105	;'i'
  2829  007F3B  6E                 	db	110	;'n'
  2830  007F3C  67                 	db	103	;'g'
  2831  007F3D  00                 	db	0
  2832  007F3E                     STR_4:
  2833  007F3E  4D                 	db	77	;'M'
  2834  007F3F  6F                 	db	111	;'o'
  2835  007F40  54                 	db	84	;'T'
  2836  007F41  65                 	db	101	;'e'
  2837  007F42  20                 	db	32
  2838  007F43  76                 	db	118	;'v'
  2839  007F44  20                 	db	32
  2840  007F45  2E                 	db	46
  2841  007F46  00                 	db	0
  2842  007F47                     STR_9:
  2843  007F47  31                 	db	49	;'1'
  2844  007F48  38                 	db	56	;'8'
  2845  007F49  3A                 	db	58	;':'
  2846  007F4A  30                 	db	48	;'0'
  2847  007F4B  33                 	db	51	;'3'
  2848  007F4C  3A                 	db	58	;':'
  2849  007F4D  31                 	db	49	;'1'
  2850  007F4E  35                 	db	53	;'5'
  2851  007F4F  00                 	db	0
  2852  007F50  52                 	db	82	;'R'
  2853  007F51  46                 	db	70	;'F'
  2854  007F52  20                 	db	32
  2855  007F53  54                 	db	84	;'T'
  2856  007F54  65                 	db	101	;'e'
  2857  007F55  73                 	db	115	;'s'
  2858  007F56  74                 	db	116	;'t'
  2859  007F57  3A                 	db	58	;':'
  2860  007F58  00                 	db	0
  2861  007F59                     STR_17:
  2862  007F59  41                 	db	65	;'A'
  2863  007F5A  44                 	db	68	;'D'
  2864  007F5B  43                 	db	67	;'C'
  2865  007F5C  20                 	db	32
  2866  007F5D  54                 	db	84	;'T'
  2867  007F5E  65                 	db	101	;'e'
  2868  007F5F  73                 	db	115	;'s'
  2869  007F60  74                 	db	116	;'t'
  2870  007F61  00                 	db	0
  2871  007F62                     STR_194:
  2872  007F62  43                 	db	67	;'C'
  2873  007F63  6F                 	db	111	;'o'
  2874  007F64  6D                 	db	109	;'m'
  2875  007F65  6D                 	db	109	;'m'
  2876  007F66  61                 	db	97	;'a'
  2877  007F67  6E                 	db	110	;'n'
  2878  007F68  64                 	db	100	;'d'
  2879  007F69  00                 	db	0
  2880  007F6A                     STR_18:
  2881  007F6A  54                 	db	84	;'T'
  2882  007F6B  65                 	db	101	;'e'
  2883  007F6C  6D                 	db	109	;'m'
  2884  007F6D  70                 	db	112	;'p'
  2885  007F6E  20                 	db	32
  2886  007F6F  20                 	db	32
  2887  007F70  3D                 	db	61	;'='
  2888  007F71  00                 	db	0
  2889  007F72                     STR_19:
  2890  007F72  4C                 	db	76	;'L'
  2891  007F73  69                 	db	105	;'i'
  2892  007F74  67                 	db	103	;'g'
  2893  007F75  68                 	db	104	;'h'
  2894  007F76  74                 	db	116	;'t'
  2895  007F77  20                 	db	32
  2896  007F78  3D                 	db	61	;'='
  2897  007F79  00                 	db	0
  2898  007F7A                     STR_116:
  2899  007F7A  54                 	db	84	;'T'
  2900  007F7B  65                 	db	101	;'e'
  2901  007F7C  6D                 	db	109	;'m'
  2902  007F7D  70                 	db	112	;'p'
  2903  007F7E  20                 	db	32
  2904  007F7F  3A                 	db	58	;':'
  2905  007F80  00                 	db	0
  2906  007F81                     STR_115:
  2907  007F81  4C                 	db	76	;'L'
  2908  007F82  69                 	db	105	;'i'
  2909  007F83  67                 	db	103	;'g'
  2910  007F84  68                 	db	104	;'h'
  2911  007F85  74                 	db	116	;'t'
  2912  007F86  3A                 	db	58	;':'
  2913  007F87  00                 	db	0
  2914  007F88                     STR_120:
  2915  007F88  45                 	db	69	;'E'
  2916  007F89  76                 	db	118	;'v'
  2917  007F8A  65                 	db	101	;'e'
  2918  007F8B  72                 	db	114	;'r'
  2919  007F8C  79                 	db	121	;'y'
  2920  007F8D  3A                 	db	58	;':'
  2921  007F8E  00                 	db	0
  2922  007F8F                     STR_65:
  2923  007F8F  44                 	db	68	;'D'
  2924  007F90  65                 	db	101	;'e'
  2925  007F91  6E                 	db	110	;'n'
  2926  007F92  69                 	db	105	;'i'
  2927  007F93  65                 	db	101	;'e'
  2928  007F94  64                 	db	100	;'d'
  2929  007F95  00                 	db	0
  2930  007F96                     STR_63:
  2931  007F96  64                 	db	100	;'d'
  2932  007F97  65                 	db	101	;'e'
  2933  007F98  6E                 	db	110	;'n'
  2934  007F99  69                 	db	105	;'i'
  2935  007F9A  65                 	db	101	;'e'
  2936  007F9B  64                 	db	100	;'d'
  2937  007F9C  00                 	db	0
  2938  007F9D                     STR_96:
  2939  007F9D  6E                 	db	110	;'n'
  2940  007F9E  6F                 	db	111	;'o'
  2941  007F9F  5F                 	db	95	;'_'
  2942  007FA0  66                 	db	102	;'f'
  2943  007FA1  72                 	db	114	;'r'
  2944  007FA2  65                 	db	101	;'e'
  2945  007FA3  00                 	db	0
  2946  007FA4                     STR_94:
  2947  007FA4  6D                 	db	109	;'m'
  2948  007FA5  61                 	db	97	;'a'
  2949  007FA6  63                 	db	99	;'c'
  2950  007FA7  5F                 	db	95	;'_'
  2951  007FA8  65                 	db	101	;'e'
  2952  007FA9  72                 	db	114	;'r'
  2953  007FAA  00                 	db	0
  2954  007FAB                     STR_89:
  2955  007FAB  6D                 	db	109	;'m'
  2956  007FAC  61                 	db	97	;'a'
  2957  007FAD  63                 	db	99	;'c'
  2958  007FAE  5F                 	db	95	;'_'
  2959  007FAF  72                 	db	114	;'r'
  2960  007FB0  78                 	db	120	;'x'
  2961  007FB1  00                 	db	0
  2962  007FB2                     STR_92:
  2963  007FB2  6D                 	db	109	;'m'
  2964  007FB3  61                 	db	97	;'a'
  2965  007FB4  63                 	db	99	;'c'
  2966  007FB5  5F                 	db	95	;'_'
  2967  007FB6  74                 	db	116	;'t'
  2968  007FB7  78                 	db	120	;'x'
  2969  007FB8  00                 	db	0
  2970  007FB9                     STR_31:
  2971  007FB9  52                 	db	82	;'R'
  2972  007FBA  4E                 	db	78	;'N'
  2973  007FBB  32                 	db	50	;'2'
  2974  007FBC  34                 	db	52	;'4'
  2975  007FBD  00                 	db	0
  2976  007FBE                     STR_35:
  2977  007FBE  52                 	db	82	;'R'
  2978  007FBF  4E                 	db	78	;'N'
  2979  007FC0  32                 	db	50	;'2'
  2980  007FC1  39                 	db	57	;'9'
  2981  007FC2  00                 	db	0
  2982  007FC3                     STR_121:
  2983  007FC3  4D                 	db	77	;'M'
  2984  007FC4  69                 	db	105	;'i'
  2985  007FC5  6E                 	db	110	;'n'
  2986  007FC6  73                 	db	115	;'s'
  2987  007FC7  00                 	db	0
  2988  007FC8                     STR_137:
  2989  007FC8  20                 	db	32
  2990  007FC9  30                 	db	48	;'0'
  2991  007FCA  20                 	db	32
  2992  007FCB  00                 	db	0
  2993  007FCC                     STR_138:
  2994  007FCC  20                 	db	32
  2995  007FCD  31                 	db	49	;'1'
  2996  007FCE  20                 	db	32
  2997  007FCF  00                 	db	0
  2998  007FD0                     STR_139:
  2999  007FD0  20                 	db	32
  3000  007FD1  32                 	db	50	;'2'
  3001  007FD2  20                 	db	32
  3002  007FD3  00                 	db	0
  3003  007FD4                     STR_140:
  3004  007FD4  20                 	db	32
  3005  007FD5  33                 	db	51	;'3'
  3006  007FD6  20                 	db	32
  3007  007FD7  00                 	db	0
  3008  007FD8                     STR_141:
  3009  007FD8  20                 	db	32
  3010  007FD9  34                 	db	52	;'4'
  3011  007FDA  20                 	db	32
  3012  007FDB  00                 	db	0
  3013  007FDC                     STR_142:
  3014  007FDC  20                 	db	32
  3015  007FDD  35                 	db	53	;'5'
  3016  007FDE  20                 	db	32
  3017  007FDF  00                 	db	0
  3018  007FE0                     STR_145:
  3019  007FE0  20                 	db	32
  3020  007FE1  31                 	db	49	;'1'
  3021  007FE2  30                 	db	48	;'0'
  3022  007FE3  00                 	db	0
  3023  007FE4                     STR_147:
  3024  007FE4  20                 	db	32
  3025  007FE5  33                 	db	51	;'3'
  3026  007FE6  30                 	db	48	;'0'
  3027  007FE7  00                 	db	0
  3028  007FE8                     STR_148:
  3029  007FE8  20                 	db	32
  3030  007FE9  36                 	db	54	;'6'
  3031  007FEA  30                 	db	48	;'0'
  3032  007FEB  00                 	db	0
  3033  007FEC                     STR_146:
  3034  007FEC  20                 	db	32
  3035  007FED  31                 	db	49	;'1'
  3036  007FEE  35                 	db	53	;'5'
  3037  007FEF  00                 	db	0
  3038  007FF0                     STR_127:
  3039  007FF0  4F                 	db	79	;'O'
  3040  007FF1  46                 	db	70	;'F'
  3041  007FF2  46                 	db	70	;'F'
  3042  007FF3  00                 	db	0
  3043  007FF4                     STR_143:
  3044  007FF4  41                 	db	65	;'A'
  3045  007FF5  44                 	db	68	;'D'
  3046  007FF6  52                 	db	82	;'R'
  3047  007FF7  00                 	db	0
  3048  007FF8                     STR_44:
  3049  007FF8  6F                 	db	111	;'o'
  3050  007FF9  6B                 	db	107	;'k'
  3051  007FFA  00                 	db	0
  3052  007FFB                     STR_117:
  3053  007FFB  43                 	db	67	;'C'
  3054  007FFC  00                 	db	0
  3055  007FFD                     STR_21:
  3056  007FFD  7A                 	db	122	;'z'
  3057  007FFE  00                 	db	0
  3058  0000                     
  3059                           ; #config settings
  3060  007FFF  00                 	db	0	; dummy byte at the end
  3061  0000                     
  3062                           	psect	cinit
  3063  005C2C                     __pcinit:
  3064                           	opt stack 0
  3065  005C2C                     start_initialization:
  3066                           	opt stack 0
  3067  005C2C                     __initialization:
  3068                           	opt stack 0
  3069                           
  3070                           ; Clear objects allocated to BANK2 (192 bytes)
  3071  005C2C  EE02  F000         	lfsr	0,__pbssBANK2
  3072  005C30  0EC0               	movlw	192
  3073  005C32                     clear_0:
  3074  005C32  6AEE               	clrf	postinc0,c
  3075  005C34  06E8               	decf	wreg,f,c
  3076  005C36  E1FD               	bnz	clear_0
  3077                           
  3078                           ; Clear objects allocated to BANK1 (242 bytes)
  3079  005C38  EE01  F000         	lfsr	0,__pbssBANK1
  3080  005C3C  0EF2               	movlw	242
  3081  005C3E                     clear_1:
  3082  005C3E  6AEE               	clrf	postinc0,c
  3083  005C40  06E8               	decf	wreg,f,c
  3084  005C42  E1FD               	bnz	clear_1
  3085                           
  3086                           ; Clear objects allocated to BANK0 (60 bytes)
  3087  005C44  EE00  F0B9         	lfsr	0,__pbssBANK0
  3088  005C48  0E3C               	movlw	60
  3089  005C4A                     clear_2:
  3090  005C4A  6AEE               	clrf	postinc0,c
  3091  005C4C  06E8               	decf	wreg,f,c
  3092  005C4E  E1FD               	bnz	clear_2
  3093                           
  3094                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  3095  005C50  6A5A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  3096                           
  3097                           ; Clear objects allocated to COMRAM (44 bytes)
  3098  005C52  EE00  F02E         	lfsr	0,__pbssCOMRAM
  3099  005C56  0E2C               	movlw	44
  3100  005C58                     clear_3:
  3101  005C58  6AEE               	clrf	postinc0,c
  3102  005C5A  06E8               	decf	wreg,f,c
  3103  005C5C  E1FD               	bnz	clear_3
  3104                           
  3105                           ; Initialize objects allocated to BANK1 (2 bytes)
  3106                           ; load TBLPTR registers with __pidataBANK1
  3107  005C5E  0E78               	movlw	low __pidataBANK1
  3108  005C60  6EF6               	movwf	tblptrl,c
  3109  005C62  0E6B               	movlw	high __pidataBANK1
  3110  005C64  6EF7               	movwf	tblptrh,c
  3111  005C66  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  3112  005C68  6EF8               	movwf	tblptru,c
  3113  005C6A  0009               	tblrd		*+	;fetch initializer
  3114  005C6C  CFF5 F1F7          	movff	tablat,__pdataBANK1
  3115  005C70  0009               	tblrd		*+	;fetch initializer
  3116  005C72  CFF5 F1F8          	movff	tablat,__pdataBANK1+1
  3117                           
  3118                           ; Initialize objects allocated to BANK0 (9 bytes)
  3119                           ; load TBLPTR registers with __pidataBANK0
  3120  005C76  0E38               	movlw	low __pidataBANK0
  3121  005C78  6EF6               	movwf	tblptrl,c
  3122  005C7A  0E6B               	movlw	high __pidataBANK0
  3123  005C7C  6EF7               	movwf	tblptrh,c
  3124  005C7E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  3125  005C80  6EF8               	movwf	tblptru,c
  3126  005C82  EE00  F0F5         	lfsr	0,__pdataBANK0
  3127  005C86  EE10 F009          	lfsr	1,9
  3128  005C8A                     copy_data0:
  3129  005C8A  0009               	tblrd		*+
  3130  005C8C  CFF5 FFEE          	movff	tablat,postinc0
  3131  005C90  50E5               	movf	postdec1,w,c
  3132  005C92  50E1               	movf	fsr1l,w,c
  3133  005C94  E1FA               	bnz	copy_data0
  3134  005C96                     end_of_initialization:
  3135                           	opt stack 0
  3136  005C96                     __end_of__initialization:
  3137                           	opt stack 0
  3138  005C96  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3139  005C98  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3140  005C9A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  3141  005C9C  6EF8               	movwf	tblptru,c
  3142  005C9E  0100               	movlb	0
  3143  005CA0  EFD4  F01D         	goto	_main	;jump to C main() function
  3144                           tblptru	equ	0xFF8
  3145                           tblptrh	equ	0xFF7
  3146                           tblptrl	equ	0xFF6
  3147                           tablat	equ	0xFF5
  3148                           postinc0	equ	0xFEE
  3149                           wreg	equ	0xFE8
  3150                           postdec1	equ	0xFE5
  3151                           fsr1l	equ	0xFE1
  3152                           
  3153                           	psect	bitbssCOMRAM
  3154  0002D0                     __pbitbssCOMRAM:
  3155                           	opt stack 0
  3156  0002D0                     _log:
  3157                           	opt stack 0
  3158  0002D0                     	ds	1
  3159                           tblptru	equ	0xFF8
  3160                           tblptrh	equ	0xFF7
  3161                           tblptrl	equ	0xFF6
  3162                           tablat	equ	0xFF5
  3163                           postinc0	equ	0xFEE
  3164                           wreg	equ	0xFE8
  3165                           postdec1	equ	0xFE5
  3166                           fsr1l	equ	0xFE1
  3167                           
  3168                           	psect	bssCOMRAM
  3169  00002E                     __pbssCOMRAM:
  3170                           	opt stack 0
  3171  00002E                     _outPipes:
  3172                           	opt stack 0
  3173  00002E                     	ds	8
  3174  000036                     _inPipes:
  3175                           	opt stack 0
  3176  000036                     	ds	6
  3177  00003C                     _pBDTEntryIn:
  3178                           	opt stack 0
  3179  00003C                     	ds	6
  3180  000042                     USBapp_LEDUpdateStatus@ledCount:
  3181                           	opt stack 0
  3182  000042                     	ds	2
  3183  000044                     _pBDTEntryEP0OutCurrent:
  3184                           	opt stack 0
  3185  000044                     	ds	2
  3186  000046                     _pBDTEntryEP0OutNext:
  3187                           	opt stack 0
  3188  000046                     	ds	2
  3189  000048                     _timer1ReloadVal:
  3190                           	opt stack 0
  3191  000048                     	ds	2
  3192  00004A                     _LastRS232Out:
  3193                           	opt stack 0
  3194  00004A                     	ds	1
  3195  00004B                     _NextUSBOut:
  3196                           	opt stack 0
  3197  00004B                     	ds	1
  3198  00004C                     _RS232_Out_Data_Rdy:
  3199                           	opt stack 0
  3200  00004C                     	ds	1
  3201  00004D                     _RS232cp:
  3202                           	opt stack 0
  3203  00004D                     	ds	1
  3204  00004E                     _USBDeferStatusStagePacket:
  3205                           	opt stack 0
  3206  00004E                     	ds	1
  3207  00004F                     _USBStatusStageTimeoutCounter:
  3208                           	opt stack 0
  3209  00004F                     	ds	1
  3210  000050                     _cdc_trf_state:
  3211                           	opt stack 0
  3212  000050                     	ds	1
  3213  000051                     _controlTransferState:
  3214                           	opt stack 0
  3215  000051                     	ds	1
  3216  000052                     _endpoint_number:
  3217                           	opt stack 0
  3218  000052                     	ds	1
  3219  000053                     _eusartRxCount:
  3220                           	opt stack 0
  3221  000053                     	ds	1
  3222  000054                     _eusartTxBufferRemaining:
  3223                           	opt stack 0
  3224  000054                     	ds	1
  3225  000055                     _moduleBufferIndex:
  3226                           	opt stack 0
  3227  000055                     	ds	1
  3228  000056                     _rxByteFlag:
  3229                           	opt stack 0
  3230  000056                     	ds	1
  3231  000057                     _shortPacketStatus:
  3232                           	opt stack 0
  3233  000057                     	ds	1
  3234  000058                     _USBActiveConfiguration:
  3235                           	opt stack 0
  3236  000058                     	ds	1
  3237  000059                     _USTATcopy:
  3238                           	opt stack 0
  3239  000059                     	ds	1
  3240                           tblptru	equ	0xFF8
  3241                           tblptrh	equ	0xFF7
  3242                           tblptrl	equ	0xFF6
  3243                           tablat	equ	0xFF5
  3244                           postinc0	equ	0xFEE
  3245                           wreg	equ	0xFE8
  3246                           postdec1	equ	0xFE5
  3247                           fsr1l	equ	0xFE1
  3248                           
  3249                           	psect	bssBANK0
  3250  0000B9                     __pbssBANK0:
  3251                           	opt stack 0
  3252  0000B9                     _ep_data_in:
  3253                           	opt stack 0
  3254  0000B9                     	ds	3
  3255  0000BC                     _ep_data_out:
  3256                           	opt stack 0
  3257  0000BC                     	ds	3
  3258  0000BF                     _CDCDataInHandle:
  3259                           	opt stack 0
  3260  0000BF                     	ds	2
  3261  0000C1                     _CDCDataOutHandle:
  3262                           	opt stack 0
  3263  0000C1                     	ds	2
  3264  0000C3                     _light:
  3265                           	opt stack 0
  3266  0000C3                     	ds	2
  3267  0000C5                     _temperature:
  3268                           	opt stack 0
  3269  0000C5                     	ds	2
  3270  0000C7                     _timer3ReloadVal:
  3271                           	opt stack 0
  3272  0000C7                     	ds	2
  3273  0000C9                     _timerMinTickCount:
  3274                           	opt stack 0
  3275  0000C9                     	ds	2
  3276  0000CB                     _timerMsTickCount:
  3277                           	opt stack 0
  3278  0000CB                     	ds	2
  3279  0000CD                     _BothEP0OutUOWNsSet:
  3280                           	opt stack 0
  3281  0000CD                     	ds	1
  3282  0000CE                     _RemoteWakeup:
  3283                           	opt stack 0
  3284  0000CE                     	ds	1
  3285  0000CF                     _USBBusIsSuspended:
  3286                           	opt stack 0
  3287  0000CF                     	ds	1
  3288  0000D0                     _USBDeferINDataStagePackets:
  3289                           	opt stack 0
  3290  0000D0                     	ds	1
  3291  0000D1                     _USBDeferOUTDataStagePackets:
  3292                           	opt stack 0
  3293  0000D1                     	ds	1
  3294  0000D2                     _USBDeviceState:
  3295                           	opt stack 0
  3296  0000D2                     	ds	1
  3297  0000D3                     _USBStatusStageEnabledFlag1:
  3298                           	opt stack 0
  3299  0000D3                     	ds	1
  3300  0000D4                     _USBStatusStageEnabledFlag2:
  3301                           	opt stack 0
  3302  0000D4                     	ds	1
  3303  0000D5                     _activeState:
  3304                           	opt stack 0
  3305  0000D5                     	ds	1
  3306  0000D6                     _appState:
  3307                           	opt stack 0
  3308  0000D6                     	ds	1
  3309  0000D7                     _appTimer:
  3310                           	opt stack 0
  3311  0000D7                     	ds	1
  3312  0000D8                     _cdc_mem_type:
  3313                           	opt stack 0
  3314  0000D8                     	ds	1
  3315  0000D9                     _cdc_rx_len:
  3316                           	opt stack 0
  3317  0000D9                     	ds	1
  3318  0000DA                     _cdc_tx_len:
  3319                           	opt stack 0
  3320  0000DA                     	ds	1
  3321  0000DB                     _control_signal_bitmap:
  3322                           	opt stack 0
  3323  0000DB                     	ds	1
  3324  0000DC                     	ds	1
  3325  0000DD                     	ds	1
  3326  0000DE                     	ds	1
  3327  0000DF                     _eusartRxHead:
  3328                           	opt stack 0
  3329  0000DF                     	ds	1
  3330  0000E0                     _eusartRxTail:
  3331                           	opt stack 0
  3332  0000E0                     	ds	1
  3333  0000E1                     _eusartTxHead:
  3334                           	opt stack 0
  3335  0000E1                     	ds	1
  3336  0000E2                     _eusartTxTail:
  3337                           	opt stack 0
  3338  0000E2                     	ds	1
  3339  0000E3                     _lightStringSize:
  3340                           	opt stack 0
  3341  0000E3                     	ds	1
  3342  0000E4                     _mainState:
  3343                           	opt stack 0
  3344  0000E4                     	ds	1
  3345  0000E5                     	ds	1
  3346  0000E6                     _minTicker:
  3347                           	opt stack 0
  3348  0000E6                     	ds	1
  3349  0000E7                     _moteModeState:
  3350                           	opt stack 0
  3351  0000E7                     	ds	1
  3352  0000E8                     _operationType:
  3353                           	opt stack 0
  3354  0000E8                     	ds	1
  3355  0000E9                     _powerOnStatus:
  3356                           	opt stack 0
  3357  0000E9                     	ds	1
  3358  0000EA                     _randomPortNum:
  3359                           	opt stack 0
  3360  0000EA                     	ds	1
  3361  0000EB                     _responseReady:
  3362                           	opt stack 0
  3363  0000EB                     	ds	1
  3364  0000EC                     	ds	1
  3365  0000ED                     _rnModule:
  3366                           	opt stack 0
  3367  0000ED                     	ds	1
  3368  0000EE                     _runningState:
  3369                           	opt stack 0
  3370  0000EE                     	ds	1
  3371  0000EF                     _secTicker:
  3372                           	opt stack 0
  3373  0000EF                     	ds	1
  3374  0000F0                     _sleepTicker:
  3375                           	opt stack 0
  3376  0000F0                     	ds	1
  3377  0000F1                     _usbState:
  3378                           	opt stack 0
  3379  0000F1                     	ds	1
  3380  0000F2                     service_pushbutton@Release_Timer:
  3381                           	opt stack 0
  3382  0000F2                     	ds	1
  3383  0000F3                     _USBAlternateInterface:
  3384                           	opt stack 0
  3385  0000F3                     	ds	2
  3386                           tblptru	equ	0xFF8
  3387                           tblptrh	equ	0xFF7
  3388                           tblptrl	equ	0xFF6
  3389                           tablat	equ	0xFF5
  3390                           postinc0	equ	0xFEE
  3391                           wreg	equ	0xFE8
  3392                           postdec1	equ	0xFE5
  3393                           fsr1l	equ	0xFE1
  3394                           
  3395                           	psect	dataBANK0
  3396  0000F5                     __pdataBANK0:
  3397                           	opt stack 0
  3398  0000F5                     _Contrast_level:
  3399                           	opt stack 0
  3400  0000F5                     	ds	1
  3401  0000F6                     	ds	1
  3402  0000F7                     _dataRateValue:
  3403                           	opt stack 0
  3404  0000F7                     	ds	1
  3405  0000F8                     _exitUSB:
  3406                           	opt stack 0
  3407  0000F8                     	ds	1
  3408  0000F9                     _menuTimeout:
  3409                           	opt stack 0
  3410  0000F9                     	ds	1
  3411  0000FA                     _moteState:
  3412                           	opt stack 0
  3413  0000FA                     	ds	1
  3414  0000FB                     _periodicState:
  3415                           	opt stack 0
  3416  0000FB                     	ds	1
  3417  0000FC                     _periodicTimerValue:
  3418                           	opt stack 0
  3419  0000FC                     	ds	1
  3420  0000FD                     _periodicUpValue:
  3421                           	opt stack 0
  3422  0000FD                     	ds	1
  3423                           tblptru	equ	0xFF8
  3424                           tblptrh	equ	0xFF7
  3425                           tblptrl	equ	0xFF6
  3426                           tablat	equ	0xFF5
  3427                           postinc0	equ	0xFEE
  3428                           wreg	equ	0xFE8
  3429                           postdec1	equ	0xFE5
  3430                           fsr1l	equ	0xFE1
  3431                           
  3432                           	psect	bssBANK1
  3433  000100                     __pbssBANK1:
  3434                           	opt stack 0
  3435  000100                     	ds	32
  3436  000120                     	ds	16
  3437  000130                     _responseId:
  3438                           	opt stack 0
  3439  000130                     	ds	16
  3440  000140                     _pBDTEntryOut:
  3441                           	opt stack 0
  3442  000140                     	ds	6
  3443  000146                     _BaudRateGen:
  3444                           	opt stack 0
  3445  000146                     	ds	4
  3446  00014A                     _sendingCounter:
  3447                           	opt stack 0
  3448  00014A                     	ds	4
  3449  00014E                     service_pushbutton@PB_Timer:
  3450                           	opt stack 0
  3451  00014E                     	ds	4
  3452  000152                     _pCDCDst:
  3453                           	opt stack 0
  3454  000152                     	ds	3
  3455  000155                     _pCDCSrc:
  3456                           	opt stack 0
  3457  000155                     	ds	3
  3458  000158                     _m10SecTicker:
  3459                           	opt stack 0
  3460  000158                     	ds	2
  3461  00015A                     _pDst:
  3462                           	opt stack 0
  3463  00015A                     	ds	2
  3464  00015C                     _moduleResonseBuffer:
  3465                           	opt stack 0
  3466  00015C                     	ds	64
  3467  00019C                     _responseData:
  3468                           	opt stack 0
  3469  00019C                     	ds	32
  3470  0001BC                     _dataBuffer:
  3471                           	opt stack 0
  3472  0001BC                     	ds	16
  3473  0001CC                     _cdc_notice:
  3474                           	opt stack 0
  3475  0001CC                     	ds	10
  3476  0001D6                     _dummy_encapsulated_cmd_response:
  3477                           	opt stack 0
  3478  0001D6                     	ds	8
  3479  0001DE                     _line_coding:
  3480                           	opt stack 0
  3481  0001DE                     	ds	7
  3482  0001E5                     _clearLight:
  3483                           	opt stack 0
  3484  0001E5                     	ds	5
  3485  0001EA                     _storedLight:
  3486                           	opt stack 0
  3487  0001EA                     	ds	5
  3488  0001EF                     _responsePortNum:
  3489                           	opt stack 0
  3490  0001EF                     	ds	3
  3491                           tblptru	equ	0xFF8
  3492                           tblptrh	equ	0xFF7
  3493                           tblptrl	equ	0xFF6
  3494                           tablat	equ	0xFF5
  3495                           postinc0	equ	0xFEE
  3496                           wreg	equ	0xFE8
  3497                           postdec1	equ	0xFE5
  3498                           fsr1l	equ	0xFE1
  3499                           
  3500                           	psect	dataBANK1
  3501  0001F7                     __pdataBANK1:
  3502                           	opt stack 0
  3503  0001F7                     _selectedFont:
  3504                           	opt stack 0
  3505  0001F7                     	ds	2
  3506                           tblptru	equ	0xFF8
  3507                           tblptrh	equ	0xFF7
  3508                           tblptrl	equ	0xFF6
  3509                           tablat	equ	0xFF5
  3510                           postinc0	equ	0xFEE
  3511                           wreg	equ	0xFE8
  3512                           postdec1	equ	0xFE5
  3513                           fsr1l	equ	0xFE1
  3514                           
  3515                           	psect	bssBANK2
  3516  000200                     __pbssBANK2:
  3517                           	opt stack 0
  3518  000200                     _eusartRxBuffer:
  3519                           	opt stack 0
  3520  000200                     	ds	64
  3521  000240                     _eusartTxBuffer:
  3522                           	opt stack 0
  3523  000240                     	ds	64
  3524  000280                     _USB_Buffer:
  3525                           	opt stack 0
  3526  000280                     	ds	64
  3527                           tblptru	equ	0xFF8
  3528                           tblptrh	equ	0xFF7
  3529                           tblptrl	equ	0xFF6
  3530                           tablat	equ	0xFF5
  3531                           postinc0	equ	0xFEE
  3532                           wreg	equ	0xFE8
  3533                           postdec1	equ	0xFE5
  3534                           fsr1l	equ	0xFE1
  3535                           
  3536                           	psect	cstackBANK1
  3537  0001F2                     __pcstackBANK1:
  3538                           	opt stack 0
  3539  0001F2                     moteHandler@gotoSleep:
  3540                           	opt stack 0
  3541                           
  3542                           ; 1 bytes @ 0x0
  3543  0001F2                     	ds	1
  3544  0001F3                     moteHandler@gotoNextState:
  3545                           	opt stack 0
  3546                           
  3547                           ; 1 bytes @ 0x1
  3548  0001F3                     	ds	1
  3549  0001F4                     moteHandler@s2Button:
  3550                           	opt stack 0
  3551                           
  3552                           ; 1 bytes @ 0x2
  3553  0001F4                     	ds	1
  3554  0001F5                     moteHandler@buttonPress:
  3555                           	opt stack 0
  3556                           
  3557                           ; 1 bytes @ 0x3
  3558  0001F5                     	ds	1
  3559  0001F6                     moteHandler@readMessage:
  3560                           	opt stack 0
  3561                           
  3562                           ; 1 bytes @ 0x4
  3563  0001F6                     	ds	1
  3564                           tblptru	equ	0xFF8
  3565                           tblptrh	equ	0xFF7
  3566                           tblptrl	equ	0xFF6
  3567                           tablat	equ	0xFF5
  3568                           postinc0	equ	0xFEE
  3569                           wreg	equ	0xFE8
  3570                           postdec1	equ	0xFE5
  3571                           fsr1l	equ	0xFE1
  3572                           
  3573                           	psect	cstackBANK0
  3574  000060                     __pcstackBANK0:
  3575                           	opt stack 0
  3576  000060                     ??_TMR1_Initialize:
  3577  000060                     ?_strncmp:
  3578                           	opt stack 0
  3579  000060                     ?_strcmp:
  3580                           	opt stack 0
  3581  000060                     ?_moteApp_getLightString:
  3582                           	opt stack 0
  3583  000060                     ?_USBTransferOnePacket:
  3584                           	opt stack 0
  3585  000060                     ?___wmul:
  3586                           	opt stack 0
  3587  000060                     ?___awmod:
  3588                           	opt stack 0
  3589  000060                     ?___lwdiv:
  3590                           	opt stack 0
  3591  000060                     ?___lwmod:
  3592                           	opt stack 0
  3593  000060                     ?___fladd:
  3594                           	opt stack 0
  3595  000060                     ?___almod:
  3596                           	opt stack 0
  3597  000060                     ?___fltol:
  3598                           	opt stack 0
  3599  000060                     ?___xxtofl:
  3600                           	opt stack 0
  3601  000060                     MOTEapp_handlerState@state:
  3602                           	opt stack 0
  3603  000060                     MOTEapp_TimerBasedTask@timerTask:
  3604                           	opt stack 0
  3605  000060                     hexToStr@character:
  3606                           	opt stack 0
  3607  000060                     moteApp_clearBuffers@counter:
  3608                           	opt stack 0
  3609  000060                     USBapp_handlerState@state:
  3610                           	opt stack 0
  3611  000060                     USBapp_exitCDCState@usbState:
  3612                           	opt stack 0
  3613  000060                     service_pushbutton@bs:
  3614                           	opt stack 0
  3615  000060                     oled_writeCommand@command:
  3616                           	opt stack 0
  3617  000060                     oled_writeData@data:
  3618                           	opt stack 0
  3619  000060                     EUSART_Read@readValue:
  3620                           	opt stack 0
  3621  000060                     EUSART_Write@txData:
  3622                           	opt stack 0
  3623  000060                     EUSART_FlushBuffer@index:
  3624                           	opt stack 0
  3625  000060                     DATAEE_WriteByte@bData:
  3626                           	opt stack 0
  3627  000060                     DATAEE_ReadByte@bAdd:
  3628                           	opt stack 0
  3629  000060                     TMR2_ReadTimer@readVal:
  3630                           	opt stack 0
  3631  000060                     USBTransferOnePacket@dir:
  3632                           	opt stack 0
  3633  000060                     ___lbdiv@divisor:
  3634                           	opt stack 0
  3635  000060                     delayms@t:
  3636                           	opt stack 0
  3637  000060                     moteApp_delayms@length:
  3638                           	opt stack 0
  3639  000060                     oled_setFont@font:
  3640                           	opt stack 0
  3641  000060                     putUSBUSART@data:
  3642                           	opt stack 0
  3643  000060                     ___wmul@multiplier:
  3644                           	opt stack 0
  3645  000060                     ___awmod@dividend:
  3646                           	opt stack 0
  3647  000060                     ___lwdiv@dividend:
  3648                           	opt stack 0
  3649  000060                     ___lwmod@dividend:
  3650                           	opt stack 0
  3651  000060                     memcpy@d1:
  3652                           	opt stack 0
  3653  000060                     memset@p1:
  3654                           	opt stack 0
  3655  000060                     strcmp@s1:
  3656                           	opt stack 0
  3657  000060                     strncmp@s1:
  3658                           	opt stack 0
  3659  000060                     ___almod@dividend:
  3660                           	opt stack 0
  3661  000060                     ___fltol@f1:
  3662                           	opt stack 0
  3663  000060                     ___fladd@b:
  3664                           	opt stack 0
  3665  000060                     ___xxtofl@val:
  3666                           	opt stack 0
  3667                           
  3668                           ; 4 bytes @ 0x0
  3669  000060                     	ds	1
  3670  000061                     MOTEapp_getModuleResponse@terminatorReceived:
  3671                           	opt stack 0
  3672  000061                     moteApp_clearBuffers@counter_1955:
  3673                           	opt stack 0
  3674  000061                     Set_Page_Address@address:
  3675                           	opt stack 0
  3676  000061                     Set_Column_Address@address:
  3677                           	opt stack 0
  3678  000061                     oled_setDisplay@displayType:
  3679                           	opt stack 0
  3680  000061                     oled_setContrastControlRegister@mod:
  3681                           	opt stack 0
  3682  000061                     oled_initialDispayLine@line:
  3683                           	opt stack 0
  3684  000061                     oled_powerControl@vol:
  3685                           	opt stack 0
  3686  000061                     oled_regulorResistorSelect@r:
  3687                           	opt stack 0
  3688  000061                     DATAEE_WriteByte@bAdd:
  3689                           	opt stack 0
  3690  000061                     ___lbdiv@dividend:
  3691                           	opt stack 0
  3692  000061                     sendCommand@string:
  3693                           	opt stack 0
  3694  000061                     sendDataCommand@string:
  3695                           	opt stack 0
  3696  000061                     USBTransferOnePacket@data:
  3697                           	opt stack 0
  3698                           
  3699                           ; 2 bytes @ 0x1
  3700  000061                     	ds	1
  3701  000062                     ??_moteApp_delayms:
  3702  000062                     ??_oled_devInit:
  3703  000062                     ??_delayms:
  3704  000062                     MOTEapp_getModuleResponse@bufferByte:
  3705                           	opt stack 0
  3706  000062                     moteApp_clearBuffers@counter_1956:
  3707                           	opt stack 0
  3708  000062                     oled_putChar@station_dot:
  3709                           	opt stack 0
  3710  000062                     DATAEE_WriteByte@GIEBitValue:
  3711                           	opt stack 0
  3712  000062                     putUSBUSART@length:
  3713                           	opt stack 0
  3714  000062                     ___lbdiv@counter:
  3715                           	opt stack 0
  3716  000062                     ___wmul@multiplicand:
  3717                           	opt stack 0
  3718  000062                     ___awmod@divisor:
  3719                           	opt stack 0
  3720  000062                     ___lwdiv@divisor:
  3721                           	opt stack 0
  3722  000062                     ___lwmod@divisor:
  3723                           	opt stack 0
  3724  000062                     memcpy@s1:
  3725                           	opt stack 0
  3726  000062                     memset@c:
  3727                           	opt stack 0
  3728  000062                     strcmp@s2:
  3729                           	opt stack 0
  3730  000062                     strncmp@s2:
  3731                           	opt stack 0
  3732                           
  3733                           ; 2 bytes @ 0x2
  3734  000062                     	ds	1
  3735  000063                     ??_moteApp_toggleLeds:
  3736  000063                     ??_MOTEapp_SetDataRateSetting:
  3737  000063                     ??_moduleSleep:
  3738  000063                     ?_moteApp_getTempValue:
  3739                           	opt stack 0
  3740  000063                     moteApp_clearBuffers@counter_1957:
  3741                           	opt stack 0
  3742  000063                     oled_putChar@start_page:
  3743                           	opt stack 0
  3744  000063                     USBTransferOnePacket@len:
  3745                           	opt stack 0
  3746  000063                     ___lbdiv@quotient:
  3747                           	opt stack 0
  3748  000063                     delayms@i:
  3749                           	opt stack 0
  3750  000063                     moteApp_delayms@counter:
  3751                           	opt stack 0
  3752  000063                     sendDataCommand@appData:
  3753                           	opt stack 0
  3754                           
  3755                           ; 2 bytes @ 0x3
  3756  000063                     	ds	1
  3757  000064                     ??_oled_putChar:
  3758  000064                     ??_strcmp:
  3759  000064                     ??___fltol:
  3760  000064                     ??___xxtofl:
  3761  000064                     MOTEapp_SetDataRateSetting@dr:
  3762                           	opt stack 0
  3763  000064                     moteApp_toggleLeds@state:
  3764                           	opt stack 0
  3765  000064                     USBTransferOnePacket@ep:
  3766                           	opt stack 0
  3767  000064                     ___awmod@counter:
  3768                           	opt stack 0
  3769  000064                     ___lwdiv@counter:
  3770                           	opt stack 0
  3771  000064                     ___lwmod@counter:
  3772                           	opt stack 0
  3773  000064                     ___wmul@product:
  3774                           	opt stack 0
  3775  000064                     memcpy@n:
  3776                           	opt stack 0
  3777  000064                     memset@n:
  3778                           	opt stack 0
  3779  000064                     strncmp@len:
  3780                           	opt stack 0
  3781  000064                     ___almod@divisor:
  3782                           	opt stack 0
  3783  000064                     ___fladd@a:
  3784                           	opt stack 0
  3785                           
  3786                           ; 4 bytes @ 0x4
  3787  000064                     	ds	1
  3788  000065                     sendDataCommand@dataLength:
  3789                           	opt stack 0
  3790  000065                     ___awmod@sign:
  3791                           	opt stack 0
  3792  000065                     strcmp@r:
  3793                           	opt stack 0
  3794  000065                     moduleResync@escapeCounter:
  3795                           	opt stack 0
  3796  000065                     moteApp_setSensorsInput@escapeCounter:
  3797                           	opt stack 0
  3798  000065                     moteApp_getTempValue@escapeCounter:
  3799                           	opt stack 0
  3800  000065                     USBTransferOnePacket@handle:
  3801                           	opt stack 0
  3802  000065                     ___lwdiv@quotient:
  3803                           	opt stack 0
  3804                           
  3805                           ; 2 bytes @ 0x5
  3806  000065                     	ds	1
  3807  000066                     ??_strncmp:
  3808  000066                     ??_sendDataCommand:
  3809  000066                     moteApp_add8bToDataBuffer@bufferLocation:
  3810                           	opt stack 0
  3811  000066                     memcpy@d:
  3812                           	opt stack 0
  3813  000066                     memset@p:
  3814                           	opt stack 0
  3815                           
  3816                           ; 2 bytes @ 0x6
  3817  000066                     	ds	1
  3818  000067                     ??_moteApp_add8bToDataBuffer:
  3819  000067                     ??_CDCTxService:
  3820  000067                     moduleResync@escapeEvent:
  3821                           	opt stack 0
  3822  000067                     sendDataCommand@byteCount:
  3823                           	opt stack 0
  3824  000067                     moteApp_add16bToDataBuffer@number:
  3825                           	opt stack 0
  3826  000067                     getsUSBUSART@buffer:
  3827                           	opt stack 0
  3828                           
  3829                           ; 2 bytes @ 0x7
  3830  000067                     	ds	1
  3831  000068                     ??___fladd:
  3832  000068                     sendDataCommand@byteCount_1873:
  3833                           	opt stack 0
  3834  000068                     USBDeviceInit@i:
  3835                           	opt stack 0
  3836  000068                     ___almod@counter:
  3837                           	opt stack 0
  3838  000068                     ___fltol@sign1:
  3839                           	opt stack 0
  3840  000068                     ___xxtofl@sign:
  3841                           	opt stack 0
  3842  000068                     _CDCTxService$6538:
  3843                           	opt stack 0
  3844  000068                     memcpy@s:
  3845                           	opt stack 0
  3846                           
  3847                           ; 2 bytes @ 0x8
  3848  000068                     	ds	1
  3849  000069                     moteApp_add8bToDataBuffer@number:
  3850                           	opt stack 0
  3851  000069                     moteApp_add16bToDataBuffer@bufferLocation:
  3852                           	opt stack 0
  3853  000069                     getsUSBUSART@len:
  3854                           	opt stack 0
  3855  000069                     ___almod@sign:
  3856                           	opt stack 0
  3857  000069                     ___fltol@exp1:
  3858                           	opt stack 0
  3859  000069                     ___xxtofl@exp:
  3860                           	opt stack 0
  3861                           
  3862                           ; 1 bytes @ 0x9
  3863  000069                     	ds	1
  3864  00006A                     ??_moteApp_add16bToDataBuffer:
  3865  00006A                     ??_getsUSBUSART:
  3866  00006A                     oled_putChar@k:
  3867                           	opt stack 0
  3868  00006A                     CDCTxService@i:
  3869                           	opt stack 0
  3870  00006A                     moteApp_setLightString@lightString:
  3871                           	opt stack 0
  3872  00006A                     ___xxtofl@arg:
  3873                           	opt stack 0
  3874                           
  3875                           ; 4 bytes @ 0xA
  3876  00006A                     	ds	1
  3877  00006B                     oled_putChar@index:
  3878                           	opt stack 0
  3879  00006B                     CDCTxService@byte_to_send:
  3880                           	opt stack 0
  3881  00006B                     _getsUSBUSART$6490:
  3882                           	opt stack 0
  3883                           
  3884                           ; 2 bytes @ 0xB
  3885  00006B                     	ds	1
  3886  00006C                     moteApp_setLightString@stingPos:
  3887                           	opt stack 0
  3888  00006C                     oled_clearRow@page:
  3889                           	opt stack 0
  3890                           
  3891                           ; 1 bytes @ 0xC
  3892  00006C                     	ds	1
  3893  00006D                     ??_USBapp_DeviceCdcEmulatorHandler:
  3894  00006D                     ?_moteApp_getLightValue:
  3895                           	opt stack 0
  3896  00006D                     oled_clearRow@index:
  3897                           	opt stack 0
  3898                           
  3899                           ; 1 bytes @ 0xD
  3900  00006D                     	ds	1
  3901  00006E                     moteApp_GoToSleep@status:
  3902                           	opt stack 0
  3903                           
  3904                           ; 1 bytes @ 0xE
  3905  00006E                     	ds	1
  3906  00006F                     moteApp_getLightValue@escapeCounter:
  3907                           	opt stack 0
  3908                           
  3909                           ; 2 bytes @ 0xF
  3910  00006F                     	ds	1
  3911  000070                     ___fladd@signs:
  3912                           	opt stack 0
  3913                           
  3914                           ; 1 bytes @ 0x10
  3915  000070                     	ds	1
  3916  000071                     ?_moteApp_convertSensorValue:
  3917                           	opt stack 0
  3918  000071                     ___fladd@aexp:
  3919                           	opt stack 0
  3920  000071                     moteApp_convertSensorValue@string:
  3921                           	opt stack 0
  3922  000071                     oled_putString@string:
  3923                           	opt stack 0
  3924                           
  3925                           ; 2 bytes @ 0x11
  3926  000071                     	ds	1
  3927  000072                     ___fladd@bexp:
  3928                           	opt stack 0
  3929                           
  3930                           ; 1 bytes @ 0x12
  3931  000072                     	ds	1
  3932  000073                     ??_moteApp_convertSensorValue:
  3933  000073                     oled_putString@station_dot:
  3934                           	opt stack 0
  3935  000073                     ___fladd@grs:
  3936                           	opt stack 0
  3937                           
  3938                           ; 1 bytes @ 0x13
  3939  000073                     	ds	1
  3940  000074                     ?___flmul:
  3941                           	opt stack 0
  3942  000074                     oled_putString@start_page:
  3943                           	opt stack 0
  3944  000074                     ___flmul@b:
  3945                           	opt stack 0
  3946                           
  3947                           ; 4 bytes @ 0x14
  3948  000074                     	ds	1
  3949  000075                     oled_putString@index:
  3950                           	opt stack 0
  3951                           
  3952                           ; 1 bytes @ 0x15
  3953  000075                     	ds	1
  3954  000076                     ??_test_switch:
  3955  000076                     moteJoiningProcess@changeStates:
  3956                           	opt stack 0
  3957  000076                     moteApp_convertSensorValue@index:
  3958                           	opt stack 0
  3959  000076                     USBapp_Handler@buttonPress:
  3960                           	opt stack 0
  3961  000076                     oled_putUint8@station_dot:
  3962                           	opt stack 0
  3963  000076                     oled_putint8@station_dot:
  3964                           	opt stack 0
  3965                           
  3966                           ; 1 bytes @ 0x16
  3967  000076                     	ds	1
  3968  000077                     moteJoiningProcess@selectButton:
  3969                           	opt stack 0
  3970  000077                     oled_putUint8@start_page:
  3971                           	opt stack 0
  3972  000077                     oled_putint8@start_page:
  3973                           	opt stack 0
  3974  000077                     test_switch@timeout:
  3975                           	opt stack 0
  3976  000077                     moteApp_convertSensorValue@convertedValue:
  3977                           	opt stack 0
  3978                           
  3979                           ; 2 bytes @ 0x17
  3980  000077                     	ds	1
  3981  000078                     ??_moteJoiningProcess:
  3982  000078                     oled_putUint8@number:
  3983                           	opt stack 0
  3984  000078                     oled_putint8@negative:
  3985                           	opt stack 0
  3986  000078                     ___flmul@a:
  3987                           	opt stack 0
  3988                           
  3989                           ; 4 bytes @ 0x18
  3990  000078                     	ds	1
  3991  000079                     test_switch@buttonCheck:
  3992                           	opt stack 0
  3993  000079                     moteJoiningProcess@readDataRate:
  3994                           	opt stack 0
  3995  000079                     oled_putUint8@numData:
  3996                           	opt stack 0
  3997  000079                     oled_putint8@numData:
  3998                           	opt stack 0
  3999                           
  4000                           ; 6 bytes @ 0x19
  4001  000079                     	ds	1
  4002  00007A                     moteJoiningProcess@joiningComplete:
  4003                           	opt stack 0
  4004                           
  4005                           ; 1 bytes @ 0x1A
  4006  00007A                     	ds	1
  4007  00007B                     moteJoiningProcess@messageReady:
  4008                           	opt stack 0
  4009                           
  4010                           ; 1 bytes @ 0x1B
  4011  00007B                     	ds	1
  4012  00007C                     ??___flmul:
  4013                           
  4014                           ; 0 bytes @ 0x1C
  4015  00007C                     	ds	3
  4016  00007F                     oled_putint8@number:
  4017                           	opt stack 0
  4018                           
  4019                           ; 1 bytes @ 0x1F
  4020  00007F                     	ds	1
  4021  000080                     ___flmul@sign:
  4022                           	opt stack 0
  4023                           
  4024                           ; 1 bytes @ 0x20
  4025  000080                     	ds	1
  4026  000081                     ___flmul@aexp:
  4027                           	opt stack 0
  4028                           
  4029                           ; 1 bytes @ 0x21
  4030  000081                     	ds	1
  4031  000082                     ___flmul@grs:
  4032                           	opt stack 0
  4033                           
  4034                           ; 4 bytes @ 0x22
  4035  000082                     	ds	4
  4036  000086                     ___flmul@bexp:
  4037                           	opt stack 0
  4038                           
  4039                           ; 1 bytes @ 0x26
  4040  000086                     	ds	1
  4041  000087                     ___flmul@prod:
  4042                           	opt stack 0
  4043                           
  4044                           ; 4 bytes @ 0x27
  4045  000087                     	ds	4
  4046  00008B                     ___flmul@temp:
  4047                           	opt stack 0
  4048                           
  4049                           ; 2 bytes @ 0x2B
  4050  00008B                     	ds	2
  4051  00008D                     ?___fldiv:
  4052                           	opt stack 0
  4053  00008D                     ___fldiv@b:
  4054                           	opt stack 0
  4055                           
  4056                           ; 4 bytes @ 0x2D
  4057  00008D                     	ds	4
  4058  000091                     ___fldiv@a:
  4059                           	opt stack 0
  4060                           
  4061                           ; 4 bytes @ 0x31
  4062  000091                     	ds	4
  4063  000095                     ??___fldiv:
  4064                           
  4065                           ; 0 bytes @ 0x35
  4066  000095                     	ds	4
  4067  000099                     ___fldiv@sign:
  4068                           	opt stack 0
  4069                           
  4070                           ; 1 bytes @ 0x39
  4071  000099                     	ds	1
  4072  00009A                     ___fldiv@rem:
  4073                           	opt stack 0
  4074                           
  4075                           ; 4 bytes @ 0x3A
  4076  00009A                     	ds	4
  4077  00009E                     ___fldiv@new_exp:
  4078                           	opt stack 0
  4079                           
  4080                           ; 2 bytes @ 0x3E
  4081  00009E                     	ds	2
  4082  0000A0                     ___fldiv@grs:
  4083                           	opt stack 0
  4084                           
  4085                           ; 4 bytes @ 0x40
  4086  0000A0                     	ds	4
  4087  0000A4                     ___fldiv@bexp:
  4088                           	opt stack 0
  4089                           
  4090                           ; 1 bytes @ 0x44
  4091  0000A4                     	ds	1
  4092  0000A5                     ___fldiv@aexp:
  4093                           	opt stack 0
  4094                           
  4095                           ; 1 bytes @ 0x45
  4096  0000A5                     	ds	1
  4097  0000A6                     ADC_TempConversion@tempRaw:
  4098                           	opt stack 0
  4099                           
  4100                           ; 1 bytes @ 0x46
  4101  0000A6                     	ds	1
  4102  0000A7                     ADC_TempConversion@temp:
  4103                           	opt stack 0
  4104                           
  4105                           ; 1 bytes @ 0x47
  4106  0000A7                     	ds	1
  4107  0000A8                     ADC_TempConversion@val:
  4108                           	opt stack 0
  4109                           
  4110                           ; 4 bytes @ 0x48
  4111  0000A8                     	ds	4
  4112  0000AC                     ??_moteApp_testSensors:
  4113  0000AC                     moteRunningProcess@selectButton:
  4114                           	opt stack 0
  4115                           
  4116                           ; 1 bytes @ 0x4C
  4117  0000AC                     	ds	1
  4118  0000AD                     moteRunningProcess@messageReady:
  4119                           	opt stack 0
  4120                           
  4121                           ; 1 bytes @ 0x4D
  4122  0000AD                     	ds	1
  4123  0000AE                     moteRunningProcess@sleepEvent:
  4124                           	opt stack 0
  4125                           
  4126                           ; 1 bytes @ 0x4E
  4127  0000AE                     	ds	1
  4128  0000AF                     ??_moteRunningProcess:
  4129                           
  4130                           ; 0 bytes @ 0x4F
  4131  0000AF                     	ds	1
  4132  0000B0                     moteRunningProcess@readByte:
  4133                           	opt stack 0
  4134                           
  4135                           ; 1 bytes @ 0x50
  4136  0000B0                     	ds	1
  4137  0000B1                     moteRunningProcess@sizeOfUpdate:
  4138                           	opt stack 0
  4139                           
  4140                           ; 1 bytes @ 0x51
  4141  0000B1                     	ds	1
  4142  0000B2                     moteRunningProcess@sizeOfUpdate_1735:
  4143                           	opt stack 0
  4144                           
  4145                           ; 1 bytes @ 0x52
  4146  0000B2                     	ds	1
  4147  0000B3                     moteRunningProcess@ctr:
  4148                           	opt stack 0
  4149                           
  4150                           ; 2 bytes @ 0x53
  4151  0000B3                     	ds	2
  4152  0000B5                     moteRunningProcess@counter:
  4153                           	opt stack 0
  4154                           
  4155                           ; 1 bytes @ 0x55
  4156  0000B5                     	ds	1
  4157  0000B6                     moteRunningProcess@bufferReadPos:
  4158                           	opt stack 0
  4159                           
  4160                           ; 1 bytes @ 0x56
  4161  0000B6                     	ds	1
  4162  0000B7                     moteRunningProcess@changeStates:
  4163                           	opt stack 0
  4164                           
  4165                           ; 1 bytes @ 0x57
  4166  0000B7                     	ds	1
  4167  0000B8                     ??_moteHandler:
  4168                           
  4169                           ; 0 bytes @ 0x58
  4170  0000B8                     	ds	1
  4171  0000B9                     tblptru	equ	0xFF8
  4172                           tblptrh	equ	0xFF7
  4173                           tblptrl	equ	0xFF6
  4174                           tablat	equ	0xFF5
  4175                           postinc0	equ	0xFEE
  4176                           wreg	equ	0xFE8
  4177                           postdec1	equ	0xFE5
  4178                           fsr1l	equ	0xFE1
  4179                           
  4180                           ; 0 bytes @ 0x59
  4181                           
  4182                           	psect	cstackCOMRAM
  4183  000001                     __pcstackCOMRAM:
  4184                           	opt stack 0
  4185  000001                     ??_USBStdGetDscHandler:
  4186  000001                     ??_USBStdGetStatusHandler:
  4187  000001                     ?i2_USBTransferOnePacket:
  4188                           	opt stack 0
  4189  000001                     ?___lldiv:
  4190                           	opt stack 0
  4191  000001                     USBConfigureEndpoint@direction:
  4192                           	opt stack 0
  4193  000001                     USBCtrlTrfTxService@byteToSend:
  4194                           	opt stack 0
  4195  000001                     i2USBTransferOnePacket@dir:
  4196                           	opt stack 0
  4197  000001                     i2memset@p1:
  4198                           	opt stack 0
  4199  000001                     ___lldiv@dividend:
  4200                           	opt stack 0
  4201                           
  4202                           ; 4 bytes @ 0x0
  4203  000001                     	ds	1
  4204  000002                     ??_USBConfigureEndpoint:
  4205  000002                     USBStdGetStatusHandler@p:
  4206                           	opt stack 0
  4207  000002                     i2USBTransferOnePacket@data:
  4208                           	opt stack 0
  4209                           
  4210                           ; 2 bytes @ 0x1
  4211  000002                     	ds	1
  4212  000003                     i2memset@c:
  4213                           	opt stack 0
  4214                           
  4215                           ; 2 bytes @ 0x2
  4216  000003                     	ds	1
  4217  000004                     i2USBTransferOnePacket@len:
  4218                           	opt stack 0
  4219                           
  4220                           ; 1 bytes @ 0x3
  4221  000004                     	ds	1
  4222  000005                     i2USBTransferOnePacket@ep:
  4223                           	opt stack 0
  4224  000005                     i2memset@n:
  4225                           	opt stack 0
  4226  000005                     ___lldiv@divisor:
  4227                           	opt stack 0
  4228                           
  4229                           ; 4 bytes @ 0x4
  4230  000005                     	ds	1
  4231  000006                     USBConfigureEndpoint@EPNum:
  4232                           	opt stack 0
  4233  000006                     i2USBTransferOnePacket@handle:
  4234                           	opt stack 0
  4235                           
  4236                           ; 2 bytes @ 0x5
  4237  000006                     	ds	1
  4238  000007                     USBConfigureEndpoint@handle:
  4239                           	opt stack 0
  4240  000007                     i2memset@p:
  4241                           	opt stack 0
  4242                           
  4243                           ; 2 bytes @ 0x6
  4244  000007                     	ds	2
  4245  000009                     USBEnableEndpoint@options:
  4246                           	opt stack 0
  4247  000009                     i2USBDeviceInit@i:
  4248                           	opt stack 0
  4249  000009                     ___lldiv@quotient:
  4250                           	opt stack 0
  4251                           
  4252                           ; 4 bytes @ 0x8
  4253  000009                     	ds	1
  4254  00000A                     USBEnableEndpoint@p:
  4255                           	opt stack 0
  4256                           
  4257                           ; 2 bytes @ 0x9
  4258  00000A                     	ds	2
  4259  00000C                     USBEnableEndpoint@ep:
  4260                           	opt stack 0
  4261                           
  4262                           ; 1 bytes @ 0xB
  4263  00000C                     	ds	1
  4264  00000D                     USBapp_CdcEmulatorInitialize@i:
  4265                           	opt stack 0
  4266  00000D                     ___lldiv@counter:
  4267                           	opt stack 0
  4268                           
  4269                           ; 1 bytes @ 0xC
  4270  00000D                     	ds	1
  4271  00000E                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  4272                           	opt stack 0
  4273  00000E                     USART_mySetLineCodingHandler@dwBaud:
  4274                           	opt stack 0
  4275                           
  4276                           ; 4 bytes @ 0xD
  4277  00000E                     	ds	2
  4278  000010                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  4279                           	opt stack 0
  4280                           
  4281                           ; 2 bytes @ 0xF
  4282  000010                     	ds	2
  4283  000012                     USBCtrlTrfRxService@i:
  4284                           	opt stack 0
  4285  000012                     USBCtrlTrfInHandler@lastDTS:
  4286                           	opt stack 0
  4287  000012                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  4288                           	opt stack 0
  4289                           
  4290                           ; 2 bytes @ 0x11
  4291  000012                     	ds	1
  4292  000013                     USBCtrlTrfRxService@byteToRead:
  4293                           	opt stack 0
  4294                           
  4295                           ; 1 bytes @ 0x12
  4296  000013                     	ds	1
  4297  000014                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  4298                           
  4299                           ; 0 bytes @ 0x13
  4300  000014                     	ds	2
  4301  000016                     ??_USBStdFeatureReqHandler:
  4302  000016                     USBStdSetCfgHandler@i:
  4303                           	opt stack 0
  4304                           
  4305                           ; 1 bytes @ 0x15
  4306  000016                     	ds	1
  4307  000017                     USBStdFeatureReqHandler@pUEP:
  4308                           	opt stack 0
  4309                           
  4310                           ; 2 bytes @ 0x16
  4311  000017                     	ds	2
  4312  000019                     USBStdFeatureReqHandler@current_ep_data:
  4313                           	opt stack 0
  4314                           
  4315                           ; 1 bytes @ 0x18
  4316  000019                     	ds	1
  4317  00001A                     USBStdFeatureReqHandler@p:
  4318                           	opt stack 0
  4319                           
  4320                           ; 2 bytes @ 0x19
  4321  00001A                     	ds	2
  4322  00001C                     ??_USBCtrlEPService:
  4323  00001C                     
  4324                           ; 0 bytes @ 0x1B
  4325  00001C                     	ds	2
  4326  00001E                     USBCtrlEPService@setup_cnt:
  4327                           	opt stack 0
  4328                           
  4329                           ; 1 bytes @ 0x1D
  4330  00001E                     	ds	1
  4331  00001F                     USBDeviceTasks@i:
  4332                           	opt stack 0
  4333                           
  4334                           ; 1 bytes @ 0x1E
  4335  00001F                     	ds	1
  4336  000020                     ??_INTERRUPT_InterruptManager:
  4337                           
  4338                           ; 0 bytes @ 0x1F
  4339  000020                     	ds	14
  4340                           tblptru	equ	0xFF8
  4341                           tblptrh	equ	0xFF7
  4342                           tblptrl	equ	0xFF6
  4343                           tablat	equ	0xFF5
  4344                           postinc0	equ	0xFEE
  4345                           wreg	equ	0xFE8
  4346                           postdec1	equ	0xFE5
  4347                           fsr1l	equ	0xFE1
  4348                           
  4349 ;;
  4350 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4351 ;;
  4352 ;; *************** function _main *****************
  4353 ;; Defined at:
  4354 ;;		line 70 in file "main.c"
  4355 ;; Parameters:    Size  Location     Type
  4356 ;;		None
  4357 ;; Auto vars:     Size  Location     Type
  4358 ;;		None
  4359 ;; Return value:  Size  Location     Type
  4360 ;;		None               void
  4361 ;; Registers used:
  4362 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4363 ;; Tracked objects:
  4364 ;;		On entry : 0/0
  4365 ;;		On exit  : 0/0
  4366 ;;		Unchanged: 0/0
  4367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4368 ;;      Params:         0       0       0       0       0       0       0       0       0
  4369 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4370 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4371 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4372 ;;Total ram usage:        0 bytes
  4373 ;; Hardware stack levels required when called:   20
  4374 ;; This function calls:
  4375 ;;		_DATAEE_ReadByte
  4376 ;;		_DATAEE_WriteByte
  4377 ;;		_MOTEapp_handlerState
  4378 ;;		_SYSTEM_Initialize
  4379 ;;		_USBDeviceAttach
  4380 ;;		_USBDeviceInit
  4381 ;;		_USBapp_Handler
  4382 ;;		_USBapp_handlerState
  4383 ;;		_moduleResync
  4384 ;;		_moteApp_clearCommand
  4385 ;;		_moteApp_delayms
  4386 ;;		_moteHandler
  4387 ;;		_oled_clear
  4388 ;;		_oled_init
  4389 ;;		_oled_putString
  4390 ;;		_test_powerup
  4391 ;; This function is called by:
  4392 ;;		Startup code after reset
  4393 ;; This function uses a non-reentrant model
  4394 ;;
  4395                           
  4396                           	psect	text0
  4397  003BA8                     __ptext0:
  4398                           	opt stack 0
  4399  003BA8                     _main:
  4400                           	opt stack 11
  4401                           
  4402                           ;main.c: 73: SYSTEM_Initialize();
  4403                           
  4404                           ;incstack = 0
  4405  003BA8  EC92  F034         	call	_SYSTEM_Initialize	;wreg free
  4406                           
  4407                           ;main.c: 75: oled_init();
  4408  003BAC  ECBD  F033         	call	_oled_init	;wreg free
  4409                           
  4410                           ;main.c: 76: USBDeviceInit();
  4411  003BB0  ECBA  F01A         	call	_USBDeviceInit	;wreg free
  4412                           
  4413                           ;main.c: 78: USBDeviceAttach();
  4414  003BB4  ECA3  F033         	call	_USBDeviceAttach	;wreg free
  4415                           
  4416                           ;main.c: 80: LATBbits.LATB5 = 1;
  4417  003BB8  8A8A               	bsf	3978,5,c	;volatile
  4418                           
  4419                           ;main.c: 81: moteApp_delayms(50);
  4420  003BBA  0E00               	movlw	0
  4421  003BBC  0100               	movlb	0	; () banked
  4422  003BBE  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4423  003BC0  0E32               	movlw	50
  4424  003BC2  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4425  003BC4  ECFF  F032         	call	_moteApp_delayms	;wreg free
  4426                           
  4427                           ;main.c: 82: LATBbits.LATB5 = 0;
  4428  003BC8  9A8A               	bcf	3978,5,c	;volatile
  4429                           
  4430                           ;main.c: 83: moteApp_delayms(500);
  4431  003BCA  0E01               	movlw	1
  4432  003BCC  0100               	movlb	0	; () banked
  4433  003BCE  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4434  003BD0  0EF4               	movlw	244
  4435  003BD2  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4436  003BD4  ECFF  F032         	call	_moteApp_delayms	;wreg free
  4437                           
  4438                           ;main.c: 85: PEIE = 1;
  4439  003BD8  8CF2               	bsf	intcon,6,c	;volatile
  4440                           
  4441                           ;main.c: 86: GIE = 1;
  4442  003BDA  8EF2               	bsf	intcon,7,c	;volatile
  4443                           
  4444                           ;main.c: 88: moduleResync();
  4445  003BDC  EC4B  F02C         	call	_moduleResync	;wreg free
  4446                           
  4447                           ;main.c: 89: moteApp_delayms(20);
  4448  003BE0  0E00               	movlw	0
  4449  003BE2  0100               	movlb	0	; () banked
  4450  003BE4  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4451  003BE6  0E14               	movlw	20
  4452  003BE8  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4453  003BEA  ECFF  F032         	call	_moteApp_delayms	;wreg free
  4454                           
  4455                           ;main.c: 90: moteApp_clearCommand();
  4456  003BEE  EC4B  F035         	call	_moteApp_clearCommand	;wreg free
  4457                           
  4458                           ;main.c: 91: moteApp_delayms(20);
  4459  003BF2  0E00               	movlw	0
  4460  003BF4  0100               	movlb	0	; () banked
  4461  003BF6  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4462  003BF8  0E14               	movlw	20
  4463  003BFA  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4464  003BFC  ECFF  F032         	call	_moteApp_delayms	;wreg free
  4465                           
  4466                           ;main.c: 93: powerOnStatus = DATAEE_ReadByte(0x00);
  4467  003C00  0E00               	movlw	0
  4468  003C02  EC23  F035         	call	_DATAEE_ReadByte
  4469  003C06  0100               	movlb	0	; () banked
  4470  003C08  6FE9               	movwf	_powerOnStatus& (0+255),b
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;main.c: 94: if ( powerOnStatus != 0x55)
  4474  003C0A  0E55               	movlw	85
  4475  003C0C  0100               	movlb	0	; () banked
  4476  003C0E  19E9               	xorwf	_powerOnStatus& (0+255),w,b
  4477  003C10  B4D8               	btfsc	status,2,c
  4478  003C12  D008               	goto	l14900
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;main.c: 95: {
  4482                           ;main.c: 96: test_powerup();
  4483  003C14  ECC8  F02E         	call	_test_powerup	;wreg free
  4484                           
  4485                           ;main.c: 97: DATAEE_WriteByte(0x00, 0x55);
  4486  003C18  0E55               	movlw	85
  4487  003C1A  0100               	movlb	0	; () banked
  4488  003C1C  6F60               	movwf	DATAEE_WriteByte@bData& (0+255),b
  4489  003C1E  0E00               	movlw	0
  4490  003C20  EC89  F032         	call	_DATAEE_WriteByte
  4491  003C24                     l14900:
  4492                           
  4493                           ;main.c: 98: }
  4494                           ;main.c: 101: operationType = USB;
  4495  003C24  0E00               	movlw	0
  4496  003C26  0100               	movlb	0	; () banked
  4497  003C28  6FE8               	movwf	_operationType& (0+255),b
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;main.c: 102: USBapp_handlerState(USB_STARTUP);
  4501  003C2A  0E00               	movlw	0
  4502  003C2C  EC92  F035         	call	_USBapp_handlerState
  4503                           
  4504                           ;main.c: 104: oled_clear();
  4505  003C30  ECD1  F034         	call	_oled_clear	;wreg free
  4506                           
  4507                           ;main.c: 105: oled_putString("Microchip Mote",0,0);
  4508  003C34  0E38               	movlw	low STR_1
  4509  003C36  0100               	movlb	0	; () banked
  4510  003C38  6F71               	movwf	oled_putString@string& (0+255),b
  4511  003C3A  0E7D               	movlw	high STR_1
  4512  003C3C  0100               	movlb	0	; () banked
  4513  003C3E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4514  003C40  0E00               	movlw	0
  4515  003C42  0100               	movlb	0	; () banked
  4516  003C44  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4517  003C46  0E00               	movlw	0
  4518  003C48  0100               	movlb	0	; () banked
  4519  003C4A  6F74               	movwf	oled_putString@start_page& (0+255),b
  4520  003C4C  EC6F  F02F         	call	_oled_putString	;wreg free
  4521                           
  4522                           ;main.c: 106: oled_putString("   LoRa Demo  ",0,1);
  4523  003C50  0E1A               	movlw	low STR_2
  4524  003C52  0100               	movlb	0	; () banked
  4525  003C54  6F71               	movwf	oled_putString@string& (0+255),b
  4526  003C56  0E7D               	movlw	high STR_2
  4527  003C58  0100               	movlb	0	; () banked
  4528  003C5A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4529  003C5C  0E00               	movlw	0
  4530  003C5E  0100               	movlb	0	; () banked
  4531  003C60  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4532  003C62  0E01               	movlw	1
  4533  003C64  0100               	movlb	0	; () banked
  4534  003C66  6F74               	movwf	oled_putString@start_page& (0+255),b
  4535  003C68  EC6F  F02F         	call	_oled_putString	;wreg free
  4536                           
  4537                           ;main.c: 107: oled_putString(" V 1.0.1 Code ",0,3);
  4538  003C6C  0E29               	movlw	low STR_3
  4539  003C6E  0100               	movlb	0	; () banked
  4540  003C70  6F71               	movwf	oled_putString@string& (0+255),b
  4541  003C72  0E7D               	movlw	high STR_3
  4542  003C74  0100               	movlb	0	; () banked
  4543  003C76  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4544  003C78  0E00               	movlw	0
  4545  003C7A  0100               	movlb	0	; () banked
  4546  003C7C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4547  003C7E  0E03               	movlw	3
  4548  003C80  0100               	movlb	0	; () banked
  4549  003C82  6F74               	movwf	oled_putString@start_page& (0+255),b
  4550  003C84  EC6F  F02F         	call	_oled_putString	;wreg free
  4551                           
  4552                           ;main.c: 108: moteApp_delayms(1000);
  4553  003C88  0E03               	movlw	3
  4554  003C8A  0100               	movlb	0	; () banked
  4555  003C8C  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4556  003C8E  0EE8               	movlw	232
  4557  003C90  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4558  003C92  ECFF  F032         	call	_moteApp_delayms	;wreg free
  4559                           
  4560                           ;main.c: 112: {
  4561                           ;main.c: 114: switch (operationType)
  4562                           
  4563                           ;main.c: 111: while(1)
  4564  003C96  D015               	goto	l14928
  4565  003C98  D7FF               	goto	l60
  4566  003C9A                     l14914:
  4567                           
  4568                           ;main.c: 120: USBapp_Handler();
  4569  003C9A  ECC6  F026         	call	_USBapp_Handler	;wreg free
  4570                           
  4571                           ;main.c: 122: operationType = MOTE;
  4572  003C9E  0E01               	movlw	1
  4573  003CA0  0100               	movlb	0	; () banked
  4574  003CA2  6FE8               	movwf	_operationType& (0+255),b
  4575                           
  4576                           ; BSR set to: 0
  4577                           ;main.c: 123: MOTEapp_handlerState(MOTE_STARTUP);
  4578  003CA4  0E01               	movlw	1
  4579  003CA6  EC97  F035         	call	_MOTEapp_handlerState
  4580                           
  4581                           ;main.c: 124: break;
  4582  003CAA  D00B               	goto	l14928
  4583  003CAC                     l14920:
  4584                           
  4585                           ;main.c: 126: if (moteHandler() == MOTE_SWAP)
  4586  003CAC  EC02  F017         	call	_moteHandler	;wreg free
  4587  003CB0  0A04               	xorlw	4
  4588  003CB2  A4D8               	btfss	status,2,c
  4589  003CB4  D006               	goto	l14928
  4590                           
  4591                           ;main.c: 127: {
  4592                           ;main.c: 129: operationType = USB;
  4593  003CB6  0E00               	movlw	0
  4594  003CB8  0100               	movlb	0	; () banked
  4595  003CBA  6FE8               	movwf	_operationType& (0+255),b
  4596                           
  4597                           ; BSR set to: 0
  4598                           ;main.c: 130: USBapp_handlerState(USB_STARTUP);
  4599  003CBC  0E00               	movlw	0
  4600  003CBE  EC92  F035         	call	_USBapp_handlerState
  4601  003CC2                     l14928:
  4602  003CC2  0100               	movlb	0	; () banked
  4603  003CC4  51E8               	movf	_operationType& (0+255),w,b
  4604                           
  4605                           ; Switch size 1, requested type "space"
  4606                           ; Number of cases is 2, Range of values is 0 to 1
  4607                           ; switch strategies available:
  4608                           ; Name         Instructions Cycles
  4609                           ; simple_byte            7     4 (average)
  4610                           ;	Chosen strategy is simple_byte
  4611  003CC6  0A00               	xorlw	0	; case 0
  4612  003CC8  B4D8               	btfsc	status,2,c
  4613  003CCA  D7E7               	goto	l14914
  4614  003CCC  0A01               	xorlw	1	; case 1
  4615  003CCE  B4D8               	btfsc	status,2,c
  4616  003CD0  D7ED               	goto	l14920
  4617  003CD2  D7E2               	goto	l60
  4618  003CD4                     __end_of_main:
  4619                           	opt stack 0
  4620                           tblptru	equ	0xFF8
  4621                           tblptrh	equ	0xFF7
  4622                           tblptrl	equ	0xFF6
  4623                           tablat	equ	0xFF5
  4624                           intcon	equ	0xFF2
  4625                           postinc0	equ	0xFEE
  4626                           wreg	equ	0xFE8
  4627                           postdec1	equ	0xFE5
  4628                           fsr1l	equ	0xFE1
  4629                           status	equ	0xFD8
  4630                           
  4631 ;; *************** function _test_powerup *****************
  4632 ;; Defined at:
  4633 ;;		line 62 in file "../Includes/Board/poweruptest.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;		None
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;		None
  4638 ;; Return value:  Size  Location     Type
  4639 ;;		None               void
  4640 ;; Registers used:
  4641 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4647 ;;      Params:         0       0       0       0       0       0       0       0       0
  4648 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4649 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4650 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4651 ;;Total ram usage:        0 bytes
  4652 ;; Hardware stack levels used:    1
  4653 ;; Hardware stack levels required when called:   17
  4654 ;; This function calls:
  4655 ;;		_EUSART_FlushBuffer
  4656 ;;		_moteApp_delayms
  4657 ;;		_moteApp_testSensors
  4658 ;;		_oled_clear
  4659 ;;		_test_comms
  4660 ;;		_test_leds
  4661 ;;		_test_oled
  4662 ;;		_test_switch
  4663 ;; This function is called by:
  4664 ;;		_main
  4665 ;; This function uses a non-reentrant model
  4666 ;;
  4667                           
  4668                           	psect	text1
  4669  005D90                     __ptext1:
  4670                           	opt stack 0
  4671  005D90                     _test_powerup:
  4672                           	opt stack 13
  4673                           
  4674                           ;poweruptest.c: 65: test_oled();
  4675                           
  4676                           ; BSR set to: 0
  4677                           ;incstack = 0
  4678  005D90  EC17  F029         	call	_test_oled	;wreg free
  4679                           
  4680                           ;poweruptest.c: 66: moteApp_delayms(20);
  4681  005D94  0E00               	movlw	0
  4682  005D96  0100               	movlb	0	; () banked
  4683  005D98  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4684  005D9A  0E14               	movlw	20
  4685  005D9C  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4686  005D9E  ECFF  F032         	call	_moteApp_delayms	;wreg free
  4687                           
  4688                           ;poweruptest.c: 68: test_switch();
  4689  005DA2  EC81  F020         	call	_test_switch	;wreg free
  4690                           
  4691                           ;poweruptest.c: 70: oled_clear();
  4692  005DA6  ECD1  F034         	call	_oled_clear	;wreg free
  4693                           
  4694                           ;poweruptest.c: 71: moteApp_delayms(20);
  4695  005DAA  0E00               	movlw	0
  4696  005DAC  0100               	movlb	0	; () banked
  4697  005DAE  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4698  005DB0  0E14               	movlw	20
  4699  005DB2  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4700  005DB4  ECFF  F032         	call	_moteApp_delayms	;wreg free
  4701                           
  4702                           ;poweruptest.c: 72: test_comms();
  4703  005DB8  EC01  F02F         	call	_test_comms	;wreg free
  4704                           
  4705                           ;poweruptest.c: 73: moteApp_delayms(20);
  4706  005DBC  0E00               	movlw	0
  4707  005DBE  0100               	movlb	0	; () banked
  4708  005DC0  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4709  005DC2  0E14               	movlw	20
  4710  005DC4  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4711  005DC6  ECFF  F032         	call	_moteApp_delayms	;wreg free
  4712                           
  4713                           ;poweruptest.c: 75: test_leds();
  4714  005DCA  ECA5  F02F         	call	_test_leds	;wreg free
  4715                           
  4716                           ;poweruptest.c: 78: moteApp_delayms(20);
  4717  005DCE  0E00               	movlw	0
  4718  005DD0  0100               	movlb	0	; () banked
  4719  005DD2  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4720  005DD4  0E14               	movlw	20
  4721  005DD6  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4722  005DD8  ECFF  F032         	call	_moteApp_delayms	;wreg free
  4723                           
  4724                           ;poweruptest.c: 79: EUSART_FlushBuffer();
  4725  005DDC  EC73  F031         	call	_EUSART_FlushBuffer	;wreg free
  4726                           
  4727                           ;poweruptest.c: 80: moteApp_delayms(20);
  4728  005DE0  0E00               	movlw	0
  4729  005DE2  0100               	movlb	0	; () banked
  4730  005DE4  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4731  005DE6  0E14               	movlw	20
  4732  005DE8  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4733  005DEA  ECFF  F032         	call	_moteApp_delayms	;wreg free
  4734                           
  4735                           ;poweruptest.c: 81: moteApp_testSensors();
  4736  005DEE  EC6B  F022         	call	_moteApp_testSensors	;wreg free
  4737                           
  4738                           ;poweruptest.c: 82: moteApp_delayms(3000);
  4739  005DF2  0E0B               	movlw	11
  4740  005DF4  0100               	movlb	0	; () banked
  4741  005DF6  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  4742  005DF8  0EB8               	movlw	184
  4743  005DFA  6F60               	movwf	moteApp_delayms@length& (0+255),b
  4744  005DFC  ECFF  F032         	call	_moteApp_delayms	;wreg free
  4745  005E00  0012               	return		;funcret
  4746  005E02                     __end_of_test_powerup:
  4747                           	opt stack 0
  4748                           tblptru	equ	0xFF8
  4749                           tblptrh	equ	0xFF7
  4750                           tblptrl	equ	0xFF6
  4751                           tablat	equ	0xFF5
  4752                           intcon	equ	0xFF2
  4753                           postinc0	equ	0xFEE
  4754                           wreg	equ	0xFE8
  4755                           postdec1	equ	0xFE5
  4756                           fsr1l	equ	0xFE1
  4757                           status	equ	0xFD8
  4758                           
  4759 ;; *************** function _test_switch *****************
  4760 ;; Defined at:
  4761 ;;		line 99 in file "../Includes/Board/poweruptest.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;		None
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;  timeout         2   23[BANK0 ] unsigned int 
  4766 ;;  buttonCheck     1   25[BANK0 ] unsigned char 
  4767 ;; Return value:  Size  Location     Type
  4768 ;;		None               void
  4769 ;; Registers used:
  4770 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4776 ;;      Params:         0       0       0       0       0       0       0       0       0
  4777 ;;      Locals:         0       3       0       0       0       0       0       0       0
  4778 ;;      Temps:          0       1       0       0       0       0       0       0       0
  4779 ;;      Totals:         0       4       0       0       0       0       0       0       0
  4780 ;;Total ram usage:        4 bytes
  4781 ;; Hardware stack levels used:    1
  4782 ;; Hardware stack levels required when called:   16
  4783 ;; This function calls:
  4784 ;;		_oled_clear
  4785 ;;		_oled_putString
  4786 ;; This function is called by:
  4787 ;;		_test_powerup
  4788 ;; This function uses a non-reentrant model
  4789 ;;
  4790                           
  4791                           	psect	text2
  4792  004102                     __ptext2:
  4793                           	opt stack 0
  4794  004102                     _test_switch:
  4795                           	opt stack 13
  4796                           
  4797                           ;poweruptest.c: 101: uint16_t timeout = 500;
  4798                           
  4799                           ;incstack = 0
  4800  004102  0E01               	movlw	1
  4801  004104  0100               	movlb	0	; () banked
  4802  004106  6F78               	movwf	(test_switch@timeout+1)& (0+255),b
  4803  004108  0EF4               	movlw	244
  4804  00410A  6F77               	movwf	test_switch@timeout& (0+255),b
  4805                           
  4806                           ;poweruptest.c: 102: uint8_t buttonCheck = 0x00;
  4807  00410C  0E00               	movlw	0
  4808  00410E  0100               	movlb	0	; () banked
  4809  004110  6F79               	movwf	test_switch@buttonCheck& (0+255),b
  4810                           
  4811                           ; BSR set to: 0
  4812                           ;poweruptest.c: 103: oled_clear();
  4813  004112  ECD1  F034         	call	_oled_clear	;wreg free
  4814                           
  4815                           ;poweruptest.c: 104: oled_putString("Button Test:",0,0);
  4816  004116  0E01               	movlw	low STR_10
  4817  004118  0100               	movlb	0	; () banked
  4818  00411A  6F71               	movwf	oled_putString@string& (0+255),b
  4819  00411C  0E7E               	movlw	high STR_10
  4820  00411E  0100               	movlb	0	; () banked
  4821  004120  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4822  004122  0E00               	movlw	0
  4823  004124  0100               	movlb	0	; () banked
  4824  004126  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4825  004128  0E00               	movlw	0
  4826  00412A  0100               	movlb	0	; () banked
  4827  00412C  6F74               	movwf	oled_putString@start_page& (0+255),b
  4828  00412E  EC6F  F02F         	call	_oled_putString	;wreg free
  4829                           
  4830                           ;poweruptest.c: 106: if( (PORTBbits.RB1 == 0) || (PORTBbits.RB0 == 0) )
  4831  004132  B281               	btfsc	3969,1,c	;volatile
  4832  004134  A081               	btfss	3969,0,c	;volatile
  4833  004136  D001               	goto	l13552
  4834  004138  D00F               	goto	l13554
  4835  00413A                     l13552:
  4836                           
  4837                           ;poweruptest.c: 107: {
  4838                           ;poweruptest.c: 108: oled_putString("Button FAIL",0,3);
  4839  00413A  0E7D               	movlw	low STR_11
  4840  00413C  0100               	movlb	0	; () banked
  4841  00413E  6F71               	movwf	oled_putString@string& (0+255),b
  4842  004140  0E7E               	movlw	high STR_11
  4843  004142  0100               	movlb	0	; () banked
  4844  004144  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4845  004146  0E00               	movlw	0
  4846  004148  0100               	movlb	0	; () banked
  4847  00414A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4848  00414C  0E03               	movlw	3
  4849  00414E  0100               	movlb	0	; () banked
  4850  004150  6F74               	movwf	oled_putString@start_page& (0+255),b
  4851  004152  EC6F  F02F         	call	_oled_putString	;wreg free
  4852                           
  4853                           ;poweruptest.c: 109: }
  4854  004156  D047               	goto	l13572
  4855  004158                     l13554:
  4856                           
  4857                           ;poweruptest.c: 110: else
  4858                           ;poweruptest.c: 111: {
  4859                           ;poweruptest.c: 112: oled_putString("Press Button",0,1);
  4860  004158  0E28               	movlw	low STR_12
  4861  00415A  0100               	movlb	0	; () banked
  4862  00415C  6F71               	movwf	oled_putString@string& (0+255),b
  4863  00415E  0E7E               	movlw	high STR_12
  4864  004160  0100               	movlb	0	; () banked
  4865  004162  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4866  004164  0E00               	movlw	0
  4867  004166  0100               	movlb	0	; () banked
  4868  004168  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4869  00416A  0E01               	movlw	1
  4870  00416C  0100               	movlb	0	; () banked
  4871  00416E  6F74               	movwf	oled_putString@start_page& (0+255),b
  4872  004170  EC6F  F02F         	call	_oled_putString	;wreg free
  4873                           
  4874                           ;poweruptest.c: 113: }
  4875                           ;poweruptest.c: 114: while(timeout--)
  4876  004174  D038               	goto	l13572
  4877  004176                     l126:
  4878                           
  4879                           ; BSR set to: 0
  4880                           ;poweruptest.c: 115: {
  4881                           ;poweruptest.c: 116: if(PORTBbits.RB1 == 0)
  4882  004176  B281               	btfsc	3969,1,c	;volatile
  4883  004178  D013               	goto	l13560
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;poweruptest.c: 117: {
  4887                           ;poweruptest.c: 118: oled_putString("Button1 PASS",0,2);
  4888  00417A  0E0E               	movlw	low STR_13
  4889  00417C  0100               	movlb	0	; () banked
  4890  00417E  6F71               	movwf	oled_putString@string& (0+255),b
  4891  004180  0E7E               	movlw	high STR_13
  4892  004182  0100               	movlb	0	; () banked
  4893  004184  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4894  004186  0E00               	movlw	0
  4895  004188  0100               	movlb	0	; () banked
  4896  00418A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4897  00418C  0E02               	movlw	2
  4898  00418E  0100               	movlb	0	; () banked
  4899  004190  6F74               	movwf	oled_putString@start_page& (0+255),b
  4900  004192  EC6F  F02F         	call	_oled_putString	;wreg free
  4901                           
  4902                           ;poweruptest.c: 119: buttonCheck = buttonCheck + 0x08;
  4903  004196  0100               	movlb	0	; () banked
  4904  004198  5179               	movf	test_switch@buttonCheck& (0+255),w,b
  4905  00419A  0F08               	addlw	8
  4906  00419C  0100               	movlb	0	; () banked
  4907  00419E  6F79               	movwf	test_switch@buttonCheck& (0+255),b
  4908  0041A0                     l13560:
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;poweruptest.c: 120: }
  4912                           ;poweruptest.c: 121: if(PORTBbits.RB0 == 0)
  4913  0041A0  B081               	btfsc	3969,0,c	;volatile
  4914  0041A2  D013               	goto	l13566
  4915                           
  4916                           ; BSR set to: 0
  4917                           ;poweruptest.c: 122: {
  4918                           ;poweruptest.c: 123: oled_putString("Button2 PASS",0,3);
  4919  0041A4  0E1B               	movlw	low STR_14
  4920  0041A6  0100               	movlb	0	; () banked
  4921  0041A8  6F71               	movwf	oled_putString@string& (0+255),b
  4922  0041AA  0E7E               	movlw	high STR_14
  4923  0041AC  0100               	movlb	0	; () banked
  4924  0041AE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  4925  0041B0  0E00               	movlw	0
  4926  0041B2  0100               	movlb	0	; () banked
  4927  0041B4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  4928  0041B6  0E03               	movlw	3
  4929  0041B8  0100               	movlb	0	; () banked
  4930  0041BA  6F74               	movwf	oled_putString@start_page& (0+255),b
  4931  0041BC  EC6F  F02F         	call	_oled_putString	;wreg free
  4932                           
  4933                           ;poweruptest.c: 124: buttonCheck = buttonCheck + 0x80;
  4934  0041C0  0100               	movlb	0	; () banked
  4935  0041C2  5179               	movf	test_switch@buttonCheck& (0+255),w,b
  4936  0041C4  0F80               	addlw	128
  4937  0041C6  0100               	movlb	0	; () banked
  4938  0041C8  6F79               	movwf	test_switch@buttonCheck& (0+255),b
  4939  0041CA                     l13566:
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;poweruptest.c: 125: }
  4943                           ;poweruptest.c: 126: if (buttonCheck == 0x88)
  4944  0041CA  0E88               	movlw	136
  4945  0041CC  0100               	movlb	0	; () banked
  4946  0041CE  1979               	xorwf	test_switch@buttonCheck& (0+255),w,b
  4947  0041D0  B4D8               	btfsc	status,2,c
  4948  0041D2  0012               	return	
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;poweruptest.c: 129: }
  4952                           ;poweruptest.c: 130: _delay((unsigned long)((10)*(48000000/4000.0)));
  4953                           
  4954                           ; BSR set to: 0
  4955                           
  4956                           ; BSR set to: 0
  4957                           ;poweruptest.c: 127: {
  4958                           ;poweruptest.c: 128: break;
  4959  0041D4  0E9C               	movlw	156
  4960  0041D6  0100               	movlb	0	; () banked
  4961  0041D8  6F76               	movwf	??_test_switch& (0+255),b
  4962  0041DA  0ED7               	movlw	215
  4963  0041DC                     u14267:
  4964  0041DC  2EE8               	decfsz	wreg,f,c
  4965  0041DE  D7FE               	goto	u14267
  4966  0041E0  2F76               	decfsz	??_test_switch& (0+255),f,b
  4967  0041E2  D7FC               	goto	u14267
  4968  0041E4  F000               	nop	
  4969  0041E6                     l13572:
  4970  0041E6  0100               	movlb	0	; () banked
  4971  0041E8  0777               	decf	test_switch@timeout& (0+255),f,b
  4972  0041EA  A0D8               	btfss	status,0,c
  4973  0041EC  0778               	decf	(test_switch@timeout+1)& (0+255),f,b
  4974  0041EE  0100               	movlb	0	; () banked
  4975  0041F0  2977               	incf	test_switch@timeout& (0+255),w,b
  4976  0041F2  E1C1               	bnz	l126
  4977  0041F4  0100               	movlb	0	; () banked
  4978  0041F6  2978               	incf	(test_switch@timeout+1)& (0+255),w,b
  4979  0041F8  B4D8               	btfsc	status,2,c
  4980  0041FA  0012               	return	
  4981  0041FC  D7BC               	goto	l126
  4982  0041FE                     __end_of_test_switch:
  4983                           	opt stack 0
  4984                           tblptru	equ	0xFF8
  4985                           tblptrh	equ	0xFF7
  4986                           tblptrl	equ	0xFF6
  4987                           tablat	equ	0xFF5
  4988                           intcon	equ	0xFF2
  4989                           postinc0	equ	0xFEE
  4990                           wreg	equ	0xFE8
  4991                           postdec1	equ	0xFE5
  4992                           fsr1l	equ	0xFE1
  4993                           status	equ	0xFD8
  4994                           
  4995 ;; *************** function _test_oled *****************
  4996 ;; Defined at:
  4997 ;;		line 86 in file "../Includes/Board/poweruptest.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;		None
  5000 ;; Auto vars:     Size  Location     Type
  5001 ;;		None
  5002 ;; Return value:  Size  Location     Type
  5003 ;;		None               void
  5004 ;; Registers used:
  5005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5006 ;; Tracked objects:
  5007 ;;		On entry : 0/0
  5008 ;;		On exit  : 0/0
  5009 ;;		Unchanged: 0/0
  5010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5011 ;;      Params:         0       0       0       0       0       0       0       0       0
  5012 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5013 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5014 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5015 ;;Total ram usage:        0 bytes
  5016 ;; Hardware stack levels used:    1
  5017 ;; Hardware stack levels required when called:   16
  5018 ;; This function calls:
  5019 ;;		_oled_clear
  5020 ;;		_oled_putString
  5021 ;; This function is called by:
  5022 ;;		_test_powerup
  5023 ;; This function uses a non-reentrant model
  5024 ;;
  5025                           
  5026                           	psect	text3
  5027  00522E                     __ptext3:
  5028                           	opt stack 0
  5029  00522E                     _test_oled:
  5030                           	opt stack 13
  5031                           
  5032                           ;poweruptest.c: 88: oled_clear();
  5033                           
  5034                           ; BSR set to: 0
  5035                           ;incstack = 0
  5036  00522E  ECD1  F034         	call	_oled_clear	;wreg free
  5037                           
  5038                           ;poweruptest.c: 90: oled_putString("MoTe v .",0,0);
  5039  005232  0E3E               	movlw	low STR_4
  5040  005234  0100               	movlb	0	; () banked
  5041  005236  6F71               	movwf	oled_putString@string& (0+255),b
  5042  005238  0E7F               	movlw	high STR_4
  5043  00523A  0100               	movlb	0	; () banked
  5044  00523C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5045  00523E  0E00               	movlw	0
  5046  005240  0100               	movlb	0	; () banked
  5047  005242  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5048  005244  0E00               	movlw	0
  5049  005246  0100               	movlb	0	; () banked
  5050  005248  6F74               	movwf	oled_putString@start_page& (0+255),b
  5051  00524A  EC6F  F02F         	call	_oled_putString	;wreg free
  5052                           
  5053                           ;poweruptest.c: 91: oled_putString("0",0,6);
  5054  00524E  0E97               	movlw	low (STR_164+11)
  5055  005250  0100               	movlb	0	; () banked
  5056  005252  6F71               	movwf	oled_putString@string& (0+255),b
  5057  005254  0E7D               	movlw	high (STR_164+11)
  5058  005256  0100               	movlb	0	; () banked
  5059  005258  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5060  00525A  0E00               	movlw	0
  5061  00525C  0100               	movlb	0	; () banked
  5062  00525E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5063  005260  0E06               	movlw	6
  5064  005262  0100               	movlb	0	; () banked
  5065  005264  6F74               	movwf	oled_putString@start_page& (0+255),b
  5066  005266  EC6F  F02F         	call	_oled_putString	;wreg free
  5067                           
  5068                           ;poweruptest.c: 92: oled_putString("1",0,8);
  5069  00526A  0EA4               	movlw	low (STR_166+11)
  5070  00526C  0100               	movlb	0	; () banked
  5071  00526E  6F71               	movwf	oled_putString@string& (0+255),b
  5072  005270  0E7D               	movlw	high (STR_166+11)
  5073  005272  0100               	movlb	0	; () banked
  5074  005274  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5075  005276  0E00               	movlw	0
  5076  005278  0100               	movlb	0	; () banked
  5077  00527A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5078  00527C  0E08               	movlw	8
  5079  00527E  0100               	movlb	0	; () banked
  5080  005280  6F74               	movwf	oled_putString@start_page& (0+255),b
  5081  005282  EC6F  F02F         	call	_oled_putString	;wreg free
  5082                           
  5083                           ;poweruptest.c: 93: oled_putString("Build Date/Time",0,1);
  5084  005286  0EDD               	movlw	low STR_7
  5085  005288  0100               	movlb	0	; () banked
  5086  00528A  6F71               	movwf	oled_putString@string& (0+255),b
  5087  00528C  0E7C               	movlw	high STR_7
  5088  00528E  0100               	movlb	0	; () banked
  5089  005290  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5090  005292  0E00               	movlw	0
  5091  005294  0100               	movlb	0	; () banked
  5092  005296  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5093  005298  0E01               	movlw	1
  5094  00529A  0100               	movlb	0	; () banked
  5095  00529C  6F74               	movwf	oled_putString@start_page& (0+255),b
  5096  00529E  EC6F  F02F         	call	_oled_putString	;wreg free
  5097                           
  5098                           ;poweruptest.c: 94: oled_putString("Feb 26 2017",0,2);
  5099  0052A2  0E71               	movlw	low STR_8
  5100  0052A4  0100               	movlb	0	; () banked
  5101  0052A6  6F71               	movwf	oled_putString@string& (0+255),b
  5102  0052A8  0E7E               	movlw	high STR_8
  5103  0052AA  0100               	movlb	0	; () banked
  5104  0052AC  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5105  0052AE  0E00               	movlw	0
  5106  0052B0  0100               	movlb	0	; () banked
  5107  0052B2  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5108  0052B4  0E02               	movlw	2
  5109  0052B6  0100               	movlb	0	; () banked
  5110  0052B8  6F74               	movwf	oled_putString@start_page& (0+255),b
  5111  0052BA  EC6F  F02F         	call	_oled_putString	;wreg free
  5112                           
  5113                           ;poweruptest.c: 95: oled_putString("18:03:15",0,3);
  5114  0052BE  0E47               	movlw	low STR_9
  5115  0052C0  0100               	movlb	0	; () banked
  5116  0052C2  6F71               	movwf	oled_putString@string& (0+255),b
  5117  0052C4  0E7F               	movlw	high STR_9
  5118  0052C6  0100               	movlb	0	; () banked
  5119  0052C8  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5120  0052CA  0E00               	movlw	0
  5121  0052CC  0100               	movlb	0	; () banked
  5122  0052CE  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5123  0052D0  0E03               	movlw	3
  5124  0052D2  0100               	movlb	0	; () banked
  5125  0052D4  6F74               	movwf	oled_putString@start_page& (0+255),b
  5126  0052D6  EC6F  F02F         	call	_oled_putString	;wreg free
  5127  0052DA  0012               	return		;funcret
  5128  0052DC                     __end_of_test_oled:
  5129                           	opt stack 0
  5130                           tblptru	equ	0xFF8
  5131                           tblptrh	equ	0xFF7
  5132                           tblptrl	equ	0xFF6
  5133                           tablat	equ	0xFF5
  5134                           intcon	equ	0xFF2
  5135                           postinc0	equ	0xFEE
  5136                           wreg	equ	0xFE8
  5137                           postdec1	equ	0xFE5
  5138                           fsr1l	equ	0xFE1
  5139                           status	equ	0xFD8
  5140                           
  5141 ;; *************** function _test_leds *****************
  5142 ;; Defined at:
  5143 ;;		line 147 in file "../Includes/Board/poweruptest.c"
  5144 ;; Parameters:    Size  Location     Type
  5145 ;;		None
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;		None
  5148 ;; Return value:  Size  Location     Type
  5149 ;;		None               void
  5150 ;; Registers used:
  5151 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5152 ;; Tracked objects:
  5153 ;;		On entry : 0/0
  5154 ;;		On exit  : 0/0
  5155 ;;		Unchanged: 0/0
  5156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5157 ;;      Params:         0       0       0       0       0       0       0       0       0
  5158 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5159 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5160 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5161 ;;Total ram usage:        0 bytes
  5162 ;; Hardware stack levels used:    1
  5163 ;; Hardware stack levels required when called:   15
  5164 ;; This function calls:
  5165 ;;		_delayms
  5166 ;;		_oled_putString
  5167 ;; This function is called by:
  5168 ;;		_test_powerup
  5169 ;; This function uses a non-reentrant model
  5170 ;;
  5171                           
  5172                           	psect	text4
  5173  005F4A                     __ptext4:
  5174                           	opt stack 0
  5175  005F4A                     _test_leds:
  5176                           	opt stack 14
  5177                           
  5178                           ;poweruptest.c: 149: oled_putString("LED Test:",0,1);
  5179                           
  5180                           ;incstack = 0
  5181  005F4A  0E07               	movlw	low STR_16
  5182  005F4C  0100               	movlb	0	; () banked
  5183  005F4E  6F71               	movwf	oled_putString@string& (0+255),b
  5184  005F50  0E7F               	movlw	high STR_16
  5185  005F52  0100               	movlb	0	; () banked
  5186  005F54  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5187  005F56  0E00               	movlw	0
  5188  005F58  0100               	movlb	0	; () banked
  5189  005F5A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5190  005F5C  0E01               	movlw	1
  5191  005F5E  0100               	movlb	0	; () banked
  5192  005F60  6F74               	movwf	oled_putString@start_page& (0+255),b
  5193  005F62  EC6F  F02F         	call	_oled_putString	;wreg free
  5194                           
  5195                           ;poweruptest.c: 151: LATAbits.LATA6 = 1;
  5196  005F66  8C89               	bsf	3977,6,c	;volatile
  5197                           
  5198                           ;poweruptest.c: 152: LATAbits.LATA7 = 1;
  5199  005F68  8E89               	bsf	3977,7,c	;volatile
  5200                           
  5201                           ;poweruptest.c: 153: delayms(500);
  5202  005F6A  0E01               	movlw	1
  5203  005F6C  0100               	movlb	0	; () banked
  5204  005F6E  6F61               	movwf	(delayms@t+1)& (0+255),b
  5205  005F70  0EF4               	movlw	244
  5206  005F72  6F60               	movwf	delayms@t& (0+255),b
  5207  005F74  ECC5  F032         	call	_delayms	;wreg free
  5208                           
  5209                           ;poweruptest.c: 154: LATAbits.LATA6 = 0;
  5210  005F78  9C89               	bcf	3977,6,c	;volatile
  5211                           
  5212                           ;poweruptest.c: 155: LATAbits.LATA7 = 0;
  5213  005F7A  9E89               	bcf	3977,7,c	;volatile
  5214                           
  5215                           ;poweruptest.c: 156: delayms(500);
  5216  005F7C  0E01               	movlw	1
  5217  005F7E  0100               	movlb	0	; () banked
  5218  005F80  6F61               	movwf	(delayms@t+1)& (0+255),b
  5219  005F82  0EF4               	movlw	244
  5220  005F84  6F60               	movwf	delayms@t& (0+255),b
  5221  005F86  ECC5  F032         	call	_delayms	;wreg free
  5222                           
  5223                           ;poweruptest.c: 157: LATAbits.LATA6 = 1;
  5224  005F8A  8C89               	bsf	3977,6,c	;volatile
  5225                           
  5226                           ;poweruptest.c: 158: LATAbits.LATA7 = 1;
  5227  005F8C  8E89               	bsf	3977,7,c	;volatile
  5228                           
  5229                           ;poweruptest.c: 159: delayms(500);
  5230  005F8E  0E01               	movlw	1
  5231  005F90  0100               	movlb	0	; () banked
  5232  005F92  6F61               	movwf	(delayms@t+1)& (0+255),b
  5233  005F94  0EF4               	movlw	244
  5234  005F96  6F60               	movwf	delayms@t& (0+255),b
  5235  005F98  ECC5  F032         	call	_delayms	;wreg free
  5236                           
  5237                           ;poweruptest.c: 160: LATAbits.LATA6 = 0;
  5238  005F9C  9C89               	bcf	3977,6,c	;volatile
  5239                           
  5240                           ;poweruptest.c: 161: LATAbits.LATA7 = 0;
  5241  005F9E  9E89               	bcf	3977,7,c	;volatile
  5242                           
  5243                           ;poweruptest.c: 162: delayms(500);
  5244  005FA0  0E01               	movlw	1
  5245  005FA2  0100               	movlb	0	; () banked
  5246  005FA4  6F61               	movwf	(delayms@t+1)& (0+255),b
  5247  005FA6  0EF4               	movlw	244
  5248  005FA8  6F60               	movwf	delayms@t& (0+255),b
  5249  005FAA  ECC5  F032         	call	_delayms	;wreg free
  5250  005FAE  0012               	return		;funcret
  5251  005FB0                     __end_of_test_leds:
  5252                           	opt stack 0
  5253                           tblptru	equ	0xFF8
  5254                           tblptrh	equ	0xFF7
  5255                           tblptrl	equ	0xFF6
  5256                           tablat	equ	0xFF5
  5257                           intcon	equ	0xFF2
  5258                           postinc0	equ	0xFEE
  5259                           wreg	equ	0xFE8
  5260                           postdec1	equ	0xFE5
  5261                           fsr1l	equ	0xFE1
  5262                           status	equ	0xFD8
  5263                           
  5264 ;; *************** function _test_comms *****************
  5265 ;; Defined at:
  5266 ;;		line 134 in file "../Includes/Board/poweruptest.c"
  5267 ;; Parameters:    Size  Location     Type
  5268 ;;		None
  5269 ;; Auto vars:     Size  Location     Type
  5270 ;;		None
  5271 ;; Return value:  Size  Location     Type
  5272 ;;		None               void
  5273 ;; Registers used:
  5274 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5275 ;; Tracked objects:
  5276 ;;		On entry : 0/0
  5277 ;;		On exit  : 0/0
  5278 ;;		Unchanged: 0/0
  5279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5280 ;;      Params:         0       0       0       0       0       0       0       0       0
  5281 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5282 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5283 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5284 ;;Total ram usage:        0 bytes
  5285 ;; Hardware stack levels used:    1
  5286 ;; Hardware stack levels required when called:   15
  5287 ;; This function calls:
  5288 ;;		_delayms
  5289 ;;		_moteApp_toggleLeds
  5290 ;;		_oled_putString
  5291 ;; This function is called by:
  5292 ;;		_test_powerup
  5293 ;; This function uses a non-reentrant model
  5294 ;;
  5295                           
  5296                           	psect	text5
  5297  005E02                     __ptext5:
  5298                           	opt stack 0
  5299  005E02                     _test_comms:
  5300                           	opt stack 14
  5301                           
  5302                           ;poweruptest.c: 136: oled_putString("Comm Test:",0,0);
  5303                           
  5304                           ;incstack = 0
  5305  005E02  0EC0               	movlw	low STR_15
  5306  005E04  0100               	movlb	0	; () banked
  5307  005E06  6F71               	movwf	oled_putString@string& (0+255),b
  5308  005E08  0E7E               	movlw	high STR_15
  5309  005E0A  0100               	movlb	0	; () banked
  5310  005E0C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5311  005E0E  0E00               	movlw	0
  5312  005E10  0100               	movlb	0	; () banked
  5313  005E12  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5314  005E14  0E00               	movlw	0
  5315  005E16  0100               	movlb	0	; () banked
  5316  005E18  6F74               	movwf	oled_putString@start_page& (0+255),b
  5317  005E1A  EC6F  F02F         	call	_oled_putString	;wreg free
  5318                           
  5319                           ;poweruptest.c: 137: moteApp_toggleLeds(1);
  5320  005E1E  0E01               	movlw	1
  5321  005E20  ECFF  F020         	call	_moteApp_toggleLeds
  5322                           
  5323                           ;poweruptest.c: 138: delayms(500);
  5324  005E24  0E01               	movlw	1
  5325  005E26  0100               	movlb	0	; () banked
  5326  005E28  6F61               	movwf	(delayms@t+1)& (0+255),b
  5327  005E2A  0EF4               	movlw	244
  5328  005E2C  6F60               	movwf	delayms@t& (0+255),b
  5329  005E2E  ECC5  F032         	call	_delayms	;wreg free
  5330                           
  5331                           ;poweruptest.c: 139: moteApp_toggleLeds(0);
  5332  005E32  0E00               	movlw	0
  5333  005E34  ECFF  F020         	call	_moteApp_toggleLeds
  5334                           
  5335                           ;poweruptest.c: 140: delayms(500);
  5336  005E38  0E01               	movlw	1
  5337  005E3A  0100               	movlb	0	; () banked
  5338  005E3C  6F61               	movwf	(delayms@t+1)& (0+255),b
  5339  005E3E  0EF4               	movlw	244
  5340  005E40  6F60               	movwf	delayms@t& (0+255),b
  5341  005E42  ECC5  F032         	call	_delayms	;wreg free
  5342                           
  5343                           ;poweruptest.c: 141: moteApp_toggleLeds(1);
  5344  005E46  0E01               	movlw	1
  5345  005E48  ECFF  F020         	call	_moteApp_toggleLeds
  5346                           
  5347                           ;poweruptest.c: 142: delayms(500);
  5348  005E4C  0E01               	movlw	1
  5349  005E4E  0100               	movlb	0	; () banked
  5350  005E50  6F61               	movwf	(delayms@t+1)& (0+255),b
  5351  005E52  0EF4               	movlw	244
  5352  005E54  6F60               	movwf	delayms@t& (0+255),b
  5353  005E56  ECC5  F032         	call	_delayms	;wreg free
  5354                           
  5355                           ;poweruptest.c: 143: moteApp_toggleLeds(0);
  5356  005E5A  0E00               	movlw	0
  5357  005E5C  ECFF  F020         	call	_moteApp_toggleLeds
  5358                           
  5359                           ;poweruptest.c: 144: delayms(500);
  5360  005E60  0E01               	movlw	1
  5361  005E62  0100               	movlb	0	; () banked
  5362  005E64  6F61               	movwf	(delayms@t+1)& (0+255),b
  5363  005E66  0EF4               	movlw	244
  5364  005E68  6F60               	movwf	delayms@t& (0+255),b
  5365  005E6A  ECC5  F032         	call	_delayms	;wreg free
  5366  005E6E  0012               	return		;funcret
  5367  005E70                     __end_of_test_comms:
  5368                           	opt stack 0
  5369                           tblptru	equ	0xFF8
  5370                           tblptrh	equ	0xFF7
  5371                           tblptrl	equ	0xFF6
  5372                           tablat	equ	0xFF5
  5373                           intcon	equ	0xFF2
  5374                           postinc0	equ	0xFEE
  5375                           wreg	equ	0xFE8
  5376                           postdec1	equ	0xFE5
  5377                           fsr1l	equ	0xFE1
  5378                           status	equ	0xFD8
  5379                           
  5380 ;; *************** function _moteApp_toggleLeds *****************
  5381 ;; Defined at:
  5382 ;;		line 1349 in file "../Includes/Board/MOTEapp.c"
  5383 ;; Parameters:    Size  Location     Type
  5384 ;;  state           1    wreg     unsigned char 
  5385 ;; Auto vars:     Size  Location     Type
  5386 ;;  state           1    4[BANK0 ] unsigned char 
  5387 ;; Return value:  Size  Location     Type
  5388 ;;		None               void
  5389 ;; Registers used:
  5390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5391 ;; Tracked objects:
  5392 ;;		On entry : 0/0
  5393 ;;		On exit  : 0/0
  5394 ;;		Unchanged: 0/0
  5395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5396 ;;      Params:         0       0       0       0       0       0       0       0       0
  5397 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5398 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5399 ;;      Totals:         0       2       0       0       0       0       0       0       0
  5400 ;;Total ram usage:        2 bytes
  5401 ;; Hardware stack levels used:    1
  5402 ;; Hardware stack levels required when called:   14
  5403 ;; This function calls:
  5404 ;;		_sendCommand
  5405 ;; This function is called by:
  5406 ;;		_test_comms
  5407 ;; This function uses a non-reentrant model
  5408 ;;
  5409                           
  5410                           	psect	text6
  5411  0041FE                     __ptext6:
  5412                           	opt stack 0
  5413  0041FE                     _moteApp_toggleLeds:
  5414                           	opt stack 14
  5415                           
  5416                           ;incstack = 0
  5417                           ;moteApp_toggleLeds@state stored from wreg
  5418  0041FE  0100               	movlb	0	; () banked
  5419  004200  6F64               	movwf	moteApp_toggleLeds@state& (0+255),b
  5420                           
  5421                           ;MOTEapp.c: 1351: _delay((unsigned long)((16)*(48000000/4000.0)));
  5422  004202  0EFA               	movlw	250
  5423  004204  0100               	movlb	0	; () banked
  5424  004206  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5425  004208  0E58               	movlw	88
  5426  00420A                     u14277:
  5427  00420A  2EE8               	decfsz	wreg,f,c
  5428  00420C  D7FE               	goto	u14277
  5429  00420E  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5430  004210  D7FC               	goto	u14277
  5431  004212  D000               	nop2	
  5432                           
  5433                           ;MOTEapp.c: 1352: _delay((unsigned long)((16)*(48000000/4000.0)));
  5434  004214  0EFA               	movlw	250
  5435  004216  0100               	movlb	0	; () banked
  5436  004218  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5437  00421A  0E58               	movlw	88
  5438  00421C                     u14287:
  5439  00421C  2EE8               	decfsz	wreg,f,c
  5440  00421E  D7FE               	goto	u14287
  5441  004220  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5442  004222  D7FC               	goto	u14287
  5443  004224  D000               	nop2	
  5444                           
  5445                           ;MOTEapp.c: 1353: _delay((unsigned long)((16)*(48000000/4000.0)));
  5446  004226  0EFA               	movlw	250
  5447  004228  0100               	movlb	0	; () banked
  5448  00422A  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5449  00422C  0E58               	movlw	88
  5450  00422E                     u14297:
  5451  00422E  2EE8               	decfsz	wreg,f,c
  5452  004230  D7FE               	goto	u14297
  5453  004232  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5454  004234  D7FC               	goto	u14297
  5455  004236  D000               	nop2	
  5456                           
  5457                           ;MOTEapp.c: 1354: if (state)
  5458  004238  0100               	movlb	0	; () banked
  5459  00423A  5164               	movf	moteApp_toggleLeds@state& (0+255),w,b
  5460  00423C  0100               	movlb	0	; () banked
  5461  00423E  B4D8               	btfsc	status,2,c
  5462  004240  D02C               	goto	l12906
  5463                           
  5464                           ; BSR set to: 0
  5465                           ;MOTEapp.c: 1355: {
  5466                           ;MOTEapp.c: 1356: sendCommand("sys set pindig GPIO10 1\r\n");
  5467  004242  0EE6               	movlw	low STR_181
  5468  004244  0100               	movlb	0	; () banked
  5469  004246  6F61               	movwf	sendCommand@string& (0+255),b
  5470  004248  0E79               	movlw	high STR_181
  5471  00424A  0100               	movlb	0	; () banked
  5472  00424C  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5473  00424E  ECD6  F033         	call	_sendCommand	;wreg free
  5474                           
  5475                           ;MOTEapp.c: 1357: _delay((unsigned long)((16)*(48000000/4000.0)));
  5476  004252  0EFA               	movlw	250
  5477  004254  0100               	movlb	0	; () banked
  5478  004256  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5479  004258  0E58               	movlw	88
  5480  00425A                     u14307:
  5481  00425A  2EE8               	decfsz	wreg,f,c
  5482  00425C  D7FE               	goto	u14307
  5483  00425E  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5484  004260  D7FC               	goto	u14307
  5485  004262  D000               	nop2	
  5486                           
  5487                           ;MOTEapp.c: 1358: _delay((unsigned long)((16)*(48000000/4000.0)));
  5488  004264  0EFA               	movlw	250
  5489  004266  0100               	movlb	0	; () banked
  5490  004268  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5491  00426A  0E58               	movlw	88
  5492  00426C                     u14317:
  5493  00426C  2EE8               	decfsz	wreg,f,c
  5494  00426E  D7FE               	goto	u14317
  5495  004270  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5496  004272  D7FC               	goto	u14317
  5497  004274  D000               	nop2	
  5498                           
  5499                           ;MOTEapp.c: 1359: _delay((unsigned long)((16)*(48000000/4000.0)));
  5500  004276  0EFA               	movlw	250
  5501  004278  0100               	movlb	0	; () banked
  5502  00427A  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5503  00427C  0E58               	movlw	88
  5504  00427E                     u14327:
  5505  00427E  2EE8               	decfsz	wreg,f,c
  5506  004280  D7FE               	goto	u14327
  5507  004282  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5508  004284  D7FC               	goto	u14327
  5509  004286  D000               	nop2	
  5510                           
  5511                           ;MOTEapp.c: 1360: sendCommand("sys set pindig GPIO11 1\r\n");
  5512  004288  0E00               	movlw	low STR_182
  5513  00428A  0100               	movlb	0	; () banked
  5514  00428C  6F61               	movwf	sendCommand@string& (0+255),b
  5515  00428E  0E7A               	movlw	high STR_182
  5516  004290  0100               	movlb	0	; () banked
  5517  004292  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5518  004294  ECD6  F033         	call	_sendCommand	;wreg free
  5519                           
  5520                           ;MOTEapp.c: 1361: }
  5521  004298  0012               	return	
  5522  00429A                     l12906:
  5523                           
  5524                           ;MOTEapp.c: 1362: else
  5525                           ;MOTEapp.c: 1363: {
  5526                           ;MOTEapp.c: 1364: sendCommand("sys set pindig GPIO10 0\r\n");
  5527  00429A  0EB2               	movlw	low STR_183
  5528  00429C  0100               	movlb	0	; () banked
  5529  00429E  6F61               	movwf	sendCommand@string& (0+255),b
  5530  0042A0  0E79               	movlw	high STR_183
  5531  0042A2  0100               	movlb	0	; () banked
  5532  0042A4  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5533  0042A6  ECD6  F033         	call	_sendCommand	;wreg free
  5534                           
  5535                           ;MOTEapp.c: 1365: _delay((unsigned long)((16)*(48000000/4000.0)));
  5536  0042AA  0EFA               	movlw	250
  5537  0042AC  0100               	movlb	0	; () banked
  5538  0042AE  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5539  0042B0  0E58               	movlw	88
  5540  0042B2                     u14337:
  5541  0042B2  2EE8               	decfsz	wreg,f,c
  5542  0042B4  D7FE               	goto	u14337
  5543  0042B6  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5544  0042B8  D7FC               	goto	u14337
  5545  0042BA  D000               	nop2	
  5546                           
  5547                           ;MOTEapp.c: 1366: _delay((unsigned long)((16)*(48000000/4000.0)));
  5548  0042BC  0EFA               	movlw	250
  5549  0042BE  0100               	movlb	0	; () banked
  5550  0042C0  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5551  0042C2  0E58               	movlw	88
  5552  0042C4                     u14347:
  5553  0042C4  2EE8               	decfsz	wreg,f,c
  5554  0042C6  D7FE               	goto	u14347
  5555  0042C8  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5556  0042CA  D7FC               	goto	u14347
  5557  0042CC  D000               	nop2	
  5558                           
  5559                           ;MOTEapp.c: 1367: _delay((unsigned long)((16)*(48000000/4000.0)));
  5560  0042CE  0EFA               	movlw	250
  5561  0042D0  0100               	movlb	0	; () banked
  5562  0042D2  6F63               	movwf	??_moteApp_toggleLeds& (0+255),b
  5563  0042D4  0E58               	movlw	88
  5564  0042D6                     u14357:
  5565  0042D6  2EE8               	decfsz	wreg,f,c
  5566  0042D8  D7FE               	goto	u14357
  5567  0042DA  2F63               	decfsz	??_moteApp_toggleLeds& (0+255),f,b
  5568  0042DC  D7FC               	goto	u14357
  5569  0042DE  D000               	nop2	
  5570                           
  5571                           ;MOTEapp.c: 1368: sendCommand("sys set pindig GPIO11 0\r\n");
  5572  0042E0  0ECC               	movlw	low STR_184
  5573  0042E2  0100               	movlb	0	; () banked
  5574  0042E4  6F61               	movwf	sendCommand@string& (0+255),b
  5575  0042E6  0E79               	movlw	high STR_184
  5576  0042E8  0100               	movlb	0	; () banked
  5577  0042EA  6F62               	movwf	(sendCommand@string+1)& (0+255),b
  5578  0042EC  ECD6  F033         	call	_sendCommand	;wreg free
  5579  0042F0  0012               	return	
  5580  0042F2                     __end_of_moteApp_toggleLeds:
  5581                           	opt stack 0
  5582                           tblptru	equ	0xFF8
  5583                           tblptrh	equ	0xFF7
  5584                           tblptrl	equ	0xFF6
  5585                           tablat	equ	0xFF5
  5586                           intcon	equ	0xFF2
  5587                           postinc0	equ	0xFEE
  5588                           wreg	equ	0xFE8
  5589                           postdec1	equ	0xFE5
  5590                           fsr1l	equ	0xFE1
  5591                           status	equ	0xFD8
  5592                           
  5593 ;; *************** function _delayms *****************
  5594 ;; Defined at:
  5595 ;;		line 54 in file "../Includes/Board/poweruptest.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;  t               2    0[BANK0 ] unsigned int 
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;  i               2    3[BANK0 ] unsigned int 
  5600 ;; Return value:  Size  Location     Type
  5601 ;;		None               void
  5602 ;; Registers used:
  5603 ;;		wreg, status,2, status,0
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5609 ;;      Params:         0       2       0       0       0       0       0       0       0
  5610 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5611 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5612 ;;      Totals:         0       5       0       0       0       0       0       0       0
  5613 ;;Total ram usage:        5 bytes
  5614 ;; Hardware stack levels used:    1
  5615 ;; Hardware stack levels required when called:   11
  5616 ;; This function calls:
  5617 ;;		Nothing
  5618 ;; This function is called by:
  5619 ;;		_test_comms
  5620 ;;		_test_leds
  5621 ;; This function uses a non-reentrant model
  5622 ;;
  5623                           
  5624                           	psect	text7
  5625  00658A                     __ptext7:
  5626                           	opt stack 0
  5627  00658A                     _delayms:
  5628                           	opt stack 17
  5629                           
  5630                           ;poweruptest.c: 56: uint16_t i;
  5631                           ;poweruptest.c: 57: for(i = 0; i < t; i++)
  5632                           
  5633                           ;incstack = 0
  5634  00658A  0E00               	movlw	0
  5635  00658C  0100               	movlb	0	; () banked
  5636  00658E  6F64               	movwf	(delayms@i+1)& (0+255),b
  5637  006590  0E00               	movlw	0
  5638  006592  6F63               	movwf	delayms@i& (0+255),b
  5639  006594  D00C               	goto	l109
  5640  006596                     l12888:
  5641                           
  5642                           ; BSR set to: 0
  5643                           ;poweruptest.c: 58: {
  5644                           ;poweruptest.c: 59: _delay((unsigned long)((1)*(48000000/4000.0)));
  5645  006596  0E10               	movlw	16
  5646  006598  0100               	movlb	0	; () banked
  5647  00659A  6F62               	movwf	??_delayms& (0+255),b
  5648  00659C  0E94               	movlw	148
  5649  00659E                     u14367:
  5650  00659E  2EE8               	decfsz	wreg,f,c
  5651  0065A0  D7FE               	goto	u14367
  5652  0065A2  2F62               	decfsz	??_delayms& (0+255),f,b
  5653  0065A4  D7FC               	goto	u14367
  5654  0065A6  D000               	nop2	
  5655  0065A8  0100               	movlb	0	; () banked
  5656  0065AA  4B63               	infsnz	delayms@i& (0+255),f,b
  5657  0065AC  2B64               	incf	(delayms@i+1)& (0+255),f,b
  5658  0065AE                     l109:
  5659                           
  5660                           ; BSR set to: 0
  5661  0065AE  0100               	movlb	0	; () banked
  5662  0065B0  5160               	movf	delayms@t& (0+255),w,b
  5663  0065B2  0100               	movlb	0	; () banked
  5664  0065B4  5D63               	subwf	delayms@i& (0+255),w,b
  5665  0065B6  0100               	movlb	0	; () banked
  5666  0065B8  5161               	movf	(delayms@t+1)& (0+255),w,b
  5667  0065BA  0100               	movlb	0	; () banked
  5668  0065BC  5964               	subwfb	(delayms@i+1)& (0+255),w,b
  5669  0065BE  B0D8               	btfsc	status,0,c
  5670  0065C0  0012               	return	
  5671  0065C2  D7E9               	goto	l12888
  5672  0065C4                     __end_of_delayms:
  5673                           	opt stack 0
  5674                           tblptru	equ	0xFF8
  5675                           tblptrh	equ	0xFF7
  5676                           tblptrl	equ	0xFF6
  5677                           tablat	equ	0xFF5
  5678                           intcon	equ	0xFF2
  5679                           postinc0	equ	0xFEE
  5680                           wreg	equ	0xFE8
  5681                           postdec1	equ	0xFE5
  5682                           fsr1l	equ	0xFE1
  5683                           status	equ	0xFD8
  5684                           
  5685 ;; *************** function _moteApp_testSensors *****************
  5686 ;; Defined at:
  5687 ;;		line 1453 in file "../Includes/Board/MOTEapp.c"
  5688 ;; Parameters:    Size  Location     Type
  5689 ;;		None
  5690 ;; Auto vars:     Size  Location     Type
  5691 ;;  dummyValue      2    0        unsigned int 
  5692 ;; Return value:  Size  Location     Type
  5693 ;;		None               void
  5694 ;; Registers used:
  5695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5696 ;; Tracked objects:
  5697 ;;		On entry : 0/0
  5698 ;;		On exit  : 0/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5701 ;;      Params:         0       0       0       0       0       0       0       0       0
  5702 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5703 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5704 ;;      Totals:         0       1       0       0       0       0       0       0       0
  5705 ;;Total ram usage:        1 bytes
  5706 ;; Hardware stack levels used:    1
  5707 ;; Hardware stack levels required when called:   16
  5708 ;; This function calls:
  5709 ;;		_ADC_TempConversion
  5710 ;;		_moteApp_convertSensorValue
  5711 ;;		_moteApp_getLightValue
  5712 ;;		_moteApp_getTempValue
  5713 ;;		_moteApp_setSensorsInput
  5714 ;;		_oled_clear
  5715 ;;		_oled_putChar
  5716 ;;		_oled_putString
  5717 ;;		_oled_putint8
  5718 ;; This function is called by:
  5719 ;;		_test_powerup
  5720 ;; This function uses a non-reentrant model
  5721 ;;
  5722                           
  5723                           	psect	text8
  5724  0044D6                     __ptext8:
  5725                           	opt stack 0
  5726  0044D6                     _moteApp_testSensors:
  5727                           	opt stack 13
  5728                           
  5729                           ;MOTEapp.c: 1456: moteApp_setSensorsInput();
  5730                           
  5731                           ; BSR set to: 0
  5732                           ;incstack = 0
  5733  0044D6  EC91  F02C         	call	_moteApp_setSensorsInput	;wreg free
  5734                           
  5735                           ;MOTEapp.c: 1458: uint16_t dummyValue;
  5736                           ;MOTEapp.c: 1459: oled_clear();
  5737  0044DA  ECD1  F034         	call	_oled_clear	;wreg free
  5738                           
  5739                           ;MOTEapp.c: 1460: oled_putString("ADC Test",0,0);
  5740  0044DE  0E59               	movlw	low STR_17
  5741  0044E0  0100               	movlb	0	; () banked
  5742  0044E2  6F71               	movwf	oled_putString@string& (0+255),b
  5743  0044E4  0E7F               	movlw	high STR_17
  5744  0044E6  0100               	movlb	0	; () banked
  5745  0044E8  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5746  0044EA  0E00               	movlw	0
  5747  0044EC  0100               	movlb	0	; () banked
  5748  0044EE  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5749  0044F0  0E00               	movlw	0
  5750  0044F2  0100               	movlb	0	; () banked
  5751  0044F4  6F74               	movwf	oled_putString@start_page& (0+255),b
  5752  0044F6  EC6F  F02F         	call	_oled_putString	;wreg free
  5753                           
  5754                           ;MOTEapp.c: 1461: oled_putString("Light =",0,1);
  5755  0044FA  0E72               	movlw	low STR_19
  5756  0044FC  0100               	movlb	0	; () banked
  5757  0044FE  6F71               	movwf	oled_putString@string& (0+255),b
  5758  004500  0E7F               	movlw	high STR_19
  5759  004502  0100               	movlb	0	; () banked
  5760  004504  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5761  004506  0E00               	movlw	0
  5762  004508  0100               	movlb	0	; () banked
  5763  00450A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5764  00450C  0E01               	movlw	1
  5765  00450E  0100               	movlb	0	; () banked
  5766  004510  6F74               	movwf	oled_putString@start_page& (0+255),b
  5767  004512  EC6F  F02F         	call	_oled_putString	;wreg free
  5768                           
  5769                           ;MOTEapp.c: 1462: oled_putString("Temp  =",0,2);
  5770  004516  0E6A               	movlw	low STR_18
  5771  004518  0100               	movlb	0	; () banked
  5772  00451A  6F71               	movwf	oled_putString@string& (0+255),b
  5773  00451C  0E7F               	movlw	high STR_18
  5774  00451E  0100               	movlb	0	; () banked
  5775  004520  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5776  004522  0E00               	movlw	0
  5777  004524  0100               	movlb	0	; () banked
  5778  004526  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5779  004528  0E02               	movlw	2
  5780  00452A  0100               	movlb	0	; () banked
  5781  00452C  6F74               	movwf	oled_putString@start_page& (0+255),b
  5782  00452E  EC6F  F02F         	call	_oled_putString	;wreg free
  5783                           
  5784                           ;MOTEapp.c: 1463: oled_putChar('C',14,2);
  5785  004532  0E0E               	movlw	14
  5786  004534  0100               	movlb	0	; () banked
  5787  004536  6F62               	movwf	oled_putChar@station_dot& (0+255),b
  5788  004538  0E02               	movlw	2
  5789  00453A  0100               	movlb	0	; () banked
  5790  00453C  6F63               	movwf	oled_putChar@start_page& (0+255),b
  5791  00453E  0E43               	movlw	67
  5792  004540  EC6E  F02A         	call	_oled_putChar
  5793                           
  5794                           ;MOTEapp.c: 1464: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  5795  004544  EC9B  F031         	call	_moteApp_getTempValue	;wreg free
  5796  004548  C063  F071         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  5797  00454C  C064  F072         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  5798  004550  EC64  F02B         	call	_moteApp_convertSensorValue	;wreg free
  5799  004554  C071  F0C5         	movff	?_moteApp_convertSensorValue,_temperature
  5800  004558  C072  F0C6         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  5801                           
  5802                           ;MOTEapp.c: 1465: temperature = ADC_TempConversion(temperature);
  5803  00455C  0100               	movlb	0	; () banked
  5804  00455E  51C5               	movf	_temperature& (0+255),w,b
  5805  004560  EC79  F021         	call	_ADC_TempConversion
  5806  004564  0100               	movlb	0	; () banked
  5807  004566  6FAC               	movwf	??_moteApp_testSensors& (0+255),b
  5808  004568  0100               	movlb	0	; () banked
  5809  00456A  51AC               	movf	??_moteApp_testSensors& (0+255),w,b
  5810  00456C  0100               	movlb	0	; () banked
  5811  00456E  6FC5               	movwf	_temperature& (0+255),b
  5812  004570  6BC6               	clrf	(_temperature+1)& (0+255),b
  5813                           
  5814                           ; BSR set to: 0
  5815                           ;MOTEapp.c: 1466: oled_putint8(temperature, 10, 2);
  5816  004572  0E0A               	movlw	10
  5817  004574  0100               	movlb	0	; () banked
  5818  004576  6F76               	movwf	oled_putint8@station_dot& (0+255),b
  5819  004578  0E02               	movlw	2
  5820  00457A  0100               	movlb	0	; () banked
  5821  00457C  6F77               	movwf	oled_putint8@start_page& (0+255),b
  5822  00457E  0100               	movlb	0	; () banked
  5823  004580  51C5               	movf	_temperature& (0+255),w,b
  5824  004582  EC5C  F026         	call	_oled_putint8
  5825                           
  5826                           ;MOTEapp.c: 1467: __nop();
  5827  004586  F000               	nop	
  5828                           
  5829                           ;MOTEapp.c: 1468: oled_putString("    ", 10, 1);
  5830  004588  0E8C               	movlw	low (STR_40+12)
  5831  00458A  0100               	movlb	0	; () banked
  5832  00458C  6F71               	movwf	oled_putString@string& (0+255),b
  5833  00458E  0E7A               	movlw	high (STR_40+12)
  5834  004590  0100               	movlb	0	; () banked
  5835  004592  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  5836  004594  0E0A               	movlw	10
  5837  004596  0100               	movlb	0	; () banked
  5838  004598  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5839  00459A  0E01               	movlw	1
  5840  00459C  0100               	movlb	0	; () banked
  5841  00459E  6F74               	movwf	oled_putString@start_page& (0+255),b
  5842  0045A0  EC6F  F02F         	call	_oled_putString	;wreg free
  5843                           
  5844                           ;MOTEapp.c: 1469: oled_putString(moteApp_getLightValue(), 10, 1);
  5845  0045A4  EC95  F030         	call	_moteApp_getLightValue	;wreg free
  5846  0045A8  C06D  F071         	movff	?_moteApp_getLightValue,oled_putString@string
  5847  0045AC  C06E  F072         	movff	?_moteApp_getLightValue+1,oled_putString@string+1
  5848  0045B0  0E0A               	movlw	10
  5849  0045B2  0100               	movlb	0	; () banked
  5850  0045B4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  5851  0045B6  0E01               	movlw	1
  5852  0045B8  0100               	movlb	0	; () banked
  5853  0045BA  6F74               	movwf	oled_putString@start_page& (0+255),b
  5854  0045BC  EC6F  F02F         	call	_oled_putString	;wreg free
  5855  0045C0  0012               	return		;funcret
  5856  0045C2                     __end_of_moteApp_testSensors:
  5857                           	opt stack 0
  5858                           tblptru	equ	0xFF8
  5859                           tblptrh	equ	0xFF7
  5860                           tblptrl	equ	0xFF6
  5861                           tablat	equ	0xFF5
  5862                           intcon	equ	0xFF2
  5863                           postinc0	equ	0xFEE
  5864                           wreg	equ	0xFE8
  5865                           postdec1	equ	0xFE5
  5866                           fsr1l	equ	0xFE1
  5867                           status	equ	0xFD8
  5868                           
  5869 ;; *************** function _moteHandler *****************
  5870 ;; Defined at:
  5871 ;;		line 189 in file "../Includes/Board/MOTEapp.c"
  5872 ;; Parameters:    Size  Location     Type
  5873 ;;		None
  5874 ;; Auto vars:     Size  Location     Type
  5875 ;;  readMessage     1    4[BANK1 ] unsigned char 
  5876 ;;  buttonPress     1    3[BANK1 ] enum E6757
  5877 ;;  s2Button        1    2[BANK1 ] unsigned char 
  5878 ;;  gotoNextStat    1    1[BANK1 ] unsigned char 
  5879 ;;  gotoSleep       1    0[BANK1 ] unsigned char 
  5880 ;; Return value:  Size  Location     Type
  5881 ;;                  1    wreg      enum E7754
  5882 ;; Registers used:
  5883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5884 ;; Tracked objects:
  5885 ;;		On entry : 0/0
  5886 ;;		On exit  : 0/0
  5887 ;;		Unchanged: 0/0
  5888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5889 ;;      Params:         0       0       0       0       0       0       0       0       0
  5890 ;;      Locals:         0       0       5       0       0       0       0       0       0
  5891 ;;      Temps:          0       1       0       0       0       0       0       0       0
  5892 ;;      Totals:         0       1       5       0       0       0       0       0       0
  5893 ;;Total ram usage:        6 bytes
  5894 ;; Hardware stack levels used:    1
  5895 ;; Hardware stack levels required when called:   19
  5896 ;; This function calls:
  5897 ;;		_ADC_TempConversion
  5898 ;;		_MOTEapp_TimerBasedTask
  5899 ;;		_MOTEapp_getModuleResponse
  5900 ;;		_TMRapp_ClearBitFlags
  5901 ;;		_TMRapp_Handler
  5902 ;;		_USBapp_exitCDC
  5903 ;;		_USBapp_exitCDCState
  5904 ;;		_moteApp_convertSensorValue
  5905 ;;		_moteApp_getLightValue
  5906 ;;		_moteApp_getTempValue
  5907 ;;		_moteJoiningProcess
  5908 ;;		_moteRunningProcess
  5909 ;;		_oled_clear
  5910 ;;		_oled_putString
  5911 ;;		_oled_putint8
  5912 ;;		_service_pushbutton
  5913 ;; This function is called by:
  5914 ;;		_main
  5915 ;; This function uses a non-reentrant model
  5916 ;;
  5917                           
  5918                           	psect	text9
  5919  002E04                     __ptext9:
  5920                           	opt stack 0
  5921  002E04                     _moteHandler:
  5922                           	opt stack 11
  5923                           
  5924                           ;MOTEapp.c: 191: bool gotoSleep = 0;
  5925                           
  5926                           ;incstack = 0
  5927  002E04  0E00               	movlw	0
  5928  002E06  0101               	movlb	1	; () banked
  5929  002E08  6FF2               	movwf	moteHandler@gotoSleep& (0+255),b
  5930                           
  5931                           ;MOTEapp.c: 192: bool gotoNextState = 0;
  5932  002E0A  0E00               	movlw	0
  5933  002E0C  0101               	movlb	1	; () banked
  5934  002E0E  6FF3               	movwf	moteHandler@gotoNextState& (0+255),b
  5935                           
  5936                           ;MOTEapp.c: 193: bool s2Button = 0;
  5937  002E10  0E00               	movlw	0
  5938  002E12  0101               	movlb	1	; () banked
  5939  002E14  6FF4               	movwf	moteHandler@s2Button& (0+255),b
  5940                           
  5941                           ;MOTEapp.c: 194: bool readMessage = 0;
  5942  002E16  0E00               	movlw	0
  5943  002E18  0101               	movlb	1	; () banked
  5944  002E1A  6FF6               	movwf	moteHandler@readMessage& (0+255),b
  5945                           
  5946                           ;MOTEapp.c: 195: buttonStates_t buttonPress = Released;
  5947  002E1C  0E03               	movlw	3
  5948  002E1E  0101               	movlb	1	; () banked
  5949  002E20  6FF5               	movwf	moteHandler@buttonPress& (0+255),b
  5950                           
  5951                           ; BSR set to: 1
  5952                           ;MOTEapp.c: 198: if (PORTAbits.RA0)
  5953  002E22  A080               	btfss	3968,0,c	;volatile
  5954  002E24  D009               	goto	l14776
  5955                           
  5956                           ; BSR set to: 1
  5957                           ;MOTEapp.c: 199: {
  5958                           ;MOTEapp.c: 200: if (USBapp_exitCDC() == NO_USB)
  5959  002E26  ECA9  F035         	call	_USBapp_exitCDC	;wreg free
  5960  002E2A  0900               	iorlw	0
  5961  002E2C  A4D8               	btfss	status,2,c
  5962  002E2E  D007               	goto	l14778
  5963                           
  5964                           ;MOTEapp.c: 201: moteState = MOTE_SWAP;
  5965  002E30  0E04               	movlw	4
  5966  002E32  0100               	movlb	0	; () banked
  5967  002E34  6FFA               	movwf	_moteState& (0+255),b
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;MOTEapp.c: 202: } else {
  5971  002E36  D003               	goto	l14778
  5972  002E38                     l14776:
  5973                           
  5974                           ;MOTEapp.c: 203: USBapp_exitCDCState(NO_USB);
  5975  002E38  0E00               	movlw	0
  5976  002E3A  EC8D  F035         	call	_USBapp_exitCDCState
  5977  002E3E                     l14778:
  5978                           
  5979                           ;MOTEapp.c: 204: }
  5980                           ;MOTEapp.c: 207: if ( appTimer.mSecTick )
  5981  002E3E  0100               	movlb	0	; () banked
  5982  002E40  A1D7               	btfss	_appTimer& (0+255),0,b
  5983  002E42  D008               	goto	l14786
  5984                           
  5985                           ; BSR set to: 0
  5986                           ;MOTEapp.c: 208: {
  5987                           ;MOTEapp.c: 210: TMRapp_ClearBitFlags();
  5988  002E44  ECA1  F035         	call	_TMRapp_ClearBitFlags	;wreg free
  5989                           
  5990                           ;MOTEapp.c: 212: TMRapp_Handler();
  5991  002E48  EC65  F01B         	call	_TMRapp_Handler	;wreg free
  5992                           
  5993                           ;MOTEapp.c: 213: MOTEapp_TimerBasedTask(appTimer);
  5994  002E4C  0100               	movlb	0	; () banked
  5995  002E4E  51D7               	movf	_appTimer& (0+255),w,b
  5996  002E50  EC6E  F034         	call	_MOTEapp_TimerBasedTask
  5997  002E54                     l14786:
  5998                           
  5999                           ;MOTEapp.c: 214: }
  6000                           ;MOTEapp.c: 217: buttonPress = service_pushbutton();
  6001  002E54  ECD8  F02D         	call	_service_pushbutton	;wreg free
  6002  002E58  0101               	movlb	1	; () banked
  6003  002E5A  6FF5               	movwf	moteHandler@buttonPress& (0+255),b
  6004                           
  6005                           ; BSR set to: 1
  6006                           ;MOTEapp.c: 218: if (buttonPress == ShortPress1)
  6007  002E5C  0101               	movlb	1	; () banked
  6008  002E5E  05F5               	decf	moteHandler@buttonPress& (0+255),w,b
  6009  002E60  A4D8               	btfss	status,2,c
  6010  002E62  D007               	goto	l14792
  6011                           
  6012                           ; BSR set to: 1
  6013                           ;MOTEapp.c: 219: {
  6014                           ;MOTEapp.c: 220: secTicker = 0;
  6015  002E64  0E00               	movlw	0
  6016  002E66  0100               	movlb	0	; () banked
  6017  002E68  6FEF               	movwf	_secTicker& (0+255),b
  6018                           
  6019                           ;MOTEapp.c: 221: gotoNextState = 1;
  6020  002E6A  0E01               	movlw	1
  6021  002E6C  0101               	movlb	1	; () banked
  6022  002E6E  6FF3               	movwf	moteHandler@gotoNextState& (0+255),b
  6023                           
  6024                           ;MOTEapp.c: 222: }
  6025  002E70  D00B               	goto	l14796
  6026  002E72                     l14792:
  6027                           
  6028                           ; BSR set to: 1
  6029                           ;MOTEapp.c: 223: else if (buttonPress == ShortPress2)
  6030  002E72  0E02               	movlw	2
  6031  002E74  0101               	movlb	1	; () banked
  6032  002E76  19F5               	xorwf	moteHandler@buttonPress& (0+255),w,b
  6033  002E78  A4D8               	btfss	status,2,c
  6034  002E7A  D006               	goto	l14796
  6035                           
  6036                           ; BSR set to: 1
  6037                           ;MOTEapp.c: 224: {
  6038                           ;MOTEapp.c: 225: secTicker = 0;
  6039  002E7C  0E00               	movlw	0
  6040  002E7E  0100               	movlb	0	; () banked
  6041  002E80  6FEF               	movwf	_secTicker& (0+255),b
  6042                           
  6043                           ;MOTEapp.c: 226: s2Button = 1;
  6044  002E82  0E01               	movlw	1
  6045  002E84  0101               	movlb	1	; () banked
  6046  002E86  6FF4               	movwf	moteHandler@s2Button& (0+255),b
  6047  002E88                     l14796:
  6048                           
  6049                           ; BSR set to: 1
  6050                           ;MOTEapp.c: 227: }
  6051                           ;MOTEapp.c: 230: if ( MOTEapp_getModuleResponse() )
  6052  002E88  EC8E  F02E         	call	_MOTEapp_getModuleResponse	;wreg free
  6053  002E8C  0900               	iorlw	0
  6054  002E8E  B4D8               	btfsc	status,2,c
  6055  002E90  D002               	goto	l14800
  6056                           
  6057                           ;MOTEapp.c: 231: readMessage = 1;
  6058  002E92  0E01               	movlw	1
  6059  002E94  D001               	goto	L1
  6060  002E96                     l14800:
  6061                           
  6062                           ;MOTEapp.c: 232: else
  6063                           ;MOTEapp.c: 233: readMessage = 0;
  6064  002E96  0E00               	movlw	0
  6065  002E98                     L1:
  6066  002E98  0101               	movlb	1	; () banked
  6067  002E9A  6FF6               	movwf	moteHandler@readMessage& (0+255),b
  6068                           
  6069                           ; BSR set to: 1
  6070                           ;MOTEapp.c: 236: if (runningState == runningSensorMenu)
  6071                           
  6072                           ; BSR set to: 1
  6073  002E9C  0E02               	movlw	2
  6074  002E9E  0100               	movlb	0	; () banked
  6075  002EA0  19EE               	xorwf	_runningState& (0+255),w,b
  6076  002EA2  A4D8               	btfss	status,2,c
  6077  002EA4  D04B               	goto	l14820
  6078                           
  6079                           ; BSR set to: 0
  6080                           ;MOTEapp.c: 237: {
  6081                           ;MOTEapp.c: 239: if (m10SecTicker >= 100)
  6082  002EA6  0101               	movlb	1	; () banked
  6083  002EA8  5159               	movf	(_m10SecTicker+1)& (0+255),w,b
  6084  002EAA  E105               	bnz	u14150
  6085  002EAC  0E64               	movlw	100
  6086  002EAE  0101               	movlb	1	; () banked
  6087  002EB0  5D58               	subwf	_m10SecTicker& (0+255),w,b
  6088  002EB2  A0D8               	btfss	status,0,c
  6089  002EB4  D043               	goto	l14820
  6090  002EB6                     u14150:
  6091                           
  6092                           ; BSR set to: 1
  6093                           ;MOTEapp.c: 240: {
  6094                           ;MOTEapp.c: 241: __nop();
  6095  002EB6  F000               	nop	
  6096                           
  6097                           ;MOTEapp.c: 242: oled_putString("    ", 6, 1);
  6098  002EB8  0E8C               	movlw	low (STR_40+12)
  6099  002EBA  0100               	movlb	0	; () banked
  6100  002EBC  6F71               	movwf	oled_putString@string& (0+255),b
  6101  002EBE  0E7A               	movlw	high (STR_40+12)
  6102  002EC0  0100               	movlb	0	; () banked
  6103  002EC2  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6104  002EC4  0E06               	movlw	6
  6105  002EC6  0100               	movlb	0	; () banked
  6106  002EC8  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6107  002ECA  0E01               	movlw	1
  6108  002ECC  0100               	movlb	0	; () banked
  6109  002ECE  6F74               	movwf	oled_putString@start_page& (0+255),b
  6110  002ED0  EC6F  F02F         	call	_oled_putString	;wreg free
  6111                           
  6112                           ;MOTEapp.c: 243: oled_putString(moteApp_getLightValue(), 6, 1);
  6113  002ED4  EC95  F030         	call	_moteApp_getLightValue	;wreg free
  6114  002ED8  C06D  F071         	movff	?_moteApp_getLightValue,oled_putString@string
  6115  002EDC  C06E  F072         	movff	?_moteApp_getLightValue+1,oled_putString@string+1
  6116  002EE0  0E06               	movlw	6
  6117  002EE2  0100               	movlb	0	; () banked
  6118  002EE4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6119  002EE6  0E01               	movlw	1
  6120  002EE8  0100               	movlb	0	; () banked
  6121  002EEA  6F74               	movwf	oled_putString@start_page& (0+255),b
  6122  002EEC  EC6F  F02F         	call	_oled_putString	;wreg free
  6123                           
  6124                           ;MOTEapp.c: 244: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  6125  002EF0  EC9B  F031         	call	_moteApp_getTempValue	;wreg free
  6126  002EF4  C063  F071         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  6127  002EF8  C064  F072         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  6128  002EFC  EC64  F02B         	call	_moteApp_convertSensorValue	;wreg free
  6129  002F00  C071  F0C5         	movff	?_moteApp_convertSensorValue,_temperature
  6130  002F04  C072  F0C6         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  6131                           
  6132                           ;MOTEapp.c: 245: temperature = ADC_TempConversion(temperature);
  6133  002F08  0100               	movlb	0	; () banked
  6134  002F0A  51C5               	movf	_temperature& (0+255),w,b
  6135  002F0C  EC79  F021         	call	_ADC_TempConversion
  6136  002F10  0100               	movlb	0	; () banked
  6137  002F12  6FB8               	movwf	??_moteHandler& (0+255),b
  6138  002F14  0100               	movlb	0	; () banked
  6139  002F16  51B8               	movf	??_moteHandler& (0+255),w,b
  6140  002F18  0100               	movlb	0	; () banked
  6141  002F1A  6FC5               	movwf	_temperature& (0+255),b
  6142  002F1C  6BC6               	clrf	(_temperature+1)& (0+255),b
  6143                           
  6144                           ; BSR set to: 0
  6145                           ;MOTEapp.c: 246: oled_putint8(temperature, 6, 2);
  6146  002F1E  0E06               	movlw	6
  6147  002F20  0100               	movlb	0	; () banked
  6148  002F22  6F76               	movwf	oled_putint8@station_dot& (0+255),b
  6149  002F24  0E02               	movlw	2
  6150  002F26  0100               	movlb	0	; () banked
  6151  002F28  6F77               	movwf	oled_putint8@start_page& (0+255),b
  6152  002F2A  0100               	movlb	0	; () banked
  6153  002F2C  51C5               	movf	_temperature& (0+255),w,b
  6154  002F2E  EC5C  F026         	call	_oled_putint8
  6155                           
  6156                           ;MOTEapp.c: 247: m10SecTicker = 0;
  6157  002F32  0E00               	movlw	0
  6158  002F34  0101               	movlb	1	; () banked
  6159  002F36  6F59               	movwf	(_m10SecTicker+1)& (0+255),b
  6160  002F38  0E00               	movlw	0
  6161  002F3A  6F58               	movwf	_m10SecTicker& (0+255),b
  6162  002F3C                     l14820:
  6163                           
  6164                           ;MOTEapp.c: 248: }
  6165                           ;MOTEapp.c: 249: }
  6166                           ;MOTEapp.c: 251: if(secTicker)
  6167  002F3C  0100               	movlb	0	; () banked
  6168  002F3E  51EF               	movf	_secTicker& (0+255),w,b
  6169  002F40  B4D8               	btfsc	status,2,c
  6170  002F42  D08A               	goto	l14858
  6171                           
  6172                           ; BSR set to: 0
  6173                           ;MOTEapp.c: 252: {
  6174                           ;MOTEapp.c: 253: if ((secTicker >= 10) && (menuTimeout))
  6175  002F44  0E09               	movlw	9
  6176  002F46  0100               	movlb	0	; () banked
  6177  002F48  65EF               	cpfsgt	_secTicker& (0+255),b
  6178  002F4A  D086               	goto	l14858
  6179                           
  6180                           ; BSR set to: 0
  6181  002F4C  0100               	movlb	0	; () banked
  6182  002F4E  51F9               	movf	_menuTimeout& (0+255),w,b
  6183  002F50  B4D8               	btfsc	status,2,c
  6184  002F52  D082               	goto	l14858
  6185                           
  6186                           ; BSR set to: 0
  6187                           ;MOTEapp.c: 254: {
  6188                           ;MOTEapp.c: 255: gotoSleep = 1;
  6189  002F54  0E01               	movlw	1
  6190  002F56  0101               	movlb	1	; () banked
  6191  002F58  6FF2               	movwf	moteHandler@gotoSleep& (0+255),b
  6192                           
  6193                           ;MOTEapp.c: 256: secTicker = 0;
  6194  002F5A  0E00               	movlw	0
  6195  002F5C  0100               	movlb	0	; () banked
  6196  002F5E  6FEF               	movwf	_secTicker& (0+255),b
  6197                           
  6198                           ; BSR set to: 0
  6199                           ;MOTEapp.c: 257: }
  6200                           ;MOTEapp.c: 258: }
  6201                           ;MOTEapp.c: 260: switch(moteState)
  6202                           
  6203                           ; BSR set to: 0
  6204  002F60  D07B               	goto	l14858
  6205  002F62  D7FF               	goto	l385
  6206  002F64                     l14828:
  6207                           
  6208                           ;MOTEapp.c: 266: oled_clear();
  6209  002F64  ECD1  F034         	call	_oled_clear	;wreg free
  6210                           
  6211                           ;MOTEapp.c: 267: oled_putString("MOTE Mode",1,0);
  6212  002F68  0EDF               	movlw	low STR_24
  6213  002F6A  0100               	movlb	0	; () banked
  6214  002F6C  6F71               	movwf	oled_putString@string& (0+255),b
  6215  002F6E  0E7E               	movlw	high STR_24
  6216  002F70  0100               	movlb	0	; () banked
  6217  002F72  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6218  002F74  0E01               	movlw	1
  6219  002F76  0100               	movlb	0	; () banked
  6220  002F78  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6221  002F7A  0E00               	movlw	0
  6222  002F7C  0100               	movlb	0	; () banked
  6223  002F7E  6F74               	movwf	oled_putString@start_page& (0+255),b
  6224  002F80  EC6F  F02F         	call	_oled_putString	;wreg free
  6225                           
  6226                           ;MOTEapp.c: 268: oled_putString("Starting",2,1);
  6227  002F84  0E35               	movlw	low STR_25
  6228  002F86  0100               	movlb	0	; () banked
  6229  002F88  6F71               	movwf	oled_putString@string& (0+255),b
  6230  002F8A  0E7F               	movlw	high STR_25
  6231  002F8C  0100               	movlb	0	; () banked
  6232  002F8E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6233  002F90  0E02               	movlw	2
  6234  002F92  0100               	movlb	0	; () banked
  6235  002F94  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6236  002F96  0E01               	movlw	1
  6237  002F98  0100               	movlb	0	; () banked
  6238  002F9A  6F74               	movwf	oled_putString@start_page& (0+255),b
  6239  002F9C  EC6F  F02F         	call	_oled_putString	;wreg free
  6240                           
  6241                           ;MOTEapp.c: 269: oled_putString("ReRun PwrTst<S2>",0,3);
  6242  002FA0  0EC3               	movlw	low STR_26
  6243  002FA2  0100               	movlb	0	; () banked
  6244  002FA4  6F71               	movwf	oled_putString@string& (0+255),b
  6245  002FA6  0E7B               	movlw	high STR_26
  6246  002FA8  0100               	movlb	0	; () banked
  6247  002FAA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6248  002FAC  0E00               	movlw	0
  6249  002FAE  0100               	movlb	0	; () banked
  6250  002FB0  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6251  002FB2  0E03               	movlw	3
  6252  002FB4  0100               	movlb	0	; () banked
  6253  002FB6  6F74               	movwf	oled_putString@start_page& (0+255),b
  6254  002FB8  EC6F  F02F         	call	_oled_putString	;wreg free
  6255                           
  6256                           ;MOTEapp.c: 270: activeState = moteStartup;
  6257  002FBC  0E00               	movlw	0
  6258  002FBE  0100               	movlb	0	; () banked
  6259  002FC0  6FD5               	movwf	_activeState& (0+255),b
  6260                           
  6261                           ; BSR set to: 0
  6262                           ;MOTEapp.c: 271: moteState = MOTE_JOINING;
  6263  002FC2  0E02               	movlw	2
  6264  002FC4  D03B               	goto	L2
  6265  002FC6                     l14840:
  6266                           
  6267                           ; BSR set to: 0
  6268                           ;MOTEapp.c: 274: if ( moteJoiningProcess(readMessage, gotoNextState, s2Button) )
  6269  002FC6  C1F3  F076         	movff	moteHandler@gotoNextState,moteJoiningProcess@changeStates
  6270  002FCA  C1F4  F077         	movff	moteHandler@s2Button,moteJoiningProcess@selectButton
  6271  002FCE  0101               	movlb	1	; () banked
  6272  002FD0  51F6               	movf	moteHandler@readMessage& (0+255),w,b
  6273  002FD2  ECB5  F009         	call	_moteJoiningProcess
  6274  002FD6  0900               	iorlw	0
  6275  002FD8  B4D8               	btfsc	status,2,c
  6276  002FDA  D04C               	goto	l14860
  6277                           
  6278                           ;MOTEapp.c: 275: {
  6279                           ;MOTEapp.c: 276: oled_clear();
  6280  002FDC  ECD1  F034         	call	_oled_clear	;wreg free
  6281                           
  6282                           ;MOTEapp.c: 277: oled_putString("Mobile Mote -App",0,0);
  6283  002FE0  0E18               	movlw	low STR_27
  6284  002FE2  0100               	movlb	0	; () banked
  6285  002FE4  6F71               	movwf	oled_putString@string& (0+255),b
  6286  002FE6  0E7C               	movlw	high STR_27
  6287  002FE8  0100               	movlb	0	; () banked
  6288  002FEA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6289  002FEC  0E00               	movlw	0
  6290  002FEE  0100               	movlb	0	; () banked
  6291  002FF0  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6292  002FF2  0E00               	movlw	0
  6293  002FF4  0100               	movlb	0	; () banked
  6294  002FF6  6F74               	movwf	oled_putString@start_page& (0+255),b
  6295  002FF8  EC6F  F02F         	call	_oled_putString	;wreg free
  6296                           
  6297                           ;MOTEapp.c: 278: oled_putString("Navigate  Select", 0,2);
  6298  002FFC  0E29               	movlw	low STR_28
  6299  002FFE  0100               	movlb	0	; () banked
  6300  003000  6F71               	movwf	oled_putString@string& (0+255),b
  6301  003002  0E7C               	movlw	high STR_28
  6302  003004  0100               	movlb	0	; () banked
  6303  003006  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6304  003008  0E00               	movlw	0
  6305  00300A  0100               	movlb	0	; () banked
  6306  00300C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6307  00300E  0E02               	movlw	2
  6308  003010  0100               	movlb	0	; () banked
  6309  003012  6F74               	movwf	oled_putString@start_page& (0+255),b
  6310  003014  EC6F  F02F         	call	_oled_putString	;wreg free
  6311                           
  6312                           ;MOTEapp.c: 279: oled_putString(" (S2)      (S3) ", 0,3);
  6313  003018  0EF7               	movlw	low STR_29
  6314  00301A  0100               	movlb	0	; () banked
  6315  00301C  6F71               	movwf	oled_putString@string& (0+255),b
  6316  00301E  0E7A               	movlw	high STR_29
  6317  003020  0100               	movlb	0	; () banked
  6318  003022  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6319  003024  0E00               	movlw	0
  6320  003026  0100               	movlb	0	; () banked
  6321  003028  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6322  00302A  0E03               	movlw	3
  6323  00302C  0100               	movlb	0	; () banked
  6324  00302E  6F74               	movwf	oled_putString@start_page& (0+255),b
  6325  003030  EC6F  F02F         	call	_oled_putString	;wreg free
  6326                           
  6327                           ;MOTEapp.c: 280: runningState = runningEnter;
  6328  003034  0E00               	movlw	0
  6329  003036  0100               	movlb	0	; () banked
  6330  003038  6FEE               	movwf	_runningState& (0+255),b
  6331                           
  6332                           ; BSR set to: 0
  6333                           ;MOTEapp.c: 281: moteState = MOTE_RUNNING;
  6334  00303A  0E03               	movlw	3
  6335  00303C                     L2:
  6336  00303C  0100               	movlb	0	; () banked
  6337  00303E  6FFA               	movwf	_moteState& (0+255),b
  6338                           
  6339                           ; BSR set to: 0
  6340                           ;MOTEapp.c: 282: }
  6341                           ;MOTEapp.c: 283: break;
  6342  003040  D019               	goto	l14860
  6343  003042                     l14854:
  6344                           
  6345                           ; BSR set to: 0
  6346                           ;MOTEapp.c: 285: moteRunningProcess(gotoNextState, s2Button, readMessage, gotoSleep);
  6347  003042  C1F4  F0AC         	movff	moteHandler@s2Button,moteRunningProcess@selectButton
  6348  003046  C1F6  F0AD         	movff	moteHandler@readMessage,moteRunningProcess@messageReady
  6349  00304A  C1F2  F0AE         	movff	moteHandler@gotoSleep,moteRunningProcess@sleepEvent
  6350  00304E  0101               	movlb	1	; () banked
  6351  003050  51F3               	movf	moteHandler@gotoNextState& (0+255),w,b
  6352  003052  EC64  F000         	call	_moteRunningProcess
  6353                           
  6354                           ;MOTEapp.c: 290: }
  6355                           
  6356                           ;MOTEapp.c: 289: break;
  6357                           
  6358                           ;MOTEapp.c: 287: case MOTE_SWAP:
  6359                           
  6360                           ;MOTEapp.c: 286: break;
  6361  003056  D00E               	goto	l14860
  6362  003058                     l14858:
  6363  003058  0100               	movlb	0	; () banked
  6364  00305A  51FA               	movf	_moteState& (0+255),w,b
  6365                           
  6366                           ; Switch size 1, requested type "space"
  6367                           ; Number of cases is 4, Range of values is 1 to 4
  6368                           ; switch strategies available:
  6369                           ; Name         Instructions Cycles
  6370                           ; simple_byte           13     7 (average)
  6371                           ;	Chosen strategy is simple_byte
  6372  00305C  0A01               	xorlw	1	; case 1
  6373  00305E  B4D8               	btfsc	status,2,c
  6374  003060  D781               	goto	l14828
  6375  003062  0A03               	xorlw	3	; case 2
  6376  003064  B4D8               	btfsc	status,2,c
  6377  003066  D7AF               	goto	l14840
  6378  003068  0A01               	xorlw	1	; case 3
  6379  00306A  B4D8               	btfsc	status,2,c
  6380  00306C  D7EA               	goto	l14854
  6381  00306E  0A07               	xorlw	7	; case 4
  6382  003070  A4D8               	btfss	status,2,c
  6383  003072  D777               	goto	l385
  6384  003074                     l14860:
  6385                           
  6386                           ;MOTEapp.c: 291: return moteState;
  6387  003074  0100               	movlb	0	; () banked
  6388  003076  51FA               	movf	_moteState& (0+255),w,b
  6389  003078  0012               	return	
  6390  00307A                     __end_of_moteHandler:
  6391                           	opt stack 0
  6392                           tblptru	equ	0xFF8
  6393                           tblptrh	equ	0xFF7
  6394                           tblptrl	equ	0xFF6
  6395                           tablat	equ	0xFF5
  6396                           intcon	equ	0xFF2
  6397                           postinc0	equ	0xFEE
  6398                           wreg	equ	0xFE8
  6399                           postdec1	equ	0xFE5
  6400                           fsr1l	equ	0xFE1
  6401                           status	equ	0xFD8
  6402                           
  6403 ;; *************** function _moteRunningProcess *****************
  6404 ;; Defined at:
  6405 ;;		line 490 in file "../Includes/Board/MOTEapp.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;  changeStates    1    wreg     unsigned char 
  6408 ;;  selectButton    1   76[BANK0 ] unsigned char 
  6409 ;;  messageReady    1   77[BANK0 ] unsigned char 
  6410 ;;  sleepEvent      1   78[BANK0 ] unsigned char 
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;  changeStates    1   87[BANK0 ] unsigned char 
  6413 ;;  counter         1   85[BANK0 ] unsigned char 
  6414 ;;  bufferReadPo    1   86[BANK0 ] unsigned char 
  6415 ;;  ctr             2   83[BANK0 ] int 
  6416 ;;  sizeOfUpdate    1   82[BANK0 ] unsigned char 
  6417 ;;  sizeOfUpdate    1   81[BANK0 ] unsigned char 
  6418 ;;  readByte        1   80[BANK0 ] unsigned char 
  6419 ;; Return value:  Size  Location     Type
  6420 ;;                  1    wreg      enum E7003
  6421 ;; Registers used:
  6422 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6423 ;; Tracked objects:
  6424 ;;		On entry : 0/0
  6425 ;;		On exit  : 0/0
  6426 ;;		Unchanged: 0/0
  6427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6428 ;;      Params:         0       3       0       0       0       0       0       0       0
  6429 ;;      Locals:         0       8       0       0       0       0       0       0       0
  6430 ;;      Temps:          0       1       0       0       0       0       0       0       0
  6431 ;;      Totals:         0      12       0       0       0       0       0       0       0
  6432 ;;Total ram usage:       12 bytes
  6433 ;; Hardware stack levels used:    1
  6434 ;; Hardware stack levels required when called:   18
  6435 ;; This function calls:
  6436 ;;		_ADC_TempConversion
  6437 ;;		_MOTEapp_SetDataRateSetting
  6438 ;;		_TMR2_ReadTimer
  6439 ;;		_moteApp_GoToSleep
  6440 ;;		_moteApp_add16bToDataBuffer
  6441 ;;		_moteApp_add8bToDataBuffer
  6442 ;;		_moteApp_clearBuffers
  6443 ;;		_moteApp_convertSensorValue
  6444 ;;		_moteApp_delayms
  6445 ;;		_moteApp_getLightString
  6446 ;;		_moteApp_getLightValue
  6447 ;;		_moteApp_getTempValue
  6448 ;;		_moteApp_setSensorsInput
  6449 ;;		_oled_clear
  6450 ;;		_oled_putString
  6451 ;;		_oled_putUint8
  6452 ;;		_oled_putint8
  6453 ;;		_sendDataCommand
  6454 ;;		_strcmp
  6455 ;;		_strncmp
  6456 ;; This function is called by:
  6457 ;;		_moteHandler
  6458 ;; This function uses a non-reentrant model
  6459 ;;
  6460                           
  6461                           	psect	text10
  6462  0000C8                     __ptext10:
  6463                           	opt stack 0
  6464  0000C8                     _moteRunningProcess:
  6465                           	opt stack 11
  6466                           
  6467                           ; BSR set to: 0
  6468                           ;incstack = 0
  6469                           ;moteRunningProcess@changeStates stored from wreg
  6470  0000C8  0100               	movlb	0	; () banked
  6471  0000CA  6FB7               	movwf	moteRunningProcess@changeStates& (0+255),b
  6472                           
  6473                           ;MOTEapp.c: 492: uint8_t readByte = 0;
  6474  0000CC  0E00               	movlw	0
  6475  0000CE  0100               	movlb	0	; () banked
  6476  0000D0  6FB0               	movwf	moteRunningProcess@readByte& (0+255),b
  6477                           
  6478                           ; BSR set to: 0
  6479                           ;MOTEapp.c: 494: if ((sleepEvent) && (periodicState))
  6480  0000D2  0100               	movlb	0	; () banked
  6481  0000D4  51AE               	movf	moteRunningProcess@sleepEvent& (0+255),w,b
  6482  0000D6  0100               	movlb	0	; () banked
  6483  0000D8  B4D8               	btfsc	status,2,c
  6484  0000DA  EF86  F009         	goto	l14476
  6485                           
  6486                           ; BSR set to: 0
  6487  0000DE  0100               	movlb	0	; () banked
  6488  0000E0  51FB               	movf	_periodicState& (0+255),w,b
  6489  0000E2  B4D8               	btfsc	status,2,c
  6490  0000E4  EF86  F009         	goto	l14476
  6491                           
  6492                           ; BSR set to: 0
  6493                           ;MOTEapp.c: 495: {
  6494                           ;MOTEapp.c: 496: if (sleepTicker >= periodicTimerValue)
  6495  0000E8  0100               	movlb	0	; () banked
  6496  0000EA  51FC               	movf	_periodicTimerValue& (0+255),w,b
  6497  0000EC  0100               	movlb	0	; () banked
  6498  0000EE  5DF0               	subwf	_sleepTicker& (0+255),w,b
  6499  0000F0  A0D8               	btfss	status,0,c
  6500  0000F2  D0DC               	goto	l13994
  6501                           
  6502                           ; BSR set to: 0
  6503                           ;MOTEapp.c: 497: {
  6504                           ;MOTEapp.c: 499: moteApp_clearBuffers();
  6505  0000F4  ECBF  F028         	call	_moteApp_clearBuffers	;wreg free
  6506                           
  6507                           ;MOTEapp.c: 502: light = 0;
  6508  0000F8  0E00               	movlw	0
  6509  0000FA  0100               	movlb	0	; () banked
  6510  0000FC  6FC4               	movwf	(_light+1)& (0+255),b
  6511  0000FE  0E00               	movlw	0
  6512  000100  6FC3               	movwf	_light& (0+255),b
  6513                           
  6514                           ; BSR set to: 0
  6515                           ;MOTEapp.c: 503: temperature = 0;
  6516  000102  0E00               	movlw	0
  6517  000104  0100               	movlb	0	; () banked
  6518  000106  6FC6               	movwf	(_temperature+1)& (0+255),b
  6519  000108  0E00               	movlw	0
  6520  00010A  6FC5               	movwf	_temperature& (0+255),b
  6521                           
  6522                           ; BSR set to: 0
  6523                           ;MOTEapp.c: 504: __nop();
  6524  00010C  F000               	nop	
  6525                           
  6526                           ;MOTEapp.c: 506: moteApp_setSensorsInput();
  6527  00010E  EC91  F02C         	call	_moteApp_setSensorsInput	;wreg free
  6528                           
  6529                           ;MOTEapp.c: 507: uint8_t sizeOfUpdate = 0;
  6530  000112  0E00               	movlw	0
  6531  000114  0100               	movlb	0	; () banked
  6532  000116  6FB1               	movwf	moteRunningProcess@sizeOfUpdate& (0+255),b
  6533                           
  6534                           ; BSR set to: 0
  6535                           ;MOTEapp.c: 508: light = moteApp_convertSensorValue(moteApp_getLightValue());
  6536  000118  EC95  F030         	call	_moteApp_getLightValue	;wreg free
  6537  00011C  C06D  F071         	movff	?_moteApp_getLightValue,moteApp_convertSensorValue@string
  6538  000120  C06E  F072         	movff	?_moteApp_getLightValue+1,moteApp_convertSensorValue@string+1
  6539  000124  EC64  F02B         	call	_moteApp_convertSensorValue	;wreg free
  6540  000128  C071  F0C3         	movff	?_moteApp_convertSensorValue,_light
  6541  00012C  C072  F0C4         	movff	?_moteApp_convertSensorValue+1,_light+1
  6542                           
  6543                           ;MOTEapp.c: 509: oled_putString(moteApp_getLightString(), 6, 1);
  6544  000130  EC6D  F035         	call	_moteApp_getLightString	;wreg free
  6545  000134  C060  F071         	movff	?_moteApp_getLightString,oled_putString@string
  6546  000138  C061  F072         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  6547  00013C  0E06               	movlw	6
  6548  00013E  0100               	movlb	0	; () banked
  6549  000140  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6550  000142  0E01               	movlw	1
  6551  000144  0100               	movlb	0	; () banked
  6552  000146  6F74               	movwf	oled_putString@start_page& (0+255),b
  6553  000148  EC6F  F02F         	call	_oled_putString	;wreg free
  6554                           
  6555                           ;MOTEapp.c: 511: moteApp_add16bToDataBuffer(light, 4);
  6556  00014C  C0C3  F067         	movff	_light,moteApp_add16bToDataBuffer@number
  6557  000150  C0C4  F068         	movff	_light+1,moteApp_add16bToDataBuffer@number+1
  6558  000154  0E04               	movlw	4
  6559  000156  0100               	movlb	0	; () banked
  6560  000158  6F69               	movwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),b
  6561  00015A  EC24  F019         	call	_moteApp_add16bToDataBuffer	;wreg free
  6562                           
  6563                           ;MOTEapp.c: 512: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  6564  00015E  EC9B  F031         	call	_moteApp_getTempValue	;wreg free
  6565  000162  C063  F071         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  6566  000166  C064  F072         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  6567  00016A  EC64  F02B         	call	_moteApp_convertSensorValue	;wreg free
  6568  00016E  C071  F0C5         	movff	?_moteApp_convertSensorValue,_temperature
  6569  000172  C072  F0C6         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  6570                           
  6571                           ;MOTEapp.c: 513: temperature = ADC_TempConversion(temperature);
  6572  000176  0100               	movlb	0	; () banked
  6573  000178  51C5               	movf	_temperature& (0+255),w,b
  6574  00017A  EC79  F021         	call	_ADC_TempConversion
  6575  00017E  0100               	movlb	0	; () banked
  6576  000180  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  6577  000182  0100               	movlb	0	; () banked
  6578  000184  51AF               	movf	??_moteRunningProcess& (0+255),w,b
  6579  000186  0100               	movlb	0	; () banked
  6580  000188  6FC5               	movwf	_temperature& (0+255),b
  6581  00018A  6BC6               	clrf	(_temperature+1)& (0+255),b
  6582                           
  6583                           ; BSR set to: 0
  6584                           ;MOTEapp.c: 514: moteApp_add8bToDataBuffer(temperature, 9);
  6585  00018C  0E09               	movlw	9
  6586  00018E  0100               	movlb	0	; () banked
  6587  000190  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6588  000192  0100               	movlb	0	; () banked
  6589  000194  51C5               	movf	_temperature& (0+255),w,b
  6590  000196  ECA6  F024         	call	_moteApp_add8bToDataBuffer
  6591                           
  6592                           ;MOTEapp.c: 516: sleepTicker = 0;
  6593  00019A  0E00               	movlw	0
  6594  00019C  0100               	movlb	0	; () banked
  6595  00019E  6FF0               	movwf	_sleepTicker& (0+255),b
  6596                           
  6597                           ; BSR set to: 0
  6598                           ;MOTEapp.c: 517: oled_clear();
  6599  0001A0  ECD1  F034         	call	_oled_clear	;wreg free
  6600                           
  6601                           ;MOTEapp.c: 518: oled_putString("Send Periodic Tx",0,0);
  6602  0001A4  0E4B               	movlw	low STR_71
  6603  0001A6  0100               	movlb	0	; () banked
  6604  0001A8  6F71               	movwf	oled_putString@string& (0+255),b
  6605  0001AA  0E7C               	movlw	high STR_71
  6606  0001AC  0100               	movlb	0	; () banked
  6607  0001AE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6608  0001B0  0E00               	movlw	0
  6609  0001B2  0100               	movlb	0	; () banked
  6610  0001B4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6611  0001B6  0E00               	movlw	0
  6612  0001B8  0100               	movlb	0	; () banked
  6613  0001BA  6F74               	movwf	oled_putString@start_page& (0+255),b
  6614  0001BC  EC6F  F02F         	call	_oled_putString	;wreg free
  6615                           
  6616                           ;MOTEapp.c: 519: oled_putString("On Port #: ",0,1);
  6617  0001C0  0E41               	movlw	low STR_72
  6618  0001C2  0100               	movlb	0	; () banked
  6619  0001C4  6F71               	movwf	oled_putString@string& (0+255),b
  6620  0001C6  0E7E               	movlw	high STR_72
  6621  0001C8  0100               	movlb	0	; () banked
  6622  0001CA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6623  0001CC  0E00               	movlw	0
  6624  0001CE  0100               	movlb	0	; () banked
  6625  0001D0  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6626  0001D2  0E01               	movlw	1
  6627  0001D4  0100               	movlb	0	; () banked
  6628  0001D6  6F74               	movwf	oled_putString@start_page& (0+255),b
  6629  0001D8  EC6F  F02F         	call	_oled_putString	;wreg free
  6630                           
  6631                           ;MOTEapp.c: 520: oled_putString("L:       T: ",0,2);
  6632  0001DC  0E7F               	movlw	low STR_73
  6633  0001DE  0100               	movlb	0	; () banked
  6634  0001E0  6F71               	movwf	oled_putString@string& (0+255),b
  6635  0001E2  0E7D               	movlw	high STR_73
  6636  0001E4  0100               	movlb	0	; () banked
  6637  0001E6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6638  0001E8  0E00               	movlw	0
  6639  0001EA  0100               	movlb	0	; () banked
  6640  0001EC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6641  0001EE  0E02               	movlw	2
  6642  0001F0  0100               	movlb	0	; () banked
  6643  0001F2  6F74               	movwf	oled_putString@start_page& (0+255),b
  6644  0001F4  EC6F  F02F         	call	_oled_putString	;wreg free
  6645                           
  6646                           ;MOTEapp.c: 521: oled_putString(moteApp_getLightString(), 3, 2);
  6647  0001F8  EC6D  F035         	call	_moteApp_getLightString	;wreg free
  6648  0001FC  C060  F071         	movff	?_moteApp_getLightString,oled_putString@string
  6649  000200  C061  F072         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  6650  000204  0E03               	movlw	3
  6651  000206  0100               	movlb	0	; () banked
  6652  000208  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6653  00020A  0E02               	movlw	2
  6654  00020C  0100               	movlb	0	; () banked
  6655  00020E  6F74               	movwf	oled_putString@start_page& (0+255),b
  6656  000210  EC6F  F02F         	call	_oled_putString	;wreg free
  6657                           
  6658                           ;MOTEapp.c: 522: oled_putint8(temperature,11,2);
  6659  000214  0E0B               	movlw	11
  6660  000216  0100               	movlb	0	; () banked
  6661  000218  6F76               	movwf	oled_putint8@station_dot& (0+255),b
  6662  00021A  0E02               	movlw	2
  6663  00021C  0100               	movlb	0	; () banked
  6664  00021E  6F77               	movwf	oled_putint8@start_page& (0+255),b
  6665  000220  0100               	movlb	0	; () banked
  6666  000222  51C5               	movf	_temperature& (0+255),w,b
  6667  000224  EC5C  F026         	call	_oled_putint8
  6668                           
  6669                           ;MOTEapp.c: 524: randomPortNum = TMR2_ReadTimer();
  6670  000228  EC88  F035         	call	_TMR2_ReadTimer	;wreg free
  6671  00022C  0100               	movlb	0	; () banked
  6672  00022E  6FEA               	movwf	_randomPortNum& (0+255),b
  6673                           
  6674                           ; BSR set to: 0
  6675                           ;MOTEapp.c: 526: if (!randomPortNum)
  6676  000230  0100               	movlb	0	; () banked
  6677  000232  51EA               	movf	_randomPortNum& (0+255),w,b
  6678  000234  0100               	movlb	0	; () banked
  6679  000236  A4D8               	btfss	status,2,c
  6680  000238  D002               	goto	l13976
  6681                           
  6682                           ; BSR set to: 0
  6683                           ;MOTEapp.c: 527: randomPortNum = 5;
  6684  00023A  0E05               	movlw	5
  6685  00023C  D007               	goto	L3
  6686  00023E                     l13976:
  6687                           
  6688                           ; BSR set to: 0
  6689                           ;MOTEapp.c: 528: else if (randomPortNum > 223)
  6690  00023E  0EDF               	movlw	223
  6691  000240  0100               	movlb	0	; () banked
  6692  000242  65EA               	cpfsgt	_randomPortNum& (0+255),b
  6693  000244  D005               	goto	l13980
  6694                           
  6695                           ; BSR set to: 0
  6696                           ;MOTEapp.c: 529: randomPortNum = randomPortNum - 50;
  6697  000246  0100               	movlb	0	; () banked
  6698  000248  51EA               	movf	_randomPortNum& (0+255),w,b
  6699  00024A  0FCE               	addlw	206
  6700  00024C                     L3:
  6701  00024C  0100               	movlb	0	; () banked
  6702  00024E  6FEA               	movwf	_randomPortNum& (0+255),b
  6703  000250                     l13980:
  6704                           
  6705                           ; BSR set to: 0
  6706                           ;MOTEapp.c: 531: oled_putUint8(randomPortNum,10,1);
  6707  000250  0E0A               	movlw	10
  6708  000252  0100               	movlb	0	; () banked
  6709  000254  6F76               	movwf	oled_putUint8@station_dot& (0+255),b
  6710  000256  0E01               	movlw	1
  6711  000258  0100               	movlb	0	; () banked
  6712  00025A  6F77               	movwf	oled_putUint8@start_page& (0+255),b
  6713  00025C  0100               	movlb	0	; () banked
  6714  00025E  51EA               	movf	_randomPortNum& (0+255),w,b
  6715  000260  EC1A  F02A         	call	_oled_putUint8
  6716                           
  6717                           ;MOTEapp.c: 533: moteApp_add8bToDataBuffer(randomPortNum, 0);
  6718  000264  0E00               	movlw	0
  6719  000266  0100               	movlb	0	; () banked
  6720  000268  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  6721  00026A  0100               	movlb	0	; () banked
  6722  00026C  51EA               	movf	_randomPortNum& (0+255),w,b
  6723  00026E  ECA6  F024         	call	_moteApp_add8bToDataBuffer
  6724                           
  6725                           ;MOTEapp.c: 534: dataBuffer[3] = 0x20;
  6726  000272  0E20               	movlw	32
  6727  000274  0101               	movlb	1	; () banked
  6728  000276  6FBF               	movwf	(_dataBuffer+3)& (0+255),b
  6729                           
  6730                           ; BSR set to: 1
  6731                           ;MOTEapp.c: 537: __nop();
  6732  000278  F000               	nop	
  6733                           
  6734                           ;MOTEapp.c: 538: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  6735  00027A  0E47               	movlw	low STR_74
  6736  00027C  0100               	movlb	0	; () banked
  6737  00027E  6F61               	movwf	sendDataCommand@string& (0+255),b
  6738  000280  0E7D               	movlw	high STR_74
  6739  000282  0100               	movlb	0	; () banked
  6740  000284  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  6741  000286  0EBC               	movlw	low _dataBuffer
  6742  000288  0100               	movlb	0	; () banked
  6743  00028A  6F63               	movwf	sendDataCommand@appData& (0+255),b
  6744  00028C  0E01               	movlw	high _dataBuffer
  6745  00028E  0100               	movlb	0	; () banked
  6746  000290  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  6747  000292  0E0C               	movlw	12
  6748  000294  0100               	movlb	0	; () banked
  6749  000296  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  6750  000298  EC83  F025         	call	_sendDataCommand	;wreg free
  6751                           
  6752                           ;MOTEapp.c: 539: secTicker = 10 - (10 / 3);
  6753  00029C  0E07               	movlw	7
  6754  00029E  0100               	movlb	0	; () banked
  6755  0002A0  6FEF               	movwf	_secTicker& (0+255),b
  6756                           
  6757                           ; BSR set to: 0
  6758                           ;MOTEapp.c: 540: runningState = runningUplinkTransmit;
  6759  0002A2  0E08               	movlw	8
  6760  0002A4  0100               	movlb	0	; () banked
  6761  0002A6  6FEE               	movwf	_runningState& (0+255),b
  6762                           
  6763                           ;MOTEapp.c: 541: }
  6764  0002A8  EF86  F009         	goto	l14476
  6765  0002AC                     l13994:
  6766                           
  6767                           ; BSR set to: 0
  6768                           ;MOTEapp.c: 542: else
  6769                           ;MOTEapp.c: 543: {
  6770                           ;MOTEapp.c: 544: if (menuTimeout)
  6771  0002AC  0100               	movlb	0	; () banked
  6772  0002AE  51F9               	movf	_menuTimeout& (0+255),w,b
  6773  0002B0  B4D8               	btfsc	status,2,c
  6774  0002B2  D00A               	goto	l14002
  6775                           
  6776                           ; BSR set to: 0
  6777                           ;MOTEapp.c: 545: {
  6778                           ;MOTEapp.c: 546: sleepTicker++;
  6779  0002B4  0100               	movlb	0	; () banked
  6780  0002B6  2BF0               	incf	_sleepTicker& (0+255),f,b
  6781                           
  6782                           ; BSR set to: 0
  6783                           ;MOTEapp.c: 547: runningState = runningSleep;
  6784  0002B8  0E0F               	movlw	15
  6785  0002BA  0100               	movlb	0	; () banked
  6786  0002BC  6FEE               	movwf	_runningState& (0+255),b
  6787                           
  6788                           ; BSR set to: 0
  6789                           ;MOTEapp.c: 548: selectButton = 1;
  6790  0002BE  0E01               	movlw	1
  6791  0002C0  0100               	movlb	0	; () banked
  6792  0002C2  6FAC               	movwf	moteRunningProcess@selectButton& (0+255),b
  6793                           
  6794                           ;MOTEapp.c: 549: } else {
  6795  0002C4  EF86  F009         	goto	l14476
  6796  0002C8                     l14002:
  6797                           
  6798                           ; BSR set to: 0
  6799                           ;MOTEapp.c: 550: sleepTicker = 0;
  6800  0002C8  0E00               	movlw	0
  6801  0002CA  0100               	movlb	0	; () banked
  6802  0002CC  6FF0               	movwf	_sleepTicker& (0+255),b
  6803                           
  6804                           ; BSR set to: 0
  6805                           ;MOTEapp.c: 551: }
  6806                           ;MOTEapp.c: 552: }
  6807                           ;MOTEapp.c: 553: }
  6808                           ;MOTEapp.c: 556: switch(runningState)
  6809                           
  6810                           ; BSR set to: 0
  6811                           
  6812                           ; BSR set to: 0
  6813  0002CE  EF86  F009         	goto	l14476
  6814  0002D2  D7FF               	goto	l475
  6815  0002D4                     l14004:
  6816                           
  6817                           ;MOTEapp.c: 562: if ( (changeStates) || (selectButton) )
  6818  0002D4  0100               	movlb	0	; () banked
  6819  0002D6  51B7               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6820  0002D8  0100               	movlb	0	; () banked
  6821  0002DA  A4D8               	btfss	status,2,c
  6822  0002DC  D005               	goto	l14008
  6823                           
  6824                           ; BSR set to: 0
  6825  0002DE  0100               	movlb	0	; () banked
  6826  0002E0  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6827  0002E2  0100               	movlb	0	; () banked
  6828  0002E4  B4D8               	btfsc	status,2,c
  6829  0002E6  0012               	return	
  6830  0002E8                     l14008:
  6831                           
  6832                           ; BSR set to: 0
  6833                           ;MOTEapp.c: 563: {
  6834                           ;MOTEapp.c: 564: oled_clear();
  6835  0002E8  ECD1  F034         	call	_oled_clear	;wreg free
  6836                           
  6837                           ;MOTEapp.c: 565: oled_putString("  Issue Uplink  ",0,0);
  6838  0002EC  0EE6               	movlw	low STR_75
  6839  0002EE  0100               	movlb	0	; () banked
  6840  0002F0  6F71               	movwf	oled_putString@string& (0+255),b
  6841  0002F2  0E7A               	movlw	high STR_75
  6842  0002F4  0100               	movlb	0	; () banked
  6843  0002F6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6844  0002F8  0E00               	movlw	0
  6845  0002FA  0100               	movlb	0	; () banked
  6846  0002FC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6847  0002FE  0E00               	movlw	0
  6848  000300  0100               	movlb	0	; () banked
  6849  000302  6F74               	movwf	oled_putString@start_page& (0+255),b
  6850  000304  EC6F  F02F         	call	_oled_putString	;wreg free
  6851                           
  6852                           ;MOTEapp.c: 566: oled_putString(" LoRaWAN Packet ",0,1);
  6853  000308  0E4C               	movlw	low STR_76
  6854  00030A  0100               	movlb	0	; () banked
  6855  00030C  6F71               	movwf	oled_putString@string& (0+255),b
  6856  00030E  0E7B               	movlw	high STR_76
  6857  000310  0100               	movlb	0	; () banked
  6858  000312  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6859  000314  0E00               	movlw	0
  6860  000316  0100               	movlb	0	; () banked
  6861  000318  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6862  00031A  0E01               	movlw	1
  6863  00031C  0100               	movlb	0	; () banked
  6864  00031E  6F74               	movwf	oled_putString@start_page& (0+255),b
  6865  000320  EC6F  F02F         	call	_oled_putString	;wreg free
  6866                           
  6867                           ;MOTEapp.c: 567: oled_putString("(NAV)    (SEL) ",0,3);
  6868  000324  0E9D               	movlw	low STR_77
  6869  000326  0100               	movlb	0	; () banked
  6870  000328  6F71               	movwf	oled_putString@string& (0+255),b
  6871  00032A  0E7C               	movlw	high STR_77
  6872  00032C  0100               	movlb	0	; () banked
  6873  00032E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6874  000330  0E00               	movlw	0
  6875  000332  0100               	movlb	0	; () banked
  6876  000334  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6877  000336  0E03               	movlw	3
  6878  000338  0100               	movlb	0	; () banked
  6879  00033A  6F74               	movwf	oled_putString@start_page& (0+255),b
  6880  00033C  EC6F  F02F         	call	_oled_putString	;wreg free
  6881                           
  6882                           ;MOTEapp.c: 568: runningState = runningUplink;
  6883  000340  0E06               	movlw	6
  6884  000342  0100               	movlb	0	; () banked
  6885  000344  6FEE               	movwf	_runningState& (0+255),b
  6886                           
  6887                           ; BSR set to: 0
  6888                           ;MOTEapp.c: 569: }
  6889                           ;MOTEapp.c: 570: break;
  6890  000346  0012               	return	
  6891  000348                     l14018:
  6892                           
  6893                           ; BSR set to: 0
  6894                           ;MOTEapp.c: 572: if (changeStates)
  6895  000348  0100               	movlb	0	; () banked
  6896  00034A  51B7               	movf	moteRunningProcess@changeStates& (0+255),w,b
  6897  00034C  0100               	movlb	0	; () banked
  6898  00034E  B4D8               	btfsc	status,2,c
  6899  000350  D030               	goto	l14030
  6900                           
  6901                           ; BSR set to: 0
  6902                           ;MOTEapp.c: 573: {
  6903                           ;MOTEapp.c: 574: oled_clear();
  6904  000352  ECD1  F034         	call	_oled_clear	;wreg free
  6905                           
  6906                           ;MOTEapp.c: 575: oled_putString(" View Downlink  ",0,0);
  6907  000356  0ED5               	movlw	low STR_78
  6908  000358  0100               	movlb	0	; () banked
  6909  00035A  6F71               	movwf	oled_putString@string& (0+255),b
  6910  00035C  0E7A               	movlw	high STR_78
  6911  00035E  0100               	movlb	0	; () banked
  6912  000360  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6913  000362  0E00               	movlw	0
  6914  000364  0100               	movlb	0	; () banked
  6915  000366  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6916  000368  0E00               	movlw	0
  6917  00036A  0100               	movlb	0	; () banked
  6918  00036C  6F74               	movwf	oled_putString@start_page& (0+255),b
  6919  00036E  EC6F  F02F         	call	_oled_putString	;wreg free
  6920                           
  6921                           ;MOTEapp.c: 576: oled_putString("  Last Message  ",0,1);
  6922  000372  0EC4               	movlw	low STR_79
  6923  000374  0100               	movlb	0	; () banked
  6924  000376  6F71               	movwf	oled_putString@string& (0+255),b
  6925  000378  0E7A               	movlw	high STR_79
  6926  00037A  0100               	movlb	0	; () banked
  6927  00037C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6928  00037E  0E00               	movlw	0
  6929  000380  0100               	movlb	0	; () banked
  6930  000382  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6931  000384  0E01               	movlw	1
  6932  000386  0100               	movlb	0	; () banked
  6933  000388  6F74               	movwf	oled_putString@start_page& (0+255),b
  6934  00038A  EC6F  F02F         	call	_oled_putString	;wreg free
  6935                           
  6936                           ;MOTEapp.c: 577: oled_putString("(NAV)    (SEL) ",0,3);
  6937  00038E  0E9D               	movlw	low STR_77
  6938  000390  0100               	movlb	0	; () banked
  6939  000392  6F71               	movwf	oled_putString@string& (0+255),b
  6940  000394  0E7C               	movlw	high STR_77
  6941  000396  0100               	movlb	0	; () banked
  6942  000398  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6943  00039A  0E00               	movlw	0
  6944  00039C  0100               	movlb	0	; () banked
  6945  00039E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6946  0003A0  0E03               	movlw	3
  6947  0003A2  0100               	movlb	0	; () banked
  6948  0003A4  6F74               	movwf	oled_putString@start_page& (0+255),b
  6949  0003A6  EC6F  F02F         	call	_oled_putString	;wreg free
  6950                           
  6951                           ;MOTEapp.c: 578: runningState = runningDownlink;
  6952  0003AA  0E0A               	movlw	10
  6953  0003AC  0100               	movlb	0	; () banked
  6954  0003AE  6FEE               	movwf	_runningState& (0+255),b
  6955                           
  6956                           ;MOTEapp.c: 579: }
  6957  0003B0  0012               	return	
  6958  0003B2                     l14030:
  6959                           
  6960                           ; BSR set to: 0
  6961                           ;MOTEapp.c: 580: else if (selectButton)
  6962  0003B2  0100               	movlb	0	; () banked
  6963  0003B4  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  6964  0003B6  0100               	movlb	0	; () banked
  6965  0003B8  B4D8               	btfsc	status,2,c
  6966  0003BA  0012               	return	
  6967                           
  6968                           ; BSR set to: 0
  6969                           ;MOTEapp.c: 581: {
  6970                           ;MOTEapp.c: 582: sleepTicker = 0;
  6971  0003BC  0E00               	movlw	0
  6972  0003BE  0100               	movlb	0	; () banked
  6973  0003C0  6FF0               	movwf	_sleepTicker& (0+255),b
  6974                           
  6975                           ; BSR set to: 0
  6976                           ;MOTEapp.c: 584: oled_clear();
  6977  0003C2  ECD1  F034         	call	_oled_clear	;wreg free
  6978                           
  6979                           ;MOTEapp.c: 585: oled_putString("Uplink Pckt Type",0,0);
  6980  0003C6  0EF6               	movlw	low STR_81
  6981  0003C8  0100               	movlb	0	; () banked
  6982  0003CA  6F71               	movwf	oled_putString@string& (0+255),b
  6983  0003CC  0E7B               	movlw	high STR_81
  6984  0003CE  0100               	movlb	0	; () banked
  6985  0003D0  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  6986  0003D2  0E00               	movlw	0
  6987  0003D4  0100               	movlb	0	; () banked
  6988  0003D6  6F73               	movwf	oled_putString@station_dot& (0+255),b
  6989  0003D8  0E00               	movlw	0
  6990  0003DA  0100               	movlb	0	; () banked
  6991  0003DC  6F74               	movwf	oled_putString@start_page& (0+255),b
  6992  0003DE  EC6F  F02F         	call	_oled_putString	;wreg free
  6993                           
  6994                           ;MOTEapp.c: 588: oled_putString("(UNCNF)   (Burst) ",0,3);
  6995  0003E2  0E5A               	movlw	low STR_82
  6996  0003E4  0100               	movlb	0	; () banked
  6997  0003E6  6F71               	movwf	oled_putString@string& (0+255),b
  6998  0003E8  0E7A               	movlw	high STR_82
  6999  0003EA  0100               	movlb	0	; () banked
  7000  0003EC  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7001  0003EE  0E00               	movlw	0
  7002  0003F0  0100               	movlb	0	; () banked
  7003  0003F2  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7004  0003F4  0E03               	movlw	3
  7005  0003F6  0100               	movlb	0	; () banked
  7006  0003F8  6F74               	movwf	oled_putString@start_page& (0+255),b
  7007  0003FA  EC6F  F02F         	call	_oled_putString	;wreg free
  7008                           
  7009                           ;MOTEapp.c: 590: moteApp_clearBuffers();
  7010  0003FE  ECBF  F028         	call	_moteApp_clearBuffers	;wreg free
  7011                           
  7012                           ;MOTEapp.c: 591: randomPortNum = TMR2_ReadTimer();
  7013  000402  EC88  F035         	call	_TMR2_ReadTimer	;wreg free
  7014  000406  0100               	movlb	0	; () banked
  7015  000408  6FEA               	movwf	_randomPortNum& (0+255),b
  7016                           
  7017                           ; BSR set to: 0
  7018                           ;MOTEapp.c: 593: if (!randomPortNum)
  7019  00040A  0100               	movlb	0	; () banked
  7020  00040C  51EA               	movf	_randomPortNum& (0+255),w,b
  7021  00040E  0100               	movlb	0	; () banked
  7022  000410  A4D8               	btfss	status,2,c
  7023  000412  D002               	goto	l14048
  7024                           
  7025                           ; BSR set to: 0
  7026                           ;MOTEapp.c: 594: randomPortNum = 5;
  7027  000414  0E05               	movlw	5
  7028  000416  D007               	goto	L4
  7029  000418                     l14048:
  7030                           
  7031                           ; BSR set to: 0
  7032                           ;MOTEapp.c: 595: else if (randomPortNum > 223)
  7033  000418  0EDF               	movlw	223
  7034  00041A  0100               	movlb	0	; () banked
  7035  00041C  65EA               	cpfsgt	_randomPortNum& (0+255),b
  7036  00041E  D005               	goto	l14052
  7037                           
  7038                           ; BSR set to: 0
  7039                           ;MOTEapp.c: 596: randomPortNum = randomPortNum - 50;
  7040  000420  0100               	movlb	0	; () banked
  7041  000422  51EA               	movf	_randomPortNum& (0+255),w,b
  7042  000424  0FCE               	addlw	206
  7043  000426                     L4:
  7044  000426  0100               	movlb	0	; () banked
  7045  000428  6FEA               	movwf	_randomPortNum& (0+255),b
  7046  00042A                     l14052:
  7047                           
  7048                           ; BSR set to: 0
  7049                           ;MOTEapp.c: 597: oled_putUint8(randomPortNum,12,1);
  7050  00042A  0E0C               	movlw	12
  7051  00042C  0100               	movlb	0	; () banked
  7052  00042E  6F76               	movwf	oled_putUint8@station_dot& (0+255),b
  7053  000430  0E01               	movlw	1
  7054  000432  0100               	movlb	0	; () banked
  7055  000434  6F77               	movwf	oled_putUint8@start_page& (0+255),b
  7056  000436  0100               	movlb	0	; () banked
  7057  000438  51EA               	movf	_randomPortNum& (0+255),w,b
  7058  00043A  EC1A  F02A         	call	_oled_putUint8
  7059                           
  7060                           ;MOTEapp.c: 598: moteApp_add8bToDataBuffer(randomPortNum, 0);
  7061  00043E  0E00               	movlw	0
  7062  000440  0100               	movlb	0	; () banked
  7063  000442  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7064  000444  0100               	movlb	0	; () banked
  7065  000446  51EA               	movf	_randomPortNum& (0+255),w,b
  7066  000448  ECA6  F024         	call	_moteApp_add8bToDataBuffer
  7067                           
  7068                           ;MOTEapp.c: 599: dataBuffer[3] = 0x20;
  7069  00044C  0E20               	movlw	32
  7070  00044E  0101               	movlb	1	; () banked
  7071  000450  6FBF               	movwf	(_dataBuffer+3)& (0+255),b
  7072                           
  7073                           ; BSR set to: 1
  7074                           ;MOTEapp.c: 601: light = 0;
  7075  000452  0E00               	movlw	0
  7076  000454  0100               	movlb	0	; () banked
  7077  000456  6FC4               	movwf	(_light+1)& (0+255),b
  7078  000458  0E00               	movlw	0
  7079  00045A  6FC3               	movwf	_light& (0+255),b
  7080                           
  7081                           ; BSR set to: 0
  7082                           ;MOTEapp.c: 602: temperature = 0;
  7083  00045C  0E00               	movlw	0
  7084  00045E  0100               	movlb	0	; () banked
  7085  000460  6FC6               	movwf	(_temperature+1)& (0+255),b
  7086  000462  0E00               	movlw	0
  7087  000464  6FC5               	movwf	_temperature& (0+255),b
  7088                           
  7089                           ; BSR set to: 0
  7090                           ;MOTEapp.c: 603: __nop();
  7091  000466  F000               	nop	
  7092                           
  7093                           ;MOTEapp.c: 604: moteApp_setSensorsInput();
  7094  000468  EC91  F02C         	call	_moteApp_setSensorsInput	;wreg free
  7095                           
  7096                           ;MOTEapp.c: 605: moteApp_delayms(500);
  7097  00046C  0E01               	movlw	1
  7098  00046E  0100               	movlb	0	; () banked
  7099  000470  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
  7100  000472  0EF4               	movlw	244
  7101  000474  6F60               	movwf	moteApp_delayms@length& (0+255),b
  7102  000476  ECFF  F032         	call	_moteApp_delayms	;wreg free
  7103                           
  7104                           ;MOTEapp.c: 606: uint8_t sizeOfUpdate = 0;
  7105  00047A  0E00               	movlw	0
  7106  00047C  0100               	movlb	0	; () banked
  7107  00047E  6FB2               	movwf	moteRunningProcess@sizeOfUpdate_1735& (0+255),b
  7108                           
  7109                           ; BSR set to: 0
  7110                           ;MOTEapp.c: 607: light = moteApp_convertSensorValue(moteApp_getLightValue());
  7111  000480  EC95  F030         	call	_moteApp_getLightValue	;wreg free
  7112  000484  C06D  F071         	movff	?_moteApp_getLightValue,moteApp_convertSensorValue@string
  7113  000488  C06E  F072         	movff	?_moteApp_getLightValue+1,moteApp_convertSensorValue@string+1
  7114  00048C  EC64  F02B         	call	_moteApp_convertSensorValue	;wreg free
  7115  000490  C071  F0C3         	movff	?_moteApp_convertSensorValue,_light
  7116  000494  C072  F0C4         	movff	?_moteApp_convertSensorValue+1,_light+1
  7117                           
  7118                           ;MOTEapp.c: 609: moteApp_add16bToDataBuffer(light, 4);
  7119  000498  C0C3  F067         	movff	_light,moteApp_add16bToDataBuffer@number
  7120  00049C  C0C4  F068         	movff	_light+1,moteApp_add16bToDataBuffer@number+1
  7121  0004A0  0E04               	movlw	4
  7122  0004A2  0100               	movlb	0	; () banked
  7123  0004A4  6F69               	movwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),b
  7124  0004A6  EC24  F019         	call	_moteApp_add16bToDataBuffer	;wreg free
  7125                           
  7126                           ;MOTEapp.c: 610: __nop();
  7127  0004AA  F000               	nop	
  7128                           
  7129                           ;MOTEapp.c: 611: __nop();
  7130  0004AC  F000               	nop	
  7131                           
  7132                           ;MOTEapp.c: 612: temperature = moteApp_convertSensorValue(moteApp_getTempValue());
  7133  0004AE  EC9B  F031         	call	_moteApp_getTempValue	;wreg free
  7134  0004B2  C063  F071         	movff	?_moteApp_getTempValue,moteApp_convertSensorValue@string
  7135  0004B6  C064  F072         	movff	?_moteApp_getTempValue+1,moteApp_convertSensorValue@string+1
  7136  0004BA  EC64  F02B         	call	_moteApp_convertSensorValue	;wreg free
  7137  0004BE  C071  F0C5         	movff	?_moteApp_convertSensorValue,_temperature
  7138  0004C2  C072  F0C6         	movff	?_moteApp_convertSensorValue+1,_temperature+1
  7139                           
  7140                           ;MOTEapp.c: 613: temperature = ADC_TempConversion(temperature);
  7141  0004C6  0100               	movlb	0	; () banked
  7142  0004C8  51C5               	movf	_temperature& (0+255),w,b
  7143  0004CA  EC79  F021         	call	_ADC_TempConversion
  7144  0004CE  0100               	movlb	0	; () banked
  7145  0004D0  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  7146  0004D2  0100               	movlb	0	; () banked
  7147  0004D4  51AF               	movf	??_moteRunningProcess& (0+255),w,b
  7148  0004D6  0100               	movlb	0	; () banked
  7149  0004D8  6FC5               	movwf	_temperature& (0+255),b
  7150  0004DA  6BC6               	clrf	(_temperature+1)& (0+255),b
  7151                           
  7152                           ; BSR set to: 0
  7153                           ;MOTEapp.c: 614: moteApp_add8bToDataBuffer(temperature, 9);
  7154  0004DC  0E09               	movlw	9
  7155  0004DE  0100               	movlb	0	; () banked
  7156  0004E0  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7157  0004E2  0100               	movlb	0	; () banked
  7158  0004E4  51C5               	movf	_temperature& (0+255),w,b
  7159  0004E6  ECA6  F024         	call	_moteApp_add8bToDataBuffer
  7160                           
  7161                           ;MOTEapp.c: 615: __nop();
  7162  0004EA  F000               	nop	
  7163                           
  7164                           ;MOTEapp.c: 617: runningState = runningUplinkSelect;
  7165  0004EC  0E07               	movlw	7
  7166  0004EE  0100               	movlb	0	; () banked
  7167  0004F0  6FEE               	movwf	_runningState& (0+255),b
  7168                           
  7169                           ; BSR set to: 0
  7170                           ;MOTEapp.c: 618: }
  7171                           ;MOTEapp.c: 619: break;
  7172                           
  7173                           ; BSR set to: 0
  7174  0004F2  0012               	return	
  7175  0004F4                     l14088:
  7176                           
  7177                           ; BSR set to: 0
  7178                           ;MOTEapp.c: 621: if (changeStates)
  7179  0004F4  0100               	movlb	0	; () banked
  7180  0004F6  51B7               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7181  0004F8  0100               	movlb	0	; () banked
  7182  0004FA  B4D8               	btfsc	status,2,c
  7183  0004FC  D011               	goto	l14092
  7184                           
  7185                           ; BSR set to: 0
  7186                           ;MOTEapp.c: 622: {
  7187                           ;MOTEapp.c: 623: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  7188  0004FE  0E47               	movlw	low STR_74
  7189  000500  0100               	movlb	0	; () banked
  7190  000502  6F61               	movwf	sendDataCommand@string& (0+255),b
  7191  000504  0E7D               	movlw	high STR_74
  7192  000506  0100               	movlb	0	; () banked
  7193  000508  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  7194  00050A  0EBC               	movlw	low _dataBuffer
  7195  00050C  0100               	movlb	0	; () banked
  7196  00050E  6F63               	movwf	sendDataCommand@appData& (0+255),b
  7197  000510  0E01               	movlw	high _dataBuffer
  7198  000512  0100               	movlb	0	; () banked
  7199  000514  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7200  000516  0E0C               	movlw	12
  7201  000518  0100               	movlb	0	; () banked
  7202  00051A  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  7203  00051C  EC83  F025         	call	_sendDataCommand	;wreg free
  7204  000520                     l14092:
  7205                           
  7206                           ;MOTEapp.c: 625: }
  7207                           ;MOTEapp.c: 626: if (selectButton)
  7208  000520  0100               	movlb	0	; () banked
  7209  000522  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7210  000524  0100               	movlb	0	; () banked
  7211  000526  B4D8               	btfsc	status,2,c
  7212  000528  D045               	goto	l14112
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;MOTEapp.c: 627: {
  7216                           ;MOTEapp.c: 629: int ctr;
  7217                           ;MOTEapp.c: 632: moteApp_clearBuffers();
  7218  00052A  ECBF  F028         	call	_moteApp_clearBuffers	;wreg free
  7219                           
  7220                           ;MOTEapp.c: 633: moteApp_add16bToDataBuffer(sendingCounter, 3);
  7221  00052E  C14A  F067         	movff	_sendingCounter,moteApp_add16bToDataBuffer@number
  7222  000532  C14B  F068         	movff	_sendingCounter+1,moteApp_add16bToDataBuffer@number+1
  7223  000536  0E03               	movlw	3
  7224  000538  0100               	movlb	0	; () banked
  7225  00053A  6F69               	movwf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),b
  7226  00053C  EC24  F019         	call	_moteApp_add16bToDataBuffer	;wreg free
  7227                           
  7228                           ;MOTEapp.c: 634: for( ctr = 0; ctr < 5; ctr = ctr + 1 ){
  7229  000540  0E00               	movlw	0
  7230  000542  0100               	movlb	0	; () banked
  7231  000544  6FB4               	movwf	(moteRunningProcess@ctr+1)& (0+255),b
  7232  000546  0E00               	movlw	0
  7233  000548  6FB3               	movwf	moteRunningProcess@ctr& (0+255),b
  7234  00054A                     l14098:
  7235                           
  7236                           ; BSR set to: 0
  7237  00054A  0100               	movlb	0	; () banked
  7238  00054C  BFB4               	btfsc	(moteRunningProcess@ctr+1)& (0+255),7,b
  7239  00054E  D008               	goto	l14102
  7240  000550  0100               	movlb	0	; () banked
  7241  000552  51B4               	movf	(moteRunningProcess@ctr+1)& (0+255),w,b
  7242  000554  E128               	bnz	l14110
  7243  000556  0E05               	movlw	5
  7244  000558  0100               	movlb	0	; () banked
  7245  00055A  5DB3               	subwf	moteRunningProcess@ctr& (0+255),w,b
  7246  00055C  B0D8               	btfsc	status,0,c
  7247  00055E  D023               	goto	l14110
  7248  000560                     l14102:
  7249                           
  7250                           ; BSR set to: 0
  7251                           ;MOTEapp.c: 635: moteApp_add8bToDataBuffer(ctr, 9);
  7252  000560  0E09               	movlw	9
  7253  000562  0100               	movlb	0	; () banked
  7254  000564  6F66               	movwf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),b
  7255  000566  0100               	movlb	0	; () banked
  7256  000568  51B3               	movf	moteRunningProcess@ctr& (0+255),w,b
  7257  00056A  ECA6  F024         	call	_moteApp_add8bToDataBuffer
  7258                           
  7259                           ;MOTEapp.c: 637: sendDataCommand("mac tx uncnf ", dataBuffer, 12);
  7260  00056E  0E47               	movlw	low STR_74
  7261  000570  0100               	movlb	0	; () banked
  7262  000572  6F61               	movwf	sendDataCommand@string& (0+255),b
  7263  000574  0E7D               	movlw	high STR_74
  7264  000576  0100               	movlb	0	; () banked
  7265  000578  6F62               	movwf	(sendDataCommand@string+1)& (0+255),b
  7266  00057A  0EBC               	movlw	low _dataBuffer
  7267  00057C  0100               	movlb	0	; () banked
  7268  00057E  6F63               	movwf	sendDataCommand@appData& (0+255),b
  7269  000580  0E01               	movlw	high _dataBuffer
  7270  000582  0100               	movlb	0	; () banked
  7271  000584  6F64               	movwf	(sendDataCommand@appData+1)& (0+255),b
  7272  000586  0E0C               	movlw	12
  7273  000588  0100               	movlb	0	; () banked
  7274  00058A  6F65               	movwf	sendDataCommand@dataLength& (0+255),b
  7275  00058C  EC83  F025         	call	_sendDataCommand	;wreg free
  7276  000590  0E01               	movlw	1
  7277  000592  0100               	movlb	0	; () banked
  7278  000594  25B3               	addwf	moteRunningProcess@ctr& (0+255),w,b
  7279  000596  0100               	movlb	0	; () banked
  7280  000598  6FB3               	movwf	moteRunningProcess@ctr& (0+255),b
  7281  00059A  0E00               	movlw	0
  7282  00059C  0100               	movlb	0	; () banked
  7283  00059E  21B4               	addwfc	(moteRunningProcess@ctr+1)& (0+255),w,b
  7284  0005A0  0100               	movlb	0	; () banked
  7285  0005A2  6FB4               	movwf	(moteRunningProcess@ctr+1)& (0+255),b
  7286  0005A4  D7D2               	goto	l14098
  7287  0005A6                     l14110:
  7288                           
  7289                           ; BSR set to: 0
  7290                           ;MOTEapp.c: 638: }
  7291                           ;MOTEapp.c: 639: sendingCounter++;
  7292  0005A6  0E01               	movlw	1
  7293  0005A8  0101               	movlb	1	; () banked
  7294  0005AA  274A               	addwf	_sendingCounter& (0+255),f,b
  7295  0005AC  0E00               	movlw	0
  7296  0005AE  234B               	addwfc	(_sendingCounter+1)& (0+255),f,b
  7297  0005B0  234C               	addwfc	(_sendingCounter+2)& (0+255),f,b
  7298  0005B2  234D               	addwfc	(_sendingCounter+3)& (0+255),f,b
  7299  0005B4                     l14112:
  7300                           
  7301                           ;MOTEapp.c: 641: }
  7302                           ;MOTEapp.c: 643: if ( (changeStates) || (selectButton) )
  7303  0005B4  0100               	movlb	0	; () banked
  7304  0005B6  51B7               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7305  0005B8  0100               	movlb	0	; () banked
  7306  0005BA  A4D8               	btfss	status,2,c
  7307  0005BC  D005               	goto	l14116
  7308                           
  7309                           ; BSR set to: 0
  7310  0005BE  0100               	movlb	0	; () banked
  7311  0005C0  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7312  0005C2  0100               	movlb	0	; () banked
  7313  0005C4  B4D8               	btfsc	status,2,c
  7314  0005C6  0012               	return	
  7315  0005C8                     l14116:
  7316                           
  7317                           ; BSR set to: 0
  7318                           ;MOTEapp.c: 644: {
  7319                           ;MOTEapp.c: 645: oled_clear();
  7320  0005C8  ECD1  F034         	call	_oled_clear	;wreg free
  7321                           
  7322                           ;MOTEapp.c: 646: oled_putString("Sent Data: ",0,0);
  7323  0005CC  0E59               	movlw	low STR_85
  7324  0005CE  0100               	movlb	0	; () banked
  7325  0005D0  6F71               	movwf	oled_putString@string& (0+255),b
  7326  0005D2  0E7E               	movlw	high STR_85
  7327  0005D4  0100               	movlb	0	; () banked
  7328  0005D6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7329  0005D8  0E00               	movlw	0
  7330  0005DA  0100               	movlb	0	; () banked
  7331  0005DC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7332  0005DE  0E00               	movlw	0
  7333  0005E0  0100               	movlb	0	; () banked
  7334  0005E2  6F74               	movwf	oled_putString@start_page& (0+255),b
  7335  0005E4  EC6F  F02F         	call	_oled_putString	;wreg free
  7336                           
  7337                           ;MOTEapp.c: 647: oled_putString("Tx Port #: ",0,1);
  7338  0005E8  0E4D               	movlw	low STR_86
  7339  0005EA  0100               	movlb	0	; () banked
  7340  0005EC  6F71               	movwf	oled_putString@string& (0+255),b
  7341  0005EE  0E7E               	movlw	high STR_86
  7342  0005F0  0100               	movlb	0	; () banked
  7343  0005F2  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7344  0005F4  0E00               	movlw	0
  7345  0005F6  0100               	movlb	0	; () banked
  7346  0005F8  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7347  0005FA  0E01               	movlw	1
  7348  0005FC  0100               	movlb	0	; () banked
  7349  0005FE  6F74               	movwf	oled_putString@start_page& (0+255),b
  7350  000600  EC6F  F02F         	call	_oled_putString	;wreg free
  7351                           
  7352                           ;MOTEapp.c: 648: oled_putUint8(randomPortNum,12,1);
  7353  000604  0E0C               	movlw	12
  7354  000606  0100               	movlb	0	; () banked
  7355  000608  6F76               	movwf	oled_putUint8@station_dot& (0+255),b
  7356  00060A  0E01               	movlw	1
  7357  00060C  0100               	movlb	0	; () banked
  7358  00060E  6F77               	movwf	oled_putUint8@start_page& (0+255),b
  7359  000610  0100               	movlb	0	; () banked
  7360  000612  51EA               	movf	_randomPortNum& (0+255),w,b
  7361  000614  EC1A  F02A         	call	_oled_putUint8
  7362                           
  7363                           ;MOTEapp.c: 649: oled_putString("L:       T: ",0,2);
  7364  000618  0E7F               	movlw	low STR_73
  7365  00061A  0100               	movlb	0	; () banked
  7366  00061C  6F71               	movwf	oled_putString@string& (0+255),b
  7367  00061E  0E7D               	movlw	high STR_73
  7368  000620  0100               	movlb	0	; () banked
  7369  000622  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7370  000624  0E00               	movlw	0
  7371  000626  0100               	movlb	0	; () banked
  7372  000628  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7373  00062A  0E02               	movlw	2
  7374  00062C  0100               	movlb	0	; () banked
  7375  00062E  6F74               	movwf	oled_putString@start_page& (0+255),b
  7376  000630  EC6F  F02F         	call	_oled_putString	;wreg free
  7377                           
  7378                           ;MOTEapp.c: 650: oled_putString(moteApp_getLightString(), 3, 2);
  7379  000634  EC6D  F035         	call	_moteApp_getLightString	;wreg free
  7380  000638  C060  F071         	movff	?_moteApp_getLightString,oled_putString@string
  7381  00063C  C061  F072         	movff	?_moteApp_getLightString+1,oled_putString@string+1
  7382  000640  0E03               	movlw	3
  7383  000642  0100               	movlb	0	; () banked
  7384  000644  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7385  000646  0E02               	movlw	2
  7386  000648  0100               	movlb	0	; () banked
  7387  00064A  6F74               	movwf	oled_putString@start_page& (0+255),b
  7388  00064C  EC6F  F02F         	call	_oled_putString	;wreg free
  7389                           
  7390                           ;MOTEapp.c: 651: oled_putint8(temperature,11,2);
  7391  000650  0E0B               	movlw	11
  7392  000652  0100               	movlb	0	; () banked
  7393  000654  6F76               	movwf	oled_putint8@station_dot& (0+255),b
  7394  000656  0E02               	movlw	2
  7395  000658  0100               	movlb	0	; () banked
  7396  00065A  6F77               	movwf	oled_putint8@start_page& (0+255),b
  7397  00065C  0100               	movlb	0	; () banked
  7398  00065E  51C5               	movf	_temperature& (0+255),w,b
  7399  000660  EC5C  F026         	call	_oled_putint8
  7400                           
  7401                           ;MOTEapp.c: 652: LATAbits.LATA6 = 0;
  7402  000664  9C89               	bcf	3977,6,c	;volatile
  7403                           
  7404                           ;MOTEapp.c: 653: runningState = runningUplinkTransmit;
  7405  000666  0E08               	movlw	8
  7406  000668  0100               	movlb	0	; () banked
  7407  00066A  6FEE               	movwf	_runningState& (0+255),b
  7408                           
  7409                           ; BSR set to: 0
  7410                           ;MOTEapp.c: 654: }
  7411                           ;MOTEapp.c: 655: break;
  7412  00066C  0012               	return	
  7413  00066E                     l14134:
  7414                           
  7415                           ; BSR set to: 0
  7416                           ;MOTEapp.c: 657: if ( messageReady )
  7417  00066E  0100               	movlb	0	; () banked
  7418  000670  51AD               	movf	moteRunningProcess@messageReady& (0+255),w,b
  7419  000672  0100               	movlb	0	; () banked
  7420  000674  B4D8               	btfsc	status,2,c
  7421  000676  D13B               	goto	l14200
  7422                           
  7423                           ; BSR set to: 0
  7424                           ;MOTEapp.c: 658: {
  7425                           ;MOTEapp.c: 659: if(strcmp(moduleResonseBuffer, "ok") == 0)
  7426  000678  0E5C               	movlw	low _moduleResonseBuffer
  7427  00067A  0100               	movlb	0	; () banked
  7428  00067C  6F60               	movwf	strcmp@s1& (0+255),b
  7429  00067E  0E01               	movlw	high _moduleResonseBuffer
  7430  000680  0100               	movlb	0	; () banked
  7431  000682  6F61               	movwf	(strcmp@s1+1)& (0+255),b
  7432  000684  0EF8               	movlw	low STR_44
  7433  000686  0100               	movlb	0	; () banked
  7434  000688  6F62               	movwf	strcmp@s2& (0+255),b
  7435  00068A  0E7F               	movlw	high STR_44
  7436  00068C  0100               	movlb	0	; () banked
  7437  00068E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
  7438  000690  EC1C  F031         	call	_strcmp	;wreg free
  7439  000694  0100               	movlb	0	; () banked
  7440  000696  5160               	movf	?_strcmp& (0+255),w,b
  7441  000698  0100               	movlb	0	; () banked
  7442  00069A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
  7443  00069C  A4D8               	btfss	status,2,c
  7444  00069E  D004               	goto	l14142
  7445                           
  7446                           ; BSR set to: 0
  7447                           ;MOTEapp.c: 660: {
  7448                           ;MOTEapp.c: 661: LATAbits.LATA6 = 1;
  7449  0006A0  8C89               	bsf	3977,6,c	;volatile
  7450                           
  7451                           ; BSR set to: 0
  7452                           ;MOTEapp.c: 662: runningState = runningUplinkTransmit;
  7453  0006A2  0E08               	movlw	8
  7454  0006A4  0100               	movlb	0	; () banked
  7455  0006A6  6FEE               	movwf	_runningState& (0+255),b
  7456  0006A8                     l14142:
  7457                           
  7458                           ; BSR set to: 0
  7459                           ;MOTEapp.c: 663: }
  7460                           ;MOTEapp.c: 664: if(strncmp(moduleResonseBuffer, "mac_rx", 6) == 0)
  7461  0006A8  0E5C               	movlw	low _moduleResonseBuffer
  7462  0006AA  0100               	movlb	0	; () banked
  7463  0006AC  6F60               	movwf	strncmp@s1& (0+255),b
  7464  0006AE  0E01               	movlw	high _moduleResonseBuffer
  7465  0006B0  0100               	movlb	0	; () banked
  7466  0006B2  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7467  0006B4  0EAB               	movlw	low STR_89
  7468  0006B6  0100               	movlb	0	; () banked
  7469  0006B8  6F62               	movwf	strncmp@s2& (0+255),b
  7470  0006BA  0E7F               	movlw	high STR_89
  7471  0006BC  0100               	movlb	0	; () banked
  7472  0006BE  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7473  0006C0  0E00               	movlw	0
  7474  0006C2  0100               	movlb	0	; () banked
  7475  0006C4  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7476  0006C6  0E06               	movlw	6
  7477  0006C8  6F64               	movwf	strncmp@len& (0+255),b
  7478  0006CA  EC13  F02B         	call	_strncmp	;wreg free
  7479  0006CE  0100               	movlb	0	; () banked
  7480  0006D0  5160               	movf	?_strncmp& (0+255),w,b
  7481  0006D2  0100               	movlb	0	; () banked
  7482  0006D4  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7483  0006D6  A4D8               	btfss	status,2,c
  7484  0006D8  D089               	goto	l14184
  7485                           
  7486                           ; BSR set to: 0
  7487                           ;MOTEapp.c: 665: {
  7488                           ;MOTEapp.c: 666: uint8_t bufferReadPos = 7;
  7489  0006DA  0E07               	movlw	7
  7490  0006DC  0100               	movlb	0	; () banked
  7491  0006DE  6FB6               	movwf	moteRunningProcess@bufferReadPos& (0+255),b
  7492                           
  7493                           ; BSR set to: 0
  7494                           ;MOTEapp.c: 670: responsePortNum[0] = moduleResonseBuffer[bufferReadPos++];
  7495  0006E0  0100               	movlb	0	; () banked
  7496  0006E2  51B6               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7497  0006E4  0D01               	mullw	1
  7498  0006E6  0E5C               	movlw	low _moduleResonseBuffer
  7499  0006E8  24F3               	addwf	prodl,w,c
  7500  0006EA  6ED9               	movwf	fsr2l,c
  7501  0006EC  0E01               	movlw	high _moduleResonseBuffer
  7502  0006EE  20F4               	addwfc	prodh,w,c
  7503  0006F0  6EDA               	movwf	fsr2h,c
  7504  0006F2  50DF               	movf	indf2,w,c
  7505  0006F4  0101               	movlb	1	; () banked
  7506  0006F6  6FEF               	movwf	_responsePortNum& (0+255),b
  7507                           
  7508                           ; BSR set to: 1
  7509  0006F8  0100               	movlb	0	; () banked
  7510  0006FA  2BB6               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7511                           
  7512                           ; BSR set to: 0
  7513                           ;MOTEapp.c: 671: responsePortNum[1] = moduleResonseBuffer[bufferReadPos++];
  7514  0006FC  0100               	movlb	0	; () banked
  7515  0006FE  51B6               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7516  000700  0D01               	mullw	1
  7517  000702  0E5C               	movlw	low _moduleResonseBuffer
  7518  000704  24F3               	addwf	prodl,w,c
  7519  000706  6ED9               	movwf	fsr2l,c
  7520  000708  0E01               	movlw	high _moduleResonseBuffer
  7521  00070A  20F4               	addwfc	prodh,w,c
  7522  00070C  6EDA               	movwf	fsr2h,c
  7523  00070E  50DF               	movf	indf2,w,c
  7524  000710  0101               	movlb	1	; () banked
  7525  000712  6FF0               	movwf	(_responsePortNum+1)& (0+255),b
  7526                           
  7527                           ; BSR set to: 1
  7528  000714  0100               	movlb	0	; () banked
  7529  000716  2BB6               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7530                           
  7531                           ; BSR set to: 0
  7532                           ;MOTEapp.c: 672: if (responsePortNum[1] != ' ')
  7533  000718  0E20               	movlw	32
  7534  00071A  0101               	movlb	1	; () banked
  7535  00071C  19F0               	xorwf	(_responsePortNum+1)& (0+255),w,b
  7536  00071E  B4D8               	btfsc	status,2,c
  7537  000720  D015               	goto	l14164
  7538                           
  7539                           ; BSR set to: 1
  7540                           ;MOTEapp.c: 673: {
  7541                           ;MOTEapp.c: 674: responsePortNum[2] = moduleResonseBuffer[bufferReadPos++];
  7542  000722  0100               	movlb	0	; () banked
  7543  000724  51B6               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7544  000726  0D01               	mullw	1
  7545  000728  0E5C               	movlw	low _moduleResonseBuffer
  7546  00072A  24F3               	addwf	prodl,w,c
  7547  00072C  6ED9               	movwf	fsr2l,c
  7548  00072E  0E01               	movlw	high _moduleResonseBuffer
  7549  000730  20F4               	addwfc	prodh,w,c
  7550  000732  6EDA               	movwf	fsr2h,c
  7551  000734  50DF               	movf	indf2,w,c
  7552  000736  0101               	movlb	1	; () banked
  7553  000738  6FF1               	movwf	(_responsePortNum+2)& (0+255),b
  7554                           
  7555                           ; BSR set to: 1
  7556  00073A  0100               	movlb	0	; () banked
  7557  00073C  2BB6               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7558                           
  7559                           ; BSR set to: 0
  7560                           ;MOTEapp.c: 675: if (responsePortNum[2] != ' ')
  7561  00073E  0E20               	movlw	32
  7562  000740  0101               	movlb	1	; () banked
  7563  000742  19F1               	xorwf	(_responsePortNum+2)& (0+255),w,b
  7564  000744  B4D8               	btfsc	status,2,c
  7565  000746  D002               	goto	l14164
  7566                           
  7567                           ; BSR set to: 1
  7568                           ;MOTEapp.c: 676: {
  7569                           ;MOTEapp.c: 677: bufferReadPos++;
  7570  000748  0100               	movlb	0	; () banked
  7571  00074A  2BB6               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7572  00074C                     l14164:
  7573                           
  7574                           ;MOTEapp.c: 678: }
  7575                           ;MOTEapp.c: 679: }
  7576                           ;MOTEapp.c: 681: for (uint8_t counter = 0; counter < sizeof(moduleResonseBuffer); counte
      +                          r++)
  7577  00074C  0E00               	movlw	0
  7578  00074E  0100               	movlb	0	; () banked
  7579  000750  6FB5               	movwf	moteRunningProcess@counter& (0+255),b
  7580  000752                     l14166:
  7581                           
  7582                           ; BSR set to: 0
  7583  000752  0E3F               	movlw	63
  7584  000754  0100               	movlb	0	; () banked
  7585  000756  65B5               	cpfsgt	moteRunningProcess@counter& (0+255),b
  7586  000758  D001               	goto	l14170
  7587  00075A  D029               	goto	l504
  7588  00075C                     l14170:
  7589                           
  7590                           ; BSR set to: 0
  7591                           ;MOTEapp.c: 682: {
  7592                           ;MOTEapp.c: 683: responseData[counter] = moduleResonseBuffer[bufferReadPos];
  7593  00075C  0100               	movlb	0	; () banked
  7594  00075E  51B6               	movf	moteRunningProcess@bufferReadPos& (0+255),w,b
  7595  000760  0D01               	mullw	1
  7596  000762  0E5C               	movlw	low _moduleResonseBuffer
  7597  000764  24F3               	addwf	prodl,w,c
  7598  000766  6ED9               	movwf	fsr2l,c
  7599  000768  0E01               	movlw	high _moduleResonseBuffer
  7600  00076A  20F4               	addwfc	prodh,w,c
  7601  00076C  6EDA               	movwf	fsr2h,c
  7602  00076E  0100               	movlb	0	; () banked
  7603  000770  51B5               	movf	moteRunningProcess@counter& (0+255),w,b
  7604  000772  0D01               	mullw	1
  7605  000774  0E9C               	movlw	low _responseData
  7606  000776  24F3               	addwf	prodl,w,c
  7607  000778  6EE1               	movwf	fsr1l,c
  7608  00077A  0E01               	movlw	high _responseData
  7609  00077C  20F4               	addwfc	prodh,w,c
  7610  00077E  6EE2               	movwf	fsr1h,c
  7611  000780  CFDF FFE7          	movff	indf2,indf1
  7612                           
  7613                           ; BSR set to: 0
  7614                           ;MOTEapp.c: 685: if (responseData[counter] != 0x00)
  7615  000784  0100               	movlb	0	; () banked
  7616  000786  51B5               	movf	moteRunningProcess@counter& (0+255),w,b
  7617  000788  0D01               	mullw	1
  7618  00078A  0E9C               	movlw	low _responseData
  7619  00078C  24F3               	addwf	prodl,w,c
  7620  00078E  6ED9               	movwf	fsr2l,c
  7621  000790  0E01               	movlw	high _responseData
  7622  000792  20F4               	addwfc	prodh,w,c
  7623  000794  6EDA               	movwf	fsr2h,c
  7624  000796  50DF               	movf	indf2,w,c
  7625  000798  B4D8               	btfsc	status,2,c
  7626  00079A  D003               	goto	l14176
  7627                           
  7628                           ; BSR set to: 0
  7629                           ;MOTEapp.c: 686: {
  7630                           ;MOTEapp.c: 687: bufferReadPos++;
  7631  00079C  0100               	movlb	0	; () banked
  7632  00079E  2BB6               	incf	moteRunningProcess@bufferReadPos& (0+255),f,b
  7633                           
  7634                           ;MOTEapp.c: 688: } else {
  7635  0007A0  D003               	goto	l14178
  7636  0007A2                     l14176:
  7637                           
  7638                           ; BSR set to: 0
  7639                           ;MOTEapp.c: 689: counter = sizeof(moduleResonseBuffer);
  7640  0007A2  0E40               	movlw	64
  7641  0007A4  0100               	movlb	0	; () banked
  7642  0007A6  6FB5               	movwf	moteRunningProcess@counter& (0+255),b
  7643  0007A8                     l14178:
  7644                           
  7645                           ; BSR set to: 0
  7646  0007A8  0100               	movlb	0	; () banked
  7647  0007AA  2BB5               	incf	moteRunningProcess@counter& (0+255),f,b
  7648  0007AC  D7D2               	goto	l14166
  7649  0007AE                     l504:
  7650                           
  7651                           ; BSR set to: 0
  7652                           ;MOTEapp.c: 690: }
  7653                           ;MOTEapp.c: 691: }
  7654                           ;MOTEapp.c: 693: LATAbits.LATA7 = 1;
  7655  0007AE  8E89               	bsf	3977,7,c	;volatile
  7656                           
  7657                           ;MOTEapp.c: 694: LATAbits.LATA6 = 0;
  7658  0007B0  9C89               	bcf	3977,6,c	;volatile
  7659                           
  7660                           ; BSR set to: 0
  7661                           ;MOTEapp.c: 696: oled_putString("Server Response ",0,2);
  7662  0007B2  0E19               	movlw	low STR_90
  7663  0007B4  0100               	movlb	0	; () banked
  7664  0007B6  6F71               	movwf	oled_putString@string& (0+255),b
  7665  0007B8  0E7B               	movlw	high STR_90
  7666  0007BA  0100               	movlb	0	; () banked
  7667  0007BC  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7668  0007BE  0E00               	movlw	0
  7669  0007C0  0100               	movlb	0	; () banked
  7670  0007C2  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7671  0007C4  0E02               	movlw	2
  7672  0007C6  0100               	movlb	0	; () banked
  7673  0007C8  6F74               	movwf	oled_putString@start_page& (0+255),b
  7674  0007CA  EC6F  F02F         	call	_oled_putString	;wreg free
  7675                           
  7676                           ;MOTEapp.c: 697: oled_putString("    Received    ",0,3);
  7677  0007CE  0E91               	movlw	low STR_91
  7678  0007D0  0100               	movlb	0	; () banked
  7679  0007D2  6F71               	movwf	oled_putString@string& (0+255),b
  7680  0007D4  0E7A               	movlw	high STR_91
  7681  0007D6  0100               	movlb	0	; () banked
  7682  0007D8  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7683  0007DA  0E00               	movlw	0
  7684  0007DC  0100               	movlb	0	; () banked
  7685  0007DE  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7686  0007E0  0E03               	movlw	3
  7687  0007E2  0100               	movlb	0	; () banked
  7688  0007E4  6F74               	movwf	oled_putString@start_page& (0+255),b
  7689  0007E6  EC6F  F02F         	call	_oled_putString	;wreg free
  7690                           
  7691                           ;MOTEapp.c: 698: }
  7692  0007EA  D078               	goto	l14198
  7693  0007EC                     l14184:
  7694                           
  7695                           ;MOTEapp.c: 699: else if(strncmp(moduleResonseBuffer, "mac_tx", 6) == 0)
  7696  0007EC  0E5C               	movlw	low _moduleResonseBuffer
  7697  0007EE  0100               	movlb	0	; () banked
  7698  0007F0  6F60               	movwf	strncmp@s1& (0+255),b
  7699  0007F2  0E01               	movlw	high _moduleResonseBuffer
  7700  0007F4  0100               	movlb	0	; () banked
  7701  0007F6  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7702  0007F8  0EB2               	movlw	low STR_92
  7703  0007FA  0100               	movlb	0	; () banked
  7704  0007FC  6F62               	movwf	strncmp@s2& (0+255),b
  7705  0007FE  0E7F               	movlw	high STR_92
  7706  000800  0100               	movlb	0	; () banked
  7707  000802  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7708  000804  0E00               	movlw	0
  7709  000806  0100               	movlb	0	; () banked
  7710  000808  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7711  00080A  0E06               	movlw	6
  7712  00080C  6F64               	movwf	strncmp@len& (0+255),b
  7713  00080E  EC13  F02B         	call	_strncmp	;wreg free
  7714  000812  0100               	movlb	0	; () banked
  7715  000814  5160               	movf	?_strncmp& (0+255),w,b
  7716  000816  0100               	movlb	0	; () banked
  7717  000818  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7718  00081A  A4D8               	btfss	status,2,c
  7719  00081C  D010               	goto	l14190
  7720                           
  7721                           ; BSR set to: 0
  7722                           ;MOTEapp.c: 700: {
  7723                           ;MOTEapp.c: 701: LATAbits.LATA6 = 0;
  7724  00081E  9C89               	bcf	3977,6,c	;volatile
  7725                           
  7726                           ; BSR set to: 0
  7727                           ;MOTEapp.c: 702: oled_putString("Data Transmitted",0,3);
  7728  000820  0ED4               	movlw	low STR_93
  7729  000822  0100               	movlb	0	; () banked
  7730  000824  6F71               	movwf	oled_putString@string& (0+255),b
  7731  000826  0E7B               	movlw	high STR_93
  7732  000828  0100               	movlb	0	; () banked
  7733  00082A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7734  00082C  0E00               	movlw	0
  7735  00082E  0100               	movlb	0	; () banked
  7736  000830  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7737  000832  0E03               	movlw	3
  7738  000834  0100               	movlb	0	; () banked
  7739  000836  6F74               	movwf	oled_putString@start_page& (0+255),b
  7740  000838  EC6F  F02F         	call	_oled_putString	;wreg free
  7741                           
  7742                           ;MOTEapp.c: 703: }
  7743  00083C  D04F               	goto	l14198
  7744  00083E                     l14190:
  7745                           
  7746                           ;MOTEapp.c: 704: else if(strncmp(moduleResonseBuffer, "mac_er", 6) == 0)
  7747  00083E  0E5C               	movlw	low _moduleResonseBuffer
  7748  000840  0100               	movlb	0	; () banked
  7749  000842  6F60               	movwf	strncmp@s1& (0+255),b
  7750  000844  0E01               	movlw	high _moduleResonseBuffer
  7751  000846  0100               	movlb	0	; () banked
  7752  000848  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7753  00084A  0EA4               	movlw	low STR_94
  7754  00084C  0100               	movlb	0	; () banked
  7755  00084E  6F62               	movwf	strncmp@s2& (0+255),b
  7756  000850  0E7F               	movlw	high STR_94
  7757  000852  0100               	movlb	0	; () banked
  7758  000854  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7759  000856  0E00               	movlw	0
  7760  000858  0100               	movlb	0	; () banked
  7761  00085A  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7762  00085C  0E06               	movlw	6
  7763  00085E  6F64               	movwf	strncmp@len& (0+255),b
  7764  000860  EC13  F02B         	call	_strncmp	;wreg free
  7765  000864  0100               	movlb	0	; () banked
  7766  000866  5160               	movf	?_strncmp& (0+255),w,b
  7767  000868  0100               	movlb	0	; () banked
  7768  00086A  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7769  00086C  A4D8               	btfss	status,2,c
  7770  00086E  D00F               	goto	l14194
  7771                           
  7772                           ; BSR set to: 0
  7773                           ;MOTEapp.c: 705: {
  7774                           ;MOTEapp.c: 706: oled_putString("Mac Error Occurred",0,3);
  7775  000870  0E6D               	movlw	low STR_95
  7776  000872  0100               	movlb	0	; () banked
  7777  000874  6F71               	movwf	oled_putString@string& (0+255),b
  7778  000876  0E7A               	movlw	high STR_95
  7779  000878  0100               	movlb	0	; () banked
  7780  00087A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7781  00087C  0E00               	movlw	0
  7782  00087E  0100               	movlb	0	; () banked
  7783  000880  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7784  000882  0E03               	movlw	3
  7785  000884  0100               	movlb	0	; () banked
  7786  000886  6F74               	movwf	oled_putString@start_page& (0+255),b
  7787  000888  EC6F  F02F         	call	_oled_putString	;wreg free
  7788                           
  7789                           ;MOTEapp.c: 707: }
  7790  00088C  D027               	goto	l14198
  7791  00088E                     l14194:
  7792                           
  7793                           ;MOTEapp.c: 708: else if(strncmp(moduleResonseBuffer, "no_fre", 6) == 0)
  7794  00088E  0E5C               	movlw	low _moduleResonseBuffer
  7795  000890  0100               	movlb	0	; () banked
  7796  000892  6F60               	movwf	strncmp@s1& (0+255),b
  7797  000894  0E01               	movlw	high _moduleResonseBuffer
  7798  000896  0100               	movlb	0	; () banked
  7799  000898  6F61               	movwf	(strncmp@s1+1)& (0+255),b
  7800  00089A  0E9D               	movlw	low STR_96
  7801  00089C  0100               	movlb	0	; () banked
  7802  00089E  6F62               	movwf	strncmp@s2& (0+255),b
  7803  0008A0  0E7F               	movlw	high STR_96
  7804  0008A2  0100               	movlb	0	; () banked
  7805  0008A4  6F63               	movwf	(strncmp@s2+1)& (0+255),b
  7806  0008A6  0E00               	movlw	0
  7807  0008A8  0100               	movlb	0	; () banked
  7808  0008AA  6F65               	movwf	(strncmp@len+1)& (0+255),b
  7809  0008AC  0E06               	movlw	6
  7810  0008AE  6F64               	movwf	strncmp@len& (0+255),b
  7811  0008B0  EC13  F02B         	call	_strncmp	;wreg free
  7812  0008B4  0100               	movlb	0	; () banked
  7813  0008B6  5160               	movf	?_strncmp& (0+255),w,b
  7814  0008B8  0100               	movlb	0	; () banked
  7815  0008BA  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
  7816  0008BC  A4D8               	btfss	status,2,c
  7817  0008BE  D00E               	goto	l14198
  7818                           
  7819                           ; BSR set to: 0
  7820                           ;MOTEapp.c: 709: {
  7821                           ;MOTEapp.c: 710: oled_putString("No Free Channel",0,3);
  7822  0008C0  0ECD               	movlw	low STR_97
  7823  0008C2  0100               	movlb	0	; () banked
  7824  0008C4  6F71               	movwf	oled_putString@string& (0+255),b
  7825  0008C6  0E7C               	movlw	high STR_97
  7826  0008C8  0100               	movlb	0	; () banked
  7827  0008CA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7828  0008CC  0E00               	movlw	0
  7829  0008CE  0100               	movlb	0	; () banked
  7830  0008D0  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7831  0008D2  0E03               	movlw	3
  7832  0008D4  0100               	movlb	0	; () banked
  7833  0008D6  6F74               	movwf	oled_putString@start_page& (0+255),b
  7834  0008D8  EC6F  F02F         	call	_oled_putString	;wreg free
  7835  0008DC                     l14198:
  7836                           
  7837                           ;MOTEapp.c: 711: }
  7838                           ;MOTEapp.c: 712: _delay((unsigned long)((16)*(48000000/4000.0)));
  7839  0008DC  0EFA               	movlw	250
  7840  0008DE  0100               	movlb	0	; () banked
  7841  0008E0  6FAF               	movwf	??_moteRunningProcess& (0+255),b
  7842  0008E2  0E58               	movlw	88
  7843  0008E4                     u14377:
  7844  0008E4  2EE8               	decfsz	wreg,f,c
  7845  0008E6  D7FE               	goto	u14377
  7846  0008E8  2FAF               	decfsz	??_moteRunningProcess& (0+255),f,b
  7847  0008EA  D7FC               	goto	u14377
  7848  0008EC  D000               	nop2	
  7849  0008EE                     l14200:
  7850                           
  7851                           ;MOTEapp.c: 713: }
  7852                           ;MOTEapp.c: 714: if ( (changeStates) || (selectButton) )
  7853  0008EE  0100               	movlb	0	; () banked
  7854  0008F0  51B7               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7855  0008F2  0100               	movlb	0	; () banked
  7856  0008F4  A4D8               	btfss	status,2,c
  7857  0008F6  D005               	goto	l14204
  7858                           
  7859                           ; BSR set to: 0
  7860  0008F8  0100               	movlb	0	; () banked
  7861  0008FA  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7862  0008FC  0100               	movlb	0	; () banked
  7863  0008FE  B4D8               	btfsc	status,2,c
  7864  000900  0012               	return	
  7865  000902                     l14204:
  7866                           
  7867                           ; BSR set to: 0
  7868                           ;MOTEapp.c: 715: {
  7869                           ;MOTEapp.c: 716: oled_clear();
  7870  000902  ECD1  F034         	call	_oled_clear	;wreg free
  7871                           
  7872                           ;MOTEapp.c: 717: oled_putString("  Issue Uplink  ",0,0);
  7873  000906  0EE6               	movlw	low STR_75
  7874  000908  0100               	movlb	0	; () banked
  7875  00090A  6F71               	movwf	oled_putString@string& (0+255),b
  7876  00090C  0E7A               	movlw	high STR_75
  7877  00090E  0100               	movlb	0	; () banked
  7878  000910  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7879  000912  0E00               	movlw	0
  7880  000914  0100               	movlb	0	; () banked
  7881  000916  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7882  000918  0E00               	movlw	0
  7883  00091A  0100               	movlb	0	; () banked
  7884  00091C  6F74               	movwf	oled_putString@start_page& (0+255),b
  7885  00091E  EC6F  F02F         	call	_oled_putString	;wreg free
  7886                           
  7887                           ;MOTEapp.c: 718: oled_putString(" LoRaWAN Packet ",0,1);
  7888  000922  0E4C               	movlw	low STR_76
  7889  000924  0100               	movlb	0	; () banked
  7890  000926  6F71               	movwf	oled_putString@string& (0+255),b
  7891  000928  0E7B               	movlw	high STR_76
  7892  00092A  0100               	movlb	0	; () banked
  7893  00092C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7894  00092E  0E00               	movlw	0
  7895  000930  0100               	movlb	0	; () banked
  7896  000932  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7897  000934  0E01               	movlw	1
  7898  000936  0100               	movlb	0	; () banked
  7899  000938  6F74               	movwf	oled_putString@start_page& (0+255),b
  7900  00093A  EC6F  F02F         	call	_oled_putString	;wreg free
  7901                           
  7902                           ;MOTEapp.c: 719: oled_putString("(NAV)    (SEL) ",0,3);
  7903  00093E  0E9D               	movlw	low STR_77
  7904  000940  0100               	movlb	0	; () banked
  7905  000942  6F71               	movwf	oled_putString@string& (0+255),b
  7906  000944  0E7C               	movlw	high STR_77
  7907  000946  0100               	movlb	0	; () banked
  7908  000948  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7909  00094A  0E00               	movlw	0
  7910  00094C  0100               	movlb	0	; () banked
  7911  00094E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7912  000950  0E03               	movlw	3
  7913  000952  0100               	movlb	0	; () banked
  7914  000954  6F74               	movwf	oled_putString@start_page& (0+255),b
  7915  000956  EC6F  F02F         	call	_oled_putString	;wreg free
  7916                           
  7917                           ;MOTEapp.c: 720: runningState = runningUplink;
  7918  00095A  0E06               	movlw	6
  7919  00095C  0100               	movlb	0	; () banked
  7920  00095E  6FEE               	movwf	_runningState& (0+255),b
  7921                           
  7922                           ; BSR set to: 0
  7923                           ;MOTEapp.c: 721: }
  7924                           ;MOTEapp.c: 722: break;
  7925  000960  0012               	return	
  7926  000962                     l14214:
  7927                           
  7928                           ; BSR set to: 0
  7929                           ;MOTEapp.c: 724: if (changeStates)
  7930  000962  0100               	movlb	0	; () banked
  7931  000964  51B7               	movf	moteRunningProcess@changeStates& (0+255),w,b
  7932  000966  0100               	movlb	0	; () banked
  7933  000968  B4D8               	btfsc	status,2,c
  7934  00096A  D030               	goto	l14226
  7935                           
  7936                           ; BSR set to: 0
  7937                           ;MOTEapp.c: 725: {
  7938                           ;MOTEapp.c: 726: oled_clear();
  7939  00096C  ECD1  F034         	call	_oled_clear	;wreg free
  7940                           
  7941                           ;MOTEapp.c: 727: oled_putString("  Sensor Data  ",0,0);
  7942  000970  0E7D               	movlw	low STR_101
  7943  000972  0100               	movlb	0	; () banked
  7944  000974  6F71               	movwf	oled_putString@string& (0+255),b
  7945  000976  0E7C               	movlw	high STR_101
  7946  000978  0100               	movlb	0	; () banked
  7947  00097A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7948  00097C  0E00               	movlw	0
  7949  00097E  0100               	movlb	0	; () banked
  7950  000980  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7951  000982  0E00               	movlw	0
  7952  000984  0100               	movlb	0	; () banked
  7953  000986  6F74               	movwf	oled_putString@start_page& (0+255),b
  7954  000988  EC6F  F02F         	call	_oled_putString	;wreg free
  7955                           
  7956                           ;MOTEapp.c: 728: oled_putString("    Display    ",0,1);
  7957  00098C  0E6D               	movlw	low STR_102
  7958  00098E  0100               	movlb	0	; () banked
  7959  000990  6F71               	movwf	oled_putString@string& (0+255),b
  7960  000992  0E7C               	movlw	high STR_102
  7961  000994  0100               	movlb	0	; () banked
  7962  000996  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7963  000998  0E00               	movlw	0
  7964  00099A  0100               	movlb	0	; () banked
  7965  00099C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7966  00099E  0E01               	movlw	1
  7967  0009A0  0100               	movlb	0	; () banked
  7968  0009A2  6F74               	movwf	oled_putString@start_page& (0+255),b
  7969  0009A4  EC6F  F02F         	call	_oled_putString	;wreg free
  7970                           
  7971                           ;MOTEapp.c: 729: oled_putString("(NAV)    (SEL) ",0,3);
  7972  0009A8  0E9D               	movlw	low STR_77
  7973  0009AA  0100               	movlb	0	; () banked
  7974  0009AC  6F71               	movwf	oled_putString@string& (0+255),b
  7975  0009AE  0E7C               	movlw	high STR_77
  7976  0009B0  0100               	movlb	0	; () banked
  7977  0009B2  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  7978  0009B4  0E00               	movlw	0
  7979  0009B6  0100               	movlb	0	; () banked
  7980  0009B8  6F73               	movwf	oled_putString@station_dot& (0+255),b
  7981  0009BA  0E03               	movlw	3
  7982  0009BC  0100               	movlb	0	; () banked
  7983  0009BE  6F74               	movwf	oled_putString@start_page& (0+255),b
  7984  0009C0  EC6F  F02F         	call	_oled_putString	;wreg free
  7985                           
  7986                           ;MOTEapp.c: 730: runningState = runningSensor;
  7987  0009C4  0E01               	movlw	1
  7988  0009C6  0100               	movlb	0	; () banked
  7989  0009C8  6FEE               	movwf	_runningState& (0+255),b
  7990                           
  7991                           ;MOTEapp.c: 731: }
  7992  0009CA  0012               	return	
  7993  0009CC                     l14226:
  7994                           
  7995                           ; BSR set to: 0
  7996                           ;MOTEapp.c: 732: else if (selectButton)
  7997  0009CC  0100               	movlb	0	; () banked
  7998  0009CE  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  7999  0009D0  0100               	movlb	0	; () banked
  8000  0009D2  B4D8               	btfsc	status,2,c
  8001  0009D4  0012               	return	
  8002                           
  8003                           ; BSR set to: 0
  8004                           ;MOTEapp.c: 733: {
  8005                           ;MOTEapp.c: 735: oled_clear();
  8006  0009D6  ECD1  F034         	call	_oled_clear	;wreg free
  8007                           
  8008                           ;MOTEapp.c: 737: LATAbits.LATA7 = 0;
  8009  0009DA  9E89               	bcf	3977,7,c	;volatile
  8010                           
  8011                           ;MOTEapp.c: 739: oled_putString("Downlink Display",0,0);
  8012  0009DC  0E5C               	movlw	low STR_104
  8013  0009DE  0100               	movlb	0	; () banked
  8014  0009E0  6F71               	movwf	oled_putString@string& (0+255),b
  8015  0009E2  0E7C               	movlw	high STR_104
  8016  0009E4  0100               	movlb	0	; () banked
  8017  0009E6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8018  0009E8  0E00               	movlw	0
  8019  0009EA  0100               	movlb	0	; () banked
  8020  0009EC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8021  0009EE  0E00               	movlw	0
  8022  0009F0  0100               	movlb	0	; () banked
  8023  0009F2  6F74               	movwf	oled_putString@start_page& (0+255),b
  8024  0009F4  EC6F  F02F         	call	_oled_putString	;wreg free
  8025                           
  8026                           ;MOTEapp.c: 741: oled_putString("Rx Port# ",0,1);
  8027  0009F8  0ECB               	movlw	low STR_105
  8028  0009FA  0100               	movlb	0	; () banked
  8029  0009FC  6F71               	movwf	oled_putString@string& (0+255),b
  8030  0009FE  0E7E               	movlw	high STR_105
  8031  000A00  0100               	movlb	0	; () banked
  8032  000A02  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8033  000A04  0E00               	movlw	0
  8034  000A06  0100               	movlb	0	; () banked
  8035  000A08  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8036  000A0A  0E01               	movlw	1
  8037  000A0C  0100               	movlb	0	; () banked
  8038  000A0E  6F74               	movwf	oled_putString@start_page& (0+255),b
  8039  000A10  EC6F  F02F         	call	_oled_putString	;wreg free
  8040                           
  8041                           ;MOTEapp.c: 742: oled_putString(&responsePortNum,9,1);
  8042  000A14  0EEF               	movlw	low _responsePortNum
  8043  000A16  0100               	movlb	0	; () banked
  8044  000A18  6F71               	movwf	oled_putString@string& (0+255),b
  8045  000A1A  0E01               	movlw	high _responsePortNum
  8046  000A1C  0100               	movlb	0	; () banked
  8047  000A1E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8048  000A20  0E09               	movlw	9
  8049  000A22  0100               	movlb	0	; () banked
  8050  000A24  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8051  000A26  0E01               	movlw	1
  8052  000A28  0100               	movlb	0	; () banked
  8053  000A2A  6F74               	movwf	oled_putString@start_page& (0+255),b
  8054  000A2C  EC6F  F02F         	call	_oled_putString	;wreg free
  8055                           
  8056                           ;MOTEapp.c: 744: oled_putString("Data: ",0,2);
  8057  000A30  0E5E               	movlw	low (STR_85+5)
  8058  000A32  0100               	movlb	0	; () banked
  8059  000A34  6F71               	movwf	oled_putString@string& (0+255),b
  8060  000A36  0E7E               	movlw	high (STR_85+5)
  8061  000A38  0100               	movlb	0	; () banked
  8062  000A3A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8063  000A3C  0E00               	movlw	0
  8064  000A3E  0100               	movlb	0	; () banked
  8065  000A40  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8066  000A42  0E02               	movlw	2
  8067  000A44  0100               	movlb	0	; () banked
  8068  000A46  6F74               	movwf	oled_putString@start_page& (0+255),b
  8069  000A48  EC6F  F02F         	call	_oled_putString	;wreg free
  8070                           
  8071                           ;MOTEapp.c: 745: oled_putString(&responseData[0],6,2);
  8072  000A4C  0E9C               	movlw	low _responseData
  8073  000A4E  0100               	movlb	0	; () banked
  8074  000A50  6F71               	movwf	oled_putString@string& (0+255),b
  8075  000A52  0E01               	movlw	high _responseData
  8076  000A54  0100               	movlb	0	; () banked
  8077  000A56  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8078  000A58  0E06               	movlw	6
  8079  000A5A  0100               	movlb	0	; () banked
  8080  000A5C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8081  000A5E  0E02               	movlw	2
  8082  000A60  0100               	movlb	0	; () banked
  8083  000A62  6F74               	movwf	oled_putString@start_page& (0+255),b
  8084  000A64  EC6F  F02F         	call	_oled_putString	;wreg free
  8085                           
  8086                           ;MOTEapp.c: 747: oled_putString(&responseData[10],0,3);
  8087  000A68  0EA6               	movlw	low (_responseData+10)
  8088  000A6A  0100               	movlb	0	; () banked
  8089  000A6C  6F71               	movwf	oled_putString@string& (0+255),b
  8090  000A6E  0E01               	movlw	high (_responseData+10)
  8091  000A70  0100               	movlb	0	; () banked
  8092  000A72  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8093  000A74  0E00               	movlw	0
  8094  000A76  0100               	movlb	0	; () banked
  8095  000A78  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8096  000A7A  0E03               	movlw	3
  8097  000A7C  0100               	movlb	0	; () banked
  8098  000A7E  6F74               	movwf	oled_putString@start_page& (0+255),b
  8099  000A80  EC6F  F02F         	call	_oled_putString	;wreg free
  8100                           
  8101                           ;MOTEapp.c: 749: runningState = runningDownlinkDisplay;
  8102  000A84  0E0B               	movlw	11
  8103  000A86  0100               	movlb	0	; () banked
  8104  000A88  6FEE               	movwf	_runningState& (0+255),b
  8105                           
  8106                           ; BSR set to: 0
  8107                           ;MOTEapp.c: 750: }
  8108                           ;MOTEapp.c: 751: break;
  8109                           
  8110                           ; BSR set to: 0
  8111  000A8A  0012               	return	
  8112  000A8C                     l14246:
  8113                           
  8114                           ; BSR set to: 0
  8115                           ;MOTEapp.c: 753: if ( (changeStates) || (selectButton) )
  8116  000A8C  0100               	movlb	0	; () banked
  8117  000A8E  51B7               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8118  000A90  0100               	movlb	0	; () banked
  8119  000A92  A4D8               	btfss	status,2,c
  8120  000A94  D005               	goto	l14250
  8121                           
  8122                           ; BSR set to: 0
  8123  000A96  0100               	movlb	0	; () banked
  8124  000A98  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8125  000A9A  0100               	movlb	0	; () banked
  8126  000A9C  B4D8               	btfsc	status,2,c
  8127  000A9E  0012               	return	
  8128  000AA0                     l14250:
  8129                           
  8130                           ; BSR set to: 0
  8131                           ;MOTEapp.c: 754: {
  8132                           ;MOTEapp.c: 755: oled_clear();
  8133  000AA0  ECD1  F034         	call	_oled_clear	;wreg free
  8134                           
  8135                           ;MOTEapp.c: 756: oled_putString(" View Downlink  ",0,0);
  8136  000AA4  0ED5               	movlw	low STR_78
  8137  000AA6  0100               	movlb	0	; () banked
  8138  000AA8  6F71               	movwf	oled_putString@string& (0+255),b
  8139  000AAA  0E7A               	movlw	high STR_78
  8140  000AAC  0100               	movlb	0	; () banked
  8141  000AAE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8142  000AB0  0E00               	movlw	0
  8143  000AB2  0100               	movlb	0	; () banked
  8144  000AB4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8145  000AB6  0E00               	movlw	0
  8146  000AB8  0100               	movlb	0	; () banked
  8147  000ABA  6F74               	movwf	oled_putString@start_page& (0+255),b
  8148  000ABC  EC6F  F02F         	call	_oled_putString	;wreg free
  8149                           
  8150                           ;MOTEapp.c: 757: oled_putString("  Last Message  ",0,1);
  8151  000AC0  0EC4               	movlw	low STR_79
  8152  000AC2  0100               	movlb	0	; () banked
  8153  000AC4  6F71               	movwf	oled_putString@string& (0+255),b
  8154  000AC6  0E7A               	movlw	high STR_79
  8155  000AC8  0100               	movlb	0	; () banked
  8156  000ACA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8157  000ACC  0E00               	movlw	0
  8158  000ACE  0100               	movlb	0	; () banked
  8159  000AD0  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8160  000AD2  0E01               	movlw	1
  8161  000AD4  0100               	movlb	0	; () banked
  8162  000AD6  6F74               	movwf	oled_putString@start_page& (0+255),b
  8163  000AD8  EC6F  F02F         	call	_oled_putString	;wreg free
  8164                           
  8165                           ;MOTEapp.c: 758: oled_putString("(NAV)    (SEL) ",0,3);
  8166  000ADC  0E9D               	movlw	low STR_77
  8167  000ADE  0100               	movlb	0	; () banked
  8168  000AE0  6F71               	movwf	oled_putString@string& (0+255),b
  8169  000AE2  0E7C               	movlw	high STR_77
  8170  000AE4  0100               	movlb	0	; () banked
  8171  000AE6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8172  000AE8  0E00               	movlw	0
  8173  000AEA  0100               	movlb	0	; () banked
  8174  000AEC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8175  000AEE  0E03               	movlw	3
  8176  000AF0  0100               	movlb	0	; () banked
  8177  000AF2  6F74               	movwf	oled_putString@start_page& (0+255),b
  8178  000AF4  EC6F  F02F         	call	_oled_putString	;wreg free
  8179                           
  8180                           ;MOTEapp.c: 759: runningState = runningDownlink;
  8181  000AF8  0E0A               	movlw	10
  8182  000AFA  0100               	movlb	0	; () banked
  8183  000AFC  6FEE               	movwf	_runningState& (0+255),b
  8184                           
  8185                           ; BSR set to: 0
  8186                           ;MOTEapp.c: 760: }
  8187                           ;MOTEapp.c: 761: break;
  8188  000AFE  0012               	return	
  8189  000B00                     l14260:
  8190                           
  8191                           ; BSR set to: 0
  8192                           ;MOTEapp.c: 763: if (changeStates)
  8193  000B00  0100               	movlb	0	; () banked
  8194  000B02  51B7               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8195  000B04  0100               	movlb	0	; () banked
  8196  000B06  B4D8               	btfsc	status,2,c
  8197  000B08  D043               	goto	l14274
  8198                           
  8199                           ; BSR set to: 0
  8200                           ;MOTEapp.c: 764: {
  8201                           ;MOTEapp.c: 765: oled_clear();
  8202  000B0A  ECD1  F034         	call	_oled_clear	;wreg free
  8203                           
  8204                           ;MOTEapp.c: 766: oled_putString("Menu Has Timeout",0,0);
  8205  000B0E  0E3A               	movlw	low STR_110
  8206  000B10  0100               	movlb	0	; () banked
  8207  000B12  6F71               	movwf	oled_putString@string& (0+255),b
  8208  000B14  0E7C               	movlw	high STR_110
  8209  000B16  0100               	movlb	0	; () banked
  8210  000B18  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8211  000B1A  0E00               	movlw	0
  8212  000B1C  0100               	movlb	0	; () banked
  8213  000B1E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8214  000B20  0E00               	movlw	0
  8215  000B22  0100               	movlb	0	; () banked
  8216  000B24  6F74               	movwf	oled_putString@start_page& (0+255),b
  8217  000B26  EC6F  F02F         	call	_oled_putString	;wreg free
  8218                           
  8219                           ;MOTEapp.c: 767: if (menuTimeout)
  8220  000B2A  0100               	movlb	0	; () banked
  8221  000B2C  51F9               	movf	_menuTimeout& (0+255),w,b
  8222  000B2E  B4D8               	btfsc	status,2,c
  8223  000B30  D00F               	goto	l14270
  8224                           
  8225                           ; BSR set to: 0
  8226                           ;MOTEapp.c: 768: oled_putString("    Enabled   ", 0,2);
  8227  000B32  0EED               	movlw	low STR_111
  8228  000B34  0100               	movlb	0	; () banked
  8229  000B36  6F71               	movwf	oled_putString@string& (0+255),b
  8230  000B38  0E7C               	movlw	high STR_111
  8231  000B3A  0100               	movlb	0	; () banked
  8232  000B3C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8233  000B3E  0E00               	movlw	0
  8234  000B40  0100               	movlb	0	; () banked
  8235  000B42  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8236  000B44  0E02               	movlw	2
  8237  000B46  0100               	movlb	0	; () banked
  8238  000B48  6F74               	movwf	oled_putString@start_page& (0+255),b
  8239  000B4A  EC6F  F02F         	call	_oled_putString	;wreg free
  8240  000B4E  D00E               	goto	l527
  8241  000B50                     l14270:
  8242                           
  8243                           ;MOTEapp.c: 769: else
  8244                           ;MOTEapp.c: 770: oled_putString("    Disabled  ", 0,2);
  8245  000B50  0EFC               	movlw	low STR_112
  8246  000B52  0100               	movlb	0	; () banked
  8247  000B54  6F71               	movwf	oled_putString@string& (0+255),b
  8248  000B56  0E7C               	movlw	high STR_112
  8249  000B58  0100               	movlb	0	; () banked
  8250  000B5A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8251  000B5C  0E00               	movlw	0
  8252  000B5E  0100               	movlb	0	; () banked
  8253  000B60  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8254  000B62  0E02               	movlw	2
  8255  000B64  0100               	movlb	0	; () banked
  8256  000B66  6F74               	movwf	oled_putString@start_page& (0+255),b
  8257  000B68  EC6F  F02F         	call	_oled_putString	;wreg free
  8258  000B6C                     l527:
  8259                           
  8260                           ;MOTEapp.c: 771: oled_putString("(NAV)    (CNG) ",0,3);
  8261  000B6C  0E8D               	movlw	low STR_113
  8262  000B6E  0100               	movlb	0	; () banked
  8263  000B70  6F71               	movwf	oled_putString@string& (0+255),b
  8264  000B72  0E7C               	movlw	high STR_113
  8265  000B74  0100               	movlb	0	; () banked
  8266  000B76  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8267  000B78  0E00               	movlw	0
  8268  000B7A  0100               	movlb	0	; () banked
  8269  000B7C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8270  000B7E  0E03               	movlw	3
  8271  000B80  0100               	movlb	0	; () banked
  8272  000B82  6F74               	movwf	oled_putString@start_page& (0+255),b
  8273  000B84  EC6F  F02F         	call	_oled_putString	;wreg free
  8274                           
  8275                           ;MOTEapp.c: 772: runningState = runningMenuTimeout;
  8276  000B88  0E0C               	movlw	12
  8277  000B8A  0100               	movlb	0	; () banked
  8278  000B8C  6FEE               	movwf	_runningState& (0+255),b
  8279                           
  8280                           ;MOTEapp.c: 773: }
  8281  000B8E  0012               	return	
  8282  000B90                     l14274:
  8283                           
  8284                           ; BSR set to: 0
  8285                           ;MOTEapp.c: 774: else if (selectButton)
  8286  000B90  0100               	movlb	0	; () banked
  8287  000B92  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8288  000B94  0100               	movlb	0	; () banked
  8289  000B96  B4D8               	btfsc	status,2,c
  8290  000B98  0012               	return	
  8291                           
  8292                           ; BSR set to: 0
  8293                           ;MOTEapp.c: 775: {
  8294                           ;MOTEapp.c: 776: oled_clear();
  8295  000B9A  ECD1  F034         	call	_oled_clear	;wreg free
  8296                           
  8297                           ;MOTEapp.c: 777: oled_putString("  Sensor Data  ",0,0);
  8298  000B9E  0E7D               	movlw	low STR_101
  8299  000BA0  0100               	movlb	0	; () banked
  8300  000BA2  6F71               	movwf	oled_putString@string& (0+255),b
  8301  000BA4  0E7C               	movlw	high STR_101
  8302  000BA6  0100               	movlb	0	; () banked
  8303  000BA8  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8304  000BAA  0E00               	movlw	0
  8305  000BAC  0100               	movlb	0	; () banked
  8306  000BAE  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8307  000BB0  0E00               	movlw	0
  8308  000BB2  0100               	movlb	0	; () banked
  8309  000BB4  6F74               	movwf	oled_putString@start_page& (0+255),b
  8310  000BB6  EC6F  F02F         	call	_oled_putString	;wreg free
  8311                           
  8312                           ;MOTEapp.c: 778: oled_putString("Light:",0,1);
  8313  000BBA  0E81               	movlw	low STR_115
  8314  000BBC  0100               	movlb	0	; () banked
  8315  000BBE  6F71               	movwf	oled_putString@string& (0+255),b
  8316  000BC0  0E7F               	movlw	high STR_115
  8317  000BC2  0100               	movlb	0	; () banked
  8318  000BC4  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8319  000BC6  0E00               	movlw	0
  8320  000BC8  0100               	movlb	0	; () banked
  8321  000BCA  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8322  000BCC  0E01               	movlw	1
  8323  000BCE  0100               	movlb	0	; () banked
  8324  000BD0  6F74               	movwf	oled_putString@start_page& (0+255),b
  8325  000BD2  EC6F  F02F         	call	_oled_putString	;wreg free
  8326                           
  8327                           ;MOTEapp.c: 779: oled_putString("Temp :",0,2);
  8328  000BD6  0E7A               	movlw	low STR_116
  8329  000BD8  0100               	movlb	0	; () banked
  8330  000BDA  6F71               	movwf	oled_putString@string& (0+255),b
  8331  000BDC  0E7F               	movlw	high STR_116
  8332  000BDE  0100               	movlb	0	; () banked
  8333  000BE0  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8334  000BE2  0E00               	movlw	0
  8335  000BE4  0100               	movlb	0	; () banked
  8336  000BE6  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8337  000BE8  0E02               	movlw	2
  8338  000BEA  0100               	movlb	0	; () banked
  8339  000BEC  6F74               	movwf	oled_putString@start_page& (0+255),b
  8340  000BEE  EC6F  F02F         	call	_oled_putString	;wreg free
  8341                           
  8342                           ;MOTEapp.c: 780: oled_putString("C",10,2);
  8343  000BF2  0EFB               	movlw	low STR_117
  8344  000BF4  0100               	movlb	0	; () banked
  8345  000BF6  6F71               	movwf	oled_putString@string& (0+255),b
  8346  000BF8  0E7F               	movlw	high STR_117
  8347  000BFA  0100               	movlb	0	; () banked
  8348  000BFC  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8349  000BFE  0E0A               	movlw	10
  8350  000C00  0100               	movlb	0	; () banked
  8351  000C02  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8352  000C04  0E02               	movlw	2
  8353  000C06  0100               	movlb	0	; () banked
  8354  000C08  6F74               	movwf	oled_putString@start_page& (0+255),b
  8355  000C0A  EC6F  F02F         	call	_oled_putString	;wreg free
  8356                           
  8357                           ;MOTEapp.c: 782: moteApp_setSensorsInput();
  8358  000C0E  EC91  F02C         	call	_moteApp_setSensorsInput	;wreg free
  8359                           
  8360                           ;MOTEapp.c: 783: runningState = runningSensorMenu;
  8361  000C12  0E02               	movlw	2
  8362  000C14  0100               	movlb	0	; () banked
  8363  000C16  6FEE               	movwf	_runningState& (0+255),b
  8364                           
  8365                           ; BSR set to: 0
  8366                           ;MOTEapp.c: 784: }
  8367                           ;MOTEapp.c: 785: break;
  8368                           
  8369                           ; BSR set to: 0
  8370  000C18  0012               	return	
  8371  000C1A                     l14290:
  8372                           
  8373                           ; BSR set to: 0
  8374                           ;MOTEapp.c: 787: if (changeStates)
  8375  000C1A  0100               	movlb	0	; () banked
  8376  000C1C  51B7               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8377  000C1E  0100               	movlb	0	; () banked
  8378  000C20  B4D8               	btfsc	status,2,c
  8379  000C22  D0BC               	goto	l14322
  8380                           
  8381                           ; BSR set to: 0
  8382                           ;MOTEapp.c: 788: {
  8383                           ;MOTEapp.c: 789: oled_clear();
  8384  000C24  ECD1  F034         	call	_oled_clear	;wreg free
  8385                           
  8386                           ;MOTEapp.c: 790: oled_putString("Periodic Uplink ",0,0);
  8387  000C28  0E3B               	movlw	low STR_118
  8388  000C2A  0100               	movlb	0	; () banked
  8389  000C2C  6F71               	movwf	oled_putString@string& (0+255),b
  8390  000C2E  0E7B               	movlw	high STR_118
  8391  000C30  0100               	movlb	0	; () banked
  8392  000C32  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8393  000C34  0E00               	movlw	0
  8394  000C36  0100               	movlb	0	; () banked
  8395  000C38  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8396  000C3A  0E00               	movlw	0
  8397  000C3C  0100               	movlb	0	; () banked
  8398  000C3E  6F74               	movwf	oled_putString@start_page& (0+255),b
  8399  000C40  EC6F  F02F         	call	_oled_putString	;wreg free
  8400                           
  8401                           ;MOTEapp.c: 791: oled_putString("Tx Event Timing ",0,1);
  8402  000C44  0E2A               	movlw	low STR_119
  8403  000C46  0100               	movlb	0	; () banked
  8404  000C48  6F71               	movwf	oled_putString@string& (0+255),b
  8405  000C4A  0E7B               	movlw	high STR_119
  8406  000C4C  0100               	movlb	0	; () banked
  8407  000C4E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8408  000C50  0E00               	movlw	0
  8409  000C52  0100               	movlb	0	; () banked
  8410  000C54  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8411  000C56  0E01               	movlw	1
  8412  000C58  0100               	movlb	0	; () banked
  8413  000C5A  6F74               	movwf	oled_putString@start_page& (0+255),b
  8414  000C5C  EC6F  F02F         	call	_oled_putString	;wreg free
  8415                           
  8416                           ;MOTEapp.c: 792: oled_putString("Every:",0,2);
  8417  000C60  0E88               	movlw	low STR_120
  8418  000C62  0100               	movlb	0	; () banked
  8419  000C64  6F71               	movwf	oled_putString@string& (0+255),b
  8420  000C66  0E7F               	movlw	high STR_120
  8421  000C68  0100               	movlb	0	; () banked
  8422  000C6A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8423  000C6C  0E00               	movlw	0
  8424  000C6E  0100               	movlb	0	; () banked
  8425  000C70  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8426  000C72  0E02               	movlw	2
  8427  000C74  0100               	movlb	0	; () banked
  8428  000C76  6F74               	movwf	oled_putString@start_page& (0+255),b
  8429  000C78  EC6F  F02F         	call	_oled_putString	;wreg free
  8430                           
  8431                           ;MOTEapp.c: 793: oled_putString("Mins",12,2);
  8432  000C7C  0EC3               	movlw	low STR_121
  8433  000C7E  0100               	movlb	0	; () banked
  8434  000C80  6F71               	movwf	oled_putString@string& (0+255),b
  8435  000C82  0E7F               	movlw	high STR_121
  8436  000C84  0100               	movlb	0	; () banked
  8437  000C86  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8438  000C88  0E0C               	movlw	12
  8439  000C8A  0100               	movlb	0	; () banked
  8440  000C8C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8441  000C8E  0E02               	movlw	2
  8442  000C90  0100               	movlb	0	; () banked
  8443  000C92  6F74               	movwf	oled_putString@start_page& (0+255),b
  8444  000C94  EC6F  F02F         	call	_oled_putString	;wreg free
  8445                           
  8446                           ;MOTEapp.c: 795: switch (periodicUpValue)
  8447  000C98  D05A               	goto	l14316
  8448  000C9A                     l14302:
  8449                           
  8450                           ;MOTEapp.c: 799: oled_putString("5",7,2);
  8451  000C9A  0ED8               	movlw	low (STR_174+11)
  8452  000C9C  0100               	movlb	0	; () banked
  8453  000C9E  6F71               	movwf	oled_putString@string& (0+255),b
  8454  000CA0  0E7D               	movlw	high (STR_174+11)
  8455  000CA2  0100               	movlb	0	; () banked
  8456  000CA4  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8457  000CA6  0E07               	movlw	7
  8458  000CA8  0100               	movlb	0	; () banked
  8459  000CAA  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8460  000CAC  0E02               	movlw	2
  8461  000CAE  0100               	movlb	0	; () banked
  8462  000CB0  6F74               	movwf	oled_putString@start_page& (0+255),b
  8463  000CB2  EC6F  F02F         	call	_oled_putString	;wreg free
  8464                           
  8465                           ;MOTEapp.c: 800: break;
  8466  000CB6  D060               	goto	l14318
  8467  000CB8                     l14304:
  8468                           
  8469                           ;MOTEapp.c: 802: oled_putString("10",7,2);
  8470  000CB8  0EE1               	movlw	low (STR_145+1)
  8471  000CBA  0100               	movlb	0	; () banked
  8472  000CBC  6F71               	movwf	oled_putString@string& (0+255),b
  8473  000CBE  0E7F               	movlw	high (STR_145+1)
  8474  000CC0  0100               	movlb	0	; () banked
  8475  000CC2  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8476  000CC4  0E07               	movlw	7
  8477  000CC6  0100               	movlb	0	; () banked
  8478  000CC8  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8479  000CCA  0E02               	movlw	2
  8480  000CCC  0100               	movlb	0	; () banked
  8481  000CCE  6F74               	movwf	oled_putString@start_page& (0+255),b
  8482  000CD0  EC6F  F02F         	call	_oled_putString	;wreg free
  8483                           
  8484                           ;MOTEapp.c: 803: break;
  8485  000CD4  D051               	goto	l14318
  8486  000CD6                     l14306:
  8487                           
  8488                           ;MOTEapp.c: 805: oled_putString("15",7,2);
  8489  000CD6  0EED               	movlw	low (STR_146+1)
  8490  000CD8  0100               	movlb	0	; () banked
  8491  000CDA  6F71               	movwf	oled_putString@string& (0+255),b
  8492  000CDC  0E7F               	movlw	high (STR_146+1)
  8493  000CDE  0100               	movlb	0	; () banked
  8494  000CE0  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8495  000CE2  0E07               	movlw	7
  8496  000CE4  0100               	movlb	0	; () banked
  8497  000CE6  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8498  000CE8  0E02               	movlw	2
  8499  000CEA  0100               	movlb	0	; () banked
  8500  000CEC  6F74               	movwf	oled_putString@start_page& (0+255),b
  8501  000CEE  EC6F  F02F         	call	_oled_putString	;wreg free
  8502                           
  8503                           ;MOTEapp.c: 806: break;
  8504  000CF2  D042               	goto	l14318
  8505  000CF4                     l14308:
  8506                           
  8507                           ;MOTEapp.c: 808: oled_putString("30",7,2);
  8508  000CF4  0EE5               	movlw	low (STR_147+1)
  8509  000CF6  0100               	movlb	0	; () banked
  8510  000CF8  6F71               	movwf	oled_putString@string& (0+255),b
  8511  000CFA  0E7F               	movlw	high (STR_147+1)
  8512  000CFC  0100               	movlb	0	; () banked
  8513  000CFE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8514  000D00  0E07               	movlw	7
  8515  000D02  0100               	movlb	0	; () banked
  8516  000D04  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8517  000D06  0E02               	movlw	2
  8518  000D08  0100               	movlb	0	; () banked
  8519  000D0A  6F74               	movwf	oled_putString@start_page& (0+255),b
  8520  000D0C  EC6F  F02F         	call	_oled_putString	;wreg free
  8521                           
  8522                           ;MOTEapp.c: 809: break;
  8523  000D10  D033               	goto	l14318
  8524  000D12                     l14310:
  8525                           
  8526                           ;MOTEapp.c: 811: oled_putString("60",7,2);
  8527  000D12  0EE9               	movlw	low (STR_148+1)
  8528  000D14  0100               	movlb	0	; () banked
  8529  000D16  6F71               	movwf	oled_putString@string& (0+255),b
  8530  000D18  0E7F               	movlw	high (STR_148+1)
  8531  000D1A  0100               	movlb	0	; () banked
  8532  000D1C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8533  000D1E  0E07               	movlw	7
  8534  000D20  0100               	movlb	0	; () banked
  8535  000D22  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8536  000D24  0E02               	movlw	2
  8537  000D26  0100               	movlb	0	; () banked
  8538  000D28  6F74               	movwf	oled_putString@start_page& (0+255),b
  8539  000D2A  EC6F  F02F         	call	_oled_putString	;wreg free
  8540                           
  8541                           ;MOTEapp.c: 812: break;
  8542  000D2E  D024               	goto	l14318
  8543  000D30                     l14312:
  8544                           
  8545                           ;MOTEapp.c: 814: oled_putString("OFF",7,2);
  8546  000D30  0EF0               	movlw	low STR_127
  8547  000D32  0100               	movlb	0	; () banked
  8548  000D34  6F71               	movwf	oled_putString@string& (0+255),b
  8549  000D36  0E7F               	movlw	high STR_127
  8550  000D38  0100               	movlb	0	; () banked
  8551  000D3A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8552  000D3C  0E07               	movlw	7
  8553  000D3E  0100               	movlb	0	; () banked
  8554  000D40  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8555  000D42  0E02               	movlw	2
  8556  000D44  0100               	movlb	0	; () banked
  8557  000D46  6F74               	movwf	oled_putString@start_page& (0+255),b
  8558  000D48  EC6F  F02F         	call	_oled_putString	;wreg free
  8559                           
  8560                           ;MOTEapp.c: 816: }
  8561                           
  8562                           ;MOTEapp.c: 815: break;
  8563  000D4C  D015               	goto	l14318
  8564  000D4E                     l14316:
  8565  000D4E  0100               	movlb	0	; () banked
  8566  000D50  51FD               	movf	_periodicUpValue& (0+255),w,b
  8567                           
  8568                           ; Switch size 1, requested type "space"
  8569                           ; Number of cases is 6, Range of values is 0 to 5
  8570                           ; switch strategies available:
  8571                           ; Name         Instructions Cycles
  8572                           ; simple_byte           19    10 (average)
  8573                           ;	Chosen strategy is simple_byte
  8574  000D52  0A00               	xorlw	0	; case 0
  8575  000D54  B4D8               	btfsc	status,2,c
  8576  000D56  D7A1               	goto	l14302
  8577  000D58  0A01               	xorlw	1	; case 1
  8578  000D5A  B4D8               	btfsc	status,2,c
  8579  000D5C  D7AD               	goto	l14304
  8580  000D5E  0A03               	xorlw	3	; case 2
  8581  000D60  B4D8               	btfsc	status,2,c
  8582  000D62  D7B9               	goto	l14306
  8583  000D64  0A01               	xorlw	1	; case 3
  8584  000D66  B4D8               	btfsc	status,2,c
  8585  000D68  D7C5               	goto	l14308
  8586  000D6A  0A07               	xorlw	7	; case 4
  8587  000D6C  B4D8               	btfsc	status,2,c
  8588  000D6E  D7D1               	goto	l14310
  8589  000D70  0A01               	xorlw	1	; case 5
  8590  000D72  B4D8               	btfsc	status,2,c
  8591  000D74  D7DD               	goto	l14312
  8592  000D76  D791               	goto	l14302
  8593  000D78                     l14318:
  8594                           
  8595                           ;MOTEapp.c: 817: oled_putString("(NAV)    (CNG) ",0,3);
  8596  000D78  0E8D               	movlw	low STR_113
  8597  000D7A  0100               	movlb	0	; () banked
  8598  000D7C  6F71               	movwf	oled_putString@string& (0+255),b
  8599  000D7E  0E7C               	movlw	high STR_113
  8600  000D80  0100               	movlb	0	; () banked
  8601  000D82  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8602  000D84  0E00               	movlw	0
  8603  000D86  0100               	movlb	0	; () banked
  8604  000D88  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8605  000D8A  0E03               	movlw	3
  8606  000D8C  0100               	movlb	0	; () banked
  8607  000D8E  6F74               	movwf	oled_putString@start_page& (0+255),b
  8608  000D90  EC6F  F02F         	call	_oled_putString	;wreg free
  8609                           
  8610                           ;MOTEapp.c: 818: runningState = runningPeriodicWakeUpLength;
  8611  000D94  0E0D               	movlw	13
  8612  000D96  0100               	movlb	0	; () banked
  8613  000D98  6FEE               	movwf	_runningState& (0+255),b
  8614                           
  8615                           ;MOTEapp.c: 819: }
  8616  000D9A  0012               	return	
  8617  000D9C                     l14322:
  8618                           
  8619                           ; BSR set to: 0
  8620                           ;MOTEapp.c: 820: else if (selectButton)
  8621  000D9C  0100               	movlb	0	; () banked
  8622  000D9E  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8623  000DA0  0100               	movlb	0	; () banked
  8624  000DA2  B4D8               	btfsc	status,2,c
  8625  000DA4  0012               	return	
  8626                           
  8627                           ; BSR set to: 0
  8628                           ;MOTEapp.c: 821: {
  8629                           ;MOTEapp.c: 822: if (menuTimeout)
  8630  000DA6  0100               	movlb	0	; () banked
  8631  000DA8  51F9               	movf	_menuTimeout& (0+255),w,b
  8632  000DAA  B4D8               	btfsc	status,2,c
  8633  000DAC  D012               	goto	l14330
  8634                           
  8635                           ; BSR set to: 0
  8636                           ;MOTEapp.c: 823: {
  8637                           ;MOTEapp.c: 824: menuTimeout = 0;
  8638  000DAE  0E00               	movlw	0
  8639  000DB0  0100               	movlb	0	; () banked
  8640  000DB2  6FF9               	movwf	_menuTimeout& (0+255),b
  8641                           
  8642                           ; BSR set to: 0
  8643                           ;MOTEapp.c: 825: oled_putString("    Disabled  ", 0,2);
  8644  000DB4  0EFC               	movlw	low STR_112
  8645  000DB6  0100               	movlb	0	; () banked
  8646  000DB8  6F71               	movwf	oled_putString@string& (0+255),b
  8647  000DBA  0E7C               	movlw	high STR_112
  8648  000DBC  0100               	movlb	0	; () banked
  8649  000DBE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8650  000DC0  0E00               	movlw	0
  8651  000DC2  0100               	movlb	0	; () banked
  8652  000DC4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8653  000DC6  0E02               	movlw	2
  8654  000DC8  0100               	movlb	0	; () banked
  8655  000DCA  6F74               	movwf	oled_putString@start_page& (0+255),b
  8656  000DCC  EC6F  F02F         	call	_oled_putString	;wreg free
  8657                           
  8658                           ;MOTEapp.c: 826: }
  8659  000DD0  0012               	return	
  8660  000DD2                     l14330:
  8661                           
  8662                           ;MOTEapp.c: 827: else
  8663                           ;MOTEapp.c: 828: {
  8664                           ;MOTEapp.c: 829: menuTimeout = 1;
  8665  000DD2  0E01               	movlw	1
  8666  000DD4  0100               	movlb	0	; () banked
  8667  000DD6  6FF9               	movwf	_menuTimeout& (0+255),b
  8668                           
  8669                           ; BSR set to: 0
  8670                           ;MOTEapp.c: 830: oled_putString("    Enabled   ", 0,2);
  8671  000DD8  0EED               	movlw	low STR_111
  8672  000DDA  0100               	movlb	0	; () banked
  8673  000DDC  6F71               	movwf	oled_putString@string& (0+255),b
  8674  000DDE  0E7C               	movlw	high STR_111
  8675  000DE0  0100               	movlb	0	; () banked
  8676  000DE2  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8677  000DE4  0E00               	movlw	0
  8678  000DE6  0100               	movlb	0	; () banked
  8679  000DE8  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8680  000DEA  0E02               	movlw	2
  8681  000DEC  0100               	movlb	0	; () banked
  8682  000DEE  6F74               	movwf	oled_putString@start_page& (0+255),b
  8683  000DF0  EC6F  F02F         	call	_oled_putString	;wreg free
  8684                           
  8685                           ;MOTEapp.c: 831: }
  8686                           ;MOTEapp.c: 832: }
  8687                           ;MOTEapp.c: 833: break;
  8688  000DF4  0012               	return	
  8689  000DF6                     l14334:
  8690                           
  8691                           ;MOTEapp.c: 836: if ( (changeStates) || (selectButton) )
  8692  000DF6  0100               	movlb	0	; () banked
  8693  000DF8  51B7               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8694  000DFA  0100               	movlb	0	; () banked
  8695  000DFC  A4D8               	btfss	status,2,c
  8696  000DFE  D005               	goto	l14338
  8697                           
  8698                           ; BSR set to: 0
  8699  000E00  0100               	movlb	0	; () banked
  8700  000E02  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  8701  000E04  0100               	movlb	0	; () banked
  8702  000E06  B4D8               	btfsc	status,2,c
  8703  000E08  0012               	return	
  8704  000E0A                     l14338:
  8705                           
  8706                           ; BSR set to: 0
  8707                           ;MOTEapp.c: 837: {
  8708                           ;MOTEapp.c: 838: oled_clear();
  8709  000E0A  ECD1  F034         	call	_oled_clear	;wreg free
  8710                           
  8711                           ;MOTEapp.c: 839: oled_putString("  Sensor Data  ",0,0);
  8712  000E0E  0E7D               	movlw	low STR_101
  8713  000E10  0100               	movlb	0	; () banked
  8714  000E12  6F71               	movwf	oled_putString@string& (0+255),b
  8715  000E14  0E7C               	movlw	high STR_101
  8716  000E16  0100               	movlb	0	; () banked
  8717  000E18  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8718  000E1A  0E00               	movlw	0
  8719  000E1C  0100               	movlb	0	; () banked
  8720  000E1E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8721  000E20  0E00               	movlw	0
  8722  000E22  0100               	movlb	0	; () banked
  8723  000E24  6F74               	movwf	oled_putString@start_page& (0+255),b
  8724  000E26  EC6F  F02F         	call	_oled_putString	;wreg free
  8725                           
  8726                           ;MOTEapp.c: 840: oled_putString("    Display    ",0,1);
  8727  000E2A  0E6D               	movlw	low STR_102
  8728  000E2C  0100               	movlb	0	; () banked
  8729  000E2E  6F71               	movwf	oled_putString@string& (0+255),b
  8730  000E30  0E7C               	movlw	high STR_102
  8731  000E32  0100               	movlb	0	; () banked
  8732  000E34  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8733  000E36  0E00               	movlw	0
  8734  000E38  0100               	movlb	0	; () banked
  8735  000E3A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8736  000E3C  0E01               	movlw	1
  8737  000E3E  0100               	movlb	0	; () banked
  8738  000E40  6F74               	movwf	oled_putString@start_page& (0+255),b
  8739  000E42  EC6F  F02F         	call	_oled_putString	;wreg free
  8740                           
  8741                           ;MOTEapp.c: 841: oled_putString("(NAV)    (SEL) ",0,3);
  8742  000E46  0E9D               	movlw	low STR_77
  8743  000E48  0100               	movlb	0	; () banked
  8744  000E4A  6F71               	movwf	oled_putString@string& (0+255),b
  8745  000E4C  0E7C               	movlw	high STR_77
  8746  000E4E  0100               	movlb	0	; () banked
  8747  000E50  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8748  000E52  0E00               	movlw	0
  8749  000E54  0100               	movlb	0	; () banked
  8750  000E56  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8751  000E58  0E03               	movlw	3
  8752  000E5A  0100               	movlb	0	; () banked
  8753  000E5C  6F74               	movwf	oled_putString@start_page& (0+255),b
  8754  000E5E  EC6F  F02F         	call	_oled_putString	;wreg free
  8755                           
  8756                           ;MOTEapp.c: 842: runningState = runningSensor;
  8757  000E62  0E01               	movlw	1
  8758  000E64  0100               	movlb	0	; () banked
  8759  000E66  6FEE               	movwf	_runningState& (0+255),b
  8760                           
  8761                           ; BSR set to: 0
  8762                           ;MOTEapp.c: 843: }
  8763                           ;MOTEapp.c: 844: break;
  8764  000E68  0012               	return	
  8765  000E6A                     l14348:
  8766                           
  8767                           ; BSR set to: 0
  8768                           ;MOTEapp.c: 846: if (changeStates)
  8769  000E6A  0100               	movlb	0	; () banked
  8770  000E6C  51B7               	movf	moteRunningProcess@changeStates& (0+255),w,b
  8771  000E6E  0100               	movlb	0	; () banked
  8772  000E70  B4D8               	btfsc	status,2,c
  8773  000E72  D0B1               	goto	l14378
  8774                           
  8775                           ; BSR set to: 0
  8776                           ;MOTEapp.c: 847: {
  8777                           ;MOTEapp.c: 848: oled_clear();
  8778  000E74  ECD1  F034         	call	_oled_clear	;wreg free
  8779                           
  8780                           ;MOTEapp.c: 849: oled_putString("Select Data Rate",0,0);
  8781  000E78  0E07               	movlw	low STR_134
  8782  000E7A  0100               	movlb	0	; () banked
  8783  000E7C  6F71               	movwf	oled_putString@string& (0+255),b
  8784  000E7E  0E7C               	movlw	high STR_134
  8785  000E80  0100               	movlb	0	; () banked
  8786  000E82  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8787  000E84  0E00               	movlw	0
  8788  000E86  0100               	movlb	0	; () banked
  8789  000E88  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8790  000E8A  0E00               	movlw	0
  8791  000E8C  0100               	movlb	0	; () banked
  8792  000E8E  6F74               	movwf	oled_putString@start_page& (0+255),b
  8793  000E90  EC6F  F02F         	call	_oled_putString	;wreg free
  8794                           
  8795                           ;MOTEapp.c: 850: oled_putString("Data Rate: ",0,2);
  8796  000E94  0E65               	movlw	low STR_135
  8797  000E96  0100               	movlb	0	; () banked
  8798  000E98  6F71               	movwf	oled_putString@string& (0+255),b
  8799  000E9A  0E7E               	movlw	high STR_135
  8800  000E9C  0100               	movlb	0	; () banked
  8801  000E9E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8802  000EA0  0E00               	movlw	0
  8803  000EA2  0100               	movlb	0	; () banked
  8804  000EA4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8805  000EA6  0E02               	movlw	2
  8806  000EA8  0100               	movlb	0	; () banked
  8807  000EAA  6F74               	movwf	oled_putString@start_page& (0+255),b
  8808  000EAC  EC6F  F02F         	call	_oled_putString	;wreg free
  8809                           
  8810                           ;MOTEapp.c: 851: oled_putString("(NAV)    (CNG) ",0,3);
  8811  000EB0  0E8D               	movlw	low STR_113
  8812  000EB2  0100               	movlb	0	; () banked
  8813  000EB4  6F71               	movwf	oled_putString@string& (0+255),b
  8814  000EB6  0E7C               	movlw	high STR_113
  8815  000EB8  0100               	movlb	0	; () banked
  8816  000EBA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8817  000EBC  0E00               	movlw	0
  8818  000EBE  0100               	movlb	0	; () banked
  8819  000EC0  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8820  000EC2  0E03               	movlw	3
  8821  000EC4  0100               	movlb	0	; () banked
  8822  000EC6  6F74               	movwf	oled_putString@start_page& (0+255),b
  8823  000EC8  EC6F  F02F         	call	_oled_putString	;wreg free
  8824                           
  8825                           ;MOTEapp.c: 852: runningState = runningDataRateDisplay;
  8826  000ECC  0E03               	movlw	3
  8827  000ECE  0100               	movlb	0	; () banked
  8828  000ED0  6FEE               	movwf	_runningState& (0+255),b
  8829                           
  8830                           ;MOTEapp.c: 855: switch (dataRateValue)
  8831  000ED2  D069               	goto	l14376
  8832  000ED4                     l14360:
  8833                           
  8834                           ; BSR set to: 0
  8835                           ;MOTEapp.c: 859: oled_putString(" 0 ",10,2);
  8836  000ED4  0EC8               	movlw	low STR_137
  8837  000ED6  0100               	movlb	0	; () banked
  8838  000ED8  6F71               	movwf	oled_putString@string& (0+255),b
  8839  000EDA  0E7F               	movlw	high STR_137
  8840  000EDC  0100               	movlb	0	; () banked
  8841  000EDE  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8842  000EE0  0E0A               	movlw	10
  8843  000EE2  0100               	movlb	0	; () banked
  8844  000EE4  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8845  000EE6  0E02               	movlw	2
  8846  000EE8  0100               	movlb	0	; () banked
  8847  000EEA  6F74               	movwf	oled_putString@start_page& (0+255),b
  8848  000EEC  EC6F  F02F         	call	_oled_putString	;wreg free
  8849                           
  8850                           ;MOTEapp.c: 860: break;
  8851  000EF0  D072               	goto	l14378
  8852  000EF2                     l14362:
  8853                           
  8854                           ;MOTEapp.c: 862: oled_putString(" 1 ",10,2);
  8855  000EF2  0ECC               	movlw	low STR_138
  8856  000EF4  0100               	movlb	0	; () banked
  8857  000EF6  6F71               	movwf	oled_putString@string& (0+255),b
  8858  000EF8  0E7F               	movlw	high STR_138
  8859  000EFA  0100               	movlb	0	; () banked
  8860  000EFC  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8861  000EFE  0E0A               	movlw	10
  8862  000F00  0100               	movlb	0	; () banked
  8863  000F02  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8864  000F04  0E02               	movlw	2
  8865  000F06  0100               	movlb	0	; () banked
  8866  000F08  6F74               	movwf	oled_putString@start_page& (0+255),b
  8867  000F0A  EC6F  F02F         	call	_oled_putString	;wreg free
  8868                           
  8869                           ;MOTEapp.c: 863: break;
  8870  000F0E  D063               	goto	l14378
  8871  000F10                     l14364:
  8872                           
  8873                           ;MOTEapp.c: 865: oled_putString(" 2 ",10,2);
  8874  000F10  0ED0               	movlw	low STR_139
  8875  000F12  0100               	movlb	0	; () banked
  8876  000F14  6F71               	movwf	oled_putString@string& (0+255),b
  8877  000F16  0E7F               	movlw	high STR_139
  8878  000F18  0100               	movlb	0	; () banked
  8879  000F1A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8880  000F1C  0E0A               	movlw	10
  8881  000F1E  0100               	movlb	0	; () banked
  8882  000F20  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8883  000F22  0E02               	movlw	2
  8884  000F24  0100               	movlb	0	; () banked
  8885  000F26  6F74               	movwf	oled_putString@start_page& (0+255),b
  8886  000F28  EC6F  F02F         	call	_oled_putString	;wreg free
  8887                           
  8888                           ;MOTEapp.c: 866: break;
  8889  000F2C  D054               	goto	l14378
  8890  000F2E                     l14366:
  8891                           
  8892                           ;MOTEapp.c: 868: oled_putString(" 3 ",10,2);
  8893  000F2E  0ED4               	movlw	low STR_140
  8894  000F30  0100               	movlb	0	; () banked
  8895  000F32  6F71               	movwf	oled_putString@string& (0+255),b
  8896  000F34  0E7F               	movlw	high STR_140
  8897  000F36  0100               	movlb	0	; () banked
  8898  000F38  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8899  000F3A  0E0A               	movlw	10
  8900  000F3C  0100               	movlb	0	; () banked
  8901  000F3E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8902  000F40  0E02               	movlw	2
  8903  000F42  0100               	movlb	0	; () banked
  8904  000F44  6F74               	movwf	oled_putString@start_page& (0+255),b
  8905  000F46  EC6F  F02F         	call	_oled_putString	;wreg free
  8906                           
  8907                           ;MOTEapp.c: 869: break;
  8908  000F4A  D045               	goto	l14378
  8909  000F4C                     l14368:
  8910                           
  8911                           ;MOTEapp.c: 871: oled_putString(" 4 ",10,2);
  8912  000F4C  0ED8               	movlw	low STR_141
  8913  000F4E  0100               	movlb	0	; () banked
  8914  000F50  6F71               	movwf	oled_putString@string& (0+255),b
  8915  000F52  0E7F               	movlw	high STR_141
  8916  000F54  0100               	movlb	0	; () banked
  8917  000F56  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8918  000F58  0E0A               	movlw	10
  8919  000F5A  0100               	movlb	0	; () banked
  8920  000F5C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8921  000F5E  0E02               	movlw	2
  8922  000F60  0100               	movlb	0	; () banked
  8923  000F62  6F74               	movwf	oled_putString@start_page& (0+255),b
  8924  000F64  EC6F  F02F         	call	_oled_putString	;wreg free
  8925                           
  8926                           ;MOTEapp.c: 872: break;
  8927  000F68  D036               	goto	l14378
  8928  000F6A                     l14370:
  8929                           
  8930                           ;MOTEapp.c: 874: oled_putString(" 5 ",10,2);
  8931  000F6A  0EDC               	movlw	low STR_142
  8932  000F6C  0100               	movlb	0	; () banked
  8933  000F6E  6F71               	movwf	oled_putString@string& (0+255),b
  8934  000F70  0E7F               	movlw	high STR_142
  8935  000F72  0100               	movlb	0	; () banked
  8936  000F74  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8937  000F76  0E0A               	movlw	10
  8938  000F78  0100               	movlb	0	; () banked
  8939  000F7A  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8940  000F7C  0E02               	movlw	2
  8941  000F7E  0100               	movlb	0	; () banked
  8942  000F80  6F74               	movwf	oled_putString@start_page& (0+255),b
  8943  000F82  EC6F  F02F         	call	_oled_putString	;wreg free
  8944                           
  8945                           ;MOTEapp.c: 875: break;
  8946  000F86  D027               	goto	l14378
  8947  000F88                     l14372:
  8948                           
  8949                           ;MOTEapp.c: 877: oled_putString("ADR",10,2);
  8950  000F88  0EF4               	movlw	low STR_143
  8951  000F8A  0100               	movlb	0	; () banked
  8952  000F8C  6F71               	movwf	oled_putString@string& (0+255),b
  8953  000F8E  0E7F               	movlw	high STR_143
  8954  000F90  0100               	movlb	0	; () banked
  8955  000F92  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  8956  000F94  0E0A               	movlw	10
  8957  000F96  0100               	movlb	0	; () banked
  8958  000F98  6F73               	movwf	oled_putString@station_dot& (0+255),b
  8959  000F9A  0E02               	movlw	2
  8960  000F9C  0100               	movlb	0	; () banked
  8961  000F9E  6F74               	movwf	oled_putString@start_page& (0+255),b
  8962  000FA0  EC6F  F02F         	call	_oled_putString	;wreg free
  8963                           
  8964                           ;MOTEapp.c: 879: }
  8965                           
  8966                           ;MOTEapp.c: 878: break;
  8967  000FA4  D018               	goto	l14378
  8968  000FA6                     l14376:
  8969  000FA6  0100               	movlb	0	; () banked
  8970  000FA8  51F7               	movf	_dataRateValue& (0+255),w,b
  8971                           
  8972                           ; Switch size 1, requested type "space"
  8973                           ; Number of cases is 7, Range of values is 0 to 6
  8974                           ; switch strategies available:
  8975                           ; Name         Instructions Cycles
  8976                           ; simple_byte           22    12 (average)
  8977                           ;	Chosen strategy is simple_byte
  8978  000FAA  0A00               	xorlw	0	; case 0
  8979  000FAC  B4D8               	btfsc	status,2,c
  8980  000FAE  D792               	goto	l14360
  8981  000FB0  0A01               	xorlw	1	; case 1
  8982  000FB2  B4D8               	btfsc	status,2,c
  8983  000FB4  D79E               	goto	l14362
  8984  000FB6  0A03               	xorlw	3	; case 2
  8985  000FB8  B4D8               	btfsc	status,2,c
  8986  000FBA  D7AA               	goto	l14364
  8987  000FBC  0A01               	xorlw	1	; case 3
  8988  000FBE  B4D8               	btfsc	status,2,c
  8989  000FC0  D7B6               	goto	l14366
  8990  000FC2  0A07               	xorlw	7	; case 4
  8991  000FC4  B4D8               	btfsc	status,2,c
  8992  000FC6  D7C2               	goto	l14368
  8993  000FC8  0A01               	xorlw	1	; case 5
  8994  000FCA  B4D8               	btfsc	status,2,c
  8995  000FCC  D7CE               	goto	l14370
  8996  000FCE  0A03               	xorlw	3	; case 6
  8997  000FD0  B4D8               	btfsc	status,2,c
  8998  000FD2  D7DA               	goto	l14372
  8999  000FD4  D77F               	goto	l14360
  9000  000FD6                     l14378:
  9001                           
  9002                           ;MOTEapp.c: 880: }
  9003                           ;MOTEapp.c: 881: if (selectButton)
  9004  000FD6  0100               	movlb	0	; () banked
  9005  000FD8  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9006  000FDA  0100               	movlb	0	; () banked
  9007  000FDC  B4D8               	btfsc	status,2,c
  9008  000FDE  0012               	return	
  9009                           
  9010                           ; BSR set to: 0
  9011                           ;MOTEapp.c: 882: {
  9012                           ;MOTEapp.c: 883: if (periodicUpValue < 5)
  9013  000FE0  0E05               	movlw	5
  9014  000FE2  0100               	movlb	0	; () banked
  9015  000FE4  61FD               	cpfslt	_periodicUpValue& (0+255),b
  9016  000FE6  D003               	goto	l14384
  9017                           
  9018                           ; BSR set to: 0
  9019                           ;MOTEapp.c: 884: {
  9020                           ;MOTEapp.c: 885: periodicUpValue++;
  9021  000FE8  0100               	movlb	0	; () banked
  9022  000FEA  2BFD               	incf	_periodicUpValue& (0+255),f,b
  9023                           
  9024                           ;MOTEapp.c: 886: } else {
  9025  000FEC  D06F               	goto	l14410
  9026  000FEE                     l14384:
  9027                           
  9028                           ; BSR set to: 0
  9029                           ;MOTEapp.c: 887: periodicUpValue = 0;
  9030  000FEE  0E00               	movlw	0
  9031  000FF0  0100               	movlb	0	; () banked
  9032  000FF2  6FFD               	movwf	_periodicUpValue& (0+255),b
  9033                           
  9034                           ; BSR set to: 0
  9035                           ;MOTEapp.c: 888: }
  9036                           ;MOTEapp.c: 890: switch (periodicUpValue)
  9037  000FF4  D06B               	goto	l14410
  9038  000FF6                     l14386:
  9039                           
  9040                           ; BSR set to: 0
  9041                           ;MOTEapp.c: 894: periodicTimerValue = 9;
  9042  000FF6  0E09               	movlw	9
  9043  000FF8  0100               	movlb	0	; () banked
  9044  000FFA  6FFC               	movwf	_periodicTimerValue& (0+255),b
  9045                           
  9046                           ; BSR set to: 0
  9047                           ;MOTEapp.c: 895: oled_putString(" 5 ",7,2);
  9048  000FFC  0EDC               	movlw	low STR_142
  9049  000FFE  0100               	movlb	0	; () banked
  9050  001000  6F71               	movwf	oled_putString@string& (0+255),b
  9051  001002  0E7F               	movlw	high STR_142
  9052  001004  0100               	movlb	0	; () banked
  9053  001006  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9054  001008  0E07               	movlw	7
  9055  00100A  0100               	movlb	0	; () banked
  9056  00100C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9057  00100E  0E02               	movlw	2
  9058  001010  0100               	movlb	0	; () banked
  9059  001012  6F74               	movwf	oled_putString@start_page& (0+255),b
  9060  001014  EC6F  F02F         	call	_oled_putString	;wreg free
  9061                           
  9062                           ;MOTEapp.c: 896: break;
  9063  001018  0012               	return	
  9064  00101A                     l14390:
  9065                           
  9066                           ;MOTEapp.c: 898: periodicTimerValue = 18;
  9067  00101A  0E12               	movlw	18
  9068  00101C  0100               	movlb	0	; () banked
  9069  00101E  6FFC               	movwf	_periodicTimerValue& (0+255),b
  9070                           
  9071                           ; BSR set to: 0
  9072                           ;MOTEapp.c: 899: oled_putString(" 10",7,2);
  9073  001020  0EE0               	movlw	low STR_145
  9074  001022  0100               	movlb	0	; () banked
  9075  001024  6F71               	movwf	oled_putString@string& (0+255),b
  9076  001026  0E7F               	movlw	high STR_145
  9077  001028  0100               	movlb	0	; () banked
  9078  00102A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9079  00102C  0E07               	movlw	7
  9080  00102E  0100               	movlb	0	; () banked
  9081  001030  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9082  001032  0E02               	movlw	2
  9083  001034  0100               	movlb	0	; () banked
  9084  001036  6F74               	movwf	oled_putString@start_page& (0+255),b
  9085  001038  EC6F  F02F         	call	_oled_putString	;wreg free
  9086                           
  9087                           ;MOTEapp.c: 900: break;
  9088  00103C  0012               	return	
  9089  00103E                     l14394:
  9090                           
  9091                           ;MOTEapp.c: 902: periodicTimerValue = 27;
  9092  00103E  0E1B               	movlw	27
  9093  001040  0100               	movlb	0	; () banked
  9094  001042  6FFC               	movwf	_periodicTimerValue& (0+255),b
  9095                           
  9096                           ; BSR set to: 0
  9097                           ;MOTEapp.c: 903: oled_putString(" 15",7,2);
  9098  001044  0EEC               	movlw	low STR_146
  9099  001046  0100               	movlb	0	; () banked
  9100  001048  6F71               	movwf	oled_putString@string& (0+255),b
  9101  00104A  0E7F               	movlw	high STR_146
  9102  00104C  0100               	movlb	0	; () banked
  9103  00104E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9104  001050  0E07               	movlw	7
  9105  001052  0100               	movlb	0	; () banked
  9106  001054  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9107  001056  0E02               	movlw	2
  9108  001058  0100               	movlb	0	; () banked
  9109  00105A  6F74               	movwf	oled_putString@start_page& (0+255),b
  9110  00105C  EC6F  F02F         	call	_oled_putString	;wreg free
  9111                           
  9112                           ;MOTEapp.c: 904: break;
  9113  001060  0012               	return	
  9114  001062                     l14398:
  9115                           
  9116                           ;MOTEapp.c: 906: periodicTimerValue = 54;
  9117  001062  0E36               	movlw	54
  9118  001064  0100               	movlb	0	; () banked
  9119  001066  6FFC               	movwf	_periodicTimerValue& (0+255),b
  9120                           
  9121                           ; BSR set to: 0
  9122                           ;MOTEapp.c: 907: oled_putString(" 30",7,2);
  9123  001068  0EE4               	movlw	low STR_147
  9124  00106A  0100               	movlb	0	; () banked
  9125  00106C  6F71               	movwf	oled_putString@string& (0+255),b
  9126  00106E  0E7F               	movlw	high STR_147
  9127  001070  0100               	movlb	0	; () banked
  9128  001072  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9129  001074  0E07               	movlw	7
  9130  001076  0100               	movlb	0	; () banked
  9131  001078  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9132  00107A  0E02               	movlw	2
  9133  00107C  0100               	movlb	0	; () banked
  9134  00107E  6F74               	movwf	oled_putString@start_page& (0+255),b
  9135  001080  EC6F  F02F         	call	_oled_putString	;wreg free
  9136                           
  9137                           ;MOTEapp.c: 908: break;
  9138  001084  0012               	return	
  9139  001086                     l14402:
  9140                           
  9141                           ;MOTEapp.c: 910: periodicTimerValue = 108;
  9142  001086  0E6C               	movlw	108
  9143  001088  0100               	movlb	0	; () banked
  9144  00108A  6FFC               	movwf	_periodicTimerValue& (0+255),b
  9145                           
  9146                           ; BSR set to: 0
  9147                           ;MOTEapp.c: 911: oled_putString(" 60",7,2);
  9148  00108C  0EE8               	movlw	low STR_148
  9149  00108E  0100               	movlb	0	; () banked
  9150  001090  6F71               	movwf	oled_putString@string& (0+255),b
  9151  001092  0E7F               	movlw	high STR_148
  9152  001094  0100               	movlb	0	; () banked
  9153  001096  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9154  001098  0E07               	movlw	7
  9155  00109A  0100               	movlb	0	; () banked
  9156  00109C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9157  00109E  0E02               	movlw	2
  9158  0010A0  0100               	movlb	0	; () banked
  9159  0010A2  6F74               	movwf	oled_putString@start_page& (0+255),b
  9160  0010A4  EC6F  F02F         	call	_oled_putString	;wreg free
  9161                           
  9162                           ;MOTEapp.c: 912: break;
  9163  0010A8  0012               	return	
  9164  0010AA                     l572:
  9165                           
  9166                           ; BSR set to: 0
  9167                           ;MOTEapp.c: 914: periodicTimerValue = 255;
  9168  0010AA  0100               	movlb	0	; () banked
  9169  0010AC  69FC               	setf	_periodicTimerValue& (0+255),b
  9170                           
  9171                           ; BSR set to: 0
  9172                           ;MOTEapp.c: 915: oled_putString("OFF",7,2);
  9173  0010AE  0EF0               	movlw	low STR_127
  9174  0010B0  0100               	movlb	0	; () banked
  9175  0010B2  6F71               	movwf	oled_putString@string& (0+255),b
  9176  0010B4  0E7F               	movlw	high STR_127
  9177  0010B6  0100               	movlb	0	; () banked
  9178  0010B8  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9179  0010BA  0E07               	movlw	7
  9180  0010BC  0100               	movlb	0	; () banked
  9181  0010BE  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9182  0010C0  0E02               	movlw	2
  9183  0010C2  0100               	movlb	0	; () banked
  9184  0010C4  6F74               	movwf	oled_putString@start_page& (0+255),b
  9185  0010C6  EC6F  F02F         	call	_oled_putString	;wreg free
  9186                           
  9187                           ;MOTEapp.c: 917: }
  9188                           
  9189                           ;MOTEapp.c: 916: break;
  9190  0010CA  0012               	return	
  9191  0010CC                     l14410:
  9192  0010CC  0100               	movlb	0	; () banked
  9193  0010CE  51FD               	movf	_periodicUpValue& (0+255),w,b
  9194                           
  9195                           ; Switch size 1, requested type "space"
  9196                           ; Number of cases is 6, Range of values is 0 to 5
  9197                           ; switch strategies available:
  9198                           ; Name         Instructions Cycles
  9199                           ; simple_byte           19    10 (average)
  9200                           ;	Chosen strategy is simple_byte
  9201  0010D0  0A00               	xorlw	0	; case 0
  9202  0010D2  B4D8               	btfsc	status,2,c
  9203  0010D4  D790               	goto	l14386
  9204  0010D6  0A01               	xorlw	1	; case 1
  9205  0010D8  B4D8               	btfsc	status,2,c
  9206  0010DA  D79F               	goto	l14390
  9207  0010DC  0A03               	xorlw	3	; case 2
  9208  0010DE  B4D8               	btfsc	status,2,c
  9209  0010E0  D7AE               	goto	l14394
  9210  0010E2  0A01               	xorlw	1	; case 3
  9211  0010E4  B4D8               	btfsc	status,2,c
  9212  0010E6  D7BD               	goto	l14398
  9213  0010E8  0A07               	xorlw	7	; case 4
  9214  0010EA  B4D8               	btfsc	status,2,c
  9215  0010EC  D7CC               	goto	l14402
  9216  0010EE  0A01               	xorlw	1	; case 5
  9217  0010F0  B4D8               	btfsc	status,2,c
  9218  0010F2  D7DB               	goto	l572
  9219  0010F4  D780               	goto	l14386
  9220  0010F6                     l14412:
  9221                           
  9222                           ; BSR set to: 0
  9223                           ;MOTEapp.c: 921: if (changeStates)
  9224  0010F6  0100               	movlb	0	; () banked
  9225  0010F8  51B7               	movf	moteRunningProcess@changeStates& (0+255),w,b
  9226  0010FA  0100               	movlb	0	; () banked
  9227  0010FC  B4D8               	btfsc	status,2,c
  9228  0010FE  D025               	goto	l14424
  9229                           
  9230                           ; BSR set to: 0
  9231                           ;MOTEapp.c: 922: {
  9232                           ;MOTEapp.c: 924: MOTEapp_SetDataRateSetting(dataRateValue);
  9233  001100  0100               	movlb	0	; () banked
  9234  001102  51F7               	movf	_dataRateValue& (0+255),w,b
  9235  001104  EC91  F011         	call	_MOTEapp_SetDataRateSetting
  9236                           
  9237                           ;MOTEapp.c: 926: oled_clear();
  9238  001108  ECD1  F034         	call	_oled_clear	;wreg free
  9239                           
  9240                           ;MOTEapp.c: 927: oled_putString("Enter Sleep Mode",0,0);
  9241  00110C  0EE5               	movlw	low STR_150
  9242  00110E  0100               	movlb	0	; () banked
  9243  001110  6F71               	movwf	oled_putString@string& (0+255),b
  9244  001112  0E7B               	movlw	high STR_150
  9245  001114  0100               	movlb	0	; () banked
  9246  001116  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9247  001118  0E00               	movlw	0
  9248  00111A  0100               	movlb	0	; () banked
  9249  00111C  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9250  00111E  0E00               	movlw	0
  9251  001120  0100               	movlb	0	; () banked
  9252  001122  6F74               	movwf	oled_putString@start_page& (0+255),b
  9253  001124  EC6F  F02F         	call	_oled_putString	;wreg free
  9254                           
  9255                           ;MOTEapp.c: 928: oled_putString("(NAV)    (SLP) ",0,3);
  9256  001128  0EAD               	movlw	low STR_151
  9257  00112A  0100               	movlb	0	; () banked
  9258  00112C  6F71               	movwf	oled_putString@string& (0+255),b
  9259  00112E  0E7C               	movlw	high STR_151
  9260  001130  0100               	movlb	0	; () banked
  9261  001132  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9262  001134  0E00               	movlw	0
  9263  001136  0100               	movlb	0	; () banked
  9264  001138  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9265  00113A  0E03               	movlw	3
  9266  00113C  0100               	movlb	0	; () banked
  9267  00113E  6F74               	movwf	oled_putString@start_page& (0+255),b
  9268  001140  EC6F  F02F         	call	_oled_putString	;wreg free
  9269                           
  9270                           ;MOTEapp.c: 929: runningState = runningSleep;
  9271  001144  0E0F               	movlw	15
  9272  001146  0100               	movlb	0	; () banked
  9273  001148  6FEE               	movwf	_runningState& (0+255),b
  9274  00114A                     l14424:
  9275                           
  9276                           ; BSR set to: 0
  9277                           ;MOTEapp.c: 930: }
  9278                           ;MOTEapp.c: 931: if (selectButton)
  9279  00114A  0100               	movlb	0	; () banked
  9280  00114C  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9281  00114E  0100               	movlb	0	; () banked
  9282  001150  B4D8               	btfsc	status,2,c
  9283  001152  0012               	return	
  9284                           
  9285                           ; BSR set to: 0
  9286                           ;MOTEapp.c: 932: {
  9287                           ;MOTEapp.c: 933: if (dataRateValue < 6)
  9288  001154  0E06               	movlw	6
  9289  001156  0100               	movlb	0	; () banked
  9290  001158  61F7               	cpfslt	_dataRateValue& (0+255),b
  9291  00115A  D00D               	goto	l14436
  9292                           
  9293                           ; BSR set to: 0
  9294                           ;MOTEapp.c: 934: {
  9295                           ;MOTEapp.c: 935: if ((rnModule == rn2903) && (dataRateValue > 3))
  9296  00115C  0100               	movlb	0	; () banked
  9297  00115E  05ED               	decf	_rnModule& (0+255),w,b
  9298  001160  A4D8               	btfss	status,2,c
  9299  001162  D006               	goto	l14434
  9300                           
  9301                           ; BSR set to: 0
  9302  001164  0E03               	movlw	3
  9303  001166  0100               	movlb	0	; () banked
  9304  001168  65F7               	cpfsgt	_dataRateValue& (0+255),b
  9305  00116A  D002               	goto	l14434
  9306                           
  9307                           ; BSR set to: 0
  9308                           ;MOTEapp.c: 936: dataRateValue = 6;
  9309  00116C  0E06               	movlw	6
  9310  00116E  D004               	goto	L5
  9311  001170                     l14434:
  9312                           
  9313                           ; BSR set to: 0
  9314                           ;MOTEapp.c: 937: else
  9315                           ;MOTEapp.c: 938: dataRateValue++;
  9316  001170  0100               	movlb	0	; () banked
  9317  001172  2BF7               	incf	_dataRateValue& (0+255),f,b
  9318                           
  9319                           ; BSR set to: 0
  9320                           ;MOTEapp.c: 939: }
  9321  001174  D06D               	goto	l14454
  9322  001176                     l14436:
  9323                           
  9324                           ; BSR set to: 0
  9325                           ;MOTEapp.c: 940: else {
  9326                           ;MOTEapp.c: 941: dataRateValue = 0;
  9327  001176  0E00               	movlw	0
  9328  001178                     L5:
  9329  001178  0100               	movlb	0	; () banked
  9330  00117A  6FF7               	movwf	_dataRateValue& (0+255),b
  9331                           
  9332                           ; BSR set to: 0
  9333                           ;MOTEapp.c: 942: }
  9334                           ;MOTEapp.c: 944: switch (dataRateValue)
  9335  00117C  D069               	goto	l14454
  9336  00117E                     l14438:
  9337                           
  9338                           ; BSR set to: 0
  9339                           ;MOTEapp.c: 948: oled_putString(" 0 ",10,2);
  9340  00117E  0EC8               	movlw	low STR_137
  9341  001180  0100               	movlb	0	; () banked
  9342  001182  6F71               	movwf	oled_putString@string& (0+255),b
  9343  001184  0E7F               	movlw	high STR_137
  9344  001186  0100               	movlb	0	; () banked
  9345  001188  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9346  00118A  0E0A               	movlw	10
  9347  00118C  0100               	movlb	0	; () banked
  9348  00118E  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9349  001190  0E02               	movlw	2
  9350  001192  0100               	movlb	0	; () banked
  9351  001194  6F74               	movwf	oled_putString@start_page& (0+255),b
  9352  001196  EC6F  F02F         	call	_oled_putString	;wreg free
  9353                           
  9354                           ;MOTEapp.c: 949: break;
  9355  00119A  0012               	return	
  9356  00119C                     l14440:
  9357                           
  9358                           ;MOTEapp.c: 951: oled_putString(" 1 ",10,2);
  9359  00119C  0ECC               	movlw	low STR_138
  9360  00119E  0100               	movlb	0	; () banked
  9361  0011A0  6F71               	movwf	oled_putString@string& (0+255),b
  9362  0011A2  0E7F               	movlw	high STR_138
  9363  0011A4  0100               	movlb	0	; () banked
  9364  0011A6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9365  0011A8  0E0A               	movlw	10
  9366  0011AA  0100               	movlb	0	; () banked
  9367  0011AC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9368  0011AE  0E02               	movlw	2
  9369  0011B0  0100               	movlb	0	; () banked
  9370  0011B2  6F74               	movwf	oled_putString@start_page& (0+255),b
  9371  0011B4  EC6F  F02F         	call	_oled_putString	;wreg free
  9372                           
  9373                           ;MOTEapp.c: 952: break;
  9374  0011B8  0012               	return	
  9375  0011BA                     l14442:
  9376                           
  9377                           ;MOTEapp.c: 954: oled_putString(" 2 ",10,2);
  9378  0011BA  0ED0               	movlw	low STR_139
  9379  0011BC  0100               	movlb	0	; () banked
  9380  0011BE  6F71               	movwf	oled_putString@string& (0+255),b
  9381  0011C0  0E7F               	movlw	high STR_139
  9382  0011C2  0100               	movlb	0	; () banked
  9383  0011C4  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9384  0011C6  0E0A               	movlw	10
  9385  0011C8  0100               	movlb	0	; () banked
  9386  0011CA  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9387  0011CC  0E02               	movlw	2
  9388  0011CE  0100               	movlb	0	; () banked
  9389  0011D0  6F74               	movwf	oled_putString@start_page& (0+255),b
  9390  0011D2  EC6F  F02F         	call	_oled_putString	;wreg free
  9391                           
  9392                           ;MOTEapp.c: 955: break;
  9393  0011D6  0012               	return	
  9394  0011D8                     l14444:
  9395                           
  9396                           ;MOTEapp.c: 957: oled_putString(" 3 ",10,2);
  9397  0011D8  0ED4               	movlw	low STR_140
  9398  0011DA  0100               	movlb	0	; () banked
  9399  0011DC  6F71               	movwf	oled_putString@string& (0+255),b
  9400  0011DE  0E7F               	movlw	high STR_140
  9401  0011E0  0100               	movlb	0	; () banked
  9402  0011E2  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9403  0011E4  0E0A               	movlw	10
  9404  0011E6  0100               	movlb	0	; () banked
  9405  0011E8  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9406  0011EA  0E02               	movlw	2
  9407  0011EC  0100               	movlb	0	; () banked
  9408  0011EE  6F74               	movwf	oled_putString@start_page& (0+255),b
  9409  0011F0  EC6F  F02F         	call	_oled_putString	;wreg free
  9410                           
  9411                           ;MOTEapp.c: 958: break;
  9412  0011F4  0012               	return	
  9413  0011F6                     l14446:
  9414                           
  9415                           ;MOTEapp.c: 960: oled_putString(" 4 ",10,2);
  9416  0011F6  0ED8               	movlw	low STR_141
  9417  0011F8  0100               	movlb	0	; () banked
  9418  0011FA  6F71               	movwf	oled_putString@string& (0+255),b
  9419  0011FC  0E7F               	movlw	high STR_141
  9420  0011FE  0100               	movlb	0	; () banked
  9421  001200  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9422  001202  0E0A               	movlw	10
  9423  001204  0100               	movlb	0	; () banked
  9424  001206  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9425  001208  0E02               	movlw	2
  9426  00120A  0100               	movlb	0	; () banked
  9427  00120C  6F74               	movwf	oled_putString@start_page& (0+255),b
  9428  00120E  EC6F  F02F         	call	_oled_putString	;wreg free
  9429                           
  9430                           ;MOTEapp.c: 961: break;
  9431  001212  0012               	return	
  9432  001214                     l14448:
  9433                           
  9434                           ;MOTEapp.c: 963: oled_putString(" 5 ",10,2);
  9435  001214  0EDC               	movlw	low STR_142
  9436  001216  0100               	movlb	0	; () banked
  9437  001218  6F71               	movwf	oled_putString@string& (0+255),b
  9438  00121A  0E7F               	movlw	high STR_142
  9439  00121C  0100               	movlb	0	; () banked
  9440  00121E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9441  001220  0E0A               	movlw	10
  9442  001222  0100               	movlb	0	; () banked
  9443  001224  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9444  001226  0E02               	movlw	2
  9445  001228  0100               	movlb	0	; () banked
  9446  00122A  6F74               	movwf	oled_putString@start_page& (0+255),b
  9447  00122C  EC6F  F02F         	call	_oled_putString	;wreg free
  9448                           
  9449                           ;MOTEapp.c: 964: break;
  9450  001230  0012               	return	
  9451  001232                     l14450:
  9452                           
  9453                           ;MOTEapp.c: 966: oled_putString("ADR",10,2);
  9454  001232  0EF4               	movlw	low STR_143
  9455  001234  0100               	movlb	0	; () banked
  9456  001236  6F71               	movwf	oled_putString@string& (0+255),b
  9457  001238  0E7F               	movlw	high STR_143
  9458  00123A  0100               	movlb	0	; () banked
  9459  00123C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9460  00123E  0E0A               	movlw	10
  9461  001240  0100               	movlb	0	; () banked
  9462  001242  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9463  001244  0E02               	movlw	2
  9464  001246  0100               	movlb	0	; () banked
  9465  001248  6F74               	movwf	oled_putString@start_page& (0+255),b
  9466  00124A  EC6F  F02F         	call	_oled_putString	;wreg free
  9467                           
  9468                           ;MOTEapp.c: 968: }
  9469                           
  9470                           ;MOTEapp.c: 967: break;
  9471  00124E  0012               	return	
  9472  001250                     l14454:
  9473  001250  0100               	movlb	0	; () banked
  9474  001252  51F7               	movf	_dataRateValue& (0+255),w,b
  9475                           
  9476                           ; Switch size 1, requested type "space"
  9477                           ; Number of cases is 7, Range of values is 0 to 6
  9478                           ; switch strategies available:
  9479                           ; Name         Instructions Cycles
  9480                           ; simple_byte           22    12 (average)
  9481                           ;	Chosen strategy is simple_byte
  9482  001254  0A00               	xorlw	0	; case 0
  9483  001256  B4D8               	btfsc	status,2,c
  9484  001258  D792               	goto	l14438
  9485  00125A  0A01               	xorlw	1	; case 1
  9486  00125C  B4D8               	btfsc	status,2,c
  9487  00125E  D79E               	goto	l14440
  9488  001260  0A03               	xorlw	3	; case 2
  9489  001262  B4D8               	btfsc	status,2,c
  9490  001264  D7AA               	goto	l14442
  9491  001266  0A01               	xorlw	1	; case 3
  9492  001268  B4D8               	btfsc	status,2,c
  9493  00126A  D7B6               	goto	l14444
  9494  00126C  0A07               	xorlw	7	; case 4
  9495  00126E  B4D8               	btfsc	status,2,c
  9496  001270  D7C2               	goto	l14446
  9497  001272  0A01               	xorlw	1	; case 5
  9498  001274  B4D8               	btfsc	status,2,c
  9499  001276  D7CE               	goto	l14448
  9500  001278  0A03               	xorlw	3	; case 6
  9501  00127A  B4D8               	btfsc	status,2,c
  9502  00127C  D7DA               	goto	l14450
  9503  00127E  D77F               	goto	l14438
  9504  001280                     l14456:
  9505                           
  9506                           ; BSR set to: 0
  9507                           ;MOTEapp.c: 972: if (selectButton)
  9508  001280  0100               	movlb	0	; () banked
  9509  001282  51AC               	movf	moteRunningProcess@selectButton& (0+255),w,b
  9510  001284  0100               	movlb	0	; () banked
  9511  001286  B4D8               	btfsc	status,2,c
  9512  001288  D00C               	goto	l591
  9513                           
  9514                           ; BSR set to: 0
  9515                           ;MOTEapp.c: 973: {
  9516                           ;MOTEapp.c: 974: if( moteApp_GoToSleep() )
  9517  00128A  EC80  F01F         	call	_moteApp_GoToSleep	;wreg free
  9518  00128E  0900               	iorlw	0
  9519  001290  B4D8               	btfsc	status,2,c
  9520  001292  D004               	goto	l14462
  9521                           
  9522                           ;MOTEapp.c: 975: {
  9523                           ;MOTEapp.c: 976: changeStates = 1;
  9524  001294  0E01               	movlw	1
  9525  001296  0100               	movlb	0	; () banked
  9526  001298  6FB7               	movwf	moteRunningProcess@changeStates& (0+255),b
  9527                           
  9528                           ;MOTEapp.c: 977: }
  9529  00129A  D003               	goto	l591
  9530  00129C                     l14462:
  9531                           
  9532                           ;MOTEapp.c: 978: else
  9533                           ;MOTEapp.c: 979: {
  9534                           ;MOTEapp.c: 980: secTicker = 10 - 1;
  9535  00129C  0E09               	movlw	9
  9536  00129E  0100               	movlb	0	; () banked
  9537  0012A0  6FEF               	movwf	_secTicker& (0+255),b
  9538  0012A2                     l591:
  9539                           
  9540                           ; BSR set to: 0
  9541                           ;MOTEapp.c: 981: }
  9542                           ;MOTEapp.c: 982: }
  9543                           ;MOTEapp.c: 983: if (changeStates)
  9544  0012A2  0100               	movlb	0	; () banked
  9545  0012A4  51B7               	movf	moteRunningProcess@changeStates& (0+255),w,b
  9546  0012A6  0100               	movlb	0	; () banked
  9547  0012A8  B4D8               	btfsc	status,2,c
  9548  0012AA  0012               	return	
  9549                           
  9550                           ; BSR set to: 0
  9551                           ;MOTEapp.c: 984: {
  9552                           ;MOTEapp.c: 985: oled_clear();
  9553  0012AC  ECD1  F034         	call	_oled_clear	;wreg free
  9554                           
  9555                           ;MOTEapp.c: 986: oled_putString("  Issue Uplink  ",0,0);
  9556  0012B0  0EE6               	movlw	low STR_75
  9557  0012B2  0100               	movlb	0	; () banked
  9558  0012B4  6F71               	movwf	oled_putString@string& (0+255),b
  9559  0012B6  0E7A               	movlw	high STR_75
  9560  0012B8  0100               	movlb	0	; () banked
  9561  0012BA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9562  0012BC  0E00               	movlw	0
  9563  0012BE  0100               	movlb	0	; () banked
  9564  0012C0  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9565  0012C2  0E00               	movlw	0
  9566  0012C4  0100               	movlb	0	; () banked
  9567  0012C6  6F74               	movwf	oled_putString@start_page& (0+255),b
  9568  0012C8  EC6F  F02F         	call	_oled_putString	;wreg free
  9569                           
  9570                           ;MOTEapp.c: 987: oled_putString(" LoRaWAN Packet ",0,1);
  9571  0012CC  0E4C               	movlw	low STR_76
  9572  0012CE  0100               	movlb	0	; () banked
  9573  0012D0  6F71               	movwf	oled_putString@string& (0+255),b
  9574  0012D2  0E7B               	movlw	high STR_76
  9575  0012D4  0100               	movlb	0	; () banked
  9576  0012D6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9577  0012D8  0E00               	movlw	0
  9578  0012DA  0100               	movlb	0	; () banked
  9579  0012DC  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9580  0012DE  0E01               	movlw	1
  9581  0012E0  0100               	movlb	0	; () banked
  9582  0012E2  6F74               	movwf	oled_putString@start_page& (0+255),b
  9583  0012E4  EC6F  F02F         	call	_oled_putString	;wreg free
  9584                           
  9585                           ;MOTEapp.c: 988: oled_putString("(NAV)    (SEL) ",0,3);
  9586  0012E8  0E9D               	movlw	low STR_77
  9587  0012EA  0100               	movlb	0	; () banked
  9588  0012EC  6F71               	movwf	oled_putString@string& (0+255),b
  9589  0012EE  0E7C               	movlw	high STR_77
  9590  0012F0  0100               	movlb	0	; () banked
  9591  0012F2  6F72               	movwf	(oled_putString@string+1)& (0+255),b
  9592  0012F4  0E00               	movlw	0
  9593  0012F6  0100               	movlb	0	; () banked
  9594  0012F8  6F73               	movwf	oled_putString@station_dot& (0+255),b
  9595  0012FA  0E03               	movlw	3
  9596  0012FC  0100               	movlb	0	; () banked
  9597  0012FE  6F74               	movwf	oled_putString@start_page& (0+255),b
  9598  001300  EC6F  F02F         	call	_oled_putString	;wreg free
  9599                           
  9600                           ;MOTEapp.c: 989: runningState = runningUplink;
  9601  001304  0E06               	movlw	6
  9602  001306  0100               	movlb	0	; () banked
  9603  001308  6FEE               	movwf	_runningState& (0+255),b
  9604                           
  9605                           ; BSR set to: 0
  9606                           ;MOTEapp.c: 992: }
  9607                           
  9608                           ; BSR set to: 0
  9609                           ;MOTEapp.c: 990: }
  9610                           ;MOTEapp.c: 991: break;
  9611  00130A  0012               	return	
  9612  00130C                     l14476:
  9613                           
  9614                           ; BSR set to: 0
  9615  00130C  0100               	movlb	0	; () banked
  9616  00130E  51EE               	movf	_runningState& (0+255),w,b
  9617                           
  9618                           ; Switch size 1, requested type "space"
  9619                           ; Number of cases is 12, Range of values is 0 to 15
  9620                           ; switch strategies available:
  9621                           ; Name         Instructions Cycles
  9622                           ; simple_byte           37    19 (average)
  9623                           ;	Chosen strategy is simple_byte
  9624  001310  0A00               	xorlw	0	; case 0
  9625  001312  B4D8               	btfsc	status,2,c
  9626  001314  EF6A  F001         	goto	l14004
  9627  001318  0A01               	xorlw	1	; case 1
  9628  00131A  B4D8               	btfsc	status,2,c
  9629  00131C  EF80  F005         	goto	l14260
  9630  001320  0A03               	xorlw	3	; case 2
  9631  001322  B4D8               	btfsc	status,2,c
  9632  001324  D568               	goto	l14334
  9633  001326  0A01               	xorlw	1	; case 3
  9634  001328  B4D8               	btfsc	status,2,c
  9635  00132A  D6E5               	goto	l14412
  9636  00132C  0A05               	xorlw	5	; case 6
  9637  00132E  B4D8               	btfsc	status,2,c
  9638  001330  EFA4  F001         	goto	l14018
  9639  001334  0A01               	xorlw	1	; case 7
  9640  001336  B4D8               	btfsc	status,2,c
  9641  001338  EF7A  F002         	goto	l14088
  9642  00133C  0A0F               	xorlw	15	; case 8
  9643  00133E  B4D8               	btfsc	status,2,c
  9644  001340  EF37  F003         	goto	l14134
  9645  001344  0A02               	xorlw	2	; case 10
  9646  001346  B4D8               	btfsc	status,2,c
  9647  001348  EFB1  F004         	goto	l14214
  9648  00134C  0A01               	xorlw	1	; case 11
  9649  00134E  B4D8               	btfsc	status,2,c
  9650  001350  EF46  F005         	goto	l14246
  9651  001354  0A07               	xorlw	7	; case 12
  9652  001356  B4D8               	btfsc	status,2,c
  9653  001358  D460               	goto	l14290
  9654  00135A  0A01               	xorlw	1	; case 13
  9655  00135C  B4D8               	btfsc	status,2,c
  9656  00135E  D585               	goto	l14348
  9657  001360  0A02               	xorlw	2	; case 15
  9658  001362  B4D8               	btfsc	status,2,c
  9659  001364  D78D               	goto	l14456
  9660  001366  EF69  F001         	goto	l475
  9661  00136A                     __end_of_moteRunningProcess:
  9662                           	opt stack 0
  9663                           tblptru	equ	0xFF8
  9664                           tblptrh	equ	0xFF7
  9665                           tblptrl	equ	0xFF6
  9666                           tablat	equ	0xFF5
  9667                           prodh	equ	0xFF4
  9668                           prodl	equ	0xFF3
  9669                           intcon	equ	0xFF2
  9670                           postinc0	equ	0xFEE
  9671                           wreg	equ	0xFE8
  9672                           indf1	equ	0xFE7
  9673                           postdec1	equ	0xFE5
  9674                           fsr1h	equ	0xFE2
  9675                           fsr1l	equ	0xFE1
  9676                           indf2	equ	0xFDF
  9677                           fsr2h	equ	0xFDA
  9678                           fsr2l	equ	0xFD9
  9679                           status	equ	0xFD8
  9680                           
  9681 ;; *************** function _sendDataCommand *****************
  9682 ;; Defined at:
  9683 ;;		line 1186 in file "../Includes/Board/MOTEapp.c"
  9684 ;; Parameters:    Size  Location     Type
  9685 ;;  string          2    1[BANK0 ] PTR const unsigned char 
  9686 ;;		 -> STR_84(14), STR_83(14), STR_74(14), 
  9687 ;;  appData         2    3[BANK0 ] PTR unsigned char 
  9688 ;;		 -> dataBuffer(16), 
  9689 ;;  dataLength      1    5[BANK0 ] unsigned char 
  9690 ;; Auto vars:     Size  Location     Type
  9691 ;;  byteCount       1    8[BANK0 ] unsigned char 
  9692 ;;  byteCount       1    7[BANK0 ] unsigned char 
  9693 ;; Return value:  Size  Location     Type
  9694 ;;		None               void
  9695 ;; Registers used:
  9696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9697 ;; Tracked objects:
  9698 ;;		On entry : 0/0
  9699 ;;		On exit  : 0/0
  9700 ;;		Unchanged: 0/0
  9701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9702 ;;      Params:         0       5       0       0       0       0       0       0       0
  9703 ;;      Locals:         0       2       0       0       0       0       0       0       0
  9704 ;;      Temps:          0       1       0       0       0       0       0       0       0
  9705 ;;      Totals:         0       8       0       0       0       0       0       0       0
  9706 ;;Total ram usage:        8 bytes
  9707 ;; Hardware stack levels used:    1
  9708 ;; Hardware stack levels required when called:   13
  9709 ;; This function calls:
  9710 ;;		_EUSART_Write
  9711 ;;		_EndLine
  9712 ;;		_hexToStr
  9713 ;; This function is called by:
  9714 ;;		_moteRunningProcess
  9715 ;; This function uses a non-reentrant model
  9716 ;;
  9717                           
  9718                           	psect	text11
  9719  004B06                     __ptext11:
  9720                           	opt stack 0
  9721  004B06                     _sendDataCommand:
  9722                           	opt stack 15
  9723                           
  9724                           ;MOTEapp.c: 1189: while (*string)
  9725                           
  9726                           ;incstack = 0
  9727  004B06  D00B               	goto	l13142
  9728  004B08                     l13138:
  9729                           
  9730                           ;MOTEapp.c: 1190: {
  9731                           ;MOTEapp.c: 1191: EUSART_Write(*string++);
  9732  004B08  C061  FFF6         	movff	sendDataCommand@string,tblptrl
  9733  004B0C  C062  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9734  004B10                     	if	0	;tblptru may be non-zero
  9735  004B10                     	endif
  9736  004B10                     	if	0	;tblptru may be non-zero
  9737  004B10                     	endif
  9738  004B10  0008               	tblrd		*
  9739  004B12  50F5               	movf	tablat,w,c
  9740  004B14  EC08  F032         	call	_EUSART_Write
  9741  004B18  0100               	movlb	0	; () banked
  9742  004B1A  4B61               	infsnz	sendDataCommand@string& (0+255),f,b
  9743  004B1C  2B62               	incf	(sendDataCommand@string+1)& (0+255),f,b
  9744  004B1E                     l13142:
  9745  004B1E  C061  FFF6         	movff	sendDataCommand@string,tblptrl
  9746  004B22  C062  FFF7         	movff	sendDataCommand@string+1,tblptrh
  9747  004B26                     	if	0	;tblptru may be non-zero
  9748  004B26                     	endif
  9749  004B26                     	if	0	;tblptru may be non-zero
  9750  004B26                     	endif
  9751  004B26  0008               	tblrd		*
  9752  004B28  50F5               	movf	tablat,w,c
  9753  004B2A  0900               	iorlw	0
  9754  004B2C  A4D8               	btfss	status,2,c
  9755  004B2E  D7EC               	goto	l13138
  9756                           
  9757                           ;MOTEapp.c: 1192: }
  9758                           ;MOTEapp.c: 1194: for (uint8_t byteCount = 0; byteCount < 3; byteCount++)
  9759  004B30  0E00               	movlw	0
  9760  004B32  0100               	movlb	0	; () banked
  9761  004B34  6F67               	movwf	sendDataCommand@byteCount& (0+255),b
  9762  004B36                     l13146:
  9763                           
  9764                           ; BSR set to: 0
  9765  004B36  0E02               	movlw	2
  9766  004B38  0100               	movlb	0	; () banked
  9767  004B3A  6567               	cpfsgt	sendDataCommand@byteCount& (0+255),b
  9768  004B3C  D001               	goto	l13150
  9769  004B3E  D011               	goto	l13156
  9770  004B40                     l13150:
  9771                           
  9772                           ; BSR set to: 0
  9773                           ;MOTEapp.c: 1195: {
  9774                           ;MOTEapp.c: 1196: EUSART_Write(appData[byteCount]);
  9775  004B40  0100               	movlb	0	; () banked
  9776  004B42  5167               	movf	sendDataCommand@byteCount& (0+255),w,b
  9777  004B44  0D01               	mullw	1
  9778  004B46  50F3               	movf	prodl,w,c
  9779  004B48  0100               	movlb	0	; () banked
  9780  004B4A  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  9781  004B4C  6ED9               	movwf	fsr2l,c
  9782  004B4E  50F4               	movf	prodh,w,c
  9783  004B50  0100               	movlb	0	; () banked
  9784  004B52  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  9785  004B54  6EDA               	movwf	fsr2h,c
  9786  004B56  50DF               	movf	indf2,w,c
  9787  004B58  EC08  F032         	call	_EUSART_Write
  9788  004B5C  0100               	movlb	0	; () banked
  9789  004B5E  2B67               	incf	sendDataCommand@byteCount& (0+255),f,b
  9790  004B60  D7EA               	goto	l13146
  9791  004B62                     l13156:
  9792                           
  9793                           ; BSR set to: 0
  9794                           ;MOTEapp.c: 1197: }
  9795                           ;MOTEapp.c: 1199: EUSART_Write(appData[3]);
  9796  004B62  0100               	movlb	0	; () banked
  9797  004B64  EE20 F003          	lfsr	2,3
  9798  004B68  5163               	movf	sendDataCommand@appData& (0+255),w,b
  9799  004B6A  26D9               	addwf	fsr2l,f,c
  9800  004B6C  5164               	movf	(sendDataCommand@appData+1)& (0+255),w,b
  9801  004B6E  22DA               	addwfc	fsr2h,f,c
  9802  004B70  50DF               	movf	indf2,w,c
  9803  004B72  EC08  F032         	call	_EUSART_Write
  9804                           
  9805                           ;MOTEapp.c: 1201: for (uint8_t byteCount = 4; byteCount < dataLength; byteCount++)
  9806  004B76  0E04               	movlw	4
  9807  004B78  0100               	movlb	0	; () banked
  9808  004B7A  6F68               	movwf	sendDataCommand@byteCount_1873& (0+255),b
  9809  004B7C  D028               	goto	l13164
  9810  004B7E                     l13160:
  9811                           
  9812                           ; BSR set to: 0
  9813                           ;MOTEapp.c: 1202: {
  9814                           ;MOTEapp.c: 1203: EUSART_Write(hexToStr(appData[byteCount] >> 4));
  9815  004B7E  0100               	movlb	0	; () banked
  9816  004B80  5168               	movf	sendDataCommand@byteCount_1873& (0+255),w,b
  9817  004B82  0D01               	mullw	1
  9818  004B84  50F3               	movf	prodl,w,c
  9819  004B86  0100               	movlb	0	; () banked
  9820  004B88  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  9821  004B8A  6ED9               	movwf	fsr2l,c
  9822  004B8C  50F4               	movf	prodh,w,c
  9823  004B8E  0100               	movlb	0	; () banked
  9824  004B90  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  9825  004B92  6EDA               	movwf	fsr2h,c
  9826  004B94  50DF               	movf	indf2,w,c
  9827  004B96  0100               	movlb	0	; () banked
  9828  004B98  6F66               	movwf	??_sendDataCommand& (0+255),b
  9829  004B9A  0100               	movlb	0	; () banked
  9830  004B9C  3966               	swapf	??_sendDataCommand& (0+255),w,b
  9831  004B9E  0B0F               	andlw	15
  9832  004BA0  ECE2  F032         	call	_hexToStr
  9833  004BA4  EC08  F032         	call	_EUSART_Write
  9834                           
  9835                           ;MOTEapp.c: 1204: EUSART_Write(hexToStr(appData[byteCount] & 0x0F));
  9836  004BA8  0100               	movlb	0	; () banked
  9837  004BAA  5168               	movf	sendDataCommand@byteCount_1873& (0+255),w,b
  9838  004BAC  0D01               	mullw	1
  9839  004BAE  50F3               	movf	prodl,w,c
  9840  004BB0  0100               	movlb	0	; () banked
  9841  004BB2  2563               	addwf	sendDataCommand@appData& (0+255),w,b
  9842  004BB4  6ED9               	movwf	fsr2l,c
  9843  004BB6  50F4               	movf	prodh,w,c
  9844  004BB8  0100               	movlb	0	; () banked
  9845  004BBA  2164               	addwfc	(sendDataCommand@appData+1)& (0+255),w,b
  9846  004BBC  6EDA               	movwf	fsr2h,c
  9847  004BBE  50DF               	movf	indf2,w,c
  9848  004BC0  0B0F               	andlw	15
  9849  004BC2  ECE2  F032         	call	_hexToStr
  9850  004BC6  EC08  F032         	call	_EUSART_Write
  9851  004BCA  0100               	movlb	0	; () banked
  9852  004BCC  2B68               	incf	sendDataCommand@byteCount_1873& (0+255),f,b
  9853  004BCE                     l13164:
  9854                           
  9855                           ; BSR set to: 0
  9856  004BCE  0100               	movlb	0	; () banked
  9857  004BD0  5165               	movf	sendDataCommand@dataLength& (0+255),w,b
  9858  004BD2  0100               	movlb	0	; () banked
  9859  004BD4  5D68               	subwf	sendDataCommand@byteCount_1873& (0+255),w,b
  9860  004BD6  A0D8               	btfss	status,0,c
  9861  004BD8  D7D2               	goto	l13160
  9862                           
  9863                           ; BSR set to: 0
  9864                           ;MOTEapp.c: 1205: }
  9865                           ;MOTEapp.c: 1206: EndLine();
  9866                           
  9867                           ; BSR set to: 0
  9868  004BDA  EC7B  F035         	call	_EndLine	;wreg free
  9869  004BDE  0012               	return		;funcret
  9870  004BE0                     __end_of_sendDataCommand:
  9871                           	opt stack 0
  9872                           tblptru	equ	0xFF8
  9873                           tblptrh	equ	0xFF7
  9874                           tblptrl	equ	0xFF6
  9875                           tablat	equ	0xFF5
  9876                           prodh	equ	0xFF4
  9877                           prodl	equ	0xFF3
  9878                           intcon	equ	0xFF2
  9879                           postinc0	equ	0xFEE
  9880                           wreg	equ	0xFE8
  9881                           indf1	equ	0xFE7
  9882                           postdec1	equ	0xFE5
  9883                           fsr1h	equ	0xFE2
  9884                           fsr1l	equ	0xFE1
  9885                           indf2	equ	0xFDF
  9886                           fsr2h	equ	0xFDA
  9887                           fsr2l	equ	0xFD9
  9888                           status	equ	0xFD8
  9889                           
  9890 ;; *************** function _hexToStr *****************
  9891 ;; Defined at:
  9892 ;;		line 1218 in file "../Includes/Board/MOTEapp.c"
  9893 ;; Parameters:    Size  Location     Type
  9894 ;;  character       1    wreg     unsigned char 
  9895 ;; Auto vars:     Size  Location     Type
  9896 ;;  character       1    0[BANK0 ] unsigned char 
  9897 ;; Return value:  Size  Location     Type
  9898 ;;                  1    wreg      unsigned char 
  9899 ;; Registers used:
  9900 ;;		wreg, status,2, status,0
  9901 ;; Tracked objects:
  9902 ;;		On entry : 0/0
  9903 ;;		On exit  : 0/0
  9904 ;;		Unchanged: 0/0
  9905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9906 ;;      Params:         0       0       0       0       0       0       0       0       0
  9907 ;;      Locals:         0       1       0       0       0       0       0       0       0
  9908 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9909 ;;      Totals:         0       1       0       0       0       0       0       0       0
  9910 ;;Total ram usage:        1 bytes
  9911 ;; Hardware stack levels used:    1
  9912 ;; Hardware stack levels required when called:   11
  9913 ;; This function calls:
  9914 ;;		Nothing
  9915 ;; This function is called by:
  9916 ;;		_sendDataCommand
  9917 ;; This function uses a non-reentrant model
  9918 ;;
  9919                           
  9920                           	psect	text12
  9921  0065C4                     __ptext12:
  9922                           	opt stack 0
  9923  0065C4                     _hexToStr:
  9924                           	opt stack 16
  9925                           
  9926                           ;incstack = 0
  9927                           ;hexToStr@character stored from wreg
  9928  0065C4  0100               	movlb	0	; () banked
  9929  0065C6  6F60               	movwf	hexToStr@character& (0+255),b
  9930                           
  9931                           ;MOTEapp.c: 1221: character = character & 0x0F;
  9932  0065C8  0100               	movlb	0	; () banked
  9933  0065CA  5160               	movf	hexToStr@character& (0+255),w,b
  9934  0065CC  0B0F               	andlw	15
  9935  0065CE  0100               	movlb	0	; () banked
  9936  0065D0  6F60               	movwf	hexToStr@character& (0+255),b
  9937                           
  9938                           ;MOTEapp.c: 1223: if (character < 0x0A)
  9939  0065D2  0E0A               	movlw	10
  9940  0065D4  0100               	movlb	0	; () banked
  9941  0065D6  6160               	cpfslt	hexToStr@character& (0+255),b
  9942  0065D8  D004               	goto	l12112
  9943                           
  9944                           ; BSR set to: 0
  9945                           ;MOTEapp.c: 1224: {
  9946                           ;MOTEapp.c: 1225: return character + '0';
  9947  0065DA  0100               	movlb	0	; () banked
  9948  0065DC  5160               	movf	hexToStr@character& (0+255),w,b
  9949  0065DE  0F30               	addlw	48
  9950                           
  9951                           ; BSR set to: 0
  9952                           ;MOTEapp.c: 1226: }
  9953                           
  9954                           ; BSR set to: 0
  9955  0065E0  0012               	return	
  9956  0065E2                     l12112:
  9957                           
  9958                           ; BSR set to: 0
  9959                           ;MOTEapp.c: 1227: else if ( (character >= 0x0A) && (character <= 0x0F) )
  9960  0065E2  0E09               	movlw	9
  9961  0065E4  0100               	movlb	0	; () banked
  9962  0065E6  6560               	cpfsgt	hexToStr@character& (0+255),b
  9963  0065E8  D008               	goto	l12122
  9964                           
  9965                           ; BSR set to: 0
  9966  0065EA  0E10               	movlw	16
  9967  0065EC  0100               	movlb	0	; () banked
  9968  0065EE  6160               	cpfslt	hexToStr@character& (0+255),b
  9969  0065F0  D004               	goto	l12122
  9970                           
  9971                           ; BSR set to: 0
  9972                           ;MOTEapp.c: 1228: {
  9973                           ;MOTEapp.c: 1229: return character + '0' + 7;
  9974  0065F2  0100               	movlb	0	; () banked
  9975  0065F4  5160               	movf	hexToStr@character& (0+255),w,b
  9976  0065F6  0F37               	addlw	55
  9977                           
  9978                           ; BSR set to: 0
  9979                           ;MOTEapp.c: 1230: }
  9980                           
  9981                           ; BSR set to: 0
  9982  0065F8  0012               	return	
  9983  0065FA                     l12122:
  9984                           
  9985                           ; BSR set to: 0
  9986                           ;MOTEapp.c: 1231: else
  9987                           ;MOTEapp.c: 1232: {
  9988                           ;MOTEapp.c: 1233: return 0;
  9989  0065FA  0E00               	movlw	0
  9990                           
  9991                           ; BSR set to: 0
  9992                           
  9993                           ; BSR set to: 0
  9994  0065FC  0012               	return	
  9995  0065FE                     __end_of_hexToStr:
  9996                           	opt stack 0
  9997                           tblptru	equ	0xFF8
  9998                           tblptrh	equ	0xFF7
  9999                           tblptrl	equ	0xFF6
 10000                           tablat	equ	0xFF5
 10001                           prodh	equ	0xFF4
 10002                           prodl	equ	0xFF3
 10003                           intcon	equ	0xFF2
 10004                           postinc0	equ	0xFEE
 10005                           wreg	equ	0xFE8
 10006                           indf1	equ	0xFE7
 10007                           postdec1	equ	0xFE5
 10008                           fsr1h	equ	0xFE2
 10009                           fsr1l	equ	0xFE1
 10010                           indf2	equ	0xFDF
 10011                           fsr2h	equ	0xFDA
 10012                           fsr2l	equ	0xFD9
 10013                           status	equ	0xFD8
 10014                           
 10015 ;; *************** function _oled_putint8 *****************
 10016 ;; Defined at:
 10017 ;;		line 278 in file "../Includes/Drivers/SSD1306oLED.c"
 10018 ;; Parameters:    Size  Location     Type
 10019 ;;  number          1    wreg     unsigned char 
 10020 ;;  station_dot     1   22[BANK0 ] unsigned char 
 10021 ;;  start_page      1   23[BANK0 ] unsigned char 
 10022 ;; Auto vars:     Size  Location     Type
 10023 ;;  number          1   31[BANK0 ] unsigned char 
 10024 ;;  numData         6   25[BANK0 ] struct .
 10025 ;;  negative        1   24[BANK0 ] unsigned char 
 10026 ;; Return value:  Size  Location     Type
 10027 ;;		None               void
 10028 ;; Registers used:
 10029 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10030 ;; Tracked objects:
 10031 ;;		On entry : 0/0
 10032 ;;		On exit  : 0/0
 10033 ;;		Unchanged: 0/0
 10034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10035 ;;      Params:         0       2       0       0       0       0       0       0       0
 10036 ;;      Locals:         0       8       0       0       0       0       0       0       0
 10037 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10038 ;;      Totals:         0      10       0       0       0       0       0       0       0
 10039 ;;Total ram usage:       10 bytes
 10040 ;; Hardware stack levels used:    1
 10041 ;; Hardware stack levels required when called:   15
 10042 ;; This function calls:
 10043 ;;		___awmod
 10044 ;;		___lbdiv
 10045 ;;		_oled_putString
 10046 ;; This function is called by:
 10047 ;;		_moteHandler
 10048 ;;		_moteRunningProcess
 10049 ;;		_moteApp_testSensors
 10050 ;; This function uses a non-reentrant model
 10051 ;;
 10052                           
 10053                           	psect	text13
 10054  004CB8                     __ptext13:
 10055                           	opt stack 0
 10056  004CB8                     _oled_putint8:
 10057                           	opt stack 13
 10058                           
 10059                           ; BSR set to: 0
 10060                           ;incstack = 0
 10061                           ;oled_putint8@number stored from wreg
 10062  004CB8  0100               	movlb	0	; () banked
 10063  004CBA  6F7F               	movwf	oled_putint8@number& (0+255),b
 10064                           
 10065                           ;SSD1306oLED.c: 280: display_data_t numData;
 10066                           ;SSD1306oLED.c: 281: bool negative = 0;
 10067  004CBC  0E00               	movlw	0
 10068  004CBE  0100               	movlb	0	; () banked
 10069  004CC0  6F78               	movwf	oled_putint8@negative& (0+255),b
 10070                           
 10071                           ; BSR set to: 0
 10072                           ;SSD1306oLED.c: 283: if(number & 0x80)
 10073  004CC2  0100               	movlb	0	; () banked
 10074  004CC4  AF7F               	btfss	oled_putint8@number& (0+255),7,b
 10075  004CC6  D003               	goto	l12986
 10076                           
 10077                           ; BSR set to: 0
 10078                           ;SSD1306oLED.c: 284: negative = 1;
 10079  004CC8  0E01               	movlw	1
 10080  004CCA  0100               	movlb	0	; () banked
 10081  004CCC  6F78               	movwf	oled_putint8@negative& (0+255),b
 10082  004CCE                     l12986:
 10083                           
 10084                           ; BSR set to: 0
 10085                           ;SSD1306oLED.c: 285: number = (number & 0x7F);
 10086  004CCE  0100               	movlb	0	; () banked
 10087  004CD0  517F               	movf	oled_putint8@number& (0+255),w,b
 10088  004CD2  0B7F               	andlw	127
 10089  004CD4  0100               	movlb	0	; () banked
 10090  004CD6  6F7F               	movwf	oled_putint8@number& (0+255),b
 10091                           
 10092                           ; BSR set to: 0
 10093                           ;SSD1306oLED.c: 287: numData.d2 = '0' + (number % 10);
 10094  004CD8  C07F  F060         	movff	oled_putint8@number,___awmod@dividend
 10095  004CDC  0100               	movlb	0	; () banked
 10096  004CDE  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10097  004CE0  0E00               	movlw	0
 10098  004CE2  0100               	movlb	0	; () banked
 10099  004CE4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10100  004CE6  0E0A               	movlw	10
 10101  004CE8  6F62               	movwf	___awmod@divisor& (0+255),b
 10102  004CEA  ECC2  F02A         	call	___awmod	;wreg free
 10103  004CEE  0100               	movlb	0	; () banked
 10104  004CF0  5160               	movf	?___awmod& (0+255),w,b
 10105  004CF2  0F30               	addlw	48
 10106  004CF4  0100               	movlb	0	; () banked
 10107  004CF6  6F7B               	movwf	(oled_putint8@numData+2)& (0+255),b
 10108                           
 10109                           ; BSR set to: 0
 10110                           ;SSD1306oLED.c: 288: number /= 10;
 10111  004CF8  0E0A               	movlw	10
 10112  004CFA  0100               	movlb	0	; () banked
 10113  004CFC  6F60               	movwf	___lbdiv@divisor& (0+255),b
 10114  004CFE  0100               	movlb	0	; () banked
 10115  004D00  517F               	movf	oled_putint8@number& (0+255),w,b
 10116  004D02  EC39  F030         	call	___lbdiv
 10117  004D06  0100               	movlb	0	; () banked
 10118  004D08  6F7F               	movwf	oled_putint8@number& (0+255),b
 10119                           
 10120                           ; BSR set to: 0
 10121                           ;SSD1306oLED.c: 289: numData.d1 = '0' + (number % 10);
 10122  004D0A  C07F  F060         	movff	oled_putint8@number,___awmod@dividend
 10123  004D0E  0100               	movlb	0	; () banked
 10124  004D10  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10125  004D12  0E00               	movlw	0
 10126  004D14  0100               	movlb	0	; () banked
 10127  004D16  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10128  004D18  0E0A               	movlw	10
 10129  004D1A  6F62               	movwf	___awmod@divisor& (0+255),b
 10130  004D1C  ECC2  F02A         	call	___awmod	;wreg free
 10131  004D20  0100               	movlb	0	; () banked
 10132  004D22  5160               	movf	?___awmod& (0+255),w,b
 10133  004D24  0F30               	addlw	48
 10134  004D26  0100               	movlb	0	; () banked
 10135  004D28  6F7A               	movwf	(oled_putint8@numData+1)& (0+255),b
 10136                           
 10137                           ; BSR set to: 0
 10138                           ;SSD1306oLED.c: 290: number /= 10;
 10139  004D2A  0E0A               	movlw	10
 10140  004D2C  0100               	movlb	0	; () banked
 10141  004D2E  6F60               	movwf	___lbdiv@divisor& (0+255),b
 10142  004D30  0100               	movlb	0	; () banked
 10143  004D32  517F               	movf	oled_putint8@number& (0+255),w,b
 10144  004D34  EC39  F030         	call	___lbdiv
 10145  004D38  0100               	movlb	0	; () banked
 10146  004D3A  6F7F               	movwf	oled_putint8@number& (0+255),b
 10147                           
 10148                           ; BSR set to: 0
 10149                           ;SSD1306oLED.c: 291: numData.d0 = '0' + (number % 10);
 10150  004D3C  C07F  F060         	movff	oled_putint8@number,___awmod@dividend
 10151  004D40  0100               	movlb	0	; () banked
 10152  004D42  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10153  004D44  0E00               	movlw	0
 10154  004D46  0100               	movlb	0	; () banked
 10155  004D48  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10156  004D4A  0E0A               	movlw	10
 10157  004D4C  6F62               	movwf	___awmod@divisor& (0+255),b
 10158  004D4E  ECC2  F02A         	call	___awmod	;wreg free
 10159  004D52  0100               	movlb	0	; () banked
 10160  004D54  5160               	movf	?___awmod& (0+255),w,b
 10161  004D56  0F30               	addlw	48
 10162  004D58  0100               	movlb	0	; () banked
 10163  004D5A  6F79               	movwf	oled_putint8@numData& (0+255),b
 10164                           
 10165                           ; BSR set to: 0
 10166                           ;SSD1306oLED.c: 292: if(negative)
 10167  004D5C  0100               	movlb	0	; () banked
 10168  004D5E  5178               	movf	oled_putint8@negative& (0+255),w,b
 10169  004D60  0100               	movlb	0	; () banked
 10170  004D62  B4D8               	btfsc	status,2,c
 10171  004D64  D003               	goto	l1038
 10172                           
 10173                           ; BSR set to: 0
 10174                           ;SSD1306oLED.c: 293: numData.d0 = '-';
 10175  004D66  0E2D               	movlw	45
 10176  004D68  0100               	movlb	0	; () banked
 10177  004D6A  6F79               	movwf	oled_putint8@numData& (0+255),b
 10178  004D6C                     l1038:
 10179                           
 10180                           ; BSR set to: 0
 10181                           ;SSD1306oLED.c: 295: numData.b[3]=0;
 10182  004D6C  0E00               	movlw	0
 10183  004D6E  0100               	movlb	0	; () banked
 10184  004D70  6F7C               	movwf	(oled_putint8@numData+3)& (0+255),b
 10185                           
 10186                           ; BSR set to: 0
 10187                           ;SSD1306oLED.c: 297: oled_putString(numData.b,station_dot,start_page);
 10188  004D72  0E79               	movlw	low oled_putint8@numData
 10189  004D74  0100               	movlb	0	; () banked
 10190  004D76  6F71               	movwf	oled_putString@string& (0+255),b
 10191  004D78  0E00               	movlw	high oled_putint8@numData
 10192  004D7A  0100               	movlb	0	; () banked
 10193  004D7C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 10194  004D7E  C076  F073         	movff	oled_putint8@station_dot,oled_putString@station_dot
 10195  004D82  C077  F074         	movff	oled_putint8@start_page,oled_putString@start_page
 10196  004D86  EC6F  F02F         	call	_oled_putString	;wreg free
 10197  004D8A  0012               	return		;funcret
 10198  004D8C                     __end_of_oled_putint8:
 10199                           	opt stack 0
 10200                           tblptru	equ	0xFF8
 10201                           tblptrh	equ	0xFF7
 10202                           tblptrl	equ	0xFF6
 10203                           tablat	equ	0xFF5
 10204                           prodh	equ	0xFF4
 10205                           prodl	equ	0xFF3
 10206                           intcon	equ	0xFF2
 10207                           postinc0	equ	0xFEE
 10208                           wreg	equ	0xFE8
 10209                           indf1	equ	0xFE7
 10210                           postdec1	equ	0xFE5
 10211                           fsr1h	equ	0xFE2
 10212                           fsr1l	equ	0xFE1
 10213                           indf2	equ	0xFDF
 10214                           fsr2h	equ	0xFDA
 10215                           fsr2l	equ	0xFD9
 10216                           status	equ	0xFD8
 10217                           
 10218 ;; *************** function _oled_putUint8 *****************
 10219 ;; Defined at:
 10220 ;;		line 264 in file "../Includes/Drivers/SSD1306oLED.c"
 10221 ;; Parameters:    Size  Location     Type
 10222 ;;  number          1    wreg     unsigned char 
 10223 ;;  station_dot     1   22[BANK0 ] unsigned char 
 10224 ;;  start_page      1   23[BANK0 ] unsigned char 
 10225 ;; Auto vars:     Size  Location     Type
 10226 ;;  number          1   24[BANK0 ] unsigned char 
 10227 ;;  numData         6   25[BANK0 ] struct .
 10228 ;; Return value:  Size  Location     Type
 10229 ;;		None               void
 10230 ;; Registers used:
 10231 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10232 ;; Tracked objects:
 10233 ;;		On entry : 0/0
 10234 ;;		On exit  : 0/0
 10235 ;;		Unchanged: 0/0
 10236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10237 ;;      Params:         0       2       0       0       0       0       0       0       0
 10238 ;;      Locals:         0       7       0       0       0       0       0       0       0
 10239 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10240 ;;      Totals:         0       9       0       0       0       0       0       0       0
 10241 ;;Total ram usage:        9 bytes
 10242 ;; Hardware stack levels used:    1
 10243 ;; Hardware stack levels required when called:   15
 10244 ;; This function calls:
 10245 ;;		___awmod
 10246 ;;		___lbdiv
 10247 ;;		_oled_putString
 10248 ;; This function is called by:
 10249 ;;		_moteRunningProcess
 10250 ;;		_test_adc
 10251 ;; This function uses a non-reentrant model
 10252 ;;
 10253                           
 10254                           	psect	text14
 10255  005434                     __ptext14:
 10256                           	opt stack 0
 10257  005434                     _oled_putUint8:
 10258                           	opt stack 13
 10259                           
 10260                           ;incstack = 0
 10261                           ;oled_putUint8@number stored from wreg
 10262  005434  0100               	movlb	0	; () banked
 10263  005436  6F78               	movwf	oled_putUint8@number& (0+255),b
 10264                           
 10265                           ;SSD1306oLED.c: 266: display_data_t numData;
 10266                           ;SSD1306oLED.c: 267: numData.d2 = '0' + (number % 10);
 10267  005438  C078  F060         	movff	oled_putUint8@number,___awmod@dividend
 10268  00543C  0100               	movlb	0	; () banked
 10269  00543E  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10270  005440  0E00               	movlw	0
 10271  005442  0100               	movlb	0	; () banked
 10272  005444  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10273  005446  0E0A               	movlw	10
 10274  005448  6F62               	movwf	___awmod@divisor& (0+255),b
 10275  00544A  ECC2  F02A         	call	___awmod	;wreg free
 10276  00544E  0100               	movlb	0	; () banked
 10277  005450  5160               	movf	?___awmod& (0+255),w,b
 10278  005452  0F30               	addlw	48
 10279  005454  0100               	movlb	0	; () banked
 10280  005456  6F7B               	movwf	(oled_putUint8@numData+2)& (0+255),b
 10281                           
 10282                           ;SSD1306oLED.c: 268: number /= 10;
 10283  005458  0E0A               	movlw	10
 10284  00545A  0100               	movlb	0	; () banked
 10285  00545C  6F60               	movwf	___lbdiv@divisor& (0+255),b
 10286  00545E  0100               	movlb	0	; () banked
 10287  005460  5178               	movf	oled_putUint8@number& (0+255),w,b
 10288  005462  EC39  F030         	call	___lbdiv
 10289  005466  0100               	movlb	0	; () banked
 10290  005468  6F78               	movwf	oled_putUint8@number& (0+255),b
 10291                           
 10292                           ;SSD1306oLED.c: 269: numData.d1 = '0' + (number % 10);
 10293  00546A  C078  F060         	movff	oled_putUint8@number,___awmod@dividend
 10294  00546E  0100               	movlb	0	; () banked
 10295  005470  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10296  005472  0E00               	movlw	0
 10297  005474  0100               	movlb	0	; () banked
 10298  005476  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10299  005478  0E0A               	movlw	10
 10300  00547A  6F62               	movwf	___awmod@divisor& (0+255),b
 10301  00547C  ECC2  F02A         	call	___awmod	;wreg free
 10302  005480  0100               	movlb	0	; () banked
 10303  005482  5160               	movf	?___awmod& (0+255),w,b
 10304  005484  0F30               	addlw	48
 10305  005486  0100               	movlb	0	; () banked
 10306  005488  6F7A               	movwf	(oled_putUint8@numData+1)& (0+255),b
 10307                           
 10308                           ;SSD1306oLED.c: 270: number /= 10;
 10309  00548A  0E0A               	movlw	10
 10310  00548C  0100               	movlb	0	; () banked
 10311  00548E  6F60               	movwf	___lbdiv@divisor& (0+255),b
 10312  005490  0100               	movlb	0	; () banked
 10313  005492  5178               	movf	oled_putUint8@number& (0+255),w,b
 10314  005494  EC39  F030         	call	___lbdiv
 10315  005498  0100               	movlb	0	; () banked
 10316  00549A  6F78               	movwf	oled_putUint8@number& (0+255),b
 10317                           
 10318                           ;SSD1306oLED.c: 271: numData.d0 = '0' + (number % 10);
 10319  00549C  C078  F060         	movff	oled_putUint8@number,___awmod@dividend
 10320  0054A0  0100               	movlb	0	; () banked
 10321  0054A2  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 10322  0054A4  0E00               	movlw	0
 10323  0054A6  0100               	movlb	0	; () banked
 10324  0054A8  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 10325  0054AA  0E0A               	movlw	10
 10326  0054AC  6F62               	movwf	___awmod@divisor& (0+255),b
 10327  0054AE  ECC2  F02A         	call	___awmod	;wreg free
 10328  0054B2  0100               	movlb	0	; () banked
 10329  0054B4  5160               	movf	?___awmod& (0+255),w,b
 10330  0054B6  0F30               	addlw	48
 10331  0054B8  0100               	movlb	0	; () banked
 10332  0054BA  6F79               	movwf	oled_putUint8@numData& (0+255),b
 10333                           
 10334                           ; BSR set to: 0
 10335                           ;SSD1306oLED.c: 273: numData.b[3]=0;
 10336  0054BC  0E00               	movlw	0
 10337  0054BE  0100               	movlb	0	; () banked
 10338  0054C0  6F7C               	movwf	(oled_putUint8@numData+3)& (0+255),b
 10339                           
 10340                           ; BSR set to: 0
 10341                           ;SSD1306oLED.c: 275: oled_putString(numData.b,station_dot,start_page);
 10342  0054C2  0E79               	movlw	low oled_putUint8@numData
 10343  0054C4  0100               	movlb	0	; () banked
 10344  0054C6  6F71               	movwf	oled_putString@string& (0+255),b
 10345  0054C8  0E00               	movlw	high oled_putUint8@numData
 10346  0054CA  0100               	movlb	0	; () banked
 10347  0054CC  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 10348  0054CE  C076  F073         	movff	oled_putUint8@station_dot,oled_putString@station_dot
 10349  0054D2  C077  F074         	movff	oled_putUint8@start_page,oled_putString@start_page
 10350  0054D6  EC6F  F02F         	call	_oled_putString	;wreg free
 10351  0054DA  0012               	return		;funcret
 10352  0054DC                     __end_of_oled_putUint8:
 10353                           	opt stack 0
 10354                           tblptru	equ	0xFF8
 10355                           tblptrh	equ	0xFF7
 10356                           tblptrl	equ	0xFF6
 10357                           tablat	equ	0xFF5
 10358                           prodh	equ	0xFF4
 10359                           prodl	equ	0xFF3
 10360                           intcon	equ	0xFF2
 10361                           postinc0	equ	0xFEE
 10362                           wreg	equ	0xFE8
 10363                           indf1	equ	0xFE7
 10364                           postdec1	equ	0xFE5
 10365                           fsr1h	equ	0xFE2
 10366                           fsr1l	equ	0xFE1
 10367                           indf2	equ	0xFDF
 10368                           fsr2h	equ	0xFDA
 10369                           fsr2l	equ	0xFD9
 10370                           status	equ	0xFD8
 10371                           
 10372 ;; *************** function _moteApp_setSensorsInput *****************
 10373 ;; Defined at:
 10374 ;;		line 1472 in file "../Includes/Board/MOTEapp.c"
 10375 ;; Parameters:    Size  Location     Type
 10376 ;;		None
 10377 ;; Auto vars:     Size  Location     Type
 10378 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 10379 ;; Return value:  Size  Location     Type
 10380 ;;		None               void
 10381 ;; Registers used:
 10382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10383 ;; Tracked objects:
 10384 ;;		On entry : 0/0
 10385 ;;		On exit  : 0/0
 10386 ;;		Unchanged: 0/0
 10387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10388 ;;      Params:         0       0       0       0       0       0       0       0       0
 10389 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10390 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10391 ;;      Totals:         0       2       0       0       0       0       0       0       0
 10392 ;;Total ram usage:        2 bytes
 10393 ;; Hardware stack levels used:    1
 10394 ;; Hardware stack levels required when called:   14
 10395 ;; This function calls:
 10396 ;;		_MOTEapp_getModuleResponse
 10397 ;;		_moteApp_delayms
 10398 ;;		_sendCommand
 10399 ;; This function is called by:
 10400 ;;		_moteRunningProcess
 10401 ;;		_moteApp_testSensors
 10402 ;; This function uses a non-reentrant model
 10403 ;;
 10404                           
 10405                           	psect	text15
 10406  005922                     __ptext15:
 10407                           	opt stack 0
 10408  005922                     _moteApp_setSensorsInput:
 10409                           	opt stack 14
 10410                           
 10411                           ;MOTEapp.c: 1474: uint16_t escapeCounter = 0;
 10412                           
 10413                           ;incstack = 0
 10414  005922  0E00               	movlw	0
 10415  005924  0100               	movlb	0	; () banked
 10416  005926  6F66               	movwf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),b
 10417  005928  0E00               	movlw	0
 10418  00592A  6F65               	movwf	moteApp_setSensorsInput@escapeCounter& (0+255),b
 10419                           
 10420                           ; BSR set to: 0
 10421                           ;MOTEapp.c: 1475: sendCommand("sys set pinmode GPIO13 ana");
 10422  00592C  0E97               	movlw	low STR_189
 10423  00592E  0100               	movlb	0	; () banked
 10424  005930  6F61               	movwf	sendCommand@string& (0+255),b
 10425  005932  0E79               	movlw	high STR_189
 10426  005934  0100               	movlb	0	; () banked
 10427  005936  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10428  005938  ECD6  F033         	call	_sendCommand	;wreg free
 10429                           
 10430                           ;MOTEapp.c: 1476: while ( !MOTEapp_getModuleResponse() )
 10431  00593C  D00B               	goto	l13090
 10432  00593E                     l13086:
 10433                           
 10434                           ;MOTEapp.c: 1477: {
 10435                           ;MOTEapp.c: 1478: if (++escapeCounter > 50000)
 10436  00593E  0100               	movlb	0	; () banked
 10437  005940  4B65               	infsnz	moteApp_setSensorsInput@escapeCounter& (0+255),f,b
 10438  005942  2B66               	incf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),f,b
 10439  005944  0E51               	movlw	81
 10440  005946  0100               	movlb	0	; () banked
 10441  005948  5D65               	subwf	moteApp_setSensorsInput@escapeCounter& (0+255),w,b
 10442  00594A  0EC3               	movlw	195
 10443  00594C  0100               	movlb	0	; () banked
 10444  00594E  5966               	subwfb	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),w,b
 10445  005950  B0D8               	btfsc	status,0,c
 10446  005952  D005               	goto	l13092
 10447  005954                     l13090:
 10448  005954  EC8E  F02E         	call	_MOTEapp_getModuleResponse	;wreg free
 10449  005958  0900               	iorlw	0
 10450  00595A  B4D8               	btfsc	status,2,c
 10451  00595C  D7F0               	goto	l13086
 10452  00595E                     l13092:
 10453                           
 10454                           ;MOTEapp.c: 1480: }
 10455                           ;MOTEapp.c: 1481: escapeCounter = 0;
 10456  00595E  0E00               	movlw	0
 10457  005960  0100               	movlb	0	; () banked
 10458  005962  6F66               	movwf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),b
 10459  005964  0E00               	movlw	0
 10460  005966  6F65               	movwf	moteApp_setSensorsInput@escapeCounter& (0+255),b
 10461                           
 10462                           ; BSR set to: 0
 10463                           ;MOTEapp.c: 1482: sendCommand("sys set pinmode GPIO12 ana");
 10464  005968  0E7C               	movlw	low STR_190
 10465  00596A  0100               	movlb	0	; () banked
 10466  00596C  6F61               	movwf	sendCommand@string& (0+255),b
 10467  00596E  0E79               	movlw	high STR_190
 10468  005970  0100               	movlb	0	; () banked
 10469  005972  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10470  005974  ECD6  F033         	call	_sendCommand	;wreg free
 10471                           
 10472                           ;MOTEapp.c: 1483: while ( !MOTEapp_getModuleResponse() )
 10473  005978  D00B               	goto	l13100
 10474  00597A                     l13096:
 10475                           
 10476                           ;MOTEapp.c: 1484: {
 10477                           ;MOTEapp.c: 1485: if (++escapeCounter > 50000)
 10478  00597A  0100               	movlb	0	; () banked
 10479  00597C  4B65               	infsnz	moteApp_setSensorsInput@escapeCounter& (0+255),f,b
 10480  00597E  2B66               	incf	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),f,b
 10481  005980  0E51               	movlw	81
 10482  005982  0100               	movlb	0	; () banked
 10483  005984  5D65               	subwf	moteApp_setSensorsInput@escapeCounter& (0+255),w,b
 10484  005986  0EC3               	movlw	195
 10485  005988  0100               	movlb	0	; () banked
 10486  00598A  5966               	subwfb	(moteApp_setSensorsInput@escapeCounter+1)& (0+255),w,b
 10487  00598C  B0D8               	btfsc	status,0,c
 10488  00598E  D005               	goto	l13102
 10489  005990                     l13100:
 10490  005990  EC8E  F02E         	call	_MOTEapp_getModuleResponse	;wreg free
 10491  005994  0900               	iorlw	0
 10492  005996  B4D8               	btfsc	status,2,c
 10493  005998  D7F0               	goto	l13096
 10494  00599A                     l13102:
 10495                           
 10496                           ;MOTEapp.c: 1487: }
 10497                           ;MOTEapp.c: 1488: moteApp_delayms(100);
 10498  00599A  0E00               	movlw	0
 10499  00599C  0100               	movlb	0	; () banked
 10500  00599E  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 10501  0059A0  0E64               	movlw	100
 10502  0059A2  6F60               	movwf	moteApp_delayms@length& (0+255),b
 10503  0059A4  ECFF  F032         	call	_moteApp_delayms	;wreg free
 10504  0059A8  0012               	return		;funcret
 10505  0059AA                     __end_of_moteApp_setSensorsInput:
 10506                           	opt stack 0
 10507                           tblptru	equ	0xFF8
 10508                           tblptrh	equ	0xFF7
 10509                           tblptrl	equ	0xFF6
 10510                           tablat	equ	0xFF5
 10511                           prodh	equ	0xFF4
 10512                           prodl	equ	0xFF3
 10513                           intcon	equ	0xFF2
 10514                           postinc0	equ	0xFEE
 10515                           wreg	equ	0xFE8
 10516                           indf1	equ	0xFE7
 10517                           postdec1	equ	0xFE5
 10518                           fsr1h	equ	0xFE2
 10519                           fsr1l	equ	0xFE1
 10520                           indf2	equ	0xFDF
 10521                           fsr2h	equ	0xFDA
 10522                           fsr2l	equ	0xFD9
 10523                           status	equ	0xFD8
 10524                           
 10525 ;; *************** function _moteApp_getTempValue *****************
 10526 ;; Defined at:
 10527 ;;		line 1490 in file "../Includes/Board/MOTEapp.c"
 10528 ;; Parameters:    Size  Location     Type
 10529 ;;		None
 10530 ;; Auto vars:     Size  Location     Type
 10531 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 10532 ;; Return value:  Size  Location     Type
 10533 ;;                  2    3[BANK0 ] PTR unsigned char 
 10534 ;; Registers used:
 10535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10536 ;; Tracked objects:
 10537 ;;		On entry : 0/0
 10538 ;;		On exit  : 0/0
 10539 ;;		Unchanged: 0/0
 10540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10541 ;;      Params:         0       2       0       0       0       0       0       0       0
 10542 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10543 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10544 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10545 ;;Total ram usage:        4 bytes
 10546 ;; Hardware stack levels used:    1
 10547 ;; Hardware stack levels required when called:   14
 10548 ;; This function calls:
 10549 ;;		_MOTEapp_getModuleResponse
 10550 ;;		_sendCommand
 10551 ;; This function is called by:
 10552 ;;		_moteHandler
 10553 ;;		_moteRunningProcess
 10554 ;;		_moteApp_testSensors
 10555 ;; This function uses a non-reentrant model
 10556 ;;
 10557                           
 10558                           	psect	text16
 10559  006336                     __ptext16:
 10560                           	opt stack 0
 10561  006336                     _moteApp_getTempValue:
 10562                           	opt stack 14
 10563                           
 10564                           ;MOTEapp.c: 1492: uint16_t escapeCounter = 0;
 10565                           
 10566                           ;incstack = 0
 10567  006336  0E00               	movlw	0
 10568  006338  0100               	movlb	0	; () banked
 10569  00633A  6F66               	movwf	(moteApp_getTempValue@escapeCounter+1)& (0+255),b
 10570  00633C  0E00               	movlw	0
 10571  00633E  6F65               	movwf	moteApp_getTempValue@escapeCounter& (0+255),b
 10572                           
 10573                           ; BSR set to: 0
 10574                           ;MOTEapp.c: 1494: sendCommand("sys get pinana GPIO12");
 10575  006340  0E1A               	movlw	low STR_191
 10576  006342  0100               	movlb	0	; () banked
 10577  006344  6F61               	movwf	sendCommand@string& (0+255),b
 10578  006346  0E7A               	movlw	high STR_191
 10579  006348  0100               	movlb	0	; () banked
 10580  00634A  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10581  00634C  ECD6  F033         	call	_sendCommand	;wreg free
 10582                           
 10583                           ;MOTEapp.c: 1495: while ( !MOTEapp_getModuleResponse() )
 10584  006350  D00B               	goto	l12954
 10585  006352                     l12950:
 10586                           
 10587                           ;MOTEapp.c: 1496: {
 10588                           ;MOTEapp.c: 1497: if (++escapeCounter > 50000)
 10589  006352  0100               	movlb	0	; () banked
 10590  006354  4B65               	infsnz	moteApp_getTempValue@escapeCounter& (0+255),f,b
 10591  006356  2B66               	incf	(moteApp_getTempValue@escapeCounter+1)& (0+255),f,b
 10592  006358  0E51               	movlw	81
 10593  00635A  0100               	movlb	0	; () banked
 10594  00635C  5D65               	subwf	moteApp_getTempValue@escapeCounter& (0+255),w,b
 10595  00635E  0EC3               	movlw	195
 10596  006360  0100               	movlb	0	; () banked
 10597  006362  5966               	subwfb	(moteApp_getTempValue@escapeCounter+1)& (0+255),w,b
 10598  006364  B0D8               	btfsc	status,0,c
 10599  006366  D005               	goto	l12956
 10600  006368                     l12954:
 10601  006368  EC8E  F02E         	call	_MOTEapp_getModuleResponse	;wreg free
 10602  00636C  0900               	iorlw	0
 10603  00636E  B4D8               	btfsc	status,2,c
 10604  006370  D7F0               	goto	l12950
 10605  006372                     l12956:
 10606                           
 10607                           ;MOTEapp.c: 1499: }
 10608                           ;MOTEapp.c: 1501: return &moduleResonseBuffer;
 10609  006372  0E5C               	movlw	low _moduleResonseBuffer
 10610  006374  0100               	movlb	0	; () banked
 10611  006376  6F63               	movwf	?_moteApp_getTempValue& (0+255),b
 10612  006378  0E01               	movlw	high _moduleResonseBuffer
 10613  00637A  0100               	movlb	0	; () banked
 10614  00637C  6F64               	movwf	(?_moteApp_getTempValue+1)& (0+255),b
 10615  00637E  0012               	return	
 10616  006380                     __end_of_moteApp_getTempValue:
 10617                           	opt stack 0
 10618                           tblptru	equ	0xFF8
 10619                           tblptrh	equ	0xFF7
 10620                           tblptrl	equ	0xFF6
 10621                           tablat	equ	0xFF5
 10622                           prodh	equ	0xFF4
 10623                           prodl	equ	0xFF3
 10624                           intcon	equ	0xFF2
 10625                           postinc0	equ	0xFEE
 10626                           wreg	equ	0xFE8
 10627                           indf1	equ	0xFE7
 10628                           postdec1	equ	0xFE5
 10629                           fsr1h	equ	0xFE2
 10630                           fsr1l	equ	0xFE1
 10631                           indf2	equ	0xFDF
 10632                           fsr2h	equ	0xFDA
 10633                           fsr2l	equ	0xFD9
 10634                           status	equ	0xFD8
 10635                           
 10636 ;; *************** function _moteApp_getLightValue *****************
 10637 ;; Defined at:
 10638 ;;		line 1504 in file "../Includes/Board/MOTEapp.c"
 10639 ;; Parameters:    Size  Location     Type
 10640 ;;		None
 10641 ;; Auto vars:     Size  Location     Type
 10642 ;;  escapeCounte    2   15[BANK0 ] unsigned int 
 10643 ;; Return value:  Size  Location     Type
 10644 ;;                  2   13[BANK0 ] PTR unsigned char 
 10645 ;; Registers used:
 10646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10647 ;; Tracked objects:
 10648 ;;		On entry : 0/0
 10649 ;;		On exit  : 0/0
 10650 ;;		Unchanged: 0/0
 10651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10652 ;;      Params:         0       2       0       0       0       0       0       0       0
 10653 ;;      Locals:         0       2       0       0       0       0       0       0       0
 10654 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10655 ;;      Totals:         0       4       0       0       0       0       0       0       0
 10656 ;;Total ram usage:        4 bytes
 10657 ;; Hardware stack levels used:    1
 10658 ;; Hardware stack levels required when called:   14
 10659 ;; This function calls:
 10660 ;;		_MOTEapp_getModuleResponse
 10661 ;;		_moteApp_setLightString
 10662 ;;		_sendCommand
 10663 ;; This function is called by:
 10664 ;;		_moteHandler
 10665 ;;		_moteRunningProcess
 10666 ;;		_moteApp_testSensors
 10667 ;; This function uses a non-reentrant model
 10668 ;;
 10669                           
 10670                           	psect	text17
 10671  00612A                     __ptext17:
 10672                           	opt stack 0
 10673  00612A                     _moteApp_getLightValue:
 10674                           	opt stack 14
 10675                           
 10676                           ;MOTEapp.c: 1506: uint16_t escapeCounter = 0;
 10677                           
 10678                           ; BSR set to: 0
 10679                           ;incstack = 0
 10680  00612A  0E00               	movlw	0
 10681  00612C  0100               	movlb	0	; () banked
 10682  00612E  6F70               	movwf	(moteApp_getLightValue@escapeCounter+1)& (0+255),b
 10683  006130  0E00               	movlw	0
 10684  006132  6F6F               	movwf	moteApp_getLightValue@escapeCounter& (0+255),b
 10685                           
 10686                           ; BSR set to: 0
 10687                           ;MOTEapp.c: 1508: sendCommand("sys get pinana GPIO13");
 10688  006134  0E30               	movlw	low STR_192
 10689  006136  0100               	movlb	0	; () banked
 10690  006138  6F61               	movwf	sendCommand@string& (0+255),b
 10691  00613A  0E7A               	movlw	high STR_192
 10692  00613C  0100               	movlb	0	; () banked
 10693  00613E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 10694  006140  ECD6  F033         	call	_sendCommand	;wreg free
 10695                           
 10696                           ;MOTEapp.c: 1509: while ( !MOTEapp_getModuleResponse() )
 10697  006144  D00B               	goto	l12938
 10698  006146                     l12934:
 10699                           
 10700                           ;MOTEapp.c: 1510: {
 10701                           ;MOTEapp.c: 1511: if (++escapeCounter > 50000)
 10702  006146  0100               	movlb	0	; () banked
 10703  006148  4B6F               	infsnz	moteApp_getLightValue@escapeCounter& (0+255),f,b
 10704  00614A  2B70               	incf	(moteApp_getLightValue@escapeCounter+1)& (0+255),f,b
 10705  00614C  0E51               	movlw	81
 10706  00614E  0100               	movlb	0	; () banked
 10707  006150  5D6F               	subwf	moteApp_getLightValue@escapeCounter& (0+255),w,b
 10708  006152  0EC3               	movlw	195
 10709  006154  0100               	movlb	0	; () banked
 10710  006156  5970               	subwfb	(moteApp_getLightValue@escapeCounter+1)& (0+255),w,b
 10711  006158  B0D8               	btfsc	status,0,c
 10712  00615A  D005               	goto	l12940
 10713  00615C                     l12938:
 10714  00615C  EC8E  F02E         	call	_MOTEapp_getModuleResponse	;wreg free
 10715  006160  0900               	iorlw	0
 10716  006162  B4D8               	btfsc	status,2,c
 10717  006164  D7F0               	goto	l12934
 10718  006166                     l12940:
 10719                           
 10720                           ;MOTEapp.c: 1513: }
 10721                           ;MOTEapp.c: 1514: moteApp_setLightString(moduleResonseBuffer);
 10722  006166  0E5C               	movlw	low _moduleResonseBuffer
 10723  006168  0100               	movlb	0	; () banked
 10724  00616A  6F6A               	movwf	moteApp_setLightString@lightString& (0+255),b
 10725  00616C  0E01               	movlw	high _moduleResonseBuffer
 10726  00616E  0100               	movlb	0	; () banked
 10727  006170  6F6B               	movwf	(moteApp_setLightString@lightString+1)& (0+255),b
 10728  006172  EC9A  F02D         	call	_moteApp_setLightString	;wreg free
 10729                           
 10730                           ;MOTEapp.c: 1515: return &moduleResonseBuffer;
 10731  006176  0E5C               	movlw	low _moduleResonseBuffer
 10732  006178  0100               	movlb	0	; () banked
 10733  00617A  6F6D               	movwf	?_moteApp_getLightValue& (0+255),b
 10734  00617C  0E01               	movlw	high _moduleResonseBuffer
 10735  00617E  0100               	movlb	0	; () banked
 10736  006180  6F6E               	movwf	(?_moteApp_getLightValue+1)& (0+255),b
 10737  006182  0012               	return	
 10738  006184                     __end_of_moteApp_getLightValue:
 10739                           	opt stack 0
 10740                           tblptru	equ	0xFF8
 10741                           tblptrh	equ	0xFF7
 10742                           tblptrl	equ	0xFF6
 10743                           tablat	equ	0xFF5
 10744                           prodh	equ	0xFF4
 10745                           prodl	equ	0xFF3
 10746                           intcon	equ	0xFF2
 10747                           postinc0	equ	0xFEE
 10748                           wreg	equ	0xFE8
 10749                           indf1	equ	0xFE7
 10750                           postdec1	equ	0xFE5
 10751                           fsr1h	equ	0xFE2
 10752                           fsr1l	equ	0xFE1
 10753                           indf2	equ	0xFDF
 10754                           fsr2h	equ	0xFDA
 10755                           fsr2l	equ	0xFD9
 10756                           status	equ	0xFD8
 10757                           
 10758 ;; *************** function _moteApp_setLightString *****************
 10759 ;; Defined at:
 10760 ;;		line 1522 in file "../Includes/Board/MOTEapp.c"
 10761 ;; Parameters:    Size  Location     Type
 10762 ;;  lightString     2   10[BANK0 ] PTR unsigned char 
 10763 ;;		 -> moduleResonseBuffer(64), 
 10764 ;; Auto vars:     Size  Location     Type
 10765 ;;  stingPos        1   12[BANK0 ] unsigned char 
 10766 ;; Return value:  Size  Location     Type
 10767 ;;		None               void
 10768 ;; Registers used:
 10769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10770 ;; Tracked objects:
 10771 ;;		On entry : 0/0
 10772 ;;		On exit  : 0/0
 10773 ;;		Unchanged: 0/0
 10774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10775 ;;      Params:         0       2       0       0       0       0       0       0       0
 10776 ;;      Locals:         0       1       0       0       0       0       0       0       0
 10777 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10778 ;;      Totals:         0       3       0       0       0       0       0       0       0
 10779 ;;Total ram usage:        3 bytes
 10780 ;; Hardware stack levels used:    1
 10781 ;; Hardware stack levels required when called:   12
 10782 ;; This function calls:
 10783 ;;		_memcpy
 10784 ;; This function is called by:
 10785 ;;		_moteApp_getLightValue
 10786 ;; This function uses a non-reentrant model
 10787 ;;
 10788                           
 10789                           	psect	text18
 10790  005B34                     __ptext18:
 10791                           	opt stack 0
 10792  005B34                     _moteApp_setLightString:
 10793                           	opt stack 15
 10794                           
 10795                           ;MOTEapp.c: 1524: memcpy(storedLight, clearLight, sizeof(storedLight));
 10796                           
 10797                           ; BSR set to: 0
 10798                           ;incstack = 0
 10799  005B34  0EEA               	movlw	low _storedLight
 10800  005B36  0100               	movlb	0	; () banked
 10801  005B38  6F60               	movwf	memcpy@d1& (0+255),b
 10802  005B3A  0E01               	movlw	high _storedLight
 10803  005B3C  0100               	movlb	0	; () banked
 10804  005B3E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10805  005B40  0EE5               	movlw	low _clearLight
 10806  005B42  0100               	movlb	0	; () banked
 10807  005B44  6F62               	movwf	memcpy@s1& (0+255),b
 10808  005B46  0E01               	movlw	high _clearLight
 10809  005B48  0100               	movlb	0	; () banked
 10810  005B4A  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 10811  005B4C  0E00               	movlw	0
 10812  005B4E  0100               	movlb	0	; () banked
 10813  005B50  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10814  005B52  0E05               	movlw	5
 10815  005B54  6F64               	movwf	memcpy@n& (0+255),b
 10816  005B56  ECC0  F031         	call	_memcpy	;wreg free
 10817                           
 10818                           ;MOTEapp.c: 1525: memcpy(storedLight, lightString, sizeof(storedLight));
 10819  005B5A  0EEA               	movlw	low _storedLight
 10820  005B5C  0100               	movlb	0	; () banked
 10821  005B5E  6F60               	movwf	memcpy@d1& (0+255),b
 10822  005B60  0E01               	movlw	high _storedLight
 10823  005B62  0100               	movlb	0	; () banked
 10824  005B64  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 10825  005B66  C06A  F062         	movff	moteApp_setLightString@lightString,memcpy@s1
 10826  005B6A  C06B  F063         	movff	moteApp_setLightString@lightString+1,memcpy@s1+1
 10827  005B6E  0E00               	movlw	0
 10828  005B70  0100               	movlb	0	; () banked
 10829  005B72  6F65               	movwf	(memcpy@n+1)& (0+255),b
 10830  005B74  0E05               	movlw	5
 10831  005B76  6F64               	movwf	memcpy@n& (0+255),b
 10832  005B78  ECC0  F031         	call	_memcpy	;wreg free
 10833                           
 10834                           ;MOTEapp.c: 1527: for (uint8_t stingPos = 0; stingPos < sizeof(storedLight); stingPos++)
 10835  005B7C  0E00               	movlw	0
 10836  005B7E  0100               	movlb	0	; () banked
 10837  005B80  6F6C               	movwf	moteApp_setLightString@stingPos& (0+255),b
 10838  005B82                     l12164:
 10839                           
 10840                           ; BSR set to: 0
 10841  005B82  0E04               	movlw	4
 10842  005B84  0100               	movlb	0	; () banked
 10843  005B86  656C               	cpfsgt	moteApp_setLightString@stingPos& (0+255),b
 10844  005B88  D001               	goto	l12168
 10845  005B8A  D010               	goto	l759
 10846  005B8C                     l12168:
 10847                           
 10848                           ; BSR set to: 0
 10849                           ;MOTEapp.c: 1528: {
 10850                           ;MOTEapp.c: 1529: if (storedLight[stingPos] == 0x00)
 10851  005B8C  0100               	movlb	0	; () banked
 10852  005B8E  516C               	movf	moteApp_setLightString@stingPos& (0+255),w,b
 10853  005B90  0D01               	mullw	1
 10854  005B92  0EEA               	movlw	low _storedLight
 10855  005B94  24F3               	addwf	prodl,w,c
 10856  005B96  6ED9               	movwf	fsr2l,c
 10857  005B98  0E01               	movlw	high _storedLight
 10858  005B9A  20F4               	addwfc	prodh,w,c
 10859  005B9C  6EDA               	movwf	fsr2h,c
 10860  005B9E  50DF               	movf	indf2,w,c
 10861  005BA0  B4D8               	btfsc	status,2,c
 10862                           
 10863                           ; BSR set to: 0
 10864                           ;MOTEapp.c: 1530: {
 10865                           ;MOTEapp.c: 1531: lightStringSize = stingPos;
 10866  005BA2  C06C  F0E3         	movff	moteApp_setLightString@stingPos,_lightStringSize
 10867                           
 10868                           ; BSR set to: 0
 10869                           
 10870                           ; BSR set to: 0
 10871  005BA6  0100               	movlb	0	; () banked
 10872  005BA8  2B6C               	incf	moteApp_setLightString@stingPos& (0+255),f,b
 10873  005BAA  D7EB               	goto	l12164
 10874  005BAC                     l759:
 10875                           
 10876                           ; BSR set to: 0
 10877                           ;MOTEapp.c: 1532: }
 10878                           ;MOTEapp.c: 1533: }
 10879                           ;MOTEapp.c: 1534: __nop();
 10880  005BAC  F000               	nop	
 10881  005BAE  0012               	return		;funcret
 10882  005BB0                     __end_of_moteApp_setLightString:
 10883                           	opt stack 0
 10884                           tblptru	equ	0xFF8
 10885                           tblptrh	equ	0xFF7
 10886                           tblptrl	equ	0xFF6
 10887                           tablat	equ	0xFF5
 10888                           prodh	equ	0xFF4
 10889                           prodl	equ	0xFF3
 10890                           intcon	equ	0xFF2
 10891                           postinc0	equ	0xFEE
 10892                           wreg	equ	0xFE8
 10893                           indf1	equ	0xFE7
 10894                           postdec1	equ	0xFE5
 10895                           fsr1h	equ	0xFE2
 10896                           fsr1l	equ	0xFE1
 10897                           indf2	equ	0xFDF
 10898                           fsr2h	equ	0xFDA
 10899                           fsr2l	equ	0xFD9
 10900                           status	equ	0xFD8
 10901                           
 10902 ;; *************** function _memcpy *****************
 10903 ;; Defined at:
 10904 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memcpy.c"
 10905 ;; Parameters:    Size  Location     Type
 10906 ;;  d1              2    0[BANK0 ] PTR void 
 10907 ;;		 -> storedLight(5), 
 10908 ;;  s1              2    2[BANK0 ] PTR const void 
 10909 ;;		 -> clearLight(5), moduleResonseBuffer(64), 
 10910 ;;  n               2    4[BANK0 ] unsigned int 
 10911 ;; Auto vars:     Size  Location     Type
 10912 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 10913 ;;		 -> clearLight(5), moduleResonseBuffer(64), 
 10914 ;;  d               2    6[BANK0 ] PTR unsigned char 
 10915 ;;		 -> storedLight(5), 
 10916 ;; Return value:  Size  Location     Type
 10917 ;;                  2    0[BANK0 ] PTR void 
 10918 ;; Registers used:
 10919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10920 ;; Tracked objects:
 10921 ;;		On entry : 0/0
 10922 ;;		On exit  : 0/0
 10923 ;;		Unchanged: 0/0
 10924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10925 ;;      Params:         0       6       0       0       0       0       0       0       0
 10926 ;;      Locals:         0       4       0       0       0       0       0       0       0
 10927 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10928 ;;      Totals:         0      10       0       0       0       0       0       0       0
 10929 ;;Total ram usage:       10 bytes
 10930 ;; Hardware stack levels used:    1
 10931 ;; Hardware stack levels required when called:   11
 10932 ;; This function calls:
 10933 ;;		Nothing
 10934 ;; This function is called by:
 10935 ;;		_moteApp_setLightString
 10936 ;; This function uses a non-reentrant model
 10937 ;;
 10938                           
 10939                           	psect	text19
 10940  006380                     __ptext19:
 10941                           	opt stack 0
 10942  006380                     _memcpy:
 10943                           	opt stack 15
 10944                           
 10945                           ;incstack = 0
 10946  006380  C062  F068         	movff	memcpy@s1,memcpy@s
 10947  006384  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 10948  006388  C060  F066         	movff	memcpy@d1,memcpy@d
 10949  00638C  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 10950  006390  D010               	goto	l11988
 10951  006392                     l11982:
 10952  006392  C068  FFD9         	movff	memcpy@s,fsr2l
 10953  006396  C069  FFDA         	movff	memcpy@s+1,fsr2h
 10954  00639A  C066  FFE1         	movff	memcpy@d,fsr1l
 10955  00639E  C067  FFE2         	movff	memcpy@d+1,fsr1h
 10956  0063A2  CFDF FFE7          	movff	indf2,indf1
 10957  0063A6  0100               	movlb	0	; () banked
 10958  0063A8  4B68               	infsnz	memcpy@s& (0+255),f,b
 10959  0063AA  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 10960                           
 10961                           ; BSR set to: 0
 10962  0063AC  0100               	movlb	0	; () banked
 10963  0063AE  4B66               	infsnz	memcpy@d& (0+255),f,b
 10964  0063B0  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 10965  0063B2                     l11988:
 10966  0063B2  0100               	movlb	0	; () banked
 10967  0063B4  0764               	decf	memcpy@n& (0+255),f,b
 10968  0063B6  A0D8               	btfss	status,0,c
 10969  0063B8  0765               	decf	(memcpy@n+1)& (0+255),f,b
 10970  0063BA  0100               	movlb	0	; () banked
 10971  0063BC  2964               	incf	memcpy@n& (0+255),w,b
 10972  0063BE  E1E9               	bnz	l11982
 10973  0063C0  0100               	movlb	0	; () banked
 10974  0063C2  2965               	incf	(memcpy@n+1)& (0+255),w,b
 10975  0063C4  B4D8               	btfsc	status,2,c
 10976  0063C6  0012               	return	
 10977  0063C8  D7E4               	goto	l11982
 10978  0063CA                     __end_of_memcpy:
 10979                           	opt stack 0
 10980                           tblptru	equ	0xFF8
 10981                           tblptrh	equ	0xFF7
 10982                           tblptrl	equ	0xFF6
 10983                           tablat	equ	0xFF5
 10984                           prodh	equ	0xFF4
 10985                           prodl	equ	0xFF3
 10986                           intcon	equ	0xFF2
 10987                           postinc0	equ	0xFEE
 10988                           wreg	equ	0xFE8
 10989                           indf1	equ	0xFE7
 10990                           postdec1	equ	0xFE5
 10991                           fsr1h	equ	0xFE2
 10992                           fsr1l	equ	0xFE1
 10993                           indf2	equ	0xFDF
 10994                           fsr2h	equ	0xFDA
 10995                           fsr2l	equ	0xFD9
 10996                           status	equ	0xFD8
 10997                           
 10998 ;; *************** function _moteApp_getLightString *****************
 10999 ;; Defined at:
 11000 ;;		line 1541 in file "../Includes/Board/MOTEapp.c"
 11001 ;; Parameters:    Size  Location     Type
 11002 ;;		None
 11003 ;; Auto vars:     Size  Location     Type
 11004 ;;		None
 11005 ;; Return value:  Size  Location     Type
 11006 ;;                  2    0[BANK0 ] PTR unsigned char 
 11007 ;; Registers used:
 11008 ;;		wreg, status,2, status,0
 11009 ;; Tracked objects:
 11010 ;;		On entry : 0/0
 11011 ;;		On exit  : 0/0
 11012 ;;		Unchanged: 0/0
 11013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11014 ;;      Params:         0       2       0       0       0       0       0       0       0
 11015 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11016 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11017 ;;      Totals:         0       2       0       0       0       0       0       0       0
 11018 ;;Total ram usage:        2 bytes
 11019 ;; Hardware stack levels used:    1
 11020 ;; Hardware stack levels required when called:   11
 11021 ;; This function calls:
 11022 ;;		Nothing
 11023 ;; This function is called by:
 11024 ;;		_moteRunningProcess
 11025 ;; This function uses a non-reentrant model
 11026 ;;
 11027                           
 11028                           	psect	text20
 11029  006ADA                     __ptext20:
 11030                           	opt stack 0
 11031  006ADA                     _moteApp_getLightString:
 11032                           	opt stack 17
 11033                           
 11034                           ;MOTEapp.c: 1543: return &storedLight;
 11035                           
 11036                           ; BSR set to: 0
 11037                           ;incstack = 0
 11038  006ADA  0EEA               	movlw	low _storedLight
 11039  006ADC  0100               	movlb	0	; () banked
 11040  006ADE  6F60               	movwf	?_moteApp_getLightString& (0+255),b
 11041  006AE0  0E01               	movlw	high _storedLight
 11042  006AE2  0100               	movlb	0	; () banked
 11043  006AE4  6F61               	movwf	(?_moteApp_getLightString+1)& (0+255),b
 11044  006AE6  0012               	return	
 11045  006AE8                     __end_of_moteApp_getLightString:
 11046                           	opt stack 0
 11047                           tblptru	equ	0xFF8
 11048                           tblptrh	equ	0xFF7
 11049                           tblptrl	equ	0xFF6
 11050                           tablat	equ	0xFF5
 11051                           prodh	equ	0xFF4
 11052                           prodl	equ	0xFF3
 11053                           intcon	equ	0xFF2
 11054                           postinc0	equ	0xFEE
 11055                           wreg	equ	0xFE8
 11056                           indf1	equ	0xFE7
 11057                           postdec1	equ	0xFE5
 11058                           fsr1h	equ	0xFE2
 11059                           fsr1l	equ	0xFE1
 11060                           indf2	equ	0xFDF
 11061                           fsr2h	equ	0xFDA
 11062                           fsr2l	equ	0xFD9
 11063                           status	equ	0xFD8
 11064                           
 11065 ;; *************** function _moteApp_convertSensorValue *****************
 11066 ;; Defined at:
 11067 ;;		line 1432 in file "../Includes/Board/MOTEapp.c"
 11068 ;; Parameters:    Size  Location     Type
 11069 ;;  string          2   17[BANK0 ] PTR const unsigned char 
 11070 ;;		 -> moduleResonseBuffer(64), 
 11071 ;; Auto vars:     Size  Location     Type
 11072 ;;  convertedVal    2   23[BANK0 ] unsigned int 
 11073 ;;  index           1   22[BANK0 ] unsigned char 
 11074 ;; Return value:  Size  Location     Type
 11075 ;;                  2   17[BANK0 ] unsigned int 
 11076 ;; Registers used:
 11077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11078 ;; Tracked objects:
 11079 ;;		On entry : 0/0
 11080 ;;		On exit  : 0/0
 11081 ;;		Unchanged: 0/0
 11082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11083 ;;      Params:         0       2       0       0       0       0       0       0       0
 11084 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11085 ;;      Temps:          0       3       0       0       0       0       0       0       0
 11086 ;;      Totals:         0       8       0       0       0       0       0       0       0
 11087 ;;Total ram usage:        8 bytes
 11088 ;; Hardware stack levels used:    1
 11089 ;; Hardware stack levels required when called:   12
 11090 ;; This function calls:
 11091 ;;		___wmul
 11092 ;; This function is called by:
 11093 ;;		_moteHandler
 11094 ;;		_moteRunningProcess
 11095 ;;		_moteApp_testSensors
 11096 ;; This function uses a non-reentrant model
 11097 ;;
 11098                           
 11099                           	psect	text21
 11100  0056C8                     __ptext21:
 11101                           	opt stack 0
 11102  0056C8                     _moteApp_convertSensorValue:
 11103                           	opt stack 16
 11104                           
 11105                           ;MOTEapp.c: 1434: uint8_t index;
 11106                           ;MOTEapp.c: 1435: uint16_t convertedValue = 0;
 11107                           
 11108                           ; BSR set to: 0
 11109                           ;incstack = 0
 11110  0056C8  0E00               	movlw	0
 11111  0056CA  0100               	movlb	0	; () banked
 11112  0056CC  6F78               	movwf	(moteApp_convertSensorValue@convertedValue+1)& (0+255),b
 11113  0056CE  0E00               	movlw	0
 11114  0056D0  6F77               	movwf	moteApp_convertSensorValue@convertedValue& (0+255),b
 11115                           
 11116                           ;MOTEapp.c: 1436: for(index = 0; index < 4; index++)
 11117  0056D2  0E00               	movlw	0
 11118  0056D4  0100               	movlb	0	; () banked
 11119  0056D6  6F76               	movwf	moteApp_convertSensorValue@index& (0+255),b
 11120  0056D8                     l12962:
 11121                           
 11122                           ; BSR set to: 0
 11123  0056D8  0E03               	movlw	3
 11124  0056DA  0100               	movlb	0	; () banked
 11125  0056DC  6576               	cpfsgt	moteApp_convertSensorValue@index& (0+255),b
 11126  0056DE  D001               	goto	l12966
 11127  0056E0  D03D               	goto	l717
 11128  0056E2                     l12966:
 11129                           
 11130                           ; BSR set to: 0
 11131                           ;MOTEapp.c: 1437: {
 11132                           ;MOTEapp.c: 1438: if (*string != 0)
 11133  0056E2  C071  FFD9         	movff	moteApp_convertSensorValue@string,fsr2l
 11134  0056E6  C072  FFDA         	movff	moteApp_convertSensorValue@string+1,fsr2h
 11135  0056EA  50DF               	movf	indf2,w,c
 11136  0056EC  B4D8               	btfsc	status,2,c
 11137  0056EE  D036               	goto	l717
 11138                           
 11139                           ; BSR set to: 0
 11140                           ;MOTEapp.c: 1439: {
 11141                           ;MOTEapp.c: 1440: if (index != 0)
 11142  0056F0  0100               	movlb	0	; () banked
 11143  0056F2  5176               	movf	moteApp_convertSensorValue@index& (0+255),w,b
 11144  0056F4  0100               	movlb	0	; () banked
 11145  0056F6  B4D8               	btfsc	status,2,c
 11146  0056F8  D00F               	goto	l12972
 11147                           
 11148                           ; BSR set to: 0
 11149                           ;MOTEapp.c: 1441: convertedValue = convertedValue * 10;
 11150  0056FA  C077  F060         	movff	moteApp_convertSensorValue@convertedValue,___wmul@multiplier
 11151  0056FE  C078  F061         	movff	moteApp_convertSensorValue@convertedValue+1,___wmul@multiplier+1
 11152  005702  0E00               	movlw	0
 11153  005704  0100               	movlb	0	; () banked
 11154  005706  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11155  005708  0E0A               	movlw	10
 11156  00570A  6F62               	movwf	___wmul@multiplicand& (0+255),b
 11157  00570C  EC38  F033         	call	___wmul	;wreg free
 11158  005710  C060  F077         	movff	?___wmul,moteApp_convertSensorValue@convertedValue
 11159  005714  C061  F078         	movff	?___wmul+1,moteApp_convertSensorValue@convertedValue+1
 11160  005718                     l12972:
 11161                           
 11162                           ;MOTEapp.c: 1443: convertedValue = (*string++ - '0') + convertedValue;
 11163  005718  C071  FFD9         	movff	moteApp_convertSensorValue@string,fsr2l
 11164  00571C  C072  FFDA         	movff	moteApp_convertSensorValue@string+1,fsr2h
 11165  005720  50DF               	movf	indf2,w,c
 11166  005722  0100               	movlb	0	; () banked
 11167  005724  6F73               	movwf	??_moteApp_convertSensorValue& (0+255),b
 11168  005726  0100               	movlb	0	; () banked
 11169  005728  5173               	movf	??_moteApp_convertSensorValue& (0+255),w,b
 11170  00572A  0100               	movlb	0	; () banked
 11171  00572C  2577               	addwf	moteApp_convertSensorValue@convertedValue& (0+255),w,b
 11172  00572E  0100               	movlb	0	; () banked
 11173  005730  6F74               	movwf	(??_moteApp_convertSensorValue+1)& (0+255),b
 11174  005732  0E00               	movlw	0
 11175  005734  0100               	movlb	0	; () banked
 11176  005736  2178               	addwfc	(moteApp_convertSensorValue@convertedValue+1)& (0+255),w,b
 11177  005738  0100               	movlb	0	; () banked
 11178  00573A  6F75               	movwf	(??_moteApp_convertSensorValue+2)& (0+255),b
 11179  00573C  0ED0               	movlw	208
 11180  00573E  0100               	movlb	0	; () banked
 11181  005740  2574               	addwf	(??_moteApp_convertSensorValue+1)& (0+255),w,b
 11182  005742  0100               	movlb	0	; () banked
 11183  005744  6F77               	movwf	moteApp_convertSensorValue@convertedValue& (0+255),b
 11184  005746  0EFF               	movlw	255
 11185  005748  0100               	movlb	0	; () banked
 11186  00574A  2175               	addwfc	(??_moteApp_convertSensorValue+2)& (0+255),w,b
 11187  00574C  0100               	movlb	0	; () banked
 11188  00574E  6F78               	movwf	(moteApp_convertSensorValue@convertedValue+1)& (0+255),b
 11189                           
 11190                           ; BSR set to: 0
 11191  005750  0100               	movlb	0	; () banked
 11192  005752  4B71               	infsnz	moteApp_convertSensorValue@string& (0+255),f,b
 11193  005754  2B72               	incf	(moteApp_convertSensorValue@string+1)& (0+255),f,b
 11194                           
 11195                           ; BSR set to: 0
 11196                           
 11197                           ; BSR set to: 0
 11198                           
 11199                           ; BSR set to: 0
 11200                           ;MOTEapp.c: 1445: else
 11201                           ;MOTEapp.c: 1446: {
 11202                           ;MOTEapp.c: 1447: break;
 11203                           
 11204                           ;MOTEapp.c: 1444: }
 11205  005756  0100               	movlb	0	; () banked
 11206  005758  2B76               	incf	moteApp_convertSensorValue@index& (0+255),f,b
 11207  00575A  D7BE               	goto	l12962
 11208  00575C                     l717:
 11209                           
 11210                           ; BSR set to: 0
 11211                           ;MOTEapp.c: 1448: }
 11212                           ;MOTEapp.c: 1449: }
 11213                           ;MOTEapp.c: 1450: return convertedValue;
 11214  00575C  C077  F071         	movff	moteApp_convertSensorValue@convertedValue,?_moteApp_convertSensorValue
 11215  005760  C078  F072         	movff	moteApp_convertSensorValue@convertedValue+1,?_moteApp_convertSensorValue+1
 11216                           
 11217                           ; BSR set to: 0
 11218  005764  0012               	return		;funcret
 11219  005766                     __end_of_moteApp_convertSensorValue:
 11220                           	opt stack 0
 11221                           tblptru	equ	0xFF8
 11222                           tblptrh	equ	0xFF7
 11223                           tblptrl	equ	0xFF6
 11224                           tablat	equ	0xFF5
 11225                           prodh	equ	0xFF4
 11226                           prodl	equ	0xFF3
 11227                           intcon	equ	0xFF2
 11228                           postinc0	equ	0xFEE
 11229                           wreg	equ	0xFE8
 11230                           indf1	equ	0xFE7
 11231                           postdec1	equ	0xFE5
 11232                           fsr1h	equ	0xFE2
 11233                           fsr1l	equ	0xFE1
 11234                           indf2	equ	0xFDF
 11235                           fsr2h	equ	0xFDA
 11236                           fsr2l	equ	0xFD9
 11237                           status	equ	0xFD8
 11238                           
 11239 ;; *************** function ___wmul *****************
 11240 ;; Defined at:
 11241 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 11242 ;; Parameters:    Size  Location     Type
 11243 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11244 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11245 ;; Auto vars:     Size  Location     Type
 11246 ;;  product         2    4[BANK0 ] unsigned int 
 11247 ;; Return value:  Size  Location     Type
 11248 ;;                  2    0[BANK0 ] unsigned int 
 11249 ;; Registers used:
 11250 ;;		wreg, status,2, status,0, prodl, prodh
 11251 ;; Tracked objects:
 11252 ;;		On entry : 0/0
 11253 ;;		On exit  : 0/0
 11254 ;;		Unchanged: 0/0
 11255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11256 ;;      Params:         0       4       0       0       0       0       0       0       0
 11257 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11258 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11259 ;;      Totals:         0       6       0       0       0       0       0       0       0
 11260 ;;Total ram usage:        6 bytes
 11261 ;; Hardware stack levels used:    1
 11262 ;; Hardware stack levels required when called:   11
 11263 ;; This function calls:
 11264 ;;		Nothing
 11265 ;; This function is called by:
 11266 ;;		_moteApp_convertSensorValue
 11267 ;; This function uses a non-reentrant model
 11268 ;;
 11269                           
 11270                           	psect	text22
 11271  006670                     __ptext22:
 11272                           	opt stack 0
 11273  006670                     ___wmul:
 11274                           	opt stack 16
 11275                           
 11276                           ; BSR set to: 0
 11277                           ;incstack = 0
 11278  006670  0100               	movlb	0	; () banked
 11279  006672  5160               	movf	___wmul@multiplier& (0+255),w,b
 11280  006674  0100               	movlb	0	; () banked
 11281  006676  0362               	mulwf	___wmul@multiplicand& (0+255),b
 11282  006678  CFF3 F064          	movff	prodl,___wmul@product
 11283  00667C  CFF4 F065          	movff	prodh,___wmul@product+1
 11284  006680  0100               	movlb	0	; () banked
 11285  006682  5160               	movf	___wmul@multiplier& (0+255),w,b
 11286  006684  0100               	movlb	0	; () banked
 11287  006686  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11288  006688  50F3               	movf	prodl,w,c
 11289  00668A  0100               	movlb	0	; () banked
 11290  00668C  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 11291  00668E  0100               	movlb	0	; () banked
 11292  006690  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11293  006692  0100               	movlb	0	; () banked
 11294  006694  0362               	mulwf	___wmul@multiplicand& (0+255),b
 11295  006696  50F3               	movf	prodl,w,c
 11296  006698  0100               	movlb	0	; () banked
 11297  00669A  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 11298                           
 11299                           ; BSR set to: 0
 11300  00669C  C064  F060         	movff	___wmul@product,?___wmul
 11301  0066A0  C065  F061         	movff	___wmul@product+1,?___wmul+1
 11302  0066A4  0012               	return	
 11303  0066A6                     __end_of___wmul:
 11304                           	opt stack 0
 11305                           tblptru	equ	0xFF8
 11306                           tblptrh	equ	0xFF7
 11307                           tblptrl	equ	0xFF6
 11308                           tablat	equ	0xFF5
 11309                           prodh	equ	0xFF4
 11310                           prodl	equ	0xFF3
 11311                           intcon	equ	0xFF2
 11312                           postinc0	equ	0xFEE
 11313                           wreg	equ	0xFE8
 11314                           indf1	equ	0xFE7
 11315                           postdec1	equ	0xFE5
 11316                           fsr1h	equ	0xFE2
 11317                           fsr1l	equ	0xFE1
 11318                           indf2	equ	0xFDF
 11319                           fsr2h	equ	0xFDA
 11320                           fsr2l	equ	0xFD9
 11321                           status	equ	0xFD8
 11322                           
 11323 ;; *************** function _moteApp_clearBuffers *****************
 11324 ;; Defined at:
 11325 ;;		line 1372 in file "../Includes/Board/MOTEapp.c"
 11326 ;; Parameters:    Size  Location     Type
 11327 ;;		None
 11328 ;; Auto vars:     Size  Location     Type
 11329 ;;  counter         1    3[BANK0 ] unsigned char 
 11330 ;;  counter         1    2[BANK0 ] unsigned char 
 11331 ;;  counter         1    1[BANK0 ] unsigned char 
 11332 ;;  counter         1    0[BANK0 ] unsigned char 
 11333 ;; Return value:  Size  Location     Type
 11334 ;;		None               void
 11335 ;; Registers used:
 11336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11337 ;; Tracked objects:
 11338 ;;		On entry : 0/0
 11339 ;;		On exit  : 0/0
 11340 ;;		Unchanged: 0/0
 11341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11342 ;;      Params:         0       0       0       0       0       0       0       0       0
 11343 ;;      Locals:         0       4       0       0       0       0       0       0       0
 11344 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11345 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11346 ;;Total ram usage:        4 bytes
 11347 ;; Hardware stack levels used:    1
 11348 ;; Hardware stack levels required when called:   11
 11349 ;; This function calls:
 11350 ;;		Nothing
 11351 ;; This function is called by:
 11352 ;;		_moteRunningProcess
 11353 ;; This function uses a non-reentrant model
 11354 ;;
 11355                           
 11356                           	psect	text23
 11357  00517E                     __ptext23:
 11358                           	opt stack 0
 11359  00517E                     _moteApp_clearBuffers:
 11360                           	opt stack 17
 11361                           
 11362                           ;MOTEapp.c: 1374: for (uint8_t counter = 0; counter < 3; counter++)
 11363                           
 11364                           ; BSR set to: 0
 11365                           ;incstack = 0
 11366  00517E  0E00               	movlw	0
 11367  005180  0100               	movlb	0	; () banked
 11368  005182  6F60               	movwf	moteApp_clearBuffers@counter& (0+255),b
 11369  005184                     l13036:
 11370                           
 11371                           ; BSR set to: 0
 11372  005184  0E02               	movlw	2
 11373  005186  0100               	movlb	0	; () banked
 11374  005188  6560               	cpfsgt	moteApp_clearBuffers@counter& (0+255),b
 11375  00518A  D001               	goto	l13040
 11376  00518C  D00E               	goto	l13046
 11377  00518E                     l13040:
 11378                           
 11379                           ; BSR set to: 0
 11380                           ;MOTEapp.c: 1375: {
 11381                           ;MOTEapp.c: 1376: responsePortNum[counter] = 0;
 11382  00518E  0100               	movlb	0	; () banked
 11383  005190  5160               	movf	moteApp_clearBuffers@counter& (0+255),w,b
 11384  005192  0D01               	mullw	1
 11385  005194  0EEF               	movlw	low _responsePortNum
 11386  005196  24F3               	addwf	prodl,w,c
 11387  005198  6ED9               	movwf	fsr2l,c
 11388  00519A  0E01               	movlw	high _responsePortNum
 11389  00519C  20F4               	addwfc	prodh,w,c
 11390  00519E  6EDA               	movwf	fsr2h,c
 11391  0051A0  0E00               	movlw	0
 11392  0051A2  6EDF               	movwf	indf2,c
 11393                           
 11394                           ; BSR set to: 0
 11395  0051A4  0100               	movlb	0	; () banked
 11396  0051A6  2B60               	incf	moteApp_clearBuffers@counter& (0+255),f,b
 11397  0051A8  D7ED               	goto	l13036
 11398  0051AA                     l13046:
 11399                           
 11400                           ; BSR set to: 0
 11401                           ;MOTEapp.c: 1377: }
 11402                           ;MOTEapp.c: 1378: for (uint8_t counter = 0; counter < 34; counter++)
 11403  0051AA  0E00               	movlw	0
 11404  0051AC  0100               	movlb	0	; () banked
 11405  0051AE  6F61               	movwf	moteApp_clearBuffers@counter_1955& (0+255),b
 11406  0051B0                     l13048:
 11407                           
 11408                           ; BSR set to: 0
 11409  0051B0  0E21               	movlw	33
 11410  0051B2  0100               	movlb	0	; () banked
 11411  0051B4  6561               	cpfsgt	moteApp_clearBuffers@counter_1955& (0+255),b
 11412  0051B6  D001               	goto	l13052
 11413  0051B8  D00E               	goto	l13058
 11414  0051BA                     l13052:
 11415                           
 11416                           ; BSR set to: 0
 11417                           ;MOTEapp.c: 1379: {
 11418                           ;MOTEapp.c: 1380: responseId[counter] = 0;
 11419  0051BA  0100               	movlb	0	; () banked
 11420  0051BC  5161               	movf	moteApp_clearBuffers@counter_1955& (0+255),w,b
 11421  0051BE  0D01               	mullw	1
 11422  0051C0  0E30               	movlw	low _responseId
 11423  0051C2  24F3               	addwf	prodl,w,c
 11424  0051C4  6ED9               	movwf	fsr2l,c
 11425  0051C6  0E01               	movlw	high _responseId
 11426  0051C8  20F4               	addwfc	prodh,w,c
 11427  0051CA  6EDA               	movwf	fsr2h,c
 11428  0051CC  0E00               	movlw	0
 11429  0051CE  6EDF               	movwf	indf2,c
 11430                           
 11431                           ; BSR set to: 0
 11432  0051D0  0100               	movlb	0	; () banked
 11433  0051D2  2B61               	incf	moteApp_clearBuffers@counter_1955& (0+255),f,b
 11434  0051D4  D7ED               	goto	l13048
 11435  0051D6                     l13058:
 11436                           
 11437                           ; BSR set to: 0
 11438                           ;MOTEapp.c: 1381: }
 11439                           ;MOTEapp.c: 1382: for (uint8_t counter = 0; counter < 32; counter++)
 11440  0051D6  0E00               	movlw	0
 11441  0051D8  0100               	movlb	0	; () banked
 11442  0051DA  6F62               	movwf	moteApp_clearBuffers@counter_1956& (0+255),b
 11443  0051DC                     l13060:
 11444                           
 11445                           ; BSR set to: 0
 11446  0051DC  0E1F               	movlw	31
 11447  0051DE  0100               	movlb	0	; () banked
 11448  0051E0  6562               	cpfsgt	moteApp_clearBuffers@counter_1956& (0+255),b
 11449  0051E2  D001               	goto	l13064
 11450  0051E4  D00E               	goto	l13070
 11451  0051E6                     l13064:
 11452                           
 11453                           ; BSR set to: 0
 11454                           ;MOTEapp.c: 1383: {
 11455                           ;MOTEapp.c: 1384: responseData[counter] = 0;
 11456  0051E6  0100               	movlb	0	; () banked
 11457  0051E8  5162               	movf	moteApp_clearBuffers@counter_1956& (0+255),w,b
 11458  0051EA  0D01               	mullw	1
 11459  0051EC  0E9C               	movlw	low _responseData
 11460  0051EE  24F3               	addwf	prodl,w,c
 11461  0051F0  6ED9               	movwf	fsr2l,c
 11462  0051F2  0E01               	movlw	high _responseData
 11463  0051F4  20F4               	addwfc	prodh,w,c
 11464  0051F6  6EDA               	movwf	fsr2h,c
 11465  0051F8  0E00               	movlw	0
 11466  0051FA  6EDF               	movwf	indf2,c
 11467                           
 11468                           ; BSR set to: 0
 11469  0051FC  0100               	movlb	0	; () banked
 11470  0051FE  2B62               	incf	moteApp_clearBuffers@counter_1956& (0+255),f,b
 11471  005200  D7ED               	goto	l13060
 11472  005202                     l13070:
 11473                           
 11474                           ; BSR set to: 0
 11475                           ;MOTEapp.c: 1385: }
 11476                           ;MOTEapp.c: 1386: for (uint8_t counter = 0; counter < sizeof(dataBuffer); counter++)
 11477  005202  0E00               	movlw	0
 11478  005204  0100               	movlb	0	; () banked
 11479  005206  6F63               	movwf	moteApp_clearBuffers@counter_1957& (0+255),b
 11480  005208                     l13072:
 11481                           
 11482                           ; BSR set to: 0
 11483  005208  0E0F               	movlw	15
 11484  00520A  0100               	movlb	0	; () banked
 11485  00520C  6563               	cpfsgt	moteApp_clearBuffers@counter_1957& (0+255),b
 11486  00520E  D001               	goto	l13076
 11487  005210  0012               	return	
 11488  005212                     l13076:
 11489                           
 11490                           ; BSR set to: 0
 11491                           ;MOTEapp.c: 1387: {
 11492                           ;MOTEapp.c: 1388: dataBuffer[counter] = 0;
 11493  005212  0100               	movlb	0	; () banked
 11494  005214  5163               	movf	moteApp_clearBuffers@counter_1957& (0+255),w,b
 11495  005216  0D01               	mullw	1
 11496  005218  0EBC               	movlw	low _dataBuffer
 11497  00521A  24F3               	addwf	prodl,w,c
 11498  00521C  6ED9               	movwf	fsr2l,c
 11499  00521E  0E01               	movlw	high _dataBuffer
 11500  005220  20F4               	addwfc	prodh,w,c
 11501  005222  6EDA               	movwf	fsr2h,c
 11502  005224  0E00               	movlw	0
 11503  005226  6EDF               	movwf	indf2,c
 11504                           
 11505                           ; BSR set to: 0
 11506  005228  0100               	movlb	0	; () banked
 11507  00522A  2B63               	incf	moteApp_clearBuffers@counter_1957& (0+255),f,b
 11508  00522C  D7ED               	goto	l13072
 11509  00522E                     __end_of_moteApp_clearBuffers:
 11510                           	opt stack 0
 11511                           tblptru	equ	0xFF8
 11512                           tblptrh	equ	0xFF7
 11513                           tblptrl	equ	0xFF6
 11514                           tablat	equ	0xFF5
 11515                           prodh	equ	0xFF4
 11516                           prodl	equ	0xFF3
 11517                           intcon	equ	0xFF2
 11518                           postinc0	equ	0xFEE
 11519                           wreg	equ	0xFE8
 11520                           indf1	equ	0xFE7
 11521                           postdec1	equ	0xFE5
 11522                           fsr1h	equ	0xFE2
 11523                           fsr1l	equ	0xFE1
 11524                           indf2	equ	0xFDF
 11525                           fsr2h	equ	0xFDA
 11526                           fsr2l	equ	0xFD9
 11527                           status	equ	0xFD8
 11528                           
 11529 ;; *************** function _moteApp_add8bToDataBuffer *****************
 11530 ;; Defined at:
 11531 ;;		line 1392 in file "../Includes/Board/MOTEapp.c"
 11532 ;; Parameters:    Size  Location     Type
 11533 ;;  number          1    wreg     unsigned char 
 11534 ;;  bufferLocati    1    6[BANK0 ] unsigned char 
 11535 ;; Auto vars:     Size  Location     Type
 11536 ;;  number          1    9[BANK0 ] unsigned char 
 11537 ;; Return value:  Size  Location     Type
 11538 ;;		None               void
 11539 ;; Registers used:
 11540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11541 ;; Tracked objects:
 11542 ;;		On entry : 0/0
 11543 ;;		On exit  : 0/0
 11544 ;;		Unchanged: 0/0
 11545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11546 ;;      Params:         0       1       0       0       0       0       0       0       0
 11547 ;;      Locals:         0       1       0       0       0       0       0       0       0
 11548 ;;      Temps:          0       2       0       0       0       0       0       0       0
 11549 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11550 ;;Total ram usage:        4 bytes
 11551 ;; Hardware stack levels used:    1
 11552 ;; Hardware stack levels required when called:   12
 11553 ;; This function calls:
 11554 ;;		___awmod
 11555 ;;		___lbdiv
 11556 ;; This function is called by:
 11557 ;;		_moteRunningProcess
 11558 ;; This function uses a non-reentrant model
 11559 ;;
 11560                           
 11561                           	psect	text24
 11562  00494C                     __ptext24:
 11563                           	opt stack 0
 11564  00494C                     _moteApp_add8bToDataBuffer:
 11565                           	opt stack 16
 11566                           
 11567                           ; BSR set to: 0
 11568                           ;incstack = 0
 11569                           ;moteApp_add8bToDataBuffer@number stored from wreg
 11570  00494C  0100               	movlb	0	; () banked
 11571  00494E  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11572                           
 11573                           ;MOTEapp.c: 1394: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
 11574  004950  0100               	movlb	0	; () banked
 11575  004952  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11576  004954  0100               	movlb	0	; () banked
 11577  004956  6F67               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
 11578  004958  6B68               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
 11579  00495A  0E02               	movlw	2
 11580  00495C  0100               	movlb	0	; () banked
 11581  00495E  2767               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
 11582  004960  0E00               	movlw	0
 11583  004962  2368               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
 11584  004964  0EBC               	movlw	low _dataBuffer
 11585  004966  0100               	movlb	0	; () banked
 11586  004968  2567               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
 11587  00496A  6ED9               	movwf	fsr2l,c
 11588  00496C  0E01               	movlw	high _dataBuffer
 11589  00496E  0100               	movlb	0	; () banked
 11590  004970  2168               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
 11591  004972  6EDA               	movwf	fsr2h,c
 11592  004974  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11593  004978  0100               	movlb	0	; () banked
 11594  00497A  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11595  00497C  0E00               	movlw	0
 11596  00497E  0100               	movlb	0	; () banked
 11597  004980  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11598  004982  0E0A               	movlw	10
 11599  004984  6F62               	movwf	___awmod@divisor& (0+255),b
 11600  004986  ECC2  F02A         	call	___awmod	;wreg free
 11601  00498A  0100               	movlb	0	; () banked
 11602  00498C  5160               	movf	?___awmod& (0+255),w,b
 11603  00498E  0F30               	addlw	48
 11604  004990  6EDF               	movwf	indf2,c
 11605                           
 11606                           ; BSR set to: 0
 11607                           ;MOTEapp.c: 1395: number /= 10;
 11608  004992  0E0A               	movlw	10
 11609  004994  0100               	movlb	0	; () banked
 11610  004996  6F60               	movwf	___lbdiv@divisor& (0+255),b
 11611  004998  0100               	movlb	0	; () banked
 11612  00499A  5169               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
 11613  00499C  EC39  F030         	call	___lbdiv
 11614  0049A0  0100               	movlb	0	; () banked
 11615  0049A2  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11616                           
 11617                           ; BSR set to: 0
 11618                           ;MOTEapp.c: 1396: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
 11619  0049A4  0100               	movlb	0	; () banked
 11620  0049A6  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11621  0049A8  0100               	movlb	0	; () banked
 11622  0049AA  6F67               	movwf	??_moteApp_add8bToDataBuffer& (0+255),b
 11623  0049AC  6B68               	clrf	(??_moteApp_add8bToDataBuffer+1)& (0+255),b
 11624  0049AE  0E01               	movlw	1
 11625  0049B0  0100               	movlb	0	; () banked
 11626  0049B2  2767               	addwf	??_moteApp_add8bToDataBuffer& (0+255),f,b
 11627  0049B4  0E00               	movlw	0
 11628  0049B6  2368               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),f,b
 11629  0049B8  0EBC               	movlw	low _dataBuffer
 11630  0049BA  0100               	movlb	0	; () banked
 11631  0049BC  2567               	addwf	??_moteApp_add8bToDataBuffer& (0+255),w,b
 11632  0049BE  6ED9               	movwf	fsr2l,c
 11633  0049C0  0E01               	movlw	high _dataBuffer
 11634  0049C2  0100               	movlb	0	; () banked
 11635  0049C4  2168               	addwfc	(??_moteApp_add8bToDataBuffer+1)& (0+255),w,b
 11636  0049C6  6EDA               	movwf	fsr2h,c
 11637  0049C8  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11638  0049CC  0100               	movlb	0	; () banked
 11639  0049CE  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11640  0049D0  0E00               	movlw	0
 11641  0049D2  0100               	movlb	0	; () banked
 11642  0049D4  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11643  0049D6  0E0A               	movlw	10
 11644  0049D8  6F62               	movwf	___awmod@divisor& (0+255),b
 11645  0049DA  ECC2  F02A         	call	___awmod	;wreg free
 11646  0049DE  0100               	movlb	0	; () banked
 11647  0049E0  5160               	movf	?___awmod& (0+255),w,b
 11648  0049E2  0F30               	addlw	48
 11649  0049E4  6EDF               	movwf	indf2,c
 11650                           
 11651                           ;MOTEapp.c: 1397: number /= 10;
 11652  0049E6  0E0A               	movlw	10
 11653  0049E8  0100               	movlb	0	; () banked
 11654  0049EA  6F60               	movwf	___lbdiv@divisor& (0+255),b
 11655  0049EC  0100               	movlb	0	; () banked
 11656  0049EE  5169               	movf	moteApp_add8bToDataBuffer@number& (0+255),w,b
 11657  0049F0  EC39  F030         	call	___lbdiv
 11658  0049F4  0100               	movlb	0	; () banked
 11659  0049F6  6F69               	movwf	moteApp_add8bToDataBuffer@number& (0+255),b
 11660                           
 11661                           ; BSR set to: 0
 11662                           ;MOTEapp.c: 1398: dataBuffer[bufferLocation] = '0' + (number % 10);
 11663  0049F8  0100               	movlb	0	; () banked
 11664  0049FA  5166               	movf	moteApp_add8bToDataBuffer@bufferLocation& (0+255),w,b
 11665  0049FC  0D01               	mullw	1
 11666  0049FE  0EBC               	movlw	low _dataBuffer
 11667  004A00  24F3               	addwf	prodl,w,c
 11668  004A02  6ED9               	movwf	fsr2l,c
 11669  004A04  0E01               	movlw	high _dataBuffer
 11670  004A06  20F4               	addwfc	prodh,w,c
 11671  004A08  6EDA               	movwf	fsr2h,c
 11672  004A0A  C069  F060         	movff	moteApp_add8bToDataBuffer@number,___awmod@dividend
 11673  004A0E  0100               	movlb	0	; () banked
 11674  004A10  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 11675  004A12  0E00               	movlw	0
 11676  004A14  0100               	movlb	0	; () banked
 11677  004A16  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 11678  004A18  0E0A               	movlw	10
 11679  004A1A  6F62               	movwf	___awmod@divisor& (0+255),b
 11680  004A1C  ECC2  F02A         	call	___awmod	;wreg free
 11681  004A20  0100               	movlb	0	; () banked
 11682  004A22  5160               	movf	?___awmod& (0+255),w,b
 11683  004A24  0F30               	addlw	48
 11684  004A26  6EDF               	movwf	indf2,c
 11685                           
 11686                           ; BSR set to: 0
 11687  004A28  0012               	return		;funcret
 11688  004A2A                     __end_of_moteApp_add8bToDataBuffer:
 11689                           	opt stack 0
 11690                           tblptru	equ	0xFF8
 11691                           tblptrh	equ	0xFF7
 11692                           tblptrl	equ	0xFF6
 11693                           tablat	equ	0xFF5
 11694                           prodh	equ	0xFF4
 11695                           prodl	equ	0xFF3
 11696                           intcon	equ	0xFF2
 11697                           postinc0	equ	0xFEE
 11698                           wreg	equ	0xFE8
 11699                           indf1	equ	0xFE7
 11700                           postdec1	equ	0xFE5
 11701                           fsr1h	equ	0xFE2
 11702                           fsr1l	equ	0xFE1
 11703                           indf2	equ	0xFDF
 11704                           fsr2h	equ	0xFDA
 11705                           fsr2l	equ	0xFD9
 11706                           status	equ	0xFD8
 11707                           
 11708 ;; *************** function ___lbdiv *****************
 11709 ;; Defined at:
 11710 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lbdiv.c"
 11711 ;; Parameters:    Size  Location     Type
 11712 ;;  dividend        1    wreg     unsigned char 
 11713 ;;  divisor         1    0[BANK0 ] unsigned char 
 11714 ;; Auto vars:     Size  Location     Type
 11715 ;;  dividend        1    1[BANK0 ] unsigned char 
 11716 ;;  quotient        1    3[BANK0 ] unsigned char 
 11717 ;;  counter         1    2[BANK0 ] unsigned char 
 11718 ;; Return value:  Size  Location     Type
 11719 ;;                  1    wreg      unsigned char 
 11720 ;; Registers used:
 11721 ;;		wreg, status,2, status,0
 11722 ;; Tracked objects:
 11723 ;;		On entry : 0/0
 11724 ;;		On exit  : 0/0
 11725 ;;		Unchanged: 0/0
 11726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11727 ;;      Params:         0       1       0       0       0       0       0       0       0
 11728 ;;      Locals:         0       3       0       0       0       0       0       0       0
 11729 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11730 ;;      Totals:         0       4       0       0       0       0       0       0       0
 11731 ;;Total ram usage:        4 bytes
 11732 ;; Hardware stack levels used:    1
 11733 ;; Hardware stack levels required when called:   11
 11734 ;; This function calls:
 11735 ;;		Nothing
 11736 ;; This function is called by:
 11737 ;;		_moteApp_add8bToDataBuffer
 11738 ;;		_oled_putUint8
 11739 ;;		_oled_putint8
 11740 ;; This function uses a non-reentrant model
 11741 ;;
 11742                           
 11743                           	psect	text25
 11744  006072                     __ptext25:
 11745                           	opt stack 0
 11746  006072                     ___lbdiv:
 11747                           	opt stack 16
 11748                           
 11749                           ; BSR set to: 0
 11750                           ;incstack = 0
 11751                           ;___lbdiv@dividend stored from wreg
 11752  006072  0100               	movlb	0	; () banked
 11753  006074  6F61               	movwf	___lbdiv@dividend& (0+255),b
 11754  006076  0E00               	movlw	0
 11755  006078  0100               	movlb	0	; () banked
 11756  00607A  6F63               	movwf	___lbdiv@quotient& (0+255),b
 11757                           
 11758                           ; BSR set to: 0
 11759  00607C  0100               	movlb	0	; () banked
 11760  00607E  5160               	movf	___lbdiv@divisor& (0+255),w,b
 11761  006080  0100               	movlb	0	; () banked
 11762  006082  B4D8               	btfsc	status,2,c
 11763  006084  D021               	goto	l12782
 11764                           
 11765                           ; BSR set to: 0
 11766  006086  0E01               	movlw	1
 11767  006088  0100               	movlb	0	; () banked
 11768  00608A  6F62               	movwf	___lbdiv@counter& (0+255),b
 11769  00608C  D005               	goto	l12770
 11770  00608E                     l12766:
 11771                           
 11772                           ; BSR set to: 0
 11773  00608E  0100               	movlb	0	; () banked
 11774  006090  90D8               	bcf	status,0,c
 11775  006092  3760               	rlcf	___lbdiv@divisor& (0+255),f,b
 11776                           
 11777                           ; BSR set to: 0
 11778  006094  0100               	movlb	0	; () banked
 11779  006096  2B62               	incf	___lbdiv@counter& (0+255),f,b
 11780  006098                     l12770:
 11781                           
 11782                           ; BSR set to: 0
 11783  006098  0100               	movlb	0	; () banked
 11784  00609A  AF60               	btfss	___lbdiv@divisor& (0+255),7,b
 11785  00609C  D7F8               	goto	l12766
 11786  00609E                     l12772:
 11787                           
 11788                           ; BSR set to: 0
 11789  00609E  0100               	movlb	0	; () banked
 11790  0060A0  90D8               	bcf	status,0,c
 11791  0060A2  3763               	rlcf	___lbdiv@quotient& (0+255),f,b
 11792  0060A4  0100               	movlb	0	; () banked
 11793  0060A6  5160               	movf	___lbdiv@divisor& (0+255),w,b
 11794  0060A8  0100               	movlb	0	; () banked
 11795  0060AA  5D61               	subwf	___lbdiv@dividend& (0+255),w,b
 11796  0060AC  A0D8               	btfss	status,0,c
 11797  0060AE  D006               	goto	l12778
 11798                           
 11799                           ; BSR set to: 0
 11800  0060B0  0100               	movlb	0	; () banked
 11801  0060B2  5160               	movf	___lbdiv@divisor& (0+255),w,b
 11802  0060B4  0100               	movlb	0	; () banked
 11803  0060B6  5F61               	subwf	___lbdiv@dividend& (0+255),f,b
 11804                           
 11805                           ; BSR set to: 0
 11806  0060B8  0100               	movlb	0	; () banked
 11807  0060BA  8163               	bsf	___lbdiv@quotient& (0+255),0,b
 11808  0060BC                     l12778:
 11809                           
 11810                           ; BSR set to: 0
 11811  0060BC  0100               	movlb	0	; () banked
 11812  0060BE  90D8               	bcf	status,0,c
 11813  0060C0  3360               	rrcf	___lbdiv@divisor& (0+255),f,b
 11814                           
 11815                           ; BSR set to: 0
 11816  0060C2  0100               	movlb	0	; () banked
 11817  0060C4  2F62               	decfsz	___lbdiv@counter& (0+255),f,b
 11818  0060C6  D7EB               	goto	l12772
 11819  0060C8                     l12782:
 11820                           
 11821                           ; BSR set to: 0
 11822  0060C8  0100               	movlb	0	; () banked
 11823  0060CA  5163               	movf	___lbdiv@quotient& (0+255),w,b
 11824  0060CC  0012               	return	
 11825  0060CE                     __end_of___lbdiv:
 11826                           	opt stack 0
 11827                           tblptru	equ	0xFF8
 11828                           tblptrh	equ	0xFF7
 11829                           tblptrl	equ	0xFF6
 11830                           tablat	equ	0xFF5
 11831                           prodh	equ	0xFF4
 11832                           prodl	equ	0xFF3
 11833                           intcon	equ	0xFF2
 11834                           postinc0	equ	0xFEE
 11835                           wreg	equ	0xFE8
 11836                           indf1	equ	0xFE7
 11837                           postdec1	equ	0xFE5
 11838                           fsr1h	equ	0xFE2
 11839                           fsr1l	equ	0xFE1
 11840                           indf2	equ	0xFDF
 11841                           fsr2h	equ	0xFDA
 11842                           fsr2l	equ	0xFD9
 11843                           status	equ	0xFD8
 11844                           
 11845 ;; *************** function ___awmod *****************
 11846 ;; Defined at:
 11847 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
 11848 ;; Parameters:    Size  Location     Type
 11849 ;;  dividend        2    0[BANK0 ] int 
 11850 ;;  divisor         2    2[BANK0 ] int 
 11851 ;; Auto vars:     Size  Location     Type
 11852 ;;  sign            1    5[BANK0 ] unsigned char 
 11853 ;;  counter         1    4[BANK0 ] unsigned char 
 11854 ;; Return value:  Size  Location     Type
 11855 ;;                  2    0[BANK0 ] int 
 11856 ;; Registers used:
 11857 ;;		wreg, status,2, status,0
 11858 ;; Tracked objects:
 11859 ;;		On entry : 0/0
 11860 ;;		On exit  : 0/0
 11861 ;;		Unchanged: 0/0
 11862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11863 ;;      Params:         0       4       0       0       0       0       0       0       0
 11864 ;;      Locals:         0       2       0       0       0       0       0       0       0
 11865 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11866 ;;      Totals:         0       6       0       0       0       0       0       0       0
 11867 ;;Total ram usage:        6 bytes
 11868 ;; Hardware stack levels used:    1
 11869 ;; Hardware stack levels required when called:   11
 11870 ;; This function calls:
 11871 ;;		Nothing
 11872 ;; This function is called by:
 11873 ;;		_moteApp_add8bToDataBuffer
 11874 ;;		_oled_putUint8
 11875 ;;		_oled_putint8
 11876 ;; This function uses a non-reentrant model
 11877 ;;
 11878                           
 11879                           	psect	text26
 11880  005584                     __ptext26:
 11881                           	opt stack 0
 11882  005584                     ___awmod:
 11883                           	opt stack 16
 11884                           
 11885                           ; BSR set to: 0
 11886                           ;incstack = 0
 11887  005584  0E00               	movlw	0
 11888  005586  0100               	movlb	0	; () banked
 11889  005588  6F65               	movwf	___awmod@sign& (0+255),b
 11890                           
 11891                           ; BSR set to: 0
 11892  00558A  0100               	movlb	0	; () banked
 11893  00558C  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 11894  00558E  D008               	goto	l12688
 11895                           
 11896                           ; BSR set to: 0
 11897  005590  0100               	movlb	0	; () banked
 11898  005592  6D60               	negf	___awmod@dividend& (0+255),b
 11899  005594  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 11900  005596  B0D8               	btfsc	status,0,c
 11901  005598  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 11902                           
 11903                           ; BSR set to: 0
 11904  00559A  0E01               	movlw	1
 11905  00559C  0100               	movlb	0	; () banked
 11906  00559E  6F65               	movwf	___awmod@sign& (0+255),b
 11907  0055A0                     l12688:
 11908                           
 11909                           ; BSR set to: 0
 11910  0055A0  0100               	movlb	0	; () banked
 11911  0055A2  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11912  0055A4  D005               	goto	l12692
 11913                           
 11914                           ; BSR set to: 0
 11915  0055A6  0100               	movlb	0	; () banked
 11916  0055A8  6D62               	negf	___awmod@divisor& (0+255),b
 11917  0055AA  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 11918  0055AC  B0D8               	btfsc	status,0,c
 11919  0055AE  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 11920  0055B0                     l12692:
 11921                           
 11922                           ; BSR set to: 0
 11923  0055B0  0100               	movlb	0	; () banked
 11924  0055B2  5162               	movf	___awmod@divisor& (0+255),w,b
 11925  0055B4  0100               	movlb	0	; () banked
 11926  0055B6  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 11927  0055B8  B4D8               	btfsc	status,2,c
 11928  0055BA  D026               	goto	l12708
 11929                           
 11930                           ; BSR set to: 0
 11931  0055BC  0E01               	movlw	1
 11932  0055BE  0100               	movlb	0	; () banked
 11933  0055C0  6F64               	movwf	___awmod@counter& (0+255),b
 11934  0055C2  D006               	goto	l12698
 11935  0055C4                     l12696:
 11936                           
 11937                           ; BSR set to: 0
 11938  0055C4  0100               	movlb	0	; () banked
 11939  0055C6  90D8               	bcf	status,0,c
 11940  0055C8  3762               	rlcf	___awmod@divisor& (0+255),f,b
 11941  0055CA  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 11942  0055CC  0100               	movlb	0	; () banked
 11943  0055CE  2B64               	incf	___awmod@counter& (0+255),f,b
 11944  0055D0                     l12698:
 11945                           
 11946                           ; BSR set to: 0
 11947  0055D0  0100               	movlb	0	; () banked
 11948  0055D2  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 11949  0055D4  D7F7               	goto	l12696
 11950  0055D6                     l12700:
 11951                           
 11952                           ; BSR set to: 0
 11953  0055D6  0100               	movlb	0	; () banked
 11954  0055D8  5162               	movf	___awmod@divisor& (0+255),w,b
 11955  0055DA  0100               	movlb	0	; () banked
 11956  0055DC  5D60               	subwf	___awmod@dividend& (0+255),w,b
 11957  0055DE  0100               	movlb	0	; () banked
 11958  0055E0  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 11959  0055E2  0100               	movlb	0	; () banked
 11960  0055E4  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 11961  0055E6  A0D8               	btfss	status,0,c
 11962  0055E8  D008               	goto	l12704
 11963                           
 11964                           ; BSR set to: 0
 11965  0055EA  0100               	movlb	0	; () banked
 11966  0055EC  5162               	movf	___awmod@divisor& (0+255),w,b
 11967  0055EE  0100               	movlb	0	; () banked
 11968  0055F0  5F60               	subwf	___awmod@dividend& (0+255),f,b
 11969  0055F2  0100               	movlb	0	; () banked
 11970  0055F4  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 11971  0055F6  0100               	movlb	0	; () banked
 11972  0055F8  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 11973  0055FA                     l12704:
 11974                           
 11975                           ; BSR set to: 0
 11976  0055FA  0100               	movlb	0	; () banked
 11977  0055FC  90D8               	bcf	status,0,c
 11978  0055FE  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 11979  005600  3362               	rrcf	___awmod@divisor& (0+255),f,b
 11980                           
 11981                           ; BSR set to: 0
 11982  005602  0100               	movlb	0	; () banked
 11983  005604  2F64               	decfsz	___awmod@counter& (0+255),f,b
 11984  005606  D7E7               	goto	l12700
 11985  005608                     l12708:
 11986                           
 11987                           ; BSR set to: 0
 11988  005608  0100               	movlb	0	; () banked
 11989  00560A  5165               	movf	___awmod@sign& (0+255),w,b
 11990  00560C  0100               	movlb	0	; () banked
 11991  00560E  B4D8               	btfsc	status,2,c
 11992  005610  D005               	goto	l12712
 11993                           
 11994                           ; BSR set to: 0
 11995  005612  0100               	movlb	0	; () banked
 11996  005614  6D60               	negf	___awmod@dividend& (0+255),b
 11997  005616  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 11998  005618  B0D8               	btfsc	status,0,c
 11999  00561A  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 12000  00561C                     l12712:
 12001                           
 12002                           ; BSR set to: 0
 12003  00561C  C060  F060         	movff	___awmod@dividend,?___awmod
 12004  005620  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 12005  005624  0012               	return	
 12006  005626                     __end_of___awmod:
 12007                           	opt stack 0
 12008                           tblptru	equ	0xFF8
 12009                           tblptrh	equ	0xFF7
 12010                           tblptrl	equ	0xFF6
 12011                           tablat	equ	0xFF5
 12012                           prodh	equ	0xFF4
 12013                           prodl	equ	0xFF3
 12014                           intcon	equ	0xFF2
 12015                           postinc0	equ	0xFEE
 12016                           wreg	equ	0xFE8
 12017                           indf1	equ	0xFE7
 12018                           postdec1	equ	0xFE5
 12019                           fsr1h	equ	0xFE2
 12020                           fsr1l	equ	0xFE1
 12021                           indf2	equ	0xFDF
 12022                           fsr2h	equ	0xFDA
 12023                           fsr2l	equ	0xFD9
 12024                           status	equ	0xFD8
 12025                           
 12026 ;; *************** function _moteApp_add16bToDataBuffer *****************
 12027 ;; Defined at:
 12028 ;;		line 1401 in file "../Includes/Board/MOTEapp.c"
 12029 ;; Parameters:    Size  Location     Type
 12030 ;;  number          2    7[BANK0 ] unsigned int 
 12031 ;;  bufferLocati    1    9[BANK0 ] unsigned char 
 12032 ;; Auto vars:     Size  Location     Type
 12033 ;;		None
 12034 ;; Return value:  Size  Location     Type
 12035 ;;		None               void
 12036 ;; Registers used:
 12037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12038 ;; Tracked objects:
 12039 ;;		On entry : 0/0
 12040 ;;		On exit  : 0/0
 12041 ;;		Unchanged: 0/0
 12042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12043 ;;      Params:         0       3       0       0       0       0       0       0       0
 12044 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12045 ;;      Temps:          0       2       0       0       0       0       0       0       0
 12046 ;;      Totals:         0       5       0       0       0       0       0       0       0
 12047 ;;Total ram usage:        5 bytes
 12048 ;; Hardware stack levels used:    1
 12049 ;; Hardware stack levels required when called:   12
 12050 ;; This function calls:
 12051 ;;		___lwdiv
 12052 ;;		___lwmod
 12053 ;; This function is called by:
 12054 ;;		_moteRunningProcess
 12055 ;; This function uses a non-reentrant model
 12056 ;;
 12057                           
 12058                           	psect	text27
 12059  003248                     __ptext27:
 12060                           	opt stack 0
 12061  003248                     _moteApp_add16bToDataBuffer:
 12062                           	opt stack 16
 12063                           
 12064                           ;MOTEapp.c: 1403: dataBuffer[bufferLocation + 4] = '0' + (number % 10);
 12065                           
 12066                           ; BSR set to: 0
 12067                           ;incstack = 0
 12068  003248  0100               	movlb	0	; () banked
 12069  00324A  5169               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 12070  00324C  0100               	movlb	0	; () banked
 12071  00324E  6F6A               	movwf	??_moteApp_add16bToDataBuffer& (0+255),b
 12072  003250  6B6B               	clrf	(??_moteApp_add16bToDataBuffer+1)& (0+255),b
 12073  003252  0E04               	movlw	4
 12074  003254  0100               	movlb	0	; () banked
 12075  003256  276A               	addwf	??_moteApp_add16bToDataBuffer& (0+255),f,b
 12076  003258  0E00               	movlw	0
 12077  00325A  236B               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),f,b
 12078  00325C  0EBC               	movlw	low _dataBuffer
 12079  00325E  0100               	movlb	0	; () banked
 12080  003260  256A               	addwf	??_moteApp_add16bToDataBuffer& (0+255),w,b
 12081  003262  6ED9               	movwf	fsr2l,c
 12082  003264  0E01               	movlw	high _dataBuffer
 12083  003266  0100               	movlb	0	; () banked
 12084  003268  216B               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),w,b
 12085  00326A  6EDA               	movwf	fsr2h,c
 12086  00326C  C067  F060         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 12087  003270  C068  F061         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 12088  003274  0E00               	movlw	0
 12089  003276  0100               	movlb	0	; () banked
 12090  003278  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 12091  00327A  0E0A               	movlw	10
 12092  00327C  6F62               	movwf	___lwmod@divisor& (0+255),b
 12093  00327E  ECD8  F02F         	call	___lwmod	;wreg free
 12094  003282  0100               	movlb	0	; () banked
 12095  003284  5160               	movf	?___lwmod& (0+255),w,b
 12096  003286  0F30               	addlw	48
 12097  003288  6EDF               	movwf	indf2,c
 12098                           
 12099                           ; BSR set to: 0
 12100                           ;MOTEapp.c: 1404: number /= 10;
 12101  00328A  C067  F060         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 12102  00328E  C068  F061         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 12103  003292  0E00               	movlw	0
 12104  003294  0100               	movlb	0	; () banked
 12105  003296  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12106  003298  0E0A               	movlw	10
 12107  00329A  6F62               	movwf	___lwdiv@divisor& (0+255),b
 12108  00329C  EC52  F02E         	call	___lwdiv	;wreg free
 12109  0032A0  C060  F067         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 12110  0032A4  C061  F068         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 12111                           
 12112                           ;MOTEapp.c: 1405: dataBuffer[bufferLocation + 3] = '0' + (number % 10);
 12113  0032A8  0100               	movlb	0	; () banked
 12114  0032AA  5169               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 12115  0032AC  0100               	movlb	0	; () banked
 12116  0032AE  6F6A               	movwf	??_moteApp_add16bToDataBuffer& (0+255),b
 12117  0032B0  6B6B               	clrf	(??_moteApp_add16bToDataBuffer+1)& (0+255),b
 12118  0032B2  0E03               	movlw	3
 12119  0032B4  0100               	movlb	0	; () banked
 12120  0032B6  276A               	addwf	??_moteApp_add16bToDataBuffer& (0+255),f,b
 12121  0032B8  0E00               	movlw	0
 12122  0032BA  236B               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),f,b
 12123  0032BC  0EBC               	movlw	low _dataBuffer
 12124  0032BE  0100               	movlb	0	; () banked
 12125  0032C0  256A               	addwf	??_moteApp_add16bToDataBuffer& (0+255),w,b
 12126  0032C2  6ED9               	movwf	fsr2l,c
 12127  0032C4  0E01               	movlw	high _dataBuffer
 12128  0032C6  0100               	movlb	0	; () banked
 12129  0032C8  216B               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),w,b
 12130  0032CA  6EDA               	movwf	fsr2h,c
 12131  0032CC  C067  F060         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 12132  0032D0  C068  F061         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 12133  0032D4  0E00               	movlw	0
 12134  0032D6  0100               	movlb	0	; () banked
 12135  0032D8  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 12136  0032DA  0E0A               	movlw	10
 12137  0032DC  6F62               	movwf	___lwmod@divisor& (0+255),b
 12138  0032DE  ECD8  F02F         	call	___lwmod	;wreg free
 12139  0032E2  0100               	movlb	0	; () banked
 12140  0032E4  5160               	movf	?___lwmod& (0+255),w,b
 12141  0032E6  0F30               	addlw	48
 12142  0032E8  6EDF               	movwf	indf2,c
 12143                           
 12144                           ;MOTEapp.c: 1406: number /= 10;
 12145  0032EA  C067  F060         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 12146  0032EE  C068  F061         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 12147  0032F2  0E00               	movlw	0
 12148  0032F4  0100               	movlb	0	; () banked
 12149  0032F6  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12150  0032F8  0E0A               	movlw	10
 12151  0032FA  6F62               	movwf	___lwdiv@divisor& (0+255),b
 12152  0032FC  EC52  F02E         	call	___lwdiv	;wreg free
 12153  003300  C060  F067         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 12154  003304  C061  F068         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 12155                           
 12156                           ;MOTEapp.c: 1407: dataBuffer[bufferLocation + 2] = '0' + (number % 10);
 12157  003308  0100               	movlb	0	; () banked
 12158  00330A  5169               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 12159  00330C  0100               	movlb	0	; () banked
 12160  00330E  6F6A               	movwf	??_moteApp_add16bToDataBuffer& (0+255),b
 12161  003310  6B6B               	clrf	(??_moteApp_add16bToDataBuffer+1)& (0+255),b
 12162  003312  0E02               	movlw	2
 12163  003314  0100               	movlb	0	; () banked
 12164  003316  276A               	addwf	??_moteApp_add16bToDataBuffer& (0+255),f,b
 12165  003318  0E00               	movlw	0
 12166  00331A  236B               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),f,b
 12167  00331C  0EBC               	movlw	low _dataBuffer
 12168  00331E  0100               	movlb	0	; () banked
 12169  003320  256A               	addwf	??_moteApp_add16bToDataBuffer& (0+255),w,b
 12170  003322  6ED9               	movwf	fsr2l,c
 12171  003324  0E01               	movlw	high _dataBuffer
 12172  003326  0100               	movlb	0	; () banked
 12173  003328  216B               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),w,b
 12174  00332A  6EDA               	movwf	fsr2h,c
 12175  00332C  C067  F060         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 12176  003330  C068  F061         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 12177  003334  0E00               	movlw	0
 12178  003336  0100               	movlb	0	; () banked
 12179  003338  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 12180  00333A  0E0A               	movlw	10
 12181  00333C  6F62               	movwf	___lwmod@divisor& (0+255),b
 12182  00333E  ECD8  F02F         	call	___lwmod	;wreg free
 12183  003342  0100               	movlb	0	; () banked
 12184  003344  5160               	movf	?___lwmod& (0+255),w,b
 12185  003346  0F30               	addlw	48
 12186  003348  6EDF               	movwf	indf2,c
 12187                           
 12188                           ; BSR set to: 0
 12189                           ;MOTEapp.c: 1408: number /= 10;
 12190  00334A  C067  F060         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 12191  00334E  C068  F061         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 12192  003352  0E00               	movlw	0
 12193  003354  0100               	movlb	0	; () banked
 12194  003356  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12195  003358  0E0A               	movlw	10
 12196  00335A  6F62               	movwf	___lwdiv@divisor& (0+255),b
 12197  00335C  EC52  F02E         	call	___lwdiv	;wreg free
 12198  003360  C060  F067         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 12199  003364  C061  F068         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 12200                           
 12201                           ;MOTEapp.c: 1409: dataBuffer[bufferLocation + 1] = '0' + (number % 10);
 12202  003368  0100               	movlb	0	; () banked
 12203  00336A  5169               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 12204  00336C  0100               	movlb	0	; () banked
 12205  00336E  6F6A               	movwf	??_moteApp_add16bToDataBuffer& (0+255),b
 12206  003370  6B6B               	clrf	(??_moteApp_add16bToDataBuffer+1)& (0+255),b
 12207  003372  0E01               	movlw	1
 12208  003374  0100               	movlb	0	; () banked
 12209  003376  276A               	addwf	??_moteApp_add16bToDataBuffer& (0+255),f,b
 12210  003378  0E00               	movlw	0
 12211  00337A  236B               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),f,b
 12212  00337C  0EBC               	movlw	low _dataBuffer
 12213  00337E  0100               	movlb	0	; () banked
 12214  003380  256A               	addwf	??_moteApp_add16bToDataBuffer& (0+255),w,b
 12215  003382  6ED9               	movwf	fsr2l,c
 12216  003384  0E01               	movlw	high _dataBuffer
 12217  003386  0100               	movlb	0	; () banked
 12218  003388  216B               	addwfc	(??_moteApp_add16bToDataBuffer+1)& (0+255),w,b
 12219  00338A  6EDA               	movwf	fsr2h,c
 12220  00338C  C067  F060         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 12221  003390  C068  F061         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 12222  003394  0E00               	movlw	0
 12223  003396  0100               	movlb	0	; () banked
 12224  003398  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 12225  00339A  0E0A               	movlw	10
 12226  00339C  6F62               	movwf	___lwmod@divisor& (0+255),b
 12227  00339E  ECD8  F02F         	call	___lwmod	;wreg free
 12228  0033A2  0100               	movlb	0	; () banked
 12229  0033A4  5160               	movf	?___lwmod& (0+255),w,b
 12230  0033A6  0F30               	addlw	48
 12231  0033A8  6EDF               	movwf	indf2,c
 12232                           
 12233                           ; BSR set to: 0
 12234                           ;MOTEapp.c: 1410: number /= 10;
 12235  0033AA  C067  F060         	movff	moteApp_add16bToDataBuffer@number,___lwdiv@dividend
 12236  0033AE  C068  F061         	movff	moteApp_add16bToDataBuffer@number+1,___lwdiv@dividend+1
 12237  0033B2  0E00               	movlw	0
 12238  0033B4  0100               	movlb	0	; () banked
 12239  0033B6  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 12240  0033B8  0E0A               	movlw	10
 12241  0033BA  6F62               	movwf	___lwdiv@divisor& (0+255),b
 12242  0033BC  EC52  F02E         	call	___lwdiv	;wreg free
 12243  0033C0  C060  F067         	movff	?___lwdiv,moteApp_add16bToDataBuffer@number
 12244  0033C4  C061  F068         	movff	?___lwdiv+1,moteApp_add16bToDataBuffer@number+1
 12245                           
 12246                           ;MOTEapp.c: 1411: dataBuffer[bufferLocation] = '0' + (number % 10);
 12247  0033C8  0100               	movlb	0	; () banked
 12248  0033CA  5169               	movf	moteApp_add16bToDataBuffer@bufferLocation& (0+255),w,b
 12249  0033CC  0D01               	mullw	1
 12250  0033CE  0EBC               	movlw	low _dataBuffer
 12251  0033D0  24F3               	addwf	prodl,w,c
 12252  0033D2  6ED9               	movwf	fsr2l,c
 12253  0033D4  0E01               	movlw	high _dataBuffer
 12254  0033D6  20F4               	addwfc	prodh,w,c
 12255  0033D8  6EDA               	movwf	fsr2h,c
 12256  0033DA  C067  F060         	movff	moteApp_add16bToDataBuffer@number,___lwmod@dividend
 12257  0033DE  C068  F061         	movff	moteApp_add16bToDataBuffer@number+1,___lwmod@dividend+1
 12258  0033E2  0E00               	movlw	0
 12259  0033E4  0100               	movlb	0	; () banked
 12260  0033E6  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 12261  0033E8  0E0A               	movlw	10
 12262  0033EA  6F62               	movwf	___lwmod@divisor& (0+255),b
 12263  0033EC  ECD8  F02F         	call	___lwmod	;wreg free
 12264  0033F0  0100               	movlb	0	; () banked
 12265  0033F2  5160               	movf	?___lwmod& (0+255),w,b
 12266  0033F4  0F30               	addlw	48
 12267  0033F6  6EDF               	movwf	indf2,c
 12268                           
 12269                           ; BSR set to: 0
 12270  0033F8  0012               	return		;funcret
 12271  0033FA                     __end_of_moteApp_add16bToDataBuffer:
 12272                           	opt stack 0
 12273                           tblptru	equ	0xFF8
 12274                           tblptrh	equ	0xFF7
 12275                           tblptrl	equ	0xFF6
 12276                           tablat	equ	0xFF5
 12277                           prodh	equ	0xFF4
 12278                           prodl	equ	0xFF3
 12279                           intcon	equ	0xFF2
 12280                           postinc0	equ	0xFEE
 12281                           wreg	equ	0xFE8
 12282                           indf1	equ	0xFE7
 12283                           postdec1	equ	0xFE5
 12284                           fsr1h	equ	0xFE2
 12285                           fsr1l	equ	0xFE1
 12286                           indf2	equ	0xFDF
 12287                           fsr2h	equ	0xFDA
 12288                           fsr2l	equ	0xFD9
 12289                           status	equ	0xFD8
 12290                           
 12291 ;; *************** function ___lwdiv *****************
 12292 ;; Defined at:
 12293 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 12294 ;; Parameters:    Size  Location     Type
 12295 ;;  dividend        2    0[BANK0 ] unsigned int 
 12296 ;;  divisor         2    2[BANK0 ] unsigned int 
 12297 ;; Auto vars:     Size  Location     Type
 12298 ;;  quotient        2    5[BANK0 ] unsigned int 
 12299 ;;  counter         1    4[BANK0 ] unsigned char 
 12300 ;; Return value:  Size  Location     Type
 12301 ;;                  2    0[BANK0 ] unsigned int 
 12302 ;; Registers used:
 12303 ;;		wreg, status,2, status,0
 12304 ;; Tracked objects:
 12305 ;;		On entry : 0/0
 12306 ;;		On exit  : 0/0
 12307 ;;		Unchanged: 0/0
 12308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12309 ;;      Params:         0       4       0       0       0       0       0       0       0
 12310 ;;      Locals:         0       3       0       0       0       0       0       0       0
 12311 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12312 ;;      Totals:         0       7       0       0       0       0       0       0       0
 12313 ;;Total ram usage:        7 bytes
 12314 ;; Hardware stack levels used:    1
 12315 ;; Hardware stack levels required when called:   11
 12316 ;; This function calls:
 12317 ;;		Nothing
 12318 ;; This function is called by:
 12319 ;;		_moteApp_add16bToDataBuffer
 12320 ;;		_oled_putUint16
 12321 ;; This function uses a non-reentrant model
 12322 ;;
 12323                           
 12324                           	psect	text28
 12325  005CA4                     __ptext28:
 12326                           	opt stack 0
 12327  005CA4                     ___lwdiv:
 12328                           	opt stack 16
 12329                           
 12330                           ; BSR set to: 0
 12331                           ;incstack = 0
 12332  005CA4  0E00               	movlw	0
 12333  005CA6  0100               	movlb	0	; () banked
 12334  005CA8  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 12335  005CAA  0E00               	movlw	0
 12336  005CAC  6F65               	movwf	___lwdiv@quotient& (0+255),b
 12337                           
 12338                           ; BSR set to: 0
 12339  005CAE  0100               	movlb	0	; () banked
 12340  005CB0  5162               	movf	___lwdiv@divisor& (0+255),w,b
 12341  005CB2  0100               	movlb	0	; () banked
 12342  005CB4  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 12343  005CB6  B4D8               	btfsc	status,2,c
 12344  005CB8  D02C               	goto	l2510
 12345                           
 12346                           ; BSR set to: 0
 12347  005CBA  0E01               	movlw	1
 12348  005CBC  0100               	movlb	0	; () banked
 12349  005CBE  6F64               	movwf	___lwdiv@counter& (0+255),b
 12350  005CC0  D006               	goto	l12794
 12351  005CC2                     l12792:
 12352                           
 12353                           ; BSR set to: 0
 12354  005CC2  0100               	movlb	0	; () banked
 12355  005CC4  90D8               	bcf	status,0,c
 12356  005CC6  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 12357  005CC8  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 12358  005CCA  0100               	movlb	0	; () banked
 12359  005CCC  2B64               	incf	___lwdiv@counter& (0+255),f,b
 12360  005CCE                     l12794:
 12361                           
 12362                           ; BSR set to: 0
 12363  005CCE  0100               	movlb	0	; () banked
 12364  005CD0  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 12365  005CD2  D7F7               	goto	l12792
 12366  005CD4                     l12796:
 12367                           
 12368                           ; BSR set to: 0
 12369  005CD4  0100               	movlb	0	; () banked
 12370  005CD6  90D8               	bcf	status,0,c
 12371  005CD8  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 12372  005CDA  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 12373                           
 12374                           ; BSR set to: 0
 12375  005CDC  0100               	movlb	0	; () banked
 12376  005CDE  5162               	movf	___lwdiv@divisor& (0+255),w,b
 12377  005CE0  0100               	movlb	0	; () banked
 12378  005CE2  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 12379  005CE4  0100               	movlb	0	; () banked
 12380  005CE6  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 12381  005CE8  0100               	movlb	0	; () banked
 12382  005CEA  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 12383  005CEC  A0D8               	btfss	status,0,c
 12384  005CEE  D00A               	goto	l12804
 12385                           
 12386                           ; BSR set to: 0
 12387  005CF0  0100               	movlb	0	; () banked
 12388  005CF2  5162               	movf	___lwdiv@divisor& (0+255),w,b
 12389  005CF4  0100               	movlb	0	; () banked
 12390  005CF6  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 12391  005CF8  0100               	movlb	0	; () banked
 12392  005CFA  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 12393  005CFC  0100               	movlb	0	; () banked
 12394  005CFE  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 12395                           
 12396                           ; BSR set to: 0
 12397  005D00  0100               	movlb	0	; () banked
 12398  005D02  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 12399  005D04                     l12804:
 12400                           
 12401                           ; BSR set to: 0
 12402  005D04  0100               	movlb	0	; () banked
 12403  005D06  90D8               	bcf	status,0,c
 12404  005D08  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 12405  005D0A  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 12406                           
 12407                           ; BSR set to: 0
 12408  005D0C  0100               	movlb	0	; () banked
 12409  005D0E  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 12410  005D10  D7E1               	goto	l12796
 12411  005D12                     l2510:
 12412                           
 12413                           ; BSR set to: 0
 12414  005D12  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 12415  005D16  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 12416                           
 12417                           ; BSR set to: 0
 12418  005D1A  0012               	return		;funcret
 12419  005D1C                     __end_of___lwdiv:
 12420                           	opt stack 0
 12421                           tblptru	equ	0xFF8
 12422                           tblptrh	equ	0xFF7
 12423                           tblptrl	equ	0xFF6
 12424                           tablat	equ	0xFF5
 12425                           prodh	equ	0xFF4
 12426                           prodl	equ	0xFF3
 12427                           intcon	equ	0xFF2
 12428                           postinc0	equ	0xFEE
 12429                           wreg	equ	0xFE8
 12430                           indf1	equ	0xFE7
 12431                           postdec1	equ	0xFE5
 12432                           fsr1h	equ	0xFE2
 12433                           fsr1l	equ	0xFE1
 12434                           indf2	equ	0xFDF
 12435                           fsr2h	equ	0xFDA
 12436                           fsr2l	equ	0xFD9
 12437                           status	equ	0xFD8
 12438                           
 12439 ;; *************** function _moteApp_GoToSleep *****************
 12440 ;; Defined at:
 12441 ;;		line 1237 in file "../Includes/Board/MOTEapp.c"
 12442 ;; Parameters:    Size  Location     Type
 12443 ;;		None
 12444 ;; Auto vars:     Size  Location     Type
 12445 ;;  status          1   14[BANK0 ] unsigned char 
 12446 ;; Return value:  Size  Location     Type
 12447 ;;                  1    wreg      unsigned char 
 12448 ;; Registers used:
 12449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12450 ;; Tracked objects:
 12451 ;;		On entry : 0/0
 12452 ;;		On exit  : 0/0
 12453 ;;		Unchanged: 0/0
 12454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12455 ;;      Params:         0       0       0       0       0       0       0       0       0
 12456 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12457 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12458 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12459 ;;Total ram usage:        1 bytes
 12460 ;; Hardware stack levels used:    1
 12461 ;; Hardware stack levels required when called:   17
 12462 ;; This function calls:
 12463 ;;		_EUSART_FlushBuffer
 12464 ;;		_PIN_MANAGER_Initialize
 12465 ;;		_moduleResync
 12466 ;;		_moduleSleep
 12467 ;;		_moteApp_delayms
 12468 ;;		_oled_displayOff
 12469 ;;		_oled_init
 12470 ;; This function is called by:
 12471 ;;		_moteRunningProcess
 12472 ;; This function uses a non-reentrant model
 12473 ;;
 12474                           
 12475                           	psect	text29
 12476  003F00                     __ptext29:
 12477                           	opt stack 0
 12478  003F00                     _moteApp_GoToSleep:
 12479                           	opt stack 11
 12480                           
 12481                           ;MOTEapp.c: 1239: uint8_t status = 0;
 12482                           
 12483                           ; BSR set to: 0
 12484                           ;incstack = 0
 12485  003F00  0E00               	movlw	0
 12486  003F02  0100               	movlb	0	; () banked
 12487  003F04  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12488  003F06                     l673:
 12489  003F06  A081               	btfss	3969,0,c	;volatile
 12490  003F08  D7FE               	goto	l673
 12491                           
 12492                           ;MOTEapp.c: 1241: moduleSleep();
 12493  003F0A  EC46  F034         	call	_moduleSleep	;wreg free
 12494                           
 12495                           ;MOTEapp.c: 1242: oled_displayOff(1);
 12496  003F0E  0E01               	movlw	1
 12497  003F10  EC74  F035         	call	_oled_displayOff
 12498                           
 12499                           ;MOTEapp.c: 1243: ADCON0bits.ADON = 0;
 12500  003F14  90C2               	bcf	4034,0,c	;volatile
 12501                           
 12502                           ;MOTEapp.c: 1244: INTCONbits.GIE = 0;
 12503  003F16  9EF2               	bcf	intcon,7,c	;volatile
 12504                           
 12505                           ;MOTEapp.c: 1245: GIE = 0;
 12506  003F18  9EF2               	bcf	intcon,7,c	;volatile
 12507                           
 12508                           ;MOTEapp.c: 1246: PEIE = 0;
 12509  003F1A  9CF2               	bcf	intcon,6,c	;volatile
 12510                           
 12511                           ;MOTEapp.c: 1248: LATEbits.LATE2 = 0;
 12512  003F1C  948D               	bcf	3981,2,c	;volatile
 12513                           
 12514                           ;MOTEapp.c: 1255: LATBbits.LATB2 = 0;
 12515  003F1E  948A               	bcf	3978,2,c	;volatile
 12516                           
 12517                           ;MOTEapp.c: 1256: LATBbits.LATB3 = 0;
 12518  003F20  968A               	bcf	3978,3,c	;volatile
 12519                           
 12520                           ;MOTEapp.c: 1257: LATBbits.LATB4 = 0;
 12521  003F22  988A               	bcf	3978,4,c	;volatile
 12522                           
 12523                           ;MOTEapp.c: 1258: LATBbits.LATB5 = 0;
 12524  003F24  9A8A               	bcf	3978,5,c	;volatile
 12525                           
 12526                           ;MOTEapp.c: 1259: LATCbits.LATC0 = 0;
 12527  003F26  908B               	bcf	3979,0,c	;volatile
 12528                           
 12529                           ;MOTEapp.c: 1260: LATCbits.LATC1 = 0;
 12530  003F28  928B               	bcf	3979,1,c	;volatile
 12531                           
 12532                           ;MOTEapp.c: 1262: TRISD = 0b11111111;
 12533  003F2A  6895               	setf	3989,c	;volatile
 12534                           
 12535                           ;MOTEapp.c: 1263: ANSELD = 0b11111111;
 12536  003F2C  010F               	movlb	15	; () banked
 12537  003F2E  695E               	setf	94,b	;volatile
 12538                           
 12539                           ; BSR set to: 15
 12540                           ;MOTEapp.c: 1264: LATD = 0b00000000;
 12541  003F30  0E00               	movlw	0
 12542  003F32  6E8C               	movwf	3980,c	;volatile
 12543                           
 12544                           ; BSR set to: 15
 12545                           ;MOTEapp.c: 1268: PIE2bits.TMR3IE = 0;
 12546  003F34  92A0               	bcf	4000,1,c	;volatile
 12547                           
 12548                           ; BSR set to: 15
 12549                           ;MOTEapp.c: 1270: ANSELAbits.ANSA0 = 1;
 12550  003F36  010F               	movlb	15	; () banked
 12551  003F38  815B               	bsf	91,0,b	;volatile
 12552                           
 12553                           ; BSR set to: 15
 12554                           ;MOTEapp.c: 1272: PIE2bits.C1IE = 1;
 12555  003F3A  8CA0               	bsf	4000,6,c	;volatile
 12556                           
 12557                           ; BSR set to: 15
 12558                           ;MOTEapp.c: 1273: INTCON3bits.INT1IE = 1;
 12559  003F3C  86F0               	bsf	intcon3,3,c	;volatile
 12560                           
 12561                           ; BSR set to: 15
 12562                           ;MOTEapp.c: 1274: INTCONbits.INT0IE = 1;
 12563  003F3E  88F2               	bsf	intcon,4,c	;volatile
 12564                           
 12565                           ; BSR set to: 15
 12566                           ;MOTEapp.c: 1275: IOCCbits.IOCC2 = 1;
 12567  003F40  8487               	bsf	3975,2,c	;volatile
 12568                           
 12569                           ; BSR set to: 15
 12570                           ;MOTEapp.c: 1276: INTCONbits.IOCIE = 1;
 12571  003F42  86F2               	bsf	intcon,3,c	;volatile
 12572                           
 12573                           ; BSR set to: 15
 12574                           ;MOTEapp.c: 1278: status = PORTBbits.RB1;
 12575  003F44  0E00               	movlw	0
 12576  003F46  B281               	btfsc	3969,1,c	;volatile
 12577  003F48  0E01               	movlw	1
 12578  003F4A  0100               	movlb	0	; () banked
 12579  003F4C  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12580                           
 12581                           ; BSR set to: 0
 12582                           ;MOTEapp.c: 1279: status = PORTBbits.RB0;
 12583  003F4E  0E00               	movlw	0
 12584  003F50  B081               	btfsc	3969,0,c	;volatile
 12585  003F52  0E01               	movlw	1
 12586  003F54  0100               	movlb	0	; () banked
 12587  003F56  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12588                           
 12589                           ; BSR set to: 0
 12590                           ;MOTEapp.c: 1280: status = PORTCbits.RC2;
 12591  003F58  0E00               	movlw	0
 12592  003F5A  B482               	btfsc	3970,2,c	;volatile
 12593  003F5C  0E01               	movlw	1
 12594  003F5E  0100               	movlb	0	; () banked
 12595  003F60  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12596                           
 12597                           ; BSR set to: 0
 12598                           ;MOTEapp.c: 1282: if (periodicState)
 12599  003F62  0100               	movlb	0	; () banked
 12600  003F64  51FB               	movf	_periodicState& (0+255),w,b
 12601  003F66  A4D8               	btfss	status,2,c
 12602                           
 12603                           ; BSR set to: 0
 12604                           ;MOTEapp.c: 1283: {
 12605                           ;MOTEapp.c: 1284: WDTCONbits.SWDTEN = 1;
 12606  003F68  80D1               	bsf	4049,0,c	;volatile
 12607                           
 12608                           ; BSR set to: 0
 12609                           ;MOTEapp.c: 1285: }
 12610                           ;MOTEapp.c: 1287: INTCONbits.IOCIF = 0;
 12611  003F6A  90F2               	bcf	intcon,0,c	;volatile
 12612                           
 12613                           ;MOTEapp.c: 1288: INTCONbits.INT0IF = 0;
 12614  003F6C  92F2               	bcf	intcon,1,c	;volatile
 12615                           
 12616                           ;MOTEapp.c: 1289: INTCON3bits.INT1IF = 0;
 12617  003F6E  90F0               	bcf	intcon3,0,c	;volatile
 12618                           
 12619                           ;MOTEapp.c: 1290: PIR2bits.C1IF = 0;
 12620  003F70  9CA1               	bcf	4001,6,c	;volatile
 12621                           
 12622                           ;MOTEapp.c: 1291: __nop();
 12623  003F72  F000               	nop	
 12624                           
 12625                           ;MOTEapp.c: 1293: __nop();
 12626  003F74  F000               	nop	
 12627  003F76  0003               	sleep		;# 
 12628                           
 12629                           ;MOTEapp.c: 1295: __nop();
 12630  003F78  F000               	nop	
 12631                           
 12632                           ;MOTEapp.c: 1297: __nop();
 12633  003F7A  F000               	nop	
 12634                           
 12635                           ;MOTEapp.c: 1299: WDTCONbits.SWDTEN = 0;
 12636  003F7C  90D1               	bcf	4049,0,c	;volatile
 12637                           
 12638                           ;MOTEapp.c: 1300: EUSART_FlushBuffer();
 12639  003F7E  EC73  F031         	call	_EUSART_FlushBuffer	;wreg free
 12640                           
 12641                           ;MOTEapp.c: 1302: INTCONbits.IOCIE = 0;
 12642  003F82  96F2               	bcf	intcon,3,c	;volatile
 12643                           
 12644                           ;MOTEapp.c: 1303: INTCON3bits.INT1IE = 0;
 12645  003F84  96F0               	bcf	intcon3,3,c	;volatile
 12646                           
 12647                           ;MOTEapp.c: 1304: INTCONbits.INT0IE = 0;
 12648  003F86  98F2               	bcf	intcon,4,c	;volatile
 12649                           
 12650                           ;MOTEapp.c: 1305: IOCCbits.IOCC2 = 0;
 12651  003F88  9487               	bcf	3975,2,c	;volatile
 12652                           
 12653                           ;MOTEapp.c: 1306: PIE2bits.C1IE = 0;
 12654  003F8A  9CA0               	bcf	4000,6,c	;volatile
 12655                           
 12656                           ;MOTEapp.c: 1307: GIE = 1;
 12657  003F8C  8EF2               	bsf	intcon,7,c	;volatile
 12658                           
 12659                           ;MOTEapp.c: 1309: PIN_MANAGER_Initialize();
 12660  003F8E  EC48  F031         	call	_PIN_MANAGER_Initialize	;wreg free
 12661                           
 12662                           ;MOTEapp.c: 1311: if ((INTCONbits.IOCIF)||(INTCONbits.INT0IF)||(INTCON3bits.INT1IF)||(PI
      +                          R2bits.C1IF))
 12663  003F92  A0F2               	btfss	intcon,0,c	;volatile
 12664  003F94  B2F2               	btfsc	intcon,1,c	;volatile
 12665  003F96  D004               	goto	l679
 12666  003F98  B0F0               	btfsc	intcon3,0,c	;volatile
 12667  003F9A  D002               	goto	l679
 12668  003F9C  ACA1               	btfss	4001,6,c	;volatile
 12669  003F9E  D012               	goto	l13350
 12670  003FA0                     l679:
 12671                           
 12672                           ;MOTEapp.c: 1312: {
 12673                           ;MOTEapp.c: 1313: INTCONbits.IOCIF = 0;
 12674  003FA0  90F2               	bcf	intcon,0,c	;volatile
 12675                           
 12676                           ;MOTEapp.c: 1314: INTCONbits.INT0IF = 0;
 12677  003FA2  92F2               	bcf	intcon,1,c	;volatile
 12678                           
 12679                           ;MOTEapp.c: 1315: INTCON3bits.INT1IF = 0;
 12680  003FA4  90F0               	bcf	intcon3,0,c	;volatile
 12681                           
 12682                           ;MOTEapp.c: 1316: status = 1;
 12683  003FA6  0E01               	movlw	1
 12684  003FA8  0100               	movlb	0	; () banked
 12685  003FAA  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12686                           
 12687                           ; BSR set to: 0
 12688                           ;MOTEapp.c: 1319: oled_displayOff(0);
 12689  003FAC  0E00               	movlw	0
 12690  003FAE  EC74  F035         	call	_oled_displayOff
 12691                           
 12692                           ;MOTEapp.c: 1320: oled_init();
 12693  003FB2  ECBD  F033         	call	_oled_init	;wreg free
 12694                           
 12695                           ;MOTEapp.c: 1322: LATEbits.LATE2 = 1;
 12696  003FB6  848D               	bsf	3981,2,c	;volatile
 12697                           
 12698                           ;MOTEapp.c: 1323: TMR3H = 0xFB;
 12699  003FB8  0EFB               	movlw	251
 12700  003FBA  6EB3               	movwf	4019,c	;volatile
 12701                           
 12702                           ;MOTEapp.c: 1324: TMR3L = 0x50;
 12703  003FBC  0E50               	movlw	80
 12704  003FBE  6EB2               	movwf	4018,c	;volatile
 12705                           
 12706                           ;MOTEapp.c: 1325: PIE2bits.TMR3IE = 1;
 12707  003FC0  82A0               	bsf	4000,1,c	;volatile
 12708                           
 12709                           ;MOTEapp.c: 1326: }
 12710  003FC2  D008               	goto	l13356
 12711  003FC4                     l13350:
 12712                           
 12713                           ;MOTEapp.c: 1327: else
 12714                           ;MOTEapp.c: 1328: {
 12715                           ;MOTEapp.c: 1329: secTicker = 10;
 12716  003FC4  0E0A               	movlw	10
 12717  003FC6  0100               	movlb	0	; () banked
 12718  003FC8  6FEF               	movwf	_secTicker& (0+255),b
 12719                           
 12720                           ;MOTEapp.c: 1330: status = 0;
 12721  003FCA  0E00               	movlw	0
 12722  003FCC  0100               	movlb	0	; () banked
 12723  003FCE  6F6E               	movwf	moteApp_GoToSleep@status& (0+255),b
 12724                           
 12725                           ; BSR set to: 0
 12726                           ;MOTEapp.c: 1332: LATEbits.LATE2 = 0;
 12727  003FD0  948D               	bcf	3981,2,c	;volatile
 12728                           
 12729                           ; BSR set to: 0
 12730                           ;MOTEapp.c: 1333: PIE2bits.TMR3IE = 0;
 12731  003FD2  92A0               	bcf	4000,1,c	;volatile
 12732  003FD4                     l13356:
 12733                           
 12734                           ;MOTEapp.c: 1334: }
 12735                           ;MOTEapp.c: 1335: ANSELAbits.ANSA0 = 0;
 12736  003FD4  010F               	movlb	15	; () banked
 12737  003FD6  915B               	bcf	91,0,b	;volatile
 12738                           
 12739                           ; BSR set to: 15
 12740                           ;MOTEapp.c: 1337: moduleResync();
 12741  003FD8  EC4B  F02C         	call	_moduleResync	;wreg free
 12742                           
 12743                           ;MOTEapp.c: 1338: moteApp_delayms(40);
 12744  003FDC  0E00               	movlw	0
 12745  003FDE  0100               	movlb	0	; () banked
 12746  003FE0  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12747  003FE2  0E28               	movlw	40
 12748  003FE4  6F60               	movwf	moteApp_delayms@length& (0+255),b
 12749  003FE6  ECFF  F032         	call	_moteApp_delayms	;wreg free
 12750                           
 12751                           ;MOTEapp.c: 1339: moduleResync();
 12752  003FEA  EC4B  F02C         	call	_moduleResync	;wreg free
 12753                           
 12754                           ;MOTEapp.c: 1340: moteApp_delayms(40);
 12755  003FEE  0E00               	movlw	0
 12756  003FF0  0100               	movlb	0	; () banked
 12757  003FF2  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 12758  003FF4  0E28               	movlw	40
 12759  003FF6  6F60               	movwf	moteApp_delayms@length& (0+255),b
 12760  003FF8  ECFF  F032         	call	_moteApp_delayms	;wreg free
 12761                           
 12762                           ;MOTEapp.c: 1341: return status;
 12763  003FFC  0100               	movlb	0	; () banked
 12764  003FFE  516E               	movf	moteApp_GoToSleep@status& (0+255),w,b
 12765  004000  0012               	return	
 12766  004002                     __end_of_moteApp_GoToSleep:
 12767                           	opt stack 0
 12768                           tblptru	equ	0xFF8
 12769                           tblptrh	equ	0xFF7
 12770                           tblptrl	equ	0xFF6
 12771                           tablat	equ	0xFF5
 12772                           prodh	equ	0xFF4
 12773                           prodl	equ	0xFF3
 12774                           intcon	equ	0xFF2
 12775                           intcon3	equ	0xFF0
 12776                           postinc0	equ	0xFEE
 12777                           wreg	equ	0xFE8
 12778                           indf1	equ	0xFE7
 12779                           postdec1	equ	0xFE5
 12780                           fsr1h	equ	0xFE2
 12781                           fsr1l	equ	0xFE1
 12782                           indf2	equ	0xFDF
 12783                           fsr2h	equ	0xFDA
 12784                           fsr2l	equ	0xFD9
 12785                           status	equ	0xFD8
 12786                           
 12787 ;; *************** function _oled_init *****************
 12788 ;; Defined at:
 12789 ;;		line 366 in file "../Includes/Drivers/SSD1306oLED.c"
 12790 ;; Parameters:    Size  Location     Type
 12791 ;;		None
 12792 ;; Auto vars:     Size  Location     Type
 12793 ;;		None
 12794 ;; Return value:  Size  Location     Type
 12795 ;;		None               void
 12796 ;; Registers used:
 12797 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12798 ;; Tracked objects:
 12799 ;;		On entry : 0/0
 12800 ;;		On exit  : 0/0
 12801 ;;		Unchanged: 0/0
 12802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12803 ;;      Params:         0       0       0       0       0       0       0       0       0
 12804 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12805 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12806 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12807 ;;Total ram usage:        0 bytes
 12808 ;; Hardware stack levels used:    1
 12809 ;; Hardware stack levels required when called:   16
 12810 ;; This function calls:
 12811 ;;		_oled_clear
 12812 ;;		_oled_devInit
 12813 ;;		_oled_setDisplay
 12814 ;;		_oled_setFont
 12815 ;; This function is called by:
 12816 ;;		_main
 12817 ;;		_moteApp_GoToSleep
 12818 ;; This function uses a non-reentrant model
 12819 ;;
 12820                           
 12821                           	psect	text30
 12822  00677A                     __ptext30:
 12823                           	opt stack 0
 12824  00677A                     _oled_init:
 12825                           	opt stack 14
 12826                           
 12827                           ;SSD1306oLED.c: 369: TRISEbits.TRISE2 = 0;
 12828                           
 12829                           ; BSR set to: 0
 12830                           ;incstack = 0
 12831  00677A  9496               	bcf	3990,2,c	;volatile
 12832                           
 12833                           ;SSD1306oLED.c: 370: LATEbits.LATE2 = 1;
 12834  00677C  848D               	bsf	3981,2,c	;volatile
 12835                           
 12836                           ;SSD1306oLED.c: 371: TRISBbits.TRISB2 = 0;
 12837  00677E  9493               	bcf	3987,2,c	;volatile
 12838                           
 12839                           ;SSD1306oLED.c: 372: TRISBbits.TRISB3 = 0;
 12840  006780  9693               	bcf	3987,3,c	;volatile
 12841                           
 12842                           ;SSD1306oLED.c: 373: TRISBbits.TRISB4 = 0;
 12843  006782  9893               	bcf	3987,4,c	;volatile
 12844                           
 12845                           ;SSD1306oLED.c: 374: TRISCbits.TRISC0 = 0;
 12846  006784  9094               	bcf	3988,0,c	;volatile
 12847                           
 12848                           ;SSD1306oLED.c: 375: TRISCbits.TRISC1 = 0;
 12849  006786  9294               	bcf	3988,1,c	;volatile
 12850                           
 12851                           ;SSD1306oLED.c: 377: LATBbits.LATB3 = 1;
 12852  006788  868A               	bsf	3978,3,c	;volatile
 12853                           
 12854                           ;SSD1306oLED.c: 379: LATBbits.LATB4 = 0;
 12855  00678A  988A               	bcf	3978,4,c	;volatile
 12856                           
 12857                           ;SSD1306oLED.c: 381: oled_devInit();
 12858  00678C  EC5A  F02D         	call	_oled_devInit	;wreg free
 12859                           
 12860                           ;SSD1306oLED.c: 383: oled_setDisplay(Inverse);
 12861  006790  0E01               	movlw	1
 12862  006792  EC1C  F034         	call	_oled_setDisplay
 12863                           
 12864                           ;SSD1306oLED.c: 384: oled_setFont(OledFont0);
 12865  006796  0EBB               	movlw	low _OledFont0
 12866  006798  0100               	movlb	0	; () banked
 12867  00679A  6F60               	movwf	oled_setFont@font& (0+255),b
 12868  00679C  0E75               	movlw	high _OledFont0
 12869  00679E  0100               	movlb	0	; () banked
 12870  0067A0  6F61               	movwf	(oled_setFont@font+1)& (0+255),b
 12871  0067A2  ECF7  F034         	call	_oled_setFont	;wreg free
 12872                           
 12873                           ;SSD1306oLED.c: 385: oled_clear();
 12874  0067A6  ECD1  F034         	call	_oled_clear	;wreg free
 12875  0067AA  0012               	return		;funcret
 12876  0067AC                     __end_of_oled_init:
 12877                           	opt stack 0
 12878                           tblptru	equ	0xFF8
 12879                           tblptrh	equ	0xFF7
 12880                           tblptrl	equ	0xFF6
 12881                           tablat	equ	0xFF5
 12882                           prodh	equ	0xFF4
 12883                           prodl	equ	0xFF3
 12884                           intcon	equ	0xFF2
 12885                           intcon3	equ	0xFF0
 12886                           postinc0	equ	0xFEE
 12887                           wreg	equ	0xFE8
 12888                           indf1	equ	0xFE7
 12889                           postdec1	equ	0xFE5
 12890                           fsr1h	equ	0xFE2
 12891                           fsr1l	equ	0xFE1
 12892                           indf2	equ	0xFDF
 12893                           fsr2h	equ	0xFDA
 12894                           fsr2l	equ	0xFD9
 12895                           status	equ	0xFD8
 12896                           
 12897 ;; *************** function _oled_setFont *****************
 12898 ;; Defined at:
 12899 ;;		line 256 in file "../Includes/Drivers/SSD1306oLED.c"
 12900 ;; Parameters:    Size  Location     Type
 12901 ;;  font            2    0[BANK0 ] PTR const unsigned char 
 12902 ;;		 -> OledFont0(768), 
 12903 ;; Auto vars:     Size  Location     Type
 12904 ;;		None
 12905 ;; Return value:  Size  Location     Type
 12906 ;;		None               void
 12907 ;; Registers used:
 12908 ;;		wreg, status,2, status,0
 12909 ;; Tracked objects:
 12910 ;;		On entry : 0/0
 12911 ;;		On exit  : 0/0
 12912 ;;		Unchanged: 0/0
 12913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12914 ;;      Params:         0       2       0       0       0       0       0       0       0
 12915 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12916 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12917 ;;      Totals:         0       2       0       0       0       0       0       0       0
 12918 ;;Total ram usage:        2 bytes
 12919 ;; Hardware stack levels used:    1
 12920 ;; Hardware stack levels required when called:   11
 12921 ;; This function calls:
 12922 ;;		Nothing
 12923 ;; This function is called by:
 12924 ;;		_oled_init
 12925 ;; This function uses a non-reentrant model
 12926 ;;
 12927                           
 12928                           	psect	text31
 12929  0069EE                     __ptext31:
 12930                           	opt stack 0
 12931  0069EE                     _oled_setFont:
 12932                           	opt stack 18
 12933                           
 12934                           ;SSD1306oLED.c: 258: if(font!=0)
 12935                           
 12936                           ;incstack = 0
 12937  0069EE  0100               	movlb	0	; () banked
 12938  0069F0  5160               	movf	oled_setFont@font& (0+255),w,b
 12939  0069F2  0100               	movlb	0	; () banked
 12940  0069F4  1161               	iorwf	(oled_setFont@font+1)& (0+255),w,b
 12941  0069F6  B4D8               	btfsc	status,2,c
 12942  0069F8  0012               	return	
 12943                           
 12944                           ; BSR set to: 0
 12945                           ;SSD1306oLED.c: 259: {
 12946                           ;SSD1306oLED.c: 260: selectedFont=font;
 12947  0069FA  C060  F1F7         	movff	oled_setFont@font,_selectedFont
 12948  0069FE  C061  F1F8         	movff	oled_setFont@font+1,_selectedFont+1
 12949  006A02  0012               	return	
 12950  006A04                     __end_of_oled_setFont:
 12951                           	opt stack 0
 12952                           tblptru	equ	0xFF8
 12953                           tblptrh	equ	0xFF7
 12954                           tblptrl	equ	0xFF6
 12955                           tablat	equ	0xFF5
 12956                           prodh	equ	0xFF4
 12957                           prodl	equ	0xFF3
 12958                           intcon	equ	0xFF2
 12959                           intcon3	equ	0xFF0
 12960                           postinc0	equ	0xFEE
 12961                           wreg	equ	0xFE8
 12962                           indf1	equ	0xFE7
 12963                           postdec1	equ	0xFE5
 12964                           fsr1h	equ	0xFE2
 12965                           fsr1l	equ	0xFE1
 12966                           indf2	equ	0xFDF
 12967                           fsr2h	equ	0xFDA
 12968                           fsr2l	equ	0xFD9
 12969                           status	equ	0xFD8
 12970                           
 12971 ;; *************** function _oled_setDisplay *****************
 12972 ;; Defined at:
 12973 ;;		line 411 in file "../Includes/Drivers/SSD1306oLED.c"
 12974 ;; Parameters:    Size  Location     Type
 12975 ;;  displayType     1    wreg     enum E6789
 12976 ;; Auto vars:     Size  Location     Type
 12977 ;;  displayType     1    1[BANK0 ] enum E6789
 12978 ;; Return value:  Size  Location     Type
 12979 ;;		None               void
 12980 ;; Registers used:
 12981 ;;		wreg, status,2, cstack
 12982 ;; Tracked objects:
 12983 ;;		On entry : 0/0
 12984 ;;		On exit  : 0/0
 12985 ;;		Unchanged: 0/0
 12986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12987 ;;      Params:         0       0       0       0       0       0       0       0       0
 12988 ;;      Locals:         0       1       0       0       0       0       0       0       0
 12989 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12990 ;;      Totals:         0       1       0       0       0       0       0       0       0
 12991 ;;Total ram usage:        1 bytes
 12992 ;; Hardware stack levels used:    1
 12993 ;; Hardware stack levels required when called:   12
 12994 ;; This function calls:
 12995 ;;		_oled_writeCommand
 12996 ;; This function is called by:
 12997 ;;		_oled_init
 12998 ;; This function uses a non-reentrant model
 12999 ;;
 13000                           
 13001                           	psect	text32
 13002  006838                     __ptext32:
 13003                           	opt stack 0
 13004  006838                     _oled_setDisplay:
 13005                           	opt stack 17
 13006                           
 13007                           ; BSR set to: 0
 13008                           ;incstack = 0
 13009                           ;oled_setDisplay@displayType stored from wreg
 13010  006838  0100               	movlb	0	; () banked
 13011  00683A  6F61               	movwf	oled_setDisplay@displayType& (0+255),b
 13012                           
 13013                           ;SSD1306oLED.c: 413: if (displayType == Normal)
 13014  00683C  0100               	movlb	0	; () banked
 13015  00683E  5161               	movf	oled_setDisplay@displayType& (0+255),w,b
 13016  006840  0100               	movlb	0	; () banked
 13017  006842  A4D8               	btfss	status,2,c
 13018  006844  D007               	goto	l12032
 13019                           
 13020                           ; BSR set to: 0
 13021                           ;SSD1306oLED.c: 414: {
 13022                           ;SSD1306oLED.c: 415: oled_writeCommand(0xa0);
 13023  006846  0EA0               	movlw	160
 13024  006848  EC0D  F035         	call	_oled_writeCommand
 13025                           
 13026                           ;SSD1306oLED.c: 416: oled_writeCommand(0xc8);
 13027  00684C  0EC8               	movlw	200
 13028  00684E  EC0D  F035         	call	_oled_writeCommand
 13029                           
 13030                           ;SSD1306oLED.c: 417: }
 13031  006852  0012               	return	
 13032  006854                     l12032:
 13033                           
 13034                           ;SSD1306oLED.c: 418: else
 13035                           ;SSD1306oLED.c: 419: {
 13036                           ;SSD1306oLED.c: 420: oled_writeCommand(0xa1);
 13037  006854  0EA1               	movlw	161
 13038  006856  EC0D  F035         	call	_oled_writeCommand
 13039                           
 13040                           ;SSD1306oLED.c: 421: oled_writeCommand(0xc0);
 13041  00685A  0EC0               	movlw	192
 13042  00685C  EC0D  F035         	call	_oled_writeCommand
 13043  006860  0012               	return	
 13044  006862                     __end_of_oled_setDisplay:
 13045                           	opt stack 0
 13046                           tblptru	equ	0xFF8
 13047                           tblptrh	equ	0xFF7
 13048                           tblptrl	equ	0xFF6
 13049                           tablat	equ	0xFF5
 13050                           prodh	equ	0xFF4
 13051                           prodl	equ	0xFF3
 13052                           intcon	equ	0xFF2
 13053                           intcon3	equ	0xFF0
 13054                           postinc0	equ	0xFEE
 13055                           wreg	equ	0xFE8
 13056                           indf1	equ	0xFE7
 13057                           postdec1	equ	0xFE5
 13058                           fsr1h	equ	0xFE2
 13059                           fsr1l	equ	0xFE1
 13060                           indf2	equ	0xFDF
 13061                           fsr2h	equ	0xFDA
 13062                           fsr2l	equ	0xFD9
 13063                           status	equ	0xFD8
 13064                           
 13065 ;; *************** function _oled_devInit *****************
 13066 ;; Defined at:
 13067 ;;		line 388 in file "../Includes/Drivers/SSD1306oLED.c"
 13068 ;; Parameters:    Size  Location     Type
 13069 ;;		None
 13070 ;; Auto vars:     Size  Location     Type
 13071 ;;		None
 13072 ;; Return value:  Size  Location     Type
 13073 ;;		None               void
 13074 ;; Registers used:
 13075 ;;		wreg, status,2, status,0, cstack
 13076 ;; Tracked objects:
 13077 ;;		On entry : 0/0
 13078 ;;		On exit  : 0/0
 13079 ;;		Unchanged: 0/0
 13080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13081 ;;      Params:         0       0       0       0       0       0       0       0       0
 13082 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13083 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13084 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13085 ;;Total ram usage:        1 bytes
 13086 ;; Hardware stack levels used:    1
 13087 ;; Hardware stack levels required when called:   13
 13088 ;; This function calls:
 13089 ;;		_oled_initialDispayLine
 13090 ;;		_oled_powerControl
 13091 ;;		_oled_regulorResistorSelect
 13092 ;;		_oled_setContrastControlRegister
 13093 ;;		_oled_writeCommand
 13094 ;; This function is called by:
 13095 ;;		_oled_init
 13096 ;; This function uses a non-reentrant model
 13097 ;;
 13098                           
 13099                           	psect	text33
 13100  005AB4                     __ptext33:
 13101                           	opt stack 0
 13102  005AB4                     _oled_devInit:
 13103                           	opt stack 16
 13104                           
 13105                           ;SSD1306oLED.c: 390: oled_writeCommand(0xe2);
 13106                           
 13107                           ;incstack = 0
 13108  005AB4  0EE2               	movlw	226
 13109  005AB6  EC0D  F035         	call	_oled_writeCommand
 13110                           
 13111                           ;SSD1306oLED.c: 391: LATBbits.LATB2=1;
 13112  005ABA  848A               	bsf	3978,2,c	;volatile
 13113                           
 13114                           ;SSD1306oLED.c: 392: _delay((unsigned long)((200)*(48000000/4000000.0)));
 13115  005ABC  0E04               	movlw	4
 13116  005ABE  0100               	movlb	0	; () banked
 13117  005AC0  6F62               	movwf	??_oled_devInit& (0+255),b
 13118  005AC2  0E1C               	movlw	28
 13119  005AC4                     u14387:
 13120  005AC4  2EE8               	decfsz	wreg,f,c
 13121  005AC6  D7FE               	goto	u14387
 13122  005AC8  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 13123  005ACA  D7FC               	goto	u14387
 13124  005ACC  D000               	nop2	
 13125                           
 13126                           ;SSD1306oLED.c: 393: LATBbits.LATB2=0;
 13127  005ACE  948A               	bcf	3978,2,c	;volatile
 13128                           
 13129                           ;SSD1306oLED.c: 394: _delay((unsigned long)((2000)*(48000000/4000000.0)));
 13130  005AD0  0E20               	movlw	32
 13131  005AD2  0100               	movlb	0	; () banked
 13132  005AD4  6F62               	movwf	??_oled_devInit& (0+255),b
 13133  005AD6  0E2A               	movlw	42
 13134  005AD8                     u14397:
 13135  005AD8  2EE8               	decfsz	wreg,f,c
 13136  005ADA  D7FE               	goto	u14397
 13137  005ADC  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 13138  005ADE  D7FC               	goto	u14397
 13139                           
 13140                           ;SSD1306oLED.c: 395: LATBbits.LATB2=1;
 13141  005AE0  848A               	bsf	3978,2,c	;volatile
 13142                           
 13143                           ;SSD1306oLED.c: 396: _delay((unsigned long)((1000)*(48000000/4000000.0)));
 13144  005AE2  0E10               	movlw	16
 13145  005AE4  0100               	movlb	0	; () banked
 13146  005AE6  6F62               	movwf	??_oled_devInit& (0+255),b
 13147  005AE8  0E94               	movlw	148
 13148  005AEA                     u14407:
 13149  005AEA  2EE8               	decfsz	wreg,f,c
 13150  005AEC  D7FE               	goto	u14407
 13151  005AEE  2F62               	decfsz	??_oled_devInit& (0+255),f,b
 13152  005AF0  D7FC               	goto	u14407
 13153  005AF2  D000               	nop2	
 13154                           
 13155                           ;SSD1306oLED.c: 398: oled_writeCommand(0xa1);
 13156  005AF4  0EA1               	movlw	161
 13157  005AF6  EC0D  F035         	call	_oled_writeCommand
 13158                           
 13159                           ;SSD1306oLED.c: 399: oled_writeCommand(0xc0);
 13160  005AFA  0EC0               	movlw	192
 13161  005AFC  EC0D  F035         	call	_oled_writeCommand
 13162                           
 13163                           ;SSD1306oLED.c: 400: oled_writeCommand(0xa3);
 13164  005B00  0EA3               	movlw	163
 13165  005B02  EC0D  F035         	call	_oled_writeCommand
 13166                           
 13167                           ;SSD1306oLED.c: 401: oled_powerControl(0x07);
 13168  005B06  0E07               	movlw	7
 13169  005B08  EC65  F035         	call	_oled_powerControl
 13170                           
 13171                           ;SSD1306oLED.c: 402: oled_regulorResistorSelect(0x05);
 13172  005B0C  0E05               	movlw	5
 13173  005B0E  EC5D  F035         	call	_oled_regulorResistorSelect
 13174                           
 13175                           ;SSD1306oLED.c: 403: oled_setContrastControlRegister(Contrast_level);
 13176  005B12  0100               	movlb	0	; () banked
 13177  005B14  51F5               	movf	_Contrast_level& (0+255),w,b
 13178  005B16  EC2E  F035         	call	_oled_setContrastControlRegister
 13179                           
 13180                           ;SSD1306oLED.c: 404: oled_initialDispayLine(0x00);
 13181  005B1A  0E00               	movlw	0
 13182  005B1C  EC42  F035         	call	_oled_initialDispayLine
 13183                           
 13184                           ;SSD1306oLED.c: 405: oled_writeCommand(0xF8);
 13185  005B20  0EF8               	movlw	248
 13186  005B22  EC0D  F035         	call	_oled_writeCommand
 13187                           
 13188                           ;SSD1306oLED.c: 406: oled_writeCommand(0x00);
 13189  005B26  0E00               	movlw	0
 13190  005B28  EC0D  F035         	call	_oled_writeCommand
 13191                           
 13192                           ;SSD1306oLED.c: 407: oled_writeCommand(0xaf);
 13193  005B2C  0EAF               	movlw	175
 13194  005B2E  EC0D  F035         	call	_oled_writeCommand
 13195  005B32  0012               	return		;funcret
 13196  005B34                     __end_of_oled_devInit:
 13197                           	opt stack 0
 13198                           tblptru	equ	0xFF8
 13199                           tblptrh	equ	0xFF7
 13200                           tblptrl	equ	0xFF6
 13201                           tablat	equ	0xFF5
 13202                           prodh	equ	0xFF4
 13203                           prodl	equ	0xFF3
 13204                           intcon	equ	0xFF2
 13205                           intcon3	equ	0xFF0
 13206                           postinc0	equ	0xFEE
 13207                           wreg	equ	0xFE8
 13208                           indf1	equ	0xFE7
 13209                           postdec1	equ	0xFE5
 13210                           fsr1h	equ	0xFE2
 13211                           fsr1l	equ	0xFE1
 13212                           indf2	equ	0xFDF
 13213                           fsr2h	equ	0xFDA
 13214                           fsr2l	equ	0xFD9
 13215                           status	equ	0xFD8
 13216                           
 13217 ;; *************** function _oled_setContrastControlRegister *****************
 13218 ;; Defined at:
 13219 ;;		line 455 in file "../Includes/Drivers/SSD1306oLED.c"
 13220 ;; Parameters:    Size  Location     Type
 13221 ;;  mod             1    wreg     unsigned char 
 13222 ;; Auto vars:     Size  Location     Type
 13223 ;;  mod             1    1[BANK0 ] unsigned char 
 13224 ;; Return value:  Size  Location     Type
 13225 ;;		None               void
 13226 ;; Registers used:
 13227 ;;		wreg, status,2, cstack
 13228 ;; Tracked objects:
 13229 ;;		On entry : 0/0
 13230 ;;		On exit  : 0/0
 13231 ;;		Unchanged: 0/0
 13232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13233 ;;      Params:         0       0       0       0       0       0       0       0       0
 13234 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13235 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13236 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13237 ;;Total ram usage:        1 bytes
 13238 ;; Hardware stack levels used:    1
 13239 ;; Hardware stack levels required when called:   12
 13240 ;; This function calls:
 13241 ;;		_oled_writeCommand
 13242 ;; This function is called by:
 13243 ;;		_oled_devInit
 13244 ;; This function uses a non-reentrant model
 13245 ;;
 13246                           
 13247                           	psect	text34
 13248  006A5C                     __ptext34:
 13249                           	opt stack 0
 13250  006A5C                     _oled_setContrastControlRegister:
 13251                           	opt stack 16
 13252                           
 13253                           ;incstack = 0
 13254                           ;oled_setContrastControlRegister@mod stored from wreg
 13255  006A5C  0100               	movlb	0	; () banked
 13256  006A5E  6F61               	movwf	oled_setContrastControlRegister@mod& (0+255),b
 13257                           
 13258                           ;SSD1306oLED.c: 457: oled_writeCommand(0x81);
 13259  006A60  0E81               	movlw	129
 13260  006A62  EC0D  F035         	call	_oled_writeCommand
 13261                           
 13262                           ;SSD1306oLED.c: 458: oled_writeCommand(mod);
 13263  006A66  0100               	movlb	0	; () banked
 13264  006A68  5161               	movf	oled_setContrastControlRegister@mod& (0+255),w,b
 13265  006A6A  EC0D  F035         	call	_oled_writeCommand
 13266  006A6E  0012               	return	
 13267  006A70                     __end_of_oled_setContrastControlRegister:
 13268                           	opt stack 0
 13269                           tblptru	equ	0xFF8
 13270                           tblptrh	equ	0xFF7
 13271                           tblptrl	equ	0xFF6
 13272                           tablat	equ	0xFF5
 13273                           prodh	equ	0xFF4
 13274                           prodl	equ	0xFF3
 13275                           intcon	equ	0xFF2
 13276                           intcon3	equ	0xFF0
 13277                           postinc0	equ	0xFEE
 13278                           wreg	equ	0xFE8
 13279                           indf1	equ	0xFE7
 13280                           postdec1	equ	0xFE5
 13281                           fsr1h	equ	0xFE2
 13282                           fsr1l	equ	0xFE1
 13283                           indf2	equ	0xFDF
 13284                           fsr2h	equ	0xFDA
 13285                           fsr2l	equ	0xFD9
 13286                           status	equ	0xFD8
 13287                           
 13288 ;; *************** function _oled_regulorResistorSelect *****************
 13289 ;; Defined at:
 13290 ;;		line 483 in file "../Includes/Drivers/SSD1306oLED.c"
 13291 ;; Parameters:    Size  Location     Type
 13292 ;;  r               1    wreg     unsigned char 
 13293 ;; Auto vars:     Size  Location     Type
 13294 ;;  r               1    1[BANK0 ] unsigned char 
 13295 ;; Return value:  Size  Location     Type
 13296 ;;		None               void
 13297 ;; Registers used:
 13298 ;;		wreg, status,2, status,0, cstack
 13299 ;; Tracked objects:
 13300 ;;		On entry : 0/0
 13301 ;;		On exit  : 0/0
 13302 ;;		Unchanged: 0/0
 13303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13304 ;;      Params:         0       0       0       0       0       0       0       0       0
 13305 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13306 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13307 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13308 ;;Total ram usage:        1 bytes
 13309 ;; Hardware stack levels used:    1
 13310 ;; Hardware stack levels required when called:   12
 13311 ;; This function calls:
 13312 ;;		_oled_writeCommand
 13313 ;; This function is called by:
 13314 ;;		_oled_devInit
 13315 ;; This function uses a non-reentrant model
 13316 ;;
 13317                           
 13318                           	psect	text35
 13319  006ABA                     __ptext35:
 13320                           	opt stack 0
 13321  006ABA                     _oled_regulorResistorSelect:
 13322                           	opt stack 16
 13323                           
 13324                           ;incstack = 0
 13325                           ;oled_regulorResistorSelect@r stored from wreg
 13326  006ABA  0100               	movlb	0	; () banked
 13327  006ABC  6F61               	movwf	oled_regulorResistorSelect@r& (0+255),b
 13328                           
 13329                           ;SSD1306oLED.c: 485: oled_writeCommand((0x20|r));
 13330  006ABE  0100               	movlb	0	; () banked
 13331  006AC0  5161               	movf	oled_regulorResistorSelect@r& (0+255),w,b
 13332  006AC2  0920               	iorlw	32
 13333  006AC4  EC0D  F035         	call	_oled_writeCommand
 13334  006AC8  0012               	return	
 13335  006ACA                     __end_of_oled_regulorResistorSelect:
 13336                           	opt stack 0
 13337                           tblptru	equ	0xFF8
 13338                           tblptrh	equ	0xFF7
 13339                           tblptrl	equ	0xFF6
 13340                           tablat	equ	0xFF5
 13341                           prodh	equ	0xFF4
 13342                           prodl	equ	0xFF3
 13343                           intcon	equ	0xFF2
 13344                           intcon3	equ	0xFF0
 13345                           postinc0	equ	0xFEE
 13346                           wreg	equ	0xFE8
 13347                           indf1	equ	0xFE7
 13348                           postdec1	equ	0xFE5
 13349                           fsr1h	equ	0xFE2
 13350                           fsr1l	equ	0xFE1
 13351                           indf2	equ	0xFDF
 13352                           fsr2h	equ	0xFDA
 13353                           fsr2l	equ	0xFD9
 13354                           status	equ	0xFD8
 13355                           
 13356 ;; *************** function _oled_powerControl *****************
 13357 ;; Defined at:
 13358 ;;		line 470 in file "../Includes/Drivers/SSD1306oLED.c"
 13359 ;; Parameters:    Size  Location     Type
 13360 ;;  vol             1    wreg     unsigned char 
 13361 ;; Auto vars:     Size  Location     Type
 13362 ;;  vol             1    1[BANK0 ] unsigned char 
 13363 ;; Return value:  Size  Location     Type
 13364 ;;		None               void
 13365 ;; Registers used:
 13366 ;;		wreg, status,2, status,0, cstack
 13367 ;; Tracked objects:
 13368 ;;		On entry : 0/0
 13369 ;;		On exit  : 0/0
 13370 ;;		Unchanged: 0/0
 13371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13372 ;;      Params:         0       0       0       0       0       0       0       0       0
 13373 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13374 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13375 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13376 ;;Total ram usage:        1 bytes
 13377 ;; Hardware stack levels used:    1
 13378 ;; Hardware stack levels required when called:   12
 13379 ;; This function calls:
 13380 ;;		_oled_writeCommand
 13381 ;; This function is called by:
 13382 ;;		_oled_devInit
 13383 ;; This function uses a non-reentrant model
 13384 ;;
 13385                           
 13386                           	psect	text36
 13387  006ACA                     __ptext36:
 13388                           	opt stack 0
 13389  006ACA                     _oled_powerControl:
 13390                           	opt stack 16
 13391                           
 13392                           ;incstack = 0
 13393                           ;oled_powerControl@vol stored from wreg
 13394  006ACA  0100               	movlb	0	; () banked
 13395  006ACC  6F61               	movwf	oled_powerControl@vol& (0+255),b
 13396                           
 13397                           ;SSD1306oLED.c: 472: oled_writeCommand((0x28|vol));
 13398  006ACE  0100               	movlb	0	; () banked
 13399  006AD0  5161               	movf	oled_powerControl@vol& (0+255),w,b
 13400  006AD2  0928               	iorlw	40
 13401  006AD4  EC0D  F035         	call	_oled_writeCommand
 13402  006AD8  0012               	return	
 13403  006ADA                     __end_of_oled_powerControl:
 13404                           	opt stack 0
 13405                           tblptru	equ	0xFF8
 13406                           tblptrh	equ	0xFF7
 13407                           tblptrl	equ	0xFF6
 13408                           tablat	equ	0xFF5
 13409                           prodh	equ	0xFF4
 13410                           prodl	equ	0xFF3
 13411                           intcon	equ	0xFF2
 13412                           intcon3	equ	0xFF0
 13413                           postinc0	equ	0xFEE
 13414                           wreg	equ	0xFE8
 13415                           indf1	equ	0xFE7
 13416                           postdec1	equ	0xFE5
 13417                           fsr1h	equ	0xFE2
 13418                           fsr1l	equ	0xFE1
 13419                           indf2	equ	0xFDF
 13420                           fsr2h	equ	0xFDA
 13421                           fsr2l	equ	0xFD9
 13422                           status	equ	0xFD8
 13423                           
 13424 ;; *************** function _oled_initialDispayLine *****************
 13425 ;; Defined at:
 13426 ;;		line 463 in file "../Includes/Drivers/SSD1306oLED.c"
 13427 ;; Parameters:    Size  Location     Type
 13428 ;;  line            1    wreg     unsigned char 
 13429 ;; Auto vars:     Size  Location     Type
 13430 ;;  line            1    1[BANK0 ] unsigned char 
 13431 ;; Return value:  Size  Location     Type
 13432 ;;		None               void
 13433 ;; Registers used:
 13434 ;;		wreg, status,2, status,0, cstack
 13435 ;; Tracked objects:
 13436 ;;		On entry : 0/0
 13437 ;;		On exit  : 0/0
 13438 ;;		Unchanged: 0/0
 13439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13440 ;;      Params:         0       0       0       0       0       0       0       0       0
 13441 ;;      Locals:         0       1       0       0       0       0       0       0       0
 13442 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13443 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13444 ;;Total ram usage:        1 bytes
 13445 ;; Hardware stack levels used:    1
 13446 ;; Hardware stack levels required when called:   12
 13447 ;; This function calls:
 13448 ;;		_oled_writeCommand
 13449 ;; This function is called by:
 13450 ;;		_oled_devInit
 13451 ;; This function uses a non-reentrant model
 13452 ;;
 13453                           
 13454                           	psect	text37
 13455  006A84                     __ptext37:
 13456                           	opt stack 0
 13457  006A84                     _oled_initialDispayLine:
 13458                           	opt stack 16
 13459                           
 13460                           ;incstack = 0
 13461                           ;oled_initialDispayLine@line stored from wreg
 13462  006A84  0100               	movlb	0	; () banked
 13463  006A86  6F61               	movwf	oled_initialDispayLine@line& (0+255),b
 13464                           
 13465                           ;SSD1306oLED.c: 465: line|=0x40;
 13466  006A88  0100               	movlb	0	; () banked
 13467  006A8A  8D61               	bsf	oled_initialDispayLine@line& (0+255),6,b
 13468                           
 13469                           ; BSR set to: 0
 13470                           ;SSD1306oLED.c: 466: oled_writeCommand(line);
 13471  006A8C  0100               	movlb	0	; () banked
 13472  006A8E  5161               	movf	oled_initialDispayLine@line& (0+255),w,b
 13473  006A90  EC0D  F035         	call	_oled_writeCommand
 13474  006A94  0012               	return	
 13475  006A96                     __end_of_oled_initialDispayLine:
 13476                           	opt stack 0
 13477                           tblptru	equ	0xFF8
 13478                           tblptrh	equ	0xFF7
 13479                           tblptrl	equ	0xFF6
 13480                           tablat	equ	0xFF5
 13481                           prodh	equ	0xFF4
 13482                           prodl	equ	0xFF3
 13483                           intcon	equ	0xFF2
 13484                           intcon3	equ	0xFF0
 13485                           postinc0	equ	0xFEE
 13486                           wreg	equ	0xFE8
 13487                           indf1	equ	0xFE7
 13488                           postdec1	equ	0xFE5
 13489                           fsr1h	equ	0xFE2
 13490                           fsr1l	equ	0xFE1
 13491                           indf2	equ	0xFDF
 13492                           fsr2h	equ	0xFDA
 13493                           fsr2l	equ	0xFD9
 13494                           status	equ	0xFD8
 13495                           
 13496 ;; *************** function _oled_displayOff *****************
 13497 ;; Defined at:
 13498 ;;		line 425 in file "../Includes/Drivers/SSD1306oLED.c"
 13499 ;; Parameters:    Size  Location     Type
 13500 ;;  state           1    wreg     unsigned char 
 13501 ;; Auto vars:     Size  Location     Type
 13502 ;;  state           1    0[COMRAM] unsigned char 
 13503 ;; Return value:  Size  Location     Type
 13504 ;;		None               void
 13505 ;; Registers used:
 13506 ;;		wreg, cstack
 13507 ;; Tracked objects:
 13508 ;;		On entry : 0/0
 13509 ;;		On exit  : 0/0
 13510 ;;		Unchanged: 0/0
 13511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13512 ;;      Params:         0       0       0       0       0       0       0       0       0
 13513 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13514 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13515 ;;      Totals:         0       0       0       0       0       0       0       0       0
 13516 ;;Total ram usage:        0 bytes
 13517 ;; Hardware stack levels used:    1
 13518 ;; Hardware stack levels required when called:   12
 13519 ;; This function calls:
 13520 ;;		_oled_writeCommand
 13521 ;; This function is called by:
 13522 ;;		_moteApp_GoToSleep
 13523 ;; This function uses a non-reentrant model
 13524 ;;
 13525                           
 13526                           	psect	text38
 13527  006AE8                     __ptext38:
 13528                           	opt stack 0
 13529  006AE8                     _oled_displayOff:
 13530                           	opt stack 15
 13531                           
 13532                           ;SSD1306oLED.c: 427: oled_writeCommand(0xae);
 13533                           
 13534                           ;incstack = 0
 13535  006AE8  0EAE               	movlw	174
 13536  006AEA  EC0D  F035         	call	_oled_writeCommand
 13537                           
 13538                           ;SSD1306oLED.c: 428: oled_writeCommand(0xa5);
 13539  006AEE  0EA5               	movlw	165
 13540  006AF0  EC0D  F035         	call	_oled_writeCommand
 13541  006AF4  0012               	return		;funcret
 13542  006AF6                     __end_of_oled_displayOff:
 13543                           	opt stack 0
 13544                           tblptru	equ	0xFF8
 13545                           tblptrh	equ	0xFF7
 13546                           tblptrl	equ	0xFF6
 13547                           tablat	equ	0xFF5
 13548                           prodh	equ	0xFF4
 13549                           prodl	equ	0xFF3
 13550                           intcon	equ	0xFF2
 13551                           intcon3	equ	0xFF0
 13552                           postinc0	equ	0xFEE
 13553                           wreg	equ	0xFE8
 13554                           indf1	equ	0xFE7
 13555                           postdec1	equ	0xFE5
 13556                           fsr1h	equ	0xFE2
 13557                           fsr1l	equ	0xFE1
 13558                           indf2	equ	0xFDF
 13559                           fsr2h	equ	0xFDA
 13560                           fsr2l	equ	0xFD9
 13561                           status	equ	0xFD8
 13562                           
 13563 ;; *************** function _moduleSleep *****************
 13564 ;; Defined at:
 13565 ;;		line 176 in file "../Includes/Board/MOTEapp.c"
 13566 ;; Parameters:    Size  Location     Type
 13567 ;;		None
 13568 ;; Auto vars:     Size  Location     Type
 13569 ;;		None
 13570 ;; Return value:  Size  Location     Type
 13571 ;;		None               void
 13572 ;; Registers used:
 13573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13574 ;; Tracked objects:
 13575 ;;		On entry : 0/0
 13576 ;;		On exit  : 0/0
 13577 ;;		Unchanged: 0/0
 13578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13579 ;;      Params:         0       0       0       0       0       0       0       0       0
 13580 ;;      Locals:         0       0       0       0       0       0       0       0       0
 13581 ;;      Temps:          0       1       0       0       0       0       0       0       0
 13582 ;;      Totals:         0       1       0       0       0       0       0       0       0
 13583 ;;Total ram usage:        1 bytes
 13584 ;; Hardware stack levels used:    1
 13585 ;; Hardware stack levels required when called:   14
 13586 ;; This function calls:
 13587 ;;		_sendCommand
 13588 ;; This function is called by:
 13589 ;;		_moteApp_GoToSleep
 13590 ;; This function uses a non-reentrant model
 13591 ;;
 13592                           
 13593                           	psect	text39
 13594  00688C                     __ptext39:
 13595                           	opt stack 0
 13596  00688C                     _moduleSleep:
 13597                           	opt stack 13
 13598                           
 13599                           ;MOTEapp.c: 178: sendCommand("sys sleep 999999999");
 13600                           
 13601                           ;incstack = 0
 13602  00688C  0E46               	movlw	low STR_22
 13603  00688E  0100               	movlb	0	; () banked
 13604  006890  6F61               	movwf	sendCommand@string& (0+255),b
 13605  006892  0E7A               	movlw	high STR_22
 13606  006894  0100               	movlb	0	; () banked
 13607  006896  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13608  006898  ECD6  F033         	call	_sendCommand	;wreg free
 13609  00689C                     l360:
 13610  00689C  B89D               	btfsc	3997,4,c	;volatile
 13611  00689E  D7FE               	goto	l360
 13612                           
 13613                           ;MOTEapp.c: 181: _delay((unsigned long)((16)*(48000000/4000.0)));
 13614  0068A0  0EFA               	movlw	250
 13615  0068A2  0100               	movlb	0	; () banked
 13616  0068A4  6F63               	movwf	??_moduleSleep& (0+255),b
 13617  0068A6  0E58               	movlw	88
 13618  0068A8                     u14417:
 13619  0068A8  2EE8               	decfsz	wreg,f,c
 13620  0068AA  D7FE               	goto	u14417
 13621  0068AC  2F63               	decfsz	??_moduleSleep& (0+255),f,b
 13622  0068AE  D7FC               	goto	u14417
 13623  0068B0  D000               	nop2	
 13624  0068B2  0012               	return		;funcret
 13625  0068B4                     __end_of_moduleSleep:
 13626                           	opt stack 0
 13627                           tblptru	equ	0xFF8
 13628                           tblptrh	equ	0xFF7
 13629                           tblptrl	equ	0xFF6
 13630                           tablat	equ	0xFF5
 13631                           prodh	equ	0xFF4
 13632                           prodl	equ	0xFF3
 13633                           intcon	equ	0xFF2
 13634                           intcon3	equ	0xFF0
 13635                           postinc0	equ	0xFEE
 13636                           wreg	equ	0xFE8
 13637                           indf1	equ	0xFE7
 13638                           postdec1	equ	0xFE5
 13639                           fsr1h	equ	0xFE2
 13640                           fsr1l	equ	0xFE1
 13641                           indf2	equ	0xFDF
 13642                           fsr2h	equ	0xFDA
 13643                           fsr2l	equ	0xFD9
 13644                           status	equ	0xFD8
 13645                           
 13646 ;; *************** function _moduleResync *****************
 13647 ;; Defined at:
 13648 ;;		line 135 in file "../Includes/Board/MOTEapp.c"
 13649 ;; Parameters:    Size  Location     Type
 13650 ;;		None
 13651 ;; Auto vars:     Size  Location     Type
 13652 ;;  escapeCounte    2    5[BANK0 ] unsigned int 
 13653 ;;  escapeEvent     1    7[BANK0 ] unsigned char 
 13654 ;; Return value:  Size  Location     Type
 13655 ;;		None               void
 13656 ;; Registers used:
 13657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13658 ;; Tracked objects:
 13659 ;;		On entry : 0/0
 13660 ;;		On exit  : 0/0
 13661 ;;		Unchanged: 0/0
 13662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13663 ;;      Params:         0       0       0       0       0       0       0       0       0
 13664 ;;      Locals:         0       3       0       0       0       0       0       0       0
 13665 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13666 ;;      Totals:         0       3       0       0       0       0       0       0       0
 13667 ;;Total ram usage:        3 bytes
 13668 ;; Hardware stack levels used:    1
 13669 ;; Hardware stack levels required when called:   14
 13670 ;; This function calls:
 13671 ;;		_MOTEapp_getModuleResponse
 13672 ;;		_moteApp_delayms
 13673 ;;		_sendCommand
 13674 ;; This function is called by:
 13675 ;;		_main
 13676 ;;		_moteApp_GoToSleep
 13677 ;; This function uses a non-reentrant model
 13678 ;;
 13679                           
 13680                           	psect	text40
 13681  005896                     __ptext40:
 13682                           	opt stack 0
 13683  005896                     _moduleResync:
 13684                           	opt stack 13
 13685                           
 13686                           ;MOTEapp.c: 137: bool escapeEvent = 0;
 13687                           
 13688                           ;incstack = 0
 13689  005896  0E00               	movlw	0
 13690  005898  0100               	movlb	0	; () banked
 13691  00589A  6F67               	movwf	moduleResync@escapeEvent& (0+255),b
 13692                           
 13693                           ;MOTEapp.c: 138: uint16_t escapeCounter = 0;
 13694  00589C  0E00               	movlw	0
 13695  00589E  0100               	movlb	0	; () banked
 13696  0058A0  6F66               	movwf	(moduleResync@escapeCounter+1)& (0+255),b
 13697  0058A2  0E00               	movlw	0
 13698  0058A4  6F65               	movwf	moduleResync@escapeCounter& (0+255),b
 13699                           
 13700                           ; BSR set to: 0
 13701                           ;MOTEapp.c: 146: TXSTAbits.TXEN = 0;
 13702  0058A6  9AAC               	bcf	4012,5,c	;volatile
 13703                           
 13704                           ; BSR set to: 0
 13705                           ;MOTEapp.c: 147: LATCbits.LATC6 = 0;
 13706  0058A8  9C8B               	bcf	3979,6,c	;volatile
 13707                           
 13708                           ; BSR set to: 0
 13709                           ;MOTEapp.c: 148: moteApp_delayms(10);
 13710  0058AA  0E00               	movlw	0
 13711  0058AC  0100               	movlb	0	; () banked
 13712  0058AE  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 13713  0058B0  0E0A               	movlw	10
 13714  0058B2  6F60               	movwf	moteApp_delayms@length& (0+255),b
 13715  0058B4  ECFF  F032         	call	_moteApp_delayms	;wreg free
 13716                           
 13717                           ;MOTEapp.c: 149: TXSTAbits.TXEN = 1;
 13718  0058B8  8AAC               	bsf	4012,5,c	;volatile
 13719                           
 13720                           ;MOTEapp.c: 150: moteApp_delayms(5);
 13721  0058BA  0E00               	movlw	0
 13722  0058BC  0100               	movlb	0	; () banked
 13723  0058BE  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 13724  0058C0  0E05               	movlw	5
 13725  0058C2  6F60               	movwf	moteApp_delayms@length& (0+255),b
 13726  0058C4  ECFF  F032         	call	_moteApp_delayms	;wreg free
 13727                           
 13728                           ;MOTEapp.c: 152: TXREG = 0x55;
 13729  0058C8  0E55               	movlw	85
 13730  0058CA  6EAD               	movwf	4013,c	;volatile
 13731  0058CC                     l342:
 13732  0058CC  A2AC               	btfss	4012,1,c	;volatile
 13733  0058CE  D7FE               	goto	l342
 13734                           
 13735                           ;MOTEapp.c: 156: sendCommand("z");
 13736  0058D0  0EFD               	movlw	low STR_21
 13737  0058D2  0100               	movlb	0	; () banked
 13738  0058D4  6F61               	movwf	sendCommand@string& (0+255),b
 13739  0058D6  0E7F               	movlw	high STR_21
 13740  0058D8  0100               	movlb	0	; () banked
 13741  0058DA  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 13742  0058DC  ECD6  F033         	call	_sendCommand	;wreg free
 13743                           
 13744                           ;MOTEapp.c: 158: moteApp_delayms(40);
 13745  0058E0  0E00               	movlw	0
 13746  0058E2  0100               	movlb	0	; () banked
 13747  0058E4  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 13748  0058E6  0E28               	movlw	40
 13749  0058E8  6F60               	movwf	moteApp_delayms@length& (0+255),b
 13750  0058EA  ECFF  F032         	call	_moteApp_delayms	;wreg free
 13751                           
 13752                           ;MOTEapp.c: 159: while (escapeEvent)
 13753  0058EE  D013               	goto	l345
 13754  0058F0                     l12060:
 13755                           
 13756                           ;MOTEapp.c: 160: {
 13757                           ;MOTEapp.c: 161: if(MOTEapp_getModuleResponse())
 13758  0058F0  EC8E  F02E         	call	_MOTEapp_getModuleResponse	;wreg free
 13759  0058F4  0900               	iorlw	0
 13760  0058F6  A4D8               	btfss	status,2,c
 13761  0058F8  D00B               	goto	l12066
 13762                           
 13763                           ;MOTEapp.c: 163: else if (++escapeCounter > 5000)
 13764                           
 13765                           ; BSR set to: 0
 13766                           
 13767                           ;MOTEapp.c: 162: escapeEvent = 1;
 13768  0058FA  0100               	movlb	0	; () banked
 13769  0058FC  4B65               	infsnz	moduleResync@escapeCounter& (0+255),f,b
 13770  0058FE  2B66               	incf	(moduleResync@escapeCounter+1)& (0+255),f,b
 13771  005900  0E89               	movlw	137
 13772  005902  0100               	movlb	0	; () banked
 13773  005904  5D65               	subwf	moduleResync@escapeCounter& (0+255),w,b
 13774  005906  0E13               	movlw	19
 13775  005908  0100               	movlb	0	; () banked
 13776  00590A  5966               	subwfb	(moduleResync@escapeCounter+1)& (0+255),w,b
 13777  00590C  A0D8               	btfss	status,0,c
 13778  00590E  D003               	goto	l345
 13779  005910                     l12066:
 13780                           
 13781                           ; BSR set to: 0
 13782                           ;MOTEapp.c: 164: escapeEvent = 1;
 13783  005910  0E01               	movlw	1
 13784  005912  0100               	movlb	0	; () banked
 13785  005914  6F67               	movwf	moduleResync@escapeEvent& (0+255),b
 13786  005916                     l345:
 13787  005916  0100               	movlb	0	; () banked
 13788  005918  5167               	movf	moduleResync@escapeEvent& (0+255),w,b
 13789  00591A  0100               	movlb	0	; () banked
 13790  00591C  B4D8               	btfsc	status,2,c
 13791  00591E  0012               	return	
 13792  005920  D7E7               	goto	l12060
 13793  005922                     __end_of_moduleResync:
 13794                           	opt stack 0
 13795                           tblptru	equ	0xFF8
 13796                           tblptrh	equ	0xFF7
 13797                           tblptrl	equ	0xFF6
 13798                           tablat	equ	0xFF5
 13799                           prodh	equ	0xFF4
 13800                           prodl	equ	0xFF3
 13801                           intcon	equ	0xFF2
 13802                           intcon3	equ	0xFF0
 13803                           postinc0	equ	0xFEE
 13804                           wreg	equ	0xFE8
 13805                           indf1	equ	0xFE7
 13806                           postdec1	equ	0xFE5
 13807                           fsr1h	equ	0xFE2
 13808                           fsr1l	equ	0xFE1
 13809                           indf2	equ	0xFDF
 13810                           fsr2h	equ	0xFDA
 13811                           fsr2l	equ	0xFD9
 13812                           status	equ	0xFD8
 13813                           
 13814 ;; *************** function _MOTEapp_getModuleResponse *****************
 13815 ;; Defined at:
 13816 ;;		line 1136 in file "../Includes/Board/MOTEapp.c"
 13817 ;; Parameters:    Size  Location     Type
 13818 ;;		None
 13819 ;; Auto vars:     Size  Location     Type
 13820 ;;  bufferByte      1    2[BANK0 ] unsigned char 
 13821 ;;  terminatorRe    1    1[BANK0 ] unsigned char 
 13822 ;; Return value:  Size  Location     Type
 13823 ;;                  1    wreg      unsigned char 
 13824 ;; Registers used:
 13825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13826 ;; Tracked objects:
 13827 ;;		On entry : 0/0
 13828 ;;		On exit  : 0/0
 13829 ;;		Unchanged: 0/0
 13830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 13831 ;;      Params:         0       0       0       0       0       0       0       0       0
 13832 ;;      Locals:         0       2       0       0       0       0       0       0       0
 13833 ;;      Temps:          0       0       0       0       0       0       0       0       0
 13834 ;;      Totals:         0       2       0       0       0       0       0       0       0
 13835 ;;Total ram usage:        2 bytes
 13836 ;; Hardware stack levels used:    1
 13837 ;; Hardware stack levels required when called:   12
 13838 ;; This function calls:
 13839 ;;		_EUSART_Read
 13840 ;; This function is called by:
 13841 ;;		_moduleResync
 13842 ;;		_moteHandler
 13843 ;;		_moteApp_setSensorsInput
 13844 ;;		_moteApp_getTempValue
 13845 ;;		_moteApp_getLightValue
 13846 ;; This function uses a non-reentrant model
 13847 ;;
 13848                           
 13849                           	psect	text41
 13850  005D1C                     __ptext41:
 13851                           	opt stack 0
 13852  005D1C                     _MOTEapp_getModuleResponse:
 13853                           	opt stack 15
 13854                           
 13855                           ;MOTEapp.c: 1138: bool terminatorReceived = 0;
 13856                           
 13857                           ; BSR set to: 0
 13858                           ;incstack = 0
 13859  005D1C  0E00               	movlw	0
 13860  005D1E  0100               	movlb	0	; () banked
 13861  005D20  6F61               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 13862                           
 13863                           ;MOTEapp.c: 1140: if ((eusartRxCount))
 13864  005D22  5053               	movf	_eusartRxCount,w,c	;volatile
 13865  005D24  B4D8               	btfsc	status,2,c
 13866  005D26  D031               	goto	l11976
 13867                           
 13868                           ; BSR set to: 0
 13869                           ;MOTEapp.c: 1141: {
 13870                           ;MOTEapp.c: 1142: uint8_t bufferByte = 0;
 13871  005D28  0E00               	movlw	0
 13872  005D2A  0100               	movlb	0	; () banked
 13873  005D2C  6F62               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 13874                           
 13875                           ; BSR set to: 0
 13876                           ;MOTEapp.c: 1143: bufferByte = EUSART_Read();
 13877  005D2E  ECE5  F031         	call	_EUSART_Read	;wreg free
 13878  005D32  0100               	movlb	0	; () banked
 13879  005D34  6F62               	movwf	MOTEapp_getModuleResponse@bufferByte& (0+255),b
 13880                           
 13881                           ; BSR set to: 0
 13882                           ;MOTEapp.c: 1145: if (bufferByte == 0x0D)
 13883  005D36  0E0D               	movlw	13
 13884  005D38  0100               	movlb	0	; () banked
 13885  005D3A  1962               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13886  005D3C  A4D8               	btfss	status,2,c
 13887  005D3E  D010               	goto	l11968
 13888                           
 13889                           ; BSR set to: 0
 13890                           ;MOTEapp.c: 1146: {
 13891                           ;MOTEapp.c: 1147: moduleResonseBuffer[moduleBufferIndex] = 0x00;
 13892  005D40  5055               	movf	_moduleBufferIndex,w,c
 13893  005D42  0D01               	mullw	1
 13894  005D44  0E5C               	movlw	low _moduleResonseBuffer
 13895  005D46  24F3               	addwf	prodl,w,c
 13896  005D48  6ED9               	movwf	fsr2l,c
 13897  005D4A  0E01               	movlw	high _moduleResonseBuffer
 13898  005D4C  20F4               	addwfc	prodh,w,c
 13899  005D4E  6EDA               	movwf	fsr2h,c
 13900  005D50  0E00               	movlw	0
 13901  005D52  6EDF               	movwf	indf2,c
 13902                           
 13903                           ; BSR set to: 0
 13904                           ;MOTEapp.c: 1148: terminatorReceived = 1;
 13905  005D54  0E01               	movlw	1
 13906  005D56  0100               	movlb	0	; () banked
 13907  005D58  6F61               	movwf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),b
 13908                           
 13909                           ; BSR set to: 0
 13910                           ;MOTEapp.c: 1149: moduleBufferIndex = 0;
 13911  005D5A  0E00               	movlw	0
 13912  005D5C  6E55               	movwf	_moduleBufferIndex,c
 13913                           
 13914                           ;MOTEapp.c: 1150: }
 13915  005D5E  D015               	goto	l11976
 13916  005D60                     l11968:
 13917                           
 13918                           ; BSR set to: 0
 13919                           ;MOTEapp.c: 1151: else if ( (bufferByte == 0x00) || (bufferByte == 0x0A) )
 13920  005D60  0100               	movlb	0	; () banked
 13921  005D62  5162               	movf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13922  005D64  0100               	movlb	0	; () banked
 13923  005D66  B4D8               	btfsc	status,2,c
 13924  005D68  D010               	goto	l11976
 13925                           
 13926                           ; BSR set to: 0
 13927  005D6A  0E0A               	movlw	10
 13928  005D6C  0100               	movlb	0	; () banked
 13929  005D6E  1962               	xorwf	MOTEapp_getModuleResponse@bufferByte& (0+255),w,b
 13930  005D70  B4D8               	btfsc	status,2,c
 13931  005D72  D00B               	goto	l11976
 13932                           
 13933                           ; BSR set to: 0
 13934                           ;MOTEapp.c: 1155: else
 13935                           ;MOTEapp.c: 1156: {
 13936                           ;MOTEapp.c: 1157: moduleResonseBuffer[moduleBufferIndex] = bufferByte;
 13937                           
 13938                           ; BSR set to: 0
 13939                           
 13940                           ; BSR set to: 0
 13941                           ;MOTEapp.c: 1152: {
 13942                           ;MOTEapp.c: 1154: }
 13943  005D74  5055               	movf	_moduleBufferIndex,w,c
 13944  005D76  0D01               	mullw	1
 13945  005D78  0E5C               	movlw	low _moduleResonseBuffer
 13946  005D7A  24F3               	addwf	prodl,w,c
 13947  005D7C  6ED9               	movwf	fsr2l,c
 13948  005D7E  0E01               	movlw	high _moduleResonseBuffer
 13949  005D80  20F4               	addwfc	prodh,w,c
 13950  005D82  6EDA               	movwf	fsr2h,c
 13951  005D84  C062  FFDF         	movff	MOTEapp_getModuleResponse@bufferByte,indf2
 13952                           
 13953                           ; BSR set to: 0
 13954                           ;MOTEapp.c: 1159: moduleBufferIndex++;
 13955  005D88  2A55               	incf	_moduleBufferIndex,f,c
 13956  005D8A                     l11976:
 13957                           
 13958                           ; BSR set to: 0
 13959                           ;MOTEapp.c: 1160: }
 13960                           ;MOTEapp.c: 1161: }
 13961                           ;MOTEapp.c: 1162: return terminatorReceived;
 13962  005D8A  0100               	movlb	0	; () banked
 13963  005D8C  5161               	movf	MOTEapp_getModuleResponse@terminatorReceived& (0+255),w,b
 13964  005D8E  0012               	return	
 13965  005D90                     __end_of_MOTEapp_getModuleResponse:
 13966                           	opt stack 0
 13967                           tblptru	equ	0xFF8
 13968                           tblptrh	equ	0xFF7
 13969                           tblptrl	equ	0xFF6
 13970                           tablat	equ	0xFF5
 13971                           prodh	equ	0xFF4
 13972                           prodl	equ	0xFF3
 13973                           intcon	equ	0xFF2
 13974                           intcon3	equ	0xFF0
 13975                           postinc0	equ	0xFEE
 13976                           wreg	equ	0xFE8
 13977                           indf1	equ	0xFE7
 13978                           postdec1	equ	0xFE5
 13979                           fsr1h	equ	0xFE2
 13980                           fsr1l	equ	0xFE1
 13981                           indf2	equ	0xFDF
 13982                           fsr2h	equ	0xFDA
 13983                           fsr2l	equ	0xFD9
 13984                           status	equ	0xFD8
 13985                           
 13986 ;; *************** function _EUSART_FlushBuffer *****************
 13987 ;; Defined at:
 13988 ;;		line 202 in file "../Includes/MccGenerated/eusart.c"
 13989 ;; Parameters:    Size  Location     Type
 13990 ;;		None
 13991 ;; Auto vars:     Size  Location     Type
 13992 ;;  index           1    0[BANK0 ] unsigned char 
 13993 ;; Return value:  Size  Location     Type
 13994 ;;		None               void
 13995 ;; Registers used:
 13996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13997 ;; Tracked objects:
 13998 ;;		On entry : 0/0
 13999 ;;		On exit  : 0/0
 14000 ;;		Unchanged: 0/0
 14001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14002 ;;      Params:         0       0       0       0       0       0       0       0       0
 14003 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14004 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14005 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14006 ;;Total ram usage:        1 bytes
 14007 ;; Hardware stack levels used:    1
 14008 ;; Hardware stack levels required when called:   11
 14009 ;; This function calls:
 14010 ;;		Nothing
 14011 ;; This function is called by:
 14012 ;;		_test_powerup
 14013 ;;		_moteApp_GoToSleep
 14014 ;; This function uses a non-reentrant model
 14015 ;;
 14016                           
 14017                           	psect	text42
 14018  0062E6                     __ptext42:
 14019                           	opt stack 0
 14020  0062E6                     _EUSART_FlushBuffer:
 14021                           	opt stack 18
 14022                           
 14023                           ;eusart.c: 204: uint8_t index;
 14024                           ;eusart.c: 205: for (index=0; index < 64; index++)
 14025                           
 14026                           ; BSR set to: 0
 14027                           ;incstack = 0
 14028  0062E6  0E00               	movlw	0
 14029  0062E8  0100               	movlb	0	; () banked
 14030  0062EA  6F60               	movwf	EUSART_FlushBuffer@index& (0+255),b
 14031  0062EC                     l12086:
 14032                           
 14033                           ; BSR set to: 0
 14034  0062EC  0E3F               	movlw	63
 14035  0062EE  0100               	movlb	0	; () banked
 14036  0062F0  6560               	cpfsgt	EUSART_FlushBuffer@index& (0+255),b
 14037  0062F2  D001               	goto	l12090
 14038  0062F4  D00E               	goto	l12096
 14039  0062F6                     l12090:
 14040                           
 14041                           ; BSR set to: 0
 14042                           ;eusart.c: 206: {
 14043                           ;eusart.c: 207: eusartRxBuffer[index] = 0;
 14044  0062F6  0100               	movlb	0	; () banked
 14045  0062F8  5160               	movf	EUSART_FlushBuffer@index& (0+255),w,b
 14046  0062FA  0D01               	mullw	1
 14047  0062FC  0E00               	movlw	low _eusartRxBuffer
 14048  0062FE  24F3               	addwf	prodl,w,c
 14049  006300  6ED9               	movwf	fsr2l,c
 14050  006302  0E02               	movlw	high _eusartRxBuffer
 14051  006304  20F4               	addwfc	prodh,w,c
 14052  006306  6EDA               	movwf	fsr2h,c
 14053  006308  0E00               	movlw	0
 14054  00630A  6EDF               	movwf	indf2,c
 14055                           
 14056                           ; BSR set to: 0
 14057  00630C  0100               	movlb	0	; () banked
 14058  00630E  2B60               	incf	EUSART_FlushBuffer@index& (0+255),f,b
 14059  006310  D7ED               	goto	l12086
 14060  006312                     l12096:
 14061                           
 14062                           ; BSR set to: 0
 14063                           ;eusart.c: 208: }
 14064                           ;eusart.c: 209: eusartRxHead = 0;
 14065  006312  0E00               	movlw	0
 14066  006314  0100               	movlb	0	; () banked
 14067  006316  6FDF               	movwf	_eusartRxHead& (0+255),b
 14068                           
 14069                           ;eusart.c: 210: eusartRxTail = 0;
 14070  006318  0E00               	movlw	0
 14071  00631A  0100               	movlb	0	; () banked
 14072  00631C  6FE0               	movwf	_eusartRxTail& (0+255),b
 14073                           
 14074                           ;eusart.c: 211: eusartRxCount = 0;
 14075  00631E  0E00               	movlw	0
 14076  006320  6E53               	movwf	_eusartRxCount,c	;volatile
 14077                           
 14078                           ; BSR set to: 0
 14079                           ;eusart.c: 213: PIE1bits.TXIE = 0;
 14080  006322  989D               	bcf	3997,4,c	;volatile
 14081                           
 14082                           ;eusart.c: 214: eusartTxHead = 0;
 14083  006324  0E00               	movlw	0
 14084  006326  0100               	movlb	0	; () banked
 14085  006328  6FE1               	movwf	_eusartTxHead& (0+255),b
 14086                           
 14087                           ;eusart.c: 215: eusartTxTail = 0;
 14088  00632A  0E00               	movlw	0
 14089  00632C  0100               	movlb	0	; () banked
 14090  00632E  6FE2               	movwf	_eusartTxTail& (0+255),b
 14091                           
 14092                           ;eusart.c: 216: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 14093  006330  0E40               	movlw	64
 14094  006332  6E54               	movwf	_eusartTxBufferRemaining,c	;volatile
 14095                           
 14096                           ; BSR set to: 0
 14097  006334  0012               	return		;funcret
 14098  006336                     __end_of_EUSART_FlushBuffer:
 14099                           	opt stack 0
 14100                           tblptru	equ	0xFF8
 14101                           tblptrh	equ	0xFF7
 14102                           tblptrl	equ	0xFF6
 14103                           tablat	equ	0xFF5
 14104                           prodh	equ	0xFF4
 14105                           prodl	equ	0xFF3
 14106                           intcon	equ	0xFF2
 14107                           intcon3	equ	0xFF0
 14108                           postinc0	equ	0xFEE
 14109                           wreg	equ	0xFE8
 14110                           indf1	equ	0xFE7
 14111                           postdec1	equ	0xFE5
 14112                           fsr1h	equ	0xFE2
 14113                           fsr1l	equ	0xFE1
 14114                           indf2	equ	0xFDF
 14115                           fsr2h	equ	0xFDA
 14116                           fsr2l	equ	0xFD9
 14117                           status	equ	0xFD8
 14118                           
 14119 ;; *************** function _TMR2_ReadTimer *****************
 14120 ;; Defined at:
 14121 ;;		line 87 in file "../Includes/MccGenerated/tmr2.c"
 14122 ;; Parameters:    Size  Location     Type
 14123 ;;		None
 14124 ;; Auto vars:     Size  Location     Type
 14125 ;;  readVal         1    0[BANK0 ] unsigned char 
 14126 ;; Return value:  Size  Location     Type
 14127 ;;                  1    wreg      unsigned char 
 14128 ;; Registers used:
 14129 ;;		wreg, status,2
 14130 ;; Tracked objects:
 14131 ;;		On entry : 0/0
 14132 ;;		On exit  : 0/0
 14133 ;;		Unchanged: 0/0
 14134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14135 ;;      Params:         0       0       0       0       0       0       0       0       0
 14136 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14137 ;;      Temps:          0       0       0       0       0       0       0       0       0
 14138 ;;      Totals:         0       1       0       0       0       0       0       0       0
 14139 ;;Total ram usage:        1 bytes
 14140 ;; Hardware stack levels used:    1
 14141 ;; Hardware stack levels required when called:   11
 14142 ;; This function calls:
 14143 ;;		Nothing
 14144 ;; This function is called by:
 14145 ;;		_moteRunningProcess
 14146 ;; This function uses a non-reentrant model
 14147 ;;
 14148                           
 14149                           	psect	text43
 14150  006B10                     __ptext43:
 14151                           	opt stack 0
 14152  006B10                     _TMR2_ReadTimer:
 14153                           	opt stack 17
 14154                           
 14155                           ;tmr2.c: 88: uint8_t readVal;
 14156                           ;tmr2.c: 90: readVal = TMR2;
 14157                           
 14158                           ; BSR set to: 0
 14159                           ;incstack = 0
 14160  006B10  CFBC F060          	movff	4028,TMR2_ReadTimer@readVal	;volatile
 14161                           
 14162                           ;tmr2.c: 92: return readVal;
 14163  006B14  0100               	movlb	0	; () banked
 14164  006B16  5160               	movf	TMR2_ReadTimer@readVal& (0+255),w,b
 14165  006B18  0012               	return	
 14166  006B1A                     __end_of_TMR2_ReadTimer:
 14167                           	opt stack 0
 14168                           tblptru	equ	0xFF8
 14169                           tblptrh	equ	0xFF7
 14170                           tblptrl	equ	0xFF6
 14171                           tablat	equ	0xFF5
 14172                           prodh	equ	0xFF4
 14173                           prodl	equ	0xFF3
 14174                           intcon	equ	0xFF2
 14175                           intcon3	equ	0xFF0
 14176                           postinc0	equ	0xFEE
 14177                           wreg	equ	0xFE8
 14178                           indf1	equ	0xFE7
 14179                           postdec1	equ	0xFE5
 14180                           fsr1h	equ	0xFE2
 14181                           fsr1l	equ	0xFE1
 14182                           indf2	equ	0xFDF
 14183                           fsr2h	equ	0xFDA
 14184                           fsr2l	equ	0xFD9
 14185                           status	equ	0xFD8
 14186                           
 14187 ;; *************** function _MOTEapp_SetDataRateSetting *****************
 14188 ;; Defined at:
 14189 ;;		line 996 in file "../Includes/Board/MOTEapp.c"
 14190 ;; Parameters:    Size  Location     Type
 14191 ;;  dr              1    wreg     unsigned char 
 14192 ;; Auto vars:     Size  Location     Type
 14193 ;;  dr              1    4[BANK0 ] unsigned char 
 14194 ;; Return value:  Size  Location     Type
 14195 ;;		None               void
 14196 ;; Registers used:
 14197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14198 ;; Tracked objects:
 14199 ;;		On entry : 0/0
 14200 ;;		On exit  : 0/0
 14201 ;;		Unchanged: 0/0
 14202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 14203 ;;      Params:         0       0       0       0       0       0       0       0       0
 14204 ;;      Locals:         0       1       0       0       0       0       0       0       0
 14205 ;;      Temps:          0       1       0       0       0       0       0       0       0
 14206 ;;      Totals:         0       2       0       0       0       0       0       0       0
 14207 ;;Total ram usage:        2 bytes
 14208 ;; Hardware stack levels used:    1
 14209 ;; Hardware stack levels required when called:   14
 14210 ;; This function calls:
 14211 ;;		_sendCommand
 14212 ;; This function is called by:
 14213 ;;		_moteRunningProcess
 14214 ;; This function uses a non-reentrant model
 14215 ;;
 14216                           
 14217                           	psect	text44
 14218  002322                     __ptext44:
 14219                           	opt stack 0
 14220  002322                     _MOTEapp_SetDataRateSetting:
 14221                           	opt stack 14
 14222                           
 14223                           ; BSR set to: 0
 14224                           ;incstack = 0
 14225                           ;MOTEapp_SetDataRateSetting@dr stored from wreg
 14226  002322  0100               	movlb	0	; () banked
 14227  002324  6F64               	movwf	MOTEapp_SetDataRateSetting@dr& (0+255),b
 14228                           
 14229                           ;MOTEapp.c: 998: if (dr != 8)
 14230  002326  0E08               	movlw	8
 14231  002328  0100               	movlb	0	; () banked
 14232  00232A  1964               	xorwf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 14233  00232C  B4D8               	btfsc	status,2,c
 14234  00232E  D207               	goto	l13248
 14235                           
 14236                           ; BSR set to: 0
 14237                           ;MOTEapp.c: 999: {
 14238                           ;MOTEapp.c: 1000: sendCommand("mac set adr off");
 14239  002330  0EBD               	movlw	low STR_162
 14240  002332  0100               	movlb	0	; () banked
 14241  002334  6F61               	movwf	sendCommand@string& (0+255),b
 14242  002336  0E7C               	movlw	high STR_162
 14243  002338  0100               	movlb	0	; () banked
 14244  00233A  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14245  00233C  ECD6  F033         	call	_sendCommand	;wreg free
 14246                           
 14247                           ;MOTEapp.c: 1001: _delay((unsigned long)((16)*(48000000/4000.0)));
 14248  002340  0EFA               	movlw	250
 14249  002342  0100               	movlb	0	; () banked
 14250  002344  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14251  002346  0E58               	movlw	88
 14252  002348                     u14427:
 14253  002348  2EE8               	decfsz	wreg,f,c
 14254  00234A  D7FE               	goto	u14427
 14255  00234C  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14256  00234E  D7FC               	goto	u14427
 14257  002350  D000               	nop2	
 14258                           
 14259                           ;MOTEapp.c: 1002: _delay((unsigned long)((16)*(48000000/4000.0)));
 14260  002352  0EFA               	movlw	250
 14261  002354  0100               	movlb	0	; () banked
 14262  002356  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14263  002358  0E58               	movlw	88
 14264  00235A                     u14437:
 14265  00235A  2EE8               	decfsz	wreg,f,c
 14266  00235C  D7FE               	goto	u14437
 14267  00235E  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14268  002360  D7FC               	goto	u14437
 14269  002362  D000               	nop2	
 14270                           
 14271                           ;MOTEapp.c: 1003: _delay((unsigned long)((16)*(48000000/4000.0)));
 14272  002364  0EFA               	movlw	250
 14273  002366  0100               	movlb	0	; () banked
 14274  002368  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14275  00236A  0E58               	movlw	88
 14276  00236C                     u14447:
 14277  00236C  2EE8               	decfsz	wreg,f,c
 14278  00236E  D7FE               	goto	u14447
 14279  002370  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14280  002372  D7FC               	goto	u14447
 14281  002374  D000               	nop2	
 14282                           
 14283                           ;MOTEapp.c: 1004: sendCommand("mac set pwridx 5");
 14284  002376  0EA1               	movlw	low STR_163
 14285  002378  0100               	movlb	0	; () banked
 14286  00237A  6F61               	movwf	sendCommand@string& (0+255),b
 14287  00237C  0E7B               	movlw	high STR_163
 14288  00237E  0100               	movlb	0	; () banked
 14289  002380  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14290  002382  ECD6  F033         	call	_sendCommand	;wreg free
 14291                           
 14292                           ;MOTEapp.c: 1005: _delay((unsigned long)((16)*(48000000/4000.0)));
 14293  002386  0EFA               	movlw	250
 14294  002388  0100               	movlb	0	; () banked
 14295  00238A  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14296  00238C  0E58               	movlw	88
 14297  00238E                     u14457:
 14298  00238E  2EE8               	decfsz	wreg,f,c
 14299  002390  D7FE               	goto	u14457
 14300  002392  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14301  002394  D7FC               	goto	u14457
 14302  002396  D000               	nop2	
 14303                           
 14304                           ;MOTEapp.c: 1006: _delay((unsigned long)((16)*(48000000/4000.0)));
 14305  002398  0EFA               	movlw	250
 14306  00239A  0100               	movlb	0	; () banked
 14307  00239C  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14308  00239E  0E58               	movlw	88
 14309  0023A0                     u14467:
 14310  0023A0  2EE8               	decfsz	wreg,f,c
 14311  0023A2  D7FE               	goto	u14467
 14312  0023A4  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14313  0023A6  D7FC               	goto	u14467
 14314  0023A8  D000               	nop2	
 14315                           
 14316                           ;MOTEapp.c: 1007: _delay((unsigned long)((16)*(48000000/4000.0)));
 14317  0023AA  0EFA               	movlw	250
 14318  0023AC  0100               	movlb	0	; () banked
 14319  0023AE  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14320  0023B0  0E58               	movlw	88
 14321  0023B2                     u14477:
 14322  0023B2  2EE8               	decfsz	wreg,f,c
 14323  0023B4  D7FE               	goto	u14477
 14324  0023B6  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14325  0023B8  D7FC               	goto	u14477
 14326  0023BA  D000               	nop2	
 14327                           
 14328                           ;MOTEapp.c: 1009: }
 14329                           ;MOTEapp.c: 1011: switch (dr)
 14330  0023BC  D1C0               	goto	l13248
 14331  0023BE                     l13180:
 14332                           
 14333                           ;MOTEapp.c: 1014: sendCommand("mac set dr 0");
 14334  0023BE  0E8C               	movlw	low STR_164
 14335  0023C0  0100               	movlb	0	; () banked
 14336  0023C2  6F61               	movwf	sendCommand@string& (0+255),b
 14337  0023C4  0E7D               	movlw	high STR_164
 14338  0023C6  0100               	movlb	0	; () banked
 14339  0023C8  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14340  0023CA  ECD6  F033         	call	_sendCommand	;wreg free
 14341                           
 14342                           ;MOTEapp.c: 1015: _delay((unsigned long)((16)*(48000000/4000.0)));
 14343  0023CE  0EFA               	movlw	250
 14344  0023D0  0100               	movlb	0	; () banked
 14345  0023D2  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14346  0023D4  0E58               	movlw	88
 14347  0023D6                     u14487:
 14348  0023D6  2EE8               	decfsz	wreg,f,c
 14349  0023D8  D7FE               	goto	u14487
 14350  0023DA  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14351  0023DC  D7FC               	goto	u14487
 14352  0023DE  D000               	nop2	
 14353                           
 14354                           ;MOTEapp.c: 1016: _delay((unsigned long)((16)*(48000000/4000.0)));
 14355  0023E0  0EFA               	movlw	250
 14356  0023E2  0100               	movlb	0	; () banked
 14357  0023E4  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14358  0023E6  0E58               	movlw	88
 14359  0023E8                     u14497:
 14360  0023E8  2EE8               	decfsz	wreg,f,c
 14361  0023EA  D7FE               	goto	u14497
 14362  0023EC  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14363  0023EE  D7FC               	goto	u14497
 14364  0023F0  D000               	nop2	
 14365                           
 14366                           ;MOTEapp.c: 1017: _delay((unsigned long)((16)*(48000000/4000.0)));
 14367  0023F2  0EFA               	movlw	250
 14368  0023F4  0100               	movlb	0	; () banked
 14369  0023F6  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14370  0023F8  0E58               	movlw	88
 14371  0023FA                     u14507:
 14372  0023FA  2EE8               	decfsz	wreg,f,c
 14373  0023FC  D7FE               	goto	u14507
 14374  0023FE  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14375  002400  D7FC               	goto	u14507
 14376  002402  D000               	nop2	
 14377                           
 14378                           ;MOTEapp.c: 1018: sendCommand("mac set pwridx 1");
 14379  002404  0E5D               	movlw	low STR_165
 14380  002406  0100               	movlb	0	; () banked
 14381  002408  6F61               	movwf	sendCommand@string& (0+255),b
 14382  00240A  0E7B               	movlw	high STR_165
 14383  00240C  0100               	movlb	0	; () banked
 14384  00240E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14385  002410  ECD6  F033         	call	_sendCommand	;wreg free
 14386                           
 14387                           ;MOTEapp.c: 1019: _delay((unsigned long)((16)*(48000000/4000.0)));
 14388  002414  0EFA               	movlw	250
 14389  002416  0100               	movlb	0	; () banked
 14390  002418  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14391  00241A  0E58               	movlw	88
 14392  00241C                     u14517:
 14393  00241C  2EE8               	decfsz	wreg,f,c
 14394  00241E  D7FE               	goto	u14517
 14395  002420  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14396  002422  D7FC               	goto	u14517
 14397  002424  D000               	nop2	
 14398                           
 14399                           ;MOTEapp.c: 1020: _delay((unsigned long)((16)*(48000000/4000.0)));
 14400  002426  0EFA               	movlw	250
 14401  002428  0100               	movlb	0	; () banked
 14402  00242A  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14403  00242C  0E58               	movlw	88
 14404  00242E                     u14527:
 14405  00242E  2EE8               	decfsz	wreg,f,c
 14406  002430  D7FE               	goto	u14527
 14407  002432  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14408  002434  D7FC               	goto	u14527
 14409  002436  D000               	nop2	
 14410                           
 14411                           ;MOTEapp.c: 1021: _delay((unsigned long)((16)*(48000000/4000.0)));
 14412  002438  0EFA               	movlw	250
 14413  00243A  0100               	movlb	0	; () banked
 14414  00243C  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14415  00243E  0E58               	movlw	88
 14416  002440                     u14537:
 14417  002440  2EE8               	decfsz	wreg,f,c
 14418  002442  D7FE               	goto	u14537
 14419  002444  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14420  002446  D7FC               	goto	u14537
 14421  002448  D15D               	goto	L10
 14422  00244A                     l13190:
 14423                           
 14424                           ;MOTEapp.c: 1024: sendCommand("mac set dr 1");
 14425  00244A  0E99               	movlw	low STR_166
 14426  00244C  0100               	movlb	0	; () banked
 14427  00244E  6F61               	movwf	sendCommand@string& (0+255),b
 14428  002450  0E7D               	movlw	high STR_166
 14429  002452  0100               	movlb	0	; () banked
 14430  002454  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14431  002456  ECD6  F033         	call	_sendCommand	;wreg free
 14432                           
 14433                           ;MOTEapp.c: 1025: _delay((unsigned long)((16)*(48000000/4000.0)));
 14434  00245A  0EFA               	movlw	250
 14435  00245C  0100               	movlb	0	; () banked
 14436  00245E  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14437  002460  0E58               	movlw	88
 14438  002462                     u14547:
 14439  002462  2EE8               	decfsz	wreg,f,c
 14440  002464  D7FE               	goto	u14547
 14441  002466  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14442  002468  D7FC               	goto	u14547
 14443  00246A  D000               	nop2	
 14444                           
 14445                           ;MOTEapp.c: 1026: _delay((unsigned long)((16)*(48000000/4000.0)));
 14446  00246C  0EFA               	movlw	250
 14447  00246E  0100               	movlb	0	; () banked
 14448  002470  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14449  002472  0E58               	movlw	88
 14450  002474                     u14557:
 14451  002474  2EE8               	decfsz	wreg,f,c
 14452  002476  D7FE               	goto	u14557
 14453  002478  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14454  00247A  D7FC               	goto	u14557
 14455  00247C  D000               	nop2	
 14456                           
 14457                           ;MOTEapp.c: 1027: _delay((unsigned long)((16)*(48000000/4000.0)));
 14458  00247E  0EFA               	movlw	250
 14459  002480  0100               	movlb	0	; () banked
 14460  002482  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14461  002484  0E58               	movlw	88
 14462  002486                     u14567:
 14463  002486  2EE8               	decfsz	wreg,f,c
 14464  002488  D7FE               	goto	u14567
 14465  00248A  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14466  00248C  D7FC               	goto	u14567
 14467  00248E  D000               	nop2	
 14468                           
 14469                           ;MOTEapp.c: 1028: sendCommand("mac set pwridx 1");
 14470  002490  0E5D               	movlw	low STR_165
 14471  002492  0100               	movlb	0	; () banked
 14472  002494  6F61               	movwf	sendCommand@string& (0+255),b
 14473  002496  0E7B               	movlw	high STR_165
 14474  002498  0100               	movlb	0	; () banked
 14475  00249A  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14476  00249C  ECD6  F033         	call	_sendCommand	;wreg free
 14477                           
 14478                           ;MOTEapp.c: 1029: _delay((unsigned long)((16)*(48000000/4000.0)));
 14479  0024A0  0EFA               	movlw	250
 14480  0024A2  0100               	movlb	0	; () banked
 14481  0024A4  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14482  0024A6  0E58               	movlw	88
 14483  0024A8                     u14577:
 14484  0024A8  2EE8               	decfsz	wreg,f,c
 14485  0024AA  D7FE               	goto	u14577
 14486  0024AC  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14487  0024AE  D7FC               	goto	u14577
 14488  0024B0  D000               	nop2	
 14489                           
 14490                           ;MOTEapp.c: 1030: _delay((unsigned long)((16)*(48000000/4000.0)));
 14491  0024B2  0EFA               	movlw	250
 14492  0024B4  0100               	movlb	0	; () banked
 14493  0024B6  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14494  0024B8  0E58               	movlw	88
 14495  0024BA                     u14587:
 14496  0024BA  2EE8               	decfsz	wreg,f,c
 14497  0024BC  D7FE               	goto	u14587
 14498  0024BE  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14499  0024C0  D7FC               	goto	u14587
 14500  0024C2  D000               	nop2	
 14501                           
 14502                           ;MOTEapp.c: 1031: _delay((unsigned long)((16)*(48000000/4000.0)));
 14503  0024C4  0EFA               	movlw	250
 14504  0024C6  0100               	movlb	0	; () banked
 14505  0024C8  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14506  0024CA  0E58               	movlw	88
 14507  0024CC                     u14597:
 14508  0024CC  2EE8               	decfsz	wreg,f,c
 14509  0024CE  D7FE               	goto	u14597
 14510  0024D0  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14511  0024D2  D7FC               	goto	u14597
 14512  0024D4  D117               	goto	L10
 14513  0024D6                     l13200:
 14514                           
 14515                           ;MOTEapp.c: 1034: sendCommand("mac set dr 2");
 14516  0024D6  0EA6               	movlw	low STR_168
 14517  0024D8  0100               	movlb	0	; () banked
 14518  0024DA  6F61               	movwf	sendCommand@string& (0+255),b
 14519  0024DC  0E7D               	movlw	high STR_168
 14520  0024DE  0100               	movlb	0	; () banked
 14521  0024E0  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14522  0024E2  ECD6  F033         	call	_sendCommand	;wreg free
 14523                           
 14524                           ;MOTEapp.c: 1035: _delay((unsigned long)((16)*(48000000/4000.0)));
 14525  0024E6  0EFA               	movlw	250
 14526  0024E8  0100               	movlb	0	; () banked
 14527  0024EA  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14528  0024EC  0E58               	movlw	88
 14529  0024EE                     u14607:
 14530  0024EE  2EE8               	decfsz	wreg,f,c
 14531  0024F0  D7FE               	goto	u14607
 14532  0024F2  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14533  0024F4  D7FC               	goto	u14607
 14534  0024F6  D000               	nop2	
 14535                           
 14536                           ;MOTEapp.c: 1036: _delay((unsigned long)((16)*(48000000/4000.0)));
 14537  0024F8  0EFA               	movlw	250
 14538  0024FA  0100               	movlb	0	; () banked
 14539  0024FC  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14540  0024FE  0E58               	movlw	88
 14541  002500                     u14617:
 14542  002500  2EE8               	decfsz	wreg,f,c
 14543  002502  D7FE               	goto	u14617
 14544  002504  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14545  002506  D7FC               	goto	u14617
 14546  002508  D000               	nop2	
 14547                           
 14548                           ;MOTEapp.c: 1037: _delay((unsigned long)((16)*(48000000/4000.0)));
 14549  00250A  0EFA               	movlw	250
 14550  00250C  0100               	movlb	0	; () banked
 14551  00250E  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14552  002510  0E58               	movlw	88
 14553  002512                     u14627:
 14554  002512  2EE8               	decfsz	wreg,f,c
 14555  002514  D7FE               	goto	u14627
 14556  002516  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14557  002518  D7FC               	goto	u14627
 14558  00251A  D000               	nop2	
 14559                           
 14560                           ;MOTEapp.c: 1038: sendCommand("mac set pwridx 2");
 14561  00251C  0E6E               	movlw	low STR_169
 14562  00251E  0100               	movlb	0	; () banked
 14563  002520  6F61               	movwf	sendCommand@string& (0+255),b
 14564  002522  0E7B               	movlw	high STR_169
 14565  002524  0100               	movlb	0	; () banked
 14566  002526  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14567  002528  ECD6  F033         	call	_sendCommand	;wreg free
 14568                           
 14569                           ;MOTEapp.c: 1039: _delay((unsigned long)((16)*(48000000/4000.0)));
 14570  00252C  0EFA               	movlw	250
 14571  00252E  0100               	movlb	0	; () banked
 14572  002530  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14573  002532  0E58               	movlw	88
 14574  002534                     u14637:
 14575  002534  2EE8               	decfsz	wreg,f,c
 14576  002536  D7FE               	goto	u14637
 14577  002538  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14578  00253A  D7FC               	goto	u14637
 14579  00253C  D000               	nop2	
 14580                           
 14581                           ;MOTEapp.c: 1040: _delay((unsigned long)((16)*(48000000/4000.0)));
 14582  00253E  0EFA               	movlw	250
 14583  002540  0100               	movlb	0	; () banked
 14584  002542  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14585  002544  0E58               	movlw	88
 14586  002546                     u14647:
 14587  002546  2EE8               	decfsz	wreg,f,c
 14588  002548  D7FE               	goto	u14647
 14589  00254A  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14590  00254C  D7FC               	goto	u14647
 14591  00254E  D000               	nop2	
 14592                           
 14593                           ;MOTEapp.c: 1041: _delay((unsigned long)((16)*(48000000/4000.0)));
 14594  002550  0EFA               	movlw	250
 14595  002552  0100               	movlb	0	; () banked
 14596  002554  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14597  002556  0E58               	movlw	88
 14598  002558                     u14657:
 14599  002558  2EE8               	decfsz	wreg,f,c
 14600  00255A  D7FE               	goto	u14657
 14601  00255C  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14602  00255E  D7FC               	goto	u14657
 14603  002560  D0D1               	goto	L10
 14604  002562                     l13210:
 14605                           
 14606                           ;MOTEapp.c: 1044: sendCommand("mac set dr 3");
 14607  002562  0EB3               	movlw	low STR_170
 14608  002564  0100               	movlb	0	; () banked
 14609  002566  6F61               	movwf	sendCommand@string& (0+255),b
 14610  002568  0E7D               	movlw	high STR_170
 14611  00256A  0100               	movlb	0	; () banked
 14612  00256C  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14613  00256E  ECD6  F033         	call	_sendCommand	;wreg free
 14614                           
 14615                           ;MOTEapp.c: 1045: _delay((unsigned long)((16)*(48000000/4000.0)));
 14616  002572  0EFA               	movlw	250
 14617  002574  0100               	movlb	0	; () banked
 14618  002576  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14619  002578  0E58               	movlw	88
 14620  00257A                     u14667:
 14621  00257A  2EE8               	decfsz	wreg,f,c
 14622  00257C  D7FE               	goto	u14667
 14623  00257E  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14624  002580  D7FC               	goto	u14667
 14625  002582  D000               	nop2	
 14626                           
 14627                           ;MOTEapp.c: 1046: _delay((unsigned long)((16)*(48000000/4000.0)));
 14628  002584  0EFA               	movlw	250
 14629  002586  0100               	movlb	0	; () banked
 14630  002588  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14631  00258A  0E58               	movlw	88
 14632  00258C                     u14677:
 14633  00258C  2EE8               	decfsz	wreg,f,c
 14634  00258E  D7FE               	goto	u14677
 14635  002590  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14636  002592  D7FC               	goto	u14677
 14637  002594  D000               	nop2	
 14638                           
 14639                           ;MOTEapp.c: 1047: _delay((unsigned long)((16)*(48000000/4000.0)));
 14640  002596  0EFA               	movlw	250
 14641  002598  0100               	movlb	0	; () banked
 14642  00259A  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14643  00259C  0E58               	movlw	88
 14644  00259E                     u14687:
 14645  00259E  2EE8               	decfsz	wreg,f,c
 14646  0025A0  D7FE               	goto	u14687
 14647  0025A2  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14648  0025A4  D7FC               	goto	u14687
 14649  0025A6  D000               	nop2	
 14650                           
 14651                           ;MOTEapp.c: 1048: sendCommand("mac set pwridx 3");
 14652  0025A8  0E7F               	movlw	low STR_171
 14653  0025AA  0100               	movlb	0	; () banked
 14654  0025AC  6F61               	movwf	sendCommand@string& (0+255),b
 14655  0025AE  0E7B               	movlw	high STR_171
 14656  0025B0  0100               	movlb	0	; () banked
 14657  0025B2  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14658  0025B4  ECD6  F033         	call	_sendCommand	;wreg free
 14659                           
 14660                           ;MOTEapp.c: 1049: _delay((unsigned long)((16)*(48000000/4000.0)));
 14661  0025B8  0EFA               	movlw	250
 14662  0025BA  0100               	movlb	0	; () banked
 14663  0025BC  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14664  0025BE  0E58               	movlw	88
 14665  0025C0                     u14697:
 14666  0025C0  2EE8               	decfsz	wreg,f,c
 14667  0025C2  D7FE               	goto	u14697
 14668  0025C4  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14669  0025C6  D7FC               	goto	u14697
 14670  0025C8  D000               	nop2	
 14671                           
 14672                           ;MOTEapp.c: 1050: _delay((unsigned long)((16)*(48000000/4000.0)));
 14673  0025CA  0EFA               	movlw	250
 14674  0025CC  0100               	movlb	0	; () banked
 14675  0025CE  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14676  0025D0  0E58               	movlw	88
 14677  0025D2                     u14707:
 14678  0025D2  2EE8               	decfsz	wreg,f,c
 14679  0025D4  D7FE               	goto	u14707
 14680  0025D6  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14681  0025D8  D7FC               	goto	u14707
 14682  0025DA  D000               	nop2	
 14683                           
 14684                           ;MOTEapp.c: 1051: _delay((unsigned long)((16)*(48000000/4000.0)));
 14685  0025DC  0EFA               	movlw	250
 14686  0025DE  0100               	movlb	0	; () banked
 14687  0025E0  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14688  0025E2  0E58               	movlw	88
 14689  0025E4                     u14717:
 14690  0025E4  2EE8               	decfsz	wreg,f,c
 14691  0025E6  D7FE               	goto	u14717
 14692  0025E8  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14693  0025EA  D7FC               	goto	u14717
 14694  0025EC  D08B               	goto	L10
 14695  0025EE                     l13220:
 14696                           
 14697                           ;MOTEapp.c: 1054: sendCommand("mac set dr 4");
 14698  0025EE  0EC0               	movlw	low STR_172
 14699  0025F0  0100               	movlb	0	; () banked
 14700  0025F2  6F61               	movwf	sendCommand@string& (0+255),b
 14701  0025F4  0E7D               	movlw	high STR_172
 14702  0025F6  0100               	movlb	0	; () banked
 14703  0025F8  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14704  0025FA  ECD6  F033         	call	_sendCommand	;wreg free
 14705                           
 14706                           ;MOTEapp.c: 1055: _delay((unsigned long)((16)*(48000000/4000.0)));
 14707  0025FE  0EFA               	movlw	250
 14708  002600  0100               	movlb	0	; () banked
 14709  002602  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14710  002604  0E58               	movlw	88
 14711  002606                     u14727:
 14712  002606  2EE8               	decfsz	wreg,f,c
 14713  002608  D7FE               	goto	u14727
 14714  00260A  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14715  00260C  D7FC               	goto	u14727
 14716  00260E  D000               	nop2	
 14717                           
 14718                           ;MOTEapp.c: 1056: _delay((unsigned long)((16)*(48000000/4000.0)));
 14719  002610  0EFA               	movlw	250
 14720  002612  0100               	movlb	0	; () banked
 14721  002614  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14722  002616  0E58               	movlw	88
 14723  002618                     u14737:
 14724  002618  2EE8               	decfsz	wreg,f,c
 14725  00261A  D7FE               	goto	u14737
 14726  00261C  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14727  00261E  D7FC               	goto	u14737
 14728  002620  D000               	nop2	
 14729                           
 14730                           ;MOTEapp.c: 1057: _delay((unsigned long)((16)*(48000000/4000.0)));
 14731  002622  0EFA               	movlw	250
 14732  002624  0100               	movlb	0	; () banked
 14733  002626  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14734  002628  0E58               	movlw	88
 14735  00262A                     u14747:
 14736  00262A  2EE8               	decfsz	wreg,f,c
 14737  00262C  D7FE               	goto	u14747
 14738  00262E  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14739  002630  D7FC               	goto	u14747
 14740  002632  D000               	nop2	
 14741                           
 14742                           ;MOTEapp.c: 1058: sendCommand("mac set pwridx 4");
 14743  002634  0E90               	movlw	low STR_173
 14744  002636  0100               	movlb	0	; () banked
 14745  002638  6F61               	movwf	sendCommand@string& (0+255),b
 14746  00263A  0E7B               	movlw	high STR_173
 14747  00263C  0100               	movlb	0	; () banked
 14748  00263E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14749  002640  ECD6  F033         	call	_sendCommand	;wreg free
 14750                           
 14751                           ;MOTEapp.c: 1059: _delay((unsigned long)((16)*(48000000/4000.0)));
 14752  002644  0EFA               	movlw	250
 14753  002646  0100               	movlb	0	; () banked
 14754  002648  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14755  00264A  0E58               	movlw	88
 14756  00264C                     u14757:
 14757  00264C  2EE8               	decfsz	wreg,f,c
 14758  00264E  D7FE               	goto	u14757
 14759  002650  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14760  002652  D7FC               	goto	u14757
 14761  002654  D000               	nop2	
 14762                           
 14763                           ;MOTEapp.c: 1060: _delay((unsigned long)((16)*(48000000/4000.0)));
 14764  002656  0EFA               	movlw	250
 14765  002658  0100               	movlb	0	; () banked
 14766  00265A  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14767  00265C  0E58               	movlw	88
 14768  00265E                     u14767:
 14769  00265E  2EE8               	decfsz	wreg,f,c
 14770  002660  D7FE               	goto	u14767
 14771  002662  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14772  002664  D7FC               	goto	u14767
 14773  002666  D000               	nop2	
 14774                           
 14775                           ;MOTEapp.c: 1061: _delay((unsigned long)((16)*(48000000/4000.0)));
 14776  002668  0EFA               	movlw	250
 14777  00266A  0100               	movlb	0	; () banked
 14778  00266C  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14779  00266E  0E58               	movlw	88
 14780  002670                     u14777:
 14781  002670  2EE8               	decfsz	wreg,f,c
 14782  002672  D7FE               	goto	u14777
 14783  002674  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14784  002676  D7FC               	goto	u14777
 14785  002678  D045               	goto	L10
 14786  00267A                     l13230:
 14787                           
 14788                           ;MOTEapp.c: 1064: sendCommand("mac set dr 5");
 14789  00267A  0ECD               	movlw	low STR_174
 14790  00267C  0100               	movlb	0	; () banked
 14791  00267E  6F61               	movwf	sendCommand@string& (0+255),b
 14792  002680  0E7D               	movlw	high STR_174
 14793  002682  0100               	movlb	0	; () banked
 14794  002684  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14795  002686  ECD6  F033         	call	_sendCommand	;wreg free
 14796                           
 14797                           ;MOTEapp.c: 1065: _delay((unsigned long)((16)*(48000000/4000.0)));
 14798  00268A  0EFA               	movlw	250
 14799  00268C  0100               	movlb	0	; () banked
 14800  00268E  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14801  002690  0E58               	movlw	88
 14802  002692                     u14787:
 14803  002692  2EE8               	decfsz	wreg,f,c
 14804  002694  D7FE               	goto	u14787
 14805  002696  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14806  002698  D7FC               	goto	u14787
 14807  00269A  D000               	nop2	
 14808                           
 14809                           ;MOTEapp.c: 1066: _delay((unsigned long)((16)*(48000000/4000.0)));
 14810  00269C  0EFA               	movlw	250
 14811  00269E  0100               	movlb	0	; () banked
 14812  0026A0  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14813  0026A2  0E58               	movlw	88
 14814  0026A4                     u14797:
 14815  0026A4  2EE8               	decfsz	wreg,f,c
 14816  0026A6  D7FE               	goto	u14797
 14817  0026A8  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14818  0026AA  D7FC               	goto	u14797
 14819  0026AC  D000               	nop2	
 14820                           
 14821                           ;MOTEapp.c: 1067: _delay((unsigned long)((16)*(48000000/4000.0)));
 14822  0026AE  0EFA               	movlw	250
 14823  0026B0  0100               	movlb	0	; () banked
 14824  0026B2  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14825  0026B4  0E58               	movlw	88
 14826  0026B6                     u14807:
 14827  0026B6  2EE8               	decfsz	wreg,f,c
 14828  0026B8  D7FE               	goto	u14807
 14829  0026BA  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14830  0026BC  D7FC               	goto	u14807
 14831  0026BE  D000               	nop2	
 14832                           
 14833                           ;MOTEapp.c: 1068: sendCommand("mac set pwridx 5");
 14834  0026C0  0EA1               	movlw	low STR_163
 14835  0026C2  0100               	movlb	0	; () banked
 14836  0026C4  6F61               	movwf	sendCommand@string& (0+255),b
 14837  0026C6  0E7B               	movlw	high STR_163
 14838  0026C8  0100               	movlb	0	; () banked
 14839  0026CA  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14840  0026CC  ECD6  F033         	call	_sendCommand	;wreg free
 14841                           
 14842                           ;MOTEapp.c: 1069: _delay((unsigned long)((16)*(48000000/4000.0)));
 14843  0026D0  0EFA               	movlw	250
 14844  0026D2  0100               	movlb	0	; () banked
 14845  0026D4  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14846  0026D6  0E58               	movlw	88
 14847  0026D8                     u14817:
 14848  0026D8  2EE8               	decfsz	wreg,f,c
 14849  0026DA  D7FE               	goto	u14817
 14850  0026DC  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14851  0026DE  D7FC               	goto	u14817
 14852  0026E0  D000               	nop2	
 14853                           
 14854                           ;MOTEapp.c: 1070: _delay((unsigned long)((16)*(48000000/4000.0)));
 14855  0026E2  0EFA               	movlw	250
 14856  0026E4  0100               	movlb	0	; () banked
 14857  0026E6  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14858  0026E8  0E58               	movlw	88
 14859  0026EA                     u14827:
 14860  0026EA  2EE8               	decfsz	wreg,f,c
 14861  0026EC  D7FE               	goto	u14827
 14862  0026EE  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14863  0026F0  D7FC               	goto	u14827
 14864  0026F2  D000               	nop2	
 14865                           
 14866                           ;MOTEapp.c: 1071: _delay((unsigned long)((16)*(48000000/4000.0)));
 14867  0026F4  0EFA               	movlw	250
 14868  0026F6  0100               	movlb	0	; () banked
 14869  0026F8  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14870  0026FA  0E58               	movlw	88
 14871  0026FC                     u14837:
 14872  0026FC  2EE8               	decfsz	wreg,f,c
 14873  0026FE  D7FE               	goto	u14837
 14874  002700  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14875  002702  D7FC               	goto	u14837
 14876  002704                     L10:
 14877  002704  D000               	nop2	
 14878                           
 14879                           ;MOTEapp.c: 1072: break;
 14880  002706  D038               	goto	l13250
 14881  002708                     l13240:
 14882                           
 14883                           ;MOTEapp.c: 1074: sendCommand("mac set dr 6");
 14884  002708  0EDA               	movlw	low STR_176
 14885  00270A  0100               	movlb	0	; () banked
 14886  00270C  6F61               	movwf	sendCommand@string& (0+255),b
 14887  00270E  0E7D               	movlw	high STR_176
 14888  002710  0100               	movlb	0	; () banked
 14889  002712  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14890  002714  ECD6  F033         	call	_sendCommand	;wreg free
 14891                           
 14892                           ;MOTEapp.c: 1075: break;
 14893  002718  D02F               	goto	l13250
 14894  00271A                     l13242:
 14895                           
 14896                           ;MOTEapp.c: 1077: sendCommand("mac set dr 7");
 14897  00271A  0EE7               	movlw	low STR_177
 14898  00271C  0100               	movlb	0	; () banked
 14899  00271E  6F61               	movwf	sendCommand@string& (0+255),b
 14900  002720  0E7D               	movlw	high STR_177
 14901  002722  0100               	movlb	0	; () banked
 14902  002724  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14903  002726  ECD6  F033         	call	_sendCommand	;wreg free
 14904                           
 14905                           ;MOTEapp.c: 1078: break;
 14906  00272A  D026               	goto	l13250
 14907  00272C                     l13244:
 14908                           
 14909                           ;MOTEapp.c: 1080: sendCommand("mac set adr on");
 14910  00272C  0E0B               	movlw	low STR_178
 14911  00272E  0100               	movlb	0	; () banked
 14912  002730  6F61               	movwf	sendCommand@string& (0+255),b
 14913  002732  0E7D               	movlw	high STR_178
 14914  002734  0100               	movlb	0	; () banked
 14915  002736  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 14916  002738  ECD6  F033         	call	_sendCommand	;wreg free
 14917                           
 14918                           ;MOTEapp.c: 1082: }
 14919                           
 14920                           ;MOTEapp.c: 1081: break;
 14921  00273C  D01D               	goto	l13250
 14922  00273E                     l13248:
 14923  00273E  0100               	movlb	0	; () banked
 14924  002740  5164               	movf	MOTEapp_SetDataRateSetting@dr& (0+255),w,b
 14925                           
 14926                           ; Switch size 1, requested type "space"
 14927                           ; Number of cases is 9, Range of values is 0 to 8
 14928                           ; switch strategies available:
 14929                           ; Name         Instructions Cycles
 14930                           ; simple_byte           28    15 (average)
 14931                           ;	Chosen strategy is simple_byte
 14932  002742  0A00               	xorlw	0	; case 0
 14933  002744  B4D8               	btfsc	status,2,c
 14934  002746  D63B               	goto	l13180
 14935  002748  0A01               	xorlw	1	; case 1
 14936  00274A  B4D8               	btfsc	status,2,c
 14937  00274C  D67E               	goto	l13190
 14938  00274E  0A03               	xorlw	3	; case 2
 14939  002750  B4D8               	btfsc	status,2,c
 14940  002752  D6C1               	goto	l13200
 14941  002754  0A01               	xorlw	1	; case 3
 14942  002756  B4D8               	btfsc	status,2,c
 14943  002758  D704               	goto	l13210
 14944  00275A  0A07               	xorlw	7	; case 4
 14945  00275C  B4D8               	btfsc	status,2,c
 14946  00275E  D747               	goto	l13220
 14947  002760  0A01               	xorlw	1	; case 5
 14948  002762  B4D8               	btfsc	status,2,c
 14949  002764  D78A               	goto	l13230
 14950  002766  0A03               	xorlw	3	; case 6
 14951  002768  B4D8               	btfsc	status,2,c
 14952  00276A  D7CE               	goto	l13240
 14953  00276C  0A01               	xorlw	1	; case 7
 14954  00276E  B4D8               	btfsc	status,2,c
 14955  002770  D7D4               	goto	l13242
 14956  002772  0A0F               	xorlw	15	; case 8
 14957  002774  B4D8               	btfsc	status,2,c
 14958  002776  D7DA               	goto	l13244
 14959  002778                     l13250:
 14960                           
 14961                           ;MOTEapp.c: 1083: _delay((unsigned long)((16)*(48000000/4000.0)));
 14962  002778  0EFA               	movlw	250
 14963  00277A  0100               	movlb	0	; () banked
 14964  00277C  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14965  00277E  0E58               	movlw	88
 14966  002780                     u14847:
 14967  002780  2EE8               	decfsz	wreg,f,c
 14968  002782  D7FE               	goto	u14847
 14969  002784  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14970  002786  D7FC               	goto	u14847
 14971  002788  D000               	nop2	
 14972                           
 14973                           ;MOTEapp.c: 1084: _delay((unsigned long)((16)*(48000000/4000.0)));
 14974  00278A  0EFA               	movlw	250
 14975  00278C  0100               	movlb	0	; () banked
 14976  00278E  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14977  002790  0E58               	movlw	88
 14978  002792                     u14857:
 14979  002792  2EE8               	decfsz	wreg,f,c
 14980  002794  D7FE               	goto	u14857
 14981  002796  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14982  002798  D7FC               	goto	u14857
 14983  00279A  D000               	nop2	
 14984                           
 14985                           ;MOTEapp.c: 1085: _delay((unsigned long)((16)*(48000000/4000.0)));
 14986  00279C  0EFA               	movlw	250
 14987  00279E  0100               	movlb	0	; () banked
 14988  0027A0  6F63               	movwf	??_MOTEapp_SetDataRateSetting& (0+255),b
 14989  0027A2  0E58               	movlw	88
 14990  0027A4                     u14867:
 14991  0027A4  2EE8               	decfsz	wreg,f,c
 14992  0027A6  D7FE               	goto	u14867
 14993  0027A8  2F63               	decfsz	??_MOTEapp_SetDataRateSetting& (0+255),f,b
 14994  0027AA  D7FC               	goto	u14867
 14995  0027AC  D000               	nop2	
 14996                           
 14997                           ;MOTEapp.c: 1086: sendCommand("mac save");
 14998  0027AE  0E2C               	movlw	low STR_179
 14999  0027B0  0100               	movlb	0	; () banked
 15000  0027B2  6F61               	movwf	sendCommand@string& (0+255),b
 15001  0027B4  0E7F               	movlw	high STR_179
 15002  0027B6  0100               	movlb	0	; () banked
 15003  0027B8  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 15004  0027BA  ECD6  F033         	call	_sendCommand	;wreg free
 15005  0027BE  0012               	return		;funcret
 15006  0027C0                     __end_of_MOTEapp_SetDataRateSetting:
 15007                           	opt stack 0
 15008                           tblptru	equ	0xFF8
 15009                           tblptrh	equ	0xFF7
 15010                           tblptrl	equ	0xFF6
 15011                           tablat	equ	0xFF5
 15012                           prodh	equ	0xFF4
 15013                           prodl	equ	0xFF3
 15014                           intcon	equ	0xFF2
 15015                           intcon3	equ	0xFF0
 15016                           postinc0	equ	0xFEE
 15017                           wreg	equ	0xFE8
 15018                           indf1	equ	0xFE7
 15019                           postdec1	equ	0xFE5
 15020                           fsr1h	equ	0xFE2
 15021                           fsr1l	equ	0xFE1
 15022                           indf2	equ	0xFDF
 15023                           fsr2h	equ	0xFDA
 15024                           fsr2l	equ	0xFD9
 15025                           status	equ	0xFD8
 15026                           
 15027 ;; *************** function _ADC_TempConversion *****************
 15028 ;; Defined at:
 15029 ;;		line 136 in file "../Includes/MccGenerated/adc.c"
 15030 ;; Parameters:    Size  Location     Type
 15031 ;;  tempRaw         1    wreg     enum E6670
 15032 ;; Auto vars:     Size  Location     Type
 15033 ;;  tempRaw         1   70[BANK0 ] enum E6670
 15034 ;;  val             4   72[BANK0 ] enum E6670
 15035 ;;  temp            1   71[BANK0 ] unsigned char 
 15036 ;; Return value:  Size  Location     Type
 15037 ;;                  1    wreg      unsigned char 
 15038 ;; Registers used:
 15039 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15040 ;; Tracked objects:
 15041 ;;		On entry : 0/0
 15042 ;;		On exit  : 0/0
 15043 ;;		Unchanged: 0/0
 15044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15045 ;;      Params:         0       0       0       0       0       0       0       0       0
 15046 ;;      Locals:         0       6       0       0       0       0       0       0       0
 15047 ;;      Temps:          0       0       0       0       0       0       0       0       0
 15048 ;;      Totals:         0       6       0       0       0       0       0       0       0
 15049 ;;Total ram usage:        6 bytes
 15050 ;; Hardware stack levels used:    1
 15051 ;; Hardware stack levels required when called:   12
 15052 ;; This function calls:
 15053 ;;		___fladd
 15054 ;;		___fldiv
 15055 ;;		___flmul
 15056 ;;		___fltol
 15057 ;;		___xxtofl
 15058 ;; This function is called by:
 15059 ;;		_moteHandler
 15060 ;;		_moteRunningProcess
 15061 ;;		_moteApp_testSensors
 15062 ;;		_test_adc
 15063 ;; This function uses a non-reentrant model
 15064 ;;
 15065                           
 15066                           	psect	text45
 15067  0042F2                     __ptext45:
 15068                           	opt stack 0
 15069  0042F2                     _ADC_TempConversion:
 15070                           	opt stack 16
 15071                           
 15072                           ;incstack = 0
 15073                           ;ADC_TempConversion@tempRaw stored from wreg
 15074  0042F2  0100               	movlb	0	; () banked
 15075  0042F4  6FA6               	movwf	ADC_TempConversion@tempRaw& (0+255),b
 15076                           
 15077                           ;adc.c: 138: uint8_t temp;
 15078                           ;adc.c: 140: double val = ((tempRaw * 3.2)/1024);
 15079  0042F6  0ECD               	movlw	205
 15080  0042F8  0100               	movlb	0	; () banked
 15081  0042FA  6F78               	movwf	___flmul@a& (0+255),b
 15082  0042FC  0ECC               	movlw	204
 15083  0042FE  6F79               	movwf	(___flmul@a+1)& (0+255),b
 15084  004300  0E4C               	movlw	76
 15085  004302  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 15086  004304  0E40               	movlw	64
 15087  004306  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 15088  004308  0100               	movlb	0	; () banked
 15089  00430A  51A6               	movf	ADC_TempConversion@tempRaw& (0+255),w,b
 15090  00430C  0100               	movlb	0	; () banked
 15091  00430E  6F60               	movwf	___xxtofl@val& (0+255),b
 15092  004310  6B61               	clrf	(___xxtofl@val+1)& (0+255),b
 15093  004312  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 15094  004314  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 15095  004316  0E00               	movlw	0
 15096  004318  EC3D  F018         	call	___xxtofl
 15097  00431C  C060  F074         	movff	?___xxtofl,___flmul@b
 15098  004320  C061  F075         	movff	?___xxtofl+1,___flmul@b+1
 15099  004324  C062  F076         	movff	?___xxtofl+2,___flmul@b+2
 15100  004328  C063  F077         	movff	?___xxtofl+3,___flmul@b+3
 15101  00432C  EC3E  F00F         	call	___flmul	;wreg free
 15102  004330  C074  F08D         	movff	?___flmul,___fldiv@b
 15103  004334  C075  F08E         	movff	?___flmul+1,___fldiv@b+1
 15104  004338  C076  F08F         	movff	?___flmul+2,___fldiv@b+2
 15105  00433C  C077  F090         	movff	?___flmul+3,___fldiv@b+3
 15106  004340  0E00               	movlw	0
 15107  004342  0100               	movlb	0	; () banked
 15108  004344  6F91               	movwf	___fldiv@a& (0+255),b
 15109  004346  0E00               	movlw	0
 15110  004348  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 15111  00434A  0E80               	movlw	128
 15112  00434C  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 15113  00434E  0E44               	movlw	68
 15114  004350  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 15115  004352  ECE0  F013         	call	___fldiv	;wreg free
 15116  004356  C08D  F0A8         	movff	?___fldiv,ADC_TempConversion@val
 15117  00435A  C08E  F0A9         	movff	?___fldiv+1,ADC_TempConversion@val+1
 15118  00435E  C08F  F0AA         	movff	?___fldiv+2,ADC_TempConversion@val+2
 15119  004362  C090  F0AB         	movff	?___fldiv+3,ADC_TempConversion@val+3
 15120                           
 15121                           ;adc.c: 141: val = ((val - 0.5)*100);
 15122  004366  0E00               	movlw	0
 15123  004368  0100               	movlb	0	; () banked
 15124  00436A  6F64               	movwf	___fladd@a& (0+255),b
 15125  00436C  0E00               	movlw	0
 15126  00436E  6F65               	movwf	(___fladd@a+1)& (0+255),b
 15127  004370  0E00               	movlw	0
 15128  004372  6F66               	movwf	(___fladd@a+2)& (0+255),b
 15129  004374  0EBF               	movlw	191
 15130  004376  6F67               	movwf	(___fladd@a+3)& (0+255),b
 15131  004378  C0A8  F060         	movff	ADC_TempConversion@val,___fladd@b
 15132  00437C  C0A9  F061         	movff	ADC_TempConversion@val+1,___fladd@b+1
 15133  004380  C0AA  F062         	movff	ADC_TempConversion@val+2,___fladd@b+2
 15134  004384  C0AB  F063         	movff	ADC_TempConversion@val+3,___fladd@b+3
 15135  004388  ECEA  F00C         	call	___fladd	;wreg free
 15136  00438C  C060  F074         	movff	?___fladd,___flmul@b
 15137  004390  C061  F075         	movff	?___fladd+1,___flmul@b+1
 15138  004394  C062  F076         	movff	?___fladd+2,___flmul@b+2
 15139  004398  C063  F077         	movff	?___fladd+3,___flmul@b+3
 15140  00439C  0E00               	movlw	0
 15141  00439E  0100               	movlb	0	; () banked
 15142  0043A0  6F78               	movwf	___flmul@a& (0+255),b
 15143  0043A2  0E00               	movlw	0
 15144  0043A4  6F79               	movwf	(___flmul@a+1)& (0+255),b
 15145  0043A6  0EC8               	movlw	200
 15146  0043A8  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 15147  0043AA  0E42               	movlw	66
 15148  0043AC  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 15149  0043AE  EC3E  F00F         	call	___flmul	;wreg free
 15150  0043B2  C074  F0A8         	movff	?___flmul,ADC_TempConversion@val
 15151  0043B6  C075  F0A9         	movff	?___flmul+1,ADC_TempConversion@val+1
 15152  0043BA  C076  F0AA         	movff	?___flmul+2,ADC_TempConversion@val+2
 15153  0043BE  C077  F0AB         	movff	?___flmul+3,ADC_TempConversion@val+3
 15154                           
 15155                           ;adc.c: 142: temp = (uint8_t) val;
 15156  0043C2  C0A8  F060         	movff	ADC_TempConversion@val,___fltol@f1
 15157  0043C6  C0A9  F061         	movff	ADC_TempConversion@val+1,___fltol@f1+1
 15158  0043CA  C0AA  F062         	movff	ADC_TempConversion@val+2,___fltol@f1+2
 15159  0043CE  C0AB  F063         	movff	ADC_TempConversion@val+3,___fltol@f1+3
 15160  0043D2  ECFA  F01E         	call	___fltol	;wreg free
 15161  0043D6  0100               	movlb	0	; () banked
 15162  0043D8  5160               	movf	?___fltol& (0+255),w,b
 15163  0043DA  0100               	movlb	0	; () banked
 15164  0043DC  6FA7               	movwf	ADC_TempConversion@temp& (0+255),b
 15165                           
 15166                           ; BSR set to: 0
 15167                           ;adc.c: 144: return temp;
 15168  0043DE  0100               	movlb	0	; () banked
 15169  0043E0  51A7               	movf	ADC_TempConversion@temp& (0+255),w,b
 15170  0043E2  0012               	return	
 15171  0043E4                     __end_of_ADC_TempConversion:
 15172                           	opt stack 0
 15173                           tblptru	equ	0xFF8
 15174                           tblptrh	equ	0xFF7
 15175                           tblptrl	equ	0xFF6
 15176                           tablat	equ	0xFF5
 15177                           prodh	equ	0xFF4
 15178                           prodl	equ	0xFF3
 15179                           intcon	equ	0xFF2
 15180                           intcon3	equ	0xFF0
 15181                           postinc0	equ	0xFEE
 15182                           wreg	equ	0xFE8
 15183                           indf1	equ	0xFE7
 15184                           postdec1	equ	0xFE5
 15185                           fsr1h	equ	0xFE2
 15186                           fsr1l	equ	0xFE1
 15187                           indf2	equ	0xFDF
 15188                           fsr2h	equ	0xFDA
 15189                           fsr2l	equ	0xFD9
 15190                           status	equ	0xFD8
 15191                           
 15192 ;; *************** function ___xxtofl *****************
 15193 ;; Defined at:
 15194 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
 15195 ;; Parameters:    Size  Location     Type
 15196 ;;  sign            1    wreg     unsigned char 
 15197 ;;  val             4    0[BANK0 ] long 
 15198 ;; Auto vars:     Size  Location     Type
 15199 ;;  sign            1    8[BANK0 ] unsigned char 
 15200 ;;  arg             4   10[BANK0 ] unsigned long 
 15201 ;;  exp             1    9[BANK0 ] unsigned char 
 15202 ;; Return value:  Size  Location     Type
 15203 ;;                  4    0[BANK0 ] unsigned char 
 15204 ;; Registers used:
 15205 ;;		wreg, status,2, status,0
 15206 ;; Tracked objects:
 15207 ;;		On entry : 0/0
 15208 ;;		On exit  : 0/0
 15209 ;;		Unchanged: 0/0
 15210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15211 ;;      Params:         0       4       0       0       0       0       0       0       0
 15212 ;;      Locals:         0       6       0       0       0       0       0       0       0
 15213 ;;      Temps:          0       4       0       0       0       0       0       0       0
 15214 ;;      Totals:         0      14       0       0       0       0       0       0       0
 15215 ;;Total ram usage:       14 bytes
 15216 ;; Hardware stack levels used:    1
 15217 ;; Hardware stack levels required when called:   11
 15218 ;; This function calls:
 15219 ;;		Nothing
 15220 ;; This function is called by:
 15221 ;;		_ADC_TempConversion
 15222 ;; This function uses a non-reentrant model
 15223 ;;
 15224                           
 15225                           	psect	text46
 15226  00307A                     __ptext46:
 15227                           	opt stack 0
 15228  00307A                     ___xxtofl:
 15229                           	opt stack 16
 15230                           
 15231                           ; BSR set to: 0
 15232                           ;incstack = 0
 15233                           ;___xxtofl@sign stored from wreg
 15234  00307A  0100               	movlb	0	; () banked
 15235  00307C  6F68               	movwf	___xxtofl@sign& (0+255),b
 15236  00307E  0100               	movlb	0	; () banked
 15237  003080  5168               	movf	___xxtofl@sign& (0+255),w,b
 15238  003082  0100               	movlb	0	; () banked
 15239  003084  B4D8               	btfsc	status,2,c
 15240  003086  D01E               	goto	l2684
 15241                           
 15242                           ; BSR set to: 0
 15243  003088  0100               	movlb	0	; () banked
 15244  00308A  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 15245  00308C  D01B               	goto	l2684
 15246                           
 15247                           ; BSR set to: 0
 15248  00308E  C060  F064         	movff	___xxtofl@val,??___xxtofl
 15249  003092  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 15250  003096  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 15251  00309A  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 15252  00309E  0100               	movlb	0	; () banked
 15253  0030A0  1F64               	comf	??___xxtofl& (0+255),f,b
 15254  0030A2  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 15255  0030A4  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 15256  0030A6  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 15257  0030A8  2B64               	incf	??___xxtofl& (0+255),f,b
 15258  0030AA  0E00               	movlw	0
 15259  0030AC  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 15260  0030AE  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 15261  0030B0  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 15262  0030B2  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 15263  0030B6  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 15264  0030BA  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 15265  0030BE  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 15266  0030C2  D008               	goto	l12830
 15267  0030C4                     l2684:
 15268                           
 15269                           ; BSR set to: 0
 15270  0030C4  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 15271  0030C8  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 15272  0030CC  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 15273  0030D0  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 15274  0030D4                     l12830:
 15275                           
 15276                           ; BSR set to: 0
 15277  0030D4  0100               	movlb	0	; () banked
 15278  0030D6  5160               	movf	___xxtofl@val& (0+255),w,b
 15279  0030D8  0100               	movlb	0	; () banked
 15280  0030DA  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 15281  0030DC  0100               	movlb	0	; () banked
 15282  0030DE  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 15283  0030E0  0100               	movlb	0	; () banked
 15284  0030E2  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 15285  0030E4  A4D8               	btfss	status,2,c
 15286  0030E6  D00A               	goto	l12836
 15287                           
 15288                           ; BSR set to: 0
 15289  0030E8  0E00               	movlw	0
 15290  0030EA  0100               	movlb	0	; () banked
 15291  0030EC  6F60               	movwf	?___xxtofl& (0+255),b
 15292  0030EE  0E00               	movlw	0
 15293  0030F0  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 15294  0030F2  0E00               	movlw	0
 15295  0030F4  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 15296  0030F6  0E00               	movlw	0
 15297  0030F8  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 15298                           
 15299                           ; BSR set to: 0
 15300  0030FA  0012               	return	
 15301  0030FC                     l12836:
 15302                           
 15303                           ; BSR set to: 0
 15304  0030FC  0E96               	movlw	150
 15305  0030FE  0100               	movlb	0	; () banked
 15306  003100  6F69               	movwf	___xxtofl@exp& (0+255),b
 15307  003102  D008               	goto	l12840
 15308  003104                     l12838:
 15309                           
 15310                           ; BSR set to: 0
 15311  003104  0100               	movlb	0	; () banked
 15312  003106  2B69               	incf	___xxtofl@exp& (0+255),f,b
 15313  003108  0100               	movlb	0	; () banked
 15314  00310A  90D8               	bcf	status,0,c
 15315  00310C  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 15316  00310E  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 15317  003110  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 15318  003112  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 15319  003114                     l12840:
 15320                           
 15321                           ; BSR set to: 0
 15322  003114  0E00               	movlw	0
 15323  003116  0100               	movlb	0	; () banked
 15324  003118  156A               	andwf	___xxtofl@arg& (0+255),w,b
 15325  00311A  0100               	movlb	0	; () banked
 15326  00311C  6F64               	movwf	??___xxtofl& (0+255),b
 15327  00311E  0E00               	movlw	0
 15328  003120  0100               	movlb	0	; () banked
 15329  003122  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 15330  003124  0100               	movlb	0	; () banked
 15331  003126  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 15332  003128  0E00               	movlw	0
 15333  00312A  0100               	movlb	0	; () banked
 15334  00312C  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 15335  00312E  0100               	movlb	0	; () banked
 15336  003130  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 15337  003132  0EFE               	movlw	254
 15338  003134  0100               	movlb	0	; () banked
 15339  003136  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 15340  003138  0100               	movlb	0	; () banked
 15341  00313A  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 15342  00313C  0100               	movlb	0	; () banked
 15343  00313E  5164               	movf	??___xxtofl& (0+255),w,b
 15344  003140  0100               	movlb	0	; () banked
 15345  003142  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 15346  003144  0100               	movlb	0	; () banked
 15347  003146  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 15348  003148  0100               	movlb	0	; () banked
 15349  00314A  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 15350  00314C  B4D8               	btfsc	status,2,c
 15351  00314E  D010               	goto	l2691
 15352  003150  D7D9               	goto	l12838
 15353  003152                     l12842:
 15354                           
 15355                           ; BSR set to: 0
 15356  003152  0100               	movlb	0	; () banked
 15357  003154  2B69               	incf	___xxtofl@exp& (0+255),f,b
 15358                           
 15359                           ; BSR set to: 0
 15360  003156  0E01               	movlw	1
 15361  003158  0100               	movlb	0	; () banked
 15362  00315A  276A               	addwf	___xxtofl@arg& (0+255),f,b
 15363  00315C  0E00               	movlw	0
 15364  00315E  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 15365  003160  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 15366  003162  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 15367                           
 15368                           ; BSR set to: 0
 15369  003164  0100               	movlb	0	; () banked
 15370  003166  90D8               	bcf	status,0,c
 15371  003168  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 15372  00316A  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 15373  00316C  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 15374  00316E  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 15375  003170                     l2691:
 15376                           
 15377                           ; BSR set to: 0
 15378  003170  0E00               	movlw	0
 15379  003172  0100               	movlb	0	; () banked
 15380  003174  156A               	andwf	___xxtofl@arg& (0+255),w,b
 15381  003176  0100               	movlb	0	; () banked
 15382  003178  6F64               	movwf	??___xxtofl& (0+255),b
 15383  00317A  0E00               	movlw	0
 15384  00317C  0100               	movlb	0	; () banked
 15385  00317E  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 15386  003180  0100               	movlb	0	; () banked
 15387  003182  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 15388  003184  0E00               	movlw	0
 15389  003186  0100               	movlb	0	; () banked
 15390  003188  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 15391  00318A  0100               	movlb	0	; () banked
 15392  00318C  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 15393  00318E  0EFF               	movlw	255
 15394  003190  0100               	movlb	0	; () banked
 15395  003192  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 15396  003194  0100               	movlb	0	; () banked
 15397  003196  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 15398  003198  0100               	movlb	0	; () banked
 15399  00319A  5164               	movf	??___xxtofl& (0+255),w,b
 15400  00319C  0100               	movlb	0	; () banked
 15401  00319E  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 15402  0031A0  0100               	movlb	0	; () banked
 15403  0031A2  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 15404  0031A4  0100               	movlb	0	; () banked
 15405  0031A6  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 15406  0031A8  B4D8               	btfsc	status,2,c
 15407  0031AA  D009               	goto	l12850
 15408  0031AC  D7D2               	goto	l12842
 15409  0031AE                     l12848:
 15410                           
 15411                           ; BSR set to: 0
 15412  0031AE  0100               	movlb	0	; () banked
 15413  0031B0  0769               	decf	___xxtofl@exp& (0+255),f,b
 15414  0031B2  0100               	movlb	0	; () banked
 15415  0031B4  90D8               	bcf	status,0,c
 15416  0031B6  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 15417  0031B8  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 15418  0031BA  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 15419  0031BC  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 15420  0031BE                     l12850:
 15421                           
 15422                           ; BSR set to: 0
 15423  0031BE  0100               	movlb	0	; () banked
 15424  0031C0  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 15425  0031C2  D004               	goto	l2698
 15426                           
 15427                           ; BSR set to: 0
 15428  0031C4  0E02               	movlw	2
 15429  0031C6  0100               	movlb	0	; () banked
 15430  0031C8  6169               	cpfslt	___xxtofl@exp& (0+255),b
 15431  0031CA  D7F1               	goto	l12848
 15432  0031CC                     l2698:
 15433                           
 15434                           ; BSR set to: 0
 15435  0031CC  0100               	movlb	0	; () banked
 15436  0031CE  B169               	btfsc	___xxtofl@exp& (0+255),0,b
 15437  0031D0  D009               	goto	l2699
 15438                           
 15439                           ; BSR set to: 0
 15440  0031D2  0EFF               	movlw	255
 15441  0031D4  0100               	movlb	0	; () banked
 15442  0031D6  176A               	andwf	___xxtofl@arg& (0+255),f,b
 15443  0031D8  0EFF               	movlw	255
 15444  0031DA  176B               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 15445  0031DC  0E7F               	movlw	127
 15446  0031DE  176C               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 15447  0031E0  0EFF               	movlw	255
 15448  0031E2  176D               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 15449  0031E4                     l2699:
 15450                           
 15451                           ; BSR set to: 0
 15452  0031E4  0100               	movlb	0	; () banked
 15453  0031E6  90D8               	bcf	status,0,c
 15454  0031E8  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 15455  0031EA  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 15456  0031EE  0100               	movlb	0	; () banked
 15457  0031F0  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 15458  0031F2  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 15459  0031F4  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 15460  0031F6  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 15461  0031FA  0100               	movlb	0	; () banked
 15462  0031FC  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 15463  0031FE  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 15464  003200  6B64               	clrf	??___xxtofl& (0+255),b
 15465  003202  0100               	movlb	0	; () banked
 15466  003204  5164               	movf	??___xxtofl& (0+255),w,b
 15467  003206  0100               	movlb	0	; () banked
 15468  003208  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 15469  00320A  0100               	movlb	0	; () banked
 15470  00320C  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 15471  00320E  0100               	movlb	0	; () banked
 15472  003210  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 15473  003212  0100               	movlb	0	; () banked
 15474  003214  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 15475  003216  0100               	movlb	0	; () banked
 15476  003218  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 15477  00321A  0100               	movlb	0	; () banked
 15478  00321C  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 15479  00321E  0100               	movlb	0	; () banked
 15480  003220  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 15481                           
 15482                           ; BSR set to: 0
 15483  003222  0100               	movlb	0	; () banked
 15484  003224  5168               	movf	___xxtofl@sign& (0+255),w,b
 15485  003226  0100               	movlb	0	; () banked
 15486  003228  B4D8               	btfsc	status,2,c
 15487  00322A  D005               	goto	l12862
 15488                           
 15489                           ; BSR set to: 0
 15490  00322C  0100               	movlb	0	; () banked
 15491  00322E  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 15492  003230  D002               	goto	l12862
 15493                           
 15494                           ; BSR set to: 0
 15495  003232  0100               	movlb	0	; () banked
 15496  003234  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 15497  003236                     l12862:
 15498                           
 15499                           ; BSR set to: 0
 15500  003236  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 15501  00323A  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 15502  00323E  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 15503  003242  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 15504  003246  0012               	return	
 15505  003248                     __end_of___xxtofl:
 15506                           	opt stack 0
 15507                           tblptru	equ	0xFF8
 15508                           tblptrh	equ	0xFF7
 15509                           tblptrl	equ	0xFF6
 15510                           tablat	equ	0xFF5
 15511                           prodh	equ	0xFF4
 15512                           prodl	equ	0xFF3
 15513                           intcon	equ	0xFF2
 15514                           intcon3	equ	0xFF0
 15515                           postinc0	equ	0xFEE
 15516                           wreg	equ	0xFE8
 15517                           indf1	equ	0xFE7
 15518                           postdec1	equ	0xFE5
 15519                           fsr1h	equ	0xFE2
 15520                           fsr1l	equ	0xFE1
 15521                           indf2	equ	0xFDF
 15522                           fsr2h	equ	0xFDA
 15523                           fsr2l	equ	0xFD9
 15524                           status	equ	0xFD8
 15525                           
 15526 ;; *************** function ___fltol *****************
 15527 ;; Defined at:
 15528 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
 15529 ;; Parameters:    Size  Location     Type
 15530 ;;  f1              4    0[BANK0 ] unsigned char 
 15531 ;; Auto vars:     Size  Location     Type
 15532 ;;  exp1            1    9[BANK0 ] unsigned char 
 15533 ;;  sign1           1    8[BANK0 ] unsigned char 
 15534 ;; Return value:  Size  Location     Type
 15535 ;;                  4    0[BANK0 ] long 
 15536 ;; Registers used:
 15537 ;;		wreg, status,2, status,0
 15538 ;; Tracked objects:
 15539 ;;		On entry : 0/0
 15540 ;;		On exit  : 0/0
 15541 ;;		Unchanged: 0/0
 15542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15543 ;;      Params:         0       4       0       0       0       0       0       0       0
 15544 ;;      Locals:         0       2       0       0       0       0       0       0       0
 15545 ;;      Temps:          0       4       0       0       0       0       0       0       0
 15546 ;;      Totals:         0      10       0       0       0       0       0       0       0
 15547 ;;Total ram usage:       10 bytes
 15548 ;; Hardware stack levels used:    1
 15549 ;; Hardware stack levels required when called:   11
 15550 ;; This function calls:
 15551 ;;		Nothing
 15552 ;; This function is called by:
 15553 ;;		_ADC_TempConversion
 15554 ;; This function uses a non-reentrant model
 15555 ;;
 15556                           
 15557                           	psect	text47
 15558  003DF4                     __ptext47:
 15559                           	opt stack 0
 15560  003DF4                     ___fltol:
 15561                           	opt stack 16
 15562                           
 15563                           ; BSR set to: 0
 15564                           ;incstack = 0
 15565  003DF4  0100               	movlb	0	; () banked
 15566  003DF6  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 15567  003DF8  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 15568  003DFA  0100               	movlb	0	; () banked
 15569  003DFC  6F69               	movwf	___fltol@exp1& (0+255),b
 15570  003DFE  0100               	movlb	0	; () banked
 15571  003E00  5169               	movf	___fltol@exp1& (0+255),w,b
 15572  003E02  A4D8               	btfss	status,2,c
 15573  003E04  D00A               	goto	l12722
 15574                           
 15575                           ; BSR set to: 0
 15576  003E06  0E00               	movlw	0
 15577  003E08  0100               	movlb	0	; () banked
 15578  003E0A  6F60               	movwf	?___fltol& (0+255),b
 15579  003E0C  0E00               	movlw	0
 15580  003E0E  6F61               	movwf	(?___fltol+1)& (0+255),b
 15581  003E10  0E00               	movlw	0
 15582  003E12  6F62               	movwf	(?___fltol+2)& (0+255),b
 15583  003E14  0E00               	movlw	0
 15584  003E16  6F63               	movwf	(?___fltol+3)& (0+255),b
 15585                           
 15586                           ; BSR set to: 0
 15587  003E18  0012               	return	
 15588  003E1A                     l12722:
 15589                           
 15590                           ; BSR set to: 0
 15591  003E1A  C060  F064         	movff	___fltol@f1,??___fltol
 15592  003E1E  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 15593  003E22  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 15594  003E26  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 15595  003E2A  0E20               	movlw	32
 15596  003E2C  D006               	goto	u11900
 15597  003E2E                     u11905:
 15598  003E2E  0100               	movlb	0	; () banked
 15599  003E30  90D8               	bcf	status,0,c
 15600  003E32  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 15601  003E34  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 15602  003E36  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 15603  003E38  3364               	rrcf	??___fltol& (0+255),f,b
 15604  003E3A                     u11900:
 15605  003E3A  2EE8               	decfsz	wreg,f,c
 15606  003E3C  D7F8               	goto	u11905
 15607  003E3E  0100               	movlb	0	; () banked
 15608  003E40  5164               	movf	??___fltol& (0+255),w,b
 15609  003E42  0100               	movlb	0	; () banked
 15610  003E44  6F68               	movwf	___fltol@sign1& (0+255),b
 15611                           
 15612                           ; BSR set to: 0
 15613  003E46  0100               	movlb	0	; () banked
 15614  003E48  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 15615                           
 15616                           ; BSR set to: 0
 15617  003E4A  0EFF               	movlw	255
 15618  003E4C  0100               	movlb	0	; () banked
 15619  003E4E  1760               	andwf	___fltol@f1& (0+255),f,b
 15620  003E50  0EFF               	movlw	255
 15621  003E52  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 15622  003E54  0EFF               	movlw	255
 15623  003E56  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 15624  003E58  0E00               	movlw	0
 15625  003E5A  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 15626                           
 15627                           ; BSR set to: 0
 15628  003E5C  0E96               	movlw	150
 15629  003E5E  0100               	movlb	0	; () banked
 15630  003E60  5F69               	subwf	___fltol@exp1& (0+255),f,b
 15631                           
 15632                           ; BSR set to: 0
 15633  003E62  0100               	movlb	0	; () banked
 15634  003E64  AF69               	btfss	___fltol@exp1& (0+255),7,b
 15635  003E66  D01A               	goto	l12742
 15636                           
 15637                           ; BSR set to: 0
 15638  003E68  0100               	movlb	0	; () banked
 15639  003E6A  5169               	movf	___fltol@exp1& (0+255),w,b
 15640  003E6C  0A80               	xorlw	128
 15641  003E6E  0F97               	addlw	151
 15642  003E70  B0D8               	btfsc	status,0,c
 15643  003E72  D00A               	goto	l12738
 15644                           
 15645                           ; BSR set to: 0
 15646  003E74  0E00               	movlw	0
 15647  003E76  0100               	movlb	0	; () banked
 15648  003E78  6F60               	movwf	?___fltol& (0+255),b
 15649  003E7A  0E00               	movlw	0
 15650  003E7C  6F61               	movwf	(?___fltol+1)& (0+255),b
 15651  003E7E  0E00               	movlw	0
 15652  003E80  6F62               	movwf	(?___fltol+2)& (0+255),b
 15653  003E82  0E00               	movlw	0
 15654  003E84  6F63               	movwf	(?___fltol+3)& (0+255),b
 15655                           
 15656                           ; BSR set to: 0
 15657  003E86  0012               	return	
 15658  003E88                     l12738:
 15659                           
 15660                           ; BSR set to: 0
 15661  003E88  0100               	movlb	0	; () banked
 15662  003E8A  90D8               	bcf	status,0,c
 15663  003E8C  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 15664  003E8E  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 15665  003E90  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 15666  003E92  3360               	rrcf	___fltol@f1& (0+255),f,b
 15667                           
 15668                           ; BSR set to: 0
 15669  003E94  0100               	movlb	0	; () banked
 15670  003E96  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 15671  003E98  D7F7               	goto	l12738
 15672                           
 15673                           ; BSR set to: 0
 15674  003E9A  D01B               	goto	l12752
 15675  003E9C                     l12742:
 15676                           
 15677                           ; BSR set to: 0
 15678  003E9C  0E1F               	movlw	31
 15679  003E9E  0100               	movlb	0	; () banked
 15680  003EA0  6569               	cpfsgt	___fltol@exp1& (0+255),b
 15681  003EA2  D012               	goto	l12750
 15682                           
 15683                           ; BSR set to: 0
 15684  003EA4  0E00               	movlw	0
 15685  003EA6  0100               	movlb	0	; () banked
 15686  003EA8  6F60               	movwf	?___fltol& (0+255),b
 15687  003EAA  0E00               	movlw	0
 15688  003EAC  6F61               	movwf	(?___fltol+1)& (0+255),b
 15689  003EAE  0E00               	movlw	0
 15690  003EB0  6F62               	movwf	(?___fltol+2)& (0+255),b
 15691  003EB2  0E00               	movlw	0
 15692  003EB4  6F63               	movwf	(?___fltol+3)& (0+255),b
 15693                           
 15694                           ; BSR set to: 0
 15695  003EB6  0012               	return	
 15696  003EB8                     l12748:
 15697                           
 15698                           ; BSR set to: 0
 15699  003EB8  0100               	movlb	0	; () banked
 15700  003EBA  90D8               	bcf	status,0,c
 15701  003EBC  3760               	rlcf	___fltol@f1& (0+255),f,b
 15702  003EBE  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 15703  003EC0  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 15704  003EC2  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 15705  003EC4  0100               	movlb	0	; () banked
 15706  003EC6  0769               	decf	___fltol@exp1& (0+255),f,b
 15707  003EC8                     l12750:
 15708                           
 15709                           ; BSR set to: 0
 15710  003EC8  0100               	movlb	0	; () banked
 15711  003ECA  5169               	movf	___fltol@exp1& (0+255),w,b
 15712  003ECC  0100               	movlb	0	; () banked
 15713  003ECE  A4D8               	btfss	status,2,c
 15714  003ED0  D7F3               	goto	l12748
 15715  003ED2                     l12752:
 15716                           
 15717                           ; BSR set to: 0
 15718  003ED2  0100               	movlb	0	; () banked
 15719  003ED4  5168               	movf	___fltol@sign1& (0+255),w,b
 15720  003ED6  0100               	movlb	0	; () banked
 15721  003ED8  B4D8               	btfsc	status,2,c
 15722  003EDA  D009               	goto	l12756
 15723                           
 15724                           ; BSR set to: 0
 15725  003EDC  0100               	movlb	0	; () banked
 15726  003EDE  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 15727  003EE0  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 15728  003EE2  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 15729  003EE4  6D60               	negf	___fltol@f1& (0+255),b
 15730  003EE6  0E00               	movlw	0
 15731  003EE8  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 15732  003EEA  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 15733  003EEC  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 15734  003EEE                     l12756:
 15735                           
 15736                           ; BSR set to: 0
 15737  003EEE  C060  F060         	movff	___fltol@f1,?___fltol
 15738  003EF2  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 15739  003EF6  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 15740  003EFA  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 15741  003EFE  0012               	return	
 15742  003F00                     __end_of___fltol:
 15743                           	opt stack 0
 15744                           tblptru	equ	0xFF8
 15745                           tblptrh	equ	0xFF7
 15746                           tblptrl	equ	0xFF6
 15747                           tablat	equ	0xFF5
 15748                           prodh	equ	0xFF4
 15749                           prodl	equ	0xFF3
 15750                           intcon	equ	0xFF2
 15751                           intcon3	equ	0xFF0
 15752                           postinc0	equ	0xFEE
 15753                           wreg	equ	0xFE8
 15754                           indf1	equ	0xFE7
 15755                           postdec1	equ	0xFE5
 15756                           fsr1h	equ	0xFE2
 15757                           fsr1l	equ	0xFE1
 15758                           indf2	equ	0xFDF
 15759                           fsr2h	equ	0xFDA
 15760                           fsr2l	equ	0xFD9
 15761                           status	equ	0xFD8
 15762                           
 15763 ;; *************** function ___flmul *****************
 15764 ;; Defined at:
 15765 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
 15766 ;; Parameters:    Size  Location     Type
 15767 ;;  b               4   20[BANK0 ] long 
 15768 ;;  a               4   24[BANK0 ] long 
 15769 ;; Auto vars:     Size  Location     Type
 15770 ;;  prod            4   39[BANK0 ] struct .
 15771 ;;  grs             4   34[BANK0 ] unsigned long 
 15772 ;;  temp            2   43[BANK0 ] struct .
 15773 ;;  bexp            1   38[BANK0 ] unsigned char 
 15774 ;;  aexp            1   33[BANK0 ] unsigned char 
 15775 ;;  sign            1   32[BANK0 ] unsigned char 
 15776 ;; Return value:  Size  Location     Type
 15777 ;;                  4   20[BANK0 ] unsigned char 
 15778 ;; Registers used:
 15779 ;;		wreg, status,2, status,0, prodl, prodh
 15780 ;; Tracked objects:
 15781 ;;		On entry : 0/0
 15782 ;;		On exit  : 0/0
 15783 ;;		Unchanged: 0/0
 15784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 15785 ;;      Params:         0       8       0       0       0       0       0       0       0
 15786 ;;      Locals:         0      13       0       0       0       0       0       0       0
 15787 ;;      Temps:          0       4       0       0       0       0       0       0       0
 15788 ;;      Totals:         0      25       0       0       0       0       0       0       0
 15789 ;;Total ram usage:       25 bytes
 15790 ;; Hardware stack levels used:    1
 15791 ;; Hardware stack levels required when called:   11
 15792 ;; This function calls:
 15793 ;;		Nothing
 15794 ;; This function is called by:
 15795 ;;		_ADC_TempConversion
 15796 ;; This function uses a non-reentrant model
 15797 ;;
 15798                           
 15799                           	psect	text48
 15800  001E7C                     __ptext48:
 15801                           	opt stack 0
 15802  001E7C                     ___flmul:
 15803                           	opt stack 16
 15804                           
 15805                           ; BSR set to: 0
 15806                           ;incstack = 0
 15807  001E7C  0100               	movlb	0	; () banked
 15808  001E7E  5177               	movf	(___flmul@b+3)& (0+255),w,b
 15809  001E80  0B80               	andlw	128
 15810  001E82  0100               	movlb	0	; () banked
 15811  001E84  6F80               	movwf	___flmul@sign& (0+255),b
 15812  001E86  0100               	movlb	0	; () banked
 15813  001E88  5177               	movf	(___flmul@b+3)& (0+255),w,b
 15814  001E8A  2577               	addwf	(___flmul@b+3)& (0+255),w,b
 15815  001E8C  0100               	movlb	0	; () banked
 15816  001E8E  6F86               	movwf	___flmul@bexp& (0+255),b
 15817                           
 15818                           ; BSR set to: 0
 15819  001E90  0100               	movlb	0	; () banked
 15820  001E92  AF76               	btfss	(___flmul@b+2)& (0+255),7,b
 15821  001E94  D002               	goto	l12556
 15822                           
 15823                           ; BSR set to: 0
 15824  001E96  0100               	movlb	0	; () banked
 15825  001E98  8186               	bsf	___flmul@bexp& (0+255),0,b
 15826  001E9A                     l12556:
 15827                           
 15828                           ; BSR set to: 0
 15829  001E9A  0100               	movlb	0	; () banked
 15830  001E9C  5186               	movf	___flmul@bexp& (0+255),w,b
 15831  001E9E  0100               	movlb	0	; () banked
 15832  001EA0  B4D8               	btfsc	status,2,c
 15833  001EA2  D010               	goto	l12564
 15834                           
 15835                           ; BSR set to: 0
 15836  001EA4  0100               	movlb	0	; () banked
 15837  001EA6  2986               	incf	___flmul@bexp& (0+255),w,b
 15838  001EA8  A4D8               	btfss	status,2,c
 15839  001EAA  D009               	goto	l12562
 15840                           
 15841                           ; BSR set to: 0
 15842  001EAC  0E00               	movlw	0
 15843  001EAE  0100               	movlb	0	; () banked
 15844  001EB0  6F74               	movwf	___flmul@b& (0+255),b
 15845  001EB2  0E00               	movlw	0
 15846  001EB4  6F75               	movwf	(___flmul@b+1)& (0+255),b
 15847  001EB6  0E00               	movlw	0
 15848  001EB8  6F76               	movwf	(___flmul@b+2)& (0+255),b
 15849  001EBA  0E00               	movlw	0
 15850  001EBC  6F77               	movwf	(___flmul@b+3)& (0+255),b
 15851  001EBE                     l12562:
 15852                           
 15853                           ; BSR set to: 0
 15854  001EBE  0100               	movlb	0	; () banked
 15855  001EC0  8F76               	bsf	(___flmul@b+2)& (0+255),7,b
 15856  001EC2  D009               	goto	l12566
 15857  001EC4                     l12564:
 15858                           
 15859                           ; BSR set to: 0
 15860  001EC4  0E00               	movlw	0
 15861  001EC6  0100               	movlb	0	; () banked
 15862  001EC8  6F74               	movwf	___flmul@b& (0+255),b
 15863  001ECA  0E00               	movlw	0
 15864  001ECC  6F75               	movwf	(___flmul@b+1)& (0+255),b
 15865  001ECE  0E00               	movlw	0
 15866  001ED0  6F76               	movwf	(___flmul@b+2)& (0+255),b
 15867  001ED2  0E00               	movlw	0
 15868  001ED4  6F77               	movwf	(___flmul@b+3)& (0+255),b
 15869  001ED6                     l12566:
 15870                           
 15871                           ; BSR set to: 0
 15872  001ED6  0100               	movlb	0	; () banked
 15873  001ED8  517B               	movf	(___flmul@a+3)& (0+255),w,b
 15874  001EDA  0B80               	andlw	128
 15875  001EDC  0100               	movlb	0	; () banked
 15876  001EDE  1B80               	xorwf	___flmul@sign& (0+255),f,b
 15877                           
 15878                           ; BSR set to: 0
 15879  001EE0  0100               	movlb	0	; () banked
 15880  001EE2  517B               	movf	(___flmul@a+3)& (0+255),w,b
 15881  001EE4  257B               	addwf	(___flmul@a+3)& (0+255),w,b
 15882  001EE6  0100               	movlb	0	; () banked
 15883  001EE8  6F81               	movwf	___flmul@aexp& (0+255),b
 15884                           
 15885                           ; BSR set to: 0
 15886  001EEA  0100               	movlb	0	; () banked
 15887  001EEC  AF7A               	btfss	(___flmul@a+2)& (0+255),7,b
 15888  001EEE  D002               	goto	l12574
 15889                           
 15890                           ; BSR set to: 0
 15891  001EF0  0100               	movlb	0	; () banked
 15892  001EF2  8181               	bsf	___flmul@aexp& (0+255),0,b
 15893  001EF4                     l12574:
 15894                           
 15895                           ; BSR set to: 0
 15896  001EF4  0100               	movlb	0	; () banked
 15897  001EF6  5181               	movf	___flmul@aexp& (0+255),w,b
 15898  001EF8  0100               	movlb	0	; () banked
 15899  001EFA  B4D8               	btfsc	status,2,c
 15900  001EFC  D010               	goto	l12582
 15901                           
 15902                           ; BSR set to: 0
 15903  001EFE  0100               	movlb	0	; () banked
 15904  001F00  2981               	incf	___flmul@aexp& (0+255),w,b
 15905  001F02  A4D8               	btfss	status,2,c
 15906  001F04  D009               	goto	l12580
 15907                           
 15908                           ; BSR set to: 0
 15909  001F06  0E00               	movlw	0
 15910  001F08  0100               	movlb	0	; () banked
 15911  001F0A  6F78               	movwf	___flmul@a& (0+255),b
 15912  001F0C  0E00               	movlw	0
 15913  001F0E  6F79               	movwf	(___flmul@a+1)& (0+255),b
 15914  001F10  0E00               	movlw	0
 15915  001F12  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 15916  001F14  0E00               	movlw	0
 15917  001F16  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 15918  001F18                     l12580:
 15919                           
 15920                           ; BSR set to: 0
 15921  001F18  0100               	movlb	0	; () banked
 15922  001F1A  8F7A               	bsf	(___flmul@a+2)& (0+255),7,b
 15923  001F1C  D009               	goto	l2645
 15924  001F1E                     l12582:
 15925                           
 15926                           ; BSR set to: 0
 15927  001F1E  0E00               	movlw	0
 15928  001F20  0100               	movlb	0	; () banked
 15929  001F22  6F78               	movwf	___flmul@a& (0+255),b
 15930  001F24  0E00               	movlw	0
 15931  001F26  6F79               	movwf	(___flmul@a+1)& (0+255),b
 15932  001F28  0E00               	movlw	0
 15933  001F2A  6F7A               	movwf	(___flmul@a+2)& (0+255),b
 15934  001F2C  0E00               	movlw	0
 15935  001F2E  6F7B               	movwf	(___flmul@a+3)& (0+255),b
 15936  001F30                     l2645:
 15937                           
 15938                           ; BSR set to: 0
 15939  001F30  0100               	movlb	0	; () banked
 15940  001F32  5181               	movf	___flmul@aexp& (0+255),w,b
 15941  001F34  0100               	movlb	0	; () banked
 15942  001F36  B4D8               	btfsc	status,2,c
 15943  001F38  D005               	goto	l12586
 15944                           
 15945                           ; BSR set to: 0
 15946  001F3A  0100               	movlb	0	; () banked
 15947  001F3C  5186               	movf	___flmul@bexp& (0+255),w,b
 15948  001F3E  0100               	movlb	0	; () banked
 15949  001F40  A4D8               	btfss	status,2,c
 15950  001F42  D00A               	goto	l12590
 15951  001F44                     l12586:
 15952                           
 15953                           ; BSR set to: 0
 15954  001F44  0E00               	movlw	0
 15955  001F46  0100               	movlb	0	; () banked
 15956  001F48  6F74               	movwf	?___flmul& (0+255),b
 15957  001F4A  0E00               	movlw	0
 15958  001F4C  6F75               	movwf	(?___flmul+1)& (0+255),b
 15959  001F4E  0E00               	movlw	0
 15960  001F50  6F76               	movwf	(?___flmul+2)& (0+255),b
 15961  001F52  0E00               	movlw	0
 15962  001F54  6F77               	movwf	(?___flmul+3)& (0+255),b
 15963                           
 15964                           ; BSR set to: 0
 15965  001F56  0012               	return	
 15966  001F58                     l12590:
 15967                           
 15968                           ; BSR set to: 0
 15969  001F58  0100               	movlb	0	; () banked
 15970  001F5A  517A               	movf	(___flmul@a+2)& (0+255),w,b
 15971  001F5C  0100               	movlb	0	; () banked
 15972  001F5E  0374               	mulwf	___flmul@b& (0+255),b
 15973  001F60  CFF3 F08B          	movff	prodl,___flmul@temp
 15974  001F64  CFF4 F08C          	movff	prodh,___flmul@temp+1
 15975                           
 15976                           ; BSR set to: 0
 15977  001F68  0100               	movlb	0	; () banked
 15978  001F6A  518B               	movf	___flmul@temp& (0+255),w,b
 15979  001F6C  0100               	movlb	0	; () banked
 15980  001F6E  6F82               	movwf	___flmul@grs& (0+255),b
 15981  001F70  6B83               	clrf	(___flmul@grs+1)& (0+255),b
 15982  001F72  6B84               	clrf	(___flmul@grs+2)& (0+255),b
 15983  001F74  6B85               	clrf	(___flmul@grs+3)& (0+255),b
 15984                           
 15985                           ; BSR set to: 0
 15986  001F76  0100               	movlb	0	; () banked
 15987  001F78  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 15988  001F7A  0100               	movlb	0	; () banked
 15989  001F7C  6F87               	movwf	___flmul@prod& (0+255),b
 15990  001F7E  6B88               	clrf	(___flmul@prod+1)& (0+255),b
 15991  001F80  6B89               	clrf	(___flmul@prod+2)& (0+255),b
 15992  001F82  6B8A               	clrf	(___flmul@prod+3)& (0+255),b
 15993  001F84  0100               	movlb	0	; () banked
 15994  001F86  5179               	movf	(___flmul@a+1)& (0+255),w,b
 15995  001F88  0100               	movlb	0	; () banked
 15996  001F8A  0375               	mulwf	(___flmul@b+1)& (0+255),b
 15997  001F8C  CFF3 F08B          	movff	prodl,___flmul@temp
 15998  001F90  CFF4 F08C          	movff	prodh,___flmul@temp+1
 15999                           
 16000                           ; BSR set to: 0
 16001  001F94  0100               	movlb	0	; () banked
 16002  001F96  518B               	movf	___flmul@temp& (0+255),w,b
 16003  001F98  0100               	movlb	0	; () banked
 16004  001F9A  2782               	addwf	___flmul@grs& (0+255),f,b
 16005  001F9C  0E00               	movlw	0
 16006  001F9E  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16007  001FA0  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16008  001FA2  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16009                           
 16010                           ; BSR set to: 0
 16011  001FA4  0100               	movlb	0	; () banked
 16012  001FA6  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16013  001FA8  0100               	movlb	0	; () banked
 16014  001FAA  2787               	addwf	___flmul@prod& (0+255),f,b
 16015  001FAC  0E00               	movlw	0
 16016  001FAE  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16017  001FB0  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16018  001FB2  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16019  001FB4  0100               	movlb	0	; () banked
 16020  001FB6  5178               	movf	___flmul@a& (0+255),w,b
 16021  001FB8  0100               	movlb	0	; () banked
 16022  001FBA  0376               	mulwf	(___flmul@b+2)& (0+255),b
 16023  001FBC  CFF3 F08B          	movff	prodl,___flmul@temp
 16024  001FC0  CFF4 F08C          	movff	prodh,___flmul@temp+1
 16025                           
 16026                           ; BSR set to: 0
 16027  001FC4  0100               	movlb	0	; () banked
 16028  001FC6  518B               	movf	___flmul@temp& (0+255),w,b
 16029  001FC8  0100               	movlb	0	; () banked
 16030  001FCA  2782               	addwf	___flmul@grs& (0+255),f,b
 16031  001FCC  0E00               	movlw	0
 16032  001FCE  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16033  001FD0  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16034  001FD2  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16035                           
 16036                           ; BSR set to: 0
 16037  001FD4  0100               	movlb	0	; () banked
 16038  001FD6  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16039  001FD8  0100               	movlb	0	; () banked
 16040  001FDA  2787               	addwf	___flmul@prod& (0+255),f,b
 16041  001FDC  0E00               	movlw	0
 16042  001FDE  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16043  001FE0  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16044  001FE2  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16045                           
 16046                           ; BSR set to: 0
 16047  001FE4  C084  F085         	movff	___flmul@grs+2,___flmul@grs+3
 16048  001FE8  C083  F084         	movff	___flmul@grs+1,___flmul@grs+2
 16049  001FEC  C082  F083         	movff	___flmul@grs,___flmul@grs+1
 16050  001FF0  0100               	movlb	0	; () banked
 16051  001FF2  6B82               	clrf	___flmul@grs& (0+255),b
 16052                           
 16053                           ; BSR set to: 0
 16054  001FF4  0100               	movlb	0	; () banked
 16055  001FF6  5178               	movf	___flmul@a& (0+255),w,b
 16056  001FF8  0100               	movlb	0	; () banked
 16057  001FFA  0375               	mulwf	(___flmul@b+1)& (0+255),b
 16058  001FFC  CFF3 F08B          	movff	prodl,___flmul@temp
 16059  002000  CFF4 F08C          	movff	prodh,___flmul@temp+1
 16060                           
 16061                           ; BSR set to: 0
 16062  002004  0100               	movlb	0	; () banked
 16063  002006  518B               	movf	___flmul@temp& (0+255),w,b
 16064  002008  0100               	movlb	0	; () banked
 16065  00200A  2782               	addwf	___flmul@grs& (0+255),f,b
 16066  00200C  0100               	movlb	0	; () banked
 16067  00200E  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16068  002010  0100               	movlb	0	; () banked
 16069  002012  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16070  002014  0E00               	movlw	0
 16071  002016  0100               	movlb	0	; () banked
 16072  002018  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16073  00201A  0E00               	movlw	0
 16074  00201C  0100               	movlb	0	; () banked
 16075  00201E  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16076                           
 16077                           ; BSR set to: 0
 16078  002020  0100               	movlb	0	; () banked
 16079  002022  5179               	movf	(___flmul@a+1)& (0+255),w,b
 16080  002024  0100               	movlb	0	; () banked
 16081  002026  0374               	mulwf	___flmul@b& (0+255),b
 16082  002028  CFF3 F08B          	movff	prodl,___flmul@temp
 16083  00202C  CFF4 F08C          	movff	prodh,___flmul@temp+1
 16084                           
 16085                           ; BSR set to: 0
 16086  002030  0100               	movlb	0	; () banked
 16087  002032  518B               	movf	___flmul@temp& (0+255),w,b
 16088  002034  0100               	movlb	0	; () banked
 16089  002036  2782               	addwf	___flmul@grs& (0+255),f,b
 16090  002038  0100               	movlb	0	; () banked
 16091  00203A  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16092  00203C  0100               	movlb	0	; () banked
 16093  00203E  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16094  002040  0E00               	movlw	0
 16095  002042  0100               	movlb	0	; () banked
 16096  002044  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16097  002046  0E00               	movlw	0
 16098  002048  0100               	movlb	0	; () banked
 16099  00204A  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16100                           
 16101                           ; BSR set to: 0
 16102  00204C  C084  F085         	movff	___flmul@grs+2,___flmul@grs+3
 16103  002050  C083  F084         	movff	___flmul@grs+1,___flmul@grs+2
 16104  002054  C082  F083         	movff	___flmul@grs,___flmul@grs+1
 16105  002058  0100               	movlb	0	; () banked
 16106  00205A  6B82               	clrf	___flmul@grs& (0+255),b
 16107  00205C  0100               	movlb	0	; () banked
 16108  00205E  5178               	movf	___flmul@a& (0+255),w,b
 16109  002060  0100               	movlb	0	; () banked
 16110  002062  0374               	mulwf	___flmul@b& (0+255),b
 16111  002064  CFF3 F08B          	movff	prodl,___flmul@temp
 16112  002068  CFF4 F08C          	movff	prodh,___flmul@temp+1
 16113                           
 16114                           ; BSR set to: 0
 16115  00206C  0100               	movlb	0	; () banked
 16116  00206E  518B               	movf	___flmul@temp& (0+255),w,b
 16117  002070  0100               	movlb	0	; () banked
 16118  002072  2782               	addwf	___flmul@grs& (0+255),f,b
 16119  002074  0100               	movlb	0	; () banked
 16120  002076  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16121  002078  0100               	movlb	0	; () banked
 16122  00207A  2383               	addwfc	(___flmul@grs+1)& (0+255),f,b
 16123  00207C  0E00               	movlw	0
 16124  00207E  0100               	movlb	0	; () banked
 16125  002080  2384               	addwfc	(___flmul@grs+2)& (0+255),f,b
 16126  002082  0E00               	movlw	0
 16127  002084  0100               	movlb	0	; () banked
 16128  002086  2385               	addwfc	(___flmul@grs+3)& (0+255),f,b
 16129                           
 16130                           ; BSR set to: 0
 16131  002088  0100               	movlb	0	; () banked
 16132  00208A  517A               	movf	(___flmul@a+2)& (0+255),w,b
 16133  00208C  0100               	movlb	0	; () banked
 16134  00208E  0375               	mulwf	(___flmul@b+1)& (0+255),b
 16135  002090  CFF3 F08B          	movff	prodl,___flmul@temp
 16136  002094  CFF4 F08C          	movff	prodh,___flmul@temp+1
 16137  002098  0100               	movlb	0	; () banked
 16138  00209A  518B               	movf	___flmul@temp& (0+255),w,b
 16139  00209C  0100               	movlb	0	; () banked
 16140  00209E  2787               	addwf	___flmul@prod& (0+255),f,b
 16141  0020A0  0100               	movlb	0	; () banked
 16142  0020A2  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16143  0020A4  0100               	movlb	0	; () banked
 16144  0020A6  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16145  0020A8  0E00               	movlw	0
 16146  0020AA  0100               	movlb	0	; () banked
 16147  0020AC  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16148  0020AE  0E00               	movlw	0
 16149  0020B0  0100               	movlb	0	; () banked
 16150  0020B2  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16151                           
 16152                           ; BSR set to: 0
 16153  0020B4  0100               	movlb	0	; () banked
 16154  0020B6  5179               	movf	(___flmul@a+1)& (0+255),w,b
 16155  0020B8  0100               	movlb	0	; () banked
 16156  0020BA  0376               	mulwf	(___flmul@b+2)& (0+255),b
 16157  0020BC  CFF3 F08B          	movff	prodl,___flmul@temp
 16158  0020C0  CFF4 F08C          	movff	prodh,___flmul@temp+1
 16159                           
 16160                           ; BSR set to: 0
 16161  0020C4  0100               	movlb	0	; () banked
 16162  0020C6  518B               	movf	___flmul@temp& (0+255),w,b
 16163  0020C8  0100               	movlb	0	; () banked
 16164  0020CA  2787               	addwf	___flmul@prod& (0+255),f,b
 16165  0020CC  0100               	movlb	0	; () banked
 16166  0020CE  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16167  0020D0  0100               	movlb	0	; () banked
 16168  0020D2  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16169  0020D4  0E00               	movlw	0
 16170  0020D6  0100               	movlb	0	; () banked
 16171  0020D8  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16172  0020DA  0E00               	movlw	0
 16173  0020DC  0100               	movlb	0	; () banked
 16174  0020DE  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16175  0020E0  0100               	movlb	0	; () banked
 16176  0020E2  517A               	movf	(___flmul@a+2)& (0+255),w,b
 16177  0020E4  0100               	movlb	0	; () banked
 16178  0020E6  0376               	mulwf	(___flmul@b+2)& (0+255),b
 16179  0020E8  CFF3 F08B          	movff	prodl,___flmul@temp
 16180  0020EC  CFF4 F08C          	movff	prodh,___flmul@temp+1
 16181                           
 16182                           ; BSR set to: 0
 16183  0020F0  0100               	movlb	0	; () banked
 16184  0020F2  518B               	movf	___flmul@temp& (0+255),w,b
 16185  0020F4  0100               	movlb	0	; () banked
 16186  0020F6  6F7C               	movwf	??___flmul& (0+255),b
 16187  0020F8  0100               	movlb	0	; () banked
 16188  0020FA  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16189  0020FC  0100               	movlb	0	; () banked
 16190  0020FE  6F7D               	movwf	(??___flmul+1)& (0+255),b
 16191  002100  0100               	movlb	0	; () banked
 16192  002102  6B7E               	clrf	(??___flmul+2)& (0+255),b
 16193  002104  0100               	movlb	0	; () banked
 16194  002106  6B7F               	clrf	(??___flmul+3)& (0+255),b
 16195  002108  C07E  F07F         	movff	??___flmul+2,??___flmul+3
 16196  00210C  C07D  F07E         	movff	??___flmul+1,??___flmul+2
 16197  002110  C07C  F07D         	movff	??___flmul,??___flmul+1
 16198  002114  0100               	movlb	0	; () banked
 16199  002116  6B7C               	clrf	??___flmul& (0+255),b
 16200  002118  0100               	movlb	0	; () banked
 16201  00211A  517C               	movf	??___flmul& (0+255),w,b
 16202  00211C  0100               	movlb	0	; () banked
 16203  00211E  2787               	addwf	___flmul@prod& (0+255),f,b
 16204  002120  0100               	movlb	0	; () banked
 16205  002122  517D               	movf	(??___flmul+1)& (0+255),w,b
 16206  002124  0100               	movlb	0	; () banked
 16207  002126  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16208  002128  0100               	movlb	0	; () banked
 16209  00212A  517E               	movf	(??___flmul+2)& (0+255),w,b
 16210  00212C  0100               	movlb	0	; () banked
 16211  00212E  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16212  002130  0100               	movlb	0	; () banked
 16213  002132  517F               	movf	(??___flmul+3)& (0+255),w,b
 16214  002134  0100               	movlb	0	; () banked
 16215  002136  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16216                           
 16217                           ; BSR set to: 0
 16218  002138  C082  F07C         	movff	___flmul@grs,??___flmul
 16219  00213C  C083  F07D         	movff	___flmul@grs+1,??___flmul+1
 16220  002140  C084  F07E         	movff	___flmul@grs+2,??___flmul+2
 16221  002144  C085  F07F         	movff	___flmul@grs+3,??___flmul+3
 16222  002148  0E19               	movlw	25
 16223  00214A  D006               	goto	u11720
 16224  00214C                     u11725:
 16225  00214C  0100               	movlb	0	; () banked
 16226  00214E  90D8               	bcf	status,0,c
 16227  002150  337F               	rrcf	(??___flmul+3)& (0+255),f,b
 16228  002152  337E               	rrcf	(??___flmul+2)& (0+255),f,b
 16229  002154  337D               	rrcf	(??___flmul+1)& (0+255),f,b
 16230  002156  337C               	rrcf	??___flmul& (0+255),f,b
 16231  002158                     u11720:
 16232  002158  2EE8               	decfsz	wreg,f,c
 16233  00215A  D7F8               	goto	u11725
 16234  00215C  0100               	movlb	0	; () banked
 16235  00215E  517C               	movf	??___flmul& (0+255),w,b
 16236  002160  0100               	movlb	0	; () banked
 16237  002162  2787               	addwf	___flmul@prod& (0+255),f,b
 16238  002164  0100               	movlb	0	; () banked
 16239  002166  517D               	movf	(??___flmul+1)& (0+255),w,b
 16240  002168  0100               	movlb	0	; () banked
 16241  00216A  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16242  00216C  0100               	movlb	0	; () banked
 16243  00216E  517E               	movf	(??___flmul+2)& (0+255),w,b
 16244  002170  0100               	movlb	0	; () banked
 16245  002172  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16246  002174  0100               	movlb	0	; () banked
 16247  002176  517F               	movf	(??___flmul+3)& (0+255),w,b
 16248  002178  0100               	movlb	0	; () banked
 16249  00217A  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16250                           
 16251                           ; BSR set to: 0
 16252  00217C  C084  F085         	movff	___flmul@grs+2,___flmul@grs+3
 16253  002180  C083  F084         	movff	___flmul@grs+1,___flmul@grs+2
 16254  002184  C082  F083         	movff	___flmul@grs,___flmul@grs+1
 16255  002188  0100               	movlb	0	; () banked
 16256  00218A  6B82               	clrf	___flmul@grs& (0+255),b
 16257                           
 16258                           ; BSR set to: 0
 16259  00218C  0100               	movlb	0	; () banked
 16260  00218E  5181               	movf	___flmul@aexp& (0+255),w,b
 16261  002190  C086  F07C         	movff	___flmul@bexp,??___flmul
 16262  002194  0100               	movlb	0	; () banked
 16263  002196  6B7D               	clrf	(??___flmul+1)& (0+255),b
 16264  002198  0100               	movlb	0	; () banked
 16265  00219A  277C               	addwf	??___flmul& (0+255),f,b
 16266  00219C  0E00               	movlw	0
 16267  00219E  237D               	addwfc	(??___flmul+1)& (0+255),f,b
 16268  0021A0  0E82               	movlw	130
 16269  0021A2  0100               	movlb	0	; () banked
 16270  0021A4  257C               	addwf	??___flmul& (0+255),w,b
 16271  0021A6  0100               	movlb	0	; () banked
 16272  0021A8  6F8B               	movwf	___flmul@temp& (0+255),b
 16273  0021AA  0EFF               	movlw	255
 16274  0021AC  0100               	movlb	0	; () banked
 16275  0021AE  217D               	addwfc	(??___flmul+1)& (0+255),w,b
 16276  0021B0  0100               	movlb	0	; () banked
 16277  0021B2  6F8C               	movwf	(___flmul@temp+1)& (0+255),b
 16278  0021B4  D015               	goto	l12638
 16279  0021B6                     l12632:
 16280                           
 16281                           ; BSR set to: 0
 16282  0021B6  0100               	movlb	0	; () banked
 16283  0021B8  90D8               	bcf	status,0,c
 16284  0021BA  3787               	rlcf	___flmul@prod& (0+255),f,b
 16285  0021BC  3788               	rlcf	(___flmul@prod+1)& (0+255),f,b
 16286  0021BE  3789               	rlcf	(___flmul@prod+2)& (0+255),f,b
 16287  0021C0  378A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 16288                           
 16289                           ; BSR set to: 0
 16290  0021C2  0100               	movlb	0	; () banked
 16291  0021C4  AF85               	btfss	(___flmul@grs+3)& (0+255),7,b
 16292  0021C6  D002               	goto	l2652
 16293                           
 16294                           ; BSR set to: 0
 16295  0021C8  0100               	movlb	0	; () banked
 16296  0021CA  8187               	bsf	___flmul@prod& (0+255),0,b
 16297  0021CC                     l2652:
 16298                           
 16299                           ; BSR set to: 0
 16300  0021CC  0100               	movlb	0	; () banked
 16301  0021CE  90D8               	bcf	status,0,c
 16302  0021D0  3782               	rlcf	___flmul@grs& (0+255),f,b
 16303  0021D2  3783               	rlcf	(___flmul@grs+1)& (0+255),f,b
 16304  0021D4  3784               	rlcf	(___flmul@grs+2)& (0+255),f,b
 16305  0021D6  3785               	rlcf	(___flmul@grs+3)& (0+255),f,b
 16306  0021D8  0100               	movlb	0	; () banked
 16307  0021DA  078B               	decf	___flmul@temp& (0+255),f,b
 16308  0021DC  A0D8               	btfss	status,0,c
 16309  0021DE  078C               	decf	(___flmul@temp+1)& (0+255),f,b
 16310  0021E0                     l12638:
 16311                           
 16312                           ; BSR set to: 0
 16313  0021E0  0100               	movlb	0	; () banked
 16314  0021E2  AF89               	btfss	(___flmul@prod+2)& (0+255),7,b
 16315  0021E4  D7E8               	goto	l12632
 16316                           
 16317                           ; BSR set to: 0
 16318                           
 16319                           ; BSR set to: 0
 16320  0021E6  0E00               	movlw	0
 16321  0021E8  0100               	movlb	0	; () banked
 16322  0021EA  6F81               	movwf	___flmul@aexp& (0+255),b
 16323                           
 16324                           ; BSR set to: 0
 16325  0021EC  0100               	movlb	0	; () banked
 16326  0021EE  AF85               	btfss	(___flmul@grs+3)& (0+255),7,b
 16327  0021F0  D024               	goto	l2654
 16328                           
 16329                           ; BSR set to: 0
 16330  0021F2  0EFF               	movlw	255
 16331  0021F4  0100               	movlb	0	; () banked
 16332  0021F6  1582               	andwf	___flmul@grs& (0+255),w,b
 16333  0021F8  0100               	movlb	0	; () banked
 16334  0021FA  6F7C               	movwf	??___flmul& (0+255),b
 16335  0021FC  0EFF               	movlw	255
 16336  0021FE  0100               	movlb	0	; () banked
 16337  002200  1583               	andwf	(___flmul@grs+1)& (0+255),w,b
 16338  002202  0100               	movlb	0	; () banked
 16339  002204  6F7D               	movwf	(??___flmul+1)& (0+255),b
 16340  002206  0EFF               	movlw	255
 16341  002208  0100               	movlb	0	; () banked
 16342  00220A  1584               	andwf	(___flmul@grs+2)& (0+255),w,b
 16343  00220C  0100               	movlb	0	; () banked
 16344  00220E  6F7E               	movwf	(??___flmul+2)& (0+255),b
 16345  002210  0E7F               	movlw	127
 16346  002212  0100               	movlb	0	; () banked
 16347  002214  1585               	andwf	(___flmul@grs+3)& (0+255),w,b
 16348  002216  0100               	movlb	0	; () banked
 16349  002218  6F7F               	movwf	(??___flmul+3)& (0+255),b
 16350  00221A  0100               	movlb	0	; () banked
 16351  00221C  517C               	movf	??___flmul& (0+255),w,b
 16352  00221E  0100               	movlb	0	; () banked
 16353  002220  117D               	iorwf	(??___flmul+1)& (0+255),w,b
 16354  002222  0100               	movlb	0	; () banked
 16355  002224  117E               	iorwf	(??___flmul+2)& (0+255),w,b
 16356  002226  0100               	movlb	0	; () banked
 16357  002228  117F               	iorwf	(??___flmul+3)& (0+255),w,b
 16358  00222A  A4D8               	btfss	status,2,c
 16359  00222C  D003               	goto	l12648
 16360                           
 16361                           ; BSR set to: 0
 16362                           
 16363                           ; BSR set to: 0
 16364  00222E  0100               	movlb	0	; () banked
 16365  002230  A187               	btfss	___flmul@prod& (0+255),0,b
 16366  002232  D003               	goto	l2654
 16367  002234                     l12648:
 16368                           
 16369                           ; BSR set to: 0
 16370  002234  0E01               	movlw	1
 16371  002236  0100               	movlb	0	; () banked
 16372  002238  6F81               	movwf	___flmul@aexp& (0+255),b
 16373  00223A                     l2654:
 16374                           
 16375                           ; BSR set to: 0
 16376  00223A  0100               	movlb	0	; () banked
 16377  00223C  5181               	movf	___flmul@aexp& (0+255),w,b
 16378  00223E  0100               	movlb	0	; () banked
 16379  002240  B4D8               	btfsc	status,2,c
 16380  002242  D023               	goto	l12658
 16381                           
 16382                           ; BSR set to: 0
 16383  002244  0E01               	movlw	1
 16384  002246  0100               	movlb	0	; () banked
 16385  002248  2787               	addwf	___flmul@prod& (0+255),f,b
 16386  00224A  0E00               	movlw	0
 16387  00224C  2388               	addwfc	(___flmul@prod+1)& (0+255),f,b
 16388  00224E  2389               	addwfc	(___flmul@prod+2)& (0+255),f,b
 16389  002250  238A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 16390                           
 16391                           ; BSR set to: 0
 16392  002252  0100               	movlb	0	; () banked
 16393  002254  A18A               	btfss	(___flmul@prod+3)& (0+255),0,b
 16394  002256  D019               	goto	l12658
 16395                           
 16396                           ; BSR set to: 0
 16397  002258  C087  F07C         	movff	___flmul@prod,??___flmul
 16398  00225C  C088  F07D         	movff	___flmul@prod+1,??___flmul+1
 16399  002260  C089  F07E         	movff	___flmul@prod+2,??___flmul+2
 16400  002264  C08A  F07F         	movff	___flmul@prod+3,??___flmul+3
 16401  002268  0100               	movlb	0	; () banked
 16402  00226A  357F               	rlcf	(??___flmul+3)& (0+255),w,b
 16403  00226C  337F               	rrcf	(??___flmul+3)& (0+255),f,b
 16404  00226E  337E               	rrcf	(??___flmul+2)& (0+255),f,b
 16405  002270  337D               	rrcf	(??___flmul+1)& (0+255),f,b
 16406  002272  337C               	rrcf	??___flmul& (0+255),f,b
 16407  002274  C07C  F087         	movff	??___flmul,___flmul@prod
 16408  002278  C07D  F088         	movff	??___flmul+1,___flmul@prod+1
 16409  00227C  C07E  F089         	movff	??___flmul+2,___flmul@prod+2
 16410  002280  C07F  F08A         	movff	??___flmul+3,___flmul@prod+3
 16411                           
 16412                           ; BSR set to: 0
 16413  002284  0100               	movlb	0	; () banked
 16414  002286  4B8B               	infsnz	___flmul@temp& (0+255),f,b
 16415  002288  2B8C               	incf	(___flmul@temp+1)& (0+255),f,b
 16416  00228A                     l12658:
 16417                           
 16418                           ; BSR set to: 0
 16419  00228A  0100               	movlb	0	; () banked
 16420  00228C  BF8C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 16421  00228E  D010               	goto	l12662
 16422  002290  0100               	movlb	0	; () banked
 16423  002292  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16424  002294  E104               	bnz	u11800
 16425  002296  0100               	movlb	0	; () banked
 16426  002298  298B               	incf	___flmul@temp& (0+255),w,b
 16427  00229A  A0D8               	btfss	status,0,c
 16428  00229C  D009               	goto	l12662
 16429  00229E                     u11800:
 16430                           
 16431                           ; BSR set to: 0
 16432  00229E  0E00               	movlw	0
 16433  0022A0  0100               	movlb	0	; () banked
 16434  0022A2  6F87               	movwf	___flmul@prod& (0+255),b
 16435  0022A4  0E00               	movlw	0
 16436  0022A6  6F88               	movwf	(___flmul@prod+1)& (0+255),b
 16437  0022A8  0E80               	movlw	128
 16438  0022AA  6F89               	movwf	(___flmul@prod+2)& (0+255),b
 16439  0022AC  0E7F               	movlw	127
 16440  0022AE  D02B               	goto	L11
 16441  0022B0                     l12662:
 16442                           
 16443                           ; BSR set to: 0
 16444  0022B0  0100               	movlb	0	; () banked
 16445  0022B2  BF8C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 16446  0022B4  D007               	goto	l12664
 16447  0022B6  0100               	movlb	0	; () banked
 16448  0022B8  518C               	movf	(___flmul@temp+1)& (0+255),w,b
 16449  0022BA  E111               	bnz	l2662
 16450  0022BC  0100               	movlb	0	; () banked
 16451  0022BE  058B               	decf	___flmul@temp& (0+255),w,b
 16452  0022C0  B0D8               	btfsc	status,0,c
 16453  0022C2  D00D               	goto	l2662
 16454  0022C4                     l12664:
 16455                           
 16456                           ; BSR set to: 0
 16457  0022C4  0E00               	movlw	0
 16458  0022C6  0100               	movlb	0	; () banked
 16459  0022C8  6F87               	movwf	___flmul@prod& (0+255),b
 16460  0022CA  0E00               	movlw	0
 16461  0022CC  6F88               	movwf	(___flmul@prod+1)& (0+255),b
 16462  0022CE  0E00               	movlw	0
 16463  0022D0  6F89               	movwf	(___flmul@prod+2)& (0+255),b
 16464  0022D2  0E00               	movlw	0
 16465  0022D4  6F8A               	movwf	(___flmul@prod+3)& (0+255),b
 16466  0022D6  0E00               	movlw	0
 16467  0022D8  0100               	movlb	0	; () banked
 16468  0022DA  6F80               	movwf	___flmul@sign& (0+255),b
 16469  0022DC  D015               	goto	l12674
 16470  0022DE                     l2662:
 16471                           
 16472                           ; BSR set to: 0
 16473  0022DE  C08B  F086         	movff	___flmul@temp,___flmul@bexp
 16474                           
 16475                           ; BSR set to: 0
 16476  0022E2  0EFF               	movlw	255
 16477  0022E4  0100               	movlb	0	; () banked
 16478  0022E6  1787               	andwf	___flmul@prod& (0+255),f,b
 16479  0022E8  0EFF               	movlw	255
 16480  0022EA  1788               	andwf	(___flmul@prod+1)& (0+255),f,b
 16481  0022EC  0E7F               	movlw	127
 16482  0022EE  1789               	andwf	(___flmul@prod+2)& (0+255),f,b
 16483  0022F0  0E00               	movlw	0
 16484  0022F2  178A               	andwf	(___flmul@prod+3)& (0+255),f,b
 16485                           
 16486                           ; BSR set to: 0
 16487  0022F4  0100               	movlb	0	; () banked
 16488  0022F6  A186               	btfss	___flmul@bexp& (0+255),0,b
 16489  0022F8  D002               	goto	l12672
 16490                           
 16491                           ; BSR set to: 0
 16492  0022FA  0100               	movlb	0	; () banked
 16493  0022FC  8F89               	bsf	(___flmul@prod+2)& (0+255),7,b
 16494  0022FE                     l12672:
 16495                           
 16496                           ; BSR set to: 0
 16497  0022FE  0100               	movlb	0	; () banked
 16498  002300  90D8               	bcf	status,0,c
 16499  002302  3186               	rrcf	___flmul@bexp& (0+255),w,b
 16500  002304  0100               	movlb	0	; () banked
 16501  002306                     L11:
 16502  002306  6F8A               	movwf	(___flmul@prod+3)& (0+255),b
 16503  002308                     l12674:
 16504                           
 16505                           ; BSR set to: 0
 16506  002308  0100               	movlb	0	; () banked
 16507  00230A  5180               	movf	___flmul@sign& (0+255),w,b
 16508  00230C  0100               	movlb	0	; () banked
 16509  00230E  138A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 16510                           
 16511                           ; BSR set to: 0
 16512  002310  C087  F074         	movff	___flmul@prod,?___flmul
 16513  002314  C088  F075         	movff	___flmul@prod+1,?___flmul+1
 16514  002318  C089  F076         	movff	___flmul@prod+2,?___flmul+2
 16515  00231C  C08A  F077         	movff	___flmul@prod+3,?___flmul+3
 16516  002320  0012               	return	
 16517  002322                     __end_of___flmul:
 16518                           	opt stack 0
 16519                           tblptru	equ	0xFF8
 16520                           tblptrh	equ	0xFF7
 16521                           tblptrl	equ	0xFF6
 16522                           tablat	equ	0xFF5
 16523                           prodh	equ	0xFF4
 16524                           prodl	equ	0xFF3
 16525                           intcon	equ	0xFF2
 16526                           intcon3	equ	0xFF0
 16527                           postinc0	equ	0xFEE
 16528                           wreg	equ	0xFE8
 16529                           indf1	equ	0xFE7
 16530                           postdec1	equ	0xFE5
 16531                           fsr1h	equ	0xFE2
 16532                           fsr1l	equ	0xFE1
 16533                           indf2	equ	0xFDF
 16534                           fsr2h	equ	0xFDA
 16535                           fsr2l	equ	0xFD9
 16536                           status	equ	0xFD8
 16537                           
 16538 ;; *************** function ___fldiv *****************
 16539 ;; Defined at:
 16540 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 16541 ;; Parameters:    Size  Location     Type
 16542 ;;  b               4   45[BANK0 ] unsigned char 
 16543 ;;  a               4   49[BANK0 ] unsigned char 
 16544 ;; Auto vars:     Size  Location     Type
 16545 ;;  grs             4   64[BANK0 ] unsigned long 
 16546 ;;  rem             4   58[BANK0 ] unsigned long 
 16547 ;;  new_exp         2   62[BANK0 ] int 
 16548 ;;  aexp            1   69[BANK0 ] unsigned char 
 16549 ;;  bexp            1   68[BANK0 ] unsigned char 
 16550 ;;  sign            1   57[BANK0 ] unsigned char 
 16551 ;; Return value:  Size  Location     Type
 16552 ;;                  4   45[BANK0 ] unsigned char 
 16553 ;; Registers used:
 16554 ;;		wreg, status,2, status,0
 16555 ;; Tracked objects:
 16556 ;;		On entry : 0/0
 16557 ;;		On exit  : 0/0
 16558 ;;		Unchanged: 0/0
 16559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 16560 ;;      Params:         0       8       0       0       0       0       0       0       0
 16561 ;;      Locals:         0      13       0       0       0       0       0       0       0
 16562 ;;      Temps:          0       4       0       0       0       0       0       0       0
 16563 ;;      Totals:         0      25       0       0       0       0       0       0       0
 16564 ;;Total ram usage:       25 bytes
 16565 ;; Hardware stack levels used:    1
 16566 ;; Hardware stack levels required when called:   11
 16567 ;; This function calls:
 16568 ;;		Nothing
 16569 ;; This function is called by:
 16570 ;;		_ADC_TempConversion
 16571 ;; This function uses a non-reentrant model
 16572 ;;
 16573                           
 16574                           	psect	text49
 16575  0027C0                     __ptext49:
 16576                           	opt stack 0
 16577  0027C0                     ___fldiv:
 16578                           	opt stack 16
 16579                           
 16580                           ; BSR set to: 0
 16581                           ;incstack = 0
 16582  0027C0  0100               	movlb	0	; () banked
 16583  0027C2  5190               	movf	(___fldiv@b+3)& (0+255),w,b
 16584  0027C4  0B80               	andlw	128
 16585  0027C6  0100               	movlb	0	; () banked
 16586  0027C8  6F99               	movwf	___fldiv@sign& (0+255),b
 16587  0027CA  0100               	movlb	0	; () banked
 16588  0027CC  5190               	movf	(___fldiv@b+3)& (0+255),w,b
 16589  0027CE  2590               	addwf	(___fldiv@b+3)& (0+255),w,b
 16590  0027D0  0100               	movlb	0	; () banked
 16591  0027D2  6FA4               	movwf	___fldiv@bexp& (0+255),b
 16592                           
 16593                           ; BSR set to: 0
 16594  0027D4  0100               	movlb	0	; () banked
 16595  0027D6  AF8F               	btfss	(___fldiv@b+2)& (0+255),7,b
 16596  0027D8  D002               	goto	l12420
 16597                           
 16598                           ; BSR set to: 0
 16599  0027DA  0100               	movlb	0	; () banked
 16600  0027DC  81A4               	bsf	___fldiv@bexp& (0+255),0,b
 16601  0027DE                     l12420:
 16602                           
 16603                           ; BSR set to: 0
 16604  0027DE  0100               	movlb	0	; () banked
 16605  0027E0  51A4               	movf	___fldiv@bexp& (0+255),w,b
 16606  0027E2  0100               	movlb	0	; () banked
 16607  0027E4  B4D8               	btfsc	status,2,c
 16608  0027E6  D012               	goto	l12430
 16609                           
 16610                           ; BSR set to: 0
 16611  0027E8  0100               	movlb	0	; () banked
 16612  0027EA  29A4               	incf	___fldiv@bexp& (0+255),w,b
 16613  0027EC  A4D8               	btfss	status,2,c
 16614  0027EE  D009               	goto	l12426
 16615                           
 16616                           ; BSR set to: 0
 16617  0027F0  0E00               	movlw	0
 16618  0027F2  0100               	movlb	0	; () banked
 16619  0027F4  6F8D               	movwf	___fldiv@b& (0+255),b
 16620  0027F6  0E00               	movlw	0
 16621  0027F8  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 16622  0027FA  0E00               	movlw	0
 16623  0027FC  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 16624  0027FE  0E00               	movlw	0
 16625  002800  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 16626  002802                     l12426:
 16627                           
 16628                           ; BSR set to: 0
 16629  002802  0100               	movlb	0	; () banked
 16630  002804  8F8F               	bsf	(___fldiv@b+2)& (0+255),7,b
 16631                           
 16632                           ; BSR set to: 0
 16633  002806  0E00               	movlw	0
 16634  002808  0100               	movlb	0	; () banked
 16635  00280A  D008               	goto	L12
 16636  00280C                     l12430:
 16637                           
 16638                           ; BSR set to: 0
 16639  00280C  0E00               	movlw	0
 16640  00280E  0100               	movlb	0	; () banked
 16641  002810  6F8D               	movwf	___fldiv@b& (0+255),b
 16642  002812  0E00               	movlw	0
 16643  002814  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 16644  002816  0E00               	movlw	0
 16645  002818  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 16646  00281A  0E00               	movlw	0
 16647  00281C                     L12:
 16648  00281C  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 16649                           
 16650                           ; BSR set to: 0
 16651                           
 16652                           ; BSR set to: 0
 16653  00281E  0100               	movlb	0	; () banked
 16654  002820  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 16655  002822  0B80               	andlw	128
 16656  002824  0100               	movlb	0	; () banked
 16657  002826  1B99               	xorwf	___fldiv@sign& (0+255),f,b
 16658                           
 16659                           ; BSR set to: 0
 16660  002828  0100               	movlb	0	; () banked
 16661  00282A  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 16662  00282C  2594               	addwf	(___fldiv@a+3)& (0+255),w,b
 16663  00282E  0100               	movlb	0	; () banked
 16664  002830  6FA5               	movwf	___fldiv@aexp& (0+255),b
 16665                           
 16666                           ; BSR set to: 0
 16667  002832  0100               	movlb	0	; () banked
 16668  002834  AF93               	btfss	(___fldiv@a+2)& (0+255),7,b
 16669  002836  D002               	goto	l12440
 16670                           
 16671                           ; BSR set to: 0
 16672  002838  0100               	movlb	0	; () banked
 16673  00283A  81A5               	bsf	___fldiv@aexp& (0+255),0,b
 16674  00283C                     l12440:
 16675                           
 16676                           ; BSR set to: 0
 16677  00283C  0100               	movlb	0	; () banked
 16678  00283E  51A5               	movf	___fldiv@aexp& (0+255),w,b
 16679  002840  0100               	movlb	0	; () banked
 16680  002842  B4D8               	btfsc	status,2,c
 16681  002844  D012               	goto	l12450
 16682                           
 16683                           ; BSR set to: 0
 16684  002846  0100               	movlb	0	; () banked
 16685  002848  29A5               	incf	___fldiv@aexp& (0+255),w,b
 16686  00284A  A4D8               	btfss	status,2,c
 16687  00284C  D009               	goto	l12446
 16688                           
 16689                           ; BSR set to: 0
 16690  00284E  0E00               	movlw	0
 16691  002850  0100               	movlb	0	; () banked
 16692  002852  6F91               	movwf	___fldiv@a& (0+255),b
 16693  002854  0E00               	movlw	0
 16694  002856  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 16695  002858  0E00               	movlw	0
 16696  00285A  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 16697  00285C  0E00               	movlw	0
 16698  00285E  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 16699  002860                     l12446:
 16700                           
 16701                           ; BSR set to: 0
 16702  002860  0100               	movlb	0	; () banked
 16703  002862  8F93               	bsf	(___fldiv@a+2)& (0+255),7,b
 16704                           
 16705                           ; BSR set to: 0
 16706  002864  0E00               	movlw	0
 16707  002866  0100               	movlb	0	; () banked
 16708  002868  D008               	goto	L13
 16709  00286A                     l12450:
 16710                           
 16711                           ; BSR set to: 0
 16712  00286A  0E00               	movlw	0
 16713  00286C  0100               	movlb	0	; () banked
 16714  00286E  6F91               	movwf	___fldiv@a& (0+255),b
 16715  002870  0E00               	movlw	0
 16716  002872  6F92               	movwf	(___fldiv@a+1)& (0+255),b
 16717  002874  0E00               	movlw	0
 16718  002876  6F93               	movwf	(___fldiv@a+2)& (0+255),b
 16719  002878  0E00               	movlw	0
 16720  00287A                     L13:
 16721  00287A  6F94               	movwf	(___fldiv@a+3)& (0+255),b
 16722                           
 16723                           ; BSR set to: 0
 16724                           
 16725                           ; BSR set to: 0
 16726  00287C  0100               	movlb	0	; () banked
 16727  00287E  5191               	movf	___fldiv@a& (0+255),w,b
 16728  002880  0100               	movlb	0	; () banked
 16729  002882  1192               	iorwf	(___fldiv@a+1)& (0+255),w,b
 16730  002884  0100               	movlb	0	; () banked
 16731  002886  1193               	iorwf	(___fldiv@a+2)& (0+255),w,b
 16732  002888  0100               	movlb	0	; () banked
 16733  00288A  1194               	iorwf	(___fldiv@a+3)& (0+255),w,b
 16734  00288C  A4D8               	btfss	status,2,c
 16735  00288E  D017               	goto	l12462
 16736                           
 16737                           ; BSR set to: 0
 16738  002890  0E00               	movlw	0
 16739  002892  0100               	movlb	0	; () banked
 16740  002894  6F8D               	movwf	___fldiv@b& (0+255),b
 16741  002896  0E00               	movlw	0
 16742  002898  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 16743  00289A  0E00               	movlw	0
 16744  00289C  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 16745  00289E  0E00               	movlw	0
 16746  0028A0  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 16747                           
 16748                           ; BSR set to: 0
 16749  0028A2  0100               	movlb	0	; () banked
 16750  0028A4  0E80               	movlw	128
 16751  0028A6  138F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 16752  0028A8  0E7F               	movlw	127
 16753  0028AA  1390               	iorwf	(___fldiv@b+3)& (0+255),f,b
 16754                           
 16755                           ; BSR set to: 0
 16756  0028AC  C08D  F08D         	movff	___fldiv@b,?___fldiv
 16757  0028B0  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 16758  0028B4  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 16759  0028B8  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 16760                           
 16761                           ; BSR set to: 0
 16762  0028BC  0012               	return	
 16763  0028BE                     l12462:
 16764                           
 16765                           ; BSR set to: 0
 16766  0028BE  0100               	movlb	0	; () banked
 16767  0028C0  51A4               	movf	___fldiv@bexp& (0+255),w,b
 16768  0028C2  0100               	movlb	0	; () banked
 16769  0028C4  A4D8               	btfss	status,2,c
 16770  0028C6  D012               	goto	l12470
 16771                           
 16772                           ; BSR set to: 0
 16773  0028C8  0E00               	movlw	0
 16774  0028CA  0100               	movlb	0	; () banked
 16775  0028CC  6F8D               	movwf	___fldiv@b& (0+255),b
 16776  0028CE  0E00               	movlw	0
 16777  0028D0  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 16778  0028D2  0E00               	movlw	0
 16779  0028D4  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 16780  0028D6  0E00               	movlw	0
 16781  0028D8  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 16782                           
 16783                           ; BSR set to: 0
 16784  0028DA  C08D  F08D         	movff	___fldiv@b,?___fldiv
 16785  0028DE  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 16786  0028E2  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 16787  0028E6  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 16788                           
 16789                           ; BSR set to: 0
 16790  0028EA  0012               	return	
 16791  0028EC                     l12470:
 16792                           
 16793                           ; BSR set to: 0
 16794  0028EC  0100               	movlb	0	; () banked
 16795  0028EE  51A5               	movf	___fldiv@aexp& (0+255),w,b
 16796  0028F0  0100               	movlb	0	; () banked
 16797  0028F2  6F95               	movwf	??___fldiv& (0+255),b
 16798  0028F4  6B96               	clrf	(??___fldiv+1)& (0+255),b
 16799  0028F6  0100               	movlb	0	; () banked
 16800  0028F8  1F95               	comf	??___fldiv& (0+255),f,b
 16801  0028FA  1F96               	comf	(??___fldiv+1)& (0+255),f,b
 16802  0028FC  4B95               	infsnz	??___fldiv& (0+255),f,b
 16803  0028FE  2B96               	incf	(??___fldiv+1)& (0+255),f,b
 16804  002900  0100               	movlb	0	; () banked
 16805  002902  51A4               	movf	___fldiv@bexp& (0+255),w,b
 16806  002904  0100               	movlb	0	; () banked
 16807  002906  6F97               	movwf	(??___fldiv+2)& (0+255),b
 16808  002908  6B98               	clrf	(??___fldiv+3)& (0+255),b
 16809  00290A  0100               	movlb	0	; () banked
 16810  00290C  5195               	movf	??___fldiv& (0+255),w,b
 16811  00290E  0100               	movlb	0	; () banked
 16812  002910  2797               	addwf	(??___fldiv+2)& (0+255),f,b
 16813  002912  0100               	movlb	0	; () banked
 16814  002914  5196               	movf	(??___fldiv+1)& (0+255),w,b
 16815  002916  0100               	movlb	0	; () banked
 16816  002918  2398               	addwfc	(??___fldiv+3)& (0+255),f,b
 16817  00291A  0E7F               	movlw	127
 16818  00291C  0100               	movlb	0	; () banked
 16819  00291E  2597               	addwf	(??___fldiv+2)& (0+255),w,b
 16820  002920  0100               	movlb	0	; () banked
 16821  002922  6F9E               	movwf	___fldiv@new_exp& (0+255),b
 16822  002924  0E00               	movlw	0
 16823  002926  0100               	movlb	0	; () banked
 16824  002928  2198               	addwfc	(??___fldiv+3)& (0+255),w,b
 16825  00292A  0100               	movlb	0	; () banked
 16826  00292C  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 16827                           
 16828                           ; BSR set to: 0
 16829  00292E  C08D  F09A         	movff	___fldiv@b,___fldiv@rem
 16830  002932  C08E  F09B         	movff	___fldiv@b+1,___fldiv@rem+1
 16831  002936  C08F  F09C         	movff	___fldiv@b+2,___fldiv@rem+2
 16832  00293A  C090  F09D         	movff	___fldiv@b+3,___fldiv@rem+3
 16833                           
 16834                           ; BSR set to: 0
 16835  00293E  0E00               	movlw	0
 16836  002940  0100               	movlb	0	; () banked
 16837  002942  6F8D               	movwf	___fldiv@b& (0+255),b
 16838  002944  0E00               	movlw	0
 16839  002946  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 16840  002948  0E00               	movlw	0
 16841  00294A  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 16842  00294C  0E00               	movlw	0
 16843  00294E  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 16844                           
 16845                           ; BSR set to: 0
 16846  002950  0E00               	movlw	0
 16847  002952  0100               	movlb	0	; () banked
 16848  002954  6FA0               	movwf	___fldiv@grs& (0+255),b
 16849  002956  0E00               	movlw	0
 16850  002958  6FA1               	movwf	(___fldiv@grs+1)& (0+255),b
 16851  00295A  0E00               	movlw	0
 16852  00295C  6FA2               	movwf	(___fldiv@grs+2)& (0+255),b
 16853  00295E  0E00               	movlw	0
 16854  002960  6FA3               	movwf	(___fldiv@grs+3)& (0+255),b
 16855                           
 16856                           ; BSR set to: 0
 16857  002962  0E00               	movlw	0
 16858  002964  0100               	movlb	0	; () banked
 16859  002966  6FA5               	movwf	___fldiv@aexp& (0+255),b
 16860  002968  D042               	goto	l2615
 16861  00296A                     l12480:
 16862                           
 16863                           ; BSR set to: 0
 16864  00296A  0100               	movlb	0	; () banked
 16865  00296C  51A5               	movf	___fldiv@aexp& (0+255),w,b
 16866  00296E  0100               	movlb	0	; () banked
 16867  002970  B4D8               	btfsc	status,2,c
 16868  002972  D017               	goto	l12488
 16869                           
 16870                           ; BSR set to: 0
 16871  002974  0100               	movlb	0	; () banked
 16872  002976  90D8               	bcf	status,0,c
 16873  002978  379A               	rlcf	___fldiv@rem& (0+255),f,b
 16874  00297A  379B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 16875  00297C  379C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 16876  00297E  379D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 16877  002980  0100               	movlb	0	; () banked
 16878  002982  90D8               	bcf	status,0,c
 16879  002984  378D               	rlcf	___fldiv@b& (0+255),f,b
 16880  002986  378E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 16881  002988  378F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 16882  00298A  3790               	rlcf	(___fldiv@b+3)& (0+255),f,b
 16883                           
 16884                           ; BSR set to: 0
 16885  00298C  0100               	movlb	0	; () banked
 16886  00298E  AFA3               	btfss	(___fldiv@grs+3)& (0+255),7,b
 16887  002990  D002               	goto	l2618
 16888                           
 16889                           ; BSR set to: 0
 16890  002992  0100               	movlb	0	; () banked
 16891  002994  818D               	bsf	___fldiv@b& (0+255),0,b
 16892  002996                     l2618:
 16893                           
 16894                           ; BSR set to: 0
 16895  002996  0100               	movlb	0	; () banked
 16896  002998  90D8               	bcf	status,0,c
 16897  00299A  37A0               	rlcf	___fldiv@grs& (0+255),f,b
 16898  00299C  37A1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 16899  00299E  37A2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 16900  0029A0  37A3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 16901  0029A2                     l12488:
 16902                           
 16903                           ; BSR set to: 0
 16904  0029A2  0100               	movlb	0	; () banked
 16905  0029A4  5191               	movf	___fldiv@a& (0+255),w,b
 16906  0029A6  0100               	movlb	0	; () banked
 16907  0029A8  5D9A               	subwf	___fldiv@rem& (0+255),w,b
 16908  0029AA  0100               	movlb	0	; () banked
 16909  0029AC  5192               	movf	(___fldiv@a+1)& (0+255),w,b
 16910  0029AE  0100               	movlb	0	; () banked
 16911  0029B0  599B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 16912  0029B2  0100               	movlb	0	; () banked
 16913  0029B4  5193               	movf	(___fldiv@a+2)& (0+255),w,b
 16914  0029B6  0100               	movlb	0	; () banked
 16915  0029B8  599C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 16916  0029BA  0100               	movlb	0	; () banked
 16917  0029BC  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 16918  0029BE  0100               	movlb	0	; () banked
 16919  0029C0  599D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 16920  0029C2  A0D8               	btfss	status,0,c
 16921  0029C4  D012               	goto	l12494
 16922                           
 16923                           ; BSR set to: 0
 16924  0029C6  0100               	movlb	0	; () banked
 16925  0029C8  8DA3               	bsf	(___fldiv@grs+3)& (0+255),6,b
 16926                           
 16927                           ; BSR set to: 0
 16928  0029CA  0100               	movlb	0	; () banked
 16929  0029CC  5191               	movf	___fldiv@a& (0+255),w,b
 16930  0029CE  0100               	movlb	0	; () banked
 16931  0029D0  5F9A               	subwf	___fldiv@rem& (0+255),f,b
 16932  0029D2  0100               	movlb	0	; () banked
 16933  0029D4  5192               	movf	(___fldiv@a+1)& (0+255),w,b
 16934  0029D6  0100               	movlb	0	; () banked
 16935  0029D8  5B9B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 16936  0029DA  0100               	movlb	0	; () banked
 16937  0029DC  5193               	movf	(___fldiv@a+2)& (0+255),w,b
 16938  0029DE  0100               	movlb	0	; () banked
 16939  0029E0  5B9C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 16940  0029E2  0100               	movlb	0	; () banked
 16941  0029E4  5194               	movf	(___fldiv@a+3)& (0+255),w,b
 16942  0029E6  0100               	movlb	0	; () banked
 16943  0029E8  5B9D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 16944  0029EA                     l12494:
 16945                           
 16946                           ; BSR set to: 0
 16947  0029EA  0100               	movlb	0	; () banked
 16948  0029EC  2BA5               	incf	___fldiv@aexp& (0+255),f,b
 16949  0029EE                     l2615:
 16950                           
 16951                           ; BSR set to: 0
 16952  0029EE  0E19               	movlw	25
 16953  0029F0  0100               	movlb	0	; () banked
 16954  0029F2  65A5               	cpfsgt	___fldiv@aexp& (0+255),b
 16955  0029F4  D7BA               	goto	l12480
 16956                           
 16957                           ; BSR set to: 0
 16958                           
 16959                           ; BSR set to: 0
 16960  0029F6  0100               	movlb	0	; () banked
 16961  0029F8  519A               	movf	___fldiv@rem& (0+255),w,b
 16962  0029FA  0100               	movlb	0	; () banked
 16963  0029FC  119B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 16964  0029FE  0100               	movlb	0	; () banked
 16965  002A00  119C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 16966  002A02  0100               	movlb	0	; () banked
 16967  002A04  119D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 16968  002A06  B4D8               	btfsc	status,2,c
 16969  002A08  D018               	goto	l12506
 16970                           
 16971                           ; BSR set to: 0
 16972  002A0A  0100               	movlb	0	; () banked
 16973  002A0C  81A0               	bsf	___fldiv@grs& (0+255),0,b
 16974                           
 16975                           ; BSR set to: 0
 16976  002A0E  D015               	goto	l12506
 16977  002A10                     l12500:
 16978                           
 16979                           ; BSR set to: 0
 16980  002A10  0100               	movlb	0	; () banked
 16981  002A12  90D8               	bcf	status,0,c
 16982  002A14  378D               	rlcf	___fldiv@b& (0+255),f,b
 16983  002A16  378E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 16984  002A18  378F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 16985  002A1A  3790               	rlcf	(___fldiv@b+3)& (0+255),f,b
 16986                           
 16987                           ; BSR set to: 0
 16988  002A1C  0100               	movlb	0	; () banked
 16989  002A1E  AFA3               	btfss	(___fldiv@grs+3)& (0+255),7,b
 16990  002A20  D002               	goto	l2624
 16991                           
 16992                           ; BSR set to: 0
 16993  002A22  0100               	movlb	0	; () banked
 16994  002A24  818D               	bsf	___fldiv@b& (0+255),0,b
 16995  002A26                     l2624:
 16996                           
 16997                           ; BSR set to: 0
 16998  002A26  0100               	movlb	0	; () banked
 16999  002A28  90D8               	bcf	status,0,c
 17000  002A2A  37A0               	rlcf	___fldiv@grs& (0+255),f,b
 17001  002A2C  37A1               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 17002  002A2E  37A2               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 17003  002A30  37A3               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 17004  002A32  0100               	movlb	0	; () banked
 17005  002A34  079E               	decf	___fldiv@new_exp& (0+255),f,b
 17006  002A36  A0D8               	btfss	status,0,c
 17007  002A38  079F               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 17008  002A3A                     l12506:
 17009                           
 17010                           ; BSR set to: 0
 17011  002A3A  0100               	movlb	0	; () banked
 17012  002A3C  AF8F               	btfss	(___fldiv@b+2)& (0+255),7,b
 17013  002A3E  D7E8               	goto	l12500
 17014                           
 17015                           ; BSR set to: 0
 17016                           
 17017                           ; BSR set to: 0
 17018  002A40  0E00               	movlw	0
 17019  002A42  0100               	movlb	0	; () banked
 17020  002A44  6FA5               	movwf	___fldiv@aexp& (0+255),b
 17021                           
 17022                           ; BSR set to: 0
 17023  002A46  0100               	movlb	0	; () banked
 17024  002A48  AFA3               	btfss	(___fldiv@grs+3)& (0+255),7,b
 17025  002A4A  D024               	goto	l2626
 17026                           
 17027                           ; BSR set to: 0
 17028  002A4C  0EFF               	movlw	255
 17029  002A4E  0100               	movlb	0	; () banked
 17030  002A50  15A0               	andwf	___fldiv@grs& (0+255),w,b
 17031  002A52  0100               	movlb	0	; () banked
 17032  002A54  6F95               	movwf	??___fldiv& (0+255),b
 17033  002A56  0EFF               	movlw	255
 17034  002A58  0100               	movlb	0	; () banked
 17035  002A5A  15A1               	andwf	(___fldiv@grs+1)& (0+255),w,b
 17036  002A5C  0100               	movlb	0	; () banked
 17037  002A5E  6F96               	movwf	(??___fldiv+1)& (0+255),b
 17038  002A60  0EFF               	movlw	255
 17039  002A62  0100               	movlb	0	; () banked
 17040  002A64  15A2               	andwf	(___fldiv@grs+2)& (0+255),w,b
 17041  002A66  0100               	movlb	0	; () banked
 17042  002A68  6F97               	movwf	(??___fldiv+2)& (0+255),b
 17043  002A6A  0E7F               	movlw	127
 17044  002A6C  0100               	movlb	0	; () banked
 17045  002A6E  15A3               	andwf	(___fldiv@grs+3)& (0+255),w,b
 17046  002A70  0100               	movlb	0	; () banked
 17047  002A72  6F98               	movwf	(??___fldiv+3)& (0+255),b
 17048  002A74  0100               	movlb	0	; () banked
 17049  002A76  5195               	movf	??___fldiv& (0+255),w,b
 17050  002A78  0100               	movlb	0	; () banked
 17051  002A7A  1196               	iorwf	(??___fldiv+1)& (0+255),w,b
 17052  002A7C  0100               	movlb	0	; () banked
 17053  002A7E  1197               	iorwf	(??___fldiv+2)& (0+255),w,b
 17054  002A80  0100               	movlb	0	; () banked
 17055  002A82  1198               	iorwf	(??___fldiv+3)& (0+255),w,b
 17056  002A84  A4D8               	btfss	status,2,c
 17057  002A86  D003               	goto	l12516
 17058                           
 17059                           ; BSR set to: 0
 17060                           
 17061                           ; BSR set to: 0
 17062  002A88  0100               	movlb	0	; () banked
 17063  002A8A  A18D               	btfss	___fldiv@b& (0+255),0,b
 17064  002A8C  D003               	goto	l2626
 17065  002A8E                     l12516:
 17066                           
 17067                           ; BSR set to: 0
 17068  002A8E  0E01               	movlw	1
 17069  002A90  0100               	movlb	0	; () banked
 17070  002A92  6FA5               	movwf	___fldiv@aexp& (0+255),b
 17071  002A94                     l2626:
 17072                           
 17073                           ; BSR set to: 0
 17074  002A94  0100               	movlb	0	; () banked
 17075  002A96  51A5               	movf	___fldiv@aexp& (0+255),w,b
 17076  002A98  0100               	movlb	0	; () banked
 17077  002A9A  B4D8               	btfsc	status,2,c
 17078  002A9C  D023               	goto	l12526
 17079                           
 17080                           ; BSR set to: 0
 17081  002A9E  0E01               	movlw	1
 17082  002AA0  0100               	movlb	0	; () banked
 17083  002AA2  278D               	addwf	___fldiv@b& (0+255),f,b
 17084  002AA4  0E00               	movlw	0
 17085  002AA6  238E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 17086  002AA8  238F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 17087  002AAA  2390               	addwfc	(___fldiv@b+3)& (0+255),f,b
 17088                           
 17089                           ; BSR set to: 0
 17090  002AAC  0100               	movlb	0	; () banked
 17091  002AAE  A190               	btfss	(___fldiv@b+3)& (0+255),0,b
 17092  002AB0  D019               	goto	l12526
 17093                           
 17094                           ; BSR set to: 0
 17095  002AB2  C08D  F095         	movff	___fldiv@b,??___fldiv
 17096  002AB6  C08E  F096         	movff	___fldiv@b+1,??___fldiv+1
 17097  002ABA  C08F  F097         	movff	___fldiv@b+2,??___fldiv+2
 17098  002ABE  C090  F098         	movff	___fldiv@b+3,??___fldiv+3
 17099  002AC2  0100               	movlb	0	; () banked
 17100  002AC4  3598               	rlcf	(??___fldiv+3)& (0+255),w,b
 17101  002AC6  3398               	rrcf	(??___fldiv+3)& (0+255),f,b
 17102  002AC8  3397               	rrcf	(??___fldiv+2)& (0+255),f,b
 17103  002ACA  3396               	rrcf	(??___fldiv+1)& (0+255),f,b
 17104  002ACC  3395               	rrcf	??___fldiv& (0+255),f,b
 17105  002ACE  C095  F08D         	movff	??___fldiv,___fldiv@b
 17106  002AD2  C096  F08E         	movff	??___fldiv+1,___fldiv@b+1
 17107  002AD6  C097  F08F         	movff	??___fldiv+2,___fldiv@b+2
 17108  002ADA  C098  F090         	movff	??___fldiv+3,___fldiv@b+3
 17109                           
 17110                           ; BSR set to: 0
 17111  002ADE  0100               	movlb	0	; () banked
 17112  002AE0  4B9E               	infsnz	___fldiv@new_exp& (0+255),f,b
 17113  002AE2  2B9F               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 17114  002AE4                     l12526:
 17115                           
 17116                           ; BSR set to: 0
 17117  002AE4  0100               	movlb	0	; () banked
 17118  002AE6  BF9F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 17119  002AE8  D014               	goto	l12530
 17120  002AEA  0100               	movlb	0	; () banked
 17121  002AEC  519F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 17122  002AEE  E104               	bnz	u11610
 17123  002AF0  0100               	movlb	0	; () banked
 17124  002AF2  299E               	incf	___fldiv@new_exp& (0+255),w,b
 17125  002AF4  A0D8               	btfss	status,0,c
 17126  002AF6  D00D               	goto	l12530
 17127  002AF8                     u11610:
 17128                           
 17129                           ; BSR set to: 0
 17130  002AF8  0E00               	movlw	0
 17131  002AFA  0100               	movlb	0	; () banked
 17132  002AFC  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 17133  002AFE  699E               	setf	___fldiv@new_exp& (0+255),b
 17134  002B00  0E00               	movlw	0
 17135  002B02  0100               	movlb	0	; () banked
 17136  002B04  6F8D               	movwf	___fldiv@b& (0+255),b
 17137  002B06  0E00               	movlw	0
 17138  002B08  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 17139  002B0A  0E00               	movlw	0
 17140  002B0C  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 17141  002B0E  0E00               	movlw	0
 17142  002B10  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 17143  002B12                     l12530:
 17144                           
 17145                           ; BSR set to: 0
 17146  002B12  0100               	movlb	0	; () banked
 17147  002B14  BF9F               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 17148  002B16  D007               	goto	l12532
 17149  002B18  0100               	movlb	0	; () banked
 17150  002B1A  519F               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 17151  002B1C  E115               	bnz	l12534
 17152  002B1E  0100               	movlb	0	; () banked
 17153  002B20  059E               	decf	___fldiv@new_exp& (0+255),w,b
 17154  002B22  B0D8               	btfsc	status,0,c
 17155  002B24  D011               	goto	l12534
 17156  002B26                     l12532:
 17157                           
 17158                           ; BSR set to: 0
 17159  002B26  0E00               	movlw	0
 17160  002B28  0100               	movlb	0	; () banked
 17161  002B2A  6F9F               	movwf	(___fldiv@new_exp+1)& (0+255),b
 17162  002B2C  0E00               	movlw	0
 17163  002B2E  6F9E               	movwf	___fldiv@new_exp& (0+255),b
 17164  002B30  0E00               	movlw	0
 17165  002B32  0100               	movlb	0	; () banked
 17166  002B34  6F8D               	movwf	___fldiv@b& (0+255),b
 17167  002B36  0E00               	movlw	0
 17168  002B38  6F8E               	movwf	(___fldiv@b+1)& (0+255),b
 17169  002B3A  0E00               	movlw	0
 17170  002B3C  6F8F               	movwf	(___fldiv@b+2)& (0+255),b
 17171  002B3E  0E00               	movlw	0
 17172  002B40  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 17173  002B42  0E00               	movlw	0
 17174  002B44  0100               	movlb	0	; () banked
 17175  002B46  6F99               	movwf	___fldiv@sign& (0+255),b
 17176  002B48                     l12534:
 17177                           
 17178                           ; BSR set to: 0
 17179  002B48  C09E  F0A4         	movff	___fldiv@new_exp,___fldiv@bexp
 17180                           
 17181                           ; BSR set to: 0
 17182  002B4C  0100               	movlb	0	; () banked
 17183  002B4E  A1A4               	btfss	___fldiv@bexp& (0+255),0,b
 17184  002B50  D003               	goto	l12540
 17185                           
 17186                           ; BSR set to: 0
 17187  002B52  0100               	movlb	0	; () banked
 17188  002B54  8F8F               	bsf	(___fldiv@b+2)& (0+255),7,b
 17189  002B56  D002               	goto	l12542
 17190  002B58                     l12540:
 17191                           
 17192                           ; BSR set to: 0
 17193  002B58  0100               	movlb	0	; () banked
 17194  002B5A  9F8F               	bcf	(___fldiv@b+2)& (0+255),7,b
 17195  002B5C                     l12542:
 17196                           
 17197                           ; BSR set to: 0
 17198  002B5C  0100               	movlb	0	; () banked
 17199  002B5E  90D8               	bcf	status,0,c
 17200  002B60  31A4               	rrcf	___fldiv@bexp& (0+255),w,b
 17201  002B62  0100               	movlb	0	; () banked
 17202  002B64  6F90               	movwf	(___fldiv@b+3)& (0+255),b
 17203                           
 17204                           ; BSR set to: 0
 17205  002B66  0100               	movlb	0	; () banked
 17206  002B68  5199               	movf	___fldiv@sign& (0+255),w,b
 17207  002B6A  0100               	movlb	0	; () banked
 17208  002B6C  1390               	iorwf	(___fldiv@b+3)& (0+255),f,b
 17209                           
 17210                           ; BSR set to: 0
 17211  002B6E  C08D  F08D         	movff	___fldiv@b,?___fldiv
 17212  002B72  C08E  F08E         	movff	___fldiv@b+1,?___fldiv+1
 17213  002B76  C08F  F08F         	movff	___fldiv@b+2,?___fldiv+2
 17214  002B7A  C090  F090         	movff	___fldiv@b+3,?___fldiv+3
 17215  002B7E  0012               	return	
 17216  002B80                     __end_of___fldiv:
 17217                           	opt stack 0
 17218                           tblptru	equ	0xFF8
 17219                           tblptrh	equ	0xFF7
 17220                           tblptrl	equ	0xFF6
 17221                           tablat	equ	0xFF5
 17222                           prodh	equ	0xFF4
 17223                           prodl	equ	0xFF3
 17224                           intcon	equ	0xFF2
 17225                           intcon3	equ	0xFF0
 17226                           postinc0	equ	0xFEE
 17227                           wreg	equ	0xFE8
 17228                           indf1	equ	0xFE7
 17229                           postdec1	equ	0xFE5
 17230                           fsr1h	equ	0xFE2
 17231                           fsr1l	equ	0xFE1
 17232                           indf2	equ	0xFDF
 17233                           fsr2h	equ	0xFDA
 17234                           fsr2l	equ	0xFD9
 17235                           status	equ	0xFD8
 17236                           
 17237 ;; *************** function ___fladd *****************
 17238 ;; Defined at:
 17239 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
 17240 ;; Parameters:    Size  Location     Type
 17241 ;;  b               4    0[BANK0 ] unsigned char 
 17242 ;;  a               4    4[BANK0 ] unsigned char 
 17243 ;; Auto vars:     Size  Location     Type
 17244 ;;  grs             1   19[BANK0 ] unsigned char 
 17245 ;;  bexp            1   18[BANK0 ] unsigned char 
 17246 ;;  aexp            1   17[BANK0 ] unsigned char 
 17247 ;;  signs           1   16[BANK0 ] unsigned char 
 17248 ;; Return value:  Size  Location     Type
 17249 ;;                  4    0[BANK0 ] unsigned char 
 17250 ;; Registers used:
 17251 ;;		wreg, status,2, status,0
 17252 ;; Tracked objects:
 17253 ;;		On entry : 0/0
 17254 ;;		On exit  : 0/0
 17255 ;;		Unchanged: 0/0
 17256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 17257 ;;      Params:         0       8       0       0       0       0       0       0       0
 17258 ;;      Locals:         0       4       0       0       0       0       0       0       0
 17259 ;;      Temps:          0       8       0       0       0       0       0       0       0
 17260 ;;      Totals:         0      20       0       0       0       0       0       0       0
 17261 ;;Total ram usage:       20 bytes
 17262 ;; Hardware stack levels used:    1
 17263 ;; Hardware stack levels required when called:   11
 17264 ;; This function calls:
 17265 ;;		Nothing
 17266 ;; This function is called by:
 17267 ;;		_ADC_TempConversion
 17268 ;; This function uses a non-reentrant model
 17269 ;;
 17270                           
 17271                           	psect	text50
 17272  0019D4                     __ptext50:
 17273                           	opt stack 0
 17274  0019D4                     ___fladd:
 17275                           	opt stack 16
 17276                           
 17277                           ; BSR set to: 0
 17278                           ;incstack = 0
 17279  0019D4  0100               	movlb	0	; () banked
 17280  0019D6  5163               	movf	(___fladd@b+3)& (0+255),w,b
 17281  0019D8  0B80               	andlw	128
 17282  0019DA  0100               	movlb	0	; () banked
 17283  0019DC  6F70               	movwf	___fladd@signs& (0+255),b
 17284  0019DE  0100               	movlb	0	; () banked
 17285  0019E0  5163               	movf	(___fladd@b+3)& (0+255),w,b
 17286  0019E2  2563               	addwf	(___fladd@b+3)& (0+255),w,b
 17287  0019E4  0100               	movlb	0	; () banked
 17288  0019E6  6F72               	movwf	___fladd@bexp& (0+255),b
 17289                           
 17290                           ; BSR set to: 0
 17291  0019E8  0100               	movlb	0	; () banked
 17292  0019EA  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
 17293  0019EC  D002               	goto	l12218
 17294                           
 17295                           ; BSR set to: 0
 17296  0019EE  0100               	movlb	0	; () banked
 17297  0019F0  8172               	bsf	___fladd@bexp& (0+255),0,b
 17298  0019F2                     l12218:
 17299                           
 17300                           ; BSR set to: 0
 17301  0019F2  0100               	movlb	0	; () banked
 17302  0019F4  5172               	movf	___fladd@bexp& (0+255),w,b
 17303  0019F6  0100               	movlb	0	; () banked
 17304  0019F8  B4D8               	btfsc	status,2,c
 17305  0019FA  D012               	goto	l12228
 17306                           
 17307                           ; BSR set to: 0
 17308  0019FC  0100               	movlb	0	; () banked
 17309  0019FE  2972               	incf	___fladd@bexp& (0+255),w,b
 17310  001A00  A4D8               	btfss	status,2,c
 17311  001A02  D009               	goto	l12224
 17312                           
 17313                           ; BSR set to: 0
 17314  001A04  0E00               	movlw	0
 17315  001A06  0100               	movlb	0	; () banked
 17316  001A08  6F60               	movwf	___fladd@b& (0+255),b
 17317  001A0A  0E00               	movlw	0
 17318  001A0C  6F61               	movwf	(___fladd@b+1)& (0+255),b
 17319  001A0E  0E00               	movlw	0
 17320  001A10  6F62               	movwf	(___fladd@b+2)& (0+255),b
 17321  001A12  0E00               	movlw	0
 17322  001A14  6F63               	movwf	(___fladd@b+3)& (0+255),b
 17323  001A16                     l12224:
 17324                           
 17325                           ; BSR set to: 0
 17326  001A16  0100               	movlb	0	; () banked
 17327  001A18  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 17328                           
 17329                           ; BSR set to: 0
 17330  001A1A  0E00               	movlw	0
 17331  001A1C  0100               	movlb	0	; () banked
 17332  001A1E  D008               	goto	L14
 17333  001A20                     l12228:
 17334                           
 17335                           ; BSR set to: 0
 17336  001A20  0E00               	movlw	0
 17337  001A22  0100               	movlb	0	; () banked
 17338  001A24  6F60               	movwf	___fladd@b& (0+255),b
 17339  001A26  0E00               	movlw	0
 17340  001A28  6F61               	movwf	(___fladd@b+1)& (0+255),b
 17341  001A2A  0E00               	movlw	0
 17342  001A2C  6F62               	movwf	(___fladd@b+2)& (0+255),b
 17343  001A2E  0E00               	movlw	0
 17344  001A30                     L14:
 17345  001A30  6F63               	movwf	(___fladd@b+3)& (0+255),b
 17346                           
 17347                           ; BSR set to: 0
 17348                           
 17349                           ; BSR set to: 0
 17350  001A32  0100               	movlb	0	; () banked
 17351  001A34  5167               	movf	(___fladd@a+3)& (0+255),w,b
 17352  001A36  0B80               	andlw	128
 17353  001A38  0100               	movlb	0	; () banked
 17354  001A3A  6F71               	movwf	___fladd@aexp& (0+255),b
 17355                           
 17356                           ; BSR set to: 0
 17357  001A3C  0100               	movlb	0	; () banked
 17358  001A3E  5170               	movf	___fladd@signs& (0+255),w,b
 17359  001A40  0100               	movlb	0	; () banked
 17360  001A42  1971               	xorwf	___fladd@aexp& (0+255),w,b
 17361  001A44  B4D8               	btfsc	status,2,c
 17362  001A46  D002               	goto	l12236
 17363                           
 17364                           ; BSR set to: 0
 17365  001A48  0100               	movlb	0	; () banked
 17366  001A4A  8D70               	bsf	___fladd@signs& (0+255),6,b
 17367  001A4C                     l12236:
 17368                           
 17369                           ; BSR set to: 0
 17370  001A4C  0100               	movlb	0	; () banked
 17371  001A4E  5167               	movf	(___fladd@a+3)& (0+255),w,b
 17372  001A50  2567               	addwf	(___fladd@a+3)& (0+255),w,b
 17373  001A52  0100               	movlb	0	; () banked
 17374  001A54  6F71               	movwf	___fladd@aexp& (0+255),b
 17375                           
 17376                           ; BSR set to: 0
 17377  001A56  0100               	movlb	0	; () banked
 17378  001A58  AF66               	btfss	(___fladd@a+2)& (0+255),7,b
 17379  001A5A  D002               	goto	l12242
 17380                           
 17381                           ; BSR set to: 0
 17382  001A5C  0100               	movlb	0	; () banked
 17383  001A5E  8171               	bsf	___fladd@aexp& (0+255),0,b
 17384  001A60                     l12242:
 17385                           
 17386                           ; BSR set to: 0
 17387  001A60  0100               	movlb	0	; () banked
 17388  001A62  5171               	movf	___fladd@aexp& (0+255),w,b
 17389  001A64  0100               	movlb	0	; () banked
 17390  001A66  B4D8               	btfsc	status,2,c
 17391  001A68  D012               	goto	l12252
 17392                           
 17393                           ; BSR set to: 0
 17394  001A6A  0100               	movlb	0	; () banked
 17395  001A6C  2971               	incf	___fladd@aexp& (0+255),w,b
 17396  001A6E  A4D8               	btfss	status,2,c
 17397  001A70  D009               	goto	l12248
 17398                           
 17399                           ; BSR set to: 0
 17400  001A72  0E00               	movlw	0
 17401  001A74  0100               	movlb	0	; () banked
 17402  001A76  6F64               	movwf	___fladd@a& (0+255),b
 17403  001A78  0E00               	movlw	0
 17404  001A7A  6F65               	movwf	(___fladd@a+1)& (0+255),b
 17405  001A7C  0E00               	movlw	0
 17406  001A7E  6F66               	movwf	(___fladd@a+2)& (0+255),b
 17407  001A80  0E00               	movlw	0
 17408  001A82  6F67               	movwf	(___fladd@a+3)& (0+255),b
 17409  001A84                     l12248:
 17410                           
 17411                           ; BSR set to: 0
 17412  001A84  0100               	movlb	0	; () banked
 17413  001A86  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
 17414                           
 17415                           ; BSR set to: 0
 17416  001A88  0E00               	movlw	0
 17417  001A8A  0100               	movlb	0	; () banked
 17418  001A8C  D008               	goto	L15
 17419  001A8E                     l12252:
 17420                           
 17421                           ; BSR set to: 0
 17422  001A8E  0E00               	movlw	0
 17423  001A90  0100               	movlb	0	; () banked
 17424  001A92  6F64               	movwf	___fladd@a& (0+255),b
 17425  001A94  0E00               	movlw	0
 17426  001A96  6F65               	movwf	(___fladd@a+1)& (0+255),b
 17427  001A98  0E00               	movlw	0
 17428  001A9A  6F66               	movwf	(___fladd@a+2)& (0+255),b
 17429  001A9C  0E00               	movlw	0
 17430  001A9E                     L15:
 17431  001A9E  6F67               	movwf	(___fladd@a+3)& (0+255),b
 17432                           
 17433                           ; BSR set to: 0
 17434                           
 17435                           ; BSR set to: 0
 17436  001AA0  0100               	movlb	0	; () banked
 17437  001AA2  5172               	movf	___fladd@bexp& (0+255),w,b
 17438  001AA4  0100               	movlb	0	; () banked
 17439  001AA6  5D71               	subwf	___fladd@aexp& (0+255),w,b
 17440  001AA8  B0D8               	btfsc	status,0,c
 17441  001AAA  D024               	goto	l12290
 17442                           
 17443                           ; BSR set to: 0
 17444  001AAC  0100               	movlb	0	; () banked
 17445  001AAE  AD70               	btfss	___fladd@signs& (0+255),6,b
 17446  001AB0  D003               	goto	l12260
 17447                           
 17448                           ; BSR set to: 0
 17449  001AB2  0E80               	movlw	128
 17450  001AB4  0100               	movlb	0	; () banked
 17451  001AB6  1B70               	xorwf	___fladd@signs& (0+255),f,b
 17452  001AB8                     l12260:
 17453                           
 17454                           ; BSR set to: 0
 17455  001AB8  C072  F073         	movff	___fladd@bexp,___fladd@grs
 17456                           
 17457                           ; BSR set to: 0
 17458  001ABC  C071  F072         	movff	___fladd@aexp,___fladd@bexp
 17459                           
 17460                           ; BSR set to: 0
 17461  001AC0  C073  F071         	movff	___fladd@grs,___fladd@aexp
 17462                           
 17463                           ; BSR set to: 0
 17464  001AC4  C060  F073         	movff	___fladd@b,___fladd@grs
 17465                           
 17466                           ; BSR set to: 0
 17467  001AC8  C064  F060         	movff	___fladd@a,___fladd@b
 17468                           
 17469                           ; BSR set to: 0
 17470  001ACC  C073  F064         	movff	___fladd@grs,___fladd@a
 17471                           
 17472                           ; BSR set to: 0
 17473  001AD0  C061  F073         	movff	___fladd@b+1,___fladd@grs
 17474                           
 17475                           ; BSR set to: 0
 17476  001AD4  C065  F061         	movff	___fladd@a+1,___fladd@b+1
 17477                           
 17478                           ; BSR set to: 0
 17479  001AD8  C073  F065         	movff	___fladd@grs,___fladd@a+1
 17480                           
 17481                           ; BSR set to: 0
 17482  001ADC  C062  F073         	movff	___fladd@b+2,___fladd@grs
 17483                           
 17484                           ; BSR set to: 0
 17485  001AE0  C066  F062         	movff	___fladd@a+2,___fladd@b+2
 17486                           
 17487                           ; BSR set to: 0
 17488  001AE4  C073  F066         	movff	___fladd@grs,___fladd@a+2
 17489                           
 17490                           ; BSR set to: 0
 17491  001AE8  C063  F073         	movff	___fladd@b+3,___fladd@grs
 17492                           
 17493                           ; BSR set to: 0
 17494  001AEC  C067  F063         	movff	___fladd@a+3,___fladd@b+3
 17495                           
 17496                           ; BSR set to: 0
 17497  001AF0  C073  F067         	movff	___fladd@grs,___fladd@a+3
 17498  001AF4                     l12290:
 17499                           
 17500                           ; BSR set to: 0
 17501  001AF4  0E00               	movlw	0
 17502  001AF6  0100               	movlb	0	; () banked
 17503  001AF8  6F73               	movwf	___fladd@grs& (0+255),b
 17504                           
 17505                           ; BSR set to: 0
 17506  001AFA  0100               	movlb	0	; () banked
 17507  001AFC  5172               	movf	___fladd@bexp& (0+255),w,b
 17508  001AFE  0100               	movlb	0	; () banked
 17509  001B00  6F68               	movwf	??___fladd& (0+255),b
 17510  001B02  6B69               	clrf	(??___fladd+1)& (0+255),b
 17511  001B04  0100               	movlb	0	; () banked
 17512  001B06  1F68               	comf	??___fladd& (0+255),f,b
 17513  001B08  1F69               	comf	(??___fladd+1)& (0+255),f,b
 17514  001B0A  4B68               	infsnz	??___fladd& (0+255),f,b
 17515  001B0C  2B69               	incf	(??___fladd+1)& (0+255),f,b
 17516  001B0E  0100               	movlb	0	; () banked
 17517  001B10  5171               	movf	___fladd@aexp& (0+255),w,b
 17518  001B12  0100               	movlb	0	; () banked
 17519  001B14  6F6A               	movwf	(??___fladd+2)& (0+255),b
 17520  001B16  6B6B               	clrf	(??___fladd+3)& (0+255),b
 17521  001B18  0100               	movlb	0	; () banked
 17522  001B1A  5168               	movf	??___fladd& (0+255),w,b
 17523  001B1C  0100               	movlb	0	; () banked
 17524  001B1E  276A               	addwf	(??___fladd+2)& (0+255),f,b
 17525  001B20  0100               	movlb	0	; () banked
 17526  001B22  5169               	movf	(??___fladd+1)& (0+255),w,b
 17527  001B24  0100               	movlb	0	; () banked
 17528  001B26  236B               	addwfc	(??___fladd+3)& (0+255),f,b
 17529  001B28  0100               	movlb	0	; () banked
 17530  001B2A  BF6B               	btfsc	(??___fladd+3)& (0+255),7,b
 17531  001B2C  D03D               	goto	l2560
 17532  001B2E  0100               	movlb	0	; () banked
 17533  001B30  516B               	movf	(??___fladd+3)& (0+255),w,b
 17534  001B32  E105               	bnz	u11110
 17535  001B34  0E1A               	movlw	26
 17536  001B36  0100               	movlb	0	; () banked
 17537  001B38  5D6A               	subwf	(??___fladd+2)& (0+255),w,b
 17538  001B3A  A0D8               	btfss	status,0,c
 17539  001B3C  D035               	goto	l2560
 17540  001B3E                     u11110:
 17541                           
 17542                           ; BSR set to: 0
 17543  001B3E  0100               	movlb	0	; () banked
 17544  001B40  5160               	movf	___fladd@b& (0+255),w,b
 17545  001B42  0100               	movlb	0	; () banked
 17546  001B44  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 17547  001B46  0100               	movlb	0	; () banked
 17548  001B48  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 17549  001B4A  0100               	movlb	0	; () banked
 17550  001B4C  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 17551  001B4E  B4D8               	btfsc	status,2,c
 17552  001B50  D002               	goto	u11120
 17553  001B52  0E01               	movlw	1
 17554  001B54  D001               	goto	u11130
 17555  001B56                     u11120:
 17556  001B56  0E00               	movlw	0
 17557  001B58                     u11130:
 17558  001B58  0100               	movlb	0	; () banked
 17559  001B5A  6F73               	movwf	___fladd@grs& (0+255),b
 17560                           
 17561                           ; BSR set to: 0
 17562  001B5C  0E00               	movlw	0
 17563  001B5E  0100               	movlb	0	; () banked
 17564  001B60  6F60               	movwf	___fladd@b& (0+255),b
 17565  001B62  0E00               	movlw	0
 17566  001B64  6F61               	movwf	(___fladd@b+1)& (0+255),b
 17567  001B66  0E00               	movlw	0
 17568  001B68  6F62               	movwf	(___fladd@b+2)& (0+255),b
 17569  001B6A  0E00               	movlw	0
 17570  001B6C  6F63               	movwf	(___fladd@b+3)& (0+255),b
 17571                           
 17572                           ; BSR set to: 0
 17573  001B6E  C071  F072         	movff	___fladd@aexp,___fladd@bexp
 17574  001B72  D020               	goto	l2559
 17575  001B74                     l2561:
 17576                           
 17577                           ; BSR set to: 0
 17578  001B74  0100               	movlb	0	; () banked
 17579  001B76  A173               	btfss	___fladd@grs& (0+255),0,b
 17580  001B78  D007               	goto	l12302
 17581                           
 17582                           ; BSR set to: 0
 17583  001B7A  0100               	movlb	0	; () banked
 17584  001B7C  90D8               	bcf	status,0,c
 17585  001B7E  3173               	rrcf	___fladd@grs& (0+255),w,b
 17586  001B80  0901               	iorlw	1
 17587  001B82  0100               	movlb	0	; () banked
 17588  001B84  6F73               	movwf	___fladd@grs& (0+255),b
 17589  001B86  D003               	goto	l12304
 17590  001B88                     l12302:
 17591                           
 17592                           ; BSR set to: 0
 17593  001B88  0100               	movlb	0	; () banked
 17594  001B8A  90D8               	bcf	status,0,c
 17595  001B8C  3373               	rrcf	___fladd@grs& (0+255),f,b
 17596  001B8E                     l12304:
 17597                           
 17598                           ; BSR set to: 0
 17599  001B8E  0100               	movlb	0	; () banked
 17600  001B90  A160               	btfss	___fladd@b& (0+255),0,b
 17601  001B92  D002               	goto	l12308
 17602                           
 17603                           ; BSR set to: 0
 17604  001B94  0100               	movlb	0	; () banked
 17605  001B96  8F73               	bsf	___fladd@grs& (0+255),7,b
 17606  001B98                     l12308:
 17607                           
 17608                           ; BSR set to: 0
 17609  001B98  0100               	movlb	0	; () banked
 17610  001B9A  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 17611  001B9C  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 17612  001B9E  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 17613  001BA0  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 17614  001BA2  3360               	rrcf	___fladd@b& (0+255),f,b
 17615                           
 17616                           ; BSR set to: 0
 17617  001BA4  0100               	movlb	0	; () banked
 17618  001BA6  2B72               	incf	___fladd@bexp& (0+255),f,b
 17619  001BA8                     l2560:
 17620                           
 17621                           ; BSR set to: 0
 17622  001BA8  0100               	movlb	0	; () banked
 17623  001BAA  5171               	movf	___fladd@aexp& (0+255),w,b
 17624  001BAC  0100               	movlb	0	; () banked
 17625  001BAE  5D72               	subwf	___fladd@bexp& (0+255),w,b
 17626  001BB0  A0D8               	btfss	status,0,c
 17627  001BB2  D7E0               	goto	l2561
 17628  001BB4                     l2559:
 17629                           
 17630                           ; BSR set to: 0
 17631  001BB4  0100               	movlb	0	; () banked
 17632  001BB6  BD70               	btfsc	___fladd@signs& (0+255),6,b
 17633  001BB8  D03F               	goto	l12336
 17634                           
 17635                           ; BSR set to: 0
 17636  001BBA  0100               	movlb	0	; () banked
 17637  001BBC  5172               	movf	___fladd@bexp& (0+255),w,b
 17638  001BBE  0100               	movlb	0	; () banked
 17639  001BC0  A4D8               	btfss	status,2,c
 17640  001BC2  D00A               	goto	l12318
 17641                           
 17642                           ; BSR set to: 0
 17643  001BC4  0E00               	movlw	0
 17644  001BC6  0100               	movlb	0	; () banked
 17645  001BC8  6F60               	movwf	?___fladd& (0+255),b
 17646  001BCA  0E00               	movlw	0
 17647  001BCC  6F61               	movwf	(?___fladd+1)& (0+255),b
 17648  001BCE  0E00               	movlw	0
 17649  001BD0  6F62               	movwf	(?___fladd+2)& (0+255),b
 17650  001BD2  0E00               	movlw	0
 17651  001BD4  6F63               	movwf	(?___fladd+3)& (0+255),b
 17652                           
 17653                           ; BSR set to: 0
 17654  001BD6  0012               	return	
 17655  001BD8                     l12318:
 17656                           
 17657                           ; BSR set to: 0
 17658  001BD8  0100               	movlb	0	; () banked
 17659  001BDA  5164               	movf	___fladd@a& (0+255),w,b
 17660  001BDC  0100               	movlb	0	; () banked
 17661  001BDE  2760               	addwf	___fladd@b& (0+255),f,b
 17662  001BE0  0100               	movlb	0	; () banked
 17663  001BE2  5165               	movf	(___fladd@a+1)& (0+255),w,b
 17664  001BE4  0100               	movlb	0	; () banked
 17665  001BE6  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 17666  001BE8  0100               	movlb	0	; () banked
 17667  001BEA  5166               	movf	(___fladd@a+2)& (0+255),w,b
 17668  001BEC  0100               	movlb	0	; () banked
 17669  001BEE  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 17670  001BF0  0100               	movlb	0	; () banked
 17671  001BF2  5167               	movf	(___fladd@a+3)& (0+255),w,b
 17672  001BF4  0100               	movlb	0	; () banked
 17673  001BF6  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 17674                           
 17675                           ; BSR set to: 0
 17676  001BF8  0100               	movlb	0	; () banked
 17677  001BFA  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 17678  001BFC  D0CC               	goto	l12372
 17679                           
 17680                           ; BSR set to: 0
 17681  001BFE  0100               	movlb	0	; () banked
 17682  001C00  A173               	btfss	___fladd@grs& (0+255),0,b
 17683  001C02  D009               	goto	l12326
 17684                           
 17685                           ; BSR set to: 0
 17686  001C04  0100               	movlb	0	; () banked
 17687  001C06  90D8               	bcf	status,0,c
 17688  001C08  3373               	rrcf	___fladd@grs& (0+255),f,b
 17689  001C0A  0100               	movlb	0	; () banked
 17690  001C0C  5173               	movf	___fladd@grs& (0+255),w,b
 17691  001C0E  0901               	iorlw	1
 17692  001C10  0100               	movlb	0	; () banked
 17693  001C12  6F73               	movwf	___fladd@grs& (0+255),b
 17694  001C14  D003               	goto	l12328
 17695  001C16                     l12326:
 17696                           
 17697                           ; BSR set to: 0
 17698  001C16  0100               	movlb	0	; () banked
 17699  001C18  90D8               	bcf	status,0,c
 17700  001C1A  3373               	rrcf	___fladd@grs& (0+255),f,b
 17701  001C1C                     l12328:
 17702                           
 17703                           ; BSR set to: 0
 17704  001C1C  0100               	movlb	0	; () banked
 17705  001C1E  A160               	btfss	___fladd@b& (0+255),0,b
 17706  001C20  D002               	goto	l12332
 17707                           
 17708                           ; BSR set to: 0
 17709  001C22  0100               	movlb	0	; () banked
 17710  001C24  8F73               	bsf	___fladd@grs& (0+255),7,b
 17711  001C26                     l12332:
 17712                           
 17713                           ; BSR set to: 0
 17714  001C26  0100               	movlb	0	; () banked
 17715  001C28  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
 17716  001C2A  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
 17717  001C2C  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
 17718  001C2E  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
 17719  001C30  3360               	rrcf	___fladd@b& (0+255),f,b
 17720                           
 17721                           ; BSR set to: 0
 17722  001C32  0100               	movlb	0	; () banked
 17723  001C34  2B72               	incf	___fladd@bexp& (0+255),f,b
 17724                           
 17725                           ; BSR set to: 0
 17726  001C36  D0AF               	goto	l12372
 17727  001C38                     l12336:
 17728                           
 17729                           ; BSR set to: 0
 17730  001C38  0100               	movlb	0	; () banked
 17731  001C3A  5164               	movf	___fladd@a& (0+255),w,b
 17732  001C3C  0100               	movlb	0	; () banked
 17733  001C3E  5D60               	subwf	___fladd@b& (0+255),w,b
 17734  001C40  0100               	movlb	0	; () banked
 17735  001C42  5165               	movf	(___fladd@a+1)& (0+255),w,b
 17736  001C44  0100               	movlb	0	; () banked
 17737  001C46  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
 17738  001C48  0100               	movlb	0	; () banked
 17739  001C4A  5166               	movf	(___fladd@a+2)& (0+255),w,b
 17740  001C4C  0100               	movlb	0	; () banked
 17741  001C4E  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
 17742  001C50  0100               	movlb	0	; () banked
 17743  001C52  5163               	movf	(___fladd@b+3)& (0+255),w,b
 17744  001C54  0A80               	xorlw	128
 17745  001C56  0100               	movlb	0	; () banked
 17746  001C58  6F68               	movwf	??___fladd& (0+255),b
 17747  001C5A  0100               	movlb	0	; () banked
 17748  001C5C  5167               	movf	(___fladd@a+3)& (0+255),w,b
 17749  001C5E  0A80               	xorlw	128
 17750  001C60  0100               	movlb	0	; () banked
 17751  001C62  5968               	subwfb	??___fladd& (0+255),w,b
 17752  001C64  B0D8               	btfsc	status,0,c
 17753  001C66  D050               	goto	l12346
 17754                           
 17755                           ; BSR set to: 0
 17756  001C68  C060  F068         	movff	___fladd@b,??___fladd
 17757  001C6C  C061  F069         	movff	___fladd@b+1,??___fladd+1
 17758  001C70  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 17759  001C74  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 17760  001C78  0100               	movlb	0	; () banked
 17761  001C7A  1F68               	comf	??___fladd& (0+255),f,b
 17762  001C7C  1F69               	comf	(??___fladd+1)& (0+255),f,b
 17763  001C7E  1F6A               	comf	(??___fladd+2)& (0+255),f,b
 17764  001C80  1F6B               	comf	(??___fladd+3)& (0+255),f,b
 17765  001C82  2B68               	incf	??___fladd& (0+255),f,b
 17766  001C84  0E00               	movlw	0
 17767  001C86  2369               	addwfc	(??___fladd+1)& (0+255),f,b
 17768  001C88  236A               	addwfc	(??___fladd+2)& (0+255),f,b
 17769  001C8A  236B               	addwfc	(??___fladd+3)& (0+255),f,b
 17770  001C8C  0100               	movlb	0	; () banked
 17771  001C8E  5164               	movf	___fladd@a& (0+255),w,b
 17772  001C90  0100               	movlb	0	; () banked
 17773  001C92  2568               	addwf	??___fladd& (0+255),w,b
 17774  001C94  0100               	movlb	0	; () banked
 17775  001C96  6F6C               	movwf	(??___fladd+4)& (0+255),b
 17776  001C98  0100               	movlb	0	; () banked
 17777  001C9A  5165               	movf	(___fladd@a+1)& (0+255),w,b
 17778  001C9C  0100               	movlb	0	; () banked
 17779  001C9E  2169               	addwfc	(??___fladd+1)& (0+255),w,b
 17780  001CA0  0100               	movlb	0	; () banked
 17781  001CA2  6F6D               	movwf	(??___fladd+5)& (0+255),b
 17782  001CA4  0100               	movlb	0	; () banked
 17783  001CA6  5166               	movf	(___fladd@a+2)& (0+255),w,b
 17784  001CA8  0100               	movlb	0	; () banked
 17785  001CAA  216A               	addwfc	(??___fladd+2)& (0+255),w,b
 17786  001CAC  0100               	movlb	0	; () banked
 17787  001CAE  6F6E               	movwf	(??___fladd+6)& (0+255),b
 17788  001CB0  0100               	movlb	0	; () banked
 17789  001CB2  5167               	movf	(___fladd@a+3)& (0+255),w,b
 17790  001CB4  0100               	movlb	0	; () banked
 17791  001CB6  216B               	addwfc	(??___fladd+3)& (0+255),w,b
 17792  001CB8  0100               	movlb	0	; () banked
 17793  001CBA  6F6F               	movwf	(??___fladd+7)& (0+255),b
 17794  001CBC  0EFF               	movlw	255
 17795  001CBE  0100               	movlb	0	; () banked
 17796  001CC0  256C               	addwf	(??___fladd+4)& (0+255),w,b
 17797  001CC2  0100               	movlb	0	; () banked
 17798  001CC4  6F60               	movwf	___fladd@b& (0+255),b
 17799  001CC6  0EFF               	movlw	255
 17800  001CC8  0100               	movlb	0	; () banked
 17801  001CCA  216D               	addwfc	(??___fladd+5)& (0+255),w,b
 17802  001CCC  0100               	movlb	0	; () banked
 17803  001CCE  6F61               	movwf	(___fladd@b+1)& (0+255),b
 17804  001CD0  0EFF               	movlw	255
 17805  001CD2  0100               	movlb	0	; () banked
 17806  001CD4  216E               	addwfc	(??___fladd+6)& (0+255),w,b
 17807  001CD6  0100               	movlb	0	; () banked
 17808  001CD8  6F62               	movwf	(___fladd@b+2)& (0+255),b
 17809  001CDA  0EFF               	movlw	255
 17810  001CDC  0100               	movlb	0	; () banked
 17811  001CDE  216F               	addwfc	(??___fladd+7)& (0+255),w,b
 17812  001CE0  0100               	movlb	0	; () banked
 17813  001CE2  6F63               	movwf	(___fladd@b+3)& (0+255),b
 17814  001CE4  0E80               	movlw	128
 17815  001CE6  0100               	movlb	0	; () banked
 17816  001CE8  1B70               	xorwf	___fladd@signs& (0+255),f,b
 17817                           
 17818                           ; BSR set to: 0
 17819  001CEA  0100               	movlb	0	; () banked
 17820  001CEC  6D73               	negf	___fladd@grs& (0+255),b
 17821                           
 17822                           ; BSR set to: 0
 17823  001CEE  0100               	movlb	0	; () banked
 17824  001CF0  5173               	movf	___fladd@grs& (0+255),w,b
 17825  001CF2  0100               	movlb	0	; () banked
 17826  001CF4  A4D8               	btfss	status,2,c
 17827  001CF6  D018               	goto	l2576
 17828                           
 17829                           ; BSR set to: 0
 17830  001CF8  0E01               	movlw	1
 17831  001CFA  0100               	movlb	0	; () banked
 17832  001CFC  2760               	addwf	___fladd@b& (0+255),f,b
 17833  001CFE  0E00               	movlw	0
 17834  001D00  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 17835  001D02  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 17836  001D04  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 17837                           
 17838                           ; BSR set to: 0
 17839  001D06  D010               	goto	l2576
 17840  001D08                     l12346:
 17841                           
 17842                           ; BSR set to: 0
 17843  001D08  0100               	movlb	0	; () banked
 17844  001D0A  5164               	movf	___fladd@a& (0+255),w,b
 17845  001D0C  0100               	movlb	0	; () banked
 17846  001D0E  5F60               	subwf	___fladd@b& (0+255),f,b
 17847  001D10  0100               	movlb	0	; () banked
 17848  001D12  5165               	movf	(___fladd@a+1)& (0+255),w,b
 17849  001D14  0100               	movlb	0	; () banked
 17850  001D16  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
 17851  001D18  0100               	movlb	0	; () banked
 17852  001D1A  5166               	movf	(___fladd@a+2)& (0+255),w,b
 17853  001D1C  0100               	movlb	0	; () banked
 17854  001D1E  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
 17855  001D20  0100               	movlb	0	; () banked
 17856  001D22  5167               	movf	(___fladd@a+3)& (0+255),w,b
 17857  001D24  0100               	movlb	0	; () banked
 17858  001D26  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
 17859  001D28                     l2576:
 17860                           
 17861                           ; BSR set to: 0
 17862  001D28  0100               	movlb	0	; () banked
 17863  001D2A  5160               	movf	___fladd@b& (0+255),w,b
 17864  001D2C  0100               	movlb	0	; () banked
 17865  001D2E  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
 17866  001D30  0100               	movlb	0	; () banked
 17867  001D32  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
 17868  001D34  0100               	movlb	0	; () banked
 17869  001D36  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
 17870  001D38  A4D8               	btfss	status,2,c
 17871  001D3A  D02A               	goto	l12370
 17872                           
 17873                           ; BSR set to: 0
 17874  001D3C  0100               	movlb	0	; () banked
 17875  001D3E  5173               	movf	___fladd@grs& (0+255),w,b
 17876  001D40  0100               	movlb	0	; () banked
 17877  001D42  A4D8               	btfss	status,2,c
 17878  001D44  D025               	goto	l12370
 17879                           
 17880                           ; BSR set to: 0
 17881  001D46  0E00               	movlw	0
 17882  001D48  0100               	movlb	0	; () banked
 17883  001D4A  6F60               	movwf	?___fladd& (0+255),b
 17884  001D4C  0E00               	movlw	0
 17885  001D4E  6F61               	movwf	(?___fladd+1)& (0+255),b
 17886  001D50  0E00               	movlw	0
 17887  001D52  6F62               	movwf	(?___fladd+2)& (0+255),b
 17888  001D54  0E00               	movlw	0
 17889  001D56  6F63               	movwf	(?___fladd+3)& (0+255),b
 17890                           
 17891                           ; BSR set to: 0
 17892  001D58  0012               	return	
 17893  001D5A                     l12354:
 17894                           
 17895                           ; BSR set to: 0
 17896  001D5A  0100               	movlb	0	; () banked
 17897  001D5C  90D8               	bcf	status,0,c
 17898  001D5E  3760               	rlcf	___fladd@b& (0+255),f,b
 17899  001D60  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
 17900  001D62  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
 17901  001D64  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
 17902                           
 17903                           ; BSR set to: 0
 17904  001D66  0100               	movlb	0	; () banked
 17905  001D68  AF73               	btfss	___fladd@grs& (0+255),7,b
 17906  001D6A  D002               	goto	l12360
 17907                           
 17908                           ; BSR set to: 0
 17909  001D6C  0100               	movlb	0	; () banked
 17910  001D6E  8160               	bsf	___fladd@b& (0+255),0,b
 17911  001D70                     l12360:
 17912                           
 17913                           ; BSR set to: 0
 17914  001D70  0100               	movlb	0	; () banked
 17915  001D72  A173               	btfss	___fladd@grs& (0+255),0,b
 17916  001D74  D003               	goto	l12364
 17917                           
 17918                           ; BSR set to: 0
 17919  001D76  80D8               	bsf	status,0,c
 17920  001D78  0100               	movlb	0	; () banked
 17921  001D7A  D002               	goto	L16
 17922  001D7C                     l12364:
 17923                           
 17924                           ; BSR set to: 0
 17925  001D7C  0100               	movlb	0	; () banked
 17926  001D7E  90D8               	bcf	status,0,c
 17927  001D80                     L16:
 17928  001D80  3773               	rlcf	___fladd@grs& (0+255),f,b
 17929                           
 17930                           ; BSR set to: 0
 17931                           
 17932                           ; BSR set to: 0
 17933  001D82  0100               	movlb	0	; () banked
 17934  001D84  5172               	movf	___fladd@bexp& (0+255),w,b
 17935  001D86  0100               	movlb	0	; () banked
 17936  001D88  B4D8               	btfsc	status,2,c
 17937  001D8A  D002               	goto	l12370
 17938                           
 17939                           ; BSR set to: 0
 17940  001D8C  0100               	movlb	0	; () banked
 17941  001D8E  0772               	decf	___fladd@bexp& (0+255),f,b
 17942  001D90                     l12370:
 17943                           
 17944                           ; BSR set to: 0
 17945  001D90  0100               	movlb	0	; () banked
 17946  001D92  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
 17947  001D94  D7E2               	goto	l12354
 17948  001D96                     l12372:
 17949                           
 17950                           ; BSR set to: 0
 17951  001D96  0E00               	movlw	0
 17952  001D98  0100               	movlb	0	; () banked
 17953  001D9A  6F71               	movwf	___fladd@aexp& (0+255),b
 17954                           
 17955                           ; BSR set to: 0
 17956  001D9C  0100               	movlb	0	; () banked
 17957  001D9E  AF73               	btfss	___fladd@grs& (0+255),7,b
 17958  001DA0  D00D               	goto	l2585
 17959                           
 17960                           ; BSR set to: 0
 17961  001DA2  C073  F068         	movff	___fladd@grs,??___fladd
 17962  001DA6  0E7F               	movlw	127
 17963  001DA8  0100               	movlb	0	; () banked
 17964  001DAA  1768               	andwf	??___fladd& (0+255),f,b
 17965  001DAC  A4D8               	btfss	status,2,c
 17966  001DAE  D003               	goto	l12380
 17967                           
 17968                           ; BSR set to: 0
 17969                           
 17970                           ; BSR set to: 0
 17971  001DB0  0100               	movlb	0	; () banked
 17972  001DB2  A160               	btfss	___fladd@b& (0+255),0,b
 17973  001DB4  D003               	goto	l2585
 17974  001DB6                     l12380:
 17975                           
 17976                           ; BSR set to: 0
 17977  001DB6  0E01               	movlw	1
 17978  001DB8  0100               	movlb	0	; () banked
 17979  001DBA  6F71               	movwf	___fladd@aexp& (0+255),b
 17980  001DBC                     l2585:
 17981                           
 17982                           ; BSR set to: 0
 17983  001DBC  0100               	movlb	0	; () banked
 17984  001DBE  5171               	movf	___fladd@aexp& (0+255),w,b
 17985  001DC0  0100               	movlb	0	; () banked
 17986  001DC2  B4D8               	btfsc	status,2,c
 17987  001DC4  D026               	goto	l12390
 17988                           
 17989                           ; BSR set to: 0
 17990  001DC6  0E01               	movlw	1
 17991  001DC8  0100               	movlb	0	; () banked
 17992  001DCA  2760               	addwf	___fladd@b& (0+255),f,b
 17993  001DCC  0E00               	movlw	0
 17994  001DCE  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
 17995  001DD0  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
 17996  001DD2  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
 17997                           
 17998                           ; BSR set to: 0
 17999  001DD4  0100               	movlb	0	; () banked
 18000  001DD6  A163               	btfss	(___fladd@b+3)& (0+255),0,b
 18001  001DD8  D01C               	goto	l12390
 18002                           
 18003                           ; BSR set to: 0
 18004  001DDA  C060  F068         	movff	___fladd@b,??___fladd
 18005  001DDE  C061  F069         	movff	___fladd@b+1,??___fladd+1
 18006  001DE2  C062  F06A         	movff	___fladd@b+2,??___fladd+2
 18007  001DE6  C063  F06B         	movff	___fladd@b+3,??___fladd+3
 18008  001DEA  0100               	movlb	0	; () banked
 18009  001DEC  356B               	rlcf	(??___fladd+3)& (0+255),w,b
 18010  001DEE  336B               	rrcf	(??___fladd+3)& (0+255),f,b
 18011  001DF0  336A               	rrcf	(??___fladd+2)& (0+255),f,b
 18012  001DF2  3369               	rrcf	(??___fladd+1)& (0+255),f,b
 18013  001DF4  3368               	rrcf	??___fladd& (0+255),f,b
 18014  001DF6  C068  F060         	movff	??___fladd,___fladd@b
 18015  001DFA  C069  F061         	movff	??___fladd+1,___fladd@b+1
 18016  001DFE  C06A  F062         	movff	??___fladd+2,___fladd@b+2
 18017  001E02  C06B  F063         	movff	??___fladd+3,___fladd@b+3
 18018  001E06  0100               	movlb	0	; () banked
 18019  001E08  2972               	incf	___fladd@bexp& (0+255),w,b
 18020  001E0A  B4D8               	btfsc	status,2,c
 18021  001E0C  D002               	goto	l12390
 18022                           
 18023                           ; BSR set to: 0
 18024  001E0E  0100               	movlb	0	; () banked
 18025  001E10  2B72               	incf	___fladd@bexp& (0+255),f,b
 18026  001E12                     l12390:
 18027                           
 18028                           ; BSR set to: 0
 18029  001E12  0100               	movlb	0	; () banked
 18030  001E14  2972               	incf	___fladd@bexp& (0+255),w,b
 18031  001E16  B4D8               	btfsc	status,2,c
 18032  001E18  D005               	goto	l12394
 18033                           
 18034                           ; BSR set to: 0
 18035  001E1A  0100               	movlb	0	; () banked
 18036  001E1C  5172               	movf	___fladd@bexp& (0+255),w,b
 18037  001E1E  0100               	movlb	0	; () banked
 18038  001E20  A4D8               	btfss	status,2,c
 18039  001E22  D011               	goto	l12398
 18040  001E24                     l12394:
 18041                           
 18042                           ; BSR set to: 0
 18043  001E24  0E00               	movlw	0
 18044  001E26  0100               	movlb	0	; () banked
 18045  001E28  6F60               	movwf	___fladd@b& (0+255),b
 18046  001E2A  0E00               	movlw	0
 18047  001E2C  6F61               	movwf	(___fladd@b+1)& (0+255),b
 18048  001E2E  0E00               	movlw	0
 18049  001E30  6F62               	movwf	(___fladd@b+2)& (0+255),b
 18050  001E32  0E00               	movlw	0
 18051  001E34  6F63               	movwf	(___fladd@b+3)& (0+255),b
 18052  001E36  0100               	movlb	0	; () banked
 18053  001E38  5172               	movf	___fladd@bexp& (0+255),w,b
 18054  001E3A  0100               	movlb	0	; () banked
 18055  001E3C  A4D8               	btfss	status,2,c
 18056  001E3E  D003               	goto	l12398
 18057                           
 18058                           ; BSR set to: 0
 18059  001E40  0E00               	movlw	0
 18060  001E42  0100               	movlb	0	; () banked
 18061  001E44  6F70               	movwf	___fladd@signs& (0+255),b
 18062  001E46                     l12398:
 18063                           
 18064                           ; BSR set to: 0
 18065  001E46  0100               	movlb	0	; () banked
 18066  001E48  A172               	btfss	___fladd@bexp& (0+255),0,b
 18067  001E4A  D003               	goto	l12402
 18068                           
 18069                           ; BSR set to: 0
 18070  001E4C  0100               	movlb	0	; () banked
 18071  001E4E  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
 18072  001E50  D002               	goto	l12404
 18073  001E52                     l12402:
 18074                           
 18075                           ; BSR set to: 0
 18076  001E52  0100               	movlb	0	; () banked
 18077  001E54  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
 18078  001E56                     l12404:
 18079                           
 18080                           ; BSR set to: 0
 18081  001E56  0100               	movlb	0	; () banked
 18082  001E58  90D8               	bcf	status,0,c
 18083  001E5A  3172               	rrcf	___fladd@bexp& (0+255),w,b
 18084  001E5C  0100               	movlb	0	; () banked
 18085  001E5E  6F63               	movwf	(___fladd@b+3)& (0+255),b
 18086                           
 18087                           ; BSR set to: 0
 18088  001E60  0100               	movlb	0	; () banked
 18089  001E62  AF70               	btfss	___fladd@signs& (0+255),7,b
 18090  001E64  D002               	goto	l12410
 18091                           
 18092                           ; BSR set to: 0
 18093  001E66  0100               	movlb	0	; () banked
 18094  001E68  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
 18095  001E6A                     l12410:
 18096                           
 18097                           ; BSR set to: 0
 18098  001E6A  C060  F060         	movff	___fladd@b,?___fladd
 18099  001E6E  C061  F061         	movff	___fladd@b+1,?___fladd+1
 18100  001E72  C062  F062         	movff	___fladd@b+2,?___fladd+2
 18101  001E76  C063  F063         	movff	___fladd@b+3,?___fladd+3
 18102  001E7A  0012               	return	
 18103  001E7C                     __end_of___fladd:
 18104                           	opt stack 0
 18105                           tblptru	equ	0xFF8
 18106                           tblptrh	equ	0xFF7
 18107                           tblptrl	equ	0xFF6
 18108                           tablat	equ	0xFF5
 18109                           prodh	equ	0xFF4
 18110                           prodl	equ	0xFF3
 18111                           intcon	equ	0xFF2
 18112                           intcon3	equ	0xFF0
 18113                           postinc0	equ	0xFEE
 18114                           wreg	equ	0xFE8
 18115                           indf1	equ	0xFE7
 18116                           postdec1	equ	0xFE5
 18117                           fsr1h	equ	0xFE2
 18118                           fsr1l	equ	0xFE1
 18119                           indf2	equ	0xFDF
 18120                           fsr2h	equ	0xFDA
 18121                           fsr2l	equ	0xFD9
 18122                           status	equ	0xFD8
 18123                           
 18124 ;; *************** function _moteJoiningProcess *****************
 18125 ;; Defined at:
 18126 ;;		line 294 in file "../Includes/Board/MOTEapp.c"
 18127 ;; Parameters:    Size  Location     Type
 18128 ;;  messageReady    1    wreg     unsigned char 
 18129 ;;  changeStates    1   22[BANK0 ] unsigned char 
 18130 ;;  selectButton    1   23[BANK0 ] unsigned char 
 18131 ;; Auto vars:     Size  Location     Type
 18132 ;;  messageReady    1   27[BANK0 ] unsigned char 
 18133 ;;  readDataRate    1   25[BANK0 ] unsigned char 
 18134 ;;  joiningCompl    1   26[BANK0 ] unsigned char 
 18135 ;; Return value:  Size  Location     Type
 18136 ;;                  1    wreg      enum E6983
 18137 ;; Registers used:
 18138 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18139 ;; Tracked objects:
 18140 ;;		On entry : 0/0
 18141 ;;		On exit  : 0/0
 18142 ;;		Unchanged: 0/0
 18143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 18144 ;;      Params:         0       2       0       0       0       0       0       0       0
 18145 ;;      Locals:         0       3       0       0       0       0       0       0       0
 18146 ;;      Temps:          0       1       0       0       0       0       0       0       0
 18147 ;;      Totals:         0       6       0       0       0       0       0       0       0
 18148 ;;Total ram usage:        6 bytes
 18149 ;; Hardware stack levels used:    1
 18150 ;; Hardware stack levels required when called:   16
 18151 ;; This function calls:
 18152 ;;		_DATAEE_WriteByte
 18153 ;;		_moteApp_delayms
 18154 ;;		_oled_clear
 18155 ;;		_oled_putString
 18156 ;;		_sendCommand
 18157 ;;		_strcmp
 18158 ;;		_strncmp
 18159 ;; This function is called by:
 18160 ;;		_moteHandler
 18161 ;; This function uses a non-reentrant model
 18162 ;;
 18163                           
 18164                           	psect	text51
 18165  00136A                     __ptext51:
 18166                           	opt stack 0
 18167  00136A                     _moteJoiningProcess:
 18168                           	opt stack 13
 18169                           
 18170                           ; BSR set to: 0
 18171                           ;incstack = 0
 18172                           ;moteJoiningProcess@messageReady stored from wreg
 18173  00136A  0100               	movlb	0	; () banked
 18174  00136C  6F7B               	movwf	moteJoiningProcess@messageReady& (0+255),b
 18175                           
 18176                           ;MOTEapp.c: 296: bool joiningComplete = 0;
 18177  00136E  0E00               	movlw	0
 18178  001370  0100               	movlb	0	; () banked
 18179  001372  6F7A               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 18180                           
 18181                           ;MOTEapp.c: 298: switch (activeState)
 18182  001374  D308               	goto	l13918
 18183  001376  D7FF               	goto	l399
 18184  001378                     l13736:
 18185                           
 18186                           ;MOTEapp.c: 304: sendCommand("sys reset");
 18187  001378  0EFD               	movlw	low STR_30
 18188  00137A  0100               	movlb	0	; () banked
 18189  00137C  6F61               	movwf	sendCommand@string& (0+255),b
 18190  00137E  0E7E               	movlw	high STR_30
 18191  001380  0100               	movlb	0	; () banked
 18192  001382  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18193  001384  ECD6  F033         	call	_sendCommand	;wreg free
 18194  001388  D191               	goto	l13832
 18195  00138A                     l13740:
 18196                           
 18197                           ; BSR set to: 0
 18198                           ;MOTEapp.c: 308: if (selectButton)
 18199  00138A  0100               	movlb	0	; () banked
 18200  00138C  5177               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 18201  00138E  0100               	movlb	0	; () banked
 18202  001390  B4D8               	btfsc	status,2,c
 18203  001392  D003               	goto	l404
 18204                           
 18205                           ; BSR set to: 0
 18206                           ;MOTEapp.c: 309: {
 18207                           ;MOTEapp.c: 310: activeState = moteComFailure;
 18208  001394  0E0A               	movlw	10
 18209  001396  0100               	movlb	0	; () banked
 18210  001398  6FD5               	movwf	_activeState& (0+255),b
 18211  00139A                     l404:
 18212                           
 18213                           ; BSR set to: 0
 18214                           ;MOTEapp.c: 311: }
 18215                           ;MOTEapp.c: 312: if ( messageReady )
 18216  00139A  0100               	movlb	0	; () banked
 18217  00139C  517B               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 18218  00139E  0100               	movlb	0	; () banked
 18219  0013A0  B4D8               	btfsc	status,2,c
 18220  0013A2  D315               	goto	l13920
 18221                           
 18222                           ; BSR set to: 0
 18223                           ;MOTEapp.c: 313: {
 18224                           ;MOTEapp.c: 314: if(strncmp(moduleResonseBuffer, "RN24", 4) == 0)
 18225  0013A4  0E5C               	movlw	low _moduleResonseBuffer
 18226  0013A6  0100               	movlb	0	; () banked
 18227  0013A8  6F60               	movwf	strncmp@s1& (0+255),b
 18228  0013AA  0E01               	movlw	high _moduleResonseBuffer
 18229  0013AC  0100               	movlb	0	; () banked
 18230  0013AE  6F61               	movwf	(strncmp@s1+1)& (0+255),b
 18231  0013B0  0EB9               	movlw	low STR_31
 18232  0013B2  0100               	movlb	0	; () banked
 18233  0013B4  6F62               	movwf	strncmp@s2& (0+255),b
 18234  0013B6  0E7F               	movlw	high STR_31
 18235  0013B8  0100               	movlb	0	; () banked
 18236  0013BA  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 18237  0013BC  0E00               	movlw	0
 18238  0013BE  0100               	movlb	0	; () banked
 18239  0013C0  6F65               	movwf	(strncmp@len+1)& (0+255),b
 18240  0013C2  0E04               	movlw	4
 18241  0013C4  6F64               	movwf	strncmp@len& (0+255),b
 18242  0013C6  EC13  F02B         	call	_strncmp	;wreg free
 18243  0013CA  0100               	movlb	0	; () banked
 18244  0013CC  5160               	movf	?_strncmp& (0+255),w,b
 18245  0013CE  0100               	movlb	0	; () banked
 18246  0013D0  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 18247  0013D2  A4D8               	btfss	status,2,c
 18248  0013D4  D033               	goto	l13758
 18249                           
 18250                           ; BSR set to: 0
 18251                           ;MOTEapp.c: 315: {
 18252                           ;MOTEapp.c: 316: rnModule = rn2483;
 18253  0013D6  0E00               	movlw	0
 18254  0013D8  0100               	movlb	0	; () banked
 18255  0013DA  6FED               	movwf	_rnModule& (0+255),b
 18256                           
 18257                           ; BSR set to: 0
 18258                           ;MOTEapp.c: 317: oled_clear();
 18259  0013DC  ECD1  F034         	call	_oled_clear	;wreg free
 18260                           
 18261                           ;MOTEapp.c: 318: oled_putString(" Joining Method ",0,0);
 18262  0013E0  0E08               	movlw	low STR_32
 18263  0013E2  0100               	movlb	0	; () banked
 18264  0013E4  6F71               	movwf	oled_putString@string& (0+255),b
 18265  0013E6  0E7B               	movlw	high STR_32
 18266  0013E8  0100               	movlb	0	; () banked
 18267  0013EA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18268  0013EC  0E00               	movlw	0
 18269  0013EE  0100               	movlb	0	; () banked
 18270  0013F0  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18271  0013F2  0E00               	movlw	0
 18272  0013F4  0100               	movlb	0	; () banked
 18273  0013F6  6F74               	movwf	oled_putString@start_page& (0+255),b
 18274  0013F8  EC6F  F02F         	call	_oled_putString	;wreg free
 18275                           
 18276                           ;MOTEapp.c: 319: oled_putString("<- ABP   OTAA ->", 0,2);
 18277  0013FC  0EB2               	movlw	low STR_33
 18278  0013FE  0100               	movlb	0	; () banked
 18279  001400  6F71               	movwf	oled_putString@string& (0+255),b
 18280  001402  0E7B               	movlw	high STR_33
 18281  001404  0100               	movlb	0	; () banked
 18282  001406  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18283  001408  0E00               	movlw	0
 18284  00140A  0100               	movlb	0	; () banked
 18285  00140C  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18286  00140E  0E02               	movlw	2
 18287  001410  0100               	movlb	0	; () banked
 18288  001412  6F74               	movwf	oled_putString@start_page& (0+255),b
 18289  001414  EC6F  F02F         	call	_oled_putString	;wreg free
 18290                           
 18291                           ;MOTEapp.c: 320: oled_putString("  (S2)   (S3)   ", 0,3);
 18292  001418  0EB3               	movlw	low STR_34
 18293  00141A  0100               	movlb	0	; () banked
 18294  00141C  6F71               	movwf	oled_putString@string& (0+255),b
 18295  00141E  0E7A               	movlw	high STR_34
 18296  001420  0100               	movlb	0	; () banked
 18297  001422  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18298  001424  0E00               	movlw	0
 18299  001426  0100               	movlb	0	; () banked
 18300  001428  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18301  00142A  0E03               	movlw	3
 18302  00142C  0100               	movlb	0	; () banked
 18303  00142E  6F74               	movwf	oled_putString@start_page& (0+255),b
 18304  001430  EC6F  F02F         	call	_oled_putString	;wreg free
 18305  001434  D04B               	goto	l13770
 18306  001436                     L17:
 18307  001436  0100               	movlb	0	; () banked
 18308  001438  6FD5               	movwf	_activeState& (0+255),b
 18309                           
 18310                           ;MOTEapp.c: 322: }
 18311  00143A  D2C9               	goto	l13920
 18312  00143C                     l13758:
 18313                           
 18314                           ; BSR set to: 0
 18315                           ;MOTEapp.c: 323: else if(strncmp(moduleResonseBuffer, "RN29", 4) == 0)
 18316  00143C  0E5C               	movlw	low _moduleResonseBuffer
 18317  00143E  0100               	movlb	0	; () banked
 18318  001440  6F60               	movwf	strncmp@s1& (0+255),b
 18319  001442  0E01               	movlw	high _moduleResonseBuffer
 18320  001444  0100               	movlb	0	; () banked
 18321  001446  6F61               	movwf	(strncmp@s1+1)& (0+255),b
 18322  001448  0EBE               	movlw	low STR_35
 18323  00144A  0100               	movlb	0	; () banked
 18324  00144C  6F62               	movwf	strncmp@s2& (0+255),b
 18325  00144E  0E7F               	movlw	high STR_35
 18326  001450  0100               	movlb	0	; () banked
 18327  001452  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 18328  001454  0E00               	movlw	0
 18329  001456  0100               	movlb	0	; () banked
 18330  001458  6F65               	movwf	(strncmp@len+1)& (0+255),b
 18331  00145A  0E04               	movlw	4
 18332  00145C  6F64               	movwf	strncmp@len& (0+255),b
 18333  00145E  EC13  F02B         	call	_strncmp	;wreg free
 18334  001462  0100               	movlb	0	; () banked
 18335  001464  5160               	movf	?_strncmp& (0+255),w,b
 18336  001466  0100               	movlb	0	; () banked
 18337  001468  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 18338  00146A  A4D8               	btfss	status,2,c
 18339  00146C  D031               	goto	l13772
 18340                           
 18341                           ; BSR set to: 0
 18342                           ;MOTEapp.c: 324: {
 18343                           ;MOTEapp.c: 325: rnModule = rn2903;
 18344  00146E  0E01               	movlw	1
 18345  001470  0100               	movlb	0	; () banked
 18346  001472  6FED               	movwf	_rnModule& (0+255),b
 18347                           
 18348                           ; BSR set to: 0
 18349                           ;MOTEapp.c: 326: oled_clear();
 18350  001474  ECD1  F034         	call	_oled_clear	;wreg free
 18351                           
 18352                           ;MOTEapp.c: 327: oled_putString(" Joining Method ",0,0);
 18353  001478  0E08               	movlw	low STR_32
 18354  00147A  0100               	movlb	0	; () banked
 18355  00147C  6F71               	movwf	oled_putString@string& (0+255),b
 18356  00147E  0E7B               	movlw	high STR_32
 18357  001480  0100               	movlb	0	; () banked
 18358  001482  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18359  001484  0E00               	movlw	0
 18360  001486  0100               	movlb	0	; () banked
 18361  001488  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18362  00148A  0E00               	movlw	0
 18363  00148C  0100               	movlb	0	; () banked
 18364  00148E  6F74               	movwf	oled_putString@start_page& (0+255),b
 18365  001490  EC6F  F02F         	call	_oled_putString	;wreg free
 18366                           
 18367                           ;MOTEapp.c: 328: oled_putString("<- ABP   OTAA ->", 0,2);
 18368  001494  0EB2               	movlw	low STR_33
 18369  001496  0100               	movlb	0	; () banked
 18370  001498  6F71               	movwf	oled_putString@string& (0+255),b
 18371  00149A  0E7B               	movlw	high STR_33
 18372  00149C  0100               	movlb	0	; () banked
 18373  00149E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18374  0014A0  0E00               	movlw	0
 18375  0014A2  0100               	movlb	0	; () banked
 18376  0014A4  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18377  0014A6  0E02               	movlw	2
 18378  0014A8  0100               	movlb	0	; () banked
 18379  0014AA  6F74               	movwf	oled_putString@start_page& (0+255),b
 18380  0014AC  EC6F  F02F         	call	_oled_putString	;wreg free
 18381                           
 18382                           ;MOTEapp.c: 329: oled_putString("  (S2)   (S3)   ", 0,3);
 18383  0014B0  0EB3               	movlw	low STR_34
 18384  0014B2  0100               	movlb	0	; () banked
 18385  0014B4  6F71               	movwf	oled_putString@string& (0+255),b
 18386  0014B6  0E7A               	movlw	high STR_34
 18387  0014B8  0100               	movlb	0	; () banked
 18388  0014BA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18389  0014BC  0E00               	movlw	0
 18390  0014BE  0100               	movlb	0	; () banked
 18391  0014C0  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18392  0014C2  0E03               	movlw	3
 18393  0014C4  0100               	movlb	0	; () banked
 18394  0014C6  6F74               	movwf	oled_putString@start_page& (0+255),b
 18395  0014C8  EC6F  F02F         	call	_oled_putString	;wreg free
 18396  0014CC                     l13770:
 18397                           
 18398                           ;MOTEapp.c: 330: activeState = moteJoinMethod;
 18399  0014CC  0E02               	movlw	2
 18400  0014CE  D7B3               	goto	L17
 18401  0014D0                     l13772:
 18402                           
 18403                           ; BSR set to: 0
 18404                           ;MOTEapp.c: 332: else
 18405                           ;MOTEapp.c: 333: {
 18406                           ;MOTEapp.c: 334: sendCommand("sys reset");
 18407  0014D0  0EFD               	movlw	low STR_30
 18408  0014D2  0100               	movlb	0	; () banked
 18409  0014D4  6F61               	movwf	sendCommand@string& (0+255),b
 18410  0014D6  0E7E               	movlw	high STR_30
 18411  0014D8  0100               	movlb	0	; () banked
 18412  0014DA  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18413  0014DC  ECD6  F033         	call	_sendCommand	;wreg free
 18414                           
 18415                           ;MOTEapp.c: 335: moteApp_delayms(25);
 18416  0014E0  0E00               	movlw	0
 18417  0014E2  0100               	movlb	0	; () banked
 18418  0014E4  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 18419  0014E6  0E19               	movlw	25
 18420  0014E8  6F60               	movwf	moteApp_delayms@length& (0+255),b
 18421  0014EA  ECFF  F032         	call	_moteApp_delayms	;wreg free
 18422  0014EE  D1E4               	goto	l13886
 18423  0014F0                     l13778:
 18424                           
 18425                           ; BSR set to: 0
 18426                           ;MOTEapp.c: 341: if (changeStates)
 18427  0014F0  0100               	movlb	0	; () banked
 18428  0014F2  5176               	movf	moteJoiningProcess@changeStates& (0+255),w,b
 18429  0014F4  0100               	movlb	0	; () banked
 18430  0014F6  B4D8               	btfsc	status,2,c
 18431  0014F8  D01E               	goto	l13788
 18432                           
 18433                           ; BSR set to: 0
 18434                           ;MOTEapp.c: 342: {
 18435                           ;MOTEapp.c: 343: oled_putString("  (S2)          ", 0,3);
 18436  0014FA  0E80               	movlw	low STR_40
 18437  0014FC  0100               	movlb	0	; () banked
 18438  0014FE  6F71               	movwf	oled_putString@string& (0+255),b
 18439  001500  0E7A               	movlw	high STR_40
 18440  001502  0100               	movlb	0	; () banked
 18441  001504  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18442  001506  0E00               	movlw	0
 18443  001508  0100               	movlb	0	; () banked
 18444  00150A  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18445  00150C  0E03               	movlw	3
 18446  00150E  0100               	movlb	0	; () banked
 18447  001510  6F74               	movwf	oled_putString@start_page& (0+255),b
 18448  001512  EC6F  F02F         	call	_oled_putString	;wreg free
 18449                           
 18450                           ;MOTEapp.c: 344: moteApp_delayms(500);
 18451  001516  0E01               	movlw	1
 18452  001518  0100               	movlb	0	; () banked
 18453  00151A  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 18454  00151C  0EF4               	movlw	244
 18455  00151E  6F60               	movwf	moteApp_delayms@length& (0+255),b
 18456  001520  ECFF  F032         	call	_moteApp_delayms	;wreg free
 18457                           
 18458                           ;MOTEapp.c: 345: sendCommand("mac join abp");
 18459  001524  0EF4               	movlw	low STR_41
 18460  001526  0100               	movlb	0	; () banked
 18461  001528  6F61               	movwf	sendCommand@string& (0+255),b
 18462  00152A  0E7D               	movlw	high STR_41
 18463  00152C  0100               	movlb	0	; () banked
 18464  00152E  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18465  001530  ECD6  F033         	call	_sendCommand	;wreg free
 18466  001534  D079               	goto	l13816
 18467  001536                     l13788:
 18468                           
 18469                           ; BSR set to: 0
 18470                           ;MOTEapp.c: 348: else if (selectButton)
 18471  001536  0100               	movlb	0	; () banked
 18472  001538  5177               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 18473  00153A  0100               	movlb	0	; () banked
 18474  00153C  B4D8               	btfsc	status,2,c
 18475  00153E  D247               	goto	l13920
 18476                           
 18477                           ; BSR set to: 0
 18478                           ;MOTEapp.c: 349: {
 18479                           ;MOTEapp.c: 350: oled_putString("         (S3)   ", 0,3);
 18480  001540  0EA2               	movlw	low STR_42
 18481  001542  0100               	movlb	0	; () banked
 18482  001544  6F71               	movwf	oled_putString@string& (0+255),b
 18483  001546  0E7A               	movlw	high STR_42
 18484  001548  0100               	movlb	0	; () banked
 18485  00154A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18486  00154C  0E00               	movlw	0
 18487  00154E  0100               	movlb	0	; () banked
 18488  001550  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18489  001552  0E03               	movlw	3
 18490  001554  0100               	movlb	0	; () banked
 18491  001556  6F74               	movwf	oled_putString@start_page& (0+255),b
 18492  001558  EC6F  F02F         	call	_oled_putString	;wreg free
 18493                           
 18494                           ;MOTEapp.c: 351: moteApp_delayms(500);
 18495  00155C  0E01               	movlw	1
 18496  00155E  0100               	movlb	0	; () banked
 18497  001560  6F61               	movwf	(moteApp_delayms@length+1)& (0+255),b
 18498  001562  0EF4               	movlw	244
 18499  001564  6F60               	movwf	moteApp_delayms@length& (0+255),b
 18500  001566  ECFF  F032         	call	_moteApp_delayms	;wreg free
 18501                           
 18502                           ;MOTEapp.c: 352: sendCommand("mac join otaa");
 18503  00156A  0E55               	movlw	low STR_43
 18504  00156C  0100               	movlb	0	; () banked
 18505  00156E  6F61               	movwf	sendCommand@string& (0+255),b
 18506  001570  0E7D               	movlw	high STR_43
 18507  001572  0100               	movlb	0	; () banked
 18508  001574  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18509  001576  ECD6  F033         	call	_sendCommand	;wreg free
 18510  00157A  D188               	goto	l13882
 18511  00157C                     l13798:
 18512                           
 18513                           ; BSR set to: 0
 18514                           ;MOTEapp.c: 357: if ( messageReady )
 18515  00157C  0100               	movlb	0	; () banked
 18516  00157E  517B               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 18517  001580  0100               	movlb	0	; () banked
 18518  001582  B4D8               	btfsc	status,2,c
 18519  001584  D224               	goto	l13920
 18520                           
 18521                           ; BSR set to: 0
 18522                           ;MOTEapp.c: 358: {
 18523                           ;MOTEapp.c: 359: if(strcmp(moduleResonseBuffer, "ok") == 0)
 18524  001586  0E5C               	movlw	low _moduleResonseBuffer
 18525  001588  0100               	movlb	0	; () banked
 18526  00158A  6F60               	movwf	strcmp@s1& (0+255),b
 18527  00158C  0E01               	movlw	high _moduleResonseBuffer
 18528  00158E  0100               	movlb	0	; () banked
 18529  001590  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 18530  001592  0EF8               	movlw	low STR_44
 18531  001594  0100               	movlb	0	; () banked
 18532  001596  6F62               	movwf	strcmp@s2& (0+255),b
 18533  001598  0E7F               	movlw	high STR_44
 18534  00159A  0100               	movlb	0	; () banked
 18535  00159C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 18536  00159E  EC1C  F031         	call	_strcmp	;wreg free
 18537  0015A2  0100               	movlb	0	; () banked
 18538  0015A4  5160               	movf	?_strcmp& (0+255),w,b
 18539  0015A6  0100               	movlb	0	; () banked
 18540  0015A8  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 18541  0015AA  A4D8               	btfss	status,2,c
 18542  0015AC  D002               	goto	l13804
 18543                           
 18544                           ; BSR set to: 0
 18545                           ;MOTEapp.c: 360: {
 18546                           ;MOTEapp.c: 361: activeState = moteWaitAbp;
 18547  0015AE  0E04               	movlw	4
 18548  0015B0  D742               	goto	L17
 18549  0015B2                     l13804:
 18550                           
 18551                           ; BSR set to: 0
 18552                           ;MOTEapp.c: 363: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 18553  0015B2  0E5C               	movlw	low _moduleResonseBuffer
 18554  0015B4  0100               	movlb	0	; () banked
 18555  0015B6  6F60               	movwf	strcmp@s1& (0+255),b
 18556  0015B8  0E01               	movlw	high _moduleResonseBuffer
 18557  0015BA  0100               	movlb	0	; () banked
 18558  0015BC  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 18559  0015BE  0E71               	movlw	low STR_45
 18560  0015C0  0100               	movlb	0	; () banked
 18561  0015C2  6F62               	movwf	strcmp@s2& (0+255),b
 18562  0015C4  0E7D               	movlw	high STR_45
 18563  0015C6  0100               	movlb	0	; () banked
 18564  0015C8  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 18565  0015CA  EC1C  F031         	call	_strcmp	;wreg free
 18566  0015CE  0100               	movlb	0	; () banked
 18567  0015D0  5160               	movf	?_strcmp& (0+255),w,b
 18568  0015D2  0100               	movlb	0	; () banked
 18569  0015D4  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 18570  0015D6  A4D8               	btfss	status,2,c
 18571  0015D8  D01F               	goto	l13814
 18572                           
 18573                           ; BSR set to: 0
 18574                           ;MOTEapp.c: 364: {
 18575                           ;MOTEapp.c: 365: oled_clear();
 18576  0015DA  ECD1  F034         	call	_oled_clear	;wreg free
 18577                           
 18578                           ;MOTEapp.c: 366: oled_putString("Valid Keys",0,0);
 18579  0015DE  0EB5               	movlw	low STR_46
 18580  0015E0  0100               	movlb	0	; () banked
 18581  0015E2  6F71               	movwf	oled_putString@string& (0+255),b
 18582  0015E4  0E7E               	movlw	high STR_46
 18583  0015E6  0100               	movlb	0	; () banked
 18584  0015E8  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18585  0015EA  0E00               	movlw	0
 18586  0015EC  0100               	movlb	0	; () banked
 18587  0015EE  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18588  0015F0  0E00               	movlw	0
 18589  0015F2  0100               	movlb	0	; () banked
 18590  0015F4  6F74               	movwf	oled_putString@start_page& (0+255),b
 18591  0015F6  EC6F  F02F         	call	_oled_putString	;wreg free
 18592                           
 18593                           ;MOTEapp.c: 367: oled_putString("Required",0,1);
 18594  0015FA  0E1A               	movlw	low STR_47
 18595  0015FC  0100               	movlb	0	; () banked
 18596  0015FE  6F71               	movwf	oled_putString@string& (0+255),b
 18597  001600  0E7F               	movlw	high STR_47
 18598  001602  0100               	movlb	0	; () banked
 18599  001604  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18600  001606  0E00               	movlw	0
 18601  001608  0100               	movlb	0	; () banked
 18602  00160A  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18603  00160C  0E01               	movlw	1
 18604  00160E  0100               	movlb	0	; () banked
 18605  001610  6F74               	movwf	oled_putString@start_page& (0+255),b
 18606  001612  EC6F  F02F         	call	_oled_putString	;wreg free
 18607  001616  D099               	goto	l13848
 18608  001618                     l13814:
 18609                           
 18610                           ; BSR set to: 0
 18611                           ;MOTEapp.c: 370: else
 18612                           ;MOTEapp.c: 371: {
 18613                           ;MOTEapp.c: 372: sendCommand("mac join abp");
 18614  001618  0EF4               	movlw	low STR_41
 18615  00161A  0100               	movlb	0	; () banked
 18616  00161C  6F61               	movwf	sendCommand@string& (0+255),b
 18617  00161E  0E7D               	movlw	high STR_41
 18618  001620  0100               	movlb	0	; () banked
 18619  001622  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18620  001624  ECD6  F033         	call	_sendCommand	;wreg free
 18621  001628                     l13816:
 18622                           
 18623                           ;MOTEapp.c: 373: activeState = moteCheckAbp;
 18624  001628  0E03               	movlw	3
 18625  00162A  D705               	goto	L17
 18626  00162C                     l13818:
 18627                           
 18628                           ; BSR set to: 0
 18629                           ;MOTEapp.c: 378: if ( messageReady )
 18630  00162C  0100               	movlb	0	; () banked
 18631  00162E  517B               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 18632  001630  0100               	movlb	0	; () banked
 18633  001632  B4D8               	btfsc	status,2,c
 18634  001634  D1CC               	goto	l13920
 18635                           
 18636                           ; BSR set to: 0
 18637                           ;MOTEapp.c: 379: {
 18638                           ;MOTEapp.c: 380: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 18639  001636  0E5C               	movlw	low _moduleResonseBuffer
 18640  001638  0100               	movlb	0	; () banked
 18641  00163A  6F60               	movwf	strcmp@s1& (0+255),b
 18642  00163C  0E01               	movlw	high _moduleResonseBuffer
 18643  00163E  0100               	movlb	0	; () banked
 18644  001640  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 18645  001642  0E23               	movlw	low STR_49
 18646  001644  0100               	movlb	0	; () banked
 18647  001646  6F62               	movwf	strcmp@s2& (0+255),b
 18648  001648  0E7F               	movlw	high STR_49
 18649  00164A  0100               	movlb	0	; () banked
 18650  00164C  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 18651  00164E  EC1C  F031         	call	_strcmp	;wreg free
 18652  001652  0100               	movlb	0	; () banked
 18653  001654  5160               	movf	?_strcmp& (0+255),w,b
 18654  001656  0100               	movlb	0	; () banked
 18655  001658  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 18656  00165A  A4D8               	btfss	status,2,c
 18657  00165C  D01F               	goto	l13830
 18658                           
 18659                           ; BSR set to: 0
 18660                           ;MOTEapp.c: 381: {
 18661                           ;MOTEapp.c: 382: oled_clear();
 18662  00165E  ECD1  F034         	call	_oled_clear	;wreg free
 18663                           
 18664                           ;MOTEapp.c: 383: oled_putString("ABP Join ",0,0);
 18665  001662  0ED5               	movlw	low STR_50
 18666  001664  0100               	movlb	0	; () banked
 18667  001666  6F71               	movwf	oled_putString@string& (0+255),b
 18668  001668  0E7E               	movlw	high STR_50
 18669  00166A  0100               	movlb	0	; () banked
 18670  00166C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18671  00166E  0E00               	movlw	0
 18672  001670  0100               	movlb	0	; () banked
 18673  001672  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18674  001674  0E00               	movlw	0
 18675  001676  0100               	movlb	0	; () banked
 18676  001678  6F74               	movwf	oled_putString@start_page& (0+255),b
 18677  00167A  EC6F  F02F         	call	_oled_putString	;wreg free
 18678                           
 18679                           ;MOTEapp.c: 384: oled_putString("Successful",0,1);
 18680  00167E  0E9F               	movlw	low STR_51
 18681  001680  0100               	movlb	0	; () banked
 18682  001682  6F71               	movwf	oled_putString@string& (0+255),b
 18683  001684  0E7E               	movlw	high STR_51
 18684  001686  0100               	movlb	0	; () banked
 18685  001688  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18686  00168A  0E00               	movlw	0
 18687  00168C  0100               	movlb	0	; () banked
 18688  00168E  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18689  001690  0E01               	movlw	1
 18690  001692  0100               	movlb	0	; () banked
 18691  001694  6F74               	movwf	oled_putString@start_page& (0+255),b
 18692  001696  EC6F  F02F         	call	_oled_putString	;wreg free
 18693  00169A  D0BC               	goto	l13870
 18694  00169C                     l13830:
 18695                           
 18696                           ; BSR set to: 0
 18697                           ;MOTEapp.c: 387: else
 18698                           ;MOTEapp.c: 388: {
 18699                           ;MOTEapp.c: 389: sendCommand("mac reset");
 18700  00169C  0EF3               	movlw	low STR_52
 18701  00169E  0100               	movlb	0	; () banked
 18702  0016A0  6F61               	movwf	sendCommand@string& (0+255),b
 18703  0016A2  0E7E               	movlw	high STR_52
 18704  0016A4  0100               	movlb	0	; () banked
 18705  0016A6  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18706  0016A8  ECD6  F033         	call	_sendCommand	;wreg free
 18707  0016AC                     l13832:
 18708                           
 18709                           ;MOTEapp.c: 390: activeState = moteReset;
 18710  0016AC  0E01               	movlw	1
 18711  0016AE  D6C3               	goto	L17
 18712  0016B0                     l13834:
 18713                           
 18714                           ; BSR set to: 0
 18715                           ;MOTEapp.c: 396: if ( messageReady )
 18716  0016B0  0100               	movlb	0	; () banked
 18717  0016B2  517B               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 18718  0016B4  0100               	movlb	0	; () banked
 18719  0016B6  B4D8               	btfsc	status,2,c
 18720  0016B8  D18A               	goto	l13920
 18721                           
 18722                           ; BSR set to: 0
 18723                           ;MOTEapp.c: 397: {
 18724                           ;MOTEapp.c: 398: if(strcmp(moduleResonseBuffer, "ok") == 0)
 18725  0016BA  0E5C               	movlw	low _moduleResonseBuffer
 18726  0016BC  0100               	movlb	0	; () banked
 18727  0016BE  6F60               	movwf	strcmp@s1& (0+255),b
 18728  0016C0  0E01               	movlw	high _moduleResonseBuffer
 18729  0016C2  0100               	movlb	0	; () banked
 18730  0016C4  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 18731  0016C6  0EF8               	movlw	low STR_44
 18732  0016C8  0100               	movlb	0	; () banked
 18733  0016CA  6F62               	movwf	strcmp@s2& (0+255),b
 18734  0016CC  0E7F               	movlw	high STR_44
 18735  0016CE  0100               	movlb	0	; () banked
 18736  0016D0  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 18737  0016D2  EC1C  F031         	call	_strcmp	;wreg free
 18738  0016D6  0100               	movlb	0	; () banked
 18739  0016D8  5160               	movf	?_strcmp& (0+255),w,b
 18740  0016DA  0100               	movlb	0	; () banked
 18741  0016DC  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 18742  0016DE  A4D8               	btfss	status,2,c
 18743  0016E0  D002               	goto	l13840
 18744                           
 18745                           ; BSR set to: 0
 18746                           ;MOTEapp.c: 399: {
 18747                           ;MOTEapp.c: 400: activeState = moteWaitOtaa;
 18748  0016E2  0E06               	movlw	6
 18749  0016E4  D6A8               	goto	L17
 18750  0016E6                     l13840:
 18751                           
 18752                           ; BSR set to: 0
 18753                           ;MOTEapp.c: 402: else if(strcmp(moduleResonseBuffer, "keys_not_init") == 0)
 18754  0016E6  0E5C               	movlw	low _moduleResonseBuffer
 18755  0016E8  0100               	movlb	0	; () banked
 18756  0016EA  6F60               	movwf	strcmp@s1& (0+255),b
 18757  0016EC  0E01               	movlw	high _moduleResonseBuffer
 18758  0016EE  0100               	movlb	0	; () banked
 18759  0016F0  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 18760  0016F2  0E71               	movlw	low STR_45
 18761  0016F4  0100               	movlb	0	; () banked
 18762  0016F6  6F62               	movwf	strcmp@s2& (0+255),b
 18763  0016F8  0E7D               	movlw	high STR_45
 18764  0016FA  0100               	movlb	0	; () banked
 18765  0016FC  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 18766  0016FE  EC1C  F031         	call	_strcmp	;wreg free
 18767  001702  0100               	movlb	0	; () banked
 18768  001704  5160               	movf	?_strcmp& (0+255),w,b
 18769  001706  0100               	movlb	0	; () banked
 18770  001708  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 18771  00170A  A4D8               	btfss	status,2,c
 18772  00170C  D020               	goto	l13850
 18773                           
 18774                           ; BSR set to: 0
 18775                           ;MOTEapp.c: 403: {
 18776                           ;MOTEapp.c: 404: oled_clear();
 18777  00170E  ECD1  F034         	call	_oled_clear	;wreg free
 18778                           
 18779                           ;MOTEapp.c: 405: oled_putString("Valid Keys",0,0);
 18780  001712  0EB5               	movlw	low STR_46
 18781  001714  0100               	movlb	0	; () banked
 18782  001716  6F71               	movwf	oled_putString@string& (0+255),b
 18783  001718  0E7E               	movlw	high STR_46
 18784  00171A  0100               	movlb	0	; () banked
 18785  00171C  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18786  00171E  0E00               	movlw	0
 18787  001720  0100               	movlb	0	; () banked
 18788  001722  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18789  001724  0E00               	movlw	0
 18790  001726  0100               	movlb	0	; () banked
 18791  001728  6F74               	movwf	oled_putString@start_page& (0+255),b
 18792  00172A  EC6F  F02F         	call	_oled_putString	;wreg free
 18793                           
 18794                           ;MOTEapp.c: 406: oled_putString("Required",0,1);
 18795  00172E  0E1A               	movlw	low STR_47
 18796  001730  0100               	movlb	0	; () banked
 18797  001732  6F71               	movwf	oled_putString@string& (0+255),b
 18798  001734  0E7F               	movlw	high STR_47
 18799  001736  0100               	movlb	0	; () banked
 18800  001738  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18801  00173A  0E00               	movlw	0
 18802  00173C  0100               	movlb	0	; () banked
 18803  00173E  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18804  001740  0E01               	movlw	1
 18805  001742  0100               	movlb	0	; () banked
 18806  001744  6F74               	movwf	oled_putString@start_page& (0+255),b
 18807  001746  EC6F  F02F         	call	_oled_putString	;wreg free
 18808  00174A                     l13848:
 18809                           
 18810                           ;MOTEapp.c: 407: activeState = moteNeedKeys;
 18811  00174A  0E09               	movlw	9
 18812  00174C  D674               	goto	L17
 18813  00174E                     l13850:
 18814                           
 18815                           ; BSR set to: 0
 18816                           ;MOTEapp.c: 409: else if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 18817  00174E  0E5C               	movlw	low _moduleResonseBuffer
 18818  001750  0100               	movlb	0	; () banked
 18819  001752  6F60               	movwf	strcmp@s1& (0+255),b
 18820  001754  0E01               	movlw	high _moduleResonseBuffer
 18821  001756  0100               	movlb	0	; () banked
 18822  001758  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 18823  00175A  0E63               	movlw	low STR_57
 18824  00175C  0100               	movlb	0	; () banked
 18825  00175E  6F62               	movwf	strcmp@s2& (0+255),b
 18826  001760  0E7D               	movlw	high STR_57
 18827  001762  0100               	movlb	0	; () banked
 18828  001764  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 18829  001766  EC1C  F031         	call	_strcmp	;wreg free
 18830  00176A  0100               	movlb	0	; () banked
 18831  00176C  5160               	movf	?_strcmp& (0+255),w,b
 18832  00176E  0100               	movlb	0	; () banked
 18833  001770  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 18834  001772  A4D8               	btfss	status,2,c
 18835  001774  D009               	goto	l13856
 18836                           
 18837                           ; BSR set to: 0
 18838                           ;MOTEapp.c: 410: {
 18839                           ;MOTEapp.c: 411: sendCommand("mac join otaa");
 18840  001776  0E55               	movlw	low STR_43
 18841  001778  0100               	movlb	0	; () banked
 18842  00177A  6F61               	movwf	sendCommand@string& (0+255),b
 18843  00177C  0E7D               	movlw	high STR_43
 18844  00177E  0100               	movlb	0	; () banked
 18845  001780  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 18846  001782  ECD6  F033         	call	_sendCommand	;wreg free
 18847  001786  D082               	goto	l13882
 18848  001788                     l13856:
 18849                           
 18850                           ; BSR set to: 0
 18851                           ;MOTEapp.c: 414: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 18852  001788  0E5C               	movlw	low _moduleResonseBuffer
 18853  00178A  0100               	movlb	0	; () banked
 18854  00178C  6F60               	movwf	strcmp@s1& (0+255),b
 18855  00178E  0E01               	movlw	high _moduleResonseBuffer
 18856  001790  0100               	movlb	0	; () banked
 18857  001792  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 18858  001794  0E94               	movlw	low STR_59
 18859  001796  0100               	movlb	0	; () banked
 18860  001798  6F62               	movwf	strcmp@s2& (0+255),b
 18861  00179A  0E7E               	movlw	high STR_59
 18862  00179C  0100               	movlb	0	; () banked
 18863  00179E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 18864  0017A0  EC1C  F031         	call	_strcmp	;wreg free
 18865  0017A4  D083               	goto	L37
 18866  0017A6                     l13860:
 18867                           
 18868                           ; BSR set to: 0
 18869                           ;MOTEapp.c: 421: if ( messageReady )
 18870  0017A6  0100               	movlb	0	; () banked
 18871  0017A8  517B               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 18872  0017AA  0100               	movlb	0	; () banked
 18873  0017AC  B4D8               	btfsc	status,2,c
 18874  0017AE  D10F               	goto	l13920
 18875                           
 18876                           ; BSR set to: 0
 18877                           ;MOTEapp.c: 422: {
 18878                           ;MOTEapp.c: 423: if(strcmp(moduleResonseBuffer, "accepted") == 0)
 18879  0017B0  0E5C               	movlw	low _moduleResonseBuffer
 18880  0017B2  0100               	movlb	0	; () banked
 18881  0017B4  6F60               	movwf	strcmp@s1& (0+255),b
 18882  0017B6  0E01               	movlw	high _moduleResonseBuffer
 18883  0017B8  0100               	movlb	0	; () banked
 18884  0017BA  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 18885  0017BC  0E23               	movlw	low STR_49
 18886  0017BE  0100               	movlb	0	; () banked
 18887  0017C0  6F62               	movwf	strcmp@s2& (0+255),b
 18888  0017C2  0E7F               	movlw	high STR_49
 18889  0017C4  0100               	movlb	0	; () banked
 18890  0017C6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 18891  0017C8  EC1C  F031         	call	_strcmp	;wreg free
 18892  0017CC  0100               	movlb	0	; () banked
 18893  0017CE  5160               	movf	?_strcmp& (0+255),w,b
 18894  0017D0  0100               	movlb	0	; () banked
 18895  0017D2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 18896  0017D4  A4D8               	btfss	status,2,c
 18897  0017D6  D020               	goto	l13872
 18898                           
 18899                           ; BSR set to: 0
 18900                           ;MOTEapp.c: 424: {
 18901                           ;MOTEapp.c: 425: oled_clear();
 18902  0017D8  ECD1  F034         	call	_oled_clear	;wreg free
 18903                           
 18904                           ;MOTEapp.c: 426: oled_putString("OTAA Join ",0,0);
 18905  0017DC  0E89               	movlw	low STR_61
 18906  0017DE  0100               	movlb	0	; () banked
 18907  0017E0  6F71               	movwf	oled_putString@string& (0+255),b
 18908  0017E2  0E7E               	movlw	high STR_61
 18909  0017E4  0100               	movlb	0	; () banked
 18910  0017E6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18911  0017E8  0E00               	movlw	0
 18912  0017EA  0100               	movlb	0	; () banked
 18913  0017EC  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18914  0017EE  0E00               	movlw	0
 18915  0017F0  0100               	movlb	0	; () banked
 18916  0017F2  6F74               	movwf	oled_putString@start_page& (0+255),b
 18917  0017F4  EC6F  F02F         	call	_oled_putString	;wreg free
 18918                           
 18919                           ;MOTEapp.c: 427: oled_putString("Successful",0,1);
 18920  0017F8  0E9F               	movlw	low STR_51
 18921  0017FA  0100               	movlb	0	; () banked
 18922  0017FC  6F71               	movwf	oled_putString@string& (0+255),b
 18923  0017FE  0E7E               	movlw	high STR_51
 18924  001800  0100               	movlb	0	; () banked
 18925  001802  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18926  001804  0E00               	movlw	0
 18927  001806  0100               	movlb	0	; () banked
 18928  001808  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18929  00180A  0E01               	movlw	1
 18930  00180C  0100               	movlb	0	; () banked
 18931  00180E  6F74               	movwf	oled_putString@start_page& (0+255),b
 18932  001810  EC6F  F02F         	call	_oled_putString	;wreg free
 18933  001814                     l13870:
 18934                           
 18935                           ;MOTEapp.c: 428: activeState = moteJoined;
 18936  001814  0E07               	movlw	7
 18937  001816  D60F               	goto	L17
 18938  001818                     l13872:
 18939                           
 18940                           ; BSR set to: 0
 18941                           ;MOTEapp.c: 430: else if(strcmp(moduleResonseBuffer, "denied") == 0)
 18942  001818  0E5C               	movlw	low _moduleResonseBuffer
 18943  00181A  0100               	movlb	0	; () banked
 18944  00181C  6F60               	movwf	strcmp@s1& (0+255),b
 18945  00181E  0E01               	movlw	high _moduleResonseBuffer
 18946  001820  0100               	movlb	0	; () banked
 18947  001822  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 18948  001824  0E96               	movlw	low STR_63
 18949  001826  0100               	movlb	0	; () banked
 18950  001828  6F62               	movwf	strcmp@s2& (0+255),b
 18951  00182A  0E7F               	movlw	high STR_63
 18952  00182C  0100               	movlb	0	; () banked
 18953  00182E  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 18954  001830  EC1C  F031         	call	_strcmp	;wreg free
 18955  001834  0100               	movlb	0	; () banked
 18956  001836  5160               	movf	?_strcmp& (0+255),w,b
 18957  001838  0100               	movlb	0	; () banked
 18958  00183A  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 18959  00183C  A4D8               	btfss	status,2,c
 18960  00183E  D028               	goto	l13884
 18961                           
 18962                           ; BSR set to: 0
 18963                           ;MOTEapp.c: 431: {
 18964                           ;MOTEapp.c: 432: oled_clear();
 18965  001840  ECD1  F034         	call	_oled_clear	;wreg free
 18966                           
 18967                           ;MOTEapp.c: 433: oled_putString("OTAA Join",1,0);
 18968  001844  0EE9               	movlw	low STR_64
 18969  001846  0100               	movlb	0	; () banked
 18970  001848  6F71               	movwf	oled_putString@string& (0+255),b
 18971  00184A  0E7E               	movlw	high STR_64
 18972  00184C  0100               	movlb	0	; () banked
 18973  00184E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18974  001850  0E01               	movlw	1
 18975  001852  0100               	movlb	0	; () banked
 18976  001854  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18977  001856  0E00               	movlw	0
 18978  001858  0100               	movlb	0	; () banked
 18979  00185A  6F74               	movwf	oled_putString@start_page& (0+255),b
 18980  00185C  EC6F  F02F         	call	_oled_putString	;wreg free
 18981                           
 18982                           ;MOTEapp.c: 434: oled_putString("Denied",2,1);
 18983  001860  0E8F               	movlw	low STR_65
 18984  001862  0100               	movlb	0	; () banked
 18985  001864  6F71               	movwf	oled_putString@string& (0+255),b
 18986  001866  0E7F               	movlw	high STR_65
 18987  001868  0100               	movlb	0	; () banked
 18988  00186A  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 18989  00186C  0E02               	movlw	2
 18990  00186E  0100               	movlb	0	; () banked
 18991  001870  6F73               	movwf	oled_putString@station_dot& (0+255),b
 18992  001872  0E01               	movlw	1
 18993  001874  0100               	movlb	0	; () banked
 18994  001876  6F74               	movwf	oled_putString@start_page& (0+255),b
 18995  001878  EC6F  F02F         	call	_oled_putString	;wreg free
 18996                           
 18997                           ;MOTEapp.c: 435: sendCommand("mac join otaa");
 18998  00187C  0E55               	movlw	low STR_43
 18999  00187E  0100               	movlb	0	; () banked
 19000  001880  6F61               	movwf	sendCommand@string& (0+255),b
 19001  001882  0E7D               	movlw	high STR_43
 19002  001884  0100               	movlb	0	; () banked
 19003  001886  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 19004  001888  ECD6  F033         	call	_sendCommand	;wreg free
 19005  00188C                     l13882:
 19006                           
 19007                           ;MOTEapp.c: 436: activeState = moteCheckOtaa;
 19008  00188C  0E05               	movlw	5
 19009  00188E  D5D3               	goto	L17
 19010  001890                     l13884:
 19011                           
 19012                           ; BSR set to: 0
 19013                           ;MOTEapp.c: 438: else if(strcmp(moduleResonseBuffer, "no_free_ch") == 0)
 19014  001890  0E5C               	movlw	low _moduleResonseBuffer
 19015  001892  0100               	movlb	0	; () banked
 19016  001894  6F60               	movwf	strcmp@s1& (0+255),b
 19017  001896  0E01               	movlw	high _moduleResonseBuffer
 19018  001898  0100               	movlb	0	; () banked
 19019  00189A  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 19020  00189C  0E94               	movlw	low STR_59
 19021  00189E  0100               	movlb	0	; () banked
 19022  0018A0  6F62               	movwf	strcmp@s2& (0+255),b
 19023  0018A2  0E7E               	movlw	high STR_59
 19024  0018A4  0100               	movlb	0	; () banked
 19025  0018A6  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 19026  0018A8  EC1C  F031         	call	_strcmp	;wreg free
 19027  0018AC                     L37:
 19028  0018AC  0100               	movlb	0	; () banked
 19029  0018AE  5160               	movf	?_strcmp& (0+255),w,b
 19030  0018B0  0100               	movlb	0	; () banked
 19031  0018B2  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 19032  0018B4  A4D8               	btfss	status,2,c
 19033  0018B6  D08B               	goto	l13920
 19034  0018B8                     l13886:
 19035                           
 19036                           ; BSR set to: 0
 19037                           ;MOTEapp.c: 439: {
 19038                           ;MOTEapp.c: 440: activeState = moteStartup;
 19039  0018B8  0E00               	movlw	0
 19040  0018BA  D5BD               	goto	L17
 19041  0018BC                     l13888:
 19042                           
 19043                           ; BSR set to: 0
 19044                           ;MOTEapp.c: 445: sendCommand("mac get dr");
 19045  0018BC  0EAA               	movlw	low STR_68
 19046  0018BE  0100               	movlb	0	; () banked
 19047  0018C0  6F61               	movwf	sendCommand@string& (0+255),b
 19048  0018C2  0E7E               	movlw	high STR_68
 19049  0018C4  0100               	movlb	0	; () banked
 19050  0018C6  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 19051  0018C8  ECD6  F033         	call	_sendCommand	;wreg free
 19052  0018CC  D021               	goto	l13898
 19053  0018CE                     l13892:
 19054                           
 19055                           ; BSR set to: 0
 19056                           ;MOTEapp.c: 449: if ( messageReady )
 19057  0018CE  0100               	movlb	0	; () banked
 19058  0018D0  517B               	movf	moteJoiningProcess@messageReady& (0+255),w,b
 19059  0018D2  0100               	movlb	0	; () banked
 19060  0018D4  B4D8               	btfsc	status,2,c
 19061  0018D6  D07B               	goto	l13920
 19062                           
 19063                           ; BSR set to: 0
 19064                           ;MOTEapp.c: 450: {
 19065                           ;MOTEapp.c: 451: if(strcmp(moduleResonseBuffer, "invalid_param") == 0)
 19066  0018D8  0E5C               	movlw	low _moduleResonseBuffer
 19067  0018DA  0100               	movlb	0	; () banked
 19068  0018DC  6F60               	movwf	strcmp@s1& (0+255),b
 19069  0018DE  0E01               	movlw	high _moduleResonseBuffer
 19070  0018E0  0100               	movlb	0	; () banked
 19071  0018E2  6F61               	movwf	(strcmp@s1+1)& (0+255),b
 19072  0018E4  0E63               	movlw	low STR_57
 19073  0018E6  0100               	movlb	0	; () banked
 19074  0018E8  6F62               	movwf	strcmp@s2& (0+255),b
 19075  0018EA  0E7D               	movlw	high STR_57
 19076  0018EC  0100               	movlb	0	; () banked
 19077  0018EE  6F63               	movwf	(strcmp@s2+1)& (0+255),b
 19078  0018F0  EC1C  F031         	call	_strcmp	;wreg free
 19079  0018F4  0100               	movlb	0	; () banked
 19080  0018F6  5160               	movf	?_strcmp& (0+255),w,b
 19081  0018F8  0100               	movlb	0	; () banked
 19082  0018FA  1161               	iorwf	(?_strcmp+1)& (0+255),w,b
 19083  0018FC  A4D8               	btfss	status,2,c
 19084  0018FE  D00A               	goto	l13900
 19085                           
 19086                           ; BSR set to: 0
 19087                           ;MOTEapp.c: 452: {
 19088                           ;MOTEapp.c: 453: sendCommand("mac get dr");
 19089  001900  0EAA               	movlw	low STR_68
 19090  001902  0100               	movlb	0	; () banked
 19091  001904  6F61               	movwf	sendCommand@string& (0+255),b
 19092  001906  0E7E               	movlw	high STR_68
 19093  001908  0100               	movlb	0	; () banked
 19094  00190A  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 19095  00190C  ECD6  F033         	call	_sendCommand	;wreg free
 19096  001910                     l13898:
 19097                           
 19098                           ;MOTEapp.c: 454: activeState = moteGetDr;
 19099  001910  0E08               	movlw	8
 19100  001912  D591               	goto	L17
 19101  001914                     l13900:
 19102                           
 19103                           ; BSR set to: 0
 19104                           ;MOTEapp.c: 456: else
 19105                           ;MOTEapp.c: 457: {
 19106                           ;MOTEapp.c: 458: uint8_t readDataRate;
 19107                           ;MOTEapp.c: 459: readDataRate = moduleResonseBuffer[0] - '0';
 19108  001914  0101               	movlb	1	; () banked
 19109  001916  515C               	movf	_moduleResonseBuffer& (0+255),w,b
 19110  001918  0FD0               	addlw	208
 19111  00191A  0100               	movlb	0	; () banked
 19112  00191C  6F79               	movwf	moteJoiningProcess@readDataRate& (0+255),b
 19113                           
 19114                           ; BSR set to: 0
 19115                           ;MOTEapp.c: 460: dataRateValue = readDataRate;
 19116  00191E  C079  F0F7         	movff	moteJoiningProcess@readDataRate,_dataRateValue
 19117                           
 19118                           ; BSR set to: 0
 19119                           ;MOTEapp.c: 461: joiningComplete = 1;
 19120  001922  0E01               	movlw	1
 19121  001924  0100               	movlb	0	; () banked
 19122  001926  6F7A               	movwf	moteJoiningProcess@joiningComplete& (0+255),b
 19123                           
 19124                           ; BSR set to: 0
 19125                           ;MOTEapp.c: 462: }
 19126                           ;MOTEapp.c: 463: }
 19127                           ;MOTEapp.c: 464: break;
 19128                           
 19129                           ; BSR set to: 0
 19130  001928  D052               	goto	l13920
 19131  00192A                     l13906:
 19132                           
 19133                           ; BSR set to: 0
 19134                           ;MOTEapp.c: 466: if (selectButton)
 19135  00192A  0100               	movlb	0	; () banked
 19136  00192C  5177               	movf	moteJoiningProcess@selectButton& (0+255),w,b
 19137  00192E  0100               	movlb	0	; () banked
 19138  001930  B4D8               	btfsc	status,2,c
 19139  001932  D04D               	goto	l13920
 19140                           
 19141                           ; BSR set to: 0
 19142                           ;MOTEapp.c: 467: {
 19143                           ;MOTEapp.c: 468: activeState = moteComFailure;
 19144  001934  0E0A               	movlw	10
 19145  001936  D57F               	goto	L17
 19146  001938                     l13910:
 19147                           
 19148                           ; BSR set to: 0
 19149                           ;MOTEapp.c: 473: DATAEE_WriteByte(0x00, 0x00);
 19150  001938  0E00               	movlw	0
 19151  00193A  0100               	movlb	0	; () banked
 19152  00193C  6F60               	movwf	DATAEE_WriteByte@bData& (0+255),b
 19153  00193E  0E00               	movlw	0
 19154  001940  EC89  F032         	call	_DATAEE_WriteByte
 19155  001944                     l448:
 19156  001944  A281               	btfss	3969,1,c	;volatile
 19157  001946  B081               	btfsc	3969,0,c	;volatile
 19158  001948  D001               	goto	l13914
 19159  00194A  D7FC               	goto	l448
 19160  00194C                     l13914:
 19161                           
 19162                           ;MOTEapp.c: 475: _delay((unsigned long)((16)*(48000000/4000.0)));
 19163  00194C  0EFA               	movlw	250
 19164  00194E  0100               	movlb	0	; () banked
 19165  001950  6F78               	movwf	??_moteJoiningProcess& (0+255),b
 19166  001952  0E58               	movlw	88
 19167  001954                     u14877:
 19168  001954  2EE8               	decfsz	wreg,f,c
 19169  001956  D7FE               	goto	u14877
 19170  001958  2F78               	decfsz	??_moteJoiningProcess& (0+255),f,b
 19171  00195A  D7FC               	goto	u14877
 19172  00195C  D000               	nop2	
 19173                           
 19174                           ;MOTEapp.c: 476: _delay((unsigned long)((16)*(48000000/4000.0)));
 19175  00195E  0EFA               	movlw	250
 19176  001960  0100               	movlb	0	; () banked
 19177  001962  6F78               	movwf	??_moteJoiningProcess& (0+255),b
 19178  001964  0E58               	movlw	88
 19179  001966                     u14887:
 19180  001966  2EE8               	decfsz	wreg,f,c
 19181  001968  D7FE               	goto	u14887
 19182  00196A  2F78               	decfsz	??_moteJoiningProcess& (0+255),f,b
 19183  00196C  D7FC               	goto	u14887
 19184  00196E  D000               	nop2	
 19185                           
 19186                           ;MOTEapp.c: 477: _delay((unsigned long)((16)*(48000000/4000.0)));
 19187  001970  0EFA               	movlw	250
 19188  001972  0100               	movlb	0	; () banked
 19189  001974  6F78               	movwf	??_moteJoiningProcess& (0+255),b
 19190  001976  0E58               	movlw	88
 19191  001978                     u14897:
 19192  001978  2EE8               	decfsz	wreg,f,c
 19193  00197A  D7FE               	goto	u14897
 19194  00197C  2F78               	decfsz	??_moteJoiningProcess& (0+255),f,b
 19195  00197E  D7FC               	goto	u14897
 19196  001980  D000               	nop2	
 19197  001982  00FF               	reset		;# 
 19198                           
 19199                           ;MOTEapp.c: 481: }
 19200                           
 19201                           ;MOTEapp.c: 480: break;
 19202  001984  D024               	goto	l13920
 19203  001986                     l13918:
 19204  001986  0100               	movlb	0	; () banked
 19205  001988  51D5               	movf	_activeState& (0+255),w,b
 19206                           
 19207                           ; Switch size 1, requested type "space"
 19208                           ; Number of cases is 11, Range of values is 0 to 10
 19209                           ; switch strategies available:
 19210                           ; Name         Instructions Cycles
 19211                           ; simple_byte           34    18 (average)
 19212                           ;	Chosen strategy is simple_byte
 19213  00198A  0A00               	xorlw	0	; case 0
 19214  00198C  B4D8               	btfsc	status,2,c
 19215  00198E  D4F4               	goto	l13736
 19216  001990  0A01               	xorlw	1	; case 1
 19217  001992  B4D8               	btfsc	status,2,c
 19218  001994  D4FA               	goto	l13740
 19219  001996  0A03               	xorlw	3	; case 2
 19220  001998  B4D8               	btfsc	status,2,c
 19221  00199A  D5AA               	goto	l13778
 19222  00199C  0A01               	xorlw	1	; case 3
 19223  00199E  B4D8               	btfsc	status,2,c
 19224  0019A0  D5ED               	goto	l13798
 19225  0019A2  0A07               	xorlw	7	; case 4
 19226  0019A4  B4D8               	btfsc	status,2,c
 19227  0019A6  D642               	goto	l13818
 19228  0019A8  0A01               	xorlw	1	; case 5
 19229  0019AA  B4D8               	btfsc	status,2,c
 19230  0019AC  D681               	goto	l13834
 19231  0019AE  0A03               	xorlw	3	; case 6
 19232  0019B0  B4D8               	btfsc	status,2,c
 19233  0019B2  D6F9               	goto	l13860
 19234  0019B4  0A01               	xorlw	1	; case 7
 19235  0019B6  B4D8               	btfsc	status,2,c
 19236  0019B8  D781               	goto	l13888
 19237  0019BA  0A0F               	xorlw	15	; case 8
 19238  0019BC  B4D8               	btfsc	status,2,c
 19239  0019BE  D787               	goto	l13892
 19240  0019C0  0A01               	xorlw	1	; case 9
 19241  0019C2  B4D8               	btfsc	status,2,c
 19242  0019C4  D7B2               	goto	l13906
 19243  0019C6  0A03               	xorlw	3	; case 10
 19244  0019C8  B4D8               	btfsc	status,2,c
 19245  0019CA  D7B6               	goto	l13910
 19246  0019CC  D4D4               	goto	l399
 19247  0019CE                     l13920:
 19248                           
 19249                           ;MOTEapp.c: 482: return joiningComplete;
 19250  0019CE  0100               	movlb	0	; () banked
 19251  0019D0  517A               	movf	moteJoiningProcess@joiningComplete& (0+255),w,b
 19252  0019D2  0012               	return	
 19253  0019D4                     __end_of_moteJoiningProcess:
 19254                           	opt stack 0
 19255                           tblptru	equ	0xFF8
 19256                           tblptrh	equ	0xFF7
 19257                           tblptrl	equ	0xFF6
 19258                           tablat	equ	0xFF5
 19259                           prodh	equ	0xFF4
 19260                           prodl	equ	0xFF3
 19261                           intcon	equ	0xFF2
 19262                           intcon3	equ	0xFF0
 19263                           postinc0	equ	0xFEE
 19264                           wreg	equ	0xFE8
 19265                           indf1	equ	0xFE7
 19266                           postdec1	equ	0xFE5
 19267                           fsr1h	equ	0xFE2
 19268                           fsr1l	equ	0xFE1
 19269                           indf2	equ	0xFDF
 19270                           fsr2h	equ	0xFDA
 19271                           fsr2l	equ	0xFD9
 19272                           status	equ	0xFD8
 19273                           
 19274 ;; *************** function _strncmp *****************
 19275 ;; Defined at:
 19276 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strncmp.c"
 19277 ;; Parameters:    Size  Location     Type
 19278 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 19279 ;;		 -> moduleResonseBuffer(64), 
 19280 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 19281 ;;		 -> STR_96(7), STR_94(7), STR_92(7), STR_89(7), 
 19282 ;;		 -> STR_35(5), STR_31(5), 
 19283 ;;  len             2    4[BANK0 ] unsigned int 
 19284 ;; Auto vars:     Size  Location     Type
 19285 ;;		None
 19286 ;; Return value:  Size  Location     Type
 19287 ;;                  2    0[BANK0 ] int 
 19288 ;; Registers used:
 19289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 19290 ;; Tracked objects:
 19291 ;;		On entry : 0/0
 19292 ;;		On exit  : 0/0
 19293 ;;		Unchanged: 0/0
 19294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19295 ;;      Params:         0       6       0       0       0       0       0       0       0
 19296 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19297 ;;      Temps:          0       3       0       0       0       0       0       0       0
 19298 ;;      Totals:         0       9       0       0       0       0       0       0       0
 19299 ;;Total ram usage:        9 bytes
 19300 ;; Hardware stack levels used:    1
 19301 ;; Hardware stack levels required when called:   11
 19302 ;; This function calls:
 19303 ;;		Nothing
 19304 ;; This function is called by:
 19305 ;;		_moteJoiningProcess
 19306 ;;		_moteRunningProcess
 19307 ;; This function uses a non-reentrant model
 19308 ;;
 19309                           
 19310                           	psect	text52
 19311  005626                     __ptext52:
 19312                           	opt stack 0
 19313  005626                     _strncmp:
 19314                           	opt stack 17
 19315                           
 19316                           ; BSR set to: 0
 19317                           ;incstack = 0
 19318  005626  D03F               	goto	l13016
 19319  005628                     l13006:
 19320  005628  C060  FFD9         	movff	strncmp@s1,fsr2l
 19321  00562C  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 19322  005630  50DF               	movf	indf2,w,c
 19323  005632  B4D8               	btfsc	status,2,c
 19324  005634  D011               	goto	l13010
 19325  005636  C060  FFD9         	movff	strncmp@s1,fsr2l
 19326  00563A  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 19327  00563E  50DF               	movf	indf2,w,c
 19328  005640  0100               	movlb	0	; () banked
 19329  005642  6F66               	movwf	??_strncmp& (0+255),b
 19330  005644  C062  FFF6         	movff	strncmp@s2,tblptrl
 19331  005648  C063  FFF7         	movff	strncmp@s2+1,tblptrh
 19332  00564C                     	if	0	;tblptru may be non-zero
 19333  00564C                     	endif
 19334  00564C                     	if	0	;tblptru may be non-zero
 19335  00564C                     	endif
 19336  00564C  0008               	tblrd		*
 19337  00564E  50F5               	movf	tablat,w,c
 19338  005650  0100               	movlb	0	; () banked
 19339  005652  1966               	xorwf	??_strncmp& (0+255),w,b
 19340  005654  B4D8               	btfsc	status,2,c
 19341  005656  D021               	goto	l13014
 19342  005658                     l13010:
 19343  005658  C062  FFF6         	movff	strncmp@s2,tblptrl
 19344  00565C  C063  FFF7         	movff	strncmp@s2+1,tblptrh
 19345  005660                     	if	0	;tblptru may be non-zero
 19346  005660                     	endif
 19347  005660                     	if	0	;tblptru may be non-zero
 19348  005660                     	endif
 19349  005660  0008               	tblrd		*
 19350  005662  50F5               	movf	tablat,w,c
 19351  005664  0100               	movlb	0	; () banked
 19352  005666  6F66               	movwf	??_strncmp& (0+255),b
 19353  005668  6B67               	clrf	(??_strncmp+1)& (0+255),b
 19354  00566A  0100               	movlb	0	; () banked
 19355  00566C  1F66               	comf	??_strncmp& (0+255),f,b
 19356  00566E  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 19357  005670  4B66               	infsnz	??_strncmp& (0+255),f,b
 19358  005672  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 19359  005674  C060  FFD9         	movff	strncmp@s1,fsr2l
 19360  005678  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 19361  00567C  50DF               	movf	indf2,w,c
 19362  00567E  0100               	movlb	0	; () banked
 19363  005680  6F68               	movwf	(??_strncmp+2)& (0+255),b
 19364  005682  0100               	movlb	0	; () banked
 19365  005684  5168               	movf	(??_strncmp+2)& (0+255),w,b
 19366  005686  0100               	movlb	0	; () banked
 19367  005688  2566               	addwf	??_strncmp& (0+255),w,b
 19368  00568A  0100               	movlb	0	; () banked
 19369  00568C  6F60               	movwf	?_strncmp& (0+255),b
 19370  00568E  0E00               	movlw	0
 19371  005690  0100               	movlb	0	; () banked
 19372  005692  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 19373  005694  0100               	movlb	0	; () banked
 19374  005696  6F61               	movwf	(?_strncmp+1)& (0+255),b
 19375                           
 19376                           ; BSR set to: 0
 19377  005698  0012               	return	
 19378  00569A                     l13014:
 19379                           
 19380                           ; BSR set to: 0
 19381  00569A  0100               	movlb	0	; () banked
 19382  00569C  4B60               	infsnz	strncmp@s1& (0+255),f,b
 19383  00569E  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 19384  0056A0  0100               	movlb	0	; () banked
 19385  0056A2  4B62               	infsnz	strncmp@s2& (0+255),f,b
 19386  0056A4  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 19387  0056A6                     l13016:
 19388  0056A6  0100               	movlb	0	; () banked
 19389  0056A8  0764               	decf	strncmp@len& (0+255),f,b
 19390  0056AA  A0D8               	btfss	status,0,c
 19391  0056AC  0765               	decf	(strncmp@len+1)& (0+255),f,b
 19392  0056AE  0100               	movlb	0	; () banked
 19393  0056B0  2964               	incf	strncmp@len& (0+255),w,b
 19394  0056B2  E1BA               	bnz	l13006
 19395  0056B4  0100               	movlb	0	; () banked
 19396  0056B6  2965               	incf	(strncmp@len+1)& (0+255),w,b
 19397  0056B8  A4D8               	btfss	status,2,c
 19398  0056BA  D7B6               	goto	l13006
 19399                           
 19400                           ; BSR set to: 0
 19401                           
 19402                           ; BSR set to: 0
 19403  0056BC  0E00               	movlw	0
 19404  0056BE  0100               	movlb	0	; () banked
 19405  0056C0  6F61               	movwf	(?_strncmp+1)& (0+255),b
 19406  0056C2  0E00               	movlw	0
 19407  0056C4  6F60               	movwf	?_strncmp& (0+255),b
 19408  0056C6  0012               	return	
 19409  0056C8                     __end_of_strncmp:
 19410                           	opt stack 0
 19411                           tblptru	equ	0xFF8
 19412                           tblptrh	equ	0xFF7
 19413                           tblptrl	equ	0xFF6
 19414                           tablat	equ	0xFF5
 19415                           prodh	equ	0xFF4
 19416                           prodl	equ	0xFF3
 19417                           intcon	equ	0xFF2
 19418                           intcon3	equ	0xFF0
 19419                           postinc0	equ	0xFEE
 19420                           wreg	equ	0xFE8
 19421                           indf1	equ	0xFE7
 19422                           postdec1	equ	0xFE5
 19423                           fsr1h	equ	0xFE2
 19424                           fsr1l	equ	0xFE1
 19425                           indf2	equ	0xFDF
 19426                           fsr2h	equ	0xFDA
 19427                           fsr2l	equ	0xFD9
 19428                           status	equ	0xFD8
 19429                           
 19430 ;; *************** function _strcmp *****************
 19431 ;; Defined at:
 19432 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\strcmp.c"
 19433 ;; Parameters:    Size  Location     Type
 19434 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 19435 ;;		 -> moduleResonseBuffer(64), 
 19436 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 19437 ;;		 -> STR_88(3), STR_69(14), STR_67(11), STR_63(7), 
 19438 ;;		 -> STR_60(9), STR_59(11), STR_57(14), STR_54(14), 
 19439 ;;		 -> STR_53(3), STR_49(9), STR_45(14), STR_44(3), 
 19440 ;; Auto vars:     Size  Location     Type
 19441 ;;  r               1    5[BANK0 ] char 
 19442 ;; Return value:  Size  Location     Type
 19443 ;;                  2    0[BANK0 ] int 
 19444 ;; Registers used:
 19445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 19446 ;; Tracked objects:
 19447 ;;		On entry : 0/0
 19448 ;;		On exit  : 0/0
 19449 ;;		Unchanged: 0/0
 19450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19451 ;;      Params:         0       4       0       0       0       0       0       0       0
 19452 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19453 ;;      Temps:          0       1       0       0       0       0       0       0       0
 19454 ;;      Totals:         0       6       0       0       0       0       0       0       0
 19455 ;;Total ram usage:        6 bytes
 19456 ;; Hardware stack levels used:    1
 19457 ;; Hardware stack levels required when called:   11
 19458 ;; This function calls:
 19459 ;;		Nothing
 19460 ;; This function is called by:
 19461 ;;		_moteJoiningProcess
 19462 ;;		_moteRunningProcess
 19463 ;; This function uses a non-reentrant model
 19464 ;;
 19465                           
 19466                           	psect	text53
 19467  006238                     __ptext53:
 19468                           	opt stack 0
 19469  006238                     _strcmp:
 19470                           	opt stack 17
 19471                           
 19472                           ; BSR set to: 0
 19473                           ;incstack = 0
 19474  006238  D006               	goto	l13026
 19475  00623A                     l13024:
 19476  00623A  0100               	movlb	0	; () banked
 19477  00623C  4B60               	infsnz	strcmp@s1& (0+255),f,b
 19478  00623E  2B61               	incf	(strcmp@s1+1)& (0+255),f,b
 19479  006240  0100               	movlb	0	; () banked
 19480  006242  4B62               	infsnz	strcmp@s2& (0+255),f,b
 19481  006244  2B63               	incf	(strcmp@s2+1)& (0+255),f,b
 19482  006246                     l13026:
 19483  006246  C060  FFD9         	movff	strcmp@s1,fsr2l
 19484  00624A  C061  FFDA         	movff	strcmp@s1+1,fsr2h
 19485  00624E  50DF               	movf	indf2,w,c
 19486  006250  0100               	movlb	0	; () banked
 19487  006252  6F64               	movwf	??_strcmp& (0+255),b
 19488  006254  C062  FFF6         	movff	strcmp@s2,tblptrl
 19489  006258  C063  FFF7         	movff	strcmp@s2+1,tblptrh
 19490  00625C                     	if	0	;tblptru may be non-zero
 19491  00625C                     	endif
 19492  00625C                     	if	0	;tblptru may be non-zero
 19493  00625C                     	endif
 19494  00625C  0008               	tblrd		*
 19495  00625E  50F5               	movf	tablat,w,c
 19496  006260  0800               	sublw	0
 19497  006262  0100               	movlb	0	; () banked
 19498  006264  2564               	addwf	??_strcmp& (0+255),w,b
 19499  006266  0100               	movlb	0	; () banked
 19500  006268  6F65               	movwf	strcmp@r& (0+255),b
 19501  00626A  0100               	movlb	0	; () banked
 19502  00626C  5165               	movf	strcmp@r& (0+255),w,b
 19503  00626E  A4D8               	btfss	status,2,c
 19504  006270  D007               	goto	l13030
 19505                           
 19506                           ; BSR set to: 0
 19507  006272  C060  FFD9         	movff	strcmp@s1,fsr2l
 19508  006276  C061  FFDA         	movff	strcmp@s1+1,fsr2h
 19509  00627A  50DF               	movf	indf2,w,c
 19510  00627C  A4D8               	btfss	status,2,c
 19511  00627E  D7DD               	goto	l13024
 19512  006280                     l13030:
 19513                           
 19514                           ; BSR set to: 0
 19515  006280  0100               	movlb	0	; () banked
 19516  006282  5165               	movf	strcmp@r& (0+255),w,b
 19517  006284  0100               	movlb	0	; () banked
 19518  006286  6F60               	movwf	?_strcmp& (0+255),b
 19519  006288  6B61               	clrf	(?_strcmp+1)& (0+255),b
 19520  00628A  BF60               	btfsc	?_strcmp& (0+255),7,b
 19521  00628C  0761               	decf	(?_strcmp+1)& (0+255),f,b
 19522  00628E  0012               	return	
 19523  006290                     __end_of_strcmp:
 19524                           	opt stack 0
 19525                           tblptru	equ	0xFF8
 19526                           tblptrh	equ	0xFF7
 19527                           tblptrl	equ	0xFF6
 19528                           tablat	equ	0xFF5
 19529                           prodh	equ	0xFF4
 19530                           prodl	equ	0xFF3
 19531                           intcon	equ	0xFF2
 19532                           intcon3	equ	0xFF0
 19533                           postinc0	equ	0xFEE
 19534                           wreg	equ	0xFE8
 19535                           indf1	equ	0xFE7
 19536                           postdec1	equ	0xFE5
 19537                           fsr1h	equ	0xFE2
 19538                           fsr1l	equ	0xFE1
 19539                           indf2	equ	0xFDF
 19540                           fsr2h	equ	0xFDA
 19541                           fsr2l	equ	0xFD9
 19542                           status	equ	0xFD8
 19543                           
 19544 ;; *************** function _moteApp_delayms *****************
 19545 ;; Defined at:
 19546 ;;		line 168 in file "../Includes/Board/MOTEapp.c"
 19547 ;; Parameters:    Size  Location     Type
 19548 ;;  length          2    0[BANK0 ] unsigned int 
 19549 ;; Auto vars:     Size  Location     Type
 19550 ;;  counter         2    3[BANK0 ] unsigned int 
 19551 ;; Return value:  Size  Location     Type
 19552 ;;		None               void
 19553 ;; Registers used:
 19554 ;;		wreg, status,2, status,0
 19555 ;; Tracked objects:
 19556 ;;		On entry : 0/0
 19557 ;;		On exit  : 0/0
 19558 ;;		Unchanged: 0/0
 19559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19560 ;;      Params:         0       2       0       0       0       0       0       0       0
 19561 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19562 ;;      Temps:          0       1       0       0       0       0       0       0       0
 19563 ;;      Totals:         0       5       0       0       0       0       0       0       0
 19564 ;;Total ram usage:        5 bytes
 19565 ;; Hardware stack levels used:    1
 19566 ;; Hardware stack levels required when called:   11
 19567 ;; This function calls:
 19568 ;;		Nothing
 19569 ;; This function is called by:
 19570 ;;		_main
 19571 ;;		_test_powerup
 19572 ;;		_moduleResync
 19573 ;;		_moteJoiningProcess
 19574 ;;		_moteRunningProcess
 19575 ;;		_moteApp_GoToSleep
 19576 ;;		_moteApp_setSensorsInput
 19577 ;; This function uses a non-reentrant model
 19578 ;;
 19579                           
 19580                           	psect	text54
 19581  0065FE                     __ptext54:
 19582                           	opt stack 0
 19583  0065FE                     _moteApp_delayms:
 19584                           	opt stack 16
 19585                           
 19586                           ;MOTEapp.c: 170: uint16_t counter;
 19587                           ;MOTEapp.c: 171: for(counter = 0; counter < length; counter++)
 19588                           
 19589                           ; BSR set to: 0
 19590                           ;incstack = 0
 19591  0065FE  0E00               	movlw	0
 19592  006600  0100               	movlb	0	; () banked
 19593  006602  6F64               	movwf	(moteApp_delayms@counter+1)& (0+255),b
 19594  006604  0E00               	movlw	0
 19595  006606  6F63               	movwf	moteApp_delayms@counter& (0+255),b
 19596  006608  D00C               	goto	l354
 19597  00660A                     l11938:
 19598                           
 19599                           ; BSR set to: 0
 19600                           ;MOTEapp.c: 172: {
 19601                           ;MOTEapp.c: 173: _delay((unsigned long)((1)*(48000000/4000.0)));
 19602  00660A  0E10               	movlw	16
 19603  00660C  0100               	movlb	0	; () banked
 19604  00660E  6F62               	movwf	??_moteApp_delayms& (0+255),b
 19605  006610  0E94               	movlw	148
 19606  006612                     u14907:
 19607  006612  2EE8               	decfsz	wreg,f,c
 19608  006614  D7FE               	goto	u14907
 19609  006616  2F62               	decfsz	??_moteApp_delayms& (0+255),f,b
 19610  006618  D7FC               	goto	u14907
 19611  00661A  D000               	nop2	
 19612  00661C  0100               	movlb	0	; () banked
 19613  00661E  4B63               	infsnz	moteApp_delayms@counter& (0+255),f,b
 19614  006620  2B64               	incf	(moteApp_delayms@counter+1)& (0+255),f,b
 19615  006622                     l354:
 19616                           
 19617                           ; BSR set to: 0
 19618  006622  0100               	movlb	0	; () banked
 19619  006624  5160               	movf	moteApp_delayms@length& (0+255),w,b
 19620  006626  0100               	movlb	0	; () banked
 19621  006628  5D63               	subwf	moteApp_delayms@counter& (0+255),w,b
 19622  00662A  0100               	movlb	0	; () banked
 19623  00662C  5161               	movf	(moteApp_delayms@length+1)& (0+255),w,b
 19624  00662E  0100               	movlb	0	; () banked
 19625  006630  5964               	subwfb	(moteApp_delayms@counter+1)& (0+255),w,b
 19626  006632  B0D8               	btfsc	status,0,c
 19627  006634  0012               	return	
 19628  006636  D7E9               	goto	l11938
 19629  006638                     __end_of_moteApp_delayms:
 19630                           	opt stack 0
 19631                           tblptru	equ	0xFF8
 19632                           tblptrh	equ	0xFF7
 19633                           tblptrl	equ	0xFF6
 19634                           tablat	equ	0xFF5
 19635                           prodh	equ	0xFF4
 19636                           prodl	equ	0xFF3
 19637                           intcon	equ	0xFF2
 19638                           intcon3	equ	0xFF0
 19639                           postinc0	equ	0xFEE
 19640                           wreg	equ	0xFE8
 19641                           indf1	equ	0xFE7
 19642                           postdec1	equ	0xFE5
 19643                           fsr1h	equ	0xFE2
 19644                           fsr1l	equ	0xFE1
 19645                           indf2	equ	0xFDF
 19646                           fsr2h	equ	0xFDA
 19647                           fsr2l	equ	0xFD9
 19648                           status	equ	0xFD8
 19649                           
 19650 ;; *************** function _DATAEE_WriteByte *****************
 19651 ;; Defined at:
 19652 ;;		line 166 in file "../Includes/MccGenerated/memory.c"
 19653 ;; Parameters:    Size  Location     Type
 19654 ;;  bAdd            1    wreg     unsigned char 
 19655 ;;  bData           1    0[BANK0 ] unsigned char 
 19656 ;; Auto vars:     Size  Location     Type
 19657 ;;  bAdd            1    1[BANK0 ] unsigned char 
 19658 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 19659 ;; Return value:  Size  Location     Type
 19660 ;;		None               void
 19661 ;; Registers used:
 19662 ;;		wreg, status,2
 19663 ;; Tracked objects:
 19664 ;;		On entry : 0/0
 19665 ;;		On exit  : 0/0
 19666 ;;		Unchanged: 0/0
 19667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19668 ;;      Params:         0       1       0       0       0       0       0       0       0
 19669 ;;      Locals:         0       2       0       0       0       0       0       0       0
 19670 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19671 ;;      Totals:         0       3       0       0       0       0       0       0       0
 19672 ;;Total ram usage:        3 bytes
 19673 ;; Hardware stack levels used:    1
 19674 ;; Hardware stack levels required when called:   11
 19675 ;; This function calls:
 19676 ;;		Nothing
 19677 ;; This function is called by:
 19678 ;;		_main
 19679 ;;		_moteJoiningProcess
 19680 ;; This function uses a non-reentrant model
 19681 ;;
 19682                           
 19683                           	psect	text55
 19684  006512                     __ptext55:
 19685                           	opt stack 0
 19686  006512                     _DATAEE_WriteByte:
 19687                           	opt stack 17
 19688                           
 19689                           ; BSR set to: 0
 19690                           ;incstack = 0
 19691                           ;DATAEE_WriteByte@bAdd stored from wreg
 19692  006512  0100               	movlb	0	; () banked
 19693  006514  6F61               	movwf	DATAEE_WriteByte@bAdd& (0+255),b
 19694                           
 19695                           ;memory.c: 168: uint8_t GIEBitValue = INTCONbits.GIE;
 19696  006516  0E00               	movlw	0
 19697  006518  BEF2               	btfsc	intcon,7,c	;volatile
 19698  00651A  0E01               	movlw	1
 19699  00651C  0100               	movlb	0	; () banked
 19700  00651E  6F62               	movwf	DATAEE_WriteByte@GIEBitValue& (0+255),b
 19701                           
 19702                           ; BSR set to: 0
 19703                           ;memory.c: 170: EEADR = (bAdd & 0xFF);
 19704  006520  C061  FFA9         	movff	DATAEE_WriteByte@bAdd,4009	;volatile
 19705                           
 19706                           ; BSR set to: 0
 19707                           ;memory.c: 171: EEDATA = bData;
 19708  006524  C060  FFA8         	movff	DATAEE_WriteByte@bData,4008	;volatile
 19709                           
 19710                           ; BSR set to: 0
 19711                           ;memory.c: 172: EECON1bits.EEPGD = 0;
 19712  006528  9EA6               	bcf	4006,7,c	;volatile
 19713                           
 19714                           ; BSR set to: 0
 19715                           ;memory.c: 173: EECON1bits.CFGS = 0;
 19716  00652A  9CA6               	bcf	4006,6,c	;volatile
 19717                           
 19718                           ; BSR set to: 0
 19719                           ;memory.c: 174: EECON1bits.WREN = 1;
 19720  00652C  84A6               	bsf	4006,2,c	;volatile
 19721                           
 19722                           ; BSR set to: 0
 19723                           ;memory.c: 175: INTCONbits.GIE = 0;
 19724  00652E  9EF2               	bcf	intcon,7,c	;volatile
 19725                           
 19726                           ; BSR set to: 0
 19727                           ;memory.c: 176: EECON2 = 0x55;
 19728  006530  0E55               	movlw	85
 19729  006532  6EA7               	movwf	4007,c	;volatile
 19730                           
 19731                           ; BSR set to: 0
 19732                           ;memory.c: 177: EECON2 = 0xAA;
 19733  006534  0EAA               	movlw	170
 19734  006536  6EA7               	movwf	4007,c	;volatile
 19735                           
 19736                           ; BSR set to: 0
 19737                           ;memory.c: 178: EECON1bits.WR = 1;
 19738  006538  82A6               	bsf	4006,1,c	;volatile
 19739  00653A                     l1448:
 19740  00653A  B2A6               	btfsc	4006,1,c	;volatile
 19741  00653C  D7FE               	goto	l1448
 19742                           
 19743                           ;memory.c: 182: }
 19744                           ;memory.c: 184: EECON1bits.WREN = 0;
 19745  00653E  94A6               	bcf	4006,2,c	;volatile
 19746                           
 19747                           ;memory.c: 185: INTCONbits.GIE = GIEBitValue;
 19748  006540  0100               	movlb	0	; () banked
 19749  006542  B162               	btfsc	DATAEE_WriteByte@GIEBitValue& (0+255),0,b
 19750  006544  D002               	bra	u12165
 19751  006546  9EF2               	bcf	intcon,7,c	;volatile
 19752  006548  D001               	bra	u12166
 19753  00654A                     u12165:
 19754  00654A  8EF2               	bsf	intcon,7,c	;volatile
 19755  00654C                     u12166:
 19756  00654C  0012               	return		;funcret
 19757  00654E                     __end_of_DATAEE_WriteByte:
 19758                           	opt stack 0
 19759                           tblptru	equ	0xFF8
 19760                           tblptrh	equ	0xFF7
 19761                           tblptrl	equ	0xFF6
 19762                           tablat	equ	0xFF5
 19763                           prodh	equ	0xFF4
 19764                           prodl	equ	0xFF3
 19765                           intcon	equ	0xFF2
 19766                           intcon3	equ	0xFF0
 19767                           postinc0	equ	0xFEE
 19768                           wreg	equ	0xFE8
 19769                           indf1	equ	0xFE7
 19770                           postdec1	equ	0xFE5
 19771                           fsr1h	equ	0xFE2
 19772                           fsr1l	equ	0xFE1
 19773                           indf2	equ	0xFDF
 19774                           fsr2h	equ	0xFDA
 19775                           fsr2l	equ	0xFD9
 19776                           status	equ	0xFD8
 19777                           
 19778 ;; *************** function _USBapp_exitCDCState *****************
 19779 ;; Defined at:
 19780 ;;		line 139 in file "../Includes/Board/USBapp.c"
 19781 ;; Parameters:    Size  Location     Type
 19782 ;;  usbState        1    wreg     enum E6759
 19783 ;; Auto vars:     Size  Location     Type
 19784 ;;  usbState        1    0[BANK0 ] enum E6759
 19785 ;; Return value:  Size  Location     Type
 19786 ;;		None               void
 19787 ;; Registers used:
 19788 ;;		wreg
 19789 ;; Tracked objects:
 19790 ;;		On entry : 0/0
 19791 ;;		On exit  : 0/0
 19792 ;;		Unchanged: 0/0
 19793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19794 ;;      Params:         0       0       0       0       0       0       0       0       0
 19795 ;;      Locals:         0       1       0       0       0       0       0       0       0
 19796 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19797 ;;      Totals:         0       1       0       0       0       0       0       0       0
 19798 ;;Total ram usage:        1 bytes
 19799 ;; Hardware stack levels used:    1
 19800 ;; Hardware stack levels required when called:   11
 19801 ;; This function calls:
 19802 ;;		Nothing
 19803 ;; This function is called by:
 19804 ;;		_moteHandler
 19805 ;; This function uses a non-reentrant model
 19806 ;;
 19807                           
 19808                           	psect	text56
 19809  006B1A                     __ptext56:
 19810                           	opt stack 0
 19811  006B1A                     _USBapp_exitCDCState:
 19812                           	opt stack 18
 19813                           
 19814                           ;incstack = 0
 19815                           ;USBapp_exitCDCState@usbState stored from wreg
 19816  006B1A  0100               	movlb	0	; () banked
 19817  006B1C  6F60               	movwf	USBapp_exitCDCState@usbState& (0+255),b
 19818                           
 19819                           ;USBapp.c: 141: exitUSB = usbState;
 19820  006B1E  C060  F0F8         	movff	USBapp_exitCDCState@usbState,_exitUSB
 19821  006B22  0012               	return		;funcret
 19822  006B24                     __end_of_USBapp_exitCDCState:
 19823                           	opt stack 0
 19824                           tblptru	equ	0xFF8
 19825                           tblptrh	equ	0xFF7
 19826                           tblptrl	equ	0xFF6
 19827                           tablat	equ	0xFF5
 19828                           prodh	equ	0xFF4
 19829                           prodl	equ	0xFF3
 19830                           intcon	equ	0xFF2
 19831                           intcon3	equ	0xFF0
 19832                           postinc0	equ	0xFEE
 19833                           wreg	equ	0xFE8
 19834                           indf1	equ	0xFE7
 19835                           postdec1	equ	0xFE5
 19836                           fsr1h	equ	0xFE2
 19837                           fsr1l	equ	0xFE1
 19838                           indf2	equ	0xFDF
 19839                           fsr2h	equ	0xFDA
 19840                           fsr2l	equ	0xFD9
 19841                           status	equ	0xFD8
 19842                           
 19843 ;; *************** function _USBapp_exitCDC *****************
 19844 ;; Defined at:
 19845 ;;		line 134 in file "../Includes/Board/USBapp.c"
 19846 ;; Parameters:    Size  Location     Type
 19847 ;;		None
 19848 ;; Auto vars:     Size  Location     Type
 19849 ;;		None
 19850 ;; Return value:  Size  Location     Type
 19851 ;;                  1    wreg      enum E6823
 19852 ;; Registers used:
 19853 ;;		wreg, status,2
 19854 ;; Tracked objects:
 19855 ;;		On entry : 0/0
 19856 ;;		On exit  : 0/0
 19857 ;;		Unchanged: 0/0
 19858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19859 ;;      Params:         0       0       0       0       0       0       0       0       0
 19860 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19861 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19862 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19863 ;;Total ram usage:        0 bytes
 19864 ;; Hardware stack levels used:    1
 19865 ;; Hardware stack levels required when called:   11
 19866 ;; This function calls:
 19867 ;;		Nothing
 19868 ;; This function is called by:
 19869 ;;		_moteHandler
 19870 ;; This function uses a non-reentrant model
 19871 ;;
 19872                           
 19873                           	psect	text57
 19874  006B52                     __ptext57:
 19875                           	opt stack 0
 19876  006B52                     _USBapp_exitCDC:
 19877                           	opt stack 18
 19878                           
 19879                           ;USBapp.c: 136: return exitUSB;
 19880                           
 19881                           ;incstack = 0
 19882  006B52  0100               	movlb	0	; () banked
 19883  006B54  51F8               	movf	_exitUSB& (0+255),w,b
 19884  006B56  0012               	return	
 19885  006B58                     __end_of_USBapp_exitCDC:
 19886                           	opt stack 0
 19887                           tblptru	equ	0xFF8
 19888                           tblptrh	equ	0xFF7
 19889                           tblptrl	equ	0xFF6
 19890                           tablat	equ	0xFF5
 19891                           prodh	equ	0xFF4
 19892                           prodl	equ	0xFF3
 19893                           intcon	equ	0xFF2
 19894                           intcon3	equ	0xFF0
 19895                           postinc0	equ	0xFEE
 19896                           wreg	equ	0xFE8
 19897                           indf1	equ	0xFE7
 19898                           postdec1	equ	0xFE5
 19899                           fsr1h	equ	0xFE2
 19900                           fsr1l	equ	0xFE1
 19901                           indf2	equ	0xFDF
 19902                           fsr2h	equ	0xFDA
 19903                           fsr2l	equ	0xFD9
 19904                           status	equ	0xFD8
 19905                           
 19906 ;; *************** function _TMRapp_Handler *****************
 19907 ;; Defined at:
 19908 ;;		line 57 in file "../Includes/Drivers/TMRapp.c"
 19909 ;; Parameters:    Size  Location     Type
 19910 ;;		None
 19911 ;; Auto vars:     Size  Location     Type
 19912 ;;		None
 19913 ;; Return value:  Size  Location     Type
 19914 ;;		None               void
 19915 ;; Registers used:
 19916 ;;		wreg, status,2, status,0, cstack
 19917 ;; Tracked objects:
 19918 ;;		On entry : 0/0
 19919 ;;		On exit  : 0/0
 19920 ;;		Unchanged: 0/0
 19921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 19922 ;;      Params:         0       0       0       0       0       0       0       0       0
 19923 ;;      Locals:         0       0       0       0       0       0       0       0       0
 19924 ;;      Temps:          0       0       0       0       0       0       0       0       0
 19925 ;;      Totals:         0       0       0       0       0       0       0       0       0
 19926 ;;Total ram usage:        0 bytes
 19927 ;; Hardware stack levels used:    1
 19928 ;; Hardware stack levels required when called:   12
 19929 ;; This function calls:
 19930 ;;		___almod
 19931 ;;		___lwmod
 19932 ;; This function is called by:
 19933 ;;		_moteHandler
 19934 ;; This function uses a non-reentrant model
 19935 ;;
 19936                           
 19937                           	psect	text58
 19938  0036CA                     __ptext58:
 19939                           	opt stack 0
 19940  0036CA                     _TMRapp_Handler:
 19941                           	opt stack 17
 19942                           
 19943                           ;TMRapp.c: 60: timerMsTickCount++;
 19944                           
 19945                           ; BSR set to: 0
 19946                           ;incstack = 0
 19947  0036CA  0100               	movlb	0	; () banked
 19948  0036CC  4BCB               	infsnz	_timerMsTickCount& (0+255),f,b
 19949  0036CE  2BCC               	incf	(_timerMsTickCount+1)& (0+255),f,b
 19950                           
 19951                           ; BSR set to: 0
 19952                           ;TMRapp.c: 62: if ( (timerMsTickCount % 10) == 0)
 19953  0036D0  C0CB  F060         	movff	_timerMsTickCount,___lwmod@dividend
 19954  0036D4  C0CC  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 19955  0036D8  0E00               	movlw	0
 19956  0036DA  0100               	movlb	0	; () banked
 19957  0036DC  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 19958  0036DE  0E0A               	movlw	10
 19959  0036E0  6F62               	movwf	___lwmod@divisor& (0+255),b
 19960  0036E2  ECD8  F02F         	call	___lwmod	;wreg free
 19961  0036E6  0100               	movlb	0	; () banked
 19962  0036E8  5160               	movf	?___lwmod& (0+255),w,b
 19963  0036EA  0100               	movlb	0	; () banked
 19964  0036EC  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 19965  0036EE  A4D8               	btfss	status,2,c
 19966  0036F0  0012               	return	
 19967                           
 19968                           ; BSR set to: 0
 19969                           ;TMRapp.c: 63: {
 19970                           ;TMRapp.c: 64: appTimer.mSecTenTick = 1;
 19971  0036F2  0100               	movlb	0	; () banked
 19972  0036F4  83D7               	bsf	_appTimer& (0+255),1,b
 19973                           
 19974                           ; BSR set to: 0
 19975                           ;TMRapp.c: 65: if ( (timerMsTickCount % 100) == 0)
 19976  0036F6  C0CB  F060         	movff	_timerMsTickCount,___lwmod@dividend
 19977  0036FA  C0CC  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 19978  0036FE  0E00               	movlw	0
 19979  003700  0100               	movlb	0	; () banked
 19980  003702  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 19981  003704  0E64               	movlw	100
 19982  003706  6F62               	movwf	___lwmod@divisor& (0+255),b
 19983  003708  ECD8  F02F         	call	___lwmod	;wreg free
 19984  00370C  0100               	movlb	0	; () banked
 19985  00370E  5160               	movf	?___lwmod& (0+255),w,b
 19986  003710  0100               	movlb	0	; () banked
 19987  003712  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 19988  003714  A4D8               	btfss	status,2,c
 19989  003716  0012               	return	
 19990                           
 19991                           ; BSR set to: 0
 19992                           ;TMRapp.c: 66: {
 19993                           ;TMRapp.c: 67: appTimer.mSecHundredTick = 1;
 19994  003718  0100               	movlb	0	; () banked
 19995  00371A  85D7               	bsf	_appTimer& (0+255),2,b
 19996                           
 19997                           ; BSR set to: 0
 19998                           ;TMRapp.c: 68: if ( (timerMsTickCount % 1000) == 0)
 19999  00371C  C0CB  F060         	movff	_timerMsTickCount,___lwmod@dividend
 20000  003720  C0CC  F061         	movff	_timerMsTickCount+1,___lwmod@dividend+1
 20001  003724  0E03               	movlw	3
 20002  003726  0100               	movlb	0	; () banked
 20003  003728  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20004  00372A  0EE8               	movlw	232
 20005  00372C  6F62               	movwf	___lwmod@divisor& (0+255),b
 20006  00372E  ECD8  F02F         	call	___lwmod	;wreg free
 20007  003732  0100               	movlb	0	; () banked
 20008  003734  5160               	movf	?___lwmod& (0+255),w,b
 20009  003736  0100               	movlb	0	; () banked
 20010  003738  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20011  00373A  A4D8               	btfss	status,2,c
 20012  00373C  0012               	return	
 20013                           
 20014                           ; BSR set to: 0
 20015                           ;TMRapp.c: 69: {
 20016                           ;TMRapp.c: 70: appTimer.SecTick = 1;
 20017  00373E  0100               	movlb	0	; () banked
 20018  003740  87D7               	bsf	_appTimer& (0+255),3,b
 20019                           
 20020                           ; BSR set to: 0
 20021                           ;TMRapp.c: 71: if ( (timerMsTickCount % 60000) == 0)
 20022  003742  C0CB  F060         	movff	_timerMsTickCount,___almod@dividend
 20023  003746  C0CC  F061         	movff	_timerMsTickCount+1,___almod@dividend+1
 20024  00374A  0100               	movlb	0	; () banked
 20025  00374C  6B62               	clrf	(___almod@dividend+2)& (0+255),b
 20026  00374E  6B63               	clrf	(___almod@dividend+3)& (0+255),b
 20027  003750  0E60               	movlw	96
 20028  003752  0100               	movlb	0	; () banked
 20029  003754  6F64               	movwf	___almod@divisor& (0+255),b
 20030  003756  0EEA               	movlw	234
 20031  003758  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 20032  00375A  0E00               	movlw	0
 20033  00375C  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 20034  00375E  0E00               	movlw	0
 20035  003760  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 20036  003762  ECF2  F021         	call	___almod	;wreg free
 20037  003766  0100               	movlb	0	; () banked
 20038  003768  5160               	movf	?___almod& (0+255),w,b
 20039  00376A  0100               	movlb	0	; () banked
 20040  00376C  1161               	iorwf	(?___almod+1)& (0+255),w,b
 20041  00376E  0100               	movlb	0	; () banked
 20042  003770  1162               	iorwf	(?___almod+2)& (0+255),w,b
 20043  003772  0100               	movlb	0	; () banked
 20044  003774  1163               	iorwf	(?___almod+3)& (0+255),w,b
 20045  003776  A4D8               	btfss	status,2,c
 20046  003778  0012               	return	
 20047                           
 20048                           ; BSR set to: 0
 20049                           ;TMRapp.c: 72: {
 20050                           ;TMRapp.c: 73: timerMinTickCount++;
 20051  00377A  0100               	movlb	0	; () banked
 20052  00377C  4BC9               	infsnz	_timerMinTickCount& (0+255),f,b
 20053  00377E  2BCA               	incf	(_timerMinTickCount+1)& (0+255),f,b
 20054                           
 20055                           ; BSR set to: 0
 20056                           ;TMRapp.c: 74: appTimer.MinTick = 1;
 20057  003780  0100               	movlb	0	; () banked
 20058  003782  89D7               	bsf	_appTimer& (0+255),4,b
 20059                           
 20060                           ; BSR set to: 0
 20061                           ;TMRapp.c: 75: if ( (timerMinTickCount % 60) == 0)
 20062  003784  C0C9  F060         	movff	_timerMinTickCount,___lwmod@dividend
 20063  003788  C0CA  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 20064  00378C  0E00               	movlw	0
 20065  00378E  0100               	movlb	0	; () banked
 20066  003790  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20067  003792  0E3C               	movlw	60
 20068  003794  6F62               	movwf	___lwmod@divisor& (0+255),b
 20069  003796  ECD8  F02F         	call	___lwmod	;wreg free
 20070  00379A  0100               	movlb	0	; () banked
 20071  00379C  5160               	movf	?___lwmod& (0+255),w,b
 20072  00379E  0100               	movlb	0	; () banked
 20073  0037A0  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20074  0037A2  A4D8               	btfss	status,2,c
 20075  0037A4  0012               	return	
 20076                           
 20077                           ; BSR set to: 0
 20078                           ;TMRapp.c: 76: {
 20079                           ;TMRapp.c: 77: appTimer.HourTick = 1;
 20080  0037A6  0100               	movlb	0	; () banked
 20081  0037A8  8BD7               	bsf	_appTimer& (0+255),5,b
 20082                           
 20083                           ; BSR set to: 0
 20084                           ;TMRapp.c: 78: if ( (timerMinTickCount % 720) == 0)
 20085  0037AA  C0C9  F060         	movff	_timerMinTickCount,___lwmod@dividend
 20086  0037AE  C0CA  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 20087  0037B2  0E02               	movlw	2
 20088  0037B4  0100               	movlb	0	; () banked
 20089  0037B6  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20090  0037B8  0ED0               	movlw	208
 20091  0037BA  6F62               	movwf	___lwmod@divisor& (0+255),b
 20092  0037BC  ECD8  F02F         	call	___lwmod	;wreg free
 20093  0037C0  0100               	movlb	0	; () banked
 20094  0037C2  5160               	movf	?___lwmod& (0+255),w,b
 20095  0037C4  0100               	movlb	0	; () banked
 20096  0037C6  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20097  0037C8  A4D8               	btfss	status,2,c
 20098  0037CA  0012               	return	
 20099                           
 20100                           ; BSR set to: 0
 20101                           ;TMRapp.c: 79: {
 20102                           ;TMRapp.c: 80: appTimer.HalfDayTick = 1;
 20103  0037CC  0100               	movlb	0	; () banked
 20104  0037CE  8DD7               	bsf	_appTimer& (0+255),6,b
 20105                           
 20106                           ; BSR set to: 0
 20107                           ;TMRapp.c: 81: if ( (timerMinTickCount % 1440) == 0)
 20108  0037D0  C0C9  F060         	movff	_timerMinTickCount,___lwmod@dividend
 20109  0037D4  C0CA  F061         	movff	_timerMinTickCount+1,___lwmod@dividend+1
 20110  0037D8  0E05               	movlw	5
 20111  0037DA  0100               	movlb	0	; () banked
 20112  0037DC  6F63               	movwf	(___lwmod@divisor+1)& (0+255),b
 20113  0037DE  0EA0               	movlw	160
 20114  0037E0  6F62               	movwf	___lwmod@divisor& (0+255),b
 20115  0037E2  ECD8  F02F         	call	___lwmod	;wreg free
 20116  0037E6  0100               	movlb	0	; () banked
 20117  0037E8  5160               	movf	?___lwmod& (0+255),w,b
 20118  0037EA  0100               	movlb	0	; () banked
 20119  0037EC  1161               	iorwf	(?___lwmod+1)& (0+255),w,b
 20120  0037EE  A4D8               	btfss	status,2,c
 20121  0037F0  0012               	return	
 20122                           
 20123                           ; BSR set to: 0
 20124                           ;TMRapp.c: 82: {
 20125                           ;TMRapp.c: 83: appTimer.DayTick = 1;
 20126  0037F2  0100               	movlb	0	; () banked
 20127  0037F4  8FD7               	bsf	_appTimer& (0+255),7,b
 20128                           
 20129                           ; BSR set to: 0
 20130                           ;TMRapp.c: 85: timerMsTickCount = 0;
 20131  0037F6  0E00               	movlw	0
 20132  0037F8  0100               	movlb	0	; () banked
 20133  0037FA  6FCC               	movwf	(_timerMsTickCount+1)& (0+255),b
 20134  0037FC  0E00               	movlw	0
 20135  0037FE  6FCB               	movwf	_timerMsTickCount& (0+255),b
 20136                           
 20137                           ;TMRapp.c: 86: timerMinTickCount = 0;
 20138  003800  0E00               	movlw	0
 20139  003802  0100               	movlb	0	; () banked
 20140  003804  6FCA               	movwf	(_timerMinTickCount+1)& (0+255),b
 20141  003806  0E00               	movlw	0
 20142  003808  6FC9               	movwf	_timerMinTickCount& (0+255),b
 20143                           
 20144                           ; BSR set to: 0
 20145                           
 20146                           ; BSR set to: 0
 20147                           
 20148                           ; BSR set to: 0
 20149                           
 20150                           ; BSR set to: 0
 20151                           
 20152                           ; BSR set to: 0
 20153                           
 20154                           ; BSR set to: 0
 20155  00380A  0012               	return	
 20156  00380C                     __end_of_TMRapp_Handler:
 20157                           	opt stack 0
 20158                           tblptru	equ	0xFF8
 20159                           tblptrh	equ	0xFF7
 20160                           tblptrl	equ	0xFF6
 20161                           tablat	equ	0xFF5
 20162                           prodh	equ	0xFF4
 20163                           prodl	equ	0xFF3
 20164                           intcon	equ	0xFF2
 20165                           intcon3	equ	0xFF0
 20166                           postinc0	equ	0xFEE
 20167                           wreg	equ	0xFE8
 20168                           indf1	equ	0xFE7
 20169                           postdec1	equ	0xFE5
 20170                           fsr1h	equ	0xFE2
 20171                           fsr1l	equ	0xFE1
 20172                           indf2	equ	0xFDF
 20173                           fsr2h	equ	0xFDA
 20174                           fsr2l	equ	0xFD9
 20175                           status	equ	0xFD8
 20176                           
 20177 ;; *************** function ___lwmod *****************
 20178 ;; Defined at:
 20179 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 20180 ;; Parameters:    Size  Location     Type
 20181 ;;  dividend        2    0[BANK0 ] unsigned int 
 20182 ;;  divisor         2    2[BANK0 ] unsigned int 
 20183 ;; Auto vars:     Size  Location     Type
 20184 ;;  counter         1    4[BANK0 ] unsigned char 
 20185 ;; Return value:  Size  Location     Type
 20186 ;;                  2    0[BANK0 ] unsigned int 
 20187 ;; Registers used:
 20188 ;;		wreg, status,2, status,0
 20189 ;; Tracked objects:
 20190 ;;		On entry : 0/0
 20191 ;;		On exit  : 0/0
 20192 ;;		Unchanged: 0/0
 20193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20194 ;;      Params:         0       4       0       0       0       0       0       0       0
 20195 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20196 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20197 ;;      Totals:         0       5       0       0       0       0       0       0       0
 20198 ;;Total ram usage:        5 bytes
 20199 ;; Hardware stack levels used:    1
 20200 ;; Hardware stack levels required when called:   11
 20201 ;; This function calls:
 20202 ;;		Nothing
 20203 ;; This function is called by:
 20204 ;;		_moteApp_add16bToDataBuffer
 20205 ;;		_TMRapp_Handler
 20206 ;;		_oled_putUint16
 20207 ;; This function uses a non-reentrant model
 20208 ;;
 20209                           
 20210                           	psect	text59
 20211  005FB0                     __ptext59:
 20212                           	opt stack 0
 20213  005FB0                     ___lwmod:
 20214                           	opt stack 16
 20215                           
 20216                           ; BSR set to: 0
 20217                           ;incstack = 0
 20218  005FB0  0100               	movlb	0	; () banked
 20219  005FB2  5162               	movf	___lwmod@divisor& (0+255),w,b
 20220  005FB4  0100               	movlb	0	; () banked
 20221  005FB6  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 20222  005FB8  B4D8               	btfsc	status,2,c
 20223  005FBA  D026               	goto	l2520
 20224                           
 20225                           ; BSR set to: 0
 20226  005FBC  0E01               	movlw	1
 20227  005FBE  0100               	movlb	0	; () banked
 20228  005FC0  6F64               	movwf	___lwmod@counter& (0+255),b
 20229  005FC2  D006               	goto	l12814
 20230  005FC4                     l12812:
 20231                           
 20232                           ; BSR set to: 0
 20233  005FC4  0100               	movlb	0	; () banked
 20234  005FC6  90D8               	bcf	status,0,c
 20235  005FC8  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 20236  005FCA  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 20237  005FCC  0100               	movlb	0	; () banked
 20238  005FCE  2B64               	incf	___lwmod@counter& (0+255),f,b
 20239  005FD0                     l12814:
 20240                           
 20241                           ; BSR set to: 0
 20242  005FD0  0100               	movlb	0	; () banked
 20243  005FD2  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 20244  005FD4  D7F7               	goto	l12812
 20245  005FD6                     l12816:
 20246                           
 20247                           ; BSR set to: 0
 20248  005FD6  0100               	movlb	0	; () banked
 20249  005FD8  5162               	movf	___lwmod@divisor& (0+255),w,b
 20250  005FDA  0100               	movlb	0	; () banked
 20251  005FDC  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 20252  005FDE  0100               	movlb	0	; () banked
 20253  005FE0  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 20254  005FE2  0100               	movlb	0	; () banked
 20255  005FE4  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 20256  005FE6  A0D8               	btfss	status,0,c
 20257  005FE8  D008               	goto	l12820
 20258                           
 20259                           ; BSR set to: 0
 20260  005FEA  0100               	movlb	0	; () banked
 20261  005FEC  5162               	movf	___lwmod@divisor& (0+255),w,b
 20262  005FEE  0100               	movlb	0	; () banked
 20263  005FF0  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 20264  005FF2  0100               	movlb	0	; () banked
 20265  005FF4  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 20266  005FF6  0100               	movlb	0	; () banked
 20267  005FF8  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 20268  005FFA                     l12820:
 20269                           
 20270                           ; BSR set to: 0
 20271  005FFA  0100               	movlb	0	; () banked
 20272  005FFC  90D8               	bcf	status,0,c
 20273  005FFE  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 20274  006000  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 20275                           
 20276                           ; BSR set to: 0
 20277  006002  0100               	movlb	0	; () banked
 20278  006004  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 20279  006006  D7E7               	goto	l12816
 20280  006008                     l2520:
 20281                           
 20282                           ; BSR set to: 0
 20283  006008  C060  F060         	movff	___lwmod@dividend,?___lwmod
 20284  00600C  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 20285                           
 20286                           ; BSR set to: 0
 20287  006010  0012               	return		;funcret
 20288  006012                     __end_of___lwmod:
 20289                           	opt stack 0
 20290                           tblptru	equ	0xFF8
 20291                           tblptrh	equ	0xFF7
 20292                           tblptrl	equ	0xFF6
 20293                           tablat	equ	0xFF5
 20294                           prodh	equ	0xFF4
 20295                           prodl	equ	0xFF3
 20296                           intcon	equ	0xFF2
 20297                           intcon3	equ	0xFF0
 20298                           postinc0	equ	0xFEE
 20299                           wreg	equ	0xFE8
 20300                           indf1	equ	0xFE7
 20301                           postdec1	equ	0xFE5
 20302                           fsr1h	equ	0xFE2
 20303                           fsr1l	equ	0xFE1
 20304                           indf2	equ	0xFDF
 20305                           fsr2h	equ	0xFDA
 20306                           fsr2l	equ	0xFD9
 20307                           status	equ	0xFD8
 20308                           
 20309 ;; *************** function ___almod *****************
 20310 ;; Defined at:
 20311 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\almod.c"
 20312 ;; Parameters:    Size  Location     Type
 20313 ;;  dividend        4    0[BANK0 ] long 
 20314 ;;  divisor         4    4[BANK0 ] long 
 20315 ;; Auto vars:     Size  Location     Type
 20316 ;;  sign            1    9[BANK0 ] unsigned char 
 20317 ;;  counter         1    8[BANK0 ] unsigned char 
 20318 ;; Return value:  Size  Location     Type
 20319 ;;                  4    0[BANK0 ] long 
 20320 ;; Registers used:
 20321 ;;		wreg, status,2, status,0
 20322 ;; Tracked objects:
 20323 ;;		On entry : 0/0
 20324 ;;		On exit  : 0/0
 20325 ;;		Unchanged: 0/0
 20326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20327 ;;      Params:         0       8       0       0       0       0       0       0       0
 20328 ;;      Locals:         0       2       0       0       0       0       0       0       0
 20329 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20330 ;;      Totals:         0      10       0       0       0       0       0       0       0
 20331 ;;Total ram usage:       10 bytes
 20332 ;; Hardware stack levels used:    1
 20333 ;; Hardware stack levels required when called:   11
 20334 ;; This function calls:
 20335 ;;		Nothing
 20336 ;; This function is called by:
 20337 ;;		_TMRapp_Handler
 20338 ;; This function uses a non-reentrant model
 20339 ;;
 20340                           
 20341                           	psect	text60
 20342  0043E4                     __ptext60:
 20343                           	opt stack 0
 20344  0043E4                     ___almod:
 20345                           	opt stack 17
 20346                           
 20347                           ; BSR set to: 0
 20348                           ;incstack = 0
 20349  0043E4  0E00               	movlw	0
 20350  0043E6  0100               	movlb	0	; () banked
 20351  0043E8  6F69               	movwf	___almod@sign& (0+255),b
 20352                           
 20353                           ; BSR set to: 0
 20354  0043EA  0100               	movlb	0	; () banked
 20355  0043EC  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 20356  0043EE  D00C               	goto	l13500
 20357                           
 20358                           ; BSR set to: 0
 20359  0043F0  0100               	movlb	0	; () banked
 20360  0043F2  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 20361  0043F4  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 20362  0043F6  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 20363  0043F8  6D60               	negf	___almod@dividend& (0+255),b
 20364  0043FA  0E00               	movlw	0
 20365  0043FC  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 20366  0043FE  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 20367  004400  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 20368                           
 20369                           ; BSR set to: 0
 20370  004402  0E01               	movlw	1
 20371  004404  0100               	movlb	0	; () banked
 20372  004406  6F69               	movwf	___almod@sign& (0+255),b
 20373  004408                     l13500:
 20374                           
 20375                           ; BSR set to: 0
 20376  004408  0100               	movlb	0	; () banked
 20377  00440A  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 20378  00440C  D009               	goto	l13504
 20379                           
 20380                           ; BSR set to: 0
 20381  00440E  0100               	movlb	0	; () banked
 20382  004410  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 20383  004412  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 20384  004414  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 20385  004416  6D64               	negf	___almod@divisor& (0+255),b
 20386  004418  0E00               	movlw	0
 20387  00441A  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 20388  00441C  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 20389  00441E  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 20390  004420                     l13504:
 20391                           
 20392                           ; BSR set to: 0
 20393  004420  0100               	movlb	0	; () banked
 20394  004422  5164               	movf	___almod@divisor& (0+255),w,b
 20395  004424  0100               	movlb	0	; () banked
 20396  004426  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 20397  004428  0100               	movlb	0	; () banked
 20398  00442A  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 20399  00442C  0100               	movlb	0	; () banked
 20400  00442E  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 20401  004430  B4D8               	btfsc	status,2,c
 20402  004432  D03A               	goto	l13520
 20403                           
 20404                           ; BSR set to: 0
 20405  004434  0E01               	movlw	1
 20406  004436  0100               	movlb	0	; () banked
 20407  004438  6F68               	movwf	___almod@counter& (0+255),b
 20408  00443A  D008               	goto	l13510
 20409  00443C                     l13508:
 20410                           
 20411                           ; BSR set to: 0
 20412  00443C  0100               	movlb	0	; () banked
 20413  00443E  90D8               	bcf	status,0,c
 20414  004440  3764               	rlcf	___almod@divisor& (0+255),f,b
 20415  004442  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 20416  004444  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 20417  004446  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 20418  004448  0100               	movlb	0	; () banked
 20419  00444A  2B68               	incf	___almod@counter& (0+255),f,b
 20420  00444C                     l13510:
 20421                           
 20422                           ; BSR set to: 0
 20423  00444C  0100               	movlb	0	; () banked
 20424  00444E  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 20425  004450  D7F5               	goto	l13508
 20426  004452                     l13512:
 20427                           
 20428                           ; BSR set to: 0
 20429  004452  0100               	movlb	0	; () banked
 20430  004454  5164               	movf	___almod@divisor& (0+255),w,b
 20431  004456  0100               	movlb	0	; () banked
 20432  004458  5D60               	subwf	___almod@dividend& (0+255),w,b
 20433  00445A  0100               	movlb	0	; () banked
 20434  00445C  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 20435  00445E  0100               	movlb	0	; () banked
 20436  004460  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 20437  004462  0100               	movlb	0	; () banked
 20438  004464  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 20439  004466  0100               	movlb	0	; () banked
 20440  004468  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 20441  00446A  0100               	movlb	0	; () banked
 20442  00446C  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 20443  00446E  0100               	movlb	0	; () banked
 20444  004470  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 20445  004472  A0D8               	btfss	status,0,c
 20446  004474  D010               	goto	l13516
 20447                           
 20448                           ; BSR set to: 0
 20449  004476  0100               	movlb	0	; () banked
 20450  004478  5164               	movf	___almod@divisor& (0+255),w,b
 20451  00447A  0100               	movlb	0	; () banked
 20452  00447C  5F60               	subwf	___almod@dividend& (0+255),f,b
 20453  00447E  0100               	movlb	0	; () banked
 20454  004480  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 20455  004482  0100               	movlb	0	; () banked
 20456  004484  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 20457  004486  0100               	movlb	0	; () banked
 20458  004488  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 20459  00448A  0100               	movlb	0	; () banked
 20460  00448C  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 20461  00448E  0100               	movlb	0	; () banked
 20462  004490  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 20463  004492  0100               	movlb	0	; () banked
 20464  004494  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 20465  004496                     l13516:
 20466                           
 20467                           ; BSR set to: 0
 20468  004496  0100               	movlb	0	; () banked
 20469  004498  90D8               	bcf	status,0,c
 20470  00449A  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 20471  00449C  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 20472  00449E  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 20473  0044A0  3364               	rrcf	___almod@divisor& (0+255),f,b
 20474                           
 20475                           ; BSR set to: 0
 20476  0044A2  0100               	movlb	0	; () banked
 20477  0044A4  2F68               	decfsz	___almod@counter& (0+255),f,b
 20478  0044A6  D7D5               	goto	l13512
 20479  0044A8                     l13520:
 20480                           
 20481                           ; BSR set to: 0
 20482  0044A8  0100               	movlb	0	; () banked
 20483  0044AA  5169               	movf	___almod@sign& (0+255),w,b
 20484  0044AC  0100               	movlb	0	; () banked
 20485  0044AE  B4D8               	btfsc	status,2,c
 20486  0044B0  D009               	goto	l13524
 20487                           
 20488                           ; BSR set to: 0
 20489  0044B2  0100               	movlb	0	; () banked
 20490  0044B4  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 20491  0044B6  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 20492  0044B8  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 20493  0044BA  6D60               	negf	___almod@dividend& (0+255),b
 20494  0044BC  0E00               	movlw	0
 20495  0044BE  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 20496  0044C0  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 20497  0044C2  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 20498  0044C4                     l13524:
 20499                           
 20500                           ; BSR set to: 0
 20501  0044C4  C060  F060         	movff	___almod@dividend,?___almod
 20502  0044C8  C061  F061         	movff	___almod@dividend+1,?___almod+1
 20503  0044CC  C062  F062         	movff	___almod@dividend+2,?___almod+2
 20504  0044D0  C063  F063         	movff	___almod@dividend+3,?___almod+3
 20505  0044D4  0012               	return	
 20506  0044D6                     __end_of___almod:
 20507                           	opt stack 0
 20508                           tblptru	equ	0xFF8
 20509                           tblptrh	equ	0xFF7
 20510                           tblptrl	equ	0xFF6
 20511                           tablat	equ	0xFF5
 20512                           prodh	equ	0xFF4
 20513                           prodl	equ	0xFF3
 20514                           intcon	equ	0xFF2
 20515                           intcon3	equ	0xFF0
 20516                           postinc0	equ	0xFEE
 20517                           wreg	equ	0xFE8
 20518                           indf1	equ	0xFE7
 20519                           postdec1	equ	0xFE5
 20520                           fsr1h	equ	0xFE2
 20521                           fsr1l	equ	0xFE1
 20522                           indf2	equ	0xFDF
 20523                           fsr2h	equ	0xFDA
 20524                           fsr2l	equ	0xFD9
 20525                           status	equ	0xFD8
 20526                           
 20527 ;; *************** function _TMRapp_ClearBitFlags *****************
 20528 ;; Defined at:
 20529 ;;		line 51 in file "../Includes/Drivers/TMRapp.c"
 20530 ;; Parameters:    Size  Location     Type
 20531 ;;		None
 20532 ;; Auto vars:     Size  Location     Type
 20533 ;;		None
 20534 ;; Return value:  Size  Location     Type
 20535 ;;		None               void
 20536 ;; Registers used:
 20537 ;;		wreg, status,2
 20538 ;; Tracked objects:
 20539 ;;		On entry : 0/0
 20540 ;;		On exit  : 0/0
 20541 ;;		Unchanged: 0/0
 20542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20543 ;;      Params:         0       0       0       0       0       0       0       0       0
 20544 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20545 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20546 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20547 ;;Total ram usage:        0 bytes
 20548 ;; Hardware stack levels used:    1
 20549 ;; Hardware stack levels required when called:   11
 20550 ;; This function calls:
 20551 ;;		Nothing
 20552 ;; This function is called by:
 20553 ;;		_moteHandler
 20554 ;; This function uses a non-reentrant model
 20555 ;;
 20556                           
 20557                           	psect	text61
 20558  006B42                     __ptext61:
 20559                           	opt stack 0
 20560  006B42                     _TMRapp_ClearBitFlags:
 20561                           	opt stack 18
 20562                           
 20563                           ;TMRapp.c: 54: appTimer.TicksBitMap = 0x00;
 20564                           
 20565                           ; BSR set to: 0
 20566                           ;incstack = 0
 20567  006B42  0E00               	movlw	0
 20568  006B44  0100               	movlb	0	; () banked
 20569  006B46  6FD7               	movwf	_appTimer& (0+255),b
 20570                           
 20571                           ; BSR set to: 0
 20572  006B48  0012               	return		;funcret
 20573  006B4A                     __end_of_TMRapp_ClearBitFlags:
 20574                           	opt stack 0
 20575                           tblptru	equ	0xFF8
 20576                           tblptrh	equ	0xFF7
 20577                           tblptrl	equ	0xFF6
 20578                           tablat	equ	0xFF5
 20579                           prodh	equ	0xFF4
 20580                           prodl	equ	0xFF3
 20581                           intcon	equ	0xFF2
 20582                           intcon3	equ	0xFF0
 20583                           postinc0	equ	0xFEE
 20584                           wreg	equ	0xFE8
 20585                           indf1	equ	0xFE7
 20586                           postdec1	equ	0xFE5
 20587                           fsr1h	equ	0xFE2
 20588                           fsr1l	equ	0xFE1
 20589                           indf2	equ	0xFDF
 20590                           fsr2h	equ	0xFDA
 20591                           fsr2l	equ	0xFD9
 20592                           status	equ	0xFD8
 20593                           
 20594 ;; *************** function _MOTEapp_TimerBasedTask *****************
 20595 ;; Defined at:
 20596 ;;		line 1089 in file "../Includes/Board/MOTEapp.c"
 20597 ;; Parameters:    Size  Location     Type
 20598 ;;  timerTask       1    wreg     struct .
 20599 ;; Auto vars:     Size  Location     Type
 20600 ;;  timerTask       1    0[BANK0 ] struct .
 20601 ;; Return value:  Size  Location     Type
 20602 ;;		None               void
 20603 ;; Registers used:
 20604 ;;		wreg, status,2, status,0
 20605 ;; Tracked objects:
 20606 ;;		On entry : 0/0
 20607 ;;		On exit  : 0/0
 20608 ;;		Unchanged: 0/0
 20609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20610 ;;      Params:         0       0       0       0       0       0       0       0       0
 20611 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20612 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20613 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20614 ;;Total ram usage:        1 bytes
 20615 ;; Hardware stack levels used:    1
 20616 ;; Hardware stack levels required when called:   11
 20617 ;; This function calls:
 20618 ;;		Nothing
 20619 ;; This function is called by:
 20620 ;;		_moteHandler
 20621 ;; This function uses a non-reentrant model
 20622 ;;
 20623                           
 20624                           	psect	text62
 20625  0068DC                     __ptext62:
 20626                           	opt stack 0
 20627  0068DC                     _MOTEapp_TimerBasedTask:
 20628                           	opt stack 18
 20629                           
 20630                           ; BSR set to: 0
 20631                           ;incstack = 0
 20632                           ;MOTEapp_TimerBasedTask@timerTask stored from wreg
 20633  0068DC  0100               	movlb	0	; () banked
 20634  0068DE  6F60               	movwf	MOTEapp_TimerBasedTask@timerTask& (0+255),b
 20635                           
 20636                           ;MOTEapp.c: 1094: if (timerTask.mSecTenTick)
 20637  0068E0  0100               	movlb	0	; () banked
 20638  0068E2  A360               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),1,b
 20639  0068E4  D003               	goto	l13690
 20640                           
 20641                           ; BSR set to: 0
 20642                           ;MOTEapp.c: 1095: {
 20643                           ;MOTEapp.c: 1097: m10SecTicker++;
 20644  0068E6  0101               	movlb	1	; () banked
 20645  0068E8  4B58               	infsnz	_m10SecTicker& (0+255),f,b
 20646  0068EA  2B59               	incf	(_m10SecTicker+1)& (0+255),f,b
 20647  0068EC                     l13690:
 20648                           
 20649                           ;MOTEapp.c: 1103: }
 20650                           ;MOTEapp.c: 1104: if (timerTask.SecTick)
 20651  0068EC  0100               	movlb	0	; () banked
 20652  0068EE  A760               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),3,b
 20653  0068F0  D002               	goto	l13694
 20654                           
 20655                           ; BSR set to: 0
 20656                           ;MOTEapp.c: 1105: {
 20657                           ;MOTEapp.c: 1107: secTicker++;
 20658  0068F2  0100               	movlb	0	; () banked
 20659  0068F4  2BEF               	incf	_secTicker& (0+255),f,b
 20660  0068F6                     l13694:
 20661                           
 20662                           ; BSR set to: 0
 20663                           ;MOTEapp.c: 1108: }
 20664                           ;MOTEapp.c: 1109: if (timerTask.MinTick)
 20665  0068F6  0100               	movlb	0	; () banked
 20666  0068F8  A960               	btfss	MOTEapp_TimerBasedTask@timerTask& (0+255),4,b
 20667  0068FA  0012               	return	
 20668                           
 20669                           ; BSR set to: 0
 20670                           ;MOTEapp.c: 1110: {
 20671                           ;MOTEapp.c: 1112: minTicker++;
 20672  0068FC  0100               	movlb	0	; () banked
 20673  0068FE  2BE6               	incf	_minTicker& (0+255),f,b
 20674                           
 20675                           ; BSR set to: 0
 20676                           
 20677                           ; BSR set to: 0
 20678                           
 20679                           ;MOTEapp.c: 1119: {
 20680                           
 20681                           ; BSR set to: 0
 20682                           
 20683                           ; BSR set to: 0
 20684                           
 20685                           ;MOTEapp.c: 1115: {
 20686                           
 20687                           ; BSR set to: 0
 20688                           
 20689                           ; BSR set to: 0
 20690  006900  0012               	return	
 20691  006902                     __end_of_MOTEapp_TimerBasedTask:
 20692                           	opt stack 0
 20693                           tblptru	equ	0xFF8
 20694                           tblptrh	equ	0xFF7
 20695                           tblptrl	equ	0xFF6
 20696                           tablat	equ	0xFF5
 20697                           prodh	equ	0xFF4
 20698                           prodl	equ	0xFF3
 20699                           intcon	equ	0xFF2
 20700                           intcon3	equ	0xFF0
 20701                           postinc0	equ	0xFEE
 20702                           wreg	equ	0xFE8
 20703                           indf1	equ	0xFE7
 20704                           postdec1	equ	0xFE5
 20705                           fsr1h	equ	0xFE2
 20706                           fsr1l	equ	0xFE1
 20707                           indf2	equ	0xFDF
 20708                           fsr2h	equ	0xFDA
 20709                           fsr2l	equ	0xFD9
 20710                           status	equ	0xFD8
 20711                           
 20712 ;; *************** function _moteApp_clearCommand *****************
 20713 ;; Defined at:
 20714 ;;		line 1344 in file "../Includes/Board/MOTEapp.c"
 20715 ;; Parameters:    Size  Location     Type
 20716 ;;		None
 20717 ;; Auto vars:     Size  Location     Type
 20718 ;;		None
 20719 ;; Return value:  Size  Location     Type
 20720 ;;		None               void
 20721 ;; Registers used:
 20722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20723 ;; Tracked objects:
 20724 ;;		On entry : 0/0
 20725 ;;		On exit  : 0/0
 20726 ;;		Unchanged: 0/0
 20727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20728 ;;      Params:         0       0       0       0       0       0       0       0       0
 20729 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20730 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20731 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20732 ;;Total ram usage:        0 bytes
 20733 ;; Hardware stack levels used:    1
 20734 ;; Hardware stack levels required when called:   14
 20735 ;; This function calls:
 20736 ;;		_sendCommand
 20737 ;; This function is called by:
 20738 ;;		_main
 20739 ;; This function uses a non-reentrant model
 20740 ;;
 20741                           
 20742                           	psect	text63
 20743  006A96                     __ptext63:
 20744                           	opt stack 0
 20745  006A96                     _moteApp_clearCommand:
 20746                           	opt stack 16
 20747                           
 20748                           ;MOTEapp.c: 1346: sendCommand("\r\n");
 20749                           
 20750                           ; BSR set to: 0
 20751                           ;incstack = 0
 20752  006A96  0EC9               	movlw	low (STR_183+23)
 20753  006A98  0100               	movlb	0	; () banked
 20754  006A9A  6F61               	movwf	sendCommand@string& (0+255),b
 20755  006A9C  0E79               	movlw	high (STR_183+23)
 20756  006A9E  0100               	movlb	0	; () banked
 20757  006AA0  6F62               	movwf	(sendCommand@string+1)& (0+255),b
 20758  006AA2  ECD6  F033         	call	_sendCommand	;wreg free
 20759  006AA6  0012               	return		;funcret
 20760  006AA8                     __end_of_moteApp_clearCommand:
 20761                           	opt stack 0
 20762                           tblptru	equ	0xFF8
 20763                           tblptrh	equ	0xFF7
 20764                           tblptrl	equ	0xFF6
 20765                           tablat	equ	0xFF5
 20766                           prodh	equ	0xFF4
 20767                           prodl	equ	0xFF3
 20768                           intcon	equ	0xFF2
 20769                           intcon3	equ	0xFF0
 20770                           postinc0	equ	0xFEE
 20771                           wreg	equ	0xFE8
 20772                           indf1	equ	0xFE7
 20773                           postdec1	equ	0xFE5
 20774                           fsr1h	equ	0xFE2
 20775                           fsr1l	equ	0xFE1
 20776                           indf2	equ	0xFDF
 20777                           fsr2h	equ	0xFDA
 20778                           fsr2l	equ	0xFD9
 20779                           status	equ	0xFD8
 20780                           
 20781 ;; *************** function _sendCommand *****************
 20782 ;; Defined at:
 20783 ;;		line 1176 in file "../Includes/Board/MOTEapp.c"
 20784 ;; Parameters:    Size  Location     Type
 20785 ;;  string          2    1[BANK0 ] PTR const unsigned char 
 20786 ;;		 -> STR_192(22), STR_191(22), STR_190(27), STR_189(27), 
 20787 ;;		 -> STR_184(26), STR_183(26), STR_182(26), STR_181(26), 
 20788 ;;		 -> STR_180(3), STR_179(9), STR_178(15), STR_177(13), 
 20789 ;;		 -> STR_176(13), STR_175(17), STR_174(13), STR_173(17), 
 20790 ;;		 -> STR_172(13), STR_171(17), STR_170(13), STR_169(17), 
 20791 ;;		 -> STR_168(13), STR_167(17), STR_166(13), STR_165(17), 
 20792 ;;		 -> STR_164(13), STR_163(17), STR_162(16), STR_70(11), 
 20793 ;;		 -> STR_68(11), STR_66(14), STR_58(14), STR_52(10), 
 20794 ;;		 -> STR_48(13), STR_43(14), STR_41(13), STR_39(10), 
 20795 ;;		 -> STR_30(10), STR_22(20), STR_21(2), 
 20796 ;; Auto vars:     Size  Location     Type
 20797 ;;		None
 20798 ;; Return value:  Size  Location     Type
 20799 ;;		None               void
 20800 ;; Registers used:
 20801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20802 ;; Tracked objects:
 20803 ;;		On entry : 0/0
 20804 ;;		On exit  : 0/0
 20805 ;;		Unchanged: 0/0
 20806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20807 ;;      Params:         0       2       0       0       0       0       0       0       0
 20808 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20809 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20810 ;;      Totals:         0       2       0       0       0       0       0       0       0
 20811 ;;Total ram usage:        2 bytes
 20812 ;; Hardware stack levels used:    1
 20813 ;; Hardware stack levels required when called:   13
 20814 ;; This function calls:
 20815 ;;		_EUSART_Write
 20816 ;;		_EndLine
 20817 ;; This function is called by:
 20818 ;;		_moduleResync
 20819 ;;		_moduleSleep
 20820 ;;		_moteJoiningProcess
 20821 ;;		_MOTEapp_SetDataRateSetting
 20822 ;;		_moteApp_clearCommand
 20823 ;;		_moteApp_toggleLeds
 20824 ;;		_moteApp_setSensorsInput
 20825 ;;		_moteApp_getTempValue
 20826 ;;		_moteApp_getLightValue
 20827 ;; This function uses a non-reentrant model
 20828 ;;
 20829                           
 20830                           	psect	text64
 20831  0067AC                     __ptext64:
 20832                           	opt stack 0
 20833  0067AC                     _sendCommand:
 20834                           	opt stack 14
 20835                           
 20836                           ;MOTEapp.c: 1179: while (*string)
 20837                           
 20838                           ;incstack = 0
 20839  0067AC  D00B               	goto	l11950
 20840  0067AE                     l11946:
 20841                           
 20842                           ;MOTEapp.c: 1180: {
 20843                           ;MOTEapp.c: 1181: EUSART_Write(*string++);
 20844  0067AE  C061  FFF6         	movff	sendCommand@string,tblptrl
 20845  0067B2  C062  FFF7         	movff	sendCommand@string+1,tblptrh
 20846  0067B6                     	if	0	;tblptru may be non-zero
 20847  0067B6                     	endif
 20848  0067B6                     	if	0	;tblptru may be non-zero
 20849  0067B6                     	endif
 20850  0067B6  0008               	tblrd		*
 20851  0067B8  50F5               	movf	tablat,w,c
 20852  0067BA  EC08  F032         	call	_EUSART_Write
 20853  0067BE  0100               	movlb	0	; () banked
 20854  0067C0  4B61               	infsnz	sendCommand@string& (0+255),f,b
 20855  0067C2  2B62               	incf	(sendCommand@string+1)& (0+255),f,b
 20856  0067C4                     l11950:
 20857  0067C4  C061  FFF6         	movff	sendCommand@string,tblptrl
 20858  0067C8  C062  FFF7         	movff	sendCommand@string+1,tblptrh
 20859  0067CC                     	if	0	;tblptru may be non-zero
 20860  0067CC                     	endif
 20861  0067CC                     	if	0	;tblptru may be non-zero
 20862  0067CC                     	endif
 20863  0067CC  0008               	tblrd		*
 20864  0067CE  50F5               	movf	tablat,w,c
 20865  0067D0  0900               	iorlw	0
 20866  0067D2  A4D8               	btfss	status,2,c
 20867  0067D4  D7EC               	goto	l11946
 20868                           
 20869                           ;MOTEapp.c: 1182: }
 20870                           ;MOTEapp.c: 1183: EndLine();
 20871  0067D6  EC7B  F035         	call	_EndLine	;wreg free
 20872  0067DA  0012               	return		;funcret
 20873  0067DC                     __end_of_sendCommand:
 20874                           	opt stack 0
 20875                           tblptru	equ	0xFF8
 20876                           tblptrh	equ	0xFF7
 20877                           tblptrl	equ	0xFF6
 20878                           tablat	equ	0xFF5
 20879                           prodh	equ	0xFF4
 20880                           prodl	equ	0xFF3
 20881                           intcon	equ	0xFF2
 20882                           intcon3	equ	0xFF0
 20883                           postinc0	equ	0xFEE
 20884                           wreg	equ	0xFE8
 20885                           indf1	equ	0xFE7
 20886                           postdec1	equ	0xFE5
 20887                           fsr1h	equ	0xFE2
 20888                           fsr1l	equ	0xFE1
 20889                           indf2	equ	0xFDF
 20890                           fsr2h	equ	0xFDA
 20891                           fsr2l	equ	0xFD9
 20892                           status	equ	0xFD8
 20893                           
 20894 ;; *************** function _EndLine *****************
 20895 ;; Defined at:
 20896 ;;		line 1170 in file "../Includes/Board/MOTEapp.c"
 20897 ;; Parameters:    Size  Location     Type
 20898 ;;		None
 20899 ;; Auto vars:     Size  Location     Type
 20900 ;;		None
 20901 ;; Return value:  Size  Location     Type
 20902 ;;		None               void
 20903 ;; Registers used:
 20904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20905 ;; Tracked objects:
 20906 ;;		On entry : 0/0
 20907 ;;		On exit  : 0/0
 20908 ;;		Unchanged: 0/0
 20909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20910 ;;      Params:         0       0       0       0       0       0       0       0       0
 20911 ;;      Locals:         0       0       0       0       0       0       0       0       0
 20912 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20913 ;;      Totals:         0       0       0       0       0       0       0       0       0
 20914 ;;Total ram usage:        0 bytes
 20915 ;; Hardware stack levels used:    1
 20916 ;; Hardware stack levels required when called:   12
 20917 ;; This function calls:
 20918 ;;		_EUSART_Write
 20919 ;; This function is called by:
 20920 ;;		_sendCommand
 20921 ;;		_sendDataCommand
 20922 ;; This function uses a non-reentrant model
 20923 ;;
 20924                           
 20925                           	psect	text65
 20926  006AF6                     __ptext65:
 20927                           	opt stack 0
 20928  006AF6                     _EndLine:
 20929                           	opt stack 14
 20930                           
 20931                           ;MOTEapp.c: 1172: EUSART_Write(0x0D);
 20932                           
 20933                           ;incstack = 0
 20934  006AF6  0E0D               	movlw	13
 20935  006AF8  EC08  F032         	call	_EUSART_Write
 20936                           
 20937                           ;MOTEapp.c: 1173: EUSART_Write(0x0A);
 20938  006AFC  0E0A               	movlw	10
 20939  006AFE  EC08  F032         	call	_EUSART_Write
 20940  006B02  0012               	return		;funcret
 20941  006B04                     __end_of_EndLine:
 20942                           	opt stack 0
 20943                           tblptru	equ	0xFF8
 20944                           tblptrh	equ	0xFF7
 20945                           tblptrl	equ	0xFF6
 20946                           tablat	equ	0xFF5
 20947                           prodh	equ	0xFF4
 20948                           prodl	equ	0xFF3
 20949                           intcon	equ	0xFF2
 20950                           intcon3	equ	0xFF0
 20951                           postinc0	equ	0xFEE
 20952                           wreg	equ	0xFE8
 20953                           indf1	equ	0xFE7
 20954                           postdec1	equ	0xFE5
 20955                           fsr1h	equ	0xFE2
 20956                           fsr1l	equ	0xFE1
 20957                           indf2	equ	0xFDF
 20958                           fsr2h	equ	0xFDA
 20959                           fsr2l	equ	0xFD9
 20960                           status	equ	0xFD8
 20961                           
 20962 ;; *************** function _USBapp_handlerState *****************
 20963 ;; Defined at:
 20964 ;;		line 78 in file "../Includes/Board/USBapp.c"
 20965 ;; Parameters:    Size  Location     Type
 20966 ;;  state           1    wreg     enum E6754
 20967 ;; Auto vars:     Size  Location     Type
 20968 ;;  state           1    0[BANK0 ] enum E6754
 20969 ;; Return value:  Size  Location     Type
 20970 ;;		None               void
 20971 ;; Registers used:
 20972 ;;		wreg
 20973 ;; Tracked objects:
 20974 ;;		On entry : 0/0
 20975 ;;		On exit  : 0/0
 20976 ;;		Unchanged: 0/0
 20977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 20978 ;;      Params:         0       0       0       0       0       0       0       0       0
 20979 ;;      Locals:         0       1       0       0       0       0       0       0       0
 20980 ;;      Temps:          0       0       0       0       0       0       0       0       0
 20981 ;;      Totals:         0       1       0       0       0       0       0       0       0
 20982 ;;Total ram usage:        1 bytes
 20983 ;; Hardware stack levels used:    1
 20984 ;; Hardware stack levels required when called:   11
 20985 ;; This function calls:
 20986 ;;		Nothing
 20987 ;; This function is called by:
 20988 ;;		_main
 20989 ;; This function uses a non-reentrant model
 20990 ;;
 20991                           
 20992                           	psect	text66
 20993  006B24                     __ptext66:
 20994                           	opt stack 0
 20995  006B24                     _USBapp_handlerState:
 20996                           	opt stack 19
 20997                           
 20998                           ;incstack = 0
 20999                           ;USBapp_handlerState@state stored from wreg
 21000  006B24  0100               	movlb	0	; () banked
 21001  006B26  6F60               	movwf	USBapp_handlerState@state& (0+255),b
 21002                           
 21003                           ;USBapp.c: 80: usbState = state;
 21004  006B28  C060  F0F1         	movff	USBapp_handlerState@state,_usbState
 21005  006B2C  0012               	return		;funcret
 21006  006B2E                     __end_of_USBapp_handlerState:
 21007                           	opt stack 0
 21008                           tblptru	equ	0xFF8
 21009                           tblptrh	equ	0xFF7
 21010                           tblptrl	equ	0xFF6
 21011                           tablat	equ	0xFF5
 21012                           prodh	equ	0xFF4
 21013                           prodl	equ	0xFF3
 21014                           intcon	equ	0xFF2
 21015                           intcon3	equ	0xFF0
 21016                           postinc0	equ	0xFEE
 21017                           wreg	equ	0xFE8
 21018                           indf1	equ	0xFE7
 21019                           postdec1	equ	0xFE5
 21020                           fsr1h	equ	0xFE2
 21021                           fsr1l	equ	0xFE1
 21022                           indf2	equ	0xFDF
 21023                           fsr2h	equ	0xFDA
 21024                           fsr2l	equ	0xFD9
 21025                           status	equ	0xFD8
 21026                           
 21027 ;; *************** function _USBapp_Handler *****************
 21028 ;; Defined at:
 21029 ;;		line 86 in file "../Includes/Board/USBapp.c"
 21030 ;; Parameters:    Size  Location     Type
 21031 ;;		None
 21032 ;; Auto vars:     Size  Location     Type
 21033 ;;  buttonPress     1   22[BANK0 ] enum E6788
 21034 ;; Return value:  Size  Location     Type
 21035 ;;		None               void
 21036 ;; Registers used:
 21037 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21038 ;; Tracked objects:
 21039 ;;		On entry : 0/0
 21040 ;;		On exit  : 0/0
 21041 ;;		Unchanged: 0/0
 21042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21043 ;;      Params:         0       0       0       0       0       0       0       0       0
 21044 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21045 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21046 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21047 ;;Total ram usage:        1 bytes
 21048 ;; Hardware stack levels used:    1
 21049 ;; Hardware stack levels required when called:   16
 21050 ;; This function calls:
 21051 ;;		_USBapp_DeviceCdcEmulatorHandler
 21052 ;;		_oled_clear
 21053 ;;		_oled_putString
 21054 ;;		_service_pushbutton
 21055 ;; This function is called by:
 21056 ;;		_main
 21057 ;; This function uses a non-reentrant model
 21058 ;;
 21059                           
 21060                           	psect	text67
 21061  004D8C                     __ptext67:
 21062                           	opt stack 0
 21063  004D8C                     _USBapp_Handler:
 21064                           	opt stack 14
 21065                           
 21066                           ;USBapp.c: 90: {
 21067                           ;USBapp.c: 91: switch(usbState)
 21068                           
 21069                           ;incstack = 0
 21070                           ;USBapp.c: 89: do
 21071  004D8C  D04A               	goto	l14758
 21072  004D8E  D7FF               	goto	l853
 21073  004D90                     l14730:
 21074                           
 21075                           ;USBapp.c: 98: oled_clear();
 21076  004D90  ECD1  F034         	call	_oled_clear	;wreg free
 21077                           
 21078                           ;USBapp.c: 99: oled_putString("CDC Mode",1,0);
 21079  004D94  0E11               	movlw	low STR_193
 21080  004D96  0100               	movlb	0	; () banked
 21081  004D98  6F71               	movwf	oled_putString@string& (0+255),b
 21082  004D9A  0E7F               	movlw	high STR_193
 21083  004D9C  0100               	movlb	0	; () banked
 21084  004D9E  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 21085  004DA0  0E01               	movlw	1
 21086  004DA2  0100               	movlb	0	; () banked
 21087  004DA4  6F73               	movwf	oled_putString@station_dot& (0+255),b
 21088  004DA6  0E00               	movlw	0
 21089  004DA8  0100               	movlb	0	; () banked
 21090  004DAA  6F74               	movwf	oled_putString@start_page& (0+255),b
 21091  004DAC  EC6F  F02F         	call	_oled_putString	;wreg free
 21092                           
 21093                           ;USBapp.c: 100: oled_putString("Command",2,1);
 21094  004DB0  0E62               	movlw	low STR_194
 21095  004DB2  0100               	movlb	0	; () banked
 21096  004DB4  6F71               	movwf	oled_putString@string& (0+255),b
 21097  004DB6  0E7F               	movlw	high STR_194
 21098  004DB8  0100               	movlb	0	; () banked
 21099  004DBA  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 21100  004DBC  0E02               	movlw	2
 21101  004DBE  0100               	movlb	0	; () banked
 21102  004DC0  6F73               	movwf	oled_putString@station_dot& (0+255),b
 21103  004DC2  0E01               	movlw	1
 21104  004DC4  0100               	movlb	0	; () banked
 21105  004DC6  6F74               	movwf	oled_putString@start_page& (0+255),b
 21106  004DC8  EC6F  F02F         	call	_oled_putString	;wreg free
 21107                           
 21108                           ;USBapp.c: 101: oled_putString("USB Handler",0,2);
 21109  004DCC  0E35               	movlw	low STR_195
 21110  004DCE  0100               	movlb	0	; () banked
 21111  004DD0  6F71               	movwf	oled_putString@string& (0+255),b
 21112  004DD2  0E7E               	movlw	high STR_195
 21113  004DD4  0100               	movlb	0	; () banked
 21114  004DD6  6F72               	movwf	(oled_putString@string+1)& (0+255),b
 21115  004DD8  0E00               	movlw	0
 21116  004DDA  0100               	movlb	0	; () banked
 21117  004DDC  6F73               	movwf	oled_putString@station_dot& (0+255),b
 21118  004DDE  0E02               	movlw	2
 21119  004DE0  0100               	movlb	0	; () banked
 21120  004DE2  6F74               	movwf	oled_putString@start_page& (0+255),b
 21121  004DE4  EC6F  F02F         	call	_oled_putString	;wreg free
 21122                           
 21123                           ;USBapp.c: 103: usbState = USB_RUNNING;
 21124  004DE8  0E01               	movlw	1
 21125  004DEA  D006               	goto	L18
 21126  004DEC                     l14740:
 21127                           
 21128                           ; BSR set to: 0
 21129                           ;USBapp.c: 107: if( USBDeviceState < CONFIGURED_STATE )
 21130  004DEC  0E20               	movlw	32
 21131  004DEE  0100               	movlb	0	; () banked
 21132  004DF0  61D2               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 21133  004DF2  D001               	goto	l14744
 21134  004DF4  D022               	goto	l859
 21135  004DF6                     l14744:
 21136                           
 21137                           ; BSR set to: 0
 21138                           ;USBapp.c: 111: }
 21139                           ;USBapp.c: 112: usbState = USB_CDC;
 21140  004DF6  0E02               	movlw	2
 21141  004DF8                     L18:
 21142  004DF8  0100               	movlb	0	; () banked
 21143  004DFA  6FF1               	movwf	_usbState& (0+255),b
 21144                           
 21145                           ;USBapp.c: 113: break;
 21146  004DFC  D01E               	goto	l859
 21147  004DFE                     l14746:
 21148                           
 21149                           ; BSR set to: 0
 21150                           ;USBapp.c: 116: USBapp_DeviceCdcEmulatorHandler();
 21151  004DFE  EC56  F023         	call	_USBapp_DeviceCdcEmulatorHandler	;wreg free
 21152                           
 21153                           ;USBapp.c: 120: buttonStates_t buttonPress = Released;
 21154  004E02  0E03               	movlw	3
 21155  004E04  0100               	movlb	0	; () banked
 21156  004E06  6F76               	movwf	USBapp_Handler@buttonPress& (0+255),b
 21157                           
 21158                           ; BSR set to: 0
 21159                           ;USBapp.c: 121: buttonPress = service_pushbutton();
 21160  004E08  ECD8  F02D         	call	_service_pushbutton	;wreg free
 21161  004E0C  0100               	movlb	0	; () banked
 21162  004E0E  6F76               	movwf	USBapp_Handler@buttonPress& (0+255),b
 21163                           
 21164                           ; BSR set to: 0
 21165                           ;USBapp.c: 122: if (buttonPress != Released )
 21166  004E10  0E03               	movlw	3
 21167  004E12  0100               	movlb	0	; () banked
 21168  004E14  1976               	xorwf	USBapp_Handler@buttonPress& (0+255),w,b
 21169  004E16  B4D8               	btfsc	status,2,c
 21170  004E18  D010               	goto	l859
 21171                           
 21172                           ; BSR set to: 0
 21173                           ;USBapp.c: 123: {
 21174                           ;USBapp.c: 124: exitUSB = USB_BAT;
 21175  004E1A  0E02               	movlw	2
 21176  004E1C  0100               	movlb	0	; () banked
 21177  004E1E  6FF8               	movwf	_exitUSB& (0+255),b
 21178                           
 21179                           ; BSR set to: 0
 21180                           ;USBapp.c: 127: }
 21181                           
 21182                           ; BSR set to: 0
 21183                           ;USBapp.c: 125: }
 21184                           ;USBapp.c: 126: break;
 21185  004E20  D00C               	goto	l859
 21186  004E22                     l14758:
 21187  004E22  0100               	movlb	0	; () banked
 21188  004E24  51F1               	movf	_usbState& (0+255),w,b
 21189                           
 21190                           ; Switch size 1, requested type "space"
 21191                           ; Number of cases is 3, Range of values is 0 to 2
 21192                           ; switch strategies available:
 21193                           ; Name         Instructions Cycles
 21194                           ; simple_byte           10     6 (average)
 21195                           ;	Chosen strategy is simple_byte
 21196  004E26  0A00               	xorlw	0	; case 0
 21197  004E28  B4D8               	btfsc	status,2,c
 21198  004E2A  D7B2               	goto	l14730
 21199  004E2C  0A01               	xorlw	1	; case 1
 21200  004E2E  B4D8               	btfsc	status,2,c
 21201  004E30  D7DD               	goto	l14740
 21202  004E32  0A03               	xorlw	3	; case 2
 21203  004E34  B4D8               	btfsc	status,2,c
 21204  004E36  D7E3               	goto	l14746
 21205  004E38  D7AA               	goto	l853
 21206  004E3A                     l859:
 21207                           
 21208                           ;USBapp.c: 128: }while((PORTAbits.RA0) && (exitUSB == NO_USB));
 21209  004E3A  A080               	btfss	3968,0,c	;volatile
 21210  004E3C  D004               	goto	l864
 21211  004E3E  0100               	movlb	0	; () banked
 21212  004E40  51F8               	movf	_exitUSB& (0+255),w,b
 21213  004E42  B4D8               	btfsc	status,2,c
 21214  004E44  D7EE               	goto	l14758
 21215  004E46                     l864:
 21216                           
 21217                           ;USBapp.c: 129: __nop();
 21218  004E46  F000               	nop	
 21219                           
 21220                           ;USBapp.c: 130: if (exitUSB != USB_BAT)
 21221  004E48  0E02               	movlw	2
 21222  004E4A  0100               	movlb	0	; () banked
 21223  004E4C  19F8               	xorwf	_exitUSB& (0+255),w,b
 21224  004E4E  B4D8               	btfsc	status,2,c
 21225  004E50  0012               	return	
 21226                           
 21227                           ; BSR set to: 0
 21228                           ;USBapp.c: 131: exitUSB = NO_USB;
 21229  004E52  0E00               	movlw	0
 21230  004E54  0100               	movlb	0	; () banked
 21231  004E56  6FF8               	movwf	_exitUSB& (0+255),b
 21232  004E58  0012               	return	
 21233  004E5A                     __end_of_USBapp_Handler:
 21234                           	opt stack 0
 21235                           tblptru	equ	0xFF8
 21236                           tblptrh	equ	0xFF7
 21237                           tblptrl	equ	0xFF6
 21238                           tablat	equ	0xFF5
 21239                           prodh	equ	0xFF4
 21240                           prodl	equ	0xFF3
 21241                           intcon	equ	0xFF2
 21242                           intcon3	equ	0xFF0
 21243                           postinc0	equ	0xFEE
 21244                           wreg	equ	0xFE8
 21245                           indf1	equ	0xFE7
 21246                           postdec1	equ	0xFE5
 21247                           fsr1h	equ	0xFE2
 21248                           fsr1l	equ	0xFE1
 21249                           indf2	equ	0xFDF
 21250                           fsr2h	equ	0xFDA
 21251                           fsr2l	equ	0xFD9
 21252                           status	equ	0xFD8
 21253                           
 21254 ;; *************** function _service_pushbutton *****************
 21255 ;; Defined at:
 21256 ;;		line 49 in file "../Includes/Drivers/buttons.c"
 21257 ;; Parameters:    Size  Location     Type
 21258 ;;		None
 21259 ;; Auto vars:     Size  Location     Type
 21260 ;;  bs              1    0[BANK0 ] enum E6669
 21261 ;; Return value:  Size  Location     Type
 21262 ;;                  1    wreg      enum E6757
 21263 ;; Registers used:
 21264 ;;		wreg, status,2, status,0
 21265 ;; Tracked objects:
 21266 ;;		On entry : 0/0
 21267 ;;		On exit  : 0/0
 21268 ;;		Unchanged: 0/0
 21269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21270 ;;      Params:         0       0       0       0       0       0       0       0       0
 21271 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21272 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21273 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21274 ;;Total ram usage:        1 bytes
 21275 ;; Hardware stack levels used:    1
 21276 ;; Hardware stack levels required when called:   11
 21277 ;; This function calls:
 21278 ;;		Nothing
 21279 ;; This function is called by:
 21280 ;;		_moteHandler
 21281 ;;		_USBapp_Handler
 21282 ;; This function uses a non-reentrant model
 21283 ;;
 21284                           
 21285                           	psect	text68
 21286  005BB0                     __ptext68:
 21287                           	opt stack 0
 21288  005BB0                     _service_pushbutton:
 21289                           	opt stack 18
 21290                           
 21291                           ;buttons.c: 51: static uint32_t PB_Timer = 0;
 21292                           ;buttons.c: 52: static uint8_t Release_Timer = 0;
 21293                           ;buttons.c: 53: buttonStates_t bs = NoButton;
 21294                           
 21295                           ; BSR set to: 0
 21296                           ;incstack = 0
 21297  005BB0  0E00               	movlw	0
 21298  005BB2  0100               	movlb	0	; () banked
 21299  005BB4  6F60               	movwf	service_pushbutton@bs& (0+255),b
 21300                           
 21301                           ; BSR set to: 0
 21302                           ;buttons.c: 55: if ((PORTBbits.RB1 == 0) || (PORTBbits.RB0 == 0) )
 21303  005BB6  B281               	btfsc	3969,1,c	;volatile
 21304                           
 21305                           ; BSR set to: 0
 21306  005BB8  A081               	btfss	3969,0,c	;volatile
 21307  005BBA  D001               	goto	l13710
 21308  005BBC  D01D               	goto	l13722
 21309  005BBE                     l13710:
 21310                           
 21311                           ; BSR set to: 0
 21312                           ;buttons.c: 56: {
 21313                           ;buttons.c: 57: ++PB_Timer;
 21314  005BBE  0E01               	movlw	1
 21315  005BC0  0101               	movlb	1	; () banked
 21316  005BC2  274E               	addwf	service_pushbutton@PB_Timer& (0+255),f,b
 21317  005BC4  0E00               	movlw	0
 21318  005BC6  234F               	addwfc	(service_pushbutton@PB_Timer+1)& (0+255),f,b
 21319  005BC8  2350               	addwfc	(service_pushbutton@PB_Timer+2)& (0+255),f,b
 21320  005BCA  2351               	addwfc	(service_pushbutton@PB_Timer+3)& (0+255),f,b
 21321                           
 21322                           ;buttons.c: 61: if (PB_Timer == 55)
 21323  005BCC  0E37               	movlw	55
 21324  005BCE  0101               	movlb	1	; () banked
 21325  005BD0  194E               	xorwf	service_pushbutton@PB_Timer& (0+255),w,b
 21326  005BD2  0101               	movlb	1	; () banked
 21327  005BD4  114F               	iorwf	(service_pushbutton@PB_Timer+1)& (0+255),w,b
 21328  005BD6  0101               	movlb	1	; () banked
 21329  005BD8  1150               	iorwf	(service_pushbutton@PB_Timer+2)& (0+255),w,b
 21330  005BDA  0101               	movlb	1	; () banked
 21331  005BDC  1151               	iorwf	(service_pushbutton@PB_Timer+3)& (0+255),w,b
 21332  005BDE  A4D8               	btfss	status,2,c
 21333  005BE0  D009               	goto	l13720
 21334                           
 21335                           ; BSR set to: 1
 21336                           ;buttons.c: 62: {
 21337                           ;buttons.c: 63: Release_Timer = 0;
 21338  005BE2  0E00               	movlw	0
 21339  005BE4  0100               	movlb	0	; () banked
 21340  005BE6  6FF2               	movwf	service_pushbutton@Release_Timer& (0+255),b
 21341                           
 21342                           ; BSR set to: 0
 21343                           ;buttons.c: 65: if (PORTBbits.RB1 == 0)
 21344  005BE8  B281               	btfsc	3969,1,c	;volatile
 21345  005BEA  D002               	goto	l13718
 21346                           
 21347                           ; BSR set to: 0
 21348                           ;buttons.c: 66: {
 21349                           ;buttons.c: 67: bs = ShortPress1;
 21350  005BEC  0E01               	movlw	1
 21351  005BEE  D019               	goto	L21
 21352  005BF0                     l13718:
 21353                           
 21354                           ; BSR set to: 0
 21355                           ;buttons.c: 69: else
 21356                           ;buttons.c: 70: {
 21357                           ;buttons.c: 71: bs = ShortPress2;
 21358  005BF0  0E02               	movlw	2
 21359  005BF2  D017               	goto	L21
 21360  005BF4                     l13720:
 21361                           
 21362                           ;buttons.c: 74: else
 21363                           ;buttons.c: 75: {
 21364                           ;buttons.c: 76: bs = NoButton;
 21365  005BF4  0E00               	movlw	0
 21366  005BF6  D015               	goto	L21
 21367  005BF8                     l13722:
 21368                           
 21369                           ; BSR set to: 0
 21370                           ;buttons.c: 79: else
 21371                           ;buttons.c: 80: {
 21372                           ;buttons.c: 81: if (Release_Timer == 20)
 21373  005BF8  0E14               	movlw	20
 21374  005BFA  0100               	movlb	0	; () banked
 21375  005BFC  19F2               	xorwf	service_pushbutton@Release_Timer& (0+255),w,b
 21376  005BFE  A4D8               	btfss	status,2,c
 21377  005C00  D00D               	goto	l13726
 21378                           
 21379                           ; BSR set to: 0
 21380                           ;buttons.c: 82: {
 21381                           ;buttons.c: 83: PB_Timer = 0;
 21382  005C02  0E00               	movlw	0
 21383  005C04  0101               	movlb	1	; () banked
 21384  005C06  6F4E               	movwf	service_pushbutton@PB_Timer& (0+255),b
 21385  005C08  0E00               	movlw	0
 21386  005C0A  6F4F               	movwf	(service_pushbutton@PB_Timer+1)& (0+255),b
 21387  005C0C  0E00               	movlw	0
 21388  005C0E  6F50               	movwf	(service_pushbutton@PB_Timer+2)& (0+255),b
 21389  005C10  0E00               	movlw	0
 21390  005C12  6F51               	movwf	(service_pushbutton@PB_Timer+3)& (0+255),b
 21391                           
 21392                           ;buttons.c: 84: Release_Timer = 0;
 21393  005C14  0E00               	movlw	0
 21394  005C16  0100               	movlb	0	; () banked
 21395  005C18  6FF2               	movwf	service_pushbutton@Release_Timer& (0+255),b
 21396                           
 21397                           ;buttons.c: 85: }
 21398  005C1A  D002               	goto	l13728
 21399  005C1C                     l13726:
 21400                           
 21401                           ; BSR set to: 0
 21402                           ;buttons.c: 86: else
 21403                           ;buttons.c: 87: {
 21404                           ;buttons.c: 88: Release_Timer++;
 21405  005C1C  0100               	movlb	0	; () banked
 21406  005C1E  2BF2               	incf	service_pushbutton@Release_Timer& (0+255),f,b
 21407  005C20                     l13728:
 21408                           
 21409                           ; BSR set to: 0
 21410                           ;buttons.c: 89: }
 21411                           ;buttons.c: 90: bs = Released;
 21412  005C20  0E03               	movlw	3
 21413  005C22                     L21:
 21414  005C22  0100               	movlb	0	; () banked
 21415  005C24  6F60               	movwf	service_pushbutton@bs& (0+255),b
 21416                           
 21417                           ; BSR set to: 0
 21418                           ;buttons.c: 91: }
 21419                           ;buttons.c: 93: return bs;
 21420                           
 21421                           ; BSR set to: 0
 21422  005C26  0100               	movlb	0	; () banked
 21423  005C28  5160               	movf	service_pushbutton@bs& (0+255),w,b
 21424  005C2A  0012               	return	
 21425  005C2C                     __end_of_service_pushbutton:
 21426                           	opt stack 0
 21427                           tblptru	equ	0xFF8
 21428                           tblptrh	equ	0xFF7
 21429                           tblptrl	equ	0xFF6
 21430                           tablat	equ	0xFF5
 21431                           prodh	equ	0xFF4
 21432                           prodl	equ	0xFF3
 21433                           intcon	equ	0xFF2
 21434                           intcon3	equ	0xFF0
 21435                           postinc0	equ	0xFEE
 21436                           wreg	equ	0xFE8
 21437                           indf1	equ	0xFE7
 21438                           postdec1	equ	0xFE5
 21439                           fsr1h	equ	0xFE2
 21440                           fsr1l	equ	0xFE1
 21441                           indf2	equ	0xFDF
 21442                           fsr2h	equ	0xFDA
 21443                           fsr2l	equ	0xFD9
 21444                           status	equ	0xFD8
 21445                           
 21446 ;; *************** function _oled_putString *****************
 21447 ;; Defined at:
 21448 ;;		line 331 in file "../Includes/Drivers/SSD1306oLED.c"
 21449 ;; Parameters:    Size  Location     Type
 21450 ;;  string          2   17[BANK0 ] PTR const unsigned char 
 21451 ;;		 -> oled_putUint16@numData(6), oled_putint8@numData(6), oled_putUint8@numData(6), STR_195(12), 
 21452 ;;		 -> STR_194(8), STR_193(9), storedLight(5), STR_188(5), 
 21453 ;;		 -> STR_187(8), STR_186(8), STR_185(9), STR_161(16), 
 21454 ;;		 -> STR_160(17), STR_159(17), STR_158(4), STR_157(4), 
 21455 ;;		 -> STR_156(4), STR_155(4), STR_154(4), STR_153(4), 
 21456 ;;		 -> STR_152(4), STR_151(16), STR_150(17), STR_149(4), 
 21457 ;;		 -> STR_148(4), STR_147(4), STR_146(4), STR_145(4), 
 21458 ;;		 -> STR_144(4), STR_143(4), STR_142(4), STR_141(4), 
 21459 ;;		 -> STR_140(4), STR_139(4), STR_138(4), STR_137(4), 
 21460 ;;		 -> STR_136(16), STR_135(12), STR_134(17), STR_133(16), 
 21461 ;;		 -> STR_132(16), STR_131(16), STR_130(15), STR_129(15), 
 21462 ;;		 -> STR_128(16), STR_127(4), STR_126(3), STR_125(3), 
 21463 ;;		 -> STR_124(3), STR_123(3), STR_122(2), STR_121(5), 
 21464 ;;		 -> STR_120(7), STR_119(17), STR_118(17), STR_117(2), 
 21465 ;;		 -> STR_116(7), STR_115(7), STR_114(16), STR_113(16), 
 21466 ;;		 -> STR_112(15), STR_111(15), STR_110(17), STR_109(16), 
 21467 ;;		 -> STR_108(17), STR_107(17), STR_106(7), STR_105(10), 
 21468 ;;		 -> STR_104(17), STR_103(16), STR_102(16), STR_101(16), 
 21469 ;;		 -> STR_100(16), STR_99(17), STR_98(17), STR_97(16), 
 21470 ;;		 -> STR_95(19), STR_93(17), STR_91(17), STR_90(17), 
 21471 ;;		 -> responseData(32), responsePortNum(3), STR_87(13), STR_86(12), 
 21472 ;;		 -> STR_85(12), STR_82(19), STR_81(17), STR_80(16), 
 21473 ;;		 -> STR_79(17), STR_78(17), STR_77(16), STR_76(17), 
 21474 ;;		 -> STR_75(17), STR_73(13), STR_72(12), STR_71(17), 
 21475 ;;		 -> STR_65(7), STR_64(10), STR_62(11), STR_61(11), 
 21476 ;;		 -> STR_56(9), STR_55(11), STR_51(11), STR_50(10), 
 21477 ;;		 -> STR_47(9), STR_46(11), STR_42(17), STR_40(17), 
 21478 ;;		 -> STR_38(17), STR_37(17), STR_36(17), STR_34(17), 
 21479 ;;		 -> STR_33(17), STR_32(17), moduleResonseBuffer(64), STR_29(17), 
 21480 ;;		 -> STR_28(17), STR_27(17), STR_26(17), STR_25(9), 
 21481 ;;		 -> STR_24(10), STR_23(5), STR_20(9), STR_19(8), 
 21482 ;;		 -> STR_18(8), STR_17(9), STR_16(10), STR_15(11), 
 21483 ;;		 -> STR_14(13), STR_13(13), STR_12(13), STR_11(12), 
 21484 ;;		 -> STR_10(13), STR_9(9), STR_8(12), STR_7(16), 
 21485 ;;		 -> STR_6(2), STR_5(2), STR_4(9), STR_3(15), 
 21486 ;;		 -> STR_2(15), STR_1(15), 
 21487 ;;  station_dot     1   19[BANK0 ] unsigned char 
 21488 ;;  start_page      1   20[BANK0 ] unsigned char 
 21489 ;; Auto vars:     Size  Location     Type
 21490 ;;  index           1   21[BANK0 ] unsigned char 
 21491 ;; Return value:  Size  Location     Type
 21492 ;;		None               void
 21493 ;; Registers used:
 21494 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21495 ;; Tracked objects:
 21496 ;;		On entry : 0/0
 21497 ;;		On exit  : 0/0
 21498 ;;		Unchanged: 0/0
 21499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21500 ;;      Params:         0       4       0       0       0       0       0       0       0
 21501 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21502 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21503 ;;      Totals:         0       5       0       0       0       0       0       0       0
 21504 ;;Total ram usage:        5 bytes
 21505 ;; Hardware stack levels used:    1
 21506 ;; Hardware stack levels required when called:   14
 21507 ;; This function calls:
 21508 ;;		_oled_putChar
 21509 ;; This function is called by:
 21510 ;;		_main
 21511 ;;		_test_oled
 21512 ;;		_test_switch
 21513 ;;		_test_comms
 21514 ;;		_test_leds
 21515 ;;		_moteHandler
 21516 ;;		_moteJoiningProcess
 21517 ;;		_moteRunningProcess
 21518 ;;		_moteApp_testSensors
 21519 ;;		_USBapp_Handler
 21520 ;;		_oled_putUint8
 21521 ;;		_oled_putint8
 21522 ;;		_test_adc
 21523 ;;		_test_rf
 21524 ;;		_oled_putUint16
 21525 ;; This function uses a non-reentrant model
 21526 ;;
 21527                           
 21528                           	psect	text69
 21529  005EDE                     __ptext69:
 21530                           	opt stack 0
 21531  005EDE                     _oled_putString:
 21532                           	opt stack 14
 21533                           
 21534                           ;SSD1306oLED.c: 333: uint8_t index;
 21535                           ;SSD1306oLED.c: 334: for(index = station_dot; index < 16; index++)
 21536                           
 21537                           ; BSR set to: 0
 21538                           ;incstack = 0
 21539  005EDE  C073  F075         	movff	oled_putString@station_dot,oled_putString@index
 21540  005EE2                     l12070:
 21541  005EE2  0E0F               	movlw	15
 21542  005EE4  0100               	movlb	0	; () banked
 21543  005EE6  6575               	cpfsgt	oled_putString@index& (0+255),b
 21544  005EE8  D001               	goto	l12074
 21545  005EEA  0012               	return	
 21546  005EEC                     l12074:
 21547                           
 21548                           ; BSR set to: 0
 21549                           ;SSD1306oLED.c: 335: {
 21550                           ;SSD1306oLED.c: 336: if (*string != 0)
 21551  005EEC  C071  FFF6         	movff	oled_putString@string,tblptrl
 21552  005EF0  C072  FFF7         	movff	oled_putString@string+1,tblptrh
 21553  005EF4  6AF8               	clrf	tblptru,c
 21554  005EF6  0E07               	movlw	(high __ramtop+-1)
 21555  005EF8  64F7               	cpfsgt	tblptrh,c
 21556  005EFA  D003               	bra	u10867
 21557  005EFC  0008               	tblrd		*
 21558  005EFE  50F5               	movf	tablat,w,c
 21559  005F00  D005               	bra	u10860
 21560  005F02                     u10867:
 21561  005F02  CFF6 FFE9          	movff	tblptrl,fsr0l
 21562  005F06  CFF7 FFEA          	movff	tblptrh,fsr0h
 21563  005F0A  50EF               	movf	indf0,w,c
 21564  005F0C                     u10860:
 21565  005F0C  0900               	iorlw	0
 21566  005F0E  B4D8               	btfsc	status,2,c
 21567  005F10  0012               	return	
 21568                           
 21569                           ;SSD1306oLED.c: 337: {
 21570                           ;SSD1306oLED.c: 338: oled_putChar(*string, index, start_page);
 21571  005F12  C075  F062         	movff	oled_putString@index,oled_putChar@station_dot
 21572  005F16  C074  F063         	movff	oled_putString@start_page,oled_putChar@start_page
 21573  005F1A  C071  FFF6         	movff	oled_putString@string,tblptrl
 21574  005F1E  C072  FFF7         	movff	oled_putString@string+1,tblptrh
 21575  005F22  6AF8               	clrf	tblptru,c
 21576  005F24  0E07               	movlw	(high __ramtop+-1)
 21577  005F26  64F7               	cpfsgt	tblptrh,c
 21578  005F28  D003               	bra	u10887
 21579  005F2A  0008               	tblrd		*
 21580  005F2C  50F5               	movf	tablat,w,c
 21581  005F2E  D005               	bra	u10880
 21582  005F30                     u10887:
 21583  005F30  CFF6 FFE9          	movff	tblptrl,fsr0l
 21584  005F34  CFF7 FFEA          	movff	tblptrh,fsr0h
 21585  005F38  50EF               	movf	indf0,w,c
 21586  005F3A                     u10880:
 21587  005F3A  EC6E  F02A         	call	_oled_putChar
 21588                           
 21589                           ;SSD1306oLED.c: 339: *string++;
 21590  005F3E  0100               	movlb	0	; () banked
 21591  005F40  4B71               	infsnz	oled_putString@string& (0+255),f,b
 21592  005F42  2B72               	incf	(oled_putString@string+1)& (0+255),f,b
 21593                           
 21594                           ; BSR set to: 0
 21595                           
 21596                           ; BSR set to: 0
 21597                           
 21598                           ; BSR set to: 0
 21599                           ;SSD1306oLED.c: 341: else
 21600                           ;SSD1306oLED.c: 342: {
 21601                           ;SSD1306oLED.c: 343: break;
 21602                           
 21603                           ;SSD1306oLED.c: 340: }
 21604  005F44  0100               	movlb	0	; () banked
 21605  005F46  2B75               	incf	oled_putString@index& (0+255),f,b
 21606  005F48  D7CC               	goto	l12070
 21607  005F4A                     __end_of_oled_putString:
 21608                           	opt stack 0
 21609                           tblptru	equ	0xFF8
 21610                           tblptrh	equ	0xFF7
 21611                           tblptrl	equ	0xFF6
 21612                           tablat	equ	0xFF5
 21613                           prodh	equ	0xFF4
 21614                           prodl	equ	0xFF3
 21615                           intcon	equ	0xFF2
 21616                           intcon3	equ	0xFF0
 21617                           indf0	equ	0xFEF
 21618                           postinc0	equ	0xFEE
 21619                           fsr0h	equ	0xFEA
 21620                           fsr0l	equ	0xFE9
 21621                           wreg	equ	0xFE8
 21622                           indf1	equ	0xFE7
 21623                           postdec1	equ	0xFE5
 21624                           fsr1h	equ	0xFE2
 21625                           fsr1l	equ	0xFE1
 21626                           indf2	equ	0xFDF
 21627                           fsr2h	equ	0xFDA
 21628                           fsr2l	equ	0xFD9
 21629                           status	equ	0xFD8
 21630                           
 21631 ;; *************** function _oled_clear *****************
 21632 ;; Defined at:
 21633 ;;		line 348 in file "../Includes/Drivers/SSD1306oLED.c"
 21634 ;; Parameters:    Size  Location     Type
 21635 ;;		None
 21636 ;; Auto vars:     Size  Location     Type
 21637 ;;		None
 21638 ;; Return value:  Size  Location     Type
 21639 ;;		None               void
 21640 ;; Registers used:
 21641 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21642 ;; Tracked objects:
 21643 ;;		On entry : 0/0
 21644 ;;		On exit  : 0/0
 21645 ;;		Unchanged: 0/0
 21646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21647 ;;      Params:         0       0       0       0       0       0       0       0       0
 21648 ;;      Locals:         0       0       0       0       0       0       0       0       0
 21649 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21650 ;;      Totals:         0       0       0       0       0       0       0       0       0
 21651 ;;Total ram usage:        0 bytes
 21652 ;; Hardware stack levels used:    1
 21653 ;; Hardware stack levels required when called:   15
 21654 ;; This function calls:
 21655 ;;		_oled_clearRow
 21656 ;; This function is called by:
 21657 ;;		_main
 21658 ;;		_test_powerup
 21659 ;;		_test_oled
 21660 ;;		_test_switch
 21661 ;;		_moteHandler
 21662 ;;		_moteJoiningProcess
 21663 ;;		_moteRunningProcess
 21664 ;;		_moteApp_testSensors
 21665 ;;		_USBapp_Handler
 21666 ;;		_oled_init
 21667 ;;		_test_adc
 21668 ;;		_test_rf
 21669 ;; This function uses a non-reentrant model
 21670 ;;
 21671                           
 21672                           	psect	text70
 21673  0069A2                     __ptext70:
 21674                           	opt stack 0
 21675  0069A2                     _oled_clear:
 21676                           	opt stack 13
 21677                           
 21678                           ;SSD1306oLED.c: 350: oled_clearRow(0);
 21679                           
 21680                           ;incstack = 0
 21681  0069A2  0E00               	movlw	0
 21682  0069A4  EC5A  F034         	call	_oled_clearRow
 21683                           
 21684                           ;SSD1306oLED.c: 351: oled_clearRow(1);
 21685  0069A8  0E01               	movlw	1
 21686  0069AA  EC5A  F034         	call	_oled_clearRow
 21687                           
 21688                           ;SSD1306oLED.c: 352: oled_clearRow(2);
 21689  0069AE  0E02               	movlw	2
 21690  0069B0  EC5A  F034         	call	_oled_clearRow
 21691                           
 21692                           ;SSD1306oLED.c: 353: oled_clearRow(3);
 21693  0069B4  0E03               	movlw	3
 21694  0069B6  EC5A  F034         	call	_oled_clearRow
 21695  0069BA  0012               	return		;funcret
 21696  0069BC                     __end_of_oled_clear:
 21697                           	opt stack 0
 21698                           tblptru	equ	0xFF8
 21699                           tblptrh	equ	0xFF7
 21700                           tblptrl	equ	0xFF6
 21701                           tablat	equ	0xFF5
 21702                           prodh	equ	0xFF4
 21703                           prodl	equ	0xFF3
 21704                           intcon	equ	0xFF2
 21705                           intcon3	equ	0xFF0
 21706                           indf0	equ	0xFEF
 21707                           postinc0	equ	0xFEE
 21708                           fsr0h	equ	0xFEA
 21709                           fsr0l	equ	0xFE9
 21710                           wreg	equ	0xFE8
 21711                           indf1	equ	0xFE7
 21712                           postdec1	equ	0xFE5
 21713                           fsr1h	equ	0xFE2
 21714                           fsr1l	equ	0xFE1
 21715                           indf2	equ	0xFDF
 21716                           fsr2h	equ	0xFDA
 21717                           fsr2l	equ	0xFD9
 21718                           status	equ	0xFD8
 21719                           
 21720 ;; *************** function _oled_clearRow *****************
 21721 ;; Defined at:
 21722 ;;		line 356 in file "../Includes/Drivers/SSD1306oLED.c"
 21723 ;; Parameters:    Size  Location     Type
 21724 ;;  page            1    wreg     unsigned char 
 21725 ;; Auto vars:     Size  Location     Type
 21726 ;;  page            1   12[BANK0 ] unsigned char 
 21727 ;;  index           1   13[BANK0 ] unsigned char 
 21728 ;; Return value:  Size  Location     Type
 21729 ;;		None               void
 21730 ;; Registers used:
 21731 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21732 ;; Tracked objects:
 21733 ;;		On entry : 0/0
 21734 ;;		On exit  : 0/0
 21735 ;;		Unchanged: 0/0
 21736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21737 ;;      Params:         0       0       0       0       0       0       0       0       0
 21738 ;;      Locals:         0       2       0       0       0       0       0       0       0
 21739 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21740 ;;      Totals:         0       2       0       0       0       0       0       0       0
 21741 ;;Total ram usage:        2 bytes
 21742 ;; Hardware stack levels used:    1
 21743 ;; Hardware stack levels required when called:   14
 21744 ;; This function calls:
 21745 ;;		_oled_putChar
 21746 ;; This function is called by:
 21747 ;;		_oled_clear
 21748 ;; This function uses a non-reentrant model
 21749 ;;
 21750                           
 21751                           	psect	text71
 21752  0068B4                     __ptext71:
 21753                           	opt stack 0
 21754  0068B4                     _oled_clearRow:
 21755                           	opt stack 13
 21756                           
 21757                           ;incstack = 0
 21758                           ;oled_clearRow@page stored from wreg
 21759  0068B4  0100               	movlb	0	; () banked
 21760  0068B6  6F6C               	movwf	oled_clearRow@page& (0+255),b
 21761                           
 21762                           ;SSD1306oLED.c: 358: uint8_t index;
 21763                           ;SSD1306oLED.c: 360: for(index = 0; index < 16; index++)
 21764  0068B8  0E00               	movlw	0
 21765  0068BA  0100               	movlb	0	; () banked
 21766  0068BC  6F6D               	movwf	oled_clearRow@index& (0+255),b
 21767  0068BE                     l11906:
 21768                           
 21769                           ; BSR set to: 0
 21770  0068BE  0E0F               	movlw	15
 21771  0068C0  0100               	movlb	0	; () banked
 21772  0068C2  656D               	cpfsgt	oled_clearRow@index& (0+255),b
 21773  0068C4  D001               	goto	l11910
 21774  0068C6  0012               	return	
 21775  0068C8                     l11910:
 21776                           
 21777                           ; BSR set to: 0
 21778                           ;SSD1306oLED.c: 361: {
 21779                           ;SSD1306oLED.c: 362: oled_putChar( ' ', index, page);
 21780  0068C8  C06D  F062         	movff	oled_clearRow@index,oled_putChar@station_dot
 21781  0068CC  C06C  F063         	movff	oled_clearRow@page,oled_putChar@start_page
 21782  0068D0  0E20               	movlw	32
 21783  0068D2  EC6E  F02A         	call	_oled_putChar
 21784  0068D6  0100               	movlb	0	; () banked
 21785  0068D8  2B6D               	incf	oled_clearRow@index& (0+255),f,b
 21786  0068DA  D7F1               	goto	l11906
 21787  0068DC                     __end_of_oled_clearRow:
 21788                           	opt stack 0
 21789                           tblptru	equ	0xFF8
 21790                           tblptrh	equ	0xFF7
 21791                           tblptrl	equ	0xFF6
 21792                           tablat	equ	0xFF5
 21793                           prodh	equ	0xFF4
 21794                           prodl	equ	0xFF3
 21795                           intcon	equ	0xFF2
 21796                           intcon3	equ	0xFF0
 21797                           indf0	equ	0xFEF
 21798                           postinc0	equ	0xFEE
 21799                           fsr0h	equ	0xFEA
 21800                           fsr0l	equ	0xFE9
 21801                           wreg	equ	0xFE8
 21802                           indf1	equ	0xFE7
 21803                           postdec1	equ	0xFE5
 21804                           fsr1h	equ	0xFE2
 21805                           fsr1l	equ	0xFE1
 21806                           indf2	equ	0xFDF
 21807                           fsr2h	equ	0xFDA
 21808                           fsr2l	equ	0xFD9
 21809                           status	equ	0xFD8
 21810                           
 21811 ;; *************** function _oled_putChar *****************
 21812 ;; Defined at:
 21813 ;;		line 318 in file "../Includes/Drivers/SSD1306oLED.c"
 21814 ;; Parameters:    Size  Location     Type
 21815 ;;  k               1    wreg     unsigned char 
 21816 ;;  station_dot     1    2[BANK0 ] unsigned char 
 21817 ;;  start_page      1    3[BANK0 ] unsigned char 
 21818 ;; Auto vars:     Size  Location     Type
 21819 ;;  k               1   10[BANK0 ] unsigned char 
 21820 ;;  index           1   11[BANK0 ] unsigned char 
 21821 ;; Return value:  Size  Location     Type
 21822 ;;		None               void
 21823 ;; Registers used:
 21824 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21825 ;; Tracked objects:
 21826 ;;		On entry : 0/0
 21827 ;;		On exit  : 0/0
 21828 ;;		Unchanged: 0/0
 21829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21830 ;;      Params:         0       2       0       0       0       0       0       0       0
 21831 ;;      Locals:         0       2       0       0       0       0       0       0       0
 21832 ;;      Temps:          0       6       0       0       0       0       0       0       0
 21833 ;;      Totals:         0      10       0       0       0       0       0       0       0
 21834 ;;Total ram usage:       10 bytes
 21835 ;; Hardware stack levels used:    1
 21836 ;; Hardware stack levels required when called:   13
 21837 ;; This function calls:
 21838 ;;		_Set_Column_Address
 21839 ;;		_Set_Page_Address
 21840 ;;		_oled_writeData
 21841 ;; This function is called by:
 21842 ;;		_moteApp_testSensors
 21843 ;;		_oled_putString
 21844 ;;		_oled_clearRow
 21845 ;;		_test_adc
 21846 ;; This function uses a non-reentrant model
 21847 ;;
 21848                           
 21849                           	psect	text72
 21850  0054DC                     __ptext72:
 21851                           	opt stack 0
 21852  0054DC                     _oled_putChar:
 21853                           	opt stack 14
 21854                           
 21855                           ; BSR set to: 0
 21856                           ;incstack = 0
 21857                           ;oled_putChar@k stored from wreg
 21858  0054DC  0100               	movlb	0	; () banked
 21859  0054DE  6F6A               	movwf	oled_putChar@k& (0+255),b
 21860                           
 21861                           ;SSD1306oLED.c: 320: uint8_t index;
 21862                           ;SSD1306oLED.c: 322: Set_Page_Address(start_page);
 21863  0054E0  0100               	movlb	0	; () banked
 21864  0054E2  5163               	movf	oled_putChar@start_page& (0+255),w,b
 21865  0054E4  ECEB  F034         	call	_Set_Page_Address
 21866                           
 21867                           ;SSD1306oLED.c: 323: Set_Column_Address(0x00 + station_dot * 8 + 4);
 21868  0054E8  0100               	movlb	0	; () banked
 21869  0054EA  5162               	movf	oled_putChar@station_dot& (0+255),w,b
 21870  0054EC  0D08               	mullw	8
 21871  0054EE  50F3               	movf	prodl,w,c
 21872  0054F0  0F04               	addlw	4
 21873  0054F2  ECC3  F034         	call	_Set_Column_Address
 21874                           
 21875                           ;SSD1306oLED.c: 325: for(index = 0; index < 8; index++)
 21876  0054F6  0E00               	movlw	0
 21877  0054F8  0100               	movlb	0	; () banked
 21878  0054FA  6F6B               	movwf	oled_putChar@index& (0+255),b
 21879  0054FC                     l11854:
 21880                           
 21881                           ; BSR set to: 0
 21882  0054FC  0E07               	movlw	7
 21883  0054FE  0100               	movlb	0	; () banked
 21884  005500  656B               	cpfsgt	oled_putChar@index& (0+255),b
 21885  005502  D001               	goto	l11858
 21886  005504  0012               	return	
 21887  005506                     l11858:
 21888                           
 21889                           ; BSR set to: 0
 21890                           ;SSD1306oLED.c: 326: {
 21891                           ;SSD1306oLED.c: 327: oled_writeData(*(selectedFont + 8 * (k - 0x20) + index));
 21892  005506  0100               	movlb	0	; () banked
 21893  005508  516B               	movf	oled_putChar@index& (0+255),w,b
 21894  00550A  0D01               	mullw	1
 21895  00550C  0E00               	movlw	0
 21896  00550E  0100               	movlb	0	; () banked
 21897  005510  6F64               	movwf	??_oled_putChar& (0+255),b
 21898  005512  0EFF               	movlw	255
 21899  005514  0100               	movlb	0	; () banked
 21900  005516  6F65               	movwf	(??_oled_putChar+1)& (0+255),b
 21901  005518  0100               	movlb	0	; () banked
 21902  00551A  516A               	movf	oled_putChar@k& (0+255),w,b
 21903  00551C  0100               	movlb	0	; () banked
 21904  00551E  6F66               	movwf	(??_oled_putChar+2)& (0+255),b
 21905  005520  6B67               	clrf	(??_oled_putChar+3)& (0+255),b
 21906  005522  0100               	movlb	0	; () banked
 21907  005524  90D8               	bcf	status,0,c
 21908  005526  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 21909  005528  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 21910  00552A  0100               	movlb	0	; () banked
 21911  00552C  90D8               	bcf	status,0,c
 21912  00552E  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 21913  005530  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 21914  005532  0100               	movlb	0	; () banked
 21915  005534  90D8               	bcf	status,0,c
 21916  005536  3766               	rlcf	(??_oled_putChar+2)& (0+255),f,b
 21917  005538  3767               	rlcf	(??_oled_putChar+3)& (0+255),f,b
 21918  00553A  0100               	movlb	0	; () banked
 21919  00553C  5164               	movf	??_oled_putChar& (0+255),w,b
 21920  00553E  0100               	movlb	0	; () banked
 21921  005540  2766               	addwf	(??_oled_putChar+2)& (0+255),f,b
 21922  005542  0100               	movlb	0	; () banked
 21923  005544  5165               	movf	(??_oled_putChar+1)& (0+255),w,b
 21924  005546  0100               	movlb	0	; () banked
 21925  005548  2367               	addwfc	(??_oled_putChar+3)& (0+255),f,b
 21926  00554A  C1F7  F068         	movff	_selectedFont,??_oled_putChar+4
 21927  00554E  C1F8  F069         	movff	_selectedFont+1,??_oled_putChar+5
 21928  005552  0100               	movlb	0	; () banked
 21929  005554  5166               	movf	(??_oled_putChar+2)& (0+255),w,b
 21930  005556  0100               	movlb	0	; () banked
 21931  005558  2768               	addwf	(??_oled_putChar+4)& (0+255),f,b
 21932  00555A  0100               	movlb	0	; () banked
 21933  00555C  5167               	movf	(??_oled_putChar+3)& (0+255),w,b
 21934  00555E  0100               	movlb	0	; () banked
 21935  005560  2369               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 21936  005562  50F3               	movf	prodl,w,c
 21937  005564  0100               	movlb	0	; () banked
 21938  005566  2768               	addwf	(??_oled_putChar+4)& (0+255),f,b
 21939  005568  50F4               	movf	prodh,w,c
 21940  00556A  0100               	movlb	0	; () banked
 21941  00556C  2369               	addwfc	(??_oled_putChar+5)& (0+255),f,b
 21942  00556E  C068  FFF6         	movff	??_oled_putChar+4,tblptrl
 21943  005572  C069  FFF7         	movff	??_oled_putChar+5,tblptrh
 21944  005576                     	if	0	;tblptru may be non-zero
 21945  005576                     	endif
 21946  005576                     	if	0	;tblptru may be non-zero
 21947  005576                     	endif
 21948  005576  0008               	tblrd		*
 21949  005578  50F5               	movf	tablat,w,c
 21950  00557A  EC02  F035         	call	_oled_writeData
 21951  00557E  0100               	movlb	0	; () banked
 21952  005580  2B6B               	incf	oled_putChar@index& (0+255),f,b
 21953  005582  D7BC               	goto	l11854
 21954  005584                     __end_of_oled_putChar:
 21955                           	opt stack 0
 21956                           tblptru	equ	0xFF8
 21957                           tblptrh	equ	0xFF7
 21958                           tblptrl	equ	0xFF6
 21959                           tablat	equ	0xFF5
 21960                           prodh	equ	0xFF4
 21961                           prodl	equ	0xFF3
 21962                           intcon	equ	0xFF2
 21963                           intcon3	equ	0xFF0
 21964                           indf0	equ	0xFEF
 21965                           postinc0	equ	0xFEE
 21966                           fsr0h	equ	0xFEA
 21967                           fsr0l	equ	0xFE9
 21968                           wreg	equ	0xFE8
 21969                           indf1	equ	0xFE7
 21970                           postdec1	equ	0xFE5
 21971                           fsr1h	equ	0xFE2
 21972                           fsr1l	equ	0xFE1
 21973                           indf2	equ	0xFDF
 21974                           fsr2h	equ	0xFDA
 21975                           fsr2l	equ	0xFD9
 21976                           status	equ	0xFD8
 21977                           
 21978 ;; *************** function _oled_writeData *****************
 21979 ;; Defined at:
 21980 ;;		line 443 in file "../Includes/Drivers/SSD1306oLED.c"
 21981 ;; Parameters:    Size  Location     Type
 21982 ;;  data            1    wreg     unsigned char 
 21983 ;; Auto vars:     Size  Location     Type
 21984 ;;  data            1    0[BANK0 ] unsigned char 
 21985 ;; Return value:  Size  Location     Type
 21986 ;;		None               void
 21987 ;; Registers used:
 21988 ;;		wreg
 21989 ;; Tracked objects:
 21990 ;;		On entry : 0/0
 21991 ;;		On exit  : 0/0
 21992 ;;		Unchanged: 0/0
 21993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 21994 ;;      Params:         0       0       0       0       0       0       0       0       0
 21995 ;;      Locals:         0       1       0       0       0       0       0       0       0
 21996 ;;      Temps:          0       0       0       0       0       0       0       0       0
 21997 ;;      Totals:         0       1       0       0       0       0       0       0       0
 21998 ;;Total ram usage:        1 bytes
 21999 ;; Hardware stack levels used:    1
 22000 ;; Hardware stack levels required when called:   11
 22001 ;; This function calls:
 22002 ;;		Nothing
 22003 ;; This function is called by:
 22004 ;;		_oled_putChar
 22005 ;; This function uses a non-reentrant model
 22006 ;;
 22007                           
 22008                           	psect	text73
 22009  006A04                     __ptext73:
 22010                           	opt stack 0
 22011  006A04                     _oled_writeData:
 22012                           	opt stack 15
 22013                           
 22014                           ; BSR set to: 0
 22015                           ;incstack = 0
 22016                           ;oled_writeData@data stored from wreg
 22017  006A04  0100               	movlb	0	; () banked
 22018  006A06  6F60               	movwf	oled_writeData@data& (0+255),b
 22019                           
 22020                           ;SSD1306oLED.c: 445: LATBbits.LATB4=0;
 22021  006A08  988A               	bcf	3978,4,c	;volatile
 22022                           
 22023                           ;SSD1306oLED.c: 446: LATCbits.LATC0=1;
 22024  006A0A  808B               	bsf	3979,0,c	;volatile
 22025                           
 22026                           ;SSD1306oLED.c: 447: LATD=data;
 22027  006A0C  C060  FF8C         	movff	oled_writeData@data,3980	;volatile
 22028                           
 22029                           ;SSD1306oLED.c: 448: LATCbits.LATC1=0;
 22030  006A10  928B               	bcf	3979,1,c	;volatile
 22031                           
 22032                           ;SSD1306oLED.c: 449: __nop();
 22033  006A12  F000               	nop	
 22034                           
 22035                           ;SSD1306oLED.c: 450: LATCbits.LATC1=1;
 22036  006A14  828B               	bsf	3979,1,c	;volatile
 22037                           
 22038                           ;SSD1306oLED.c: 451: LATBbits.LATB4=1;
 22039  006A16  888A               	bsf	3978,4,c	;volatile
 22040  006A18  0012               	return	
 22041  006A1A                     __end_of_oled_writeData:
 22042                           	opt stack 0
 22043                           tblptru	equ	0xFF8
 22044                           tblptrh	equ	0xFF7
 22045                           tblptrl	equ	0xFF6
 22046                           tablat	equ	0xFF5
 22047                           prodh	equ	0xFF4
 22048                           prodl	equ	0xFF3
 22049                           intcon	equ	0xFF2
 22050                           intcon3	equ	0xFF0
 22051                           indf0	equ	0xFEF
 22052                           postinc0	equ	0xFEE
 22053                           fsr0h	equ	0xFEA
 22054                           fsr0l	equ	0xFE9
 22055                           wreg	equ	0xFE8
 22056                           indf1	equ	0xFE7
 22057                           postdec1	equ	0xFE5
 22058                           fsr1h	equ	0xFE2
 22059                           fsr1l	equ	0xFE1
 22060                           indf2	equ	0xFDF
 22061                           fsr2h	equ	0xFDA
 22062                           fsr2l	equ	0xFD9
 22063                           status	equ	0xFD8
 22064                           
 22065 ;; *************** function _Set_Page_Address *****************
 22066 ;; Defined at:
 22067 ;;		line 241 in file "../Includes/Drivers/SSD1306oLED.c"
 22068 ;; Parameters:    Size  Location     Type
 22069 ;;  address         1    wreg     unsigned char 
 22070 ;; Auto vars:     Size  Location     Type
 22071 ;;  address         1    1[BANK0 ] unsigned char 
 22072 ;; Return value:  Size  Location     Type
 22073 ;;		None               void
 22074 ;; Registers used:
 22075 ;;		wreg, status,2, status,0, cstack
 22076 ;; Tracked objects:
 22077 ;;		On entry : 0/0
 22078 ;;		On exit  : 0/0
 22079 ;;		Unchanged: 0/0
 22080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22081 ;;      Params:         0       0       0       0       0       0       0       0       0
 22082 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22083 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22084 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22085 ;;Total ram usage:        1 bytes
 22086 ;; Hardware stack levels used:    1
 22087 ;; Hardware stack levels required when called:   12
 22088 ;; This function calls:
 22089 ;;		_oled_writeCommand
 22090 ;; This function is called by:
 22091 ;;		_oled_putChar
 22092 ;; This function uses a non-reentrant model
 22093 ;;
 22094                           
 22095                           	psect	text74
 22096  0069D6                     __ptext74:
 22097                           	opt stack 0
 22098  0069D6                     _Set_Page_Address:
 22099                           	opt stack 14
 22100                           
 22101                           ;incstack = 0
 22102                           ;Set_Page_Address@address stored from wreg
 22103  0069D6  0100               	movlb	0	; () banked
 22104  0069D8  6F61               	movwf	Set_Page_Address@address& (0+255),b
 22105                           
 22106                           ;SSD1306oLED.c: 243: address = 0xb0 | address;
 22107  0069DA  0100               	movlb	0	; () banked
 22108  0069DC  5161               	movf	Set_Page_Address@address& (0+255),w,b
 22109  0069DE  09B0               	iorlw	176
 22110  0069E0  0100               	movlb	0	; () banked
 22111  0069E2  6F61               	movwf	Set_Page_Address@address& (0+255),b
 22112                           
 22113                           ; BSR set to: 0
 22114                           ;SSD1306oLED.c: 244: oled_writeCommand(address);
 22115  0069E4  0100               	movlb	0	; () banked
 22116  0069E6  5161               	movf	Set_Page_Address@address& (0+255),w,b
 22117  0069E8  EC0D  F035         	call	_oled_writeCommand
 22118  0069EC  0012               	return	
 22119  0069EE                     __end_of_Set_Page_Address:
 22120                           	opt stack 0
 22121                           tblptru	equ	0xFF8
 22122                           tblptrh	equ	0xFF7
 22123                           tblptrl	equ	0xFF6
 22124                           tablat	equ	0xFF5
 22125                           prodh	equ	0xFF4
 22126                           prodl	equ	0xFF3
 22127                           intcon	equ	0xFF2
 22128                           intcon3	equ	0xFF0
 22129                           indf0	equ	0xFEF
 22130                           postinc0	equ	0xFEE
 22131                           fsr0h	equ	0xFEA
 22132                           fsr0l	equ	0xFE9
 22133                           wreg	equ	0xFE8
 22134                           indf1	equ	0xFE7
 22135                           postdec1	equ	0xFE5
 22136                           fsr1h	equ	0xFE2
 22137                           fsr1l	equ	0xFE1
 22138                           indf2	equ	0xFDF
 22139                           fsr2h	equ	0xFDA
 22140                           fsr2l	equ	0xFD9
 22141                           status	equ	0xFD8
 22142                           
 22143 ;; *************** function _Set_Column_Address *****************
 22144 ;; Defined at:
 22145 ;;		line 249 in file "../Includes/Drivers/SSD1306oLED.c"
 22146 ;; Parameters:    Size  Location     Type
 22147 ;;  address         1    wreg     unsigned char 
 22148 ;; Auto vars:     Size  Location     Type
 22149 ;;  address         1    1[BANK0 ] unsigned char 
 22150 ;; Return value:  Size  Location     Type
 22151 ;;		None               void
 22152 ;; Registers used:
 22153 ;;		wreg, status,2, status,0, cstack
 22154 ;; Tracked objects:
 22155 ;;		On entry : 0/0
 22156 ;;		On exit  : 0/0
 22157 ;;		Unchanged: 0/0
 22158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22159 ;;      Params:         0       0       0       0       0       0       0       0       0
 22160 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22161 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22162 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22163 ;;Total ram usage:        1 bytes
 22164 ;; Hardware stack levels used:    1
 22165 ;; Hardware stack levels required when called:   12
 22166 ;; This function calls:
 22167 ;;		_oled_writeCommand
 22168 ;; This function is called by:
 22169 ;;		_oled_putChar
 22170 ;; This function uses a non-reentrant model
 22171 ;;
 22172                           
 22173                           	psect	text75
 22174  006986                     __ptext75:
 22175                           	opt stack 0
 22176  006986                     _Set_Column_Address:
 22177                           	opt stack 14
 22178                           
 22179                           ;incstack = 0
 22180                           ;Set_Column_Address@address stored from wreg
 22181  006986  0100               	movlb	0	; () banked
 22182  006988  6F61               	movwf	Set_Column_Address@address& (0+255),b
 22183                           
 22184                           ;SSD1306oLED.c: 251: oled_writeCommand((0x10|(address>>4)));
 22185  00698A  0100               	movlb	0	; () banked
 22186  00698C  3961               	swapf	Set_Column_Address@address& (0+255),w,b
 22187  00698E  0B0F               	andlw	15
 22188  006990  0910               	iorlw	16
 22189  006992  EC0D  F035         	call	_oled_writeCommand
 22190                           
 22191                           ;SSD1306oLED.c: 252: oled_writeCommand((0x0f&address));
 22192  006996  0100               	movlb	0	; () banked
 22193  006998  5161               	movf	Set_Column_Address@address& (0+255),w,b
 22194  00699A  0B0F               	andlw	15
 22195  00699C  EC0D  F035         	call	_oled_writeCommand
 22196  0069A0  0012               	return	
 22197  0069A2                     __end_of_Set_Column_Address:
 22198                           	opt stack 0
 22199                           tblptru	equ	0xFF8
 22200                           tblptrh	equ	0xFF7
 22201                           tblptrl	equ	0xFF6
 22202                           tablat	equ	0xFF5
 22203                           prodh	equ	0xFF4
 22204                           prodl	equ	0xFF3
 22205                           intcon	equ	0xFF2
 22206                           intcon3	equ	0xFF0
 22207                           indf0	equ	0xFEF
 22208                           postinc0	equ	0xFEE
 22209                           fsr0h	equ	0xFEA
 22210                           fsr0l	equ	0xFE9
 22211                           wreg	equ	0xFE8
 22212                           indf1	equ	0xFE7
 22213                           postdec1	equ	0xFE5
 22214                           fsr1h	equ	0xFE2
 22215                           fsr1l	equ	0xFE1
 22216                           indf2	equ	0xFDF
 22217                           fsr2h	equ	0xFDA
 22218                           fsr2l	equ	0xFD9
 22219                           status	equ	0xFD8
 22220                           
 22221 ;; *************** function _oled_writeCommand *****************
 22222 ;; Defined at:
 22223 ;;		line 431 in file "../Includes/Drivers/SSD1306oLED.c"
 22224 ;; Parameters:    Size  Location     Type
 22225 ;;  command         1    wreg     unsigned char 
 22226 ;; Auto vars:     Size  Location     Type
 22227 ;;  command         1    0[BANK0 ] unsigned char 
 22228 ;; Return value:  Size  Location     Type
 22229 ;;		None               void
 22230 ;; Registers used:
 22231 ;;		wreg
 22232 ;; Tracked objects:
 22233 ;;		On entry : 0/0
 22234 ;;		On exit  : 0/0
 22235 ;;		Unchanged: 0/0
 22236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22237 ;;      Params:         0       0       0       0       0       0       0       0       0
 22238 ;;      Locals:         0       1       0       0       0       0       0       0       0
 22239 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22240 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22241 ;;Total ram usage:        1 bytes
 22242 ;; Hardware stack levels used:    1
 22243 ;; Hardware stack levels required when called:   11
 22244 ;; This function calls:
 22245 ;;		Nothing
 22246 ;; This function is called by:
 22247 ;;		_Set_Page_Address
 22248 ;;		_Set_Column_Address
 22249 ;;		_oled_devInit
 22250 ;;		_oled_setDisplay
 22251 ;;		_oled_displayOff
 22252 ;;		_oled_setContrastControlRegister
 22253 ;;		_oled_initialDispayLine
 22254 ;;		_oled_powerControl
 22255 ;;		_oled_regulorResistorSelect
 22256 ;; This function uses a non-reentrant model
 22257 ;;
 22258                           
 22259                           	psect	text76
 22260  006A1A                     __ptext76:
 22261                           	opt stack 0
 22262  006A1A                     _oled_writeCommand:
 22263                           	opt stack 14
 22264                           
 22265                           ;incstack = 0
 22266                           ;oled_writeCommand@command stored from wreg
 22267  006A1A  0100               	movlb	0	; () banked
 22268  006A1C  6F60               	movwf	oled_writeCommand@command& (0+255),b
 22269                           
 22270                           ;SSD1306oLED.c: 433: LATBbits.LATB4=0;
 22271  006A1E  988A               	bcf	3978,4,c	;volatile
 22272                           
 22273                           ;SSD1306oLED.c: 434: LATCbits.LATC0=0;
 22274  006A20  908B               	bcf	3979,0,c	;volatile
 22275                           
 22276                           ;SSD1306oLED.c: 435: LATD=command;
 22277  006A22  C060  FF8C         	movff	oled_writeCommand@command,3980	;volatile
 22278                           
 22279                           ;SSD1306oLED.c: 436: LATCbits.LATC1=0;
 22280  006A26  928B               	bcf	3979,1,c	;volatile
 22281                           
 22282                           ;SSD1306oLED.c: 437: __nop();
 22283  006A28  F000               	nop	
 22284                           
 22285                           ;SSD1306oLED.c: 438: LATCbits.LATC1=1;
 22286  006A2A  828B               	bsf	3979,1,c	;volatile
 22287                           
 22288                           ;SSD1306oLED.c: 439: LATBbits.LATB4=1;
 22289  006A2C  888A               	bsf	3978,4,c	;volatile
 22290  006A2E  0012               	return	
 22291  006A30                     __end_of_oled_writeCommand:
 22292                           	opt stack 0
 22293                           tblptru	equ	0xFF8
 22294                           tblptrh	equ	0xFF7
 22295                           tblptrl	equ	0xFF6
 22296                           tablat	equ	0xFF5
 22297                           prodh	equ	0xFF4
 22298                           prodl	equ	0xFF3
 22299                           intcon	equ	0xFF2
 22300                           intcon3	equ	0xFF0
 22301                           indf0	equ	0xFEF
 22302                           postinc0	equ	0xFEE
 22303                           fsr0h	equ	0xFEA
 22304                           fsr0l	equ	0xFE9
 22305                           wreg	equ	0xFE8
 22306                           indf1	equ	0xFE7
 22307                           postdec1	equ	0xFE5
 22308                           fsr1h	equ	0xFE2
 22309                           fsr1l	equ	0xFE1
 22310                           indf2	equ	0xFDF
 22311                           fsr2h	equ	0xFDA
 22312                           fsr2l	equ	0xFD9
 22313                           status	equ	0xFD8
 22314                           
 22315 ;; *************** function _USBapp_DeviceCdcEmulatorHandler *****************
 22316 ;; Defined at:
 22317 ;;		line 162 in file "../Includes/Board/USBapp.c"
 22318 ;; Parameters:    Size  Location     Type
 22319 ;;		None
 22320 ;; Auto vars:     Size  Location     Type
 22321 ;;		None
 22322 ;; Return value:  Size  Location     Type
 22323 ;;		None               void
 22324 ;; Registers used:
 22325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22326 ;; Tracked objects:
 22327 ;;		On entry : 0/0
 22328 ;;		On exit  : 0/0
 22329 ;;		Unchanged: 0/0
 22330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22331 ;;      Params:         0       0       0       0       0       0       0       0       0
 22332 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22333 ;;      Temps:          0       1       0       0       0       0       0       0       0
 22334 ;;      Totals:         0       1       0       0       0       0       0       0       0
 22335 ;;Total ram usage:        1 bytes
 22336 ;; Hardware stack levels used:    1
 22337 ;; Hardware stack levels required when called:   13
 22338 ;; This function calls:
 22339 ;;		_CDCTxService
 22340 ;;		_EUSART_Read
 22341 ;;		_EUSART_Write
 22342 ;;		_MOTEapp_setResponseReady
 22343 ;;		_USBapp_getrxByteFlag
 22344 ;;		_getsUSBUSART
 22345 ;;		_putUSBUSART
 22346 ;; This function is called by:
 22347 ;;		_USBapp_Handler
 22348 ;; This function uses a non-reentrant model
 22349 ;;
 22350                           
 22351                           	psect	text77
 22352  0046AC                     __ptext77:
 22353                           	opt stack 0
 22354  0046AC                     _USBapp_DeviceCdcEmulatorHandler:
 22355                           	opt stack 16
 22356                           
 22357                           ;USBapp.c: 165: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 22358                           
 22359                           ;incstack = 0
 22360  0046AC  0E1F               	movlw	31
 22361  0046AE  0100               	movlb	0	; () banked
 22362  0046B0  65D2               	cpfsgt	_USBDeviceState& (0+255),b	;volatile
 22363  0046B2  0012               	return	
 22364                           
 22365                           ; BSR set to: 0
 22366  0046B4  B260               	btfsc	3936,1,c	;volatile
 22367  0046B6  0012               	return	
 22368                           
 22369                           ; BSR set to: 0
 22370                           ;USBapp.c: 168: if (RS232_Out_Data_Rdy == 0)
 22371                           
 22372                           ; BSR set to: 0
 22373                           
 22374                           ; BSR set to: 0
 22375                           ;USBapp.c: 166: return;
 22376  0046B8  504C               	movf	_RS232_Out_Data_Rdy,w,c
 22377  0046BA  A4D8               	btfss	status,2,c
 22378  0046BC  D013               	goto	l884
 22379                           
 22380                           ; BSR set to: 0
 22381                           ;USBapp.c: 169: {
 22382                           ;USBapp.c: 170: LastRS232Out = getsUSBUSART(USB_Buffer,64);
 22383  0046BE  0E80               	movlw	low _USB_Buffer
 22384  0046C0  0100               	movlb	0	; () banked
 22385  0046C2  6F67               	movwf	getsUSBUSART@buffer& (0+255),b
 22386  0046C4  0E02               	movlw	high _USB_Buffer
 22387  0046C6  0100               	movlb	0	; () banked
 22388  0046C8  6F68               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 22389  0046CA  0E40               	movlw	64
 22390  0046CC  0100               	movlb	0	; () banked
 22391  0046CE  6F69               	movwf	getsUSBUSART@len& (0+255),b
 22392  0046D0  ECE1  F022         	call	_getsUSBUSART	;wreg free
 22393  0046D4  6E4A               	movwf	_LastRS232Out,c
 22394                           
 22395                           ;USBapp.c: 171: if(LastRS232Out > 0)
 22396  0046D6  504A               	movf	_LastRS232Out,w,c
 22397  0046D8  B4D8               	btfsc	status,2,c
 22398  0046DA  D004               	goto	l884
 22399                           
 22400                           ;USBapp.c: 172: {
 22401                           ;USBapp.c: 173: RS232_Out_Data_Rdy = 1;
 22402  0046DC  0E01               	movlw	1
 22403  0046DE  6E4C               	movwf	_RS232_Out_Data_Rdy,c
 22404                           
 22405                           ;USBapp.c: 174: RS232cp = 0;
 22406  0046E0  0E00               	movlw	0
 22407  0046E2  6E4D               	movwf	_RS232cp,c
 22408  0046E4                     l884:
 22409                           
 22410                           ;USBapp.c: 175: }
 22411                           ;USBapp.c: 176: }
 22412                           ;USBapp.c: 179: if(RS232_Out_Data_Rdy && TXSTAbits.TRMT)
 22413  0046E4  504C               	movf	_RS232_Out_Data_Rdy,w,c
 22414  0046E6  A4D8               	btfss	status,2,c
 22415  0046E8  A2AC               	btfss	4012,1,c	;volatile
 22416  0046EA  D012               	goto	l886
 22417                           
 22418                           ;USBapp.c: 180: {
 22419                           ;USBapp.c: 182: EUSART_Write(USB_Buffer[RS232cp]);
 22420  0046EC  504D               	movf	_RS232cp,w,c
 22421  0046EE  0D01               	mullw	1
 22422  0046F0  0E80               	movlw	low _USB_Buffer
 22423  0046F2  24F3               	addwf	prodl,w,c
 22424  0046F4  6ED9               	movwf	fsr2l,c
 22425  0046F6  0E02               	movlw	high _USB_Buffer
 22426  0046F8  20F4               	addwfc	prodh,w,c
 22427  0046FA  6EDA               	movwf	fsr2h,c
 22428  0046FC  50DF               	movf	indf2,w,c
 22429  0046FE  EC08  F032         	call	_EUSART_Write
 22430                           
 22431                           ;USBapp.c: 183: ++RS232cp;
 22432  004702  2A4D               	incf	_RS232cp,f,c
 22433                           
 22434                           ;USBapp.c: 184: if (RS232cp == LastRS232Out)
 22435  004704  504A               	movf	_LastRS232Out,w,c
 22436  004706  184D               	xorwf	_RS232cp,w,c
 22437  004708  A4D8               	btfss	status,2,c
 22438  00470A  D002               	goto	l886
 22439                           
 22440                           ;USBapp.c: 185: RS232_Out_Data_Rdy = 0;
 22441  00470C  0E00               	movlw	0
 22442  00470E  6E4C               	movwf	_RS232_Out_Data_Rdy,c
 22443  004710                     l886:
 22444                           
 22445                           ;USBapp.c: 186: }
 22446                           ;USBapp.c: 189: if ((eusartRxCount))
 22447  004710  5053               	movf	_eusartRxCount,w,c	;volatile
 22448  004712  B4D8               	btfsc	status,2,c
 22449  004714  D024               	goto	l14514
 22450                           
 22451                           ;USBapp.c: 190: {
 22452                           ;USBapp.c: 191: if(USBapp_getrxByteFlag() && (NextUSBOut < (64 - 1)))
 22453  004716  ECB2  F035         	call	_USBapp_getrxByteFlag	;wreg free
 22454  00471A  0900               	iorlw	0
 22455  00471C  B4D8               	btfsc	status,2,c
 22456  00471E  D01F               	goto	l14514
 22457  004720  0E3F               	movlw	63
 22458  004722  604B               	cpfslt	_NextUSBOut,c
 22459  004724  D01C               	goto	l14514
 22460                           
 22461                           ;USBapp.c: 192: {
 22462                           ;USBapp.c: 193: __nop();
 22463  004726  F000               	nop	
 22464                           
 22465                           ;USBapp.c: 194: USB_Buffer[NextUSBOut] = EUSART_Read();
 22466  004728  ECE5  F031         	call	_EUSART_Read	;wreg free
 22467  00472C  0100               	movlb	0	; () banked
 22468  00472E  6F6D               	movwf	??_USBapp_DeviceCdcEmulatorHandler& (0+255),b
 22469  004730  504B               	movf	_NextUSBOut,w,c
 22470  004732  0D01               	mullw	1
 22471  004734  0E80               	movlw	low _USB_Buffer
 22472  004736  24F3               	addwf	prodl,w,c
 22473  004738  6ED9               	movwf	fsr2l,c
 22474  00473A  0E02               	movlw	high _USB_Buffer
 22475  00473C  20F4               	addwfc	prodh,w,c
 22476  00473E  6EDA               	movwf	fsr2h,c
 22477  004740  C06D  FFDF         	movff	??_USBapp_DeviceCdcEmulatorHandler,indf2
 22478                           
 22479                           ; BSR set to: 0
 22480                           ;USBapp.c: 195: ++NextUSBOut;
 22481  004744  2A4B               	incf	_NextUSBOut,f,c
 22482                           
 22483                           ; BSR set to: 0
 22484                           ;USBapp.c: 196: USB_Buffer[NextUSBOut] = 0;
 22485  004746  504B               	movf	_NextUSBOut,w,c
 22486  004748  0D01               	mullw	1
 22487  00474A  0E80               	movlw	low _USB_Buffer
 22488  00474C  24F3               	addwf	prodl,w,c
 22489  00474E  6ED9               	movwf	fsr2l,c
 22490  004750  0E02               	movlw	high _USB_Buffer
 22491  004752  20F4               	addwfc	prodh,w,c
 22492  004754  6EDA               	movwf	fsr2h,c
 22493  004756  0E00               	movlw	0
 22494  004758  6EDF               	movwf	indf2,c
 22495                           
 22496                           ; BSR set to: 0
 22497                           ;USBapp.c: 197: rxByteFlag = 0;
 22498  00475A  0E00               	movlw	0
 22499  00475C  6E56               	movwf	_rxByteFlag,c	;volatile
 22500  00475E                     l14514:
 22501                           
 22502                           ;USBapp.c: 198: }
 22503                           ;USBapp.c: 199: }
 22504                           ;USBapp.c: 203: if(((cdc_trf_state == 0)) && (NextUSBOut > 0))
 22505  00475E  5050               	movf	_cdc_trf_state,w,c
 22506  004760  A4D8               	btfss	status,2,c
 22507  004762  D011               	goto	l14524
 22508  004764  504B               	movf	_NextUSBOut,w,c
 22509  004766  B4D8               	btfsc	status,2,c
 22510  004768  D00E               	goto	l14524
 22511                           
 22512                           ;USBapp.c: 204: {
 22513                           ;USBapp.c: 205: putUSBUSART(&USB_Buffer[0], NextUSBOut);
 22514  00476A  0E80               	movlw	low _USB_Buffer
 22515  00476C  0100               	movlb	0	; () banked
 22516  00476E  6F60               	movwf	putUSBUSART@data& (0+255),b
 22517  004770  0E02               	movlw	high _USB_Buffer
 22518  004772  0100               	movlb	0	; () banked
 22519  004774  6F61               	movwf	(putUSBUSART@data+1)& (0+255),b
 22520  004776  C04B  F062         	movff	_NextUSBOut,putUSBUSART@length
 22521  00477A  EC81  F034         	call	_putUSBUSART	;wreg free
 22522                           
 22523                           ;USBapp.c: 206: MOTEapp_setResponseReady();
 22524  00477E  ECA5  F035         	call	_MOTEapp_setResponseReady	;wreg free
 22525                           
 22526                           ;USBapp.c: 207: NextUSBOut = 0;
 22527  004782  0E00               	movlw	0
 22528  004784  6E4B               	movwf	_NextUSBOut,c
 22529  004786                     l14524:
 22530                           
 22531                           ;USBapp.c: 208: }
 22532                           ;USBapp.c: 210: CDCTxService();
 22533  004786  ECFD  F019         	call	_CDCTxService	;wreg free
 22534  00478A  0012               	return		;funcret
 22535  00478C                     __end_of_USBapp_DeviceCdcEmulatorHandler:
 22536                           	opt stack 0
 22537                           tblptru	equ	0xFF8
 22538                           tblptrh	equ	0xFF7
 22539                           tblptrl	equ	0xFF6
 22540                           tablat	equ	0xFF5
 22541                           prodh	equ	0xFF4
 22542                           prodl	equ	0xFF3
 22543                           intcon	equ	0xFF2
 22544                           intcon3	equ	0xFF0
 22545                           indf0	equ	0xFEF
 22546                           postinc0	equ	0xFEE
 22547                           fsr0h	equ	0xFEA
 22548                           fsr0l	equ	0xFE9
 22549                           wreg	equ	0xFE8
 22550                           indf1	equ	0xFE7
 22551                           postdec1	equ	0xFE5
 22552                           fsr1h	equ	0xFE2
 22553                           fsr1l	equ	0xFE1
 22554                           indf2	equ	0xFDF
 22555                           fsr2h	equ	0xFDA
 22556                           fsr2l	equ	0xFD9
 22557                           status	equ	0xFD8
 22558                           
 22559 ;; *************** function _putUSBUSART *****************
 22560 ;; Defined at:
 22561 ;;		line 503 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 22562 ;; Parameters:    Size  Location     Type
 22563 ;;  data            2    0[BANK0 ] PTR unsigned char 
 22564 ;;		 -> USB_Buffer(64), 
 22565 ;;  length          1    2[BANK0 ] unsigned char 
 22566 ;; Auto vars:     Size  Location     Type
 22567 ;;		None
 22568 ;; Return value:  Size  Location     Type
 22569 ;;		None               void
 22570 ;; Registers used:
 22571 ;;		wreg, status,2, status,0
 22572 ;; Tracked objects:
 22573 ;;		On entry : 0/0
 22574 ;;		On exit  : 0/0
 22575 ;;		Unchanged: 0/0
 22576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22577 ;;      Params:         0       3       0       0       0       0       0       0       0
 22578 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22579 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22580 ;;      Totals:         0       3       0       0       0       0       0       0       0
 22581 ;;Total ram usage:        3 bytes
 22582 ;; Hardware stack levels used:    1
 22583 ;; Hardware stack levels required when called:   11
 22584 ;; This function calls:
 22585 ;;		Nothing
 22586 ;; This function is called by:
 22587 ;;		_USBapp_DeviceCdcEmulatorHandler
 22588 ;; This function uses a non-reentrant model
 22589 ;;
 22590                           
 22591                           	psect	text78
 22592  006902                     __ptext78:
 22593                           	opt stack 0
 22594  006902                     _putUSBUSART:
 22595                           	opt stack 17
 22596                           
 22597                           ;usb_device_cdc.c: 528: {PIE3bits.USBIE = 0;};
 22598                           
 22599                           ;incstack = 0
 22600  006902  94A3               	bcf	4003,2,c	;volatile
 22601                           
 22602                           ;usb_device_cdc.c: 529: if(cdc_trf_state == 0)
 22603  006904  5050               	movf	_cdc_trf_state,w,c
 22604  006906  A4D8               	btfss	status,2,c
 22605  006908  D00B               	goto	l13414
 22606                           
 22607                           ;usb_device_cdc.c: 530: {
 22608                           ;usb_device_cdc.c: 531: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 22609  00690A  C060  F155         	movff	putUSBUSART@data,_pCDCSrc
 22610  00690E  C061  F156         	movff	putUSBUSART@data+1,_pCDCSrc+1
 22611  006912  C062  F0DA         	movff	putUSBUSART@length,_cdc_tx_len
 22612  006916  0E01               	movlw	1
 22613  006918  0100               	movlb	0	; () banked
 22614  00691A  6FD8               	movwf	_cdc_mem_type& (0+255),b
 22615                           
 22616                           ; BSR set to: 0
 22617  00691C  0E01               	movlw	1
 22618  00691E  6E50               	movwf	_cdc_trf_state,c
 22619  006920                     l13414:
 22620                           
 22621                           ;usb_device_cdc.c: 532: }
 22622                           ;usb_device_cdc.c: 533: {PIE3bits.USBIE = 1;};
 22623  006920  84A3               	bsf	4003,2,c	;volatile
 22624  006922  0012               	return		;funcret
 22625  006924                     __end_of_putUSBUSART:
 22626                           	opt stack 0
 22627                           tblptru	equ	0xFF8
 22628                           tblptrh	equ	0xFF7
 22629                           tblptrl	equ	0xFF6
 22630                           tablat	equ	0xFF5
 22631                           prodh	equ	0xFF4
 22632                           prodl	equ	0xFF3
 22633                           intcon	equ	0xFF2
 22634                           intcon3	equ	0xFF0
 22635                           indf0	equ	0xFEF
 22636                           postinc0	equ	0xFEE
 22637                           fsr0h	equ	0xFEA
 22638                           fsr0l	equ	0xFE9
 22639                           wreg	equ	0xFE8
 22640                           indf1	equ	0xFE7
 22641                           postdec1	equ	0xFE5
 22642                           fsr1h	equ	0xFE2
 22643                           fsr1l	equ	0xFE1
 22644                           indf2	equ	0xFDF
 22645                           fsr2h	equ	0xFDA
 22646                           fsr2l	equ	0xFD9
 22647                           status	equ	0xFD8
 22648                           
 22649 ;; *************** function _getsUSBUSART *****************
 22650 ;; Defined at:
 22651 ;;		line 432 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 22652 ;; Parameters:    Size  Location     Type
 22653 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 22654 ;;		 -> USB_Buffer(64), 
 22655 ;;  len             1    9[BANK0 ] unsigned char 
 22656 ;; Auto vars:     Size  Location     Type
 22657 ;;		None
 22658 ;; Return value:  Size  Location     Type
 22659 ;;                  1    wreg      unsigned char 
 22660 ;; Registers used:
 22661 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22662 ;; Tracked objects:
 22663 ;;		On entry : 0/0
 22664 ;;		On exit  : 0/0
 22665 ;;		Unchanged: 0/0
 22666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22667 ;;      Params:         0       3       0       0       0       0       0       0       0
 22668 ;;      Locals:         0       2       0       0       0       0       0       0       0
 22669 ;;      Temps:          0       1       0       0       0       0       0       0       0
 22670 ;;      Totals:         0       6       0       0       0       0       0       0       0
 22671 ;;Total ram usage:        6 bytes
 22672 ;; Hardware stack levels used:    1
 22673 ;; Hardware stack levels required when called:   12
 22674 ;; This function calls:
 22675 ;;		_USBTransferOnePacket
 22676 ;; This function is called by:
 22677 ;;		_USBapp_DeviceCdcEmulatorHandler
 22678 ;; This function uses a non-reentrant model
 22679 ;;
 22680                           
 22681                           	psect	text79
 22682  0045C2                     __ptext79:
 22683                           	opt stack 0
 22684  0045C2                     _getsUSBUSART:
 22685                           	opt stack 16
 22686                           
 22687                           ;usb_device_cdc.c: 434: cdc_rx_len = 0;
 22688                           
 22689                           ;incstack = 0
 22690  0045C2  0E00               	movlw	0
 22691  0045C4  0100               	movlb	0	; () banked
 22692  0045C6  6FD9               	movwf	_cdc_rx_len& (0+255),b
 22693                           
 22694                           ; BSR set to: 0
 22695                           ;usb_device_cdc.c: 436: if(!(CDCDataOutHandle==0?0:((volatile BDT_ENTRY*)CDCDataOutHandl
      +                          e)->STAT.UOWN))
 22696  0045C8  0100               	movlb	0	; () banked
 22697  0045CA  51C1               	movf	_CDCDataOutHandle& (0+255),w,b
 22698  0045CC  0100               	movlb	0	; () banked
 22699  0045CE  11C2               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 22700  0045D0  B4D8               	btfsc	status,2,c
 22701  0045D2  D013               	goto	l13376
 22702                           
 22703                           ; BSR set to: 0
 22704  0045D4  C0C1  FFD9         	movff	_CDCDataOutHandle,fsr2l
 22705  0045D8  C0C2  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 22706  0045DC  0100               	movlb	0	; () banked
 22707  0045DE  AEDF               	btfss	indf2,7,c
 22708  0045E0  D004               	goto	u12580
 22709  0045E2  0100               	movlb	0	; () banked
 22710  0045E4  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 22711  0045E6  2B6A               	incf	??_getsUSBUSART& (0+255),f,b
 22712  0045E8  D002               	goto	u12588
 22713  0045EA                     u12580:
 22714  0045EA  0100               	movlb	0	; () banked
 22715  0045EC  6B6A               	clrf	??_getsUSBUSART& (0+255),b
 22716  0045EE                     u12588:
 22717  0045EE  0100               	movlb	0	; () banked
 22718  0045F0  516A               	movf	??_getsUSBUSART& (0+255),w,b
 22719  0045F2  0100               	movlb	0	; () banked
 22720  0045F4  6F6B               	movwf	_getsUSBUSART$6490& (0+255),b
 22721  0045F6  6B6C               	clrf	(_getsUSBUSART$6490+1)& (0+255),b
 22722  0045F8  D005               	goto	l13378
 22723  0045FA                     l13376:
 22724                           
 22725                           ; BSR set to: 0
 22726  0045FA  0E00               	movlw	0
 22727  0045FC  0100               	movlb	0	; () banked
 22728  0045FE  6F6C               	movwf	(_getsUSBUSART$6490+1)& (0+255),b
 22729  004600  0E00               	movlw	0
 22730  004602  6F6B               	movwf	_getsUSBUSART$6490& (0+255),b
 22731  004604                     l13378:
 22732                           
 22733                           ; BSR set to: 0
 22734  004604  0100               	movlb	0	; () banked
 22735  004606  516B               	movf	_getsUSBUSART$6490& (0+255),w,b
 22736  004608  0100               	movlb	0	; () banked
 22737  00460A  116C               	iorwf	(_getsUSBUSART$6490+1)& (0+255),w,b
 22738  00460C  A4D8               	btfss	status,2,c
 22739  00460E  D04B               	goto	l13394
 22740                           
 22741                           ; BSR set to: 0
 22742                           ;usb_device_cdc.c: 437: {
 22743                           ;usb_device_cdc.c: 442: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 22744  004610  0100               	movlb	0	; () banked
 22745  004612  EE20 F001          	lfsr	2,1
 22746  004616  51C1               	movf	_CDCDataOutHandle& (0+255),w,b
 22747  004618  26D9               	addwf	fsr2l,f,c
 22748  00461A  51C2               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 22749  00461C  22DA               	addwfc	fsr2h,f,c
 22750  00461E  0100               	movlb	0	; () banked
 22751  004620  5169               	movf	getsUSBUSART@len& (0+255),w,b
 22752  004622  5CDE               	subwf	postinc2,w,c
 22753  004624  B0D8               	btfsc	status,0,c
 22754  004626  D00A               	goto	l13384
 22755                           
 22756                           ; BSR set to: 0
 22757                           ;usb_device_cdc.c: 443: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 22758  004628  0100               	movlb	0	; () banked
 22759  00462A  EE20 F001          	lfsr	2,1
 22760  00462E  51C1               	movf	_CDCDataOutHandle& (0+255),w,b
 22761  004630  26D9               	addwf	fsr2l,f,c
 22762  004632  51C2               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 22763  004634  22DA               	addwfc	fsr2h,f,c
 22764  004636  50DF               	movf	indf2,w,c
 22765  004638  0100               	movlb	0	; () banked
 22766  00463A  6F69               	movwf	getsUSBUSART@len& (0+255),b
 22767  00463C                     l13384:
 22768                           
 22769                           ; BSR set to: 0
 22770                           ;usb_device_cdc.c: 448: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 22771  00463C  0E00               	movlw	0
 22772  00463E  0100               	movlb	0	; () banked
 22773  004640  6FD9               	movwf	_cdc_rx_len& (0+255),b
 22774  004642  D018               	goto	l13390
 22775  004644                     l13386:
 22776                           
 22777                           ; BSR set to: 0
 22778                           ;usb_device_cdc.c: 449: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 22779  004644  0100               	movlb	0	; () banked
 22780  004646  51D9               	movf	_cdc_rx_len& (0+255),w,b
 22781  004648  0D01               	mullw	1
 22782  00464A  0E40               	movlw	64
 22783  00464C  24F3               	addwf	prodl,w,c
 22784  00464E  6ED9               	movwf	fsr2l,c
 22785  004650  0E05               	movlw	5
 22786  004652  20F4               	addwfc	prodh,w,c
 22787  004654  6EDA               	movwf	fsr2h,c
 22788  004656  0100               	movlb	0	; () banked
 22789  004658  51D9               	movf	_cdc_rx_len& (0+255),w,b
 22790  00465A  0D01               	mullw	1
 22791  00465C  50F3               	movf	prodl,w,c
 22792  00465E  0100               	movlb	0	; () banked
 22793  004660  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 22794  004662  6EE1               	movwf	fsr1l,c
 22795  004664  50F4               	movf	prodh,w,c
 22796  004666  0100               	movlb	0	; () banked
 22797  004668  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 22798  00466A  6EE2               	movwf	fsr1h,c
 22799  00466C  CFDF FFE7          	movff	indf2,indf1
 22800                           
 22801                           ; BSR set to: 0
 22802  004670  0100               	movlb	0	; () banked
 22803  004672  2BD9               	incf	_cdc_rx_len& (0+255),f,b
 22804  004674                     l13390:
 22805                           
 22806                           ; BSR set to: 0
 22807  004674  0100               	movlb	0	; () banked
 22808  004676  5169               	movf	getsUSBUSART@len& (0+255),w,b
 22809  004678  0100               	movlb	0	; () banked
 22810  00467A  5DD9               	subwf	_cdc_rx_len& (0+255),w,b
 22811  00467C  A0D8               	btfss	status,0,c
 22812  00467E  D7E2               	goto	l13386
 22813                           
 22814                           ; BSR set to: 0
 22815                           ;usb_device_cdc.c: 455: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 22816                           
 22817                           ; BSR set to: 0
 22818  004680  0E00               	movlw	0
 22819  004682  0100               	movlb	0	; () banked
 22820  004684  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 22821  004686  0E40               	movlw	64
 22822  004688  0100               	movlb	0	; () banked
 22823  00468A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 22824  00468C  0E05               	movlw	5
 22825  00468E  0100               	movlb	0	; () banked
 22826  004690  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 22827  004692  0E40               	movlw	64
 22828  004694  0100               	movlb	0	; () banked
 22829  004696  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 22830  004698  0E02               	movlw	2
 22831  00469A  ECF0  F025         	call	_USBTransferOnePacket
 22832  00469E  C060  F0C1         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 22833  0046A2  C061  F0C2         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 22834  0046A6                     l13394:
 22835                           
 22836                           ;usb_device_cdc.c: 457: }
 22837                           ;usb_device_cdc.c: 459: return cdc_rx_len;
 22838  0046A6  0100               	movlb	0	; () banked
 22839  0046A8  51D9               	movf	_cdc_rx_len& (0+255),w,b
 22840  0046AA  0012               	return	
 22841  0046AC                     __end_of_getsUSBUSART:
 22842                           	opt stack 0
 22843                           tblptru	equ	0xFF8
 22844                           tblptrh	equ	0xFF7
 22845                           tblptrl	equ	0xFF6
 22846                           tablat	equ	0xFF5
 22847                           prodh	equ	0xFF4
 22848                           prodl	equ	0xFF3
 22849                           intcon	equ	0xFF2
 22850                           intcon3	equ	0xFF0
 22851                           indf0	equ	0xFEF
 22852                           postinc0	equ	0xFEE
 22853                           fsr0h	equ	0xFEA
 22854                           fsr0l	equ	0xFE9
 22855                           wreg	equ	0xFE8
 22856                           indf1	equ	0xFE7
 22857                           postdec1	equ	0xFE5
 22858                           fsr1h	equ	0xFE2
 22859                           fsr1l	equ	0xFE1
 22860                           indf2	equ	0xFDF
 22861                           postinc2	equ	0xFDE
 22862                           fsr2h	equ	0xFDA
 22863                           fsr2l	equ	0xFD9
 22864                           status	equ	0xFD8
 22865                           
 22866 ;; *************** function _USBapp_getrxByteFlag *****************
 22867 ;; Defined at:
 22868 ;;		line 268 in file "../Includes/Board/USBapp.c"
 22869 ;; Parameters:    Size  Location     Type
 22870 ;;		None
 22871 ;; Auto vars:     Size  Location     Type
 22872 ;;		None
 22873 ;; Return value:  Size  Location     Type
 22874 ;;                  1    wreg      unsigned char 
 22875 ;; Registers used:
 22876 ;;		wreg, status,2
 22877 ;; Tracked objects:
 22878 ;;		On entry : 0/0
 22879 ;;		On exit  : 0/0
 22880 ;;		Unchanged: 0/0
 22881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22882 ;;      Params:         0       0       0       0       0       0       0       0       0
 22883 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22884 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22885 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22886 ;;Total ram usage:        0 bytes
 22887 ;; Hardware stack levels used:    1
 22888 ;; Hardware stack levels required when called:   11
 22889 ;; This function calls:
 22890 ;;		Nothing
 22891 ;; This function is called by:
 22892 ;;		_USBapp_DeviceCdcEmulatorHandler
 22893 ;; This function uses a non-reentrant model
 22894 ;;
 22895                           
 22896                           	psect	text80
 22897  006B64                     __ptext80:
 22898                           	opt stack 0
 22899  006B64                     _USBapp_getrxByteFlag:
 22900                           	opt stack 17
 22901                           
 22902                           ;USBapp.c: 270: return rxByteFlag;
 22903                           
 22904                           ; BSR set to: 0
 22905                           ;incstack = 0
 22906  006B64  5056               	movf	_rxByteFlag,w,c	;volatile
 22907  006B66  0012               	return	
 22908  006B68                     __end_of_USBapp_getrxByteFlag:
 22909                           	opt stack 0
 22910                           tblptru	equ	0xFF8
 22911                           tblptrh	equ	0xFF7
 22912                           tblptrl	equ	0xFF6
 22913                           tablat	equ	0xFF5
 22914                           prodh	equ	0xFF4
 22915                           prodl	equ	0xFF3
 22916                           intcon	equ	0xFF2
 22917                           intcon3	equ	0xFF0
 22918                           indf0	equ	0xFEF
 22919                           postinc0	equ	0xFEE
 22920                           fsr0h	equ	0xFEA
 22921                           fsr0l	equ	0xFE9
 22922                           wreg	equ	0xFE8
 22923                           indf1	equ	0xFE7
 22924                           postdec1	equ	0xFE5
 22925                           fsr1h	equ	0xFE2
 22926                           fsr1l	equ	0xFE1
 22927                           indf2	equ	0xFDF
 22928                           postinc2	equ	0xFDE
 22929                           fsr2h	equ	0xFDA
 22930                           fsr2l	equ	0xFD9
 22931                           status	equ	0xFD8
 22932                           
 22933 ;; *************** function _MOTEapp_setResponseReady *****************
 22934 ;; Defined at:
 22935 ;;		line 1165 in file "../Includes/Board/MOTEapp.c"
 22936 ;; Parameters:    Size  Location     Type
 22937 ;;		None
 22938 ;; Auto vars:     Size  Location     Type
 22939 ;;		None
 22940 ;; Return value:  Size  Location     Type
 22941 ;;		None               void
 22942 ;; Registers used:
 22943 ;;		wreg, status,2
 22944 ;; Tracked objects:
 22945 ;;		On entry : 0/0
 22946 ;;		On exit  : 0/0
 22947 ;;		Unchanged: 0/0
 22948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 22949 ;;      Params:         0       0       0       0       0       0       0       0       0
 22950 ;;      Locals:         0       0       0       0       0       0       0       0       0
 22951 ;;      Temps:          0       0       0       0       0       0       0       0       0
 22952 ;;      Totals:         0       0       0       0       0       0       0       0       0
 22953 ;;Total ram usage:        0 bytes
 22954 ;; Hardware stack levels used:    1
 22955 ;; Hardware stack levels required when called:   11
 22956 ;; This function calls:
 22957 ;;		Nothing
 22958 ;; This function is called by:
 22959 ;;		_USBapp_DeviceCdcEmulatorHandler
 22960 ;; This function uses a non-reentrant model
 22961 ;;
 22962                           
 22963                           	psect	text81
 22964  006B4A                     __ptext81:
 22965                           	opt stack 0
 22966  006B4A                     _MOTEapp_setResponseReady:
 22967                           	opt stack 17
 22968                           
 22969                           ;MOTEapp.c: 1167: responseReady = 1;
 22970                           
 22971                           ;incstack = 0
 22972  006B4A  0E01               	movlw	1
 22973  006B4C  0100               	movlb	0	; () banked
 22974  006B4E  6FEB               	movwf	_responseReady& (0+255),b
 22975                           
 22976                           ; BSR set to: 0
 22977  006B50  0012               	return		;funcret
 22978  006B52                     __end_of_MOTEapp_setResponseReady:
 22979                           	opt stack 0
 22980                           tblptru	equ	0xFF8
 22981                           tblptrh	equ	0xFF7
 22982                           tblptrl	equ	0xFF6
 22983                           tablat	equ	0xFF5
 22984                           prodh	equ	0xFF4
 22985                           prodl	equ	0xFF3
 22986                           intcon	equ	0xFF2
 22987                           intcon3	equ	0xFF0
 22988                           indf0	equ	0xFEF
 22989                           postinc0	equ	0xFEE
 22990                           fsr0h	equ	0xFEA
 22991                           fsr0l	equ	0xFE9
 22992                           wreg	equ	0xFE8
 22993                           indf1	equ	0xFE7
 22994                           postdec1	equ	0xFE5
 22995                           fsr1h	equ	0xFE2
 22996                           fsr1l	equ	0xFE1
 22997                           indf2	equ	0xFDF
 22998                           postinc2	equ	0xFDE
 22999                           fsr2h	equ	0xFDA
 23000                           fsr2l	equ	0xFD9
 23001                           status	equ	0xFD8
 23002                           
 23003 ;; *************** function _EUSART_Write *****************
 23004 ;; Defined at:
 23005 ;;		line 139 in file "../Includes/MccGenerated/eusart.c"
 23006 ;; Parameters:    Size  Location     Type
 23007 ;;  txData          1    wreg     unsigned char 
 23008 ;; Auto vars:     Size  Location     Type
 23009 ;;  txData          1    0[BANK0 ] unsigned char 
 23010 ;; Return value:  Size  Location     Type
 23011 ;;		None               void
 23012 ;; Registers used:
 23013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23014 ;; Tracked objects:
 23015 ;;		On entry : 0/0
 23016 ;;		On exit  : 0/0
 23017 ;;		Unchanged: 0/0
 23018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23019 ;;      Params:         0       0       0       0       0       0       0       0       0
 23020 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23021 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23022 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23023 ;;Total ram usage:        1 bytes
 23024 ;; Hardware stack levels used:    1
 23025 ;; Hardware stack levels required when called:   11
 23026 ;; This function calls:
 23027 ;;		Nothing
 23028 ;; This function is called by:
 23029 ;;		_EndLine
 23030 ;;		_sendCommand
 23031 ;;		_sendDataCommand
 23032 ;;		_USBapp_DeviceCdcEmulatorHandler
 23033 ;; This function uses a non-reentrant model
 23034 ;;
 23035                           
 23036                           	psect	text82
 23037  006410                     __ptext82:
 23038                           	opt stack 0
 23039  006410                     _EUSART_Write:
 23040                           	opt stack 14
 23041                           
 23042                           ; BSR set to: 0
 23043                           ;incstack = 0
 23044                           ;EUSART_Write@txData stored from wreg
 23045  006410  0100               	movlb	0	; () banked
 23046  006412  6F60               	movwf	EUSART_Write@txData& (0+255),b
 23047  006414                     l11866:
 23048  006414  5054               	movf	_eusartTxBufferRemaining,w,c	;volatile
 23049  006416  B4D8               	btfsc	status,2,c
 23050  006418  D7FD               	goto	l11866
 23051                           
 23052                           ;eusart.c: 143: }
 23053                           ;eusart.c: 145: if(0 == PIE1bits.TXIE)
 23054  00641A  B89D               	btfsc	3997,4,c	;volatile
 23055  00641C  D003               	goto	l1146
 23056                           
 23057                           ;eusart.c: 146: {
 23058                           ;eusart.c: 147: TXREG = txData;
 23059  00641E  C060  FFAD         	movff	EUSART_Write@txData,4013	;volatile
 23060                           
 23061                           ;eusart.c: 148: }
 23062  006422  D016               	goto	l11880
 23063  006424                     l1146:
 23064                           
 23065                           ;eusart.c: 149: else
 23066                           ;eusart.c: 150: {
 23067                           ;eusart.c: 151: PIE1bits.TXIE = 0;
 23068  006424  989D               	bcf	3997,4,c	;volatile
 23069                           
 23070                           ;eusart.c: 152: eusartTxBuffer[eusartTxHead++] = txData;
 23071  006426  0100               	movlb	0	; () banked
 23072  006428  51E1               	movf	_eusartTxHead& (0+255),w,b
 23073  00642A  0D01               	mullw	1
 23074  00642C  0E40               	movlw	low _eusartTxBuffer
 23075  00642E  24F3               	addwf	prodl,w,c
 23076  006430  6ED9               	movwf	fsr2l,c
 23077  006432  0E02               	movlw	high _eusartTxBuffer
 23078  006434  20F4               	addwfc	prodh,w,c
 23079  006436  6EDA               	movwf	fsr2h,c
 23080  006438  C060  FFDF         	movff	EUSART_Write@txData,indf2
 23081                           
 23082                           ; BSR set to: 0
 23083  00643C  0100               	movlb	0	; () banked
 23084  00643E  2BE1               	incf	_eusartTxHead& (0+255),f,b
 23085                           
 23086                           ; BSR set to: 0
 23087                           ;eusart.c: 153: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 23088  006440  0E3F               	movlw	63
 23089  006442  0100               	movlb	0	; () banked
 23090  006444  65E1               	cpfsgt	_eusartTxHead& (0+255),b
 23091  006446  D003               	goto	l11878
 23092                           
 23093                           ; BSR set to: 0
 23094                           ;eusart.c: 154: {
 23095                           ;eusart.c: 155: eusartTxHead = 0;
 23096  006448  0E00               	movlw	0
 23097  00644A  0100               	movlb	0	; () banked
 23098  00644C  6FE1               	movwf	_eusartTxHead& (0+255),b
 23099  00644E                     l11878:
 23100                           
 23101                           ; BSR set to: 0
 23102                           ;eusart.c: 156: }
 23103                           ;eusart.c: 157: eusartTxBufferRemaining--;
 23104  00644E  0654               	decf	_eusartTxBufferRemaining,f,c	;volatile
 23105  006450                     l11880:
 23106                           
 23107                           ;eusart.c: 158: }
 23108                           ;eusart.c: 159: PIE1bits.TXIE = 1;
 23109  006450  889D               	bsf	3997,4,c	;volatile
 23110  006452  0012               	return		;funcret
 23111  006454                     __end_of_EUSART_Write:
 23112                           	opt stack 0
 23113                           tblptru	equ	0xFF8
 23114                           tblptrh	equ	0xFF7
 23115                           tblptrl	equ	0xFF6
 23116                           tablat	equ	0xFF5
 23117                           prodh	equ	0xFF4
 23118                           prodl	equ	0xFF3
 23119                           intcon	equ	0xFF2
 23120                           intcon3	equ	0xFF0
 23121                           indf0	equ	0xFEF
 23122                           postinc0	equ	0xFEE
 23123                           fsr0h	equ	0xFEA
 23124                           fsr0l	equ	0xFE9
 23125                           wreg	equ	0xFE8
 23126                           indf1	equ	0xFE7
 23127                           postdec1	equ	0xFE5
 23128                           fsr1h	equ	0xFE2
 23129                           fsr1l	equ	0xFE1
 23130                           indf2	equ	0xFDF
 23131                           postinc2	equ	0xFDE
 23132                           fsr2h	equ	0xFDA
 23133                           fsr2l	equ	0xFD9
 23134                           status	equ	0xFD8
 23135                           
 23136 ;; *************** function _EUSART_Read *****************
 23137 ;; Defined at:
 23138 ;;		line 117 in file "../Includes/MccGenerated/eusart.c"
 23139 ;; Parameters:    Size  Location     Type
 23140 ;;		None
 23141 ;; Auto vars:     Size  Location     Type
 23142 ;;  readValue       1    0[BANK0 ] unsigned char 
 23143 ;; Return value:  Size  Location     Type
 23144 ;;                  1    wreg      unsigned char 
 23145 ;; Registers used:
 23146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23147 ;; Tracked objects:
 23148 ;;		On entry : 0/0
 23149 ;;		On exit  : 0/0
 23150 ;;		Unchanged: 0/0
 23151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23152 ;;      Params:         0       0       0       0       0       0       0       0       0
 23153 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23154 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23155 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23156 ;;Total ram usage:        1 bytes
 23157 ;; Hardware stack levels used:    1
 23158 ;; Hardware stack levels required when called:   11
 23159 ;; This function calls:
 23160 ;;		Nothing
 23161 ;; This function is called by:
 23162 ;;		_MOTEapp_getModuleResponse
 23163 ;;		_USBapp_DeviceCdcEmulatorHandler
 23164 ;; This function uses a non-reentrant model
 23165 ;;
 23166                           
 23167                           	psect	text83
 23168  0063CA                     __ptext83:
 23169                           	opt stack 0
 23170  0063CA                     _EUSART_Read:
 23171                           	opt stack 15
 23172                           
 23173                           ;eusart.c: 119: uint8_t readValue = 0;
 23174                           
 23175                           ;incstack = 0
 23176  0063CA  0E00               	movlw	0
 23177  0063CC  0100               	movlb	0	; () banked
 23178  0063CE  6F60               	movwf	EUSART_Read@readValue& (0+255),b
 23179                           
 23180                           ;eusart.c: 121: while(0 == eusartRxCount)
 23181  0063D0  D001               	goto	l11884
 23182  0063D2                     l1137:
 23183                           
 23184                           ;eusart.c: 122: {
 23185                           ;eusart.c: 123: LATAbits.LATA7 = 1;
 23186  0063D2  8E89               	bsf	3977,7,c	;volatile
 23187  0063D4                     l11884:
 23188  0063D4  5053               	movf	_eusartRxCount,w,c	;volatile
 23189  0063D6  B4D8               	btfsc	status,2,c
 23190  0063D8  D7FC               	goto	l1137
 23191                           
 23192                           ;eusart.c: 124: }
 23193                           ;eusart.c: 126: PIE1bits.RCIE = 0;
 23194  0063DA  9A9D               	bcf	3997,5,c	;volatile
 23195                           
 23196                           ;eusart.c: 128: readValue = eusartRxBuffer[eusartRxTail++];
 23197  0063DC  0100               	movlb	0	; () banked
 23198  0063DE  51E0               	movf	_eusartRxTail& (0+255),w,b
 23199  0063E0  0D01               	mullw	1
 23200  0063E2  0E00               	movlw	low _eusartRxBuffer
 23201  0063E4  24F3               	addwf	prodl,w,c
 23202  0063E6  6ED9               	movwf	fsr2l,c
 23203  0063E8  0E02               	movlw	high _eusartRxBuffer
 23204  0063EA  20F4               	addwfc	prodh,w,c
 23205  0063EC  6EDA               	movwf	fsr2h,c
 23206  0063EE  50DF               	movf	indf2,w,c
 23207  0063F0  0100               	movlb	0	; () banked
 23208  0063F2  6F60               	movwf	EUSART_Read@readValue& (0+255),b
 23209                           
 23210                           ; BSR set to: 0
 23211  0063F4  0100               	movlb	0	; () banked
 23212  0063F6  2BE0               	incf	_eusartRxTail& (0+255),f,b
 23213                           
 23214                           ; BSR set to: 0
 23215                           ;eusart.c: 129: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 23216  0063F8  0E3F               	movlw	63
 23217  0063FA  0100               	movlb	0	; () banked
 23218  0063FC  65E0               	cpfsgt	_eusartRxTail& (0+255),b
 23219  0063FE  D003               	goto	l11894
 23220                           
 23221                           ; BSR set to: 0
 23222                           ;eusart.c: 130: {
 23223                           ;eusart.c: 131: eusartRxTail = 0;
 23224  006400  0E00               	movlw	0
 23225  006402  0100               	movlb	0	; () banked
 23226  006404  6FE0               	movwf	_eusartRxTail& (0+255),b
 23227  006406                     l11894:
 23228                           
 23229                           ; BSR set to: 0
 23230                           ;eusart.c: 132: }
 23231                           ;eusart.c: 133: eusartRxCount--;
 23232  006406  0653               	decf	_eusartRxCount,f,c	;volatile
 23233                           
 23234                           ; BSR set to: 0
 23235                           ;eusart.c: 134: PIE1bits.RCIE = 1;
 23236  006408  8A9D               	bsf	3997,5,c	;volatile
 23237                           
 23238                           ; BSR set to: 0
 23239                           ;eusart.c: 136: return readValue;
 23240  00640A  0100               	movlb	0	; () banked
 23241  00640C  5160               	movf	EUSART_Read@readValue& (0+255),w,b
 23242  00640E  0012               	return	
 23243  006410                     __end_of_EUSART_Read:
 23244                           	opt stack 0
 23245                           tblptru	equ	0xFF8
 23246                           tblptrh	equ	0xFF7
 23247                           tblptrl	equ	0xFF6
 23248                           tablat	equ	0xFF5
 23249                           prodh	equ	0xFF4
 23250                           prodl	equ	0xFF3
 23251                           intcon	equ	0xFF2
 23252                           intcon3	equ	0xFF0
 23253                           indf0	equ	0xFEF
 23254                           postinc0	equ	0xFEE
 23255                           fsr0h	equ	0xFEA
 23256                           fsr0l	equ	0xFE9
 23257                           wreg	equ	0xFE8
 23258                           indf1	equ	0xFE7
 23259                           postdec1	equ	0xFE5
 23260                           fsr1h	equ	0xFE2
 23261                           fsr1l	equ	0xFE1
 23262                           indf2	equ	0xFDF
 23263                           postinc2	equ	0xFDE
 23264                           fsr2h	equ	0xFDA
 23265                           fsr2l	equ	0xFD9
 23266                           status	equ	0xFD8
 23267                           
 23268 ;; *************** function _CDCTxService *****************
 23269 ;; Defined at:
 23270 ;;		line 783 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 23271 ;; Parameters:    Size  Location     Type
 23272 ;;		None
 23273 ;; Auto vars:     Size  Location     Type
 23274 ;;  byte_to_send    1   11[BANK0 ] unsigned char 
 23275 ;;  i               1   10[BANK0 ] unsigned char 
 23276 ;; Return value:  Size  Location     Type
 23277 ;;		None               void
 23278 ;; Registers used:
 23279 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23280 ;; Tracked objects:
 23281 ;;		On entry : 0/0
 23282 ;;		On exit  : 0/0
 23283 ;;		Unchanged: 0/0
 23284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23285 ;;      Params:         0       0       0       0       0       0       0       0       0
 23286 ;;      Locals:         0       4       0       0       0       0       0       0       0
 23287 ;;      Temps:          0       1       0       0       0       0       0       0       0
 23288 ;;      Totals:         0       5       0       0       0       0       0       0       0
 23289 ;;Total ram usage:        5 bytes
 23290 ;; Hardware stack levels used:    1
 23291 ;; Hardware stack levels required when called:   12
 23292 ;; This function calls:
 23293 ;;		_USBTransferOnePacket
 23294 ;; This function is called by:
 23295 ;;		_USBapp_DeviceCdcEmulatorHandler
 23296 ;; This function uses a non-reentrant model
 23297 ;;
 23298                           
 23299                           	psect	text84
 23300  0033FA                     __ptext84:
 23301                           	opt stack 0
 23302  0033FA                     _CDCTxService:
 23303                           	opt stack 16
 23304                           
 23305                           ;usb_device_cdc.c: 785: uint8_t byte_to_send;
 23306                           ;usb_device_cdc.c: 786: uint8_t i;
 23307                           ;usb_device_cdc.c: 788: {PIE3bits.USBIE = 0;};
 23308                           
 23309                           ; BSR set to: 0
 23310                           ;incstack = 0
 23311  0033FA  94A3               	bcf	4003,2,c	;volatile
 23312                           
 23313                           ;usb_device_cdc.c: 790: {};
 23314                           ;usb_device_cdc.c: 792: if((CDCDataInHandle==0?0:((volatile BDT_ENTRY*)CDCDataInHandle)-
      +                          >STAT.UOWN))
 23315  0033FC  0100               	movlb	0	; () banked
 23316  0033FE  51BF               	movf	_CDCDataInHandle& (0+255),w,b
 23317  003400  0100               	movlb	0	; () banked
 23318  003402  11C0               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 23319  003404  B4D8               	btfsc	status,2,c
 23320  003406  D013               	goto	l13422
 23321                           
 23322                           ; BSR set to: 0
 23323  003408  C0BF  FFD9         	movff	_CDCDataInHandle,fsr2l
 23324  00340C  C0C0  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 23325  003410  0100               	movlb	0	; () banked
 23326  003412  AEDF               	btfss	indf2,7,c
 23327  003414  D004               	goto	u12640
 23328  003416  0100               	movlb	0	; () banked
 23329  003418  6B67               	clrf	??_CDCTxService& (0+255),b
 23330  00341A  2B67               	incf	??_CDCTxService& (0+255),f,b
 23331  00341C  D002               	goto	u12648
 23332  00341E                     u12640:
 23333  00341E  0100               	movlb	0	; () banked
 23334  003420  6B67               	clrf	??_CDCTxService& (0+255),b
 23335  003422                     u12648:
 23336  003422  0100               	movlb	0	; () banked
 23337  003424  5167               	movf	??_CDCTxService& (0+255),w,b
 23338  003426  0100               	movlb	0	; () banked
 23339  003428  6F68               	movwf	_CDCTxService$6538& (0+255),b
 23340  00342A  6B69               	clrf	(_CDCTxService$6538+1)& (0+255),b
 23341  00342C  D005               	goto	l13424
 23342  00342E                     l13422:
 23343                           
 23344                           ; BSR set to: 0
 23345  00342E  0E00               	movlw	0
 23346  003430  0100               	movlb	0	; () banked
 23347  003432  6F69               	movwf	(_CDCTxService$6538+1)& (0+255),b
 23348  003434  0E00               	movlw	0
 23349  003436  6F68               	movwf	_CDCTxService$6538& (0+255),b
 23350  003438                     l13424:
 23351                           
 23352                           ; BSR set to: 0
 23353  003438  0100               	movlb	0	; () banked
 23354  00343A  5168               	movf	_CDCTxService$6538& (0+255),w,b
 23355  00343C  0100               	movlb	0	; () banked
 23356  00343E  1169               	iorwf	(_CDCTxService$6538+1)& (0+255),w,b
 23357  003440  B4D8               	btfsc	status,2,c
 23358  003442  D002               	goto	l13428
 23359                           
 23360                           ; BSR set to: 0
 23361                           ;usb_device_cdc.c: 793: {
 23362                           ;usb_device_cdc.c: 794: {PIE3bits.USBIE = 1;};
 23363  003444  84A3               	bsf	4003,2,c	;volatile
 23364                           
 23365                           ;usb_device_cdc.c: 795: return;
 23366  003446  0012               	return	
 23367  003448                     l13428:
 23368                           
 23369                           ; BSR set to: 0
 23370                           ;usb_device_cdc.c: 796: }
 23371                           ;usb_device_cdc.c: 803: if(cdc_trf_state == 3)
 23372  003448  0E03               	movlw	3
 23373  00344A  1850               	xorwf	_cdc_trf_state,w,c
 23374  00344C  A4D8               	btfss	status,2,c
 23375  00344E  D002               	goto	l2076
 23376                           
 23377                           ; BSR set to: 0
 23378                           ;usb_device_cdc.c: 804: cdc_trf_state = 0;
 23379  003450  0E00               	movlw	0
 23380  003452  6E50               	movwf	_cdc_trf_state,c
 23381  003454                     l2076:
 23382                           
 23383                           ; BSR set to: 0
 23384                           ;usb_device_cdc.c: 809: if(cdc_trf_state == 0)
 23385  003454  5050               	movf	_cdc_trf_state,w,c
 23386  003456  A4D8               	btfss	status,2,c
 23387  003458  D002               	goto	l13434
 23388                           
 23389                           ; BSR set to: 0
 23390                           ;usb_device_cdc.c: 810: {
 23391                           ;usb_device_cdc.c: 811: {PIE3bits.USBIE = 1;};
 23392  00345A  84A3               	bsf	4003,2,c	;volatile
 23393                           
 23394                           ;usb_device_cdc.c: 812: return;
 23395  00345C  0012               	return	
 23396  00345E                     l13434:
 23397                           
 23398                           ; BSR set to: 0
 23399                           ;usb_device_cdc.c: 813: }
 23400                           ;usb_device_cdc.c: 818: if(cdc_trf_state == 2)
 23401  00345E  0E02               	movlw	2
 23402  003460  1850               	xorwf	_cdc_trf_state,w,c
 23403  003462  A4D8               	btfss	status,2,c
 23404  003464  D016               	goto	l13440
 23405                           
 23406                           ; BSR set to: 0
 23407                           ;usb_device_cdc.c: 819: {
 23408                           ;usb_device_cdc.c: 820: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 23409  003466  0E01               	movlw	1
 23410  003468  0100               	movlb	0	; () banked
 23411  00346A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 23412  00346C  0E00               	movlw	0
 23413  00346E  0100               	movlb	0	; () banked
 23414  003470  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 23415  003472  0E00               	movlw	0
 23416  003474  0100               	movlb	0	; () banked
 23417  003476  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 23418  003478  0E00               	movlw	0
 23419  00347A  0100               	movlb	0	; () banked
 23420  00347C  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 23421  00347E  0E02               	movlw	2
 23422  003480  ECF0  F025         	call	_USBTransferOnePacket
 23423  003484  C060  F0BF         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 23424  003488  C061  F0C0         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 23425                           
 23426                           ;usb_device_cdc.c: 822: cdc_trf_state = 3;
 23427  00348C  0E03               	movlw	3
 23428  00348E  6E50               	movwf	_cdc_trf_state,c
 23429                           
 23430                           ;usb_device_cdc.c: 823: }
 23431  003490  D06F               	goto	l13484
 23432  003492                     l13440:
 23433                           
 23434                           ;usb_device_cdc.c: 824: else if(cdc_trf_state == 1)
 23435  003492  0450               	decf	_cdc_trf_state,w,c
 23436  003494  A4D8               	btfss	status,2,c
 23437  003496  D06C               	goto	l13484
 23438                           
 23439                           ;usb_device_cdc.c: 825: {
 23440                           ;usb_device_cdc.c: 829: if(cdc_tx_len > sizeof(cdc_data_tx))
 23441  003498  0E40               	movlw	64
 23442  00349A  0100               	movlb	0	; () banked
 23443  00349C  65DA               	cpfsgt	_cdc_tx_len& (0+255),b
 23444  00349E  D004               	goto	l2081
 23445                           
 23446                           ; BSR set to: 0
 23447                           ;usb_device_cdc.c: 830: byte_to_send = sizeof(cdc_data_tx);
 23448  0034A0  0E40               	movlw	64
 23449  0034A2  0100               	movlb	0	; () banked
 23450  0034A4  6F6B               	movwf	CDCTxService@byte_to_send& (0+255),b
 23451  0034A6  D002               	goto	l13446
 23452  0034A8                     l2081:
 23453                           
 23454                           ; BSR set to: 0
 23455                           ;usb_device_cdc.c: 831: else
 23456                           ;usb_device_cdc.c: 832: byte_to_send = cdc_tx_len;
 23457  0034A8  C0DA  F06B         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 23458  0034AC                     l13446:
 23459                           
 23460                           ; BSR set to: 0
 23461                           ;usb_device_cdc.c: 837: cdc_tx_len = cdc_tx_len - byte_to_send;
 23462  0034AC  0100               	movlb	0	; () banked
 23463  0034AE  516B               	movf	CDCTxService@byte_to_send& (0+255),w,b
 23464  0034B0  0800               	sublw	0
 23465  0034B2  0100               	movlb	0	; () banked
 23466  0034B4  25DA               	addwf	_cdc_tx_len& (0+255),w,b
 23467  0034B6  0100               	movlb	0	; () banked
 23468  0034B8  6FDA               	movwf	_cdc_tx_len& (0+255),b
 23469                           
 23470                           ;usb_device_cdc.c: 839: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 23471  0034BA  0E00               	movlw	0
 23472  0034BC  0101               	movlb	1	; () banked
 23473  0034BE  6F52               	movwf	_pCDCDst& (0+255),b
 23474  0034C0  0E05               	movlw	5
 23475  0034C2  0101               	movlb	1	; () banked
 23476  0034C4  6F53               	movwf	(_pCDCDst+1)& (0+255),b
 23477                           
 23478                           ; BSR set to: 1
 23479                           ;usb_device_cdc.c: 841: i = byte_to_send;
 23480  0034C6  C06B  F06A         	movff	CDCTxService@byte_to_send,CDCTxService@i
 23481                           
 23482                           ; BSR set to: 1
 23483                           ;usb_device_cdc.c: 842: if(cdc_mem_type == 0x00)
 23484  0034CA  0100               	movlb	0	; () banked
 23485  0034CC  51D8               	movf	_cdc_mem_type& (0+255),w,b
 23486  0034CE  B4D8               	btfsc	status,2,c
 23487  0034D0  D013               	goto	l13462
 23488  0034D2  D02A               	goto	l13472
 23489  0034D4                     l13454:
 23490                           
 23491                           ; BSR set to: 0
 23492                           ;usb_device_cdc.c: 845: {
 23493                           ;usb_device_cdc.c: 846: *pCDCDst.bRam = *pCDCSrc.bRom;
 23494  0034D4  C155  FFD9         	movff	_pCDCSrc,fsr2l
 23495  0034D8  C156  FFDA         	movff	_pCDCSrc+1,fsr2h
 23496  0034DC  C152  FFE1         	movff	_pCDCDst,fsr1l
 23497  0034E0  C153  FFE2         	movff	_pCDCDst+1,fsr1h
 23498  0034E4  CFDF FFE7          	movff	indf2,indf1
 23499                           
 23500                           ; BSR set to: 0
 23501                           ;usb_device_cdc.c: 847: pCDCDst.bRam++;
 23502  0034E8  0101               	movlb	1	; () banked
 23503  0034EA  4B52               	infsnz	_pCDCDst& (0+255),f,b
 23504  0034EC  2B53               	incf	(_pCDCDst+1)& (0+255),f,b
 23505                           
 23506                           ; BSR set to: 1
 23507                           ;usb_device_cdc.c: 848: pCDCSrc.bRom++;
 23508  0034EE  0101               	movlb	1	; () banked
 23509  0034F0  4B55               	infsnz	_pCDCSrc& (0+255),f,b
 23510  0034F2  2B56               	incf	(_pCDCSrc+1)& (0+255),f,b
 23511                           
 23512                           ; BSR set to: 1
 23513                           ;usb_device_cdc.c: 849: i--;
 23514  0034F4  0100               	movlb	0	; () banked
 23515  0034F6  076A               	decf	CDCTxService@i& (0+255),f,b
 23516  0034F8                     l13462:
 23517                           
 23518                           ; BSR set to: 0
 23519  0034F8  0100               	movlb	0	; () banked
 23520  0034FA  516A               	movf	CDCTxService@i& (0+255),w,b
 23521  0034FC  0100               	movlb	0	; () banked
 23522  0034FE  B4D8               	btfsc	status,2,c
 23523  003500  D018               	goto	l13474
 23524  003502  D7E8               	goto	l13454
 23525  003504                     l13464:
 23526                           
 23527                           ; BSR set to: 0
 23528                           ;usb_device_cdc.c: 855: {
 23529                           ;usb_device_cdc.c: 856: *pCDCDst.bRam = *pCDCSrc.bRam;
 23530  003504  C155  FFD9         	movff	_pCDCSrc,fsr2l
 23531  003508  C156  FFDA         	movff	_pCDCSrc+1,fsr2h
 23532  00350C  C152  FFE1         	movff	_pCDCDst,fsr1l
 23533  003510  C153  FFE2         	movff	_pCDCDst+1,fsr1h
 23534  003514  CFDF FFE7          	movff	indf2,indf1
 23535                           
 23536                           ; BSR set to: 0
 23537                           ;usb_device_cdc.c: 857: pCDCDst.bRam++;
 23538  003518  0101               	movlb	1	; () banked
 23539  00351A  4B52               	infsnz	_pCDCDst& (0+255),f,b
 23540  00351C  2B53               	incf	(_pCDCDst+1)& (0+255),f,b
 23541                           
 23542                           ; BSR set to: 1
 23543                           ;usb_device_cdc.c: 858: pCDCSrc.bRam++;
 23544  00351E  0101               	movlb	1	; () banked
 23545  003520  4B55               	infsnz	_pCDCSrc& (0+255),f,b
 23546  003522  2B56               	incf	(_pCDCSrc+1)& (0+255),f,b
 23547                           
 23548                           ; BSR set to: 1
 23549                           ;usb_device_cdc.c: 859: i--;
 23550  003524  0100               	movlb	0	; () banked
 23551  003526  076A               	decf	CDCTxService@i& (0+255),f,b
 23552  003528                     l13472:
 23553                           
 23554                           ; BSR set to: 0
 23555  003528  0100               	movlb	0	; () banked
 23556  00352A  516A               	movf	CDCTxService@i& (0+255),w,b
 23557  00352C  0100               	movlb	0	; () banked
 23558  00352E  A4D8               	btfss	status,2,c
 23559  003530  D7E9               	goto	l13464
 23560  003532                     l13474:
 23561                           
 23562                           ; BSR set to: 0
 23563                           ;usb_device_cdc.c: 860: }
 23564                           ;usb_device_cdc.c: 861: }
 23565                           ;usb_device_cdc.c: 867: if(cdc_tx_len == 0)
 23566  003532  0100               	movlb	0	; () banked
 23567  003534  51DA               	movf	_cdc_tx_len& (0+255),w,b
 23568  003536  A4D8               	btfss	status,2,c
 23569  003538  D009               	goto	l13482
 23570                           
 23571                           ; BSR set to: 0
 23572                           ;usb_device_cdc.c: 868: {
 23573                           ;usb_device_cdc.c: 869: if(byte_to_send == 64)
 23574  00353A  0E40               	movlw	64
 23575  00353C  0100               	movlb	0	; () banked
 23576  00353E  196B               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 23577  003540  A4D8               	btfss	status,2,c
 23578  003542  D002               	goto	l13480
 23579                           
 23580                           ; BSR set to: 0
 23581                           ;usb_device_cdc.c: 870: cdc_trf_state = 2;
 23582  003544  0E02               	movlw	2
 23583  003546  D001               	goto	L22
 23584  003548                     l13480:
 23585                           
 23586                           ; BSR set to: 0
 23587                           ;usb_device_cdc.c: 871: else
 23588                           ;usb_device_cdc.c: 872: cdc_trf_state = 3;
 23589  003548  0E03               	movlw	3
 23590  00354A                     L22:
 23591  00354A  6E50               	movwf	_cdc_trf_state,c
 23592  00354C                     l13482:
 23593                           
 23594                           ; BSR set to: 0
 23595                           ;usb_device_cdc.c: 873: }
 23596                           ;usb_device_cdc.c: 874: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 23597  00354C  0E01               	movlw	1
 23598  00354E  0100               	movlb	0	; () banked
 23599  003550  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 23600  003552  0E00               	movlw	0
 23601  003554  0100               	movlb	0	; () banked
 23602  003556  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 23603  003558  0E05               	movlw	5
 23604  00355A  0100               	movlb	0	; () banked
 23605  00355C  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 23606  00355E  C06B  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 23607  003562  0E02               	movlw	2
 23608  003564  ECF0  F025         	call	_USBTransferOnePacket
 23609  003568  C060  F0BF         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 23610  00356C  C061  F0C0         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 23611  003570                     l13484:
 23612                           
 23613                           ;usb_device_cdc.c: 876: }
 23614                           ;usb_device_cdc.c: 878: {PIE3bits.USBIE = 1;};
 23615  003570  84A3               	bsf	4003,2,c	;volatile
 23616  003572  0012               	return		;funcret
 23617  003574                     __end_of_CDCTxService:
 23618                           	opt stack 0
 23619                           tblptru	equ	0xFF8
 23620                           tblptrh	equ	0xFF7
 23621                           tblptrl	equ	0xFF6
 23622                           tablat	equ	0xFF5
 23623                           prodh	equ	0xFF4
 23624                           prodl	equ	0xFF3
 23625                           intcon	equ	0xFF2
 23626                           intcon3	equ	0xFF0
 23627                           indf0	equ	0xFEF
 23628                           postinc0	equ	0xFEE
 23629                           fsr0h	equ	0xFEA
 23630                           fsr0l	equ	0xFE9
 23631                           wreg	equ	0xFE8
 23632                           indf1	equ	0xFE7
 23633                           postdec1	equ	0xFE5
 23634                           fsr1h	equ	0xFE2
 23635                           fsr1l	equ	0xFE1
 23636                           indf2	equ	0xFDF
 23637                           postinc2	equ	0xFDE
 23638                           fsr2h	equ	0xFDA
 23639                           fsr2l	equ	0xFD9
 23640                           status	equ	0xFD8
 23641                           
 23642 ;; *************** function _USBTransferOnePacket *****************
 23643 ;; Defined at:
 23644 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 23645 ;; Parameters:    Size  Location     Type
 23646 ;;  ep              1    wreg     unsigned char 
 23647 ;;  dir             1    0[BANK0 ] unsigned char 
 23648 ;;  data            2    1[BANK0 ] PTR unsigned char 
 23649 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 23650 ;;  len             1    3[BANK0 ] unsigned char 
 23651 ;; Auto vars:     Size  Location     Type
 23652 ;;  ep              1    4[BANK0 ] unsigned char 
 23653 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 23654 ;;		 -> BDT(48), NULL(0), 
 23655 ;; Return value:  Size  Location     Type
 23656 ;;                  2    0[BANK0 ] PTR void 
 23657 ;; Registers used:
 23658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23659 ;; Tracked objects:
 23660 ;;		On entry : 0/0
 23661 ;;		On exit  : 0/0
 23662 ;;		Unchanged: 0/0
 23663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23664 ;;      Params:         0       4       0       0       0       0       0       0       0
 23665 ;;      Locals:         0       3       0       0       0       0       0       0       0
 23666 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23667 ;;      Totals:         0       7       0       0       0       0       0       0       0
 23668 ;;Total ram usage:        7 bytes
 23669 ;; Hardware stack levels used:    1
 23670 ;; Hardware stack levels required when called:   11
 23671 ;; This function calls:
 23672 ;;		Nothing
 23673 ;; This function is called by:
 23674 ;;		_getsUSBUSART
 23675 ;;		_CDCTxService
 23676 ;;		_USBCDCEventHandler
 23677 ;; This function uses a non-reentrant model
 23678 ;;
 23679                           
 23680                           	psect	text85
 23681  004BE0                     __ptext85:
 23682                           	opt stack 0
 23683  004BE0                     _USBTransferOnePacket:
 23684                           	opt stack 16
 23685                           
 23686                           ;incstack = 0
 23687                           ;USBTransferOnePacket@ep stored from wreg
 23688  004BE0  0100               	movlb	0	; () banked
 23689  004BE2  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 23690                           
 23691                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 23692                           ;usb_device.c: 762: if(dir != 0)
 23693  004BE4  0100               	movlb	0	; () banked
 23694  004BE6  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 23695  004BE8  0100               	movlb	0	; () banked
 23696  004BEA  B4D8               	btfsc	status,2,c
 23697  004BEC  D008               	goto	l12180
 23698                           
 23699                           ; BSR set to: 0
 23700                           ;usb_device.c: 763: {
 23701                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 23702  004BEE  0100               	movlb	0	; () banked
 23703  004BF0  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 23704  004BF2  0D02               	mullw	2
 23705  004BF4  0E3C               	movlw	low _pBDTEntryIn
 23706  004BF6  24F3               	addwf	prodl,w,c
 23707  004BF8  6ED9               	movwf	fsr2l,c
 23708  004BFA  0E00               	movlw	high _pBDTEntryIn
 23709  004BFC  D007               	goto	L23
 23710  004BFE                     l12180:
 23711                           
 23712                           ; BSR set to: 0
 23713                           ;usb_device.c: 767: else
 23714                           ;usb_device.c: 768: {
 23715                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 23716  004BFE  0100               	movlb	0	; () banked
 23717  004C00  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 23718  004C02  0D02               	mullw	2
 23719  004C04  0E40               	movlw	low _pBDTEntryOut
 23720  004C06  24F3               	addwf	prodl,w,c
 23721  004C08  6ED9               	movwf	fsr2l,c
 23722  004C0A  0E01               	movlw	high _pBDTEntryOut
 23723  004C0C                     L23:
 23724  004C0C  20F4               	addwfc	prodh,w,c
 23725  004C0E  6EDA               	movwf	fsr2h,c
 23726  004C10  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 23727  004C14  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 23728                           
 23729                           ; BSR set to: 0
 23730                           ;usb_device.c: 771: }
 23731                           ;usb_device.c: 775: if(handle == 0)
 23732                           
 23733                           ; BSR set to: 0
 23734  004C18  0100               	movlb	0	; () banked
 23735  004C1A  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 23736  004C1C  0100               	movlb	0	; () banked
 23737  004C1E  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 23738  004C20  A4D8               	btfss	status,2,c
 23739  004C22  D007               	goto	l12188
 23740                           
 23741                           ; BSR set to: 0
 23742                           ;usb_device.c: 776: {
 23743                           ;usb_device.c: 777: return 0;
 23744  004C24  0E00               	movlw	0
 23745  004C26  0100               	movlb	0	; () banked
 23746  004C28  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 23747  004C2A  0E00               	movlw	0
 23748  004C2C  0100               	movlb	0	; () banked
 23749  004C2E  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 23750                           
 23751                           ; BSR set to: 0
 23752  004C30  0012               	return	
 23753  004C32                     l12188:
 23754                           
 23755                           ; BSR set to: 0
 23756                           ;usb_device.c: 778: }
 23757                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 23758  004C32  0100               	movlb	0	; () banked
 23759  004C34  EE20 F002          	lfsr	2,2
 23760  004C38  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 23761  004C3A  26D9               	addwf	fsr2l,f,c
 23762  004C3C  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 23763  004C3E  22DA               	addwfc	fsr2h,f,c
 23764  004C40  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 23765  004C44  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 23766                           
 23767                           ;usb_device.c: 781: handle->CNT = len;
 23768  004C48  0100               	movlb	0	; () banked
 23769  004C4A  EE20 F001          	lfsr	2,1
 23770  004C4E  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 23771  004C50  26D9               	addwf	fsr2l,f,c
 23772  004C52  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 23773  004C54  22DA               	addwfc	fsr2h,f,c
 23774  004C56  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 23775                           
 23776                           ; BSR set to: 0
 23777                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 23778  004C5A  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 23779  004C5E  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 23780  004C62  0E40               	movlw	64
 23781  004C64  16DF               	andwf	indf2,f,c
 23782                           
 23783                           ; BSR set to: 0
 23784                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 23785  004C66  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 23786  004C6A  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 23787  004C6E  0E00               	movlw	0
 23788  004C70  86DB               	bsf	plusw2,3,c
 23789                           
 23790                           ; BSR set to: 0
 23791                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 23792  004C72  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 23793  004C76  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 23794  004C7A  0E00               	movlw	0
 23795  004C7C  8EDB               	bsf	plusw2,7,c
 23796                           
 23797                           ; BSR set to: 0
 23798                           ;usb_device.c: 787: if(dir != 0)
 23799  004C7E  0100               	movlb	0	; () banked
 23800  004C80  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 23801  004C82  0100               	movlb	0	; () banked
 23802  004C84  B4D8               	btfsc	status,2,c
 23803  004C86  D008               	goto	l12200
 23804                           
 23805                           ; BSR set to: 0
 23806                           ;usb_device.c: 788: {
 23807                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 23808  004C88  0100               	movlb	0	; () banked
 23809  004C8A  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 23810  004C8C  0D02               	mullw	2
 23811  004C8E  0E3C               	movlw	low _pBDTEntryIn
 23812  004C90  24F3               	addwf	prodl,w,c
 23813  004C92  6ED9               	movwf	fsr2l,c
 23814  004C94  0E00               	movlw	high _pBDTEntryIn
 23815  004C96  D007               	goto	L24
 23816  004C98                     l12200:
 23817                           
 23818                           ; BSR set to: 0
 23819                           ;usb_device.c: 792: else
 23820                           ;usb_device.c: 793: {
 23821                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 23822  004C98  0100               	movlb	0	; () banked
 23823  004C9A  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 23824  004C9C  0D02               	mullw	2
 23825  004C9E  0E40               	movlw	low _pBDTEntryOut
 23826  004CA0  24F3               	addwf	prodl,w,c
 23827  004CA2  6ED9               	movwf	fsr2l,c
 23828  004CA4  0E01               	movlw	high _pBDTEntryOut
 23829  004CA6                     L24:
 23830  004CA6  20F4               	addwfc	prodh,w,c
 23831  004CA8  6EDA               	movwf	fsr2h,c
 23832  004CAA  0E04               	movlw	4
 23833  004CAC  1ADF               	xorwf	indf2,f,c
 23834                           
 23835                           ; BSR set to: 0
 23836                           ;usb_device.c: 796: }
 23837                           ;usb_device.c: 797: return (void*)handle;
 23838                           
 23839                           ; BSR set to: 0
 23840  004CAE  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 23841  004CB2  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 23842  004CB6  0012               	return	
 23843  004CB8                     __end_of_USBTransferOnePacket:
 23844                           	opt stack 0
 23845                           tblptru	equ	0xFF8
 23846                           tblptrh	equ	0xFF7
 23847                           tblptrl	equ	0xFF6
 23848                           tablat	equ	0xFF5
 23849                           prodh	equ	0xFF4
 23850                           prodl	equ	0xFF3
 23851                           intcon	equ	0xFF2
 23852                           intcon3	equ	0xFF0
 23853                           indf0	equ	0xFEF
 23854                           postinc0	equ	0xFEE
 23855                           fsr0h	equ	0xFEA
 23856                           fsr0l	equ	0xFE9
 23857                           wreg	equ	0xFE8
 23858                           indf1	equ	0xFE7
 23859                           postdec1	equ	0xFE5
 23860                           fsr1h	equ	0xFE2
 23861                           fsr1l	equ	0xFE1
 23862                           indf2	equ	0xFDF
 23863                           postinc2	equ	0xFDE
 23864                           postdec2	equ	0xFDD
 23865                           plusw2	equ	0xFDB
 23866                           fsr2h	equ	0xFDA
 23867                           fsr2l	equ	0xFD9
 23868                           status	equ	0xFD8
 23869                           
 23870 ;; *************** function _USBDeviceInit *****************
 23871 ;; Defined at:
 23872 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 23873 ;; Parameters:    Size  Location     Type
 23874 ;;		None
 23875 ;; Auto vars:     Size  Location     Type
 23876 ;;  i               1    8[BANK0 ] unsigned char 
 23877 ;; Return value:  Size  Location     Type
 23878 ;;		None               void
 23879 ;; Registers used:
 23880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23881 ;; Tracked objects:
 23882 ;;		On entry : 0/0
 23883 ;;		On exit  : 0/0
 23884 ;;		Unchanged: 0/0
 23885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 23886 ;;      Params:         0       0       0       0       0       0       0       0       0
 23887 ;;      Locals:         0       1       0       0       0       0       0       0       0
 23888 ;;      Temps:          0       0       0       0       0       0       0       0       0
 23889 ;;      Totals:         0       1       0       0       0       0       0       0       0
 23890 ;;Total ram usage:        1 bytes
 23891 ;; Hardware stack levels used:    1
 23892 ;; Hardware stack levels required when called:   12
 23893 ;; This function calls:
 23894 ;;		_memset
 23895 ;; This function is called by:
 23896 ;;		_main
 23897 ;; This function uses a non-reentrant model
 23898 ;;
 23899                           
 23900                           	psect	text86
 23901  003574                     __ptext86:
 23902                           	opt stack 0
 23903  003574                     _USBDeviceInit:
 23904                           	opt stack 18
 23905                           
 23906                           ;usb_device.c: 239: uint8_t i;
 23907                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 23908                           
 23909                           ; BSR set to: 0
 23910                           ;incstack = 0
 23911  003574  94A3               	bcf	4003,2,c	;volatile
 23912                           
 23913                           ;usb_device.c: 244: {UEIR = 0;};
 23914  003576  0E00               	movlw	0
 23915  003578  6E67               	movwf	3943,c	;volatile
 23916                           
 23917                           ;usb_device.c: 247: {UIR = 0;};
 23918  00357A  0E00               	movlw	0
 23919  00357C  6E65               	movwf	3941,c	;volatile
 23920                           
 23921                           ;usb_device.c: 250: UEP0 = 0;
 23922  00357E  0E00               	movlw	0
 23923  003580  6E6A               	movwf	3946,c	;volatile
 23924                           
 23925                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 23926  003582  0E6B               	movlw	107
 23927  003584  0100               	movlb	0	; () banked
 23928  003586  6F60               	movwf	memset@p1& (0+255),b
 23929  003588  0E0F               	movlw	15
 23930  00358A  0100               	movlb	0	; () banked
 23931  00358C  6F61               	movwf	(memset@p1+1)& (0+255),b
 23932  00358E  0E00               	movlw	0
 23933  003590  0100               	movlb	0	; () banked
 23934  003592  6F63               	movwf	(memset@c+1)& (0+255),b
 23935  003594  0E00               	movlw	0
 23936  003596  6F62               	movwf	memset@c& (0+255),b
 23937  003598  0E00               	movlw	0
 23938  00359A  0100               	movlb	0	; () banked
 23939  00359C  6F65               	movwf	(memset@n+1)& (0+255),b
 23940  00359E  0E02               	movlw	2
 23941  0035A0  6F64               	movwf	memset@n& (0+255),b
 23942  0035A2  EC89  F033         	call	_memset	;wreg free
 23943                           
 23944                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 23945  0035A6  0E16               	movlw	22
 23946  0035A8  6E62               	movwf	3938,c	;volatile
 23947  0035AA  0E9F               	movlw	159
 23948  0035AC  6E66               	movwf	3942,c	;volatile
 23949  0035AE  0E7B               	movlw	123
 23950  0035B0  6E64               	movwf	3940,c	;volatile
 23951                           
 23952                           ;usb_device.c: 257: ;
 23953                           ;usb_device.c: 260: ;
 23954                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 23955  0035B2  0E00               	movlw	0
 23956  0035B4  0100               	movlb	0	; () banked
 23957  0035B6  6F68               	movwf	USBDeviceInit@i& (0+255),b
 23958  0035B8                     l14616:
 23959                           
 23960                           ; BSR set to: 0
 23961  0035B8  0E0B               	movlw	11
 23962  0035BA  0100               	movlb	0	; () banked
 23963  0035BC  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 23964  0035BE  D001               	goto	l14620
 23965  0035C0  D010               	goto	l1716
 23966  0035C2                     l14620:
 23967                           
 23968                           ; BSR set to: 0
 23969                           ;usb_device.c: 264: {
 23970                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 23971  0035C2  0100               	movlb	0	; () banked
 23972  0035C4  5168               	movf	USBDeviceInit@i& (0+255),w,b
 23973  0035C6  0D04               	mullw	4
 23974  0035C8  0E00               	movlw	0
 23975  0035CA  24F3               	addwf	prodl,w,c
 23976  0035CC  6ED9               	movwf	fsr2l,c
 23977  0035CE  0E04               	movlw	4
 23978  0035D0  20F4               	addwfc	prodh,w,c
 23979  0035D2  6EDA               	movwf	fsr2h,c
 23980  0035D4  6ADE               	clrf	postinc2,c
 23981  0035D6  6ADE               	clrf	postinc2,c
 23982  0035D8  6ADE               	clrf	postinc2,c
 23983  0035DA  6ADD               	clrf	postdec2,c
 23984                           
 23985                           ; BSR set to: 0
 23986  0035DC  0100               	movlb	0	; () banked
 23987  0035DE  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 23988  0035E0  D7EB               	goto	l14616
 23989  0035E2                     l1716:
 23990                           
 23991                           ; BSR set to: 0
 23992                           ;usb_device.c: 266: }
 23993                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 23994  0035E2  8C60               	bsf	3936,6,c	;volatile
 23995                           
 23996                           ; BSR set to: 0
 23997                           ;usb_device.c: 272: UADDR = 0x00;
 23998  0035E4  0E00               	movlw	0
 23999  0035E6  6E63               	movwf	3939,c	;volatile
 24000                           
 24001                           ; BSR set to: 0
 24002                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 24003  0035E8  9860               	bcf	3936,4,c	;volatile
 24004                           
 24005                           ; BSR set to: 0
 24006                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 24007  0035EA  9C60               	bcf	3936,6,c	;volatile
 24008                           
 24009                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 24010  0035EC  D009               	goto	l14640
 24011  0035EE                     l14632:
 24012                           
 24013                           ;usb_device.c: 282: {
 24014                           ;usb_device.c: 283: (UIR &= 0xF7);
 24015  0035EE  9665               	bcf	3941,3,c	;volatile
 24016                           
 24017                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 24018  0035F0  0E00               	movlw	0
 24019  0035F2  6E39               	movwf	_inPipes+3,c	;volatile
 24020                           
 24021                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 24022  0035F4  0E00               	movlw	0
 24023  0035F6  6E31               	movwf	_outPipes+3,c	;volatile
 24024                           
 24025                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 24026  0035F8  0E00               	movlw	0
 24027  0035FA  6E33               	movwf	_outPipes+5,c	;volatile
 24028  0035FC  0E00               	movlw	0
 24029  0035FE  6E32               	movwf	_outPipes+4,c	;volatile
 24030  003600                     l14640:
 24031  003600  B665               	btfsc	3941,3,c	;volatile
 24032  003602  D7F5               	goto	l14632
 24033                           
 24034                           ;usb_device.c: 288: }
 24035                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 24036  003604  0E01               	movlw	1
 24037  003606  0100               	movlb	0	; () banked
 24038  003608  6FD3               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 24039                           
 24040                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 24041  00360A  0E01               	movlw	1
 24042  00360C  0100               	movlb	0	; () banked
 24043  00360E  6FD4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 24044                           
 24045                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 24046  003610  0E00               	movlw	0
 24047  003612  0100               	movlb	0	; () banked
 24048  003614  6FD0               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 24049                           
 24050                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 24051  003616  0E00               	movlw	0
 24052  003618  0100               	movlb	0	; () banked
 24053  00361A  6FD1               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 24054                           
 24055                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 24056  00361C  0E00               	movlw	0
 24057  00361E  0100               	movlb	0	; () banked
 24058  003620  6FCF               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 24059                           
 24060                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 24061  003622  0E00               	movlw	0
 24062  003624  0100               	movlb	0	; () banked
 24063  003626  6F68               	movwf	USBDeviceInit@i& (0+255),b
 24064  003628                     l14644:
 24065                           
 24066                           ; BSR set to: 0
 24067  003628  0E02               	movlw	2
 24068  00362A  0100               	movlb	0	; () banked
 24069  00362C  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 24070  00362E  D001               	goto	l14648
 24071  003630  D033               	goto	l14654
 24072  003632                     l14648:
 24073                           
 24074                           ; BSR set to: 0
 24075                           ;usb_device.c: 302: {
 24076                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 24077  003632  0100               	movlb	0	; () banked
 24078  003634  5168               	movf	USBDeviceInit@i& (0+255),w,b
 24079  003636  0D02               	mullw	2
 24080  003638  0E3C               	movlw	low _pBDTEntryIn
 24081  00363A  24F3               	addwf	prodl,w,c
 24082  00363C  6ED9               	movwf	fsr2l,c
 24083  00363E  0E00               	movlw	high _pBDTEntryIn
 24084  003640  20F4               	addwfc	prodh,w,c
 24085  003642  6EDA               	movwf	fsr2h,c
 24086  003644  0E00               	movlw	0
 24087  003646  6EDE               	movwf	postinc2,c
 24088  003648  0E00               	movlw	0
 24089  00364A  6EDD               	movwf	postdec2,c
 24090                           
 24091                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 24092  00364C  0100               	movlb	0	; () banked
 24093  00364E  5168               	movf	USBDeviceInit@i& (0+255),w,b
 24094  003650  0D02               	mullw	2
 24095  003652  0E40               	movlw	low _pBDTEntryOut
 24096  003654  24F3               	addwf	prodl,w,c
 24097  003656  6ED9               	movwf	fsr2l,c
 24098  003658  0E01               	movlw	high _pBDTEntryOut
 24099  00365A  20F4               	addwfc	prodh,w,c
 24100  00365C  6EDA               	movwf	fsr2h,c
 24101  00365E  0E00               	movlw	0
 24102  003660  6EDE               	movwf	postinc2,c
 24103  003662  0E00               	movlw	0
 24104  003664  6EDD               	movwf	postdec2,c
 24105                           
 24106                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 24107  003666  0100               	movlb	0	; () banked
 24108  003668  5168               	movf	USBDeviceInit@i& (0+255),w,b
 24109  00366A  0D01               	mullw	1
 24110  00366C  0EB9               	movlw	low _ep_data_in
 24111  00366E  24F3               	addwf	prodl,w,c
 24112  003670  6ED9               	movwf	fsr2l,c
 24113  003672  0E00               	movlw	high _ep_data_in
 24114  003674  20F4               	addwfc	prodh,w,c
 24115  003676  6EDA               	movwf	fsr2h,c
 24116  003678  0E00               	movlw	0
 24117  00367A  6EDF               	movwf	indf2,c
 24118                           
 24119                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 24120  00367C  0100               	movlb	0	; () banked
 24121  00367E  5168               	movf	USBDeviceInit@i& (0+255),w,b
 24122  003680  0D01               	mullw	1
 24123  003682  0EBC               	movlw	low _ep_data_out
 24124  003684  24F3               	addwf	prodl,w,c
 24125  003686  6ED9               	movwf	fsr2l,c
 24126  003688  0E00               	movlw	high _ep_data_out
 24127  00368A  20F4               	addwfc	prodh,w,c
 24128  00368C  6EDA               	movwf	fsr2h,c
 24129  00368E  0E00               	movlw	0
 24130  003690  6EDF               	movwf	indf2,c
 24131                           
 24132                           ; BSR set to: 0
 24133  003692  0100               	movlb	0	; () banked
 24134  003694  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 24135  003696  D7C8               	goto	l14644
 24136  003698                     l14654:
 24137                           
 24138                           ; BSR set to: 0
 24139                           ;usb_device.c: 307: }
 24140                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 24141  003698  0E08               	movlw	8
 24142  00369A  6E3C               	movwf	_pBDTEntryIn,c
 24143  00369C  0E04               	movlw	4
 24144  00369E  6E3D               	movwf	_pBDTEntryIn+1,c
 24145                           
 24146                           ; BSR set to: 0
 24147                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 24148  0036A0  0E16               	movlw	22
 24149  0036A2  6E6A               	movwf	3946,c	;volatile
 24150                           
 24151                           ; BSR set to: 0
 24152                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 24153  0036A4  0E04               	movlw	4
 24154  0036A6  0104               	movlb	4	; () banked
 24155  0036A8  6F03               	movwf	3,b	;volatile
 24156  0036AA  0E30               	movlw	48
 24157  0036AC  6F02               	movwf	2,b	;volatile
 24158                           
 24159                           ; BSR set to: 4
 24160                           ;usb_device.c: 315: BDT[0].CNT = 8;
 24161  0036AE  0E08               	movlw	8
 24162  0036B0  0104               	movlb	4	; () banked
 24163  0036B2  6F01               	movwf	1,b	;volatile
 24164                           
 24165                           ; BSR set to: 4
 24166                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 24167  0036B4  0E04               	movlw	4
 24168  0036B6  0104               	movlb	4	; () banked
 24169  0036B8  6F00               	movwf	0,b	;volatile
 24170                           
 24171                           ; BSR set to: 4
 24172                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 24173  0036BA  0104               	movlb	4	; () banked
 24174  0036BC  8F00               	bsf	0,7,b	;volatile
 24175                           
 24176                           ; BSR set to: 4
 24177                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 24178  0036BE  0E00               	movlw	0
 24179  0036C0  6E58               	movwf	_USBActiveConfiguration,c	;volatile
 24180                           
 24181                           ; BSR set to: 4
 24182                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 24183  0036C2  0E00               	movlw	0
 24184  0036C4  0100               	movlb	0	; () banked
 24185  0036C6  6FD2               	movwf	_USBDeviceState& (0+255),b	;volatile
 24186                           
 24187                           ; BSR set to: 0
 24188  0036C8  0012               	return		;funcret
 24189  0036CA                     __end_of_USBDeviceInit:
 24190                           	opt stack 0
 24191                           tblptru	equ	0xFF8
 24192                           tblptrh	equ	0xFF7
 24193                           tblptrl	equ	0xFF6
 24194                           tablat	equ	0xFF5
 24195                           prodh	equ	0xFF4
 24196                           prodl	equ	0xFF3
 24197                           intcon	equ	0xFF2
 24198                           intcon3	equ	0xFF0
 24199                           indf0	equ	0xFEF
 24200                           postinc0	equ	0xFEE
 24201                           fsr0h	equ	0xFEA
 24202                           fsr0l	equ	0xFE9
 24203                           wreg	equ	0xFE8
 24204                           indf1	equ	0xFE7
 24205                           postdec1	equ	0xFE5
 24206                           fsr1h	equ	0xFE2
 24207                           fsr1l	equ	0xFE1
 24208                           indf2	equ	0xFDF
 24209                           postinc2	equ	0xFDE
 24210                           postdec2	equ	0xFDD
 24211                           plusw2	equ	0xFDB
 24212                           fsr2h	equ	0xFDA
 24213                           fsr2l	equ	0xFD9
 24214                           status	equ	0xFD8
 24215                           
 24216 ;; *************** function _memset *****************
 24217 ;; Defined at:
 24218 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 24219 ;; Parameters:    Size  Location     Type
 24220 ;;  p1              2    0[BANK0 ] PTR void 
 24221 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 24222 ;;  c               2    2[BANK0 ] int 
 24223 ;;  n               2    4[BANK0 ] unsigned int 
 24224 ;; Auto vars:     Size  Location     Type
 24225 ;;  p               2    6[BANK0 ] PTR unsigned char 
 24226 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 24227 ;; Return value:  Size  Location     Type
 24228 ;;                  2    0[BANK0 ] PTR void 
 24229 ;; Registers used:
 24230 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24231 ;; Tracked objects:
 24232 ;;		On entry : 0/0
 24233 ;;		On exit  : 0/0
 24234 ;;		Unchanged: 0/0
 24235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24236 ;;      Params:         0       6       0       0       0       0       0       0       0
 24237 ;;      Locals:         0       2       0       0       0       0       0       0       0
 24238 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24239 ;;      Totals:         0       8       0       0       0       0       0       0       0
 24240 ;;Total ram usage:        8 bytes
 24241 ;; Hardware stack levels used:    1
 24242 ;; Hardware stack levels required when called:   11
 24243 ;; This function calls:
 24244 ;;		Nothing
 24245 ;; This function is called by:
 24246 ;;		_USBDeviceInit
 24247 ;; This function uses a non-reentrant model
 24248 ;;
 24249                           
 24250                           	psect	text87
 24251  006712                     __ptext87:
 24252                           	opt stack 0
 24253  006712                     _memset:
 24254                           	opt stack 18
 24255                           
 24256                           ; BSR set to: 0
 24257                           ;incstack = 0
 24258  006712  C060  F066         	movff	memset@p1,memset@p
 24259  006716  C061  F067         	movff	memset@p1+1,memset@p+1
 24260  00671A  D009               	goto	l14586
 24261  00671C                     l14582:
 24262  00671C  C066  FFD9         	movff	memset@p,fsr2l
 24263  006720  C067  FFDA         	movff	memset@p+1,fsr2h
 24264  006724  C062  FFDF         	movff	memset@c,indf2
 24265  006728  0100               	movlb	0	; () banked
 24266  00672A  4B66               	infsnz	memset@p& (0+255),f,b
 24267  00672C  2B67               	incf	(memset@p+1)& (0+255),f,b
 24268  00672E                     l14586:
 24269  00672E  0100               	movlb	0	; () banked
 24270  006730  0764               	decf	memset@n& (0+255),f,b
 24271  006732  A0D8               	btfss	status,0,c
 24272  006734  0765               	decf	(memset@n+1)& (0+255),f,b
 24273  006736  0100               	movlb	0	; () banked
 24274  006738  2964               	incf	memset@n& (0+255),w,b
 24275  00673A  E1F0               	bnz	l14582
 24276  00673C  0100               	movlb	0	; () banked
 24277  00673E  2965               	incf	(memset@n+1)& (0+255),w,b
 24278  006740  B4D8               	btfsc	status,2,c
 24279  006742  0012               	return	
 24280  006744  D7EB               	goto	l14582
 24281  006746                     __end_of_memset:
 24282                           	opt stack 0
 24283                           tblptru	equ	0xFF8
 24284                           tblptrh	equ	0xFF7
 24285                           tblptrl	equ	0xFF6
 24286                           tablat	equ	0xFF5
 24287                           prodh	equ	0xFF4
 24288                           prodl	equ	0xFF3
 24289                           intcon	equ	0xFF2
 24290                           intcon3	equ	0xFF0
 24291                           indf0	equ	0xFEF
 24292                           postinc0	equ	0xFEE
 24293                           fsr0h	equ	0xFEA
 24294                           fsr0l	equ	0xFE9
 24295                           wreg	equ	0xFE8
 24296                           indf1	equ	0xFE7
 24297                           postdec1	equ	0xFE5
 24298                           fsr1h	equ	0xFE2
 24299                           fsr1l	equ	0xFE1
 24300                           indf2	equ	0xFDF
 24301                           postinc2	equ	0xFDE
 24302                           postdec2	equ	0xFDD
 24303                           plusw2	equ	0xFDB
 24304                           fsr2h	equ	0xFDA
 24305                           fsr2l	equ	0xFD9
 24306                           status	equ	0xFD8
 24307                           
 24308 ;; *************** function _USBDeviceAttach *****************
 24309 ;; Defined at:
 24310 ;;		line 1046 in file "../Includes/Usb/Framework/usb_device.c"
 24311 ;; Parameters:    Size  Location     Type
 24312 ;;		None
 24313 ;; Auto vars:     Size  Location     Type
 24314 ;;		None
 24315 ;; Return value:  Size  Location     Type
 24316 ;;		None               void
 24317 ;; Registers used:
 24318 ;;		wreg, status,2
 24319 ;; Tracked objects:
 24320 ;;		On entry : 0/0
 24321 ;;		On exit  : 0/0
 24322 ;;		Unchanged: 0/0
 24323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24324 ;;      Params:         0       0       0       0       0       0       0       0       0
 24325 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24326 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24327 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24328 ;;Total ram usage:        0 bytes
 24329 ;; Hardware stack levels used:    1
 24330 ;; Hardware stack levels required when called:   11
 24331 ;; This function calls:
 24332 ;;		Nothing
 24333 ;; This function is called by:
 24334 ;;		_main
 24335 ;; This function uses a non-reentrant model
 24336 ;;
 24337                           
 24338                           	psect	text88
 24339  006746                     __ptext88:
 24340                           	opt stack 0
 24341  006746                     _USBDeviceAttach:
 24342                           	opt stack 19
 24343                           
 24344                           ;usb_device.c: 1050: {
 24345                           ;usb_device.c: 1051: if(1 == 1)
 24346                           
 24347                           ; BSR set to: 0
 24348                           ;incstack = 0
 24349  006746  0100               	movlb	0	; () banked
 24350  006748  51D2               	movf	_USBDeviceState& (0+255),w,b	;volatile
 24351  00674A  A4D8               	btfss	status,2,c
 24352  00674C  0012               	return	
 24353                           
 24354                           ; BSR set to: 0
 24355                           ;usb_device.c: 1052: {
 24356                           ;usb_device.c: 1054: UCON = 0;
 24357  00674E  0E00               	movlw	0
 24358  006750  6E60               	movwf	3936,c	;volatile
 24359                           
 24360                           ;usb_device.c: 1057: UIE = 0;
 24361  006752  0E00               	movlw	0
 24362  006754  6E64               	movwf	3940,c	;volatile
 24363                           
 24364                           ;usb_device.c: 1061: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 24365  006756  0E16               	movlw	22
 24366  006758  6E62               	movwf	3938,c	;volatile
 24367  00675A  0E9F               	movlw	159
 24368  00675C  6E66               	movwf	3942,c	;volatile
 24369  00675E  0E7B               	movlw	123
 24370  006760  6E64               	movwf	3940,c	;volatile
 24371                           
 24372                           ; BSR set to: 0
 24373                           ;usb_device.c: 1063: {RCONbits.IPEN = 1;IPR3bits.USBIP = 1;PIE3bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 24374  006762  8ED0               	bsf	4048,7,c	;volatile
 24375                           
 24376                           ; BSR set to: 0
 24377  006764  84A5               	bsf	4005,2,c	;volatile
 24378                           
 24379                           ; BSR set to: 0
 24380  006766  84A3               	bsf	4003,2,c	;volatile
 24381                           
 24382                           ; BSR set to: 0
 24383  006768  8EF2               	bsf	intcon,7,c	;volatile
 24384                           
 24385                           ;usb_device.c: 1066: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 24386  00676A  D001               	goto	l1777
 24387  00676C                     l1778:
 24388  00676C  8660               	bsf	3936,3,c	;volatile
 24389  00676E                     l1777:
 24390  00676E  A660               	btfss	3936,3,c	;volatile
 24391  006770  D7FD               	goto	l1778
 24392                           
 24393                           ;usb_device.c: 1069: USBDeviceState = ATTACHED_STATE;
 24394  006772  0E01               	movlw	1
 24395  006774  0100               	movlb	0	; () banked
 24396  006776  6FD2               	movwf	_USBDeviceState& (0+255),b	;volatile
 24397                           
 24398                           ; BSR set to: 0
 24399  006778  0012               	return	
 24400  00677A                     __end_of_USBDeviceAttach:
 24401                           	opt stack 0
 24402                           tblptru	equ	0xFF8
 24403                           tblptrh	equ	0xFF7
 24404                           tblptrl	equ	0xFF6
 24405                           tablat	equ	0xFF5
 24406                           prodh	equ	0xFF4
 24407                           prodl	equ	0xFF3
 24408                           intcon	equ	0xFF2
 24409                           intcon3	equ	0xFF0
 24410                           indf0	equ	0xFEF
 24411                           postinc0	equ	0xFEE
 24412                           fsr0h	equ	0xFEA
 24413                           fsr0l	equ	0xFE9
 24414                           wreg	equ	0xFE8
 24415                           indf1	equ	0xFE7
 24416                           postdec1	equ	0xFE5
 24417                           fsr1h	equ	0xFE2
 24418                           fsr1l	equ	0xFE1
 24419                           indf2	equ	0xFDF
 24420                           postinc2	equ	0xFDE
 24421                           postdec2	equ	0xFDD
 24422                           plusw2	equ	0xFDB
 24423                           fsr2h	equ	0xFDA
 24424                           fsr2l	equ	0xFD9
 24425                           status	equ	0xFD8
 24426                           
 24427 ;; *************** function _SYSTEM_Initialize *****************
 24428 ;; Defined at:
 24429 ;;		line 93 in file "../Includes/MccGenerated/mcc.c"
 24430 ;; Parameters:    Size  Location     Type
 24431 ;;		None
 24432 ;; Auto vars:     Size  Location     Type
 24433 ;;		None
 24434 ;; Return value:  Size  Location     Type
 24435 ;;		None               void
 24436 ;; Registers used:
 24437 ;;		wreg, status,2, status,0, cstack
 24438 ;; Tracked objects:
 24439 ;;		On entry : 0/0
 24440 ;;		On exit  : 0/0
 24441 ;;		Unchanged: 0/0
 24442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24443 ;;      Params:         0       0       0       0       0       0       0       0       0
 24444 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24445 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24446 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24447 ;;Total ram usage:        0 bytes
 24448 ;; Hardware stack levels used:    1
 24449 ;; Hardware stack levels required when called:   13
 24450 ;; This function calls:
 24451 ;;		_ADC_Initialize
 24452 ;;		_CMP1_Initialize
 24453 ;;		_EUSART_Initialize
 24454 ;;		_OSCILLATOR_Initialize
 24455 ;;		_PIN_MANAGER_Initialize
 24456 ;;		_TMR1_Initialize
 24457 ;;		_TMR2_Initialize
 24458 ;;		_TMR3_Initialize
 24459 ;; This function is called by:
 24460 ;;		_main
 24461 ;; This function uses a non-reentrant model
 24462 ;;
 24463                           
 24464                           	psect	text89
 24465  006924                     __ptext89:
 24466                           	opt stack 0
 24467  006924                     _SYSTEM_Initialize:
 24468                           	opt stack 17
 24469                           
 24470                           ;mcc.c: 95: OSCILLATOR_Initialize();
 24471                           
 24472                           ; BSR set to: 0
 24473                           ;incstack = 0
 24474  006924  EC18  F035         	call	_OSCILLATOR_Initialize	;wreg free
 24475                           
 24476                           ;mcc.c: 96: PIN_MANAGER_Initialize();
 24477  006928  EC48  F031         	call	_PIN_MANAGER_Initialize	;wreg free
 24478                           
 24479                           ;mcc.c: 98: TMR1_Initialize();
 24480  00692C  EC1C  F033         	call	_TMR1_Initialize	;wreg free
 24481                           
 24482                           ;mcc.c: 99: TMR2_Initialize();
 24483  006930  EC38  F035         	call	_TMR2_Initialize	;wreg free
 24484                           
 24485                           ;mcc.c: 100: TMR3_Initialize();
 24486  006934  ECA3  F034         	call	_TMR3_Initialize	;wreg free
 24487                           
 24488                           ;mcc.c: 101: EUSART_Initialize();
 24489  006938  EC4B  F032         	call	_EUSART_Initialize	;wreg free
 24490                           
 24491                           ;mcc.c: 102: ADC_Initialize();
 24492  00693C  ECDE  F034         	call	_ADC_Initialize	;wreg free
 24493                           
 24494                           ;mcc.c: 103: CMP1_Initialize();
 24495  006940  EC54  F035         	call	_CMP1_Initialize	;wreg free
 24496  006944  0012               	return		;funcret
 24497  006946                     __end_of_SYSTEM_Initialize:
 24498                           	opt stack 0
 24499                           tblptru	equ	0xFF8
 24500                           tblptrh	equ	0xFF7
 24501                           tblptrl	equ	0xFF6
 24502                           tablat	equ	0xFF5
 24503                           prodh	equ	0xFF4
 24504                           prodl	equ	0xFF3
 24505                           intcon	equ	0xFF2
 24506                           intcon3	equ	0xFF0
 24507                           indf0	equ	0xFEF
 24508                           postinc0	equ	0xFEE
 24509                           fsr0h	equ	0xFEA
 24510                           fsr0l	equ	0xFE9
 24511                           wreg	equ	0xFE8
 24512                           indf1	equ	0xFE7
 24513                           postdec1	equ	0xFE5
 24514                           fsr1h	equ	0xFE2
 24515                           fsr1l	equ	0xFE1
 24516                           indf2	equ	0xFDF
 24517                           postinc2	equ	0xFDE
 24518                           postdec2	equ	0xFDD
 24519                           plusw2	equ	0xFDB
 24520                           fsr2h	equ	0xFDA
 24521                           fsr2l	equ	0xFD9
 24522                           status	equ	0xFD8
 24523                           
 24524 ;; *************** function _TMR3_Initialize *****************
 24525 ;; Defined at:
 24526 ;;		line 67 in file "../Includes/MccGenerated/tmr3.c"
 24527 ;; Parameters:    Size  Location     Type
 24528 ;;		None
 24529 ;; Auto vars:     Size  Location     Type
 24530 ;;		None
 24531 ;; Return value:  Size  Location     Type
 24532 ;;		None               void
 24533 ;; Registers used:
 24534 ;;		wreg, status,2, cstack
 24535 ;; Tracked objects:
 24536 ;;		On entry : 0/0
 24537 ;;		On exit  : 0/0
 24538 ;;		Unchanged: 0/0
 24539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24540 ;;      Params:         0       0       0       0       0       0       0       0       0
 24541 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24542 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24543 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24544 ;;Total ram usage:        0 bytes
 24545 ;; Hardware stack levels used:    1
 24546 ;; Hardware stack levels required when called:   12
 24547 ;; This function calls:
 24548 ;;		_TMR3_StartTimer
 24549 ;; This function is called by:
 24550 ;;		_SYSTEM_Initialize
 24551 ;; This function uses a non-reentrant model
 24552 ;;
 24553                           
 24554                           	psect	text90
 24555  006946                     __ptext90:
 24556                           	opt stack 0
 24557  006946                     _TMR3_Initialize:
 24558                           	opt stack 17
 24559                           
 24560                           ;tmr3.c: 72: T3CON = 0x04;
 24561                           
 24562                           ;incstack = 0
 24563  006946  0E04               	movlw	4
 24564  006948  6EB1               	movwf	4017,c	;volatile
 24565                           
 24566                           ;tmr3.c: 75: T3GCON = 0x00;
 24567  00694A  0E00               	movlw	0
 24568  00694C  6EB4               	movwf	4020,c	;volatile
 24569                           
 24570                           ;tmr3.c: 78: TMR3H = 0xD5;
 24571  00694E  0ED5               	movlw	213
 24572  006950  6EB3               	movwf	4019,c	;volatile
 24573                           
 24574                           ;tmr3.c: 81: TMR3L = 0xD0;
 24575  006952  0ED0               	movlw	208
 24576  006954  6EB2               	movwf	4018,c	;volatile
 24577                           
 24578                           ;tmr3.c: 84: timer3ReloadVal=TMR3;
 24579  006956  CFB2 F0C7          	movff	4018,_timer3ReloadVal	;volatile
 24580  00695A  CFB3 F0C8          	movff	4019,_timer3ReloadVal+1	;volatile
 24581                           
 24582                           ;tmr3.c: 87: PIR2bits.TMR3IF = 0;
 24583  00695E  92A1               	bcf	4001,1,c	;volatile
 24584                           
 24585                           ;tmr3.c: 90: PIE2bits.TMR3IE = 1;
 24586  006960  82A0               	bsf	4000,1,c	;volatile
 24587                           
 24588                           ;tmr3.c: 93: TMR3_StartTimer();
 24589  006962  ECB4  F035         	call	_TMR3_StartTimer	;wreg free
 24590  006966  0012               	return		;funcret
 24591  006968                     __end_of_TMR3_Initialize:
 24592                           	opt stack 0
 24593                           tblptru	equ	0xFF8
 24594                           tblptrh	equ	0xFF7
 24595                           tblptrl	equ	0xFF6
 24596                           tablat	equ	0xFF5
 24597                           prodh	equ	0xFF4
 24598                           prodl	equ	0xFF3
 24599                           intcon	equ	0xFF2
 24600                           intcon3	equ	0xFF0
 24601                           indf0	equ	0xFEF
 24602                           postinc0	equ	0xFEE
 24603                           fsr0h	equ	0xFEA
 24604                           fsr0l	equ	0xFE9
 24605                           wreg	equ	0xFE8
 24606                           indf1	equ	0xFE7
 24607                           postdec1	equ	0xFE5
 24608                           fsr1h	equ	0xFE2
 24609                           fsr1l	equ	0xFE1
 24610                           indf2	equ	0xFDF
 24611                           postinc2	equ	0xFDE
 24612                           postdec2	equ	0xFDD
 24613                           plusw2	equ	0xFDB
 24614                           fsr2h	equ	0xFDA
 24615                           fsr2l	equ	0xFD9
 24616                           status	equ	0xFD8
 24617                           
 24618 ;; *************** function _TMR3_StartTimer *****************
 24619 ;; Defined at:
 24620 ;;		line 96 in file "../Includes/MccGenerated/tmr3.c"
 24621 ;; Parameters:    Size  Location     Type
 24622 ;;		None
 24623 ;; Auto vars:     Size  Location     Type
 24624 ;;		None
 24625 ;; Return value:  Size  Location     Type
 24626 ;;		None               void
 24627 ;; Registers used:
 24628 ;;		None
 24629 ;; Tracked objects:
 24630 ;;		On entry : 0/0
 24631 ;;		On exit  : 0/0
 24632 ;;		Unchanged: 0/0
 24633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24634 ;;      Params:         0       0       0       0       0       0       0       0       0
 24635 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24636 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24637 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24638 ;;Total ram usage:        0 bytes
 24639 ;; Hardware stack levels used:    1
 24640 ;; Hardware stack levels required when called:   11
 24641 ;; This function calls:
 24642 ;;		Nothing
 24643 ;; This function is called by:
 24644 ;;		_TMR3_Initialize
 24645 ;; This function uses a non-reentrant model
 24646 ;;
 24647                           
 24648                           	psect	text91
 24649  006B68                     __ptext91:
 24650                           	opt stack 0
 24651  006B68                     _TMR3_StartTimer:
 24652                           	opt stack 17
 24653                           
 24654                           ;tmr3.c: 99: T3CONbits.TMR3ON = 1;
 24655                           
 24656                           ;incstack = 0
 24657  006B68  80B1               	bsf	4017,0,c	;volatile
 24658  006B6A  0012               	return		;funcret
 24659  006B6C                     __end_of_TMR3_StartTimer:
 24660                           	opt stack 0
 24661                           tblptru	equ	0xFF8
 24662                           tblptrh	equ	0xFF7
 24663                           tblptrl	equ	0xFF6
 24664                           tablat	equ	0xFF5
 24665                           prodh	equ	0xFF4
 24666                           prodl	equ	0xFF3
 24667                           intcon	equ	0xFF2
 24668                           intcon3	equ	0xFF0
 24669                           indf0	equ	0xFEF
 24670                           postinc0	equ	0xFEE
 24671                           fsr0h	equ	0xFEA
 24672                           fsr0l	equ	0xFE9
 24673                           wreg	equ	0xFE8
 24674                           indf1	equ	0xFE7
 24675                           postdec1	equ	0xFE5
 24676                           fsr1h	equ	0xFE2
 24677                           fsr1l	equ	0xFE1
 24678                           indf2	equ	0xFDF
 24679                           postinc2	equ	0xFDE
 24680                           postdec2	equ	0xFDD
 24681                           plusw2	equ	0xFDB
 24682                           fsr2h	equ	0xFDA
 24683                           fsr2l	equ	0xFD9
 24684                           status	equ	0xFD8
 24685                           
 24686 ;; *************** function _TMR2_Initialize *****************
 24687 ;; Defined at:
 24688 ;;		line 58 in file "../Includes/MccGenerated/tmr2.c"
 24689 ;; Parameters:    Size  Location     Type
 24690 ;;		None
 24691 ;; Auto vars:     Size  Location     Type
 24692 ;;		None
 24693 ;; Return value:  Size  Location     Type
 24694 ;;		None               void
 24695 ;; Registers used:
 24696 ;;		wreg, status,2, cstack
 24697 ;; Tracked objects:
 24698 ;;		On entry : 0/0
 24699 ;;		On exit  : 0/0
 24700 ;;		Unchanged: 0/0
 24701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24702 ;;      Params:         0       0       0       0       0       0       0       0       0
 24703 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24704 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24705 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24706 ;;Total ram usage:        0 bytes
 24707 ;; Hardware stack levels used:    1
 24708 ;; Hardware stack levels required when called:   12
 24709 ;; This function calls:
 24710 ;;		_TMR2_StartTimer
 24711 ;; This function is called by:
 24712 ;;		_SYSTEM_Initialize
 24713 ;; This function uses a non-reentrant model
 24714 ;;
 24715                           
 24716                           	psect	text92
 24717  006A70                     __ptext92:
 24718                           	opt stack 0
 24719  006A70                     _TMR2_Initialize:
 24720                           	opt stack 17
 24721                           
 24722                           ;tmr2.c: 62: T2CON = 0x7A;
 24723                           
 24724                           ;incstack = 0
 24725  006A70  0E7A               	movlw	122
 24726  006A72  6EBA               	movwf	4026,c	;volatile
 24727                           
 24728                           ;tmr2.c: 65: PR2 = 0x9B;
 24729  006A74  0E9B               	movlw	155
 24730  006A76  6EBB               	movwf	4027,c	;volatile
 24731                           
 24732                           ;tmr2.c: 68: TMR2 = 0x00;
 24733  006A78  0E00               	movlw	0
 24734  006A7A  6EBC               	movwf	4028,c	;volatile
 24735                           
 24736                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
 24737  006A7C  929E               	bcf	3998,1,c	;volatile
 24738                           
 24739                           ;tmr2.c: 74: TMR2_StartTimer();
 24740  006A7E  ECB6  F035         	call	_TMR2_StartTimer	;wreg free
 24741  006A82  0012               	return		;funcret
 24742  006A84                     __end_of_TMR2_Initialize:
 24743                           	opt stack 0
 24744                           tblptru	equ	0xFF8
 24745                           tblptrh	equ	0xFF7
 24746                           tblptrl	equ	0xFF6
 24747                           tablat	equ	0xFF5
 24748                           prodh	equ	0xFF4
 24749                           prodl	equ	0xFF3
 24750                           intcon	equ	0xFF2
 24751                           intcon3	equ	0xFF0
 24752                           indf0	equ	0xFEF
 24753                           postinc0	equ	0xFEE
 24754                           fsr0h	equ	0xFEA
 24755                           fsr0l	equ	0xFE9
 24756                           wreg	equ	0xFE8
 24757                           indf1	equ	0xFE7
 24758                           postdec1	equ	0xFE5
 24759                           fsr1h	equ	0xFE2
 24760                           fsr1l	equ	0xFE1
 24761                           indf2	equ	0xFDF
 24762                           postinc2	equ	0xFDE
 24763                           postdec2	equ	0xFDD
 24764                           plusw2	equ	0xFDB
 24765                           fsr2h	equ	0xFDA
 24766                           fsr2l	equ	0xFD9
 24767                           status	equ	0xFD8
 24768                           
 24769 ;; *************** function _TMR2_StartTimer *****************
 24770 ;; Defined at:
 24771 ;;		line 77 in file "../Includes/MccGenerated/tmr2.c"
 24772 ;; Parameters:    Size  Location     Type
 24773 ;;		None
 24774 ;; Auto vars:     Size  Location     Type
 24775 ;;		None
 24776 ;; Return value:  Size  Location     Type
 24777 ;;		None               void
 24778 ;; Registers used:
 24779 ;;		None
 24780 ;; Tracked objects:
 24781 ;;		On entry : 0/0
 24782 ;;		On exit  : 0/0
 24783 ;;		Unchanged: 0/0
 24784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24785 ;;      Params:         0       0       0       0       0       0       0       0       0
 24786 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24787 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24788 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24789 ;;Total ram usage:        0 bytes
 24790 ;; Hardware stack levels used:    1
 24791 ;; Hardware stack levels required when called:   11
 24792 ;; This function calls:
 24793 ;;		Nothing
 24794 ;; This function is called by:
 24795 ;;		_TMR2_Initialize
 24796 ;; This function uses a non-reentrant model
 24797 ;;
 24798                           
 24799                           	psect	text93
 24800  006B6C                     __ptext93:
 24801                           	opt stack 0
 24802  006B6C                     _TMR2_StartTimer:
 24803                           	opt stack 17
 24804                           
 24805                           ;tmr2.c: 79: T2CONbits.TMR2ON = 1;
 24806                           
 24807                           ;incstack = 0
 24808  006B6C  84BA               	bsf	4026,2,c	;volatile
 24809  006B6E  0012               	return		;funcret
 24810  006B70                     __end_of_TMR2_StartTimer:
 24811                           	opt stack 0
 24812                           tblptru	equ	0xFF8
 24813                           tblptrh	equ	0xFF7
 24814                           tblptrl	equ	0xFF6
 24815                           tablat	equ	0xFF5
 24816                           prodh	equ	0xFF4
 24817                           prodl	equ	0xFF3
 24818                           intcon	equ	0xFF2
 24819                           intcon3	equ	0xFF0
 24820                           indf0	equ	0xFEF
 24821                           postinc0	equ	0xFEE
 24822                           fsr0h	equ	0xFEA
 24823                           fsr0l	equ	0xFE9
 24824                           wreg	equ	0xFE8
 24825                           indf1	equ	0xFE7
 24826                           postdec1	equ	0xFE5
 24827                           fsr1h	equ	0xFE2
 24828                           fsr1l	equ	0xFE1
 24829                           indf2	equ	0xFDF
 24830                           postinc2	equ	0xFDE
 24831                           postdec2	equ	0xFDD
 24832                           plusw2	equ	0xFDB
 24833                           fsr2h	equ	0xFDA
 24834                           fsr2l	equ	0xFD9
 24835                           status	equ	0xFD8
 24836                           
 24837 ;; *************** function _TMR1_Initialize *****************
 24838 ;; Defined at:
 24839 ;;		line 63 in file "../Includes/MccGenerated/tmr1.c"
 24840 ;; Parameters:    Size  Location     Type
 24841 ;;		None
 24842 ;; Auto vars:     Size  Location     Type
 24843 ;;		None
 24844 ;; Return value:  Size  Location     Type
 24845 ;;		None               void
 24846 ;; Registers used:
 24847 ;;		wreg, status,2, status,0, cstack
 24848 ;; Tracked objects:
 24849 ;;		On entry : 0/0
 24850 ;;		On exit  : 0/0
 24851 ;;		Unchanged: 0/0
 24852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24853 ;;      Params:         0       0       0       0       0       0       0       0       0
 24854 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24855 ;;      Temps:          0       2       0       0       0       0       0       0       0
 24856 ;;      Totals:         0       2       0       0       0       0       0       0       0
 24857 ;;Total ram usage:        2 bytes
 24858 ;; Hardware stack levels used:    1
 24859 ;; Hardware stack levels required when called:   12
 24860 ;; This function calls:
 24861 ;;		_TMR1_StartTimer
 24862 ;; This function is called by:
 24863 ;;		_SYSTEM_Initialize
 24864 ;; This function uses a non-reentrant model
 24865 ;;
 24866                           
 24867                           	psect	text94
 24868  006638                     __ptext94:
 24869                           	opt stack 0
 24870  006638                     _TMR1_Initialize:
 24871                           	opt stack 17
 24872                           
 24873                           ;tmr1.c: 68: T1CON = 0x00;
 24874                           
 24875                           ;incstack = 0
 24876  006638  0E00               	movlw	0
 24877  00663A  6ECD               	movwf	4045,c	;volatile
 24878                           
 24879                           ;tmr1.c: 71: T1GCON = 0x00;
 24880  00663C  0E00               	movlw	0
 24881  00663E  6ECC               	movwf	4044,c	;volatile
 24882                           
 24883                           ;tmr1.c: 74: TMR1H = 0xD0;
 24884  006640  0ED0               	movlw	208
 24885  006642  6ECF               	movwf	4047,c	;volatile
 24886                           
 24887                           ;tmr1.c: 77: TMR1L = 0x20;
 24888  006644  0E20               	movlw	32
 24889  006646  6ECE               	movwf	4046,c	;volatile
 24890                           
 24891                           ;tmr1.c: 80: timer1ReloadVal=(TMR1H << 8) | TMR1L;
 24892  006648  50CE               	movf	4046,w,c	;volatile
 24893  00664A  CFCF F060          	movff	4047,??_TMR1_Initialize	;volatile
 24894  00664E  0100               	movlb	0	; () banked
 24895  006650  6B61               	clrf	(??_TMR1_Initialize+1)& (0+255),b
 24896  006652  C060  F061         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
 24897  006656  0100               	movlb	0	; () banked
 24898  006658  6B60               	clrf	??_TMR1_Initialize& (0+255),b
 24899  00665A  0100               	movlb	0	; () banked
 24900  00665C  1160               	iorwf	??_TMR1_Initialize& (0+255),w,b
 24901  00665E  6E48               	movwf	_timer1ReloadVal,c	;volatile
 24902  006660  0100               	movlb	0	; () banked
 24903  006662  5161               	movf	(??_TMR1_Initialize+1)& (0+255),w,b
 24904  006664  6E49               	movwf	_timer1ReloadVal+1,c	;volatile
 24905                           
 24906                           ; BSR set to: 0
 24907                           ;tmr1.c: 83: PIR1bits.TMR1IF = 0;
 24908  006666  909E               	bcf	3998,0,c	;volatile
 24909                           
 24910                           ; BSR set to: 0
 24911                           ;tmr1.c: 86: PIE1bits.TMR1IE = 1;
 24912  006668  809D               	bsf	3997,0,c	;volatile
 24913                           
 24914                           ; BSR set to: 0
 24915                           ;tmr1.c: 89: TMR1_StartTimer();
 24916  00666A  ECB8  F035         	call	_TMR1_StartTimer	;wreg free
 24917  00666E  0012               	return		;funcret
 24918  006670                     __end_of_TMR1_Initialize:
 24919                           	opt stack 0
 24920                           tblptru	equ	0xFF8
 24921                           tblptrh	equ	0xFF7
 24922                           tblptrl	equ	0xFF6
 24923                           tablat	equ	0xFF5
 24924                           prodh	equ	0xFF4
 24925                           prodl	equ	0xFF3
 24926                           intcon	equ	0xFF2
 24927                           intcon3	equ	0xFF0
 24928                           indf0	equ	0xFEF
 24929                           postinc0	equ	0xFEE
 24930                           fsr0h	equ	0xFEA
 24931                           fsr0l	equ	0xFE9
 24932                           wreg	equ	0xFE8
 24933                           indf1	equ	0xFE7
 24934                           postdec1	equ	0xFE5
 24935                           fsr1h	equ	0xFE2
 24936                           fsr1l	equ	0xFE1
 24937                           indf2	equ	0xFDF
 24938                           postinc2	equ	0xFDE
 24939                           postdec2	equ	0xFDD
 24940                           plusw2	equ	0xFDB
 24941                           fsr2h	equ	0xFDA
 24942                           fsr2l	equ	0xFD9
 24943                           status	equ	0xFD8
 24944                           
 24945 ;; *************** function _TMR1_StartTimer *****************
 24946 ;; Defined at:
 24947 ;;		line 92 in file "../Includes/MccGenerated/tmr1.c"
 24948 ;; Parameters:    Size  Location     Type
 24949 ;;		None
 24950 ;; Auto vars:     Size  Location     Type
 24951 ;;		None
 24952 ;; Return value:  Size  Location     Type
 24953 ;;		None               void
 24954 ;; Registers used:
 24955 ;;		None
 24956 ;; Tracked objects:
 24957 ;;		On entry : 0/0
 24958 ;;		On exit  : 0/0
 24959 ;;		Unchanged: 0/0
 24960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 24961 ;;      Params:         0       0       0       0       0       0       0       0       0
 24962 ;;      Locals:         0       0       0       0       0       0       0       0       0
 24963 ;;      Temps:          0       0       0       0       0       0       0       0       0
 24964 ;;      Totals:         0       0       0       0       0       0       0       0       0
 24965 ;;Total ram usage:        0 bytes
 24966 ;; Hardware stack levels used:    1
 24967 ;; Hardware stack levels required when called:   11
 24968 ;; This function calls:
 24969 ;;		Nothing
 24970 ;; This function is called by:
 24971 ;;		_TMR1_Initialize
 24972 ;; This function uses a non-reentrant model
 24973 ;;
 24974                           
 24975                           	psect	text95
 24976  006B70                     __ptext95:
 24977                           	opt stack 0
 24978  006B70                     _TMR1_StartTimer:
 24979                           	opt stack 17
 24980                           
 24981                           ;tmr1.c: 95: T1CONbits.TMR1ON = 1;
 24982                           
 24983                           ;incstack = 0
 24984  006B70  80CD               	bsf	4045,0,c	;volatile
 24985  006B72  0012               	return		;funcret
 24986  006B74                     __end_of_TMR1_StartTimer:
 24987                           	opt stack 0
 24988                           tblptru	equ	0xFF8
 24989                           tblptrh	equ	0xFF7
 24990                           tblptrl	equ	0xFF6
 24991                           tablat	equ	0xFF5
 24992                           prodh	equ	0xFF4
 24993                           prodl	equ	0xFF3
 24994                           intcon	equ	0xFF2
 24995                           intcon3	equ	0xFF0
 24996                           indf0	equ	0xFEF
 24997                           postinc0	equ	0xFEE
 24998                           fsr0h	equ	0xFEA
 24999                           fsr0l	equ	0xFE9
 25000                           wreg	equ	0xFE8
 25001                           indf1	equ	0xFE7
 25002                           postdec1	equ	0xFE5
 25003                           fsr1h	equ	0xFE2
 25004                           fsr1l	equ	0xFE1
 25005                           indf2	equ	0xFDF
 25006                           postinc2	equ	0xFDE
 25007                           postdec2	equ	0xFDD
 25008                           plusw2	equ	0xFDB
 25009                           fsr2h	equ	0xFDA
 25010                           fsr2l	equ	0xFD9
 25011                           status	equ	0xFD8
 25012                           
 25013 ;; *************** function _PIN_MANAGER_Initialize *****************
 25014 ;; Defined at:
 25015 ;;		line 51 in file "../Includes/MccGenerated/pin_manager.c"
 25016 ;; Parameters:    Size  Location     Type
 25017 ;;		None
 25018 ;; Auto vars:     Size  Location     Type
 25019 ;;		None
 25020 ;; Return value:  Size  Location     Type
 25021 ;;		None               void
 25022 ;; Registers used:
 25023 ;;		wreg, status,2
 25024 ;; Tracked objects:
 25025 ;;		On entry : 0/0
 25026 ;;		On exit  : 0/0
 25027 ;;		Unchanged: 0/0
 25028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25029 ;;      Params:         0       0       0       0       0       0       0       0       0
 25030 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25031 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25032 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25033 ;;Total ram usage:        0 bytes
 25034 ;; Hardware stack levels used:    1
 25035 ;; Hardware stack levels required when called:   11
 25036 ;; This function calls:
 25037 ;;		Nothing
 25038 ;; This function is called by:
 25039 ;;		_moteApp_GoToSleep
 25040 ;;		_SYSTEM_Initialize
 25041 ;; This function uses a non-reentrant model
 25042 ;;
 25043                           
 25044                           	psect	text96
 25045  006290                     __ptext96:
 25046                           	opt stack 0
 25047  006290                     _PIN_MANAGER_Initialize:
 25048                           	opt stack 16
 25049                           
 25050                           ;pin_manager.c: 55: TRISAbits.TRISA0 = 1;
 25051                           
 25052                           ;incstack = 0
 25053  006290  8092               	bsf	3986,0,c	;volatile
 25054                           
 25055                           ;pin_manager.c: 56: TRISAbits.TRISA1 = 1;
 25056  006292  8292               	bsf	3986,1,c	;volatile
 25057                           
 25058                           ;pin_manager.c: 57: TRISAbits.TRISA2 = 1;
 25059  006294  8492               	bsf	3986,2,c	;volatile
 25060                           
 25061                           ;pin_manager.c: 58: TRISAbits.TRISA3 = 1;
 25062  006296  8692               	bsf	3986,3,c	;volatile
 25063                           
 25064                           ;pin_manager.c: 60: LATEbits.LATE2 = 0;
 25065  006298  948D               	bcf	3981,2,c	;volatile
 25066                           
 25067                           ;pin_manager.c: 61: TRISEbits.TRISE2 = 0;
 25068  00629A  9496               	bcf	3990,2,c	;volatile
 25069                           
 25070                           ;pin_manager.c: 62: TRISAbits.TRISA5 = 0;
 25071  00629C  9A92               	bcf	3986,5,c	;volatile
 25072                           
 25073                           ;pin_manager.c: 63: TRISAbits.TRISA6 = 0;
 25074  00629E  9C92               	bcf	3986,6,c	;volatile
 25075                           
 25076                           ;pin_manager.c: 64: TRISAbits.TRISA7 = 0;
 25077  0062A0  9E92               	bcf	3986,7,c	;volatile
 25078                           
 25079                           ;pin_manager.c: 66: TRISBbits.TRISB1 = 1;
 25080  0062A2  8293               	bsf	3987,1,c	;volatile
 25081                           
 25082                           ;pin_manager.c: 67: TRISBbits.TRISB0 = 1;
 25083  0062A4  8093               	bsf	3987,0,c	;volatile
 25084                           
 25085                           ;pin_manager.c: 68: TRISBbits.TRISB2 = 0;
 25086  0062A6  9493               	bcf	3987,2,c	;volatile
 25087                           
 25088                           ;pin_manager.c: 69: TRISBbits.TRISB3 = 0;
 25089  0062A8  9693               	bcf	3987,3,c	;volatile
 25090                           
 25091                           ;pin_manager.c: 70: TRISBbits.TRISB4 = 0;
 25092  0062AA  9893               	bcf	3987,4,c	;volatile
 25093                           
 25094                           ;pin_manager.c: 71: TRISBbits.TRISB5 = 0;
 25095  0062AC  9A93               	bcf	3987,5,c	;volatile
 25096                           
 25097                           ;pin_manager.c: 73: TRISCbits.TRISC0 = 0;
 25098  0062AE  9094               	bcf	3988,0,c	;volatile
 25099                           
 25100                           ;pin_manager.c: 74: TRISCbits.TRISC1 = 0;
 25101  0062B0  9294               	bcf	3988,1,c	;volatile
 25102                           
 25103                           ;pin_manager.c: 75: TRISCbits.TRISC2 = 1;
 25104  0062B2  8494               	bsf	3988,2,c	;volatile
 25105                           
 25106                           ;pin_manager.c: 76: TRISCbits.TRISC6 = 0;
 25107  0062B4  9C94               	bcf	3988,6,c	;volatile
 25108                           
 25109                           ;pin_manager.c: 77: TRISCbits.TRISC7 = 1;
 25110  0062B6  8E94               	bsf	3988,7,c	;volatile
 25111                           
 25112                           ;pin_manager.c: 79: TRISD = 0b00000000;
 25113  0062B8  0E00               	movlw	0
 25114  0062BA  6E95               	movwf	3989,c	;volatile
 25115                           
 25116                           ;pin_manager.c: 81: TRISEbits.TRISE2 = 0;
 25117  0062BC  9496               	bcf	3990,2,c	;volatile
 25118                           
 25119                           ;pin_manager.c: 84: LATAbits.LATA5 = 0;
 25120  0062BE  9A89               	bcf	3977,5,c	;volatile
 25121                           
 25122                           ;pin_manager.c: 85: LATAbits.LATA6 = 0;
 25123  0062C0  9C89               	bcf	3977,6,c	;volatile
 25124                           
 25125                           ;pin_manager.c: 86: LATAbits.LATA7 = 0;
 25126  0062C2  9E89               	bcf	3977,7,c	;volatile
 25127                           
 25128                           ;pin_manager.c: 88: LATBbits.LATB2 = 0;
 25129  0062C4  948A               	bcf	3978,2,c	;volatile
 25130                           
 25131                           ;pin_manager.c: 90: LATCbits.LATC2 = 0;
 25132  0062C6  948B               	bcf	3979,2,c	;volatile
 25133                           
 25134                           ;pin_manager.c: 91: LATCbits.LATC6 = 0;
 25135  0062C8  9C8B               	bcf	3979,6,c	;volatile
 25136                           
 25137                           ;pin_manager.c: 93: LATEbits.LATE2 = 1;
 25138  0062CA  848D               	bsf	3981,2,c	;volatile
 25139                           
 25140                           ;pin_manager.c: 95: ANSELAbits.ANSA0 = 0;
 25141  0062CC  010F               	movlb	15	; () banked
 25142  0062CE  915B               	bcf	91,0,b	;volatile
 25143                           
 25144                           ; BSR set to: 15
 25145                           ;pin_manager.c: 96: ANSELAbits.ANSA1 = 1;
 25146  0062D0  010F               	movlb	15	; () banked
 25147  0062D2  835B               	bsf	91,1,b	;volatile
 25148                           
 25149                           ; BSR set to: 15
 25150                           ;pin_manager.c: 97: ANSELAbits.ANSA2 = 1;
 25151  0062D4  010F               	movlb	15	; () banked
 25152  0062D6  855B               	bsf	91,2,b	;volatile
 25153                           
 25154                           ; BSR set to: 15
 25155                           ;pin_manager.c: 98: ANSELAbits.ANSA3 = 1;
 25156  0062D8  010F               	movlb	15	; () banked
 25157  0062DA  875B               	bsf	91,3,b	;volatile
 25158                           
 25159                           ; BSR set to: 15
 25160                           ;pin_manager.c: 99: ANSELCbits.ANSC7 = 0;
 25161  0062DC  010F               	movlb	15	; () banked
 25162  0062DE  9F5D               	bcf	93,7,b	;volatile
 25163                           
 25164                           ; BSR set to: 15
 25165                           ;pin_manager.c: 100: ANSELCbits.ANSC6 = 0;
 25166  0062E0  010F               	movlb	15	; () banked
 25167  0062E2  9D5D               	bcf	93,6,b	;volatile
 25168                           
 25169                           ; BSR set to: 15
 25170  0062E4  0012               	return		;funcret
 25171  0062E6                     __end_of_PIN_MANAGER_Initialize:
 25172                           	opt stack 0
 25173                           tblptru	equ	0xFF8
 25174                           tblptrh	equ	0xFF7
 25175                           tblptrl	equ	0xFF6
 25176                           tablat	equ	0xFF5
 25177                           prodh	equ	0xFF4
 25178                           prodl	equ	0xFF3
 25179                           intcon	equ	0xFF2
 25180                           intcon3	equ	0xFF0
 25181                           indf0	equ	0xFEF
 25182                           postinc0	equ	0xFEE
 25183                           fsr0h	equ	0xFEA
 25184                           fsr0l	equ	0xFE9
 25185                           wreg	equ	0xFE8
 25186                           indf1	equ	0xFE7
 25187                           postdec1	equ	0xFE5
 25188                           fsr1h	equ	0xFE2
 25189                           fsr1l	equ	0xFE1
 25190                           indf2	equ	0xFDF
 25191                           postinc2	equ	0xFDE
 25192                           postdec2	equ	0xFDD
 25193                           plusw2	equ	0xFDB
 25194                           fsr2h	equ	0xFDA
 25195                           fsr2l	equ	0xFD9
 25196                           status	equ	0xFD8
 25197                           
 25198 ;; *************** function _OSCILLATOR_Initialize *****************
 25199 ;; Defined at:
 25200 ;;		line 106 in file "../Includes/MccGenerated/mcc.c"
 25201 ;; Parameters:    Size  Location     Type
 25202 ;;		None
 25203 ;; Auto vars:     Size  Location     Type
 25204 ;;		None
 25205 ;; Return value:  Size  Location     Type
 25206 ;;		None               void
 25207 ;; Registers used:
 25208 ;;		wreg, status,2
 25209 ;; Tracked objects:
 25210 ;;		On entry : 0/0
 25211 ;;		On exit  : 0/0
 25212 ;;		Unchanged: 0/0
 25213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25214 ;;      Params:         0       0       0       0       0       0       0       0       0
 25215 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25216 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25217 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25218 ;;Total ram usage:        0 bytes
 25219 ;; Hardware stack levels used:    1
 25220 ;; Hardware stack levels required when called:   11
 25221 ;; This function calls:
 25222 ;;		Nothing
 25223 ;; This function is called by:
 25224 ;;		_SYSTEM_Initialize
 25225 ;; This function uses a non-reentrant model
 25226 ;;
 25227                           
 25228                           	psect	text97
 25229  006A30                     __ptext97:
 25230                           	opt stack 0
 25231  006A30                     _OSCILLATOR_Initialize:
 25232                           	opt stack 18
 25233                           
 25234                           ;mcc.c: 108: OSCTUNE = 0x80;
 25235                           
 25236                           ; BSR set to: 15
 25237                           ;incstack = 0
 25238  006A30  0E80               	movlw	128
 25239  006A32  6E9B               	movwf	3995,c	;volatile
 25240                           
 25241                           ;mcc.c: 109: OSCCON = 0x70;
 25242  006A34  0E70               	movlw	112
 25243  006A36  6ED3               	movwf	4051,c	;volatile
 25244                           
 25245                           ;mcc.c: 110: OSCCON2 = 0x10;
 25246  006A38  0E10               	movlw	16
 25247  006A3A  6ED2               	movwf	4050,c	;volatile
 25248  006A3C                     l1236:
 25249  006A3C  AED2               	btfss	4050,7,c	;volatile
 25250  006A3E  D7FE               	goto	l1236
 25251                           
 25252                           ;mcc.c: 112: ACTCON = 0x90;
 25253  006A40  0E90               	movlw	144
 25254  006A42  6EB5               	movwf	4021,c	;volatile
 25255  006A44  0012               	return		;funcret
 25256  006A46                     __end_of_OSCILLATOR_Initialize:
 25257                           	opt stack 0
 25258                           tblptru	equ	0xFF8
 25259                           tblptrh	equ	0xFF7
 25260                           tblptrl	equ	0xFF6
 25261                           tablat	equ	0xFF5
 25262                           prodh	equ	0xFF4
 25263                           prodl	equ	0xFF3
 25264                           intcon	equ	0xFF2
 25265                           intcon3	equ	0xFF0
 25266                           indf0	equ	0xFEF
 25267                           postinc0	equ	0xFEE
 25268                           fsr0h	equ	0xFEA
 25269                           fsr0l	equ	0xFE9
 25270                           wreg	equ	0xFE8
 25271                           indf1	equ	0xFE7
 25272                           postdec1	equ	0xFE5
 25273                           fsr1h	equ	0xFE2
 25274                           fsr1l	equ	0xFE1
 25275                           indf2	equ	0xFDF
 25276                           postinc2	equ	0xFDE
 25277                           postdec2	equ	0xFDD
 25278                           plusw2	equ	0xFDB
 25279                           fsr2h	equ	0xFDA
 25280                           fsr2l	equ	0xFD9
 25281                           status	equ	0xFD8
 25282                           
 25283 ;; *************** function _EUSART_Initialize *****************
 25284 ;; Defined at:
 25285 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 25286 ;; Parameters:    Size  Location     Type
 25287 ;;		None
 25288 ;; Auto vars:     Size  Location     Type
 25289 ;;		None
 25290 ;; Return value:  Size  Location     Type
 25291 ;;		None               void
 25292 ;; Registers used:
 25293 ;;		wreg, status,2
 25294 ;; Tracked objects:
 25295 ;;		On entry : 0/0
 25296 ;;		On exit  : 0/0
 25297 ;;		Unchanged: 0/0
 25298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25299 ;;      Params:         0       0       0       0       0       0       0       0       0
 25300 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25301 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25302 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25303 ;;Total ram usage:        0 bytes
 25304 ;; Hardware stack levels used:    1
 25305 ;; Hardware stack levels required when called:   11
 25306 ;; This function calls:
 25307 ;;		Nothing
 25308 ;; This function is called by:
 25309 ;;		_SYSTEM_Initialize
 25310 ;; This function uses a non-reentrant model
 25311 ;;
 25312                           
 25313                           	psect	text98
 25314  006496                     __ptext98:
 25315                           	opt stack 0
 25316  006496                     _EUSART_Initialize:
 25317                           	opt stack 18
 25318                           
 25319                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 25320                           
 25321                           ;incstack = 0
 25322  006496  9A9D               	bcf	3997,5,c	;volatile
 25323                           
 25324                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 25325  006498  989D               	bcf	3997,4,c	;volatile
 25326                           
 25327                           ;eusart.c: 85: BAUDCON = 0x48;
 25328  00649A  0E48               	movlw	72
 25329  00649C  6EB8               	movwf	4024,c	;volatile
 25330                           
 25331                           ;eusart.c: 88: RCSTA = 0x90;
 25332  00649E  0E90               	movlw	144
 25333  0064A0  6EAB               	movwf	4011,c	;volatile
 25334                           
 25335                           ;eusart.c: 91: TXSTA = 0x26;
 25336  0064A2  0E26               	movlw	38
 25337  0064A4  6EAC               	movwf	4012,c	;volatile
 25338                           
 25339                           ;eusart.c: 95: SPBRG = 0xD0;
 25340  0064A6  0ED0               	movlw	208
 25341  0064A8  6EAF               	movwf	4015,c	;volatile
 25342                           
 25343                           ;eusart.c: 100: SPBRGH = 0x00;
 25344  0064AA  0E00               	movlw	0
 25345  0064AC  6EB0               	movwf	4016,c	;volatile
 25346                           
 25347                           ;eusart.c: 103: eusartTxHead = 0;
 25348  0064AE  0E00               	movlw	0
 25349  0064B0  0100               	movlb	0	; () banked
 25350  0064B2  6FE1               	movwf	_eusartTxHead& (0+255),b
 25351                           
 25352                           ;eusart.c: 104: eusartTxTail = 0;
 25353  0064B4  0E00               	movlw	0
 25354  0064B6  0100               	movlb	0	; () banked
 25355  0064B8  6FE2               	movwf	_eusartTxTail& (0+255),b
 25356                           
 25357                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 25358  0064BA  0E40               	movlw	64
 25359  0064BC  6E54               	movwf	_eusartTxBufferRemaining,c	;volatile
 25360                           
 25361                           ;eusart.c: 107: eusartRxHead = 0;
 25362  0064BE  0E00               	movlw	0
 25363  0064C0  0100               	movlb	0	; () banked
 25364  0064C2  6FDF               	movwf	_eusartRxHead& (0+255),b
 25365                           
 25366                           ;eusart.c: 108: eusartRxTail = 0;
 25367  0064C4  0E00               	movlw	0
 25368  0064C6  0100               	movlb	0	; () banked
 25369  0064C8  6FE0               	movwf	_eusartRxTail& (0+255),b
 25370                           
 25371                           ;eusart.c: 109: eusartRxCount = 0;
 25372  0064CA  0E00               	movlw	0
 25373  0064CC  6E53               	movwf	_eusartRxCount,c	;volatile
 25374                           
 25375                           ; BSR set to: 0
 25376                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 25377  0064CE  8A9D               	bsf	3997,5,c	;volatile
 25378                           
 25379                           ; BSR set to: 0
 25380                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 25381  0064D0  88AB               	bsf	4011,4,c	;volatile
 25382                           
 25383                           ; BSR set to: 0
 25384  0064D2  0012               	return		;funcret
 25385  0064D4                     __end_of_EUSART_Initialize:
 25386                           	opt stack 0
 25387                           tblptru	equ	0xFF8
 25388                           tblptrh	equ	0xFF7
 25389                           tblptrl	equ	0xFF6
 25390                           tablat	equ	0xFF5
 25391                           prodh	equ	0xFF4
 25392                           prodl	equ	0xFF3
 25393                           intcon	equ	0xFF2
 25394                           intcon3	equ	0xFF0
 25395                           indf0	equ	0xFEF
 25396                           postinc0	equ	0xFEE
 25397                           fsr0h	equ	0xFEA
 25398                           fsr0l	equ	0xFE9
 25399                           wreg	equ	0xFE8
 25400                           indf1	equ	0xFE7
 25401                           postdec1	equ	0xFE5
 25402                           fsr1h	equ	0xFE2
 25403                           fsr1l	equ	0xFE1
 25404                           indf2	equ	0xFDF
 25405                           postinc2	equ	0xFDE
 25406                           postdec2	equ	0xFDD
 25407                           plusw2	equ	0xFDB
 25408                           fsr2h	equ	0xFDA
 25409                           fsr2l	equ	0xFD9
 25410                           status	equ	0xFD8
 25411                           
 25412 ;; *************** function _CMP1_Initialize *****************
 25413 ;; Defined at:
 25414 ;;		line 58 in file "../Includes/MccGenerated/cmp1.c"
 25415 ;; Parameters:    Size  Location     Type
 25416 ;;		None
 25417 ;; Auto vars:     Size  Location     Type
 25418 ;;		None
 25419 ;; Return value:  Size  Location     Type
 25420 ;;		None               void
 25421 ;; Registers used:
 25422 ;;		wreg, status,2
 25423 ;; Tracked objects:
 25424 ;;		On entry : 0/0
 25425 ;;		On exit  : 0/0
 25426 ;;		Unchanged: 0/0
 25427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25428 ;;      Params:         0       0       0       0       0       0       0       0       0
 25429 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25430 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25431 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25432 ;;Total ram usage:        0 bytes
 25433 ;; Hardware stack levels used:    1
 25434 ;; Hardware stack levels required when called:   11
 25435 ;; This function calls:
 25436 ;;		Nothing
 25437 ;; This function is called by:
 25438 ;;		_SYSTEM_Initialize
 25439 ;; This function uses a non-reentrant model
 25440 ;;
 25441                           
 25442                           	psect	text99
 25443  006AA8                     __ptext99:
 25444                           	opt stack 0
 25445  006AA8                     _CMP1_Initialize:
 25446                           	opt stack 18
 25447                           
 25448                           ;cmp1.c: 65: PIE2bits.C1IE = 0;
 25449                           
 25450                           ; BSR set to: 0
 25451                           ;incstack = 0
 25452  006AA8  9CA0               	bcf	4000,6,c	;volatile
 25453                           
 25454                           ;cmp1.c: 70: CM1CON0 = 0x9C;
 25455  006AAA  0E9C               	movlw	156
 25456  006AAC  6E98               	movwf	3992,c	;volatile
 25457                           
 25458                           ;cmp1.c: 73: CM2CON1bits.C1RSEL = 0x1;
 25459  006AAE  8A9A               	bsf	3994,5,c	;volatile
 25460                           
 25461                           ;cmp1.c: 76: CM2CON1bits.C1SYNC = 0x0;
 25462  006AB0  929A               	bcf	3994,1,c	;volatile
 25463                           
 25464                           ;cmp1.c: 79: CM2CON1bits.C1HYS = 0x0;
 25465  006AB2  969A               	bcf	3994,3,c	;volatile
 25466                           
 25467                           ;cmp1.c: 83: PIR2bits.C1IF = 0;
 25468  006AB4  9CA1               	bcf	4001,6,c	;volatile
 25469                           
 25470                           ;cmp1.c: 86: PIE2bits.C1IE = 0;
 25471  006AB6  9CA0               	bcf	4000,6,c	;volatile
 25472  006AB8  0012               	return		;funcret
 25473  006ABA                     __end_of_CMP1_Initialize:
 25474                           	opt stack 0
 25475                           tblptru	equ	0xFF8
 25476                           tblptrh	equ	0xFF7
 25477                           tblptrl	equ	0xFF6
 25478                           tablat	equ	0xFF5
 25479                           prodh	equ	0xFF4
 25480                           prodl	equ	0xFF3
 25481                           intcon	equ	0xFF2
 25482                           intcon3	equ	0xFF0
 25483                           indf0	equ	0xFEF
 25484                           postinc0	equ	0xFEE
 25485                           fsr0h	equ	0xFEA
 25486                           fsr0l	equ	0xFE9
 25487                           wreg	equ	0xFE8
 25488                           indf1	equ	0xFE7
 25489                           postdec1	equ	0xFE5
 25490                           fsr1h	equ	0xFE2
 25491                           fsr1l	equ	0xFE1
 25492                           indf2	equ	0xFDF
 25493                           postinc2	equ	0xFDE
 25494                           postdec2	equ	0xFDD
 25495                           plusw2	equ	0xFDB
 25496                           fsr2h	equ	0xFDA
 25497                           fsr2l	equ	0xFD9
 25498                           status	equ	0xFD8
 25499                           
 25500 ;; *************** function _ADC_Initialize *****************
 25501 ;; Defined at:
 25502 ;;		line 65 in file "../Includes/MccGenerated/adc.c"
 25503 ;; Parameters:    Size  Location     Type
 25504 ;;		None
 25505 ;; Auto vars:     Size  Location     Type
 25506 ;;		None
 25507 ;; Return value:  Size  Location     Type
 25508 ;;		None               void
 25509 ;; Registers used:
 25510 ;;		wreg, status,2
 25511 ;; Tracked objects:
 25512 ;;		On entry : 0/0
 25513 ;;		On exit  : 0/0
 25514 ;;		Unchanged: 0/0
 25515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25516 ;;      Params:         0       0       0       0       0       0       0       0       0
 25517 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25518 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25519 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25520 ;;Total ram usage:        0 bytes
 25521 ;; Hardware stack levels used:    1
 25522 ;; Hardware stack levels required when called:   11
 25523 ;; This function calls:
 25524 ;;		Nothing
 25525 ;; This function is called by:
 25526 ;;		_SYSTEM_Initialize
 25527 ;; This function uses a non-reentrant model
 25528 ;;
 25529                           
 25530                           	psect	text100
 25531  0069BC                     __ptext100:
 25532                           	opt stack 0
 25533  0069BC                     _ADC_Initialize:
 25534                           	opt stack 18
 25535                           
 25536                           ;adc.c: 68: VREFCON0 = 0b10100000;
 25537                           
 25538                           ;incstack = 0
 25539  0069BC  0EA0               	movlw	160
 25540  0069BE  6E7D               	movwf	3965,c	;volatile
 25541                           
 25542                           ;adc.c: 70: ADCON0 = 0x01;
 25543  0069C0  0E01               	movlw	1
 25544  0069C2  6EC2               	movwf	4034,c	;volatile
 25545                           
 25546                           ;adc.c: 73: ADCON1 = 0x08;
 25547  0069C4  0E08               	movlw	8
 25548  0069C6  6EC1               	movwf	4033,c	;volatile
 25549                           
 25550                           ;adc.c: 76: ADCON2 = 0b10001110;
 25551  0069C8  0E8E               	movlw	142
 25552  0069CA  6EC0               	movwf	4032,c	;volatile
 25553                           
 25554                           ;adc.c: 79: ADRESL = 0x00;
 25555  0069CC  0E00               	movlw	0
 25556  0069CE  6EC3               	movwf	4035,c	;volatile
 25557                           
 25558                           ;adc.c: 82: ADRESH = 0x00;
 25559  0069D0  0E00               	movlw	0
 25560  0069D2  6EC4               	movwf	4036,c	;volatile
 25561  0069D4  0012               	return		;funcret
 25562  0069D6                     __end_of_ADC_Initialize:
 25563                           	opt stack 0
 25564                           tblptru	equ	0xFF8
 25565                           tblptrh	equ	0xFF7
 25566                           tblptrl	equ	0xFF6
 25567                           tablat	equ	0xFF5
 25568                           prodh	equ	0xFF4
 25569                           prodl	equ	0xFF3
 25570                           intcon	equ	0xFF2
 25571                           intcon3	equ	0xFF0
 25572                           indf0	equ	0xFEF
 25573                           postinc0	equ	0xFEE
 25574                           fsr0h	equ	0xFEA
 25575                           fsr0l	equ	0xFE9
 25576                           wreg	equ	0xFE8
 25577                           indf1	equ	0xFE7
 25578                           postdec1	equ	0xFE5
 25579                           fsr1h	equ	0xFE2
 25580                           fsr1l	equ	0xFE1
 25581                           indf2	equ	0xFDF
 25582                           postinc2	equ	0xFDE
 25583                           postdec2	equ	0xFDD
 25584                           plusw2	equ	0xFDB
 25585                           fsr2h	equ	0xFDA
 25586                           fsr2l	equ	0xFD9
 25587                           status	equ	0xFD8
 25588                           
 25589 ;; *************** function _MOTEapp_handlerState *****************
 25590 ;; Defined at:
 25591 ;;		line 184 in file "../Includes/Board/MOTEapp.c"
 25592 ;; Parameters:    Size  Location     Type
 25593 ;;  state           1    wreg     enum E6785
 25594 ;; Auto vars:     Size  Location     Type
 25595 ;;  state           1    0[BANK0 ] enum E6785
 25596 ;; Return value:  Size  Location     Type
 25597 ;;		None               void
 25598 ;; Registers used:
 25599 ;;		wreg
 25600 ;; Tracked objects:
 25601 ;;		On entry : 0/0
 25602 ;;		On exit  : 0/0
 25603 ;;		Unchanged: 0/0
 25604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25605 ;;      Params:         0       0       0       0       0       0       0       0       0
 25606 ;;      Locals:         0       1       0       0       0       0       0       0       0
 25607 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25608 ;;      Totals:         0       1       0       0       0       0       0       0       0
 25609 ;;Total ram usage:        1 bytes
 25610 ;; Hardware stack levels used:    1
 25611 ;; Hardware stack levels required when called:   11
 25612 ;; This function calls:
 25613 ;;		Nothing
 25614 ;; This function is called by:
 25615 ;;		_main
 25616 ;; This function uses a non-reentrant model
 25617 ;;
 25618                           
 25619                           	psect	text101
 25620  006B2E                     __ptext101:
 25621                           	opt stack 0
 25622  006B2E                     _MOTEapp_handlerState:
 25623                           	opt stack 19
 25624                           
 25625                           ;incstack = 0
 25626                           ;MOTEapp_handlerState@state stored from wreg
 25627  006B2E  0100               	movlb	0	; () banked
 25628  006B30  6F60               	movwf	MOTEapp_handlerState@state& (0+255),b
 25629                           
 25630                           ;MOTEapp.c: 186: moteState = state;
 25631  006B32  C060  F0FA         	movff	MOTEapp_handlerState@state,_moteState
 25632  006B36  0012               	return		;funcret
 25633  006B38                     __end_of_MOTEapp_handlerState:
 25634                           	opt stack 0
 25635                           tblptru	equ	0xFF8
 25636                           tblptrh	equ	0xFF7
 25637                           tblptrl	equ	0xFF6
 25638                           tablat	equ	0xFF5
 25639                           prodh	equ	0xFF4
 25640                           prodl	equ	0xFF3
 25641                           intcon	equ	0xFF2
 25642                           intcon3	equ	0xFF0
 25643                           indf0	equ	0xFEF
 25644                           postinc0	equ	0xFEE
 25645                           fsr0h	equ	0xFEA
 25646                           fsr0l	equ	0xFE9
 25647                           wreg	equ	0xFE8
 25648                           indf1	equ	0xFE7
 25649                           postdec1	equ	0xFE5
 25650                           fsr1h	equ	0xFE2
 25651                           fsr1l	equ	0xFE1
 25652                           indf2	equ	0xFDF
 25653                           postinc2	equ	0xFDE
 25654                           postdec2	equ	0xFDD
 25655                           plusw2	equ	0xFDB
 25656                           fsr2h	equ	0xFDA
 25657                           fsr2l	equ	0xFD9
 25658                           status	equ	0xFD8
 25659                           
 25660 ;; *************** function _DATAEE_ReadByte *****************
 25661 ;; Defined at:
 25662 ;;		line 188 in file "../Includes/MccGenerated/memory.c"
 25663 ;; Parameters:    Size  Location     Type
 25664 ;;  bAdd            1    wreg     unsigned char 
 25665 ;; Auto vars:     Size  Location     Type
 25666 ;;  bAdd            1    0[BANK0 ] unsigned char 
 25667 ;; Return value:  Size  Location     Type
 25668 ;;                  1    wreg      unsigned char 
 25669 ;; Registers used:
 25670 ;;		wreg, status,2
 25671 ;; Tracked objects:
 25672 ;;		On entry : 0/0
 25673 ;;		On exit  : 0/0
 25674 ;;		Unchanged: 0/0
 25675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25676 ;;      Params:         0       0       0       0       0       0       0       0       0
 25677 ;;      Locals:         0       1       0       0       0       0       0       0       0
 25678 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25679 ;;      Totals:         0       1       0       0       0       0       0       0       0
 25680 ;;Total ram usage:        1 bytes
 25681 ;; Hardware stack levels used:    1
 25682 ;; Hardware stack levels required when called:   11
 25683 ;; This function calls:
 25684 ;;		Nothing
 25685 ;; This function is called by:
 25686 ;;		_main
 25687 ;; This function uses a non-reentrant model
 25688 ;;
 25689                           
 25690                           	psect	text102
 25691  006A46                     __ptext102:
 25692                           	opt stack 0
 25693  006A46                     _DATAEE_ReadByte:
 25694                           	opt stack 19
 25695                           
 25696                           ;incstack = 0
 25697                           ;DATAEE_ReadByte@bAdd stored from wreg
 25698  006A46  0100               	movlb	0	; () banked
 25699  006A48  6F60               	movwf	DATAEE_ReadByte@bAdd& (0+255),b
 25700                           
 25701                           ;memory.c: 190: EEADR = (bAdd & 0xFF);
 25702  006A4A  C060  FFA9         	movff	DATAEE_ReadByte@bAdd,4009	;volatile
 25703                           
 25704                           ;memory.c: 191: EECON1bits.CFGS = 0;
 25705  006A4E  9CA6               	bcf	4006,6,c	;volatile
 25706                           
 25707                           ;memory.c: 192: EECON1bits.EEPGD = 0;
 25708  006A50  9EA6               	bcf	4006,7,c	;volatile
 25709                           
 25710                           ;memory.c: 193: EECON1bits.RD = 1;
 25711  006A52  80A6               	bsf	4006,0,c	;volatile
 25712                           
 25713                           ;memory.c: 194: __nop();
 25714  006A54  F000               	nop	
 25715                           
 25716                           ;memory.c: 195: __nop();
 25717  006A56  F000               	nop	
 25718                           
 25719                           ;memory.c: 197: return (EEDATA);
 25720  006A58  50A8               	movf	4008,w,c	;volatile
 25721  006A5A  0012               	return	
 25722  006A5C                     __end_of_DATAEE_ReadByte:
 25723                           	opt stack 0
 25724                           tblptru	equ	0xFF8
 25725                           tblptrh	equ	0xFF7
 25726                           tblptrl	equ	0xFF6
 25727                           tablat	equ	0xFF5
 25728                           prodh	equ	0xFF4
 25729                           prodl	equ	0xFF3
 25730                           intcon	equ	0xFF2
 25731                           intcon3	equ	0xFF0
 25732                           indf0	equ	0xFEF
 25733                           postinc0	equ	0xFEE
 25734                           fsr0h	equ	0xFEA
 25735                           fsr0l	equ	0xFE9
 25736                           wreg	equ	0xFE8
 25737                           indf1	equ	0xFE7
 25738                           postdec1	equ	0xFE5
 25739                           fsr1h	equ	0xFE2
 25740                           fsr1l	equ	0xFE1
 25741                           indf2	equ	0xFDF
 25742                           postinc2	equ	0xFDE
 25743                           postdec2	equ	0xFDD
 25744                           plusw2	equ	0xFDB
 25745                           fsr2h	equ	0xFDA
 25746                           fsr2l	equ	0xFD9
 25747                           status	equ	0xFD8
 25748                           
 25749 ;; *************** function _INTERRUPT_InterruptManager *****************
 25750 ;; Defined at:
 25751 ;;		line 55 in file "../Includes/MccGenerated/interrupt_manager.c"
 25752 ;; Parameters:    Size  Location     Type
 25753 ;;		None
 25754 ;; Auto vars:     Size  Location     Type
 25755 ;;		None
 25756 ;; Return value:  Size  Location     Type
 25757 ;;		None               void
 25758 ;; Registers used:
 25759 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 25760 ;; Tracked objects:
 25761 ;;		On entry : 0/0
 25762 ;;		On exit  : 0/0
 25763 ;;		Unchanged: 0/0
 25764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25765 ;;      Params:         0       0       0       0       0       0       0       0       0
 25766 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25767 ;;      Temps:         14       0       0       0       0       0       0       0       0
 25768 ;;      Totals:        14       0       0       0       0       0       0       0       0
 25769 ;;Total ram usage:       14 bytes
 25770 ;; Hardware stack levels used:    1
 25771 ;; Hardware stack levels required when called:   10
 25772 ;; This function calls:
 25773 ;;		_CMP1_ISR
 25774 ;;		_EUSART_Receive_ISR
 25775 ;;		_EUSART_Transmit_ISR
 25776 ;;		_TMR1_ISR
 25777 ;;		_TMR3_ISR
 25778 ;;		_TMRapp_Tick
 25779 ;;		_USBDeviceTasks
 25780 ;;		_USBapp_setrxByteFlag
 25781 ;; This function is called by:
 25782 ;;		Interrupt level 2
 25783 ;; This function uses a non-reentrant model
 25784 ;;
 25785                           
 25786                           	psect	intcode
 25787  000008                     __pintcode:
 25788                           	opt stack 0
 25789  000008                     _INTERRUPT_InterruptManager:
 25790                           	opt stack 11
 25791                           
 25792                           ;incstack = 0
 25793  000008  825B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 25794  00000A  CFFA F020          	movff	pclath,??_INTERRUPT_InterruptManager
 25795  00000E  CFFB F021          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 25796  000012  CFE9 F022          	movff	fsr0l,??_INTERRUPT_InterruptManager+2
 25797  000016  CFEA F023          	movff	fsr0h,??_INTERRUPT_InterruptManager+3
 25798  00001A  CFE1 F024          	movff	fsr1l,??_INTERRUPT_InterruptManager+4
 25799  00001E  CFE2 F025          	movff	fsr1h,??_INTERRUPT_InterruptManager+5
 25800  000022  CFD9 F026          	movff	fsr2l,??_INTERRUPT_InterruptManager+6
 25801  000026  CFDA F027          	movff	fsr2h,??_INTERRUPT_InterruptManager+7
 25802  00002A  CFF3 F028          	movff	prodl,??_INTERRUPT_InterruptManager+8
 25803  00002E  CFF4 F029          	movff	prodh,??_INTERRUPT_InterruptManager+9
 25804  000032  CFF6 F02A          	movff	tblptrl,??_INTERRUPT_InterruptManager+10
 25805  000036  CFF7 F02B          	movff	tblptrh,??_INTERRUPT_InterruptManager+11
 25806  00003A  CFF8 F02C          	movff	tblptru,??_INTERRUPT_InterruptManager+12
 25807  00003E  CFF5 F02D          	movff	tablat,??_INTERRUPT_InterruptManager+13
 25808                           
 25809                           ;interrupt_manager.c: 58: if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 25810  000042  B09D               	btfsc	3997,0,c	;volatile
 25811  000044  A09E               	btfss	3998,0,c	;volatile
 25812  000046  D004               	goto	i2l11666
 25813                           
 25814                           ;interrupt_manager.c: 59: {
 25815                           ;interrupt_manager.c: 60: TMR1_ISR();
 25816  000048  EC82  F035         	call	_TMR1_ISR	;wreg free
 25817                           
 25818                           ;interrupt_manager.c: 62: TMRapp_Tick();
 25819  00004C  ECAF  F035         	call	_TMRapp_Tick	;wreg free
 25820  000050                     i2l11666:
 25821                           
 25822                           ;interrupt_manager.c: 63: }
 25823                           ;interrupt_manager.c: 64: if(PIE2bits.TMR3IE == 1 && PIR2bits.TMR3IF == 1)
 25824  000050  B2A0               	btfsc	4000,1,c	;volatile
 25825  000052  A2A1               	btfss	4001,1,c	;volatile
 25826  000054  D003               	goto	i2l1196
 25827                           
 25828                           ;interrupt_manager.c: 65: {
 25829                           ;interrupt_manager.c: 66: TMR3_ISR();
 25830  000056  ECB4  F034         	call	_TMR3_ISR	;wreg free
 25831                           
 25832                           ;interrupt_manager.c: 67: }
 25833  00005A  D016               	goto	i2l1204
 25834  00005C                     i2l1196:
 25835                           
 25836                           ;interrupt_manager.c: 68: else if( (PIE1bits.RCIE == 1) && (PIR1bits.RCIF == 1) )
 25837  00005C  BA9D               	btfsc	3997,5,c	;volatile
 25838  00005E  AA9E               	btfss	3998,5,c	;volatile
 25839  000060  D005               	goto	i2l1198
 25840                           
 25841                           ;interrupt_manager.c: 69: {
 25842                           ;interrupt_manager.c: 70: USBapp_setrxByteFlag();
 25843  000062  ECAC  F035         	call	_USBapp_setrxByteFlag	;wreg free
 25844                           
 25845                           ;interrupt_manager.c: 71: EUSART_Receive_ISR();
 25846  000066  EC6E  F033         	call	_EUSART_Receive_ISR	;wreg free
 25847                           
 25848                           ;interrupt_manager.c: 72: }
 25849  00006A  D00E               	goto	i2l1204
 25850  00006C                     i2l1198:
 25851                           
 25852                           ;interrupt_manager.c: 73: else if( (PIE1bits.TXIE == 1) && (PIR1bits.TXIF == 1) )
 25853  00006C  B89D               	btfsc	3997,4,c	;volatile
 25854  00006E  A89E               	btfss	3998,4,c	;volatile
 25855  000070  D003               	goto	i2l1200
 25856                           
 25857                           ;interrupt_manager.c: 74: {
 25858                           ;interrupt_manager.c: 75: EUSART_Transmit_ISR();
 25859  000072  EC53  F033         	call	_EUSART_Transmit_ISR	;wreg free
 25860                           
 25861                           ;interrupt_manager.c: 76: }
 25862  000076  D008               	goto	i2l1204
 25863  000078                     i2l1200:
 25864                           
 25865                           ;interrupt_manager.c: 77: else if(PIE2bits.C1IE == 1 && PIR2bits.C1IF == 1)
 25866  000078  BCA0               	btfsc	4000,6,c	;volatile
 25867  00007A  ACA1               	btfss	4001,6,c	;volatile
 25868  00007C  D003               	goto	i2l11686
 25869                           
 25870                           ;interrupt_manager.c: 78: {
 25871                           ;interrupt_manager.c: 79: CMP1_ISR();
 25872  00007E  ECBA  F035         	call	_CMP1_ISR	;wreg free
 25873                           
 25874                           ;interrupt_manager.c: 80: }
 25875  000082  D002               	goto	i2l1204
 25876  000084                     i2l11686:
 25877                           
 25878                           ;interrupt_manager.c: 81: else
 25879                           ;interrupt_manager.c: 82: {
 25880                           ;interrupt_manager.c: 84: USBDeviceTasks();
 25881  000084  ECA2  F01C         	call	_USBDeviceTasks	;wreg free
 25882  000088                     i2l1204:
 25883  000088  C02D  FFF5         	movff	??_INTERRUPT_InterruptManager+13,tablat
 25884  00008C  C02C  FFF8         	movff	??_INTERRUPT_InterruptManager+12,tblptru
 25885  000090  C02B  FFF7         	movff	??_INTERRUPT_InterruptManager+11,tblptrh
 25886  000094  C02A  FFF6         	movff	??_INTERRUPT_InterruptManager+10,tblptrl
 25887  000098  C029  FFF4         	movff	??_INTERRUPT_InterruptManager+9,prodh
 25888  00009C  C028  FFF3         	movff	??_INTERRUPT_InterruptManager+8,prodl
 25889  0000A0  C027  FFDA         	movff	??_INTERRUPT_InterruptManager+7,fsr2h
 25890  0000A4  C026  FFD9         	movff	??_INTERRUPT_InterruptManager+6,fsr2l
 25891  0000A8  C025  FFE2         	movff	??_INTERRUPT_InterruptManager+5,fsr1h
 25892  0000AC  C024  FFE1         	movff	??_INTERRUPT_InterruptManager+4,fsr1l
 25893  0000B0  C023  FFEA         	movff	??_INTERRUPT_InterruptManager+3,fsr0h
 25894  0000B4  C022  FFE9         	movff	??_INTERRUPT_InterruptManager+2,fsr0l
 25895  0000B8  C021  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 25896  0000BC  C020  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 25897  0000C0  925B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 25898  0000C2  0011               	retfie		f
 25899  0000C4                     __end_of_INTERRUPT_InterruptManager:
 25900                           	opt stack 0
 25901                           pclatu	equ	0xFFB
 25902                           pclath	equ	0xFFA
 25903                           tblptru	equ	0xFF8
 25904                           tblptrh	equ	0xFF7
 25905                           tblptrl	equ	0xFF6
 25906                           tablat	equ	0xFF5
 25907                           prodh	equ	0xFF4
 25908                           prodl	equ	0xFF3
 25909                           intcon	equ	0xFF2
 25910                           intcon3	equ	0xFF0
 25911                           indf0	equ	0xFEF
 25912                           postinc0	equ	0xFEE
 25913                           fsr0h	equ	0xFEA
 25914                           fsr0l	equ	0xFE9
 25915                           wreg	equ	0xFE8
 25916                           indf1	equ	0xFE7
 25917                           postdec1	equ	0xFE5
 25918                           fsr1h	equ	0xFE2
 25919                           fsr1l	equ	0xFE1
 25920                           indf2	equ	0xFDF
 25921                           postinc2	equ	0xFDE
 25922                           postdec2	equ	0xFDD
 25923                           plusw2	equ	0xFDB
 25924                           fsr2h	equ	0xFDA
 25925                           fsr2l	equ	0xFD9
 25926                           status	equ	0xFD8
 25927                           
 25928 ;; *************** function _USBapp_setrxByteFlag *****************
 25929 ;; Defined at:
 25930 ;;		line 263 in file "../Includes/Board/USBapp.c"
 25931 ;; Parameters:    Size  Location     Type
 25932 ;;		None
 25933 ;; Auto vars:     Size  Location     Type
 25934 ;;		None
 25935 ;; Return value:  Size  Location     Type
 25936 ;;		None               void
 25937 ;; Registers used:
 25938 ;;		wreg, status,2
 25939 ;; Tracked objects:
 25940 ;;		On entry : 0/0
 25941 ;;		On exit  : 0/0
 25942 ;;		Unchanged: 0/0
 25943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 25944 ;;      Params:         0       0       0       0       0       0       0       0       0
 25945 ;;      Locals:         0       0       0       0       0       0       0       0       0
 25946 ;;      Temps:          0       0       0       0       0       0       0       0       0
 25947 ;;      Totals:         0       0       0       0       0       0       0       0       0
 25948 ;;Total ram usage:        0 bytes
 25949 ;; Hardware stack levels used:    1
 25950 ;; This function calls:
 25951 ;;		Nothing
 25952 ;; This function is called by:
 25953 ;;		_INTERRUPT_InterruptManager
 25954 ;; This function uses a non-reentrant model
 25955 ;;
 25956                           
 25957                           	psect	text104
 25958  006B58                     __ptext104:
 25959                           	opt stack 0
 25960  006B58                     _USBapp_setrxByteFlag:
 25961                           	opt stack 20
 25962                           
 25963                           ;USBapp.c: 265: rxByteFlag = 1;
 25964                           
 25965                           ;incstack = 0
 25966  006B58  0E01               	movlw	1
 25967  006B5A  6E56               	movwf	_rxByteFlag,c	;volatile
 25968  006B5C  0012               	return		;funcret
 25969  006B5E                     __end_of_USBapp_setrxByteFlag:
 25970                           	opt stack 0
 25971                           pclatu	equ	0xFFB
 25972                           pclath	equ	0xFFA
 25973                           tblptru	equ	0xFF8
 25974                           tblptrh	equ	0xFF7
 25975                           tblptrl	equ	0xFF6
 25976                           tablat	equ	0xFF5
 25977                           prodh	equ	0xFF4
 25978                           prodl	equ	0xFF3
 25979                           intcon	equ	0xFF2
 25980                           intcon3	equ	0xFF0
 25981                           indf0	equ	0xFEF
 25982                           postinc0	equ	0xFEE
 25983                           fsr0h	equ	0xFEA
 25984                           fsr0l	equ	0xFE9
 25985                           wreg	equ	0xFE8
 25986                           indf1	equ	0xFE7
 25987                           postdec1	equ	0xFE5
 25988                           fsr1h	equ	0xFE2
 25989                           fsr1l	equ	0xFE1
 25990                           indf2	equ	0xFDF
 25991                           postinc2	equ	0xFDE
 25992                           postdec2	equ	0xFDD
 25993                           plusw2	equ	0xFDB
 25994                           fsr2h	equ	0xFDA
 25995                           fsr2l	equ	0xFD9
 25996                           status	equ	0xFD8
 25997                           
 25998 ;; *************** function _USBDeviceTasks *****************
 25999 ;; Defined at:
 26000 ;;		line 428 in file "../Includes/Usb/Framework/usb_device.c"
 26001 ;; Parameters:    Size  Location     Type
 26002 ;;		None
 26003 ;; Auto vars:     Size  Location     Type
 26004 ;;  i               1   30[COMRAM] unsigned char 
 26005 ;; Return value:  Size  Location     Type
 26006 ;;		None               void
 26007 ;; Registers used:
 26008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 26009 ;; Tracked objects:
 26010 ;;		On entry : 0/0
 26011 ;;		On exit  : 0/0
 26012 ;;		Unchanged: 0/0
 26013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26014 ;;      Params:         0       0       0       0       0       0       0       0       0
 26015 ;;      Locals:         1       0       0       0       0       0       0       0       0
 26016 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26017 ;;      Totals:         1       0       0       0       0       0       0       0       0
 26018 ;;Total ram usage:        1 bytes
 26019 ;; Hardware stack levels used:    1
 26020 ;; Hardware stack levels required when called:    9
 26021 ;; This function calls:
 26022 ;;		_USBCtrlEPAllowStatusStage
 26023 ;;		_USBCtrlEPService
 26024 ;;		_USBStallHandler
 26025 ;;		_USBSuspend
 26026 ;;		_USBWakeFromSuspend
 26027 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26028 ;;		i2_USBDeviceInit
 26029 ;; This function is called by:
 26030 ;;		_INTERRUPT_InterruptManager
 26031 ;; This function uses a non-reentrant model
 26032 ;;
 26033                           
 26034                           	psect	text105
 26035  003944                     __ptext105:
 26036                           	opt stack 0
 26037  003944                     _USBDeviceTasks:
 26038                           	opt stack 11
 26039                           
 26040                           ;usb_device.c: 430: uint8_t i;
 26041                           ;usb_device.c: 432: if(USBDeviceState == ATTACHED_STATE)
 26042                           
 26043                           ;incstack = 0
 26044  003944  0100               	movlb	0	; () banked
 26045  003946  05D2               	decf	_USBDeviceState& (0+255),w,b	;volatile
 26046  003948  B4D8               	btfsc	status,2,c
 26047                           
 26048                           ; BSR set to: 0
 26049                           ;usb_device.c: 433: {
 26050                           ;usb_device.c: 443: if(!UCONbits.SE0)
 26051  00394A  BA60               	btfsc	3936,5,c	;volatile
 26052  00394C  D007               	goto	i2l11384
 26053                           
 26054                           ; BSR set to: 0
 26055                           ;usb_device.c: 444: {
 26056                           ;usb_device.c: 445: {UIR = 0;};
 26057  00394E  0E00               	movlw	0
 26058  003950  6E65               	movwf	3941,c	;volatile
 26059                           
 26060                           ; BSR set to: 0
 26061                           ;usb_device.c: 446: UIEbits.URSTIE = 1;
 26062  003952  8064               	bsf	3940,0,c	;volatile
 26063                           
 26064                           ; BSR set to: 0
 26065                           ;usb_device.c: 447: UIEbits.IDLEIE = 1;
 26066  003954  8864               	bsf	3940,4,c	;volatile
 26067                           
 26068                           ;usb_device.c: 448: USBDeviceState = POWERED_STATE;
 26069  003956  0E02               	movlw	2
 26070  003958  0100               	movlb	0	; () banked
 26071  00395A  6FD2               	movwf	_USBDeviceState& (0+255),b	;volatile
 26072  00395C                     i2l11384:
 26073                           
 26074                           ; BSR set to: 0
 26075                           ;usb_device.c: 449: }
 26076                           ;usb_device.c: 450: }
 26077                           ;usb_device.c: 454: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
 26078  00395C  B465               	btfsc	3941,2,c	;volatile
 26079                           
 26080                           ; BSR set to: 0
 26081  00395E  A464               	btfss	3940,2,c	;volatile
 26082  003960  D003               	goto	i2l11392
 26083                           
 26084                           ; BSR set to: 0
 26085                           ;usb_device.c: 455: {
 26086                           ;usb_device.c: 456: (UIR &= 0xFB);
 26087  003962  9465               	bcf	3941,2,c	;volatile
 26088                           
 26089                           ; BSR set to: 0
 26090                           ;usb_device.c: 457: USBWakeFromSuspend();
 26091  003964  ECEE  F033         	call	_USBWakeFromSuspend	;wreg free
 26092  003968                     i2l11392:
 26093                           
 26094                           ;usb_device.c: 458: }
 26095                           ;usb_device.c: 463: if(UCONbits.SUSPND==1)
 26096  003968  A260               	btfss	3936,1,c	;volatile
 26097  00396A  D002               	goto	i2l1728
 26098                           
 26099                           ;usb_device.c: 464: {
 26100                           ;usb_device.c: 465: PIR3bits.USBIF = 0;;
 26101  00396C  94A4               	bcf	4004,2,c	;volatile
 26102                           
 26103                           ;usb_device.c: 466: return;
 26104  00396E  0012               	return	
 26105  003970                     i2l1728:
 26106                           
 26107                           ;usb_device.c: 467: }
 26108                           ;usb_device.c: 479: if(UIRbits.URSTIF && UIEbits.URSTIE)
 26109  003970  B065               	btfsc	3941,0,c	;volatile
 26110  003972  A064               	btfss	3940,0,c	;volatile
 26111  003974  D007               	goto	i2l11406
 26112                           
 26113                           ;usb_device.c: 480: {
 26114                           ;usb_device.c: 481: USBDeviceInit();
 26115  003976  EC06  F01C         	call	i2_USBDeviceInit	;wreg free
 26116                           
 26117                           ;usb_device.c: 485: {PIE3bits.USBIE = 1;};
 26118  00397A  84A3               	bsf	4003,2,c	;volatile
 26119                           
 26120                           ;usb_device.c: 487: USBDeviceState = DEFAULT_STATE;
 26121  00397C  0E04               	movlw	4
 26122  00397E  0100               	movlb	0	; () banked
 26123  003980  6FD2               	movwf	_USBDeviceState& (0+255),b	;volatile
 26124                           
 26125                           ; BSR set to: 0
 26126                           ;usb_device.c: 489: (UIR &= 0xFE);
 26127  003982  9065               	bcf	3941,0,c	;volatile
 26128  003984                     i2l11406:
 26129                           
 26130                           ;usb_device.c: 490: }
 26131                           ;usb_device.c: 495: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 26132  003984  B865               	btfsc	3941,4,c	;volatile
 26133  003986  A864               	btfss	3940,4,c	;volatile
 26134  003988  D003               	goto	i2l11414
 26135                           
 26136                           ;usb_device.c: 496: {
 26137                           ;usb_device.c: 497: USBSuspend();
 26138  00398A  EC31  F034         	call	_USBSuspend	;wreg free
 26139                           
 26140                           ;usb_device.c: 498: (UIR &= 0xEF);
 26141  00398E  9865               	bcf	3941,4,c	;volatile
 26142  003990                     i2l11414:
 26143                           
 26144                           ;usb_device.c: 499: }
 26145                           ;usb_device.c: 501: if(UIRbits.SOFIF)
 26146  003990  AC65               	btfss	3941,6,c	;volatile
 26147  003992  D018               	goto	i2l11430
 26148                           
 26149                           ;usb_device.c: 502: {
 26150                           ;usb_device.c: 503: if(UIEbits.SOFIE)
 26151  003994  AC64               	btfss	3940,6,c	;volatile
 26152  003996  D00E               	goto	i2l11420
 26153                           
 26154                           ;usb_device.c: 504: {
 26155                           ;usb_device.c: 505: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 26156  003998  0E00               	movlw	0
 26157  00399A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26158  00399C  0E73               	movlw	115
 26159  00399E  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26160  0039A0  0E00               	movlw	0
 26161  0039A2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26162  0039A4  0E00               	movlw	0
 26163  0039A6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26164  0039A8  0E00               	movlw	0
 26165  0039AA  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26166  0039AC  0E01               	movlw	1
 26167  0039AE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26168  0039B0  EC67  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26169  0039B4                     i2l11420:
 26170                           
 26171                           ;usb_device.c: 506: }
 26172                           ;usb_device.c: 507: (UIR &= 0xBF);
 26173  0039B4  9C65               	bcf	3941,6,c	;volatile
 26174                           
 26175                           ;usb_device.c: 512: if(USBStatusStageTimeoutCounter != 0u)
 26176  0039B6  504F               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 26177  0039B8  A4D8               	btfss	status,2,c
 26178                           
 26179                           ;usb_device.c: 513: {
 26180                           ;usb_device.c: 514: USBStatusStageTimeoutCounter--;
 26181  0039BA  064F               	decf	_USBStatusStageTimeoutCounter,f,c	;volatile
 26182                           
 26183                           ;usb_device.c: 515: }
 26184                           ;usb_device.c: 521: if(USBStatusStageTimeoutCounter == 0)
 26185  0039BC  504F               	movf	_USBStatusStageTimeoutCounter,w,c	;volatile
 26186  0039BE  B4D8               	btfsc	status,2,c
 26187                           
 26188                           ;usb_device.c: 522: {
 26189                           ;usb_device.c: 523: USBCtrlEPAllowStatusStage();
 26190  0039C0  EC94  F027         	call	_USBCtrlEPAllowStatusStage	;wreg free
 26191  0039C4                     i2l11430:
 26192                           
 26193                           ;usb_device.c: 524: }
 26194                           ;usb_device.c: 525: }
 26195                           ;usb_device.c: 527: if(UIRbits.STALLIF && UIEbits.STALLIE)
 26196  0039C4  BA65               	btfsc	3941,5,c	;volatile
 26197  0039C6  AA64               	btfss	3940,5,c	;volatile
 26198  0039C8  D002               	goto	i2l11436
 26199                           
 26200                           ;usb_device.c: 528: {
 26201                           ;usb_device.c: 529: USBStallHandler();
 26202  0039CA  EC2A  F032         	call	_USBStallHandler	;wreg free
 26203  0039CE                     i2l11436:
 26204                           
 26205                           ;usb_device.c: 530: }
 26206                           ;usb_device.c: 532: if(UIRbits.UERRIF && UIEbits.UERRIE)
 26207  0039CE  B265               	btfsc	3941,1,c	;volatile
 26208  0039D0  A264               	btfss	3940,1,c	;volatile
 26209  0039D2  D00F               	goto	i2l11444
 26210                           
 26211                           ;usb_device.c: 533: {
 26212                           ;usb_device.c: 534: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
 26213  0039D4  0E7F               	movlw	127
 26214  0039D6  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26215  0039D8  680E               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26216  0039DA  0E00               	movlw	0
 26217  0039DC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26218  0039DE  0E00               	movlw	0
 26219  0039E0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26220  0039E2  0E00               	movlw	0
 26221  0039E4  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26222  0039E6  0E01               	movlw	1
 26223  0039E8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26224  0039EA  EC67  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26225                           
 26226                           ;usb_device.c: 535: {UEIR = 0;};
 26227  0039EE  0E00               	movlw	0
 26228  0039F0  6E67               	movwf	3943,c	;volatile
 26229  0039F2                     i2l11444:
 26230                           
 26231                           ;usb_device.c: 536: }
 26232                           ;usb_device.c: 543: if(USBDeviceState < DEFAULT_STATE)
 26233  0039F2  0E04               	movlw	4
 26234  0039F4  0100               	movlb	0	; () banked
 26235  0039F6  61D2               	cpfslt	_USBDeviceState& (0+255),b	;volatile
 26236  0039F8  D002               	goto	i2l1738
 26237                           
 26238                           ; BSR set to: 0
 26239                           ;usb_device.c: 544: {
 26240                           ;usb_device.c: 545: PIR3bits.USBIF = 0;;
 26241  0039FA  94A4               	bcf	4004,2,c	;volatile
 26242                           
 26243                           ;usb_device.c: 546: return;
 26244  0039FC  0012               	return	
 26245  0039FE                     i2l1738:
 26246                           
 26247                           ; BSR set to: 0
 26248                           ;usb_device.c: 547: }
 26249                           ;usb_device.c: 552: if(UIEbits.TRNIE)
 26250  0039FE  A664               	btfss	3940,3,c	;volatile
 26251  003A00  D039               	goto	i2l1739
 26252                           
 26253                           ; BSR set to: 0
 26254                           ;usb_device.c: 553: {
 26255                           ;usb_device.c: 554: for(i = 0; i < 4u; i++)
 26256  003A02  0E00               	movlw	0
 26257  003A04  6E1F               	movwf	USBDeviceTasks@i,c
 26258  003A06                     i2l11450:
 26259                           
 26260                           ; BSR set to: 0
 26261  003A06  0E03               	movlw	3
 26262  003A08  641F               	cpfsgt	USBDeviceTasks@i,c
 26263  003A0A  D001               	goto	i2l1740
 26264  003A0C  D033               	goto	i2l1739
 26265  003A0E                     i2l1740:
 26266                           
 26267                           ;usb_device.c: 555: {
 26268                           ;usb_device.c: 556: if(UIRbits.TRNIF)
 26269  003A0E  A665               	btfss	3941,3,c	;volatile
 26270  003A10  D031               	goto	i2l1739
 26271                           
 26272                           ;usb_device.c: 557: {
 26273                           ;usb_device.c: 559: USTATcopy.Val = USTAT;
 26274  003A12  CF61 F059          	movff	3937,_USTATcopy	;volatile
 26275                           
 26276                           ;usb_device.c: 560: endpoint_number = USTATcopy.endpoint_number;
 26277  003A16  3059               	rrcf	_USTATcopy,w,c	;volatile
 26278  003A18  32E8               	rrcf	wreg,f,c
 26279  003A1A  32E8               	rrcf	wreg,f,c
 26280  003A1C  0B0F               	andlw	15
 26281  003A1E  6E52               	movwf	_endpoint_number,c	;volatile
 26282                           
 26283                           ;usb_device.c: 562: (UIR &= 0xF7);
 26284  003A20  9665               	bcf	3941,3,c	;volatile
 26285                           
 26286                           ;usb_device.c: 566: if(USTATcopy.direction == 0)
 26287  003A22  B459               	btfsc	_USTATcopy,2,c	;volatile
 26288  003A24  D007               	goto	i2l11464
 26289                           
 26290                           ;usb_device.c: 567: {
 26291                           ;usb_device.c: 568: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
 26292  003A26  5052               	movf	_endpoint_number,w,c	;volatile
 26293  003A28  0D01               	mullw	1
 26294  003A2A  0EBC               	movlw	low _ep_data_out
 26295  003A2C  24F3               	addwf	prodl,w,c
 26296  003A2E  6ED9               	movwf	fsr2l,c
 26297  003A30  0E00               	movlw	high _ep_data_out
 26298  003A32  D006               	goto	L25
 26299  003A34                     i2l11464:
 26300                           
 26301                           ;usb_device.c: 570: else
 26302                           ;usb_device.c: 571: {
 26303                           ;usb_device.c: 572: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
 26304  003A34  5052               	movf	_endpoint_number,w,c	;volatile
 26305  003A36  0D01               	mullw	1
 26306  003A38  0EB9               	movlw	low _ep_data_in
 26307  003A3A  24F3               	addwf	prodl,w,c
 26308  003A3C  6ED9               	movwf	fsr2l,c
 26309  003A3E  0E00               	movlw	high _ep_data_in
 26310  003A40                     L25:
 26311  003A40  20F4               	addwfc	prodh,w,c
 26312  003A42  6EDA               	movwf	fsr2h,c
 26313  003A44  0100               	movlb	0	; () banked
 26314  003A46  70DF               	btg	indf2,0,c
 26315                           
 26316                           ; BSR set to: 0
 26317                           ;usb_device.c: 573: }
 26318                           ;usb_device.c: 577: if(endpoint_number == 0)
 26319                           
 26320                           ; BSR set to: 0
 26321  003A48  5052               	movf	_endpoint_number,w,c	;volatile
 26322  003A4A  A4D8               	btfss	status,2,c
 26323  003A4C  D003               	goto	i2l11470
 26324                           
 26325                           ; BSR set to: 0
 26326                           ;usb_device.c: 578: {
 26327                           ;usb_device.c: 579: USBCtrlEPService();
 26328  003A4E  EC2D  F027         	call	_USBCtrlEPService	;wreg free
 26329                           
 26330                           ;usb_device.c: 580: }
 26331  003A52  D00E               	goto	i2l11472
 26332  003A54                     i2l11470:
 26333                           
 26334                           ;usb_device.c: 581: else
 26335                           ;usb_device.c: 582: {
 26336                           ;usb_device.c: 583: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
 26337  003A54  0E00               	movlw	0
 26338  003A56  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26339  003A58  0E72               	movlw	114
 26340  003A5A  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26341  003A5C  0E59               	movlw	low _USTATcopy
 26342  003A5E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26343  003A60  0E00               	movlw	high _USTATcopy
 26344  003A62  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26345  003A64  0E00               	movlw	0
 26346  003A66  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26347  003A68  0E00               	movlw	0
 26348  003A6A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26349  003A6C  EC67  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26350  003A70                     i2l11472:
 26351  003A70  2A1F               	incf	USBDeviceTasks@i,f,c
 26352  003A72  D7C9               	goto	i2l11450
 26353  003A74                     i2l1739:
 26354                           
 26355                           ;usb_device.c: 589: }
 26356                           ;usb_device.c: 590: }
 26357                           ;usb_device.c: 591: }
 26358                           ;usb_device.c: 593: PIR3bits.USBIF = 0;;
 26359  003A74  94A4               	bcf	4004,2,c	;volatile
 26360  003A76  0012               	return		;funcret
 26361  003A78                     __end_of_USBDeviceTasks:
 26362                           	opt stack 0
 26363                           pclatu	equ	0xFFB
 26364                           pclath	equ	0xFFA
 26365                           tblptru	equ	0xFF8
 26366                           tblptrh	equ	0xFF7
 26367                           tblptrl	equ	0xFF6
 26368                           tablat	equ	0xFF5
 26369                           prodh	equ	0xFF4
 26370                           prodl	equ	0xFF3
 26371                           intcon	equ	0xFF2
 26372                           intcon3	equ	0xFF0
 26373                           indf0	equ	0xFEF
 26374                           postinc0	equ	0xFEE
 26375                           fsr0h	equ	0xFEA
 26376                           fsr0l	equ	0xFE9
 26377                           wreg	equ	0xFE8
 26378                           indf1	equ	0xFE7
 26379                           postdec1	equ	0xFE5
 26380                           fsr1h	equ	0xFE2
 26381                           fsr1l	equ	0xFE1
 26382                           indf2	equ	0xFDF
 26383                           postinc2	equ	0xFDE
 26384                           postdec2	equ	0xFDD
 26385                           plusw2	equ	0xFDB
 26386                           fsr2h	equ	0xFDA
 26387                           fsr2l	equ	0xFD9
 26388                           status	equ	0xFD8
 26389                           
 26390 ;; *************** function i2_USBDeviceInit *****************
 26391 ;; Defined at:
 26392 ;;		line 237 in file "../Includes/Usb/Framework/usb_device.c"
 26393 ;; Parameters:    Size  Location     Type
 26394 ;;		None
 26395 ;; Auto vars:     Size  Location     Type
 26396 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 26397 ;; Return value:  Size  Location     Type
 26398 ;;		None               void
 26399 ;; Registers used:
 26400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26401 ;; Tracked objects:
 26402 ;;		On entry : 0/0
 26403 ;;		On exit  : 0/0
 26404 ;;		Unchanged: 0/0
 26405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26406 ;;      Params:         0       0       0       0       0       0       0       0       0
 26407 ;;      Locals:         1       0       0       0       0       0       0       0       0
 26408 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26409 ;;      Totals:         1       0       0       0       0       0       0       0       0
 26410 ;;Total ram usage:        1 bytes
 26411 ;; Hardware stack levels used:    1
 26412 ;; Hardware stack levels required when called:    1
 26413 ;; This function calls:
 26414 ;;		i2_memset
 26415 ;; This function is called by:
 26416 ;;		_USBDeviceTasks
 26417 ;; This function uses a non-reentrant model
 26418 ;;
 26419                           
 26420                           	psect	text106
 26421  00380C                     __ptext106:
 26422                           	opt stack 0
 26423  00380C                     i2_USBDeviceInit:
 26424                           	opt stack 18
 26425                           
 26426                           ;usb_device.c: 239: uint8_t i;
 26427                           ;usb_device.c: 241: {PIE3bits.USBIE = 0;};
 26428                           
 26429                           ;incstack = 0
 26430  00380C  94A3               	bcf	4003,2,c	;volatile
 26431                           
 26432                           ;usb_device.c: 244: {UEIR = 0;};
 26433  00380E  0E00               	movlw	0
 26434  003810  6E67               	movwf	3943,c	;volatile
 26435                           
 26436                           ;usb_device.c: 247: {UIR = 0;};
 26437  003812  0E00               	movlw	0
 26438  003814  6E65               	movwf	3941,c	;volatile
 26439                           
 26440                           ;usb_device.c: 250: UEP0 = 0;
 26441  003816  0E00               	movlw	0
 26442  003818  6E6A               	movwf	3946,c	;volatile
 26443                           
 26444                           ;usb_device.c: 252: memset((void*)&UEP1,0x00,(2));;
 26445  00381A  0E6B               	movlw	107
 26446  00381C  6E01               	movwf	i2memset@p1,c
 26447  00381E  0E0F               	movlw	15
 26448  003820  6E02               	movwf	i2memset@p1+1,c
 26449  003822  0E00               	movlw	0
 26450  003824  6E04               	movwf	i2memset@c+1,c
 26451  003826  0E00               	movlw	0
 26452  003828  6E03               	movwf	i2memset@c,c
 26453  00382A  0E00               	movlw	0
 26454  00382C  6E06               	movwf	i2memset@n+1,c
 26455  00382E  0E02               	movlw	2
 26456  003830  6E05               	movwf	i2memset@n,c
 26457  003832  EC06  F034         	call	i2_memset	;wreg free
 26458                           
 26459                           ;usb_device.c: 254: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 26460  003836  0E16               	movlw	22
 26461  003838  6E62               	movwf	3938,c	;volatile
 26462  00383A  0E9F               	movlw	159
 26463  00383C  6E66               	movwf	3942,c	;volatile
 26464  00383E  0E7B               	movlw	123
 26465  003840  6E64               	movwf	3940,c	;volatile
 26466                           
 26467                           ;usb_device.c: 257: ;
 26468                           ;usb_device.c: 260: ;
 26469                           ;usb_device.c: 263: for(i=0;i<(sizeof(BDT)/sizeof(BDT_ENTRY));i++)
 26470  003842  0E00               	movlw	0
 26471  003844  6E09               	movwf	i2USBDeviceInit@i,c
 26472  003846                     i2l11016:
 26473  003846  0E0B               	movlw	11
 26474  003848  6409               	cpfsgt	i2USBDeviceInit@i,c
 26475  00384A  D001               	goto	i2l11020
 26476  00384C  D00E               	goto	i2l1716
 26477  00384E                     i2l11020:
 26478                           
 26479                           ;usb_device.c: 264: {
 26480                           ;usb_device.c: 265: BDT[i].Val = 0x00;
 26481  00384E  5009               	movf	i2USBDeviceInit@i,w,c
 26482  003850  0D04               	mullw	4
 26483  003852  0E00               	movlw	0
 26484  003854  24F3               	addwf	prodl,w,c
 26485  003856  6ED9               	movwf	fsr2l,c
 26486  003858  0E04               	movlw	4
 26487  00385A  20F4               	addwfc	prodh,w,c
 26488  00385C  6EDA               	movwf	fsr2h,c
 26489  00385E  6ADE               	clrf	postinc2,c
 26490  003860  6ADE               	clrf	postinc2,c
 26491  003862  6ADE               	clrf	postinc2,c
 26492  003864  6ADD               	clrf	postdec2,c
 26493  003866  2A09               	incf	i2USBDeviceInit@i,f,c
 26494  003868  D7EE               	goto	i2l11016
 26495  00386A                     i2l1716:
 26496                           
 26497                           ;usb_device.c: 266: }
 26498                           ;usb_device.c: 269: UCONbits.PPBRST = 1;
 26499  00386A  8C60               	bsf	3936,6,c	;volatile
 26500                           
 26501                           ;usb_device.c: 272: UADDR = 0x00;
 26502  00386C  0E00               	movlw	0
 26503  00386E  6E63               	movwf	3939,c	;volatile
 26504                           
 26505                           ;usb_device.c: 275: UCONbits.PKTDIS = 0;
 26506  003870  9860               	bcf	3936,4,c	;volatile
 26507                           
 26508                           ;usb_device.c: 278: UCONbits.PPBRST = 0;
 26509  003872  9C60               	bcf	3936,6,c	;volatile
 26510                           
 26511                           ;usb_device.c: 281: while(UIRbits.TRNIF == 1)
 26512  003874  D009               	goto	i2l11040
 26513  003876                     i2l11032:
 26514                           
 26515                           ;usb_device.c: 282: {
 26516                           ;usb_device.c: 283: (UIR &= 0xF7);
 26517  003876  9665               	bcf	3941,3,c	;volatile
 26518                           
 26519                           ;usb_device.c: 285: inPipes[0].info.Val = 0;
 26520  003878  0E00               	movlw	0
 26521  00387A  6E39               	movwf	_inPipes+3,c	;volatile
 26522                           
 26523                           ;usb_device.c: 286: outPipes[0].info.Val = 0;
 26524  00387C  0E00               	movlw	0
 26525  00387E  6E31               	movwf	_outPipes+3,c	;volatile
 26526                           
 26527                           ;usb_device.c: 287: outPipes[0].wCount.Val = 0;
 26528  003880  0E00               	movlw	0
 26529  003882  6E33               	movwf	_outPipes+5,c	;volatile
 26530  003884  0E00               	movlw	0
 26531  003886  6E32               	movwf	_outPipes+4,c	;volatile
 26532  003888                     i2l11040:
 26533  003888  B665               	btfsc	3941,3,c	;volatile
 26534  00388A  D7F5               	goto	i2l11032
 26535                           
 26536                           ;usb_device.c: 288: }
 26537                           ;usb_device.c: 292: USBStatusStageEnabledFlag1 = 1;
 26538  00388C  0E01               	movlw	1
 26539  00388E  0100               	movlb	0	; () banked
 26540  003890  6FD3               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 26541                           
 26542                           ;usb_device.c: 293: USBStatusStageEnabledFlag2 = 1;
 26543  003892  0E01               	movlw	1
 26544  003894  0100               	movlb	0	; () banked
 26545  003896  6FD4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 26546                           
 26547                           ;usb_device.c: 295: USBDeferINDataStagePackets = 0;
 26548  003898  0E00               	movlw	0
 26549  00389A  0100               	movlb	0	; () banked
 26550  00389C  6FD0               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 26551                           
 26552                           ;usb_device.c: 296: USBDeferOUTDataStagePackets = 0;
 26553  00389E  0E00               	movlw	0
 26554  0038A0  0100               	movlb	0	; () banked
 26555  0038A2  6FD1               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 26556                           
 26557                           ;usb_device.c: 297: USBBusIsSuspended = 0;
 26558  0038A4  0E00               	movlw	0
 26559  0038A6  0100               	movlb	0	; () banked
 26560  0038A8  6FCF               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 26561                           
 26562                           ;usb_device.c: 301: for(i = 0; i < (uint8_t)(2+1u); i++)
 26563  0038AA  0E00               	movlw	0
 26564  0038AC  6E09               	movwf	i2USBDeviceInit@i,c
 26565  0038AE                     i2l11044:
 26566                           
 26567                           ; BSR set to: 0
 26568  0038AE  0E02               	movlw	2
 26569  0038B0  6409               	cpfsgt	i2USBDeviceInit@i,c
 26570  0038B2  D001               	goto	i2l11048
 26571  0038B4  D02E               	goto	i2l11054
 26572  0038B6                     i2l11048:
 26573                           
 26574                           ;usb_device.c: 302: {
 26575                           ;usb_device.c: 303: pBDTEntryIn[i] = 0u;
 26576  0038B6  5009               	movf	i2USBDeviceInit@i,w,c
 26577  0038B8  0D02               	mullw	2
 26578  0038BA  0E3C               	movlw	low _pBDTEntryIn
 26579  0038BC  24F3               	addwf	prodl,w,c
 26580  0038BE  6ED9               	movwf	fsr2l,c
 26581  0038C0  0E00               	movlw	high _pBDTEntryIn
 26582  0038C2  20F4               	addwfc	prodh,w,c
 26583  0038C4  6EDA               	movwf	fsr2h,c
 26584  0038C6  0E00               	movlw	0
 26585  0038C8  6EDE               	movwf	postinc2,c
 26586  0038CA  0E00               	movlw	0
 26587  0038CC  6EDD               	movwf	postdec2,c
 26588                           
 26589                           ;usb_device.c: 304: pBDTEntryOut[i] = 0u;
 26590  0038CE  5009               	movf	i2USBDeviceInit@i,w,c
 26591  0038D0  0D02               	mullw	2
 26592  0038D2  0E40               	movlw	low _pBDTEntryOut
 26593  0038D4  24F3               	addwf	prodl,w,c
 26594  0038D6  6ED9               	movwf	fsr2l,c
 26595  0038D8  0E01               	movlw	high _pBDTEntryOut
 26596  0038DA  20F4               	addwfc	prodh,w,c
 26597  0038DC  6EDA               	movwf	fsr2h,c
 26598  0038DE  0E00               	movlw	0
 26599  0038E0  6EDE               	movwf	postinc2,c
 26600  0038E2  0E00               	movlw	0
 26601  0038E4  6EDD               	movwf	postdec2,c
 26602                           
 26603                           ;usb_device.c: 305: ep_data_in[i].Val = 0u;
 26604  0038E6  5009               	movf	i2USBDeviceInit@i,w,c
 26605  0038E8  0D01               	mullw	1
 26606  0038EA  0EB9               	movlw	low _ep_data_in
 26607  0038EC  24F3               	addwf	prodl,w,c
 26608  0038EE  6ED9               	movwf	fsr2l,c
 26609  0038F0  0E00               	movlw	high _ep_data_in
 26610  0038F2  20F4               	addwfc	prodh,w,c
 26611  0038F4  6EDA               	movwf	fsr2h,c
 26612  0038F6  0E00               	movlw	0
 26613  0038F8  6EDF               	movwf	indf2,c
 26614                           
 26615                           ;usb_device.c: 306: ep_data_out[i].Val = 0u;
 26616  0038FA  5009               	movf	i2USBDeviceInit@i,w,c
 26617  0038FC  0D01               	mullw	1
 26618  0038FE  0EBC               	movlw	low _ep_data_out
 26619  003900  24F3               	addwf	prodl,w,c
 26620  003902  6ED9               	movwf	fsr2l,c
 26621  003904  0E00               	movlw	high _ep_data_out
 26622  003906  20F4               	addwfc	prodh,w,c
 26623  003908  6EDA               	movwf	fsr2h,c
 26624  00390A  0E00               	movlw	0
 26625  00390C  6EDF               	movwf	indf2,c
 26626  00390E  2A09               	incf	i2USBDeviceInit@i,f,c
 26627  003910  D7CE               	goto	i2l11044
 26628  003912                     i2l11054:
 26629                           
 26630                           ;usb_device.c: 307: }
 26631                           ;usb_device.c: 310: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 26632  003912  0E08               	movlw	8
 26633  003914  6E3C               	movwf	_pBDTEntryIn,c
 26634  003916  0E04               	movlw	4
 26635  003918  6E3D               	movwf	_pBDTEntryIn+1,c
 26636                           
 26637                           ;usb_device.c: 312: UEP0 = 0x06|0x10;
 26638  00391A  0E16               	movlw	22
 26639  00391C  6E6A               	movwf	3946,c	;volatile
 26640                           
 26641                           ;usb_device.c: 314: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 26642  00391E  0E04               	movlw	4
 26643  003920  0104               	movlb	4	; () banked
 26644  003922  6F03               	movwf	3,b	;volatile
 26645  003924  0E30               	movlw	48
 26646  003926  6F02               	movwf	2,b	;volatile
 26647                           
 26648                           ; BSR set to: 4
 26649                           ;usb_device.c: 315: BDT[0].CNT = 8;
 26650  003928  0E08               	movlw	8
 26651  00392A  0104               	movlb	4	; () banked
 26652  00392C  6F01               	movwf	1,b	;volatile
 26653                           
 26654                           ; BSR set to: 4
 26655                           ;usb_device.c: 316: BDT[0].STAT.Val = 0x00|0x04;
 26656  00392E  0E04               	movlw	4
 26657  003930  0104               	movlb	4	; () banked
 26658  003932  6F00               	movwf	0,b	;volatile
 26659                           
 26660                           ; BSR set to: 4
 26661                           ;usb_device.c: 317: BDT[0].STAT.Val |= 0x80;
 26662  003934  0104               	movlb	4	; () banked
 26663  003936  8F00               	bsf	0,7,b	;volatile
 26664                           
 26665                           ; BSR set to: 4
 26666                           ;usb_device.c: 320: USBActiveConfiguration = 0;
 26667  003938  0E00               	movlw	0
 26668  00393A  6E58               	movwf	_USBActiveConfiguration,c	;volatile
 26669                           
 26670                           ; BSR set to: 4
 26671                           ;usb_device.c: 323: USBDeviceState = DETACHED_STATE;
 26672  00393C  0E00               	movlw	0
 26673  00393E  0100               	movlb	0	; () banked
 26674  003940  6FD2               	movwf	_USBDeviceState& (0+255),b	;volatile
 26675                           
 26676                           ; BSR set to: 0
 26677  003942  0012               	return		;funcret
 26678  003944                     __end_ofi2_USBDeviceInit:
 26679                           	opt stack 0
 26680                           pclatu	equ	0xFFB
 26681                           pclath	equ	0xFFA
 26682                           tblptru	equ	0xFF8
 26683                           tblptrh	equ	0xFF7
 26684                           tblptrl	equ	0xFF6
 26685                           tablat	equ	0xFF5
 26686                           prodh	equ	0xFF4
 26687                           prodl	equ	0xFF3
 26688                           intcon	equ	0xFF2
 26689                           intcon3	equ	0xFF0
 26690                           indf0	equ	0xFEF
 26691                           postinc0	equ	0xFEE
 26692                           fsr0h	equ	0xFEA
 26693                           fsr0l	equ	0xFE9
 26694                           wreg	equ	0xFE8
 26695                           indf1	equ	0xFE7
 26696                           postdec1	equ	0xFE5
 26697                           fsr1h	equ	0xFE2
 26698                           fsr1l	equ	0xFE1
 26699                           indf2	equ	0xFDF
 26700                           postinc2	equ	0xFDE
 26701                           postdec2	equ	0xFDD
 26702                           plusw2	equ	0xFDB
 26703                           fsr2h	equ	0xFDA
 26704                           fsr2l	equ	0xFD9
 26705                           status	equ	0xFD8
 26706                           
 26707 ;; *************** function _USBWakeFromSuspend *****************
 26708 ;; Defined at:
 26709 ;;		line 1944 in file "../Includes/Usb/Framework/usb_device.c"
 26710 ;; Parameters:    Size  Location     Type
 26711 ;;		None
 26712 ;; Auto vars:     Size  Location     Type
 26713 ;;		None
 26714 ;; Return value:  Size  Location     Type
 26715 ;;		None               void
 26716 ;; Registers used:
 26717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26718 ;; Tracked objects:
 26719 ;;		On entry : 0/0
 26720 ;;		On exit  : 0/0
 26721 ;;		Unchanged: 0/0
 26722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26723 ;;      Params:         0       0       0       0       0       0       0       0       0
 26724 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26725 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26726 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26727 ;;Total ram usage:        0 bytes
 26728 ;; Hardware stack levels used:    1
 26729 ;; Hardware stack levels required when called:    5
 26730 ;; This function calls:
 26731 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26732 ;; This function is called by:
 26733 ;;		_USBDeviceTasks
 26734 ;; This function uses a non-reentrant model
 26735 ;;
 26736                           
 26737                           	psect	text107
 26738  0067DC                     __ptext107:
 26739                           	opt stack 0
 26740  0067DC                     _USBWakeFromSuspend:
 26741                           	opt stack 14
 26742                           
 26743                           ;usb_device.c: 1946: USBBusIsSuspended = 0;
 26744                           
 26745                           ; BSR set to: 0
 26746                           ;incstack = 0
 26747  0067DC  0E00               	movlw	0
 26748  0067DE  0100               	movlb	0	; () banked
 26749  0067E0  6FCF               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 26750                           
 26751                           ; BSR set to: 0
 26752                           ;usb_device.c: 1952: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 26753  0067E2  0E00               	movlw	0
 26754  0067E4  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26755  0067E6  0E74               	movlw	116
 26756  0067E8  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26757  0067EA  0E00               	movlw	0
 26758  0067EC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26759  0067EE  0E00               	movlw	0
 26760  0067F0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26761  0067F2  0E00               	movlw	0
 26762  0067F4  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26763  0067F6  0E00               	movlw	0
 26764  0067F8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26765  0067FA  EC67  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26766                           
 26767                           ;usb_device.c: 1958: UCONbits.SUSPND = 0;
 26768  0067FE  9260               	bcf	3936,1,c	;volatile
 26769                           
 26770                           ;usb_device.c: 1960: UIEbits.ACTVIE = 0;
 26771  006800  9464               	bcf	3940,2,c	;volatile
 26772                           
 26773                           ;usb_device.c: 1976: while(UIRbits.ACTVIF)
 26774  006802  D001               	goto	i2l10942
 26775  006804                     i2l10940:
 26776                           
 26777                           ;usb_device.c: 1977: {
 26778                           ;usb_device.c: 1978: (UIR &= 0xFB);
 26779  006804  9465               	bcf	3941,2,c	;volatile
 26780  006806                     i2l10942:
 26781  006806  A465               	btfss	3941,2,c	;volatile
 26782  006808  0012               	return	
 26783  00680A  D7FC               	goto	i2l10940
 26784  00680C                     __end_of_USBWakeFromSuspend:
 26785                           	opt stack 0
 26786                           pclatu	equ	0xFFB
 26787                           pclath	equ	0xFFA
 26788                           tblptru	equ	0xFF8
 26789                           tblptrh	equ	0xFF7
 26790                           tblptrl	equ	0xFF6
 26791                           tablat	equ	0xFF5
 26792                           prodh	equ	0xFF4
 26793                           prodl	equ	0xFF3
 26794                           intcon	equ	0xFF2
 26795                           intcon3	equ	0xFF0
 26796                           indf0	equ	0xFEF
 26797                           postinc0	equ	0xFEE
 26798                           fsr0h	equ	0xFEA
 26799                           fsr0l	equ	0xFE9
 26800                           wreg	equ	0xFE8
 26801                           indf1	equ	0xFE7
 26802                           postdec1	equ	0xFE5
 26803                           fsr1h	equ	0xFE2
 26804                           fsr1l	equ	0xFE1
 26805                           indf2	equ	0xFDF
 26806                           postinc2	equ	0xFDE
 26807                           postdec2	equ	0xFDD
 26808                           plusw2	equ	0xFDB
 26809                           fsr2h	equ	0xFDA
 26810                           fsr2l	equ	0xFD9
 26811                           status	equ	0xFD8
 26812                           
 26813 ;; *************** function _USBSuspend *****************
 26814 ;; Defined at:
 26815 ;;		line 1889 in file "../Includes/Usb/Framework/usb_device.c"
 26816 ;; Parameters:    Size  Location     Type
 26817 ;;		None
 26818 ;; Auto vars:     Size  Location     Type
 26819 ;;		None
 26820 ;; Return value:  Size  Location     Type
 26821 ;;		None               void
 26822 ;; Registers used:
 26823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26824 ;; Tracked objects:
 26825 ;;		On entry : 0/0
 26826 ;;		On exit  : 0/0
 26827 ;;		Unchanged: 0/0
 26828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26829 ;;      Params:         0       0       0       0       0       0       0       0       0
 26830 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26831 ;;      Temps:          0       0       0       0       0       0       0       0       0
 26832 ;;      Totals:         0       0       0       0       0       0       0       0       0
 26833 ;;Total ram usage:        0 bytes
 26834 ;; Hardware stack levels used:    1
 26835 ;; Hardware stack levels required when called:    5
 26836 ;; This function calls:
 26837 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 26838 ;; This function is called by:
 26839 ;;		_USBDeviceTasks
 26840 ;; This function uses a non-reentrant model
 26841 ;;
 26842                           
 26843                           	psect	text108
 26844  006862                     __ptext108:
 26845                           	opt stack 0
 26846  006862                     _USBSuspend:
 26847                           	opt stack 14
 26848                           
 26849                           ;usb_device.c: 1914: UIEbits.ACTVIE = 1;
 26850                           
 26851                           ;incstack = 0
 26852  006862  8464               	bsf	3940,2,c	;volatile
 26853                           
 26854                           ;usb_device.c: 1915: (UIR &= 0xEF);
 26855  006864  9865               	bcf	3941,4,c	;volatile
 26856                           
 26857                           ;usb_device.c: 1917: UCONbits.SUSPND = 1;
 26858  006866  8260               	bsf	3936,1,c	;volatile
 26859                           
 26860                           ;usb_device.c: 1919: USBBusIsSuspended = 1;
 26861  006868  0E01               	movlw	1
 26862  00686A  0100               	movlb	0	; () banked
 26863  00686C  6FCF               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 26864                           
 26865                           ; BSR set to: 0
 26866                           ;usb_device.c: 1926: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 26867  00686E  0E00               	movlw	0
 26868  006870  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 26869  006872  0E75               	movlw	117
 26870  006874  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 26871  006876  0E00               	movlw	0
 26872  006878  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 26873  00687A  0E00               	movlw	0
 26874  00687C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 26875  00687E  0E00               	movlw	0
 26876  006880  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 26877  006882  0E00               	movlw	0
 26878  006884  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 26879  006886  EC67  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 26880  00688A  0012               	return		;funcret
 26881  00688C                     __end_of_USBSuspend:
 26882                           	opt stack 0
 26883                           pclatu	equ	0xFFB
 26884                           pclath	equ	0xFFA
 26885                           tblptru	equ	0xFF8
 26886                           tblptrh	equ	0xFF7
 26887                           tblptrl	equ	0xFF6
 26888                           tablat	equ	0xFF5
 26889                           prodh	equ	0xFF4
 26890                           prodl	equ	0xFF3
 26891                           intcon	equ	0xFF2
 26892                           intcon3	equ	0xFF0
 26893                           indf0	equ	0xFEF
 26894                           postinc0	equ	0xFEE
 26895                           fsr0h	equ	0xFEA
 26896                           fsr0l	equ	0xFE9
 26897                           wreg	equ	0xFE8
 26898                           indf1	equ	0xFE7
 26899                           postdec1	equ	0xFE5
 26900                           fsr1h	equ	0xFE2
 26901                           fsr1l	equ	0xFE1
 26902                           indf2	equ	0xFDF
 26903                           postinc2	equ	0xFDE
 26904                           postdec2	equ	0xFDD
 26905                           plusw2	equ	0xFDB
 26906                           fsr2h	equ	0xFDA
 26907                           fsr2l	equ	0xFD9
 26908                           status	equ	0xFD8
 26909                           
 26910 ;; *************** function _USBStallHandler *****************
 26911 ;; Defined at:
 26912 ;;		line 1846 in file "../Includes/Usb/Framework/usb_device.c"
 26913 ;; Parameters:    Size  Location     Type
 26914 ;;		None
 26915 ;; Auto vars:     Size  Location     Type
 26916 ;;		None
 26917 ;; Return value:  Size  Location     Type
 26918 ;;		None               void
 26919 ;; Registers used:
 26920 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26921 ;; Tracked objects:
 26922 ;;		On entry : 0/0
 26923 ;;		On exit  : 0/0
 26924 ;;		Unchanged: 0/0
 26925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 26926 ;;      Params:         0       0       0       0       0       0       0       0       0
 26927 ;;      Locals:         0       0       0       0       0       0       0       0       0
 26928 ;;      Temps:          1       0       0       0       0       0       0       0       0
 26929 ;;      Totals:         1       0       0       0       0       0       0       0       0
 26930 ;;Total ram usage:        1 bytes
 26931 ;; Hardware stack levels used:    1
 26932 ;; This function calls:
 26933 ;;		Nothing
 26934 ;; This function is called by:
 26935 ;;		_USBDeviceTasks
 26936 ;; This function uses a non-reentrant model
 26937 ;;
 26938                           
 26939                           	psect	text109
 26940  006454                     __ptext109:
 26941                           	opt stack 0
 26942  006454                     _USBStallHandler:
 26943                           	opt stack 19
 26944                           
 26945                           ;usb_device.c: 1858: if(UEP0bits.EPSTALL == 1)
 26946                           
 26947                           ;incstack = 0
 26948  006454  A06A               	btfss	3946,0,c	;volatile
 26949  006456  D01D               	goto	i2l1878
 26950                           
 26951                           ;usb_device.c: 1859: {
 26952                           ;usb_device.c: 1861: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
 26953  006458  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26954  00645C  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26955  006460  0E80               	movlw	128
 26956  006462  18DE               	xorwf	postinc2,w,c
 26957  006464  A4D8               	btfss	status,2,c
 26958  006466  D014               	goto	i2l10964
 26959  006468  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 26960  00646C  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26961  006470  0E84               	movlw	132
 26962  006472  18DE               	xorwf	postinc2,w,c
 26963  006474  A4D8               	btfss	status,2,c
 26964  006476  D00C               	goto	i2l10964
 26965                           
 26966                           ;usb_device.c: 1862: {
 26967                           ;usb_device.c: 1864: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 26968  006478  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26969  00647C  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26970  006480  0E0C               	movlw	12
 26971  006482  6EDF               	movwf	indf2,c
 26972                           
 26973                           ;usb_device.c: 1865: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 26974  006484  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 26975  006488  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 26976  00648C  0E00               	movlw	0
 26977  00648E  8EDB               	bsf	plusw2,7,c
 26978  006490                     i2l10964:
 26979                           
 26980                           ;usb_device.c: 1866: }
 26981                           ;usb_device.c: 1867: UEP0bits.EPSTALL = 0;
 26982  006490  906A               	bcf	3946,0,c	;volatile
 26983  006492                     i2l1878:
 26984                           
 26985                           ;usb_device.c: 1868: }
 26986                           ;usb_device.c: 1870: (UIR &= 0xDF);
 26987  006492  9A65               	bcf	3941,5,c	;volatile
 26988  006494  0012               	return		;funcret
 26989  006496                     __end_of_USBStallHandler:
 26990                           	opt stack 0
 26991                           pclatu	equ	0xFFB
 26992                           pclath	equ	0xFFA
 26993                           tblptru	equ	0xFF8
 26994                           tblptrh	equ	0xFF7
 26995                           tblptrl	equ	0xFF6
 26996                           tablat	equ	0xFF5
 26997                           prodh	equ	0xFF4
 26998                           prodl	equ	0xFF3
 26999                           intcon	equ	0xFF2
 27000                           intcon3	equ	0xFF0
 27001                           indf0	equ	0xFEF
 27002                           postinc0	equ	0xFEE
 27003                           fsr0h	equ	0xFEA
 27004                           fsr0l	equ	0xFE9
 27005                           wreg	equ	0xFE8
 27006                           indf1	equ	0xFE7
 27007                           postdec1	equ	0xFE5
 27008                           fsr1h	equ	0xFE2
 27009                           fsr1l	equ	0xFE1
 27010                           indf2	equ	0xFDF
 27011                           postinc2	equ	0xFDE
 27012                           postdec2	equ	0xFDD
 27013                           plusw2	equ	0xFDB
 27014                           fsr2h	equ	0xFDA
 27015                           fsr2l	equ	0xFD9
 27016                           status	equ	0xFD8
 27017                           
 27018 ;; *************** function _USBCtrlEPService *****************
 27019 ;; Defined at:
 27020 ;;		line 2004 in file "../Includes/Usb/Framework/usb_device.c"
 27021 ;; Parameters:    Size  Location     Type
 27022 ;;		None
 27023 ;; Auto vars:     Size  Location     Type
 27024 ;;  setup_cnt       1   29[COMRAM] unsigned char 
 27025 ;; Return value:  Size  Location     Type
 27026 ;;		None               void
 27027 ;; Registers used:
 27028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 27029 ;; Tracked objects:
 27030 ;;		On entry : 0/0
 27031 ;;		On exit  : 0/0
 27032 ;;		Unchanged: 0/0
 27033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27034 ;;      Params:         0       0       0       0       0       0       0       0       0
 27035 ;;      Locals:         1       0       0       0       0       0       0       0       0
 27036 ;;      Temps:          2       0       0       0       0       0       0       0       0
 27037 ;;      Totals:         3       0       0       0       0       0       0       0       0
 27038 ;;Total ram usage:        3 bytes
 27039 ;; Hardware stack levels used:    1
 27040 ;; Hardware stack levels required when called:    8
 27041 ;; This function calls:
 27042 ;;		_USBCtrlTrfInHandler
 27043 ;;		_USBCtrlTrfOutHandler
 27044 ;;		_USBCtrlTrfSetupHandler
 27045 ;; This function is called by:
 27046 ;;		_USBDeviceTasks
 27047 ;; This function uses a non-reentrant model
 27048 ;;
 27049                           
 27050                           	psect	text110
 27051  004E5A                     __ptext110:
 27052                           	opt stack 0
 27053  004E5A                     _USBCtrlEPService:
 27054                           	opt stack 11
 27055                           
 27056                           ;usb_device.c: 2009: USBStatusStageTimeoutCounter = (uint8_t)45;
 27057                           
 27058                           ;incstack = 0
 27059  004E5A  0E2D               	movlw	45
 27060  004E5C  6E4F               	movwf	_USBStatusStageTimeoutCounter,c	;volatile
 27061                           
 27062                           ;usb_device.c: 2012: if((USTATcopy.Val & ~0x02) == 0x00)
 27063  004E5E  C059  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 27064  004E62  0EFD               	movlw	253
 27065  004E64  161C               	andwf	??_USBCtrlEPService,f,c
 27066  004E66  A4D8               	btfss	status,2,c
 27067  004E68  D057               	goto	i2l10998
 27068                           
 27069                           ;usb_device.c: 2013: {
 27070                           ;usb_device.c: 2015: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
 27071  004E6A  C059  F01C         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 27072  004E6E  90D8               	bcf	status,0,c
 27073  004E70  321C               	rrcf	??_USBCtrlEPService,f,c
 27074  004E72  0E3F               	movlw	63
 27075  004E74  161C               	andwf	??_USBCtrlEPService,f,c
 27076  004E76  501C               	movf	??_USBCtrlEPService,w,c
 27077  004E78  0D04               	mullw	4
 27078  004E7A  0E00               	movlw	0
 27079  004E7C  24F3               	addwf	prodl,w,c
 27080  004E7E  6E44               	movwf	_pBDTEntryEP0OutCurrent,c
 27081  004E80  0E04               	movlw	4
 27082  004E82  20F4               	addwfc	prodh,w,c
 27083  004E84  6E45               	movwf	_pBDTEntryEP0OutCurrent+1,c
 27084                           
 27085                           ;usb_device.c: 2019: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 27086  004E86  C044  F046         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 27087  004E8A  C045  F047         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 27088                           
 27089                           ;usb_device.c: 2021: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
 27090  004E8E  0E04               	movlw	4
 27091  004E90  1A46               	xorwf	_pBDTEntryEP0OutNext,f,c
 27092                           
 27093                           ;usb_device.c: 2024: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 27094  004E92  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 27095  004E96  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 27096  004E9A  30DF               	rrcf	indf2,w,c
 27097  004E9C  32E8               	rrcf	wreg,f,c
 27098  004E9E  0B0F               	andlw	15
 27099  004EA0  0A0D               	xorlw	13
 27100  004EA2  A4D8               	btfss	status,2,c
 27101  004EA4  D036               	goto	i2l10996
 27102                           
 27103                           ;usb_device.c: 2025: {
 27104                           ;usb_device.c: 2026: unsigned char setup_cnt;
 27105                           ;usb_device.c: 2032: for(setup_cnt = 0; setup_cnt < 8u; setup_cnt++)
 27106  004EA6  0E00               	movlw	0
 27107  004EA8  6E1E               	movwf	USBCtrlEPService@setup_cnt,c
 27108  004EAA                     i2l10980:
 27109  004EAA  0E07               	movlw	7
 27110  004EAC  641E               	cpfsgt	USBCtrlEPService@setup_cnt,c
 27111  004EAE  D001               	goto	i2l10984
 27112  004EB0  D023               	goto	i2l10992
 27113  004EB2                     i2l10984:
 27114                           
 27115                           ;usb_device.c: 2033: {
 27116                           ;usb_device.c: 2034: *(uint8_t*)((uint8_t*)&SetupPkt + setup_cnt) = *(uint8_t*)((void *)
      +                          (pBDTEntryEP0OutCurrent->ADR));
 27117  004EB2  EE20 F002          	lfsr	2,2
 27118  004EB6  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 27119  004EB8  26D9               	addwf	fsr2l,f,c
 27120  004EBA  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 27121  004EBC  22DA               	addwfc	fsr2h,f,c
 27122  004EBE  CFDE F01C          	movff	postinc2,??_USBCtrlEPService
 27123  004EC2  CFDD F01D          	movff	postdec2,??_USBCtrlEPService+1
 27124  004EC6  C01C  FFD9         	movff	??_USBCtrlEPService,fsr2l
 27125  004ECA  C01D  FFDA         	movff	??_USBCtrlEPService+1,fsr2h
 27126  004ECE  501E               	movf	USBCtrlEPService@setup_cnt,w,c
 27127  004ED0  0D01               	mullw	1
 27128  004ED2  0E30               	movlw	48
 27129  004ED4  24F3               	addwf	prodl,w,c
 27130  004ED6  6EE1               	movwf	fsr1l,c
 27131  004ED8  0E04               	movlw	4
 27132  004EDA  20F4               	addwfc	prodh,w,c
 27133  004EDC  6EE2               	movwf	fsr1h,c
 27134  004EDE  CFDF FFE7          	movff	indf2,indf1
 27135                           
 27136                           ;usb_device.c: 2035: pBDTEntryEP0OutCurrent->ADR++;
 27137  004EE2  EE20 F002          	lfsr	2,2
 27138  004EE6  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 27139  004EE8  26D9               	addwf	fsr2l,f,c
 27140  004EEA  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 27141  004EEC  22DA               	addwfc	fsr2h,f,c
 27142  004EEE  2ADE               	incf	postinc2,f,c
 27143  004EF0  0E00               	movlw	0
 27144  004EF2  22DD               	addwfc	postdec2,f,c
 27145  004EF4  2A1E               	incf	USBCtrlEPService@setup_cnt,f,c
 27146  004EF6  D7D9               	goto	i2l10980
 27147  004EF8                     i2l10992:
 27148                           
 27149                           ;usb_device.c: 2036: }
 27150                           ;usb_device.c: 2037: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 27151  004EF8  EE20 F002          	lfsr	2,2
 27152  004EFC  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 27153  004EFE  26D9               	addwf	fsr2l,f,c
 27154  004F00  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 27155  004F02  22DA               	addwfc	fsr2h,f,c
 27156  004F04  0E30               	movlw	48
 27157  004F06  6EDE               	movwf	postinc2,c
 27158  004F08  0E04               	movlw	4
 27159  004F0A  6EDD               	movwf	postdec2,c
 27160                           
 27161                           ;usb_device.c: 2040: USBCtrlTrfSetupHandler();
 27162  004F0C  ECD5  F02C         	call	_USBCtrlTrfSetupHandler	;wreg free
 27163                           
 27164                           ;usb_device.c: 2041: }
 27165  004F10  0012               	return	
 27166  004F12                     i2l10996:
 27167                           
 27168                           ;usb_device.c: 2042: else
 27169                           ;usb_device.c: 2043: {
 27170                           ;usb_device.c: 2045: USBCtrlTrfOutHandler();
 27171  004F12  EC09  F030         	call	_USBCtrlTrfOutHandler	;wreg free
 27172                           
 27173                           ;usb_device.c: 2046: }
 27174                           ;usb_device.c: 2047: }
 27175  004F16  0012               	return	
 27176  004F18                     i2l10998:
 27177                           
 27178                           ;usb_device.c: 2048: else if((USTATcopy.Val & ~0x02) == 0x04)
 27179  004F18  5059               	movf	_USTATcopy,w,c	;volatile
 27180  004F1A  0BFD               	andlw	253
 27181  004F1C  0A04               	xorlw	4
 27182  004F1E  A4D8               	btfss	status,2,c
 27183  004F20  0012               	return	
 27184                           
 27185                           ;usb_device.c: 2049: {
 27186                           ;usb_device.c: 2052: USBCtrlTrfInHandler();
 27187  004F22  EC36  F024         	call	_USBCtrlTrfInHandler	;wreg free
 27188  004F26  0012               	return	
 27189  004F28                     __end_of_USBCtrlEPService:
 27190                           	opt stack 0
 27191                           pclatu	equ	0xFFB
 27192                           pclath	equ	0xFFA
 27193                           tblptru	equ	0xFF8
 27194                           tblptrh	equ	0xFF7
 27195                           tblptrl	equ	0xFF6
 27196                           tablat	equ	0xFF5
 27197                           prodh	equ	0xFF4
 27198                           prodl	equ	0xFF3
 27199                           intcon	equ	0xFF2
 27200                           intcon3	equ	0xFF0
 27201                           indf0	equ	0xFEF
 27202                           postinc0	equ	0xFEE
 27203                           fsr0h	equ	0xFEA
 27204                           fsr0l	equ	0xFE9
 27205                           wreg	equ	0xFE8
 27206                           indf1	equ	0xFE7
 27207                           postdec1	equ	0xFE5
 27208                           fsr1h	equ	0xFE2
 27209                           fsr1l	equ	0xFE1
 27210                           indf2	equ	0xFDF
 27211                           postinc2	equ	0xFDE
 27212                           postdec2	equ	0xFDD
 27213                           plusw2	equ	0xFDB
 27214                           fsr2h	equ	0xFDA
 27215                           fsr2l	equ	0xFD9
 27216                           status	equ	0xFD8
 27217                           
 27218 ;; *************** function _USBCtrlTrfSetupHandler *****************
 27219 ;; Defined at:
 27220 ;;		line 2097 in file "../Includes/Usb/Framework/usb_device.c"
 27221 ;; Parameters:    Size  Location     Type
 27222 ;;		None
 27223 ;; Auto vars:     Size  Location     Type
 27224 ;;		None
 27225 ;; Return value:  Size  Location     Type
 27226 ;;		None               void
 27227 ;; Registers used:
 27228 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27229 ;; Tracked objects:
 27230 ;;		On entry : 0/0
 27231 ;;		On exit  : 0/0
 27232 ;;		Unchanged: 0/0
 27233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27234 ;;      Params:         0       0       0       0       0       0       0       0       0
 27235 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27236 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27237 ;;      Totals:         0       0       0       0       0       0       0       0       0
 27238 ;;Total ram usage:        0 bytes
 27239 ;; Hardware stack levels used:    1
 27240 ;; Hardware stack levels required when called:    7
 27241 ;; This function calls:
 27242 ;;		_USBCheckStdRequest
 27243 ;;		_USBCtrlEPServiceComplete
 27244 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27245 ;; This function is called by:
 27246 ;;		_USBCtrlEPService
 27247 ;; This function uses a non-reentrant model
 27248 ;;
 27249                           
 27250                           	psect	text111
 27251  0059AA                     __ptext111:
 27252                           	opt stack 0
 27253  0059AA                     _USBCtrlTrfSetupHandler:
 27254                           	opt stack 11
 27255                           
 27256                           ;usb_device.c: 2102: shortPacketStatus = 0;
 27257                           
 27258                           ;incstack = 0
 27259  0059AA  0E00               	movlw	0
 27260  0059AC  6E57               	movwf	_shortPacketStatus,c	;volatile
 27261                           
 27262                           ;usb_device.c: 2103: USBDeferStatusStagePacket = 0;
 27263  0059AE  0E00               	movlw	0
 27264  0059B0  6E4E               	movwf	_USBDeferStatusStagePacket,c	;volatile
 27265                           
 27266                           ;usb_device.c: 2104: USBDeferINDataStagePackets = 0;
 27267  0059B2  0E00               	movlw	0
 27268  0059B4  0100               	movlb	0	; () banked
 27269  0059B6  6FD0               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 27270                           
 27271                           ;usb_device.c: 2105: USBDeferOUTDataStagePackets = 0;
 27272  0059B8  0E00               	movlw	0
 27273  0059BA  0100               	movlb	0	; () banked
 27274  0059BC  6FD1               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 27275                           
 27276                           ;usb_device.c: 2106: BothEP0OutUOWNsSet = 0;
 27277  0059BE  0E00               	movlw	0
 27278  0059C0  0100               	movlb	0	; () banked
 27279  0059C2  6FCD               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 27280                           
 27281                           ;usb_device.c: 2107: controlTransferState = 0;
 27282  0059C4  0E00               	movlw	0
 27283  0059C6  6E51               	movwf	_controlTransferState,c	;volatile
 27284                           
 27285                           ; BSR set to: 0
 27286                           ;usb_device.c: 2116: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 27287  0059C8  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 27288  0059CC  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27289  0059D0  0E7F               	movlw	127
 27290  0059D2  16DF               	andwf	indf2,f,c
 27291                           
 27292                           ; BSR set to: 0
 27293                           ;usb_device.c: 2117: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 27294  0059D4  0E04               	movlw	4
 27295  0059D6  1A3C               	xorwf	_pBDTEntryIn,f,c
 27296                           
 27297                           ; BSR set to: 0
 27298                           ;usb_device.c: 2118: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 27299  0059D8  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 27300  0059DC  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27301  0059E0  0E7F               	movlw	127
 27302  0059E2  16DF               	andwf	indf2,f,c
 27303                           
 27304                           ; BSR set to: 0
 27305                           ;usb_device.c: 2119: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 27306  0059E4  0E04               	movlw	4
 27307  0059E6  1A3C               	xorwf	_pBDTEntryIn,f,c
 27308                           
 27309                           ; BSR set to: 0
 27310                           ;usb_device.c: 2120: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 27311  0059E8  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27312  0059EC  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27313  0059F0  0E7F               	movlw	127
 27314  0059F2  16DF               	andwf	indf2,f,c
 27315                           
 27316                           ; BSR set to: 0
 27317                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
 27318  0059F4  0E00               	movlw	0
 27319  0059F6  6E39               	movwf	_inPipes+3,c	;volatile
 27320                           
 27321                           ; BSR set to: 0
 27322                           ;usb_device.c: 2123: inPipes[0].wCount.Val = 0;
 27323  0059F8  0E00               	movlw	0
 27324  0059FA  6E3B               	movwf	_inPipes+5,c	;volatile
 27325  0059FC  0E00               	movlw	0
 27326  0059FE  6E3A               	movwf	_inPipes+4,c	;volatile
 27327                           
 27328                           ; BSR set to: 0
 27329                           ;usb_device.c: 2124: outPipes[0].info.Val = 0;
 27330  005A00  0E00               	movlw	0
 27331  005A02  6E31               	movwf	_outPipes+3,c	;volatile
 27332                           
 27333                           ; BSR set to: 0
 27334                           ;usb_device.c: 2125: outPipes[0].wCount.Val = 0;
 27335  005A04  0E00               	movlw	0
 27336  005A06  6E33               	movwf	_outPipes+5,c	;volatile
 27337  005A08  0E00               	movlw	0
 27338  005A0A  6E32               	movwf	_outPipes+4,c	;volatile
 27339                           
 27340                           ; BSR set to: 0
 27341                           ;usb_device.c: 2131: USBCheckStdRequest();
 27342  005A0C  EC15  F025         	call	_USBCheckStdRequest	;wreg free
 27343                           
 27344                           ;usb_device.c: 2132: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 27345  005A10  0E00               	movlw	0
 27346  005A12  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 27347  005A14  0E03               	movlw	3
 27348  005A16  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 27349  005A18  0E00               	movlw	0
 27350  005A1A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 27351  005A1C  0E00               	movlw	0
 27352  005A1E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 27353  005A20  0E00               	movlw	0
 27354  005A22  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 27355  005A24  0E00               	movlw	0
 27356  005A26  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 27357  005A28  EC67  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 27358                           
 27359                           ;usb_device.c: 2145: USBCtrlEPServiceComplete();
 27360  005A2C  EC01  F020         	call	_USBCtrlEPServiceComplete	;wreg free
 27361  005A30  0012               	return		;funcret
 27362  005A32                     __end_of_USBCtrlTrfSetupHandler:
 27363                           	opt stack 0
 27364                           pclatu	equ	0xFFB
 27365                           pclath	equ	0xFFA
 27366                           tblptru	equ	0xFF8
 27367                           tblptrh	equ	0xFF7
 27368                           tblptrl	equ	0xFF6
 27369                           tablat	equ	0xFF5
 27370                           prodh	equ	0xFF4
 27371                           prodl	equ	0xFF3
 27372                           intcon	equ	0xFF2
 27373                           intcon3	equ	0xFF0
 27374                           indf0	equ	0xFEF
 27375                           postinc0	equ	0xFEE
 27376                           fsr0h	equ	0xFEA
 27377                           fsr0l	equ	0xFE9
 27378                           wreg	equ	0xFE8
 27379                           indf1	equ	0xFE7
 27380                           postdec1	equ	0xFE5
 27381                           fsr1h	equ	0xFE2
 27382                           fsr1l	equ	0xFE1
 27383                           indf2	equ	0xFDF
 27384                           postinc2	equ	0xFDE
 27385                           postdec2	equ	0xFDD
 27386                           plusw2	equ	0xFDB
 27387                           fsr2h	equ	0xFDA
 27388                           fsr2l	equ	0xFD9
 27389                           status	equ	0xFD8
 27390                           
 27391 ;; *************** function _USBCtrlEPServiceComplete *****************
 27392 ;; Defined at:
 27393 ;;		line 1282 in file "../Includes/Usb/Framework/usb_device.c"
 27394 ;; Parameters:    Size  Location     Type
 27395 ;;		None
 27396 ;; Auto vars:     Size  Location     Type
 27397 ;;		None
 27398 ;; Return value:  Size  Location     Type
 27399 ;;		None               void
 27400 ;; Registers used:
 27401 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27402 ;; Tracked objects:
 27403 ;;		On entry : 0/0
 27404 ;;		On exit  : 0/0
 27405 ;;		Unchanged: 0/0
 27406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27407 ;;      Params:         0       0       0       0       0       0       0       0       0
 27408 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27409 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27410 ;;      Totals:         0       0       0       0       0       0       0       0       0
 27411 ;;Total ram usage:        0 bytes
 27412 ;; Hardware stack levels used:    1
 27413 ;; Hardware stack levels required when called:    2
 27414 ;; This function calls:
 27415 ;;		_USBCtrlEPAllowDataStage
 27416 ;;		_USBCtrlEPAllowStatusStage
 27417 ;; This function is called by:
 27418 ;;		_USBCtrlTrfSetupHandler
 27419 ;; This function uses a non-reentrant model
 27420 ;;
 27421                           
 27422                           	psect	text112
 27423  004002                     __ptext112:
 27424                           	opt stack 0
 27425  004002                     _USBCtrlEPServiceComplete:
 27426                           	opt stack 15
 27427                           
 27428                           ;usb_device.c: 1288: UCONbits.PKTDIS = 0;
 27429                           
 27430                           ;incstack = 0
 27431  004002  9860               	bcf	3936,4,c	;volatile
 27432                           
 27433                           ;usb_device.c: 1294: if(inPipes[0].info.bits.busy == 0)
 27434  004004  BE39               	btfsc	_inPipes+3,7,c	;volatile
 27435  004006  D03B               	goto	i2l1802
 27436                           
 27437                           ;usb_device.c: 1295: {
 27438                           ;usb_device.c: 1296: if(outPipes[0].info.bits.busy == 1)
 27439  004008  AE31               	btfss	_outPipes+3,7,c	;volatile
 27440  00400A  D00E               	goto	i2l8342
 27441                           
 27442                           ;usb_device.c: 1297: {
 27443                           ;usb_device.c: 1298: controlTransferState = 2;
 27444  00400C  0E02               	movlw	2
 27445  00400E  6E51               	movwf	_controlTransferState,c	;volatile
 27446                           
 27447                           ;usb_device.c: 1309: if(USBDeferOUTDataStagePackets == 0)
 27448  004010  0100               	movlb	0	; () banked
 27449  004012  51D1               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 27450  004014  B4D8               	btfsc	status,2,c
 27451                           
 27452                           ; BSR set to: 0
 27453                           ;usb_device.c: 1310: {
 27454                           ;usb_device.c: 1311: USBCtrlEPAllowDataStage();
 27455  004016  ECB3  F02B         	call	_USBCtrlEPAllowDataStage	;wreg free
 27456                           
 27457                           ;usb_device.c: 1312: }
 27458                           ;usb_device.c: 1316: USBStatusStageEnabledFlag2 = 0;
 27459  00401A  0E00               	movlw	0
 27460  00401C  0100               	movlb	0	; () banked
 27461  00401E  6FD4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 27462                           
 27463                           ; BSR set to: 0
 27464                           ;usb_device.c: 1317: USBStatusStageEnabledFlag1 = 0;
 27465  004020  0E00               	movlw	0
 27466  004022  0100               	movlb	0	; () banked
 27467  004024  6FD3               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 27468                           
 27469                           ;usb_device.c: 1318: }
 27470  004026  0012               	return	
 27471  004028                     i2l8342:
 27472                           
 27473                           ;usb_device.c: 1319: else
 27474                           ;usb_device.c: 1320: {
 27475                           ;usb_device.c: 1325: pBDTEntryEP0OutNext->CNT = 8;
 27476  004028  EE20 F001          	lfsr	2,1
 27477  00402C  5046               	movf	_pBDTEntryEP0OutNext,w,c
 27478  00402E  26D9               	addwf	fsr2l,f,c
 27479  004030  5047               	movf	_pBDTEntryEP0OutNext+1,w,c
 27480  004032  22DA               	addwfc	fsr2h,f,c
 27481  004034  0E08               	movlw	8
 27482  004036  6EDF               	movwf	indf2,c
 27483                           
 27484                           ;usb_device.c: 1326: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 27485  004038  EE20 F002          	lfsr	2,2
 27486  00403C  5046               	movf	_pBDTEntryEP0OutNext,w,c
 27487  00403E  26D9               	addwf	fsr2l,f,c
 27488  004040  5047               	movf	_pBDTEntryEP0OutNext+1,w,c
 27489  004042  22DA               	addwfc	fsr2h,f,c
 27490  004044  0E30               	movlw	48
 27491  004046  6EDE               	movwf	postinc2,c
 27492  004048  0E04               	movlw	4
 27493  00404A  6EDD               	movwf	postdec2,c
 27494                           
 27495                           ;usb_device.c: 1327: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 27496  00404C  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27497  004050  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27498  004054  0E0C               	movlw	12
 27499  004056  6EDF               	movwf	indf2,c
 27500                           
 27501                           ;usb_device.c: 1328: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 27502  004058  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27503  00405C  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27504  004060  0E00               	movlw	0
 27505  004062  8EDB               	bsf	plusw2,7,c
 27506                           
 27507                           ;usb_device.c: 1329: pBDTEntryIn[0]->STAT.Val = 0x04;
 27508  004064  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 27509  004068  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27510  00406C  0E04               	movlw	4
 27511  00406E  6EDF               	movwf	indf2,c
 27512                           
 27513                           ;usb_device.c: 1330: pBDTEntryIn[0]->STAT.Val |= 0x80;
 27514  004070  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 27515  004074  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27516  004078  0E00               	movlw	0
 27517  00407A  8EDB               	bsf	plusw2,7,c
 27518                           
 27519                           ;usb_device.c: 1331: }
 27520                           ;usb_device.c: 1332: }
 27521  00407C  0012               	return	
 27522  00407E                     i2l1802:
 27523                           
 27524                           ;usb_device.c: 1333: else
 27525                           ;usb_device.c: 1334: {
 27526                           ;usb_device.c: 1335: if(SetupPkt.DataDir == (0x80>>7))
 27527  00407E  0104               	movlb	4	; () banked
 27528  004080  AF30               	btfss	48,7,b	;volatile
 27529  004082  D013               	goto	i2l8362
 27530                           
 27531                           ; BSR set to: 4
 27532                           ;usb_device.c: 1336: {
 27533                           ;usb_device.c: 1337: controlTransferState = 1;
 27534  004084  0E01               	movlw	1
 27535  004086  6E51               	movwf	_controlTransferState,c	;volatile
 27536                           
 27537                           ;usb_device.c: 1351: if(USBDeferINDataStagePackets == 0)
 27538  004088  0100               	movlb	0	; () banked
 27539  00408A  51D0               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 27540  00408C  B4D8               	btfsc	status,2,c
 27541                           
 27542                           ; BSR set to: 0
 27543                           ;usb_device.c: 1352: {
 27544                           ;usb_device.c: 1353: USBCtrlEPAllowDataStage();
 27545  00408E  ECB3  F02B         	call	_USBCtrlEPAllowDataStage	;wreg free
 27546                           
 27547                           ;usb_device.c: 1354: }
 27548                           ;usb_device.c: 1376: USBStatusStageEnabledFlag2 = 0;
 27549  004092  0E00               	movlw	0
 27550  004094  0100               	movlb	0	; () banked
 27551  004096  6FD4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 27552                           
 27553                           ; BSR set to: 0
 27554                           ;usb_device.c: 1377: USBStatusStageEnabledFlag1 = 0;
 27555  004098  0E00               	movlw	0
 27556  00409A  0100               	movlb	0	; () banked
 27557  00409C  6FD3               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 27558                           
 27559                           ; BSR set to: 0
 27560                           ;usb_device.c: 1378: if(USBDeferStatusStagePacket == 0)
 27561  00409E  504E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 27562  0040A0  A4D8               	btfss	status,2,c
 27563  0040A2  0012               	return	
 27564                           
 27565                           ; BSR set to: 0
 27566                           ;usb_device.c: 1379: {
 27567                           ;usb_device.c: 1380: USBCtrlEPAllowStatusStage();
 27568  0040A4  EC94  F027         	call	_USBCtrlEPAllowStatusStage	;wreg free
 27569                           
 27570                           ;usb_device.c: 1381: }
 27571                           ;usb_device.c: 1382: }
 27572  0040A8  0012               	return	
 27573  0040AA                     i2l8362:
 27574                           
 27575                           ;usb_device.c: 1383: else
 27576                           ;usb_device.c: 1384: {
 27577                           ;usb_device.c: 1395: controlTransferState = 2;
 27578  0040AA  0E02               	movlw	2
 27579  0040AC  6E51               	movwf	_controlTransferState,c	;volatile
 27580                           
 27581                           ;usb_device.c: 1398: pBDTEntryEP0OutNext->CNT = 8;
 27582  0040AE  EE20 F001          	lfsr	2,1
 27583  0040B2  5046               	movf	_pBDTEntryEP0OutNext,w,c
 27584  0040B4  26D9               	addwf	fsr2l,f,c
 27585  0040B6  5047               	movf	_pBDTEntryEP0OutNext+1,w,c
 27586  0040B8  22DA               	addwfc	fsr2h,f,c
 27587  0040BA  0E08               	movlw	8
 27588  0040BC  6EDF               	movwf	indf2,c
 27589                           
 27590                           ;usb_device.c: 1399: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 27591  0040BE  EE20 F002          	lfsr	2,2
 27592  0040C2  5046               	movf	_pBDTEntryEP0OutNext,w,c
 27593  0040C4  26D9               	addwf	fsr2l,f,c
 27594  0040C6  5047               	movf	_pBDTEntryEP0OutNext+1,w,c
 27595  0040C8  22DA               	addwfc	fsr2h,f,c
 27596  0040CA  0E30               	movlw	48
 27597  0040CC  6EDE               	movwf	postinc2,c
 27598  0040CE  0E04               	movlw	4
 27599  0040D0  6EDD               	movwf	postdec2,c
 27600                           
 27601                           ;usb_device.c: 1400: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 27602  0040D2  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27603  0040D6  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27604  0040DA  0E04               	movlw	4
 27605  0040DC  6EDF               	movwf	indf2,c
 27606                           
 27607                           ;usb_device.c: 1401: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 27608  0040DE  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27609  0040E2  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27610  0040E6  0E00               	movlw	0
 27611  0040E8  8EDB               	bsf	plusw2,7,c
 27612                           
 27613                           ;usb_device.c: 1404: USBStatusStageEnabledFlag2 = 0;
 27614  0040EA  0E00               	movlw	0
 27615  0040EC  0100               	movlb	0	; () banked
 27616  0040EE  6FD4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 27617                           
 27618                           ; BSR set to: 0
 27619                           ;usb_device.c: 1405: USBStatusStageEnabledFlag1 = 0;
 27620  0040F0  0E00               	movlw	0
 27621  0040F2  0100               	movlb	0	; () banked
 27622  0040F4  6FD3               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 27623                           
 27624                           ; BSR set to: 0
 27625                           ;usb_device.c: 1406: if(USBDeferStatusStagePacket == 0)
 27626  0040F6  504E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 27627  0040F8  A4D8               	btfss	status,2,c
 27628  0040FA  0012               	return	
 27629                           
 27630                           ; BSR set to: 0
 27631                           ;usb_device.c: 1407: {
 27632                           ;usb_device.c: 1408: USBCtrlEPAllowStatusStage();
 27633  0040FC  EC94  F027         	call	_USBCtrlEPAllowStatusStage	;wreg free
 27634  004100  0012               	return	
 27635  004102                     __end_of_USBCtrlEPServiceComplete:
 27636                           	opt stack 0
 27637                           pclatu	equ	0xFFB
 27638                           pclath	equ	0xFFA
 27639                           tblptru	equ	0xFF8
 27640                           tblptrh	equ	0xFF7
 27641                           tblptrl	equ	0xFF6
 27642                           tablat	equ	0xFF5
 27643                           prodh	equ	0xFF4
 27644                           prodl	equ	0xFF3
 27645                           intcon	equ	0xFF2
 27646                           intcon3	equ	0xFF0
 27647                           indf0	equ	0xFEF
 27648                           postinc0	equ	0xFEE
 27649                           fsr0h	equ	0xFEA
 27650                           fsr0l	equ	0xFE9
 27651                           wreg	equ	0xFE8
 27652                           indf1	equ	0xFE7
 27653                           postdec1	equ	0xFE5
 27654                           fsr1h	equ	0xFE2
 27655                           fsr1l	equ	0xFE1
 27656                           indf2	equ	0xFDF
 27657                           postinc2	equ	0xFDE
 27658                           postdec2	equ	0xFDD
 27659                           plusw2	equ	0xFDB
 27660                           fsr2h	equ	0xFDA
 27661                           fsr2l	equ	0xFD9
 27662                           status	equ	0xFD8
 27663                           
 27664 ;; *************** function _USBCtrlEPAllowDataStage *****************
 27665 ;; Defined at:
 27666 ;;		line 1173 in file "../Includes/Usb/Framework/usb_device.c"
 27667 ;; Parameters:    Size  Location     Type
 27668 ;;		None
 27669 ;; Auto vars:     Size  Location     Type
 27670 ;;		None
 27671 ;; Return value:  Size  Location     Type
 27672 ;;		None               void
 27673 ;; Registers used:
 27674 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27675 ;; Tracked objects:
 27676 ;;		On entry : 0/0
 27677 ;;		On exit  : 0/0
 27678 ;;		Unchanged: 0/0
 27679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27680 ;;      Params:         0       0       0       0       0       0       0       0       0
 27681 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27682 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27683 ;;      Totals:         0       0       0       0       0       0       0       0       0
 27684 ;;Total ram usage:        0 bytes
 27685 ;; Hardware stack levels used:    1
 27686 ;; Hardware stack levels required when called:    1
 27687 ;; This function calls:
 27688 ;;		_USBCtrlTrfTxService
 27689 ;; This function is called by:
 27690 ;;		_USBCtrlEPServiceComplete
 27691 ;; This function uses a non-reentrant model
 27692 ;;
 27693                           
 27694                           	psect	text113
 27695  005766                     __ptext113:
 27696                           	opt stack 0
 27697  005766                     _USBCtrlEPAllowDataStage:
 27698                           	opt stack 15
 27699                           
 27700                           ;usb_device.c: 1175: USBDeferINDataStagePackets = 0;
 27701                           
 27702                           ;incstack = 0
 27703  005766  0E00               	movlw	0
 27704  005768  0100               	movlb	0	; () banked
 27705  00576A  6FD0               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 27706                           
 27707                           ;usb_device.c: 1176: USBDeferOUTDataStagePackets = 0;
 27708  00576C  0E00               	movlw	0
 27709  00576E  0100               	movlb	0	; () banked
 27710  005770  6FD1               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 27711                           
 27712                           ; BSR set to: 0
 27713                           ;usb_device.c: 1178: if(controlTransferState == 2)
 27714  005772  0E02               	movlw	2
 27715  005774  1851               	xorwf	_controlTransferState,w,c	;volatile
 27716  005776  A4D8               	btfss	status,2,c
 27717  005778  D01F               	goto	i2l7964
 27718                           
 27719                           ; BSR set to: 0
 27720                           ;usb_device.c: 1179: {
 27721                           ;usb_device.c: 1181: pBDTEntryEP0OutNext->CNT = 8;
 27722  00577A  EE20 F001          	lfsr	2,1
 27723  00577E  5046               	movf	_pBDTEntryEP0OutNext,w,c
 27724  005780  26D9               	addwf	fsr2l,f,c
 27725  005782  5047               	movf	_pBDTEntryEP0OutNext+1,w,c
 27726  005784  22DA               	addwfc	fsr2h,f,c
 27727  005786  0E08               	movlw	8
 27728  005788  6EDF               	movwf	indf2,c
 27729                           
 27730                           ;usb_device.c: 1182: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 27731  00578A  EE20 F002          	lfsr	2,2
 27732  00578E  5046               	movf	_pBDTEntryEP0OutNext,w,c
 27733  005790  26D9               	addwf	fsr2l,f,c
 27734  005792  5047               	movf	_pBDTEntryEP0OutNext+1,w,c
 27735  005794  22DA               	addwfc	fsr2h,f,c
 27736  005796  0E38               	movlw	56
 27737  005798  6EDE               	movwf	postinc2,c
 27738  00579A  0E04               	movlw	4
 27739  00579C  6EDD               	movwf	postdec2,c
 27740                           
 27741                           ; BSR set to: 0
 27742                           ;usb_device.c: 1183: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 27743  00579E  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27744  0057A2  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27745  0057A6  0E48               	movlw	72
 27746  0057A8  6EDF               	movwf	indf2,c
 27747                           
 27748                           ; BSR set to: 0
 27749                           ;usb_device.c: 1184: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 27750  0057AA  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27751  0057AE  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27752  0057B2  0E00               	movlw	0
 27753  0057B4  8EDB               	bsf	plusw2,7,c
 27754                           
 27755                           ;usb_device.c: 1185: }
 27756  0057B6  0012               	return	
 27757  0057B8                     i2l7964:
 27758                           
 27759                           ; BSR set to: 0
 27760                           ;usb_device.c: 1186: else
 27761                           ;usb_device.c: 1187: {
 27762                           ;usb_device.c: 1190: if(SetupPkt.wLength < inPipes[0].wCount.Val)
 27763  0057B8  503A               	movf	_inPipes+4,w,c	;volatile
 27764  0057BA  0104               	movlb	4	; () banked
 27765  0057BC  5D36               	subwf	54,w,b	;volatile
 27766  0057BE  503B               	movf	_inPipes+5,w,c	;volatile
 27767  0057C0  0104               	movlb	4	; () banked
 27768  0057C2  5937               	subwfb	55,w,b	;volatile
 27769  0057C4  B0D8               	btfsc	status,0,c
 27770  0057C6  D004               	goto	i2l7968
 27771                           
 27772                           ; BSR set to: 4
 27773                           ;usb_device.c: 1191: {
 27774                           ;usb_device.c: 1192: inPipes[0].wCount.Val = SetupPkt.wLength;
 27775  0057C8  C436 F03A          	movff	1078,_inPipes+4	;volatile
 27776  0057CC  C437 F03B          	movff	1079,_inPipes+5	;volatile
 27777  0057D0                     i2l7968:
 27778                           
 27779                           ; BSR set to: 4
 27780                           ;usb_device.c: 1193: }
 27781                           ;usb_device.c: 1194: USBCtrlTrfTxService();
 27782  0057D0  ECFB  F027         	call	_USBCtrlTrfTxService	;wreg free
 27783                           
 27784                           ;usb_device.c: 1199: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 27785  0057D4  EE20 F002          	lfsr	2,2
 27786  0057D8  503C               	movf	_pBDTEntryIn,w,c
 27787  0057DA  26D9               	addwf	fsr2l,f,c
 27788  0057DC  503D               	movf	_pBDTEntryIn+1,w,c
 27789  0057DE  22DA               	addwfc	fsr2h,f,c
 27790  0057E0  0E38               	movlw	56
 27791  0057E2  6EDE               	movwf	postinc2,c
 27792  0057E4  0E04               	movlw	4
 27793  0057E6  6EDD               	movwf	postdec2,c
 27794                           
 27795                           ;usb_device.c: 1200: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 27796  0057E8  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 27797  0057EC  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27798  0057F0  0E48               	movlw	72
 27799  0057F2  6EDF               	movwf	indf2,c
 27800                           
 27801                           ;usb_device.c: 1201: pBDTEntryIn[0]->STAT.Val |= 0x80;
 27802  0057F4  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 27803  0057F8  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27804  0057FC  0E00               	movlw	0
 27805  0057FE  8EDB               	bsf	plusw2,7,c
 27806  005800  0012               	return	
 27807  005802                     __end_of_USBCtrlEPAllowDataStage:
 27808                           	opt stack 0
 27809                           pclatu	equ	0xFFB
 27810                           pclath	equ	0xFFA
 27811                           tblptru	equ	0xFF8
 27812                           tblptrh	equ	0xFF7
 27813                           tblptrl	equ	0xFF6
 27814                           tablat	equ	0xFF5
 27815                           prodh	equ	0xFF4
 27816                           prodl	equ	0xFF3
 27817                           intcon	equ	0xFF2
 27818                           intcon3	equ	0xFF0
 27819                           indf0	equ	0xFEF
 27820                           postinc0	equ	0xFEE
 27821                           fsr0h	equ	0xFEA
 27822                           fsr0l	equ	0xFE9
 27823                           wreg	equ	0xFE8
 27824                           indf1	equ	0xFE7
 27825                           postdec1	equ	0xFE5
 27826                           fsr1h	equ	0xFE2
 27827                           fsr1l	equ	0xFE1
 27828                           indf2	equ	0xFDF
 27829                           postinc2	equ	0xFDE
 27830                           postdec2	equ	0xFDD
 27831                           plusw2	equ	0xFDB
 27832                           fsr2h	equ	0xFDA
 27833                           fsr2l	equ	0xFD9
 27834                           status	equ	0xFD8
 27835                           
 27836 ;; *************** function _USBCheckStdRequest *****************
 27837 ;; Defined at:
 27838 ;;		line 2317 in file "../Includes/Usb/Framework/usb_device.c"
 27839 ;; Parameters:    Size  Location     Type
 27840 ;;		None
 27841 ;; Auto vars:     Size  Location     Type
 27842 ;;		None
 27843 ;; Return value:  Size  Location     Type
 27844 ;;		None               void
 27845 ;; Registers used:
 27846 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27847 ;; Tracked objects:
 27848 ;;		On entry : 0/0
 27849 ;;		On exit  : 0/0
 27850 ;;		Unchanged: 0/0
 27851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 27852 ;;      Params:         0       0       0       0       0       0       0       0       0
 27853 ;;      Locals:         0       0       0       0       0       0       0       0       0
 27854 ;;      Temps:          0       0       0       0       0       0       0       0       0
 27855 ;;      Totals:         0       0       0       0       0       0       0       0       0
 27856 ;;Total ram usage:        0 bytes
 27857 ;; Hardware stack levels used:    1
 27858 ;; Hardware stack levels required when called:    6
 27859 ;; This function calls:
 27860 ;;		_USBStdFeatureReqHandler
 27861 ;;		_USBStdGetDscHandler
 27862 ;;		_USBStdGetStatusHandler
 27863 ;;		_USBStdSetCfgHandler
 27864 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 27865 ;; This function is called by:
 27866 ;;		_USBCtrlTrfSetupHandler
 27867 ;; This function uses a non-reentrant model
 27868 ;;
 27869                           
 27870                           	psect	text114
 27871  004A2A                     __ptext114:
 27872                           	opt stack 0
 27873  004A2A                     _USBCheckStdRequest:
 27874                           	opt stack 11
 27875                           
 27876                           ;usb_device.c: 2319: if(SetupPkt.RequestType != (0x00>>5)) return;
 27877                           
 27878                           ;incstack = 0
 27879  004A2A  0104               	movlb	4	; () banked
 27880  004A2C  3930               	swapf	48,w,b	;volatile
 27881  004A2E  32E8               	rrcf	wreg,f,c
 27882  004A30  0B03               	andlw	3
 27883  004A32  0900               	iorlw	0
 27884  004A34  A4D8               	btfss	status,2,c
 27885  004A36  0012               	return	
 27886  004A38  D044               	goto	i2l8464
 27887  004A3A                     i2l1929:
 27888                           
 27889                           ; BSR set to: 4
 27890                           ;usb_device.c: 2324: inPipes[0].info.bits.busy = 1;
 27891  004A3A  8E39               	bsf	_inPipes+3,7,c	;volatile
 27892                           
 27893                           ; BSR set to: 4
 27894                           ;usb_device.c: 2325: USBDeviceState = ADR_PENDING_STATE;
 27895  004A3C  0E08               	movlw	8
 27896  004A3E  0100               	movlb	0	; () banked
 27897  004A40  6FD2               	movwf	_USBDeviceState& (0+255),b	;volatile
 27898                           
 27899                           ;usb_device.c: 2327: break;
 27900  004A42  0012               	return	
 27901  004A44                     i2l8434:
 27902                           
 27903                           ;usb_device.c: 2329: USBStdGetDscHandler();
 27904  004A44  EC6A  F01E         	call	_USBStdGetDscHandler	;wreg free
 27905                           
 27906                           ;usb_device.c: 2330: break;
 27907  004A48  0012               	return	
 27908  004A4A                     i2l8436:
 27909                           
 27910                           ;usb_device.c: 2332: USBStdSetCfgHandler();
 27911  004A4A  ECC6  F023         	call	_USBStdSetCfgHandler	;wreg free
 27912                           
 27913                           ;usb_device.c: 2333: break;
 27914  004A4E  0012               	return	
 27915  004A50                     i2l8438:
 27916                           
 27917                           ;usb_device.c: 2335: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 27918  004A50  0E58               	movlw	low _USBActiveConfiguration
 27919  004A52  6E36               	movwf	_inPipes,c	;volatile
 27920  004A54  0E00               	movlw	high _USBActiveConfiguration
 27921  004A56  6E37               	movwf	_inPipes+1,c	;volatile
 27922                           
 27923                           ;usb_device.c: 2336: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27924  004A58  8039               	bsf	_inPipes+3,0,c	;volatile
 27925                           
 27926                           ;usb_device.c: 2337: inPipes[0].wCount.v[0] = 1;
 27927  004A5A  0E01               	movlw	1
 27928  004A5C  6E3A               	movwf	_inPipes+4,c	;volatile
 27929                           
 27930                           ;usb_device.c: 2338: inPipes[0].info.bits.busy = 1;
 27931  004A5E  8E39               	bsf	_inPipes+3,7,c	;volatile
 27932                           
 27933                           ;usb_device.c: 2339: break;
 27934  004A60  0012               	return	
 27935  004A62                     i2l8446:
 27936                           
 27937                           ;usb_device.c: 2341: USBStdGetStatusHandler();
 27938  004A62  EC6E  F029         	call	_USBStdGetStatusHandler	;wreg free
 27939                           
 27940                           ;usb_device.c: 2342: break;
 27941  004A66  0012               	return	
 27942  004A68                     i2l8448:
 27943                           
 27944                           ;usb_device.c: 2344: case 3:
 27945                           ;usb_device.c: 2345: USBStdFeatureReqHandler();
 27946  004A68  ECC0  F015         	call	_USBStdFeatureReqHandler	;wreg free
 27947                           
 27948                           ;usb_device.c: 2346: break;
 27949  004A6C  0012               	return	
 27950  004A6E                     i2l8450:
 27951                           
 27952                           ;usb_device.c: 2348: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 27953  004A6E  0104               	movlb	4	; () banked
 27954  004A70  5134               	movf	52,w,b	;volatile
 27955  004A72  0D01               	mullw	1
 27956  004A74  0EF3               	movlw	low _USBAlternateInterface
 27957  004A76  24F3               	addwf	prodl,w,c
 27958  004A78  6E36               	movwf	_inPipes,c	;volatile
 27959  004A7A  0E00               	movlw	high _USBAlternateInterface
 27960  004A7C  20F4               	addwfc	prodh,w,c
 27961  004A7E  6E37               	movwf	_inPipes+1,c	;volatile
 27962                           
 27963                           ; BSR set to: 4
 27964                           ;usb_device.c: 2349: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 27965  004A80  8039               	bsf	_inPipes+3,0,c	;volatile
 27966                           
 27967                           ; BSR set to: 4
 27968                           ;usb_device.c: 2350: inPipes[0].wCount.v[0] = 1;
 27969  004A82  0E01               	movlw	1
 27970  004A84  6E3A               	movwf	_inPipes+4,c	;volatile
 27971                           
 27972                           ; BSR set to: 4
 27973                           ;usb_device.c: 2351: inPipes[0].info.bits.busy = 1;
 27974  004A86  8E39               	bsf	_inPipes+3,7,c	;volatile
 27975                           
 27976                           ;usb_device.c: 2352: break;
 27977  004A88  0012               	return	
 27978  004A8A                     i2l1938:
 27979                           
 27980                           ; BSR set to: 4
 27981                           ;usb_device.c: 2354: inPipes[0].info.bits.busy = 1;
 27982  004A8A  8E39               	bsf	_inPipes+3,7,c	;volatile
 27983                           
 27984                           ; BSR set to: 4
 27985                           ;usb_device.c: 2355: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 27986  004A8C  0104               	movlb	4	; () banked
 27987  004A8E  5134               	movf	52,w,b	;volatile
 27988  004A90  0D01               	mullw	1
 27989  004A92  0EF3               	movlw	low _USBAlternateInterface
 27990  004A94  24F3               	addwf	prodl,w,c
 27991  004A96  6ED9               	movwf	fsr2l,c
 27992  004A98  0E00               	movlw	high _USBAlternateInterface
 27993  004A9A  20F4               	addwfc	prodh,w,c
 27994  004A9C  6EDA               	movwf	fsr2h,c
 27995  004A9E  C432 FFDF          	movff	1074,indf2	;volatile
 27996                           
 27997                           ;usb_device.c: 2356: break;
 27998  004AA2  0012               	return	
 27999  004AA4                     i2l8460:
 28000                           
 28001                           ; BSR set to: 4
 28002                           ;usb_device.c: 2358: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 28003  004AA4  0E00               	movlw	0
 28004  004AA6  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 28005  004AA8  0E02               	movlw	2
 28006  004AAA  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 28007  004AAC  0E00               	movlw	0
 28008  004AAE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 28009  004AB0  0E00               	movlw	0
 28010  004AB2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 28011  004AB4  0E00               	movlw	0
 28012  004AB6  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 28013  004AB8  0E00               	movlw	0
 28014  004ABA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 28015  004ABC  EC67  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 28016                           
 28017                           ;usb_device.c: 2363: }
 28018                           
 28019                           ;usb_device.c: 2362: break;
 28020                           
 28021                           ;usb_device.c: 2361: default:
 28022                           
 28023                           ;usb_device.c: 2360: case 12:
 28024                           
 28025                           ;usb_device.c: 2359: break;
 28026  004AC0  0012               	return	
 28027  004AC2                     i2l8464:
 28028  004AC2  0104               	movlb	4	; () banked
 28029  004AC4  5131               	movf	49,w,b	;volatile
 28030                           
 28031                           ; Switch size 1, requested type "space"
 28032                           ; Number of cases is 11, Range of values is 0 to 12
 28033                           ; switch strategies available:
 28034                           ; Name         Instructions Cycles
 28035                           ; simple_byte           34    18 (average)
 28036                           ;	Chosen strategy is simple_byte
 28037  004AC6  0A00               	xorlw	0	; case 0
 28038  004AC8  B4D8               	btfsc	status,2,c
 28039  004ACA  D7CB               	goto	i2l8446
 28040  004ACC  0A01               	xorlw	1	; case 1
 28041  004ACE  B4D8               	btfsc	status,2,c
 28042  004AD0  D7CB               	goto	i2l8448
 28043  004AD2  0A02               	xorlw	2	; case 3
 28044  004AD4  B4D8               	btfsc	status,2,c
 28045  004AD6  D7C8               	goto	i2l8448
 28046  004AD8  0A06               	xorlw	6	; case 5
 28047  004ADA  B4D8               	btfsc	status,2,c
 28048  004ADC  D7AE               	goto	i2l1929
 28049  004ADE  0A03               	xorlw	3	; case 6
 28050  004AE0  B4D8               	btfsc	status,2,c
 28051  004AE2  D7B0               	goto	i2l8434
 28052  004AE4  0A01               	xorlw	1	; case 7
 28053  004AE6  B4D8               	btfsc	status,2,c
 28054  004AE8  D7DD               	goto	i2l8460
 28055  004AEA  0A0F               	xorlw	15	; case 8
 28056  004AEC  B4D8               	btfsc	status,2,c
 28057  004AEE  D7B0               	goto	i2l8438
 28058  004AF0  0A01               	xorlw	1	; case 9
 28059  004AF2  B4D8               	btfsc	status,2,c
 28060  004AF4  D7AA               	goto	i2l8436
 28061  004AF6  0A03               	xorlw	3	; case 10
 28062  004AF8  B4D8               	btfsc	status,2,c
 28063  004AFA  D7B9               	goto	i2l8450
 28064  004AFC  0A01               	xorlw	1	; case 11
 28065  004AFE  B4D8               	btfsc	status,2,c
 28066  004B00  D7C4               	goto	i2l1938
 28067  004B02  0A07               	xorlw	7	; case 12
 28068  004B04  0012               	return	
 28069  004B06                     __end_of_USBCheckStdRequest:
 28070                           	opt stack 0
 28071                           pclatu	equ	0xFFB
 28072                           pclath	equ	0xFFA
 28073                           tblptru	equ	0xFF8
 28074                           tblptrh	equ	0xFF7
 28075                           tblptrl	equ	0xFF6
 28076                           tablat	equ	0xFF5
 28077                           prodh	equ	0xFF4
 28078                           prodl	equ	0xFF3
 28079                           intcon	equ	0xFF2
 28080                           intcon3	equ	0xFF0
 28081                           indf0	equ	0xFEF
 28082                           postinc0	equ	0xFEE
 28083                           fsr0h	equ	0xFEA
 28084                           fsr0l	equ	0xFE9
 28085                           wreg	equ	0xFE8
 28086                           indf1	equ	0xFE7
 28087                           postdec1	equ	0xFE5
 28088                           fsr1h	equ	0xFE2
 28089                           fsr1l	equ	0xFE1
 28090                           indf2	equ	0xFDF
 28091                           postinc2	equ	0xFDE
 28092                           postdec2	equ	0xFDD
 28093                           plusw2	equ	0xFDB
 28094                           fsr2h	equ	0xFDA
 28095                           fsr2l	equ	0xFD9
 28096                           status	equ	0xFD8
 28097                           
 28098 ;; *************** function _USBStdSetCfgHandler *****************
 28099 ;; Defined at:
 28100 ;;		line 1629 in file "../Includes/Usb/Framework/usb_device.c"
 28101 ;; Parameters:    Size  Location     Type
 28102 ;;		None
 28103 ;; Auto vars:     Size  Location     Type
 28104 ;;  i               1   21[COMRAM] unsigned char 
 28105 ;; Return value:  Size  Location     Type
 28106 ;;		None               void
 28107 ;; Registers used:
 28108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28109 ;; Tracked objects:
 28110 ;;		On entry : 0/0
 28111 ;;		On exit  : 0/0
 28112 ;;		Unchanged: 0/0
 28113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28114 ;;      Params:         0       0       0       0       0       0       0       0       0
 28115 ;;      Locals:         1       0       0       0       0       0       0       0       0
 28116 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28117 ;;      Totals:         1       0       0       0       0       0       0       0       0
 28118 ;;Total ram usage:        1 bytes
 28119 ;; Hardware stack levels used:    1
 28120 ;; Hardware stack levels required when called:    5
 28121 ;; This function calls:
 28122 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28123 ;;		i2_memset
 28124 ;; This function is called by:
 28125 ;;		_USBCheckStdRequest
 28126 ;; This function uses a non-reentrant model
 28127 ;;
 28128                           
 28129                           	psect	text115
 28130  00478C                     __ptext115:
 28131                           	opt stack 0
 28132  00478C                     _USBStdSetCfgHandler:
 28133                           	opt stack 11
 28134                           
 28135                           ;usb_device.c: 1631: uint8_t i;
 28136                           ;usb_device.c: 1634: inPipes[0].info.bits.busy = 1;
 28137                           
 28138                           ;incstack = 0
 28139  00478C  8E39               	bsf	_inPipes+3,7,c	;volatile
 28140                           
 28141                           ;usb_device.c: 1637: memset((void*)&UEP1,0x00,(2));;
 28142  00478E  0E6B               	movlw	107
 28143  004790  6E01               	movwf	i2memset@p1,c
 28144  004792  0E0F               	movlw	15
 28145  004794  6E02               	movwf	i2memset@p1+1,c
 28146  004796  0E00               	movlw	0
 28147  004798  6E04               	movwf	i2memset@c+1,c
 28148  00479A  0E00               	movlw	0
 28149  00479C  6E03               	movwf	i2memset@c,c
 28150  00479E  0E00               	movlw	0
 28151  0047A0  6E06               	movwf	i2memset@n+1,c
 28152  0047A2  0E02               	movlw	2
 28153  0047A4  6E05               	movwf	i2memset@n,c
 28154  0047A6  EC06  F034         	call	i2_memset	;wreg free
 28155                           
 28156                           ;usb_device.c: 1640: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 28157  0047AA  0E00               	movlw	0
 28158  0047AC  6E01               	movwf	i2memset@p1,c
 28159  0047AE  0E04               	movlw	4
 28160  0047B0  6E02               	movwf	i2memset@p1+1,c
 28161  0047B2  0E00               	movlw	0
 28162  0047B4  6E04               	movwf	i2memset@c+1,c
 28163  0047B6  0E00               	movlw	0
 28164  0047B8  6E03               	movwf	i2memset@c,c
 28165  0047BA  0E00               	movlw	0
 28166  0047BC  6E06               	movwf	i2memset@n+1,c
 28167  0047BE  0E30               	movlw	48
 28168  0047C0  6E05               	movwf	i2memset@n,c
 28169  0047C2  EC06  F034         	call	i2_memset	;wreg free
 28170                           
 28171                           ;usb_device.c: 1643: UCONbits.PPBRST = 1;
 28172  0047C6  8C60               	bsf	3936,6,c	;volatile
 28173                           
 28174                           ;usb_device.c: 1648: for(i = 0; i < (uint8_t)(2+1u); i++)
 28175  0047C8  0E00               	movlw	0
 28176  0047CA  6E16               	movwf	USBStdSetCfgHandler@i,c
 28177  0047CC                     i2l7984:
 28178  0047CC  0E02               	movlw	2
 28179  0047CE  6416               	cpfsgt	USBStdSetCfgHandler@i,c
 28180  0047D0  D001               	goto	i2l7988
 28181  0047D2  D016               	goto	i2l7994
 28182  0047D4                     i2l7988:
 28183                           
 28184                           ;usb_device.c: 1649: {
 28185                           ;usb_device.c: 1650: ep_data_in[i].Val = 0u;
 28186  0047D4  5016               	movf	USBStdSetCfgHandler@i,w,c
 28187  0047D6  0D01               	mullw	1
 28188  0047D8  0EB9               	movlw	low _ep_data_in
 28189  0047DA  24F3               	addwf	prodl,w,c
 28190  0047DC  6ED9               	movwf	fsr2l,c
 28191  0047DE  0E00               	movlw	high _ep_data_in
 28192  0047E0  20F4               	addwfc	prodh,w,c
 28193  0047E2  6EDA               	movwf	fsr2h,c
 28194  0047E4  0E00               	movlw	0
 28195  0047E6  6EDF               	movwf	indf2,c
 28196                           
 28197                           ;usb_device.c: 1651: ep_data_out[i].Val = 0u;
 28198  0047E8  5016               	movf	USBStdSetCfgHandler@i,w,c
 28199  0047EA  0D01               	mullw	1
 28200  0047EC  0EBC               	movlw	low _ep_data_out
 28201  0047EE  24F3               	addwf	prodl,w,c
 28202  0047F0  6ED9               	movwf	fsr2l,c
 28203  0047F2  0E00               	movlw	high _ep_data_out
 28204  0047F4  20F4               	addwfc	prodh,w,c
 28205  0047F6  6EDA               	movwf	fsr2h,c
 28206  0047F8  0E00               	movlw	0
 28207  0047FA  6EDF               	movwf	indf2,c
 28208  0047FC  2A16               	incf	USBStdSetCfgHandler@i,f,c
 28209  0047FE  D7E6               	goto	i2l7984
 28210  004800                     i2l7994:
 28211                           
 28212                           ;usb_device.c: 1652: }
 28213                           ;usb_device.c: 1655: memset((void*)&USBAlternateInterface,0x00,2);
 28214  004800  0EF3               	movlw	low _USBAlternateInterface
 28215  004802  6E01               	movwf	i2memset@p1,c
 28216  004804  0E00               	movlw	high _USBAlternateInterface
 28217  004806  6E02               	movwf	i2memset@p1+1,c
 28218  004808  0E00               	movlw	0
 28219  00480A  6E04               	movwf	i2memset@c+1,c
 28220  00480C  0E00               	movlw	0
 28221  00480E  6E03               	movwf	i2memset@c,c
 28222  004810  0E00               	movlw	0
 28223  004812  6E06               	movwf	i2memset@n+1,c
 28224  004814  0E02               	movlw	2
 28225  004816  6E05               	movwf	i2memset@n,c
 28226  004818  EC06  F034         	call	i2_memset	;wreg free
 28227                           
 28228                           ;usb_device.c: 1658: UCONbits.PPBRST = 0;
 28229  00481C  9C60               	bcf	3936,6,c	;volatile
 28230                           
 28231                           ;usb_device.c: 1660: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 28232  00481E  0E08               	movlw	8
 28233  004820  6E3C               	movwf	_pBDTEntryIn,c
 28234  004822  0E04               	movlw	4
 28235  004824  6E3D               	movwf	_pBDTEntryIn+1,c
 28236                           
 28237                           ;usb_device.c: 1663: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 28238  004826  0E00               	movlw	0
 28239  004828  6E44               	movwf	_pBDTEntryEP0OutCurrent,c
 28240  00482A  0E04               	movlw	4
 28241  00482C  6E45               	movwf	_pBDTEntryEP0OutCurrent+1,c
 28242                           
 28243                           ;usb_device.c: 1664: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 28244  00482E  C044  F046         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 28245  004832  C045  F047         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 28246                           
 28247                           ;usb_device.c: 1667: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 28248  004836  C432 F058          	movff	1074,_USBActiveConfiguration	;volatile
 28249                           
 28250                           ;usb_device.c: 1670: if(USBActiveConfiguration == 0)
 28251  00483A  5058               	movf	_USBActiveConfiguration,w,c	;volatile
 28252  00483C  A4D8               	btfss	status,2,c
 28253  00483E  D004               	goto	i2l8010
 28254                           
 28255                           ;usb_device.c: 1671: {
 28256                           ;usb_device.c: 1673: USBDeviceState = ADDRESS_STATE;
 28257  004840  0E10               	movlw	16
 28258  004842  0100               	movlb	0	; () banked
 28259  004844  6FD2               	movwf	_USBDeviceState& (0+255),b	;volatile
 28260                           
 28261                           ;usb_device.c: 1674: }
 28262  004846  0012               	return	
 28263  004848                     i2l8010:
 28264                           
 28265                           ;usb_device.c: 1675: else
 28266                           ;usb_device.c: 1676: {
 28267                           ;usb_device.c: 1678: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
 28268  004848  0E00               	movlw	0
 28269  00484A  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 28270  00484C  0E01               	movlw	1
 28271  00484E  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 28272  004850  0E58               	movlw	low _USBActiveConfiguration
 28273  004852  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 28274  004854  0E00               	movlw	high _USBActiveConfiguration
 28275  004856  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 28276  004858  0E00               	movlw	0
 28277  00485A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 28278  00485C  0E01               	movlw	1
 28279  00485E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 28280  004860  EC67  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 28281                           
 28282                           ;usb_device.c: 1683: USBDeviceState = CONFIGURED_STATE;
 28283  004864  0E20               	movlw	32
 28284  004866  0100               	movlb	0	; () banked
 28285  004868  6FD2               	movwf	_USBDeviceState& (0+255),b	;volatile
 28286  00486A  0012               	return	
 28287  00486C                     __end_of_USBStdSetCfgHandler:
 28288                           	opt stack 0
 28289                           pclatu	equ	0xFFB
 28290                           pclath	equ	0xFFA
 28291                           tblptru	equ	0xFF8
 28292                           tblptrh	equ	0xFF7
 28293                           tblptrl	equ	0xFF6
 28294                           tablat	equ	0xFF5
 28295                           prodh	equ	0xFF4
 28296                           prodl	equ	0xFF3
 28297                           intcon	equ	0xFF2
 28298                           intcon3	equ	0xFF0
 28299                           indf0	equ	0xFEF
 28300                           postinc0	equ	0xFEE
 28301                           fsr0h	equ	0xFEA
 28302                           fsr0l	equ	0xFE9
 28303                           wreg	equ	0xFE8
 28304                           indf1	equ	0xFE7
 28305                           postdec1	equ	0xFE5
 28306                           fsr1h	equ	0xFE2
 28307                           fsr1l	equ	0xFE1
 28308                           indf2	equ	0xFDF
 28309                           postinc2	equ	0xFDE
 28310                           postdec2	equ	0xFDD
 28311                           plusw2	equ	0xFDB
 28312                           fsr2h	equ	0xFDA
 28313                           fsr2l	equ	0xFD9
 28314                           status	equ	0xFD8
 28315                           
 28316 ;; *************** function i2_memset *****************
 28317 ;; Defined at:
 28318 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\memset.c"
 28319 ;; Parameters:    Size  Location     Type
 28320 ;;  p1              2    0[COMRAM] PTR void 
 28321 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 28322 ;;  c               2    2[COMRAM] int 
 28323 ;;  n               2    4[COMRAM] unsigned int 
 28324 ;; Auto vars:     Size  Location     Type
 28325 ;;  memset          2    6[COMRAM] PTR unsigned char 
 28326 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 28327 ;; Return value:  Size  Location     Type
 28328 ;;                  2    0[COMRAM] PTR void 
 28329 ;; Registers used:
 28330 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28331 ;; Tracked objects:
 28332 ;;		On entry : 0/0
 28333 ;;		On exit  : 0/0
 28334 ;;		Unchanged: 0/0
 28335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28336 ;;      Params:         6       0       0       0       0       0       0       0       0
 28337 ;;      Locals:         2       0       0       0       0       0       0       0       0
 28338 ;;      Temps:          0       0       0       0       0       0       0       0       0
 28339 ;;      Totals:         8       0       0       0       0       0       0       0       0
 28340 ;;Total ram usage:        8 bytes
 28341 ;; Hardware stack levels used:    1
 28342 ;; This function calls:
 28343 ;;		Nothing
 28344 ;; This function is called by:
 28345 ;;		_USBStdSetCfgHandler
 28346 ;;		i2_USBDeviceInit
 28347 ;; This function uses a non-reentrant model
 28348 ;;
 28349                           
 28350                           	psect	text116
 28351  00680C                     __ptext116:
 28352                           	opt stack 0
 28353  00680C                     i2_memset:
 28354                           	opt stack 18
 28355                           
 28356                           ; BSR set to: 0
 28357                           ;incstack = 0
 28358  00680C  C001  F007         	movff	i2memset@p1,i2memset@p
 28359  006810  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 28360  006814  D008               	goto	i2l7810
 28361  006816                     i2l7806:
 28362  006816  C007  FFD9         	movff	i2memset@p,fsr2l
 28363  00681A  C008  FFDA         	movff	i2memset@p+1,fsr2h
 28364  00681E  C003  FFDF         	movff	i2memset@c,indf2
 28365  006822  4A07               	infsnz	i2memset@p,f,c
 28366  006824  2A08               	incf	i2memset@p+1,f,c
 28367  006826                     i2l7810:
 28368  006826  0605               	decf	i2memset@n,f,c
 28369  006828  A0D8               	btfss	status,0,c
 28370  00682A  0606               	decf	i2memset@n+1,f,c
 28371  00682C  2805               	incf	i2memset@n,w,c
 28372  00682E  E1F3               	bnz	i2l7806
 28373  006830  2806               	incf	i2memset@n+1,w,c
 28374  006832  B4D8               	btfsc	status,2,c
 28375  006834  0012               	return	
 28376  006836  D7EF               	goto	i2l7806
 28377  006838                     __end_ofi2_memset:
 28378                           	opt stack 0
 28379                           pclatu	equ	0xFFB
 28380                           pclath	equ	0xFFA
 28381                           tblptru	equ	0xFF8
 28382                           tblptrh	equ	0xFF7
 28383                           tblptrl	equ	0xFF6
 28384                           tablat	equ	0xFF5
 28385                           prodh	equ	0xFF4
 28386                           prodl	equ	0xFF3
 28387                           intcon	equ	0xFF2
 28388                           intcon3	equ	0xFF0
 28389                           indf0	equ	0xFEF
 28390                           postinc0	equ	0xFEE
 28391                           fsr0h	equ	0xFEA
 28392                           fsr0l	equ	0xFE9
 28393                           wreg	equ	0xFE8
 28394                           indf1	equ	0xFE7
 28395                           postdec1	equ	0xFE5
 28396                           fsr1h	equ	0xFE2
 28397                           fsr1l	equ	0xFE1
 28398                           indf2	equ	0xFDF
 28399                           postinc2	equ	0xFDE
 28400                           postdec2	equ	0xFDD
 28401                           plusw2	equ	0xFDB
 28402                           fsr2h	equ	0xFDA
 28403                           fsr2l	equ	0xFD9
 28404                           status	equ	0xFD8
 28405                           
 28406 ;; *************** function _USBStdGetStatusHandler *****************
 28407 ;; Defined at:
 28408 ;;		line 1773 in file "../Includes/Usb/Framework/usb_device.c"
 28409 ;; Parameters:    Size  Location     Type
 28410 ;;		None
 28411 ;; Auto vars:     Size  Location     Type
 28412 ;;  p               2    1[COMRAM] PTR struct __BDT
 28413 ;;		 -> BDT(48), NULL(0), 
 28414 ;; Return value:  Size  Location     Type
 28415 ;;		None               void
 28416 ;; Registers used:
 28417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28418 ;; Tracked objects:
 28419 ;;		On entry : 0/0
 28420 ;;		On exit  : 0/0
 28421 ;;		Unchanged: 0/0
 28422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28423 ;;      Params:         0       0       0       0       0       0       0       0       0
 28424 ;;      Locals:         2       0       0       0       0       0       0       0       0
 28425 ;;      Temps:          1       0       0       0       0       0       0       0       0
 28426 ;;      Totals:         3       0       0       0       0       0       0       0       0
 28427 ;;Total ram usage:        3 bytes
 28428 ;; Hardware stack levels used:    1
 28429 ;; This function calls:
 28430 ;;		Nothing
 28431 ;; This function is called by:
 28432 ;;		_USBCheckStdRequest
 28433 ;; This function uses a non-reentrant model
 28434 ;;
 28435                           
 28436                           	psect	text117
 28437  0052DC                     __ptext117:
 28438                           	opt stack 0
 28439  0052DC                     _USBStdGetStatusHandler:
 28440                           	opt stack 16
 28441                           
 28442                           ;usb_device.c: 1775: CtrlTrfData[0] = 0;
 28443                           
 28444                           ;incstack = 0
 28445  0052DC  0E00               	movlw	0
 28446  0052DE  0104               	movlb	4	; () banked
 28447  0052E0  6F38               	movwf	56,b	;volatile
 28448                           
 28449                           ;usb_device.c: 1776: CtrlTrfData[1] = 0;
 28450  0052E2  0E00               	movlw	0
 28451  0052E4  0104               	movlb	4	; () banked
 28452  0052E6  6F39               	movwf	57,b	;volatile
 28453                           
 28454                           ;usb_device.c: 1778: switch(SetupPkt.Recipient)
 28455  0052E8  D039               	goto	i2l8066
 28456  0052EA                     i2l1865:
 28457                           
 28458                           ; BSR set to: 4
 28459                           ;usb_device.c: 1781: inPipes[0].info.bits.busy = 1;
 28460  0052EA  8E39               	bsf	_inPipes+3,7,c	;volatile
 28461                           
 28462                           ; BSR set to: 4
 28463                           ;usb_device.c: 1789: }
 28464                           ;usb_device.c: 1791: if(RemoteWakeup == 1)
 28465                           
 28466                           ; BSR set to: 4
 28467                           
 28468                           ; BSR set to: 4
 28469                           ;usb_device.c: 1787: {
 28470                           ;usb_device.c: 1788: CtrlTrfData[0]|=0x01;
 28471                           
 28472                           ;usb_device.c: 1786: if(0 == 1)
 28473  0052EC  0100               	movlb	0	; () banked
 28474  0052EE  05CE               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 28475  0052F0  A4D8               	btfss	status,2,c
 28476  0052F2  D040               	goto	i2l1868
 28477                           
 28478                           ; BSR set to: 0
 28479                           ;usb_device.c: 1792: {
 28480                           ;usb_device.c: 1793: CtrlTrfData[0]|=0x02;
 28481  0052F4  0104               	movlb	4	; () banked
 28482  0052F6  8338               	bsf	56,1,b	;volatile
 28483                           
 28484                           ; BSR set to: 4
 28485                           ;usb_device.c: 1794: }
 28486                           ;usb_device.c: 1795: break;
 28487  0052F8  D03D               	goto	i2l1868
 28488  0052FA                     i2l1869:
 28489                           
 28490                           ; BSR set to: 4
 28491                           ;usb_device.c: 1797: inPipes[0].info.bits.busy = 1;
 28492  0052FA  8E39               	bsf	_inPipes+3,7,c	;volatile
 28493                           
 28494                           ;usb_device.c: 1798: break;
 28495  0052FC  D03B               	goto	i2l1868
 28496  0052FE                     i2l1870:
 28497                           
 28498                           ; BSR set to: 4
 28499                           ;usb_device.c: 1800: inPipes[0].info.bits.busy = 1;
 28500  0052FE  8E39               	bsf	_inPipes+3,7,c	;volatile
 28501                           
 28502                           ;usb_device.c: 1804: {
 28503                           ;usb_device.c: 1805: BDT_ENTRY *p;
 28504                           ;usb_device.c: 1807: if(SetupPkt.EPDir == 0)
 28505  005300  0104               	movlb	4	; () banked
 28506  005302  BF34               	btfsc	52,7,b	;volatile
 28507  005304  D00B               	goto	i2l8056
 28508                           
 28509                           ; BSR set to: 4
 28510                           ;usb_device.c: 1808: {
 28511                           ;usb_device.c: 1809: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 28512  005306  0104               	movlb	4	; () banked
 28513  005308  5134               	movf	52,w,b	;volatile
 28514  00530A  0B0F               	andlw	15
 28515  00530C  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 28516  00530E  5001               	movf	??_USBStdGetStatusHandler,w,c
 28517  005310  0D02               	mullw	2
 28518  005312  0E40               	movlw	low _pBDTEntryOut
 28519  005314  24F3               	addwf	prodl,w,c
 28520  005316  6ED9               	movwf	fsr2l,c
 28521  005318  0E01               	movlw	high _pBDTEntryOut
 28522  00531A  D00A               	goto	L26
 28523  00531C                     i2l8056:
 28524                           
 28525                           ; BSR set to: 4
 28526                           ;usb_device.c: 1811: else
 28527                           ;usb_device.c: 1812: {
 28528                           ;usb_device.c: 1813: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 28529  00531C  0104               	movlb	4	; () banked
 28530  00531E  5134               	movf	52,w,b	;volatile
 28531  005320  0B0F               	andlw	15
 28532  005322  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 28533  005324  5001               	movf	??_USBStdGetStatusHandler,w,c
 28534  005326  0D02               	mullw	2
 28535  005328  0E3C               	movlw	low _pBDTEntryIn
 28536  00532A  24F3               	addwf	prodl,w,c
 28537  00532C  6ED9               	movwf	fsr2l,c
 28538  00532E  0E00               	movlw	high _pBDTEntryIn
 28539  005330                     L26:
 28540  005330  20F4               	addwfc	prodh,w,c
 28541  005332  6EDA               	movwf	fsr2h,c
 28542  005334  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 28543  005338  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 28544                           
 28545                           ; BSR set to: 4
 28546                           ;usb_device.c: 1814: }
 28547                           ;usb_device.c: 1816: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
 28548                           
 28549                           ; BSR set to: 4
 28550  00533C  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 28551  005340  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 28552  005344  AEDF               	btfss	indf2,7,c
 28553  005346  D016               	goto	i2l1868
 28554                           
 28555                           ; BSR set to: 4
 28556  005348  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 28557  00534C  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 28558  005350  A4DF               	btfss	indf2,2,c
 28559  005352  D010               	goto	i2l1868
 28560                           
 28561                           ; BSR set to: 4
 28562                           ;usb_device.c: 1817: CtrlTrfData[0]=0x01;
 28563  005354  0E01               	movlw	1
 28564  005356  0104               	movlb	4	; () banked
 28565  005358  6F38               	movwf	56,b	;volatile
 28566                           
 28567                           ; BSR set to: 4
 28568                           ;usb_device.c: 1819: }
 28569                           ;usb_device.c: 1820: }
 28570                           
 28571                           ; BSR set to: 4
 28572                           ;usb_device.c: 1818: break;
 28573  00535A  D00C               	goto	i2l1868
 28574  00535C                     i2l8066:
 28575                           
 28576                           ; BSR set to: 4
 28577  00535C  0104               	movlb	4	; () banked
 28578  00535E  5130               	movf	48,w,b	;volatile
 28579  005360  0B1F               	andlw	31
 28580                           
 28581                           ; Switch size 1, requested type "space"
 28582                           ; Number of cases is 3, Range of values is 0 to 2
 28583                           ; switch strategies available:
 28584                           ; Name         Instructions Cycles
 28585                           ; simple_byte           10     6 (average)
 28586                           ;	Chosen strategy is simple_byte
 28587  005362  0A00               	xorlw	0	; case 0
 28588  005364  B4D8               	btfsc	status,2,c
 28589  005366  D7C1               	goto	i2l1865
 28590  005368  0A01               	xorlw	1	; case 1
 28591  00536A  B4D8               	btfsc	status,2,c
 28592  00536C  D7C6               	goto	i2l1869
 28593  00536E  0A03               	xorlw	3	; case 2
 28594  005370  B4D8               	btfsc	status,2,c
 28595  005372  D7C5               	goto	i2l1870
 28596  005374                     i2l1868:
 28597                           
 28598                           ;usb_device.c: 1822: if(inPipes[0].info.bits.busy == 1)
 28599  005374  AE39               	btfss	_inPipes+3,7,c	;volatile
 28600  005376  0012               	return	
 28601                           
 28602                           ;usb_device.c: 1823: {
 28603                           ;usb_device.c: 1824: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
 28604  005378  0E38               	movlw	56
 28605  00537A  6E36               	movwf	_inPipes,c	;volatile
 28606  00537C  0E04               	movlw	4
 28607  00537E  6E37               	movwf	_inPipes+1,c	;volatile
 28608                           
 28609                           ;usb_device.c: 1825: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 28610  005380  8039               	bsf	_inPipes+3,0,c	;volatile
 28611                           
 28612                           ;usb_device.c: 1826: inPipes[0].wCount.v[0] = 2;
 28613  005382  0E02               	movlw	2
 28614  005384  6E3A               	movwf	_inPipes+4,c	;volatile
 28615  005386  0012               	return	
 28616  005388                     __end_of_USBStdGetStatusHandler:
 28617                           	opt stack 0
 28618                           pclatu	equ	0xFFB
 28619                           pclath	equ	0xFFA
 28620                           tblptru	equ	0xFF8
 28621                           tblptrh	equ	0xFF7
 28622                           tblptrl	equ	0xFF6
 28623                           tablat	equ	0xFF5
 28624                           prodh	equ	0xFF4
 28625                           prodl	equ	0xFF3
 28626                           intcon	equ	0xFF2
 28627                           intcon3	equ	0xFF0
 28628                           indf0	equ	0xFEF
 28629                           postinc0	equ	0xFEE
 28630                           fsr0h	equ	0xFEA
 28631                           fsr0l	equ	0xFE9
 28632                           wreg	equ	0xFE8
 28633                           indf1	equ	0xFE7
 28634                           postdec1	equ	0xFE5
 28635                           fsr1h	equ	0xFE2
 28636                           fsr1l	equ	0xFE1
 28637                           indf2	equ	0xFDF
 28638                           postinc2	equ	0xFDE
 28639                           postdec2	equ	0xFDD
 28640                           plusw2	equ	0xFDB
 28641                           fsr2h	equ	0xFDA
 28642                           fsr2l	equ	0xFD9
 28643                           status	equ	0xFD8
 28644                           
 28645 ;; *************** function _USBStdGetDscHandler *****************
 28646 ;; Defined at:
 28647 ;;		line 1704 in file "../Includes/Usb/Framework/usb_device.c"
 28648 ;; Parameters:    Size  Location     Type
 28649 ;;		None
 28650 ;; Auto vars:     Size  Location     Type
 28651 ;;		None
 28652 ;; Return value:  Size  Location     Type
 28653 ;;		None               void
 28654 ;; Registers used:
 28655 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 28656 ;; Tracked objects:
 28657 ;;		On entry : 0/0
 28658 ;;		On exit  : 0/0
 28659 ;;		Unchanged: 0/0
 28660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28661 ;;      Params:         0       0       0       0       0       0       0       0       0
 28662 ;;      Locals:         0       0       0       0       0       0       0       0       0
 28663 ;;      Temps:          2       0       0       0       0       0       0       0       0
 28664 ;;      Totals:         2       0       0       0       0       0       0       0       0
 28665 ;;Total ram usage:        2 bytes
 28666 ;; Hardware stack levels used:    1
 28667 ;; This function calls:
 28668 ;;		Nothing
 28669 ;; This function is called by:
 28670 ;;		_USBCheckStdRequest
 28671 ;; This function uses a non-reentrant model
 28672 ;;
 28673                           
 28674                           	psect	text118
 28675  003CD4                     __ptext118:
 28676                           	opt stack 0
 28677  003CD4                     _USBStdGetDscHandler:
 28678                           	opt stack 16
 28679                           
 28680                           ;usb_device.c: 1706: if(SetupPkt.bmRequestType == 0x80)
 28681                           
 28682                           ;incstack = 0
 28683  003CD4  0E80               	movlw	128
 28684  003CD6  0104               	movlb	4	; () banked
 28685  003CD8  1930               	xorwf	48,w,b	;volatile
 28686  003CDA  A4D8               	btfss	status,2,c
 28687  003CDC  0012               	return	
 28688                           
 28689                           ; BSR set to: 4
 28690                           ;usb_device.c: 1707: {
 28691                           ;usb_device.c: 1708: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 28692  003CDE  0EC0               	movlw	192
 28693  003CE0  6E39               	movwf	_inPipes+3,c	;volatile
 28694                           
 28695                           ;usb_device.c: 1710: switch(SetupPkt.bDescriptorType)
 28696  003CE2  D07C               	goto	i2l8044
 28697  003CE4                     i2l8018:
 28698                           
 28699                           ; BSR set to: 4
 28700                           ;usb_device.c: 1713: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 28701  003CE4  0E66               	movlw	low _device_dsc
 28702  003CE6  6E36               	movwf	_inPipes,c	;volatile
 28703  003CE8  0E79               	movlw	high _device_dsc
 28704  003CEA  6E37               	movwf	_inPipes+1,c	;volatile
 28705                           
 28706                           ; BSR set to: 4
 28707                           ;usb_device.c: 1714: inPipes[0].wCount.Val = sizeof(device_dsc);
 28708  003CEC  0E00               	movlw	0
 28709  003CEE  6E3B               	movwf	_inPipes+5,c	;volatile
 28710  003CF0  0E12               	movlw	18
 28711  003CF2  6E3A               	movwf	_inPipes+4,c	;volatile
 28712                           
 28713                           ;usb_device.c: 1715: break;
 28714  003CF4  0012               	return	
 28715  003CF6                     i2l8022:
 28716                           
 28717                           ; BSR set to: 4
 28718                           ;usb_device.c: 1720: if(SetupPkt.bDscIndex < 1)
 28719  003CF6  0104               	movlb	4	; () banked
 28720  003CF8  5132               	movf	50,w,b	;volatile
 28721  003CFA  A4D8               	btfss	status,2,c
 28722  003CFC  D03E               	goto	i2l8030
 28723                           
 28724                           ; BSR set to: 4
 28725                           ;usb_device.c: 1721: {
 28726                           ;usb_device.c: 1722: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
 28727  003CFE  0104               	movlb	4	; () banked
 28728  003D00  5132               	movf	50,w,b	;volatile
 28729  003D02  0D02               	mullw	2
 28730  003D04  0EB9               	movlw	low _USB_CD_Ptr
 28731  003D06  24F3               	addwf	prodl,w,c
 28732  003D08  6EF6               	movwf	tblptrl,c
 28733  003D0A  0E75               	movlw	high _USB_CD_Ptr
 28734  003D0C  20F4               	addwfc	prodh,w,c
 28735  003D0E  6EF7               	movwf	tblptrh,c
 28736  003D10                     	if	0	;There are less than 3 active tblptr bytes
 28737  003D10                     	endif
 28738  003D10  0009               	tblrd		*+
 28739  003D12  CFF5 F036          	movff	tablat,_inPipes	;volatile
 28740  003D16  000A               	tblrd		*-
 28741  003D18  CFF5 F037          	movff	tablat,_inPipes+1	;volatile
 28742                           
 28743                           ; BSR set to: 4
 28744                           ;usb_device.c: 1727: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 28745  003D1C  0E02               	movlw	2
 28746  003D1E  2436               	addwf	_inPipes,w,c	;volatile
 28747  003D20  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 28748  003D22  0E00               	movlw	0
 28749  003D24  2037               	addwfc	_inPipes+1,w,c	;volatile
 28750  003D26  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 28751  003D28  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 28752  003D2C  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 28753  003D30  6AF8               	clrf	tblptru,c
 28754  003D32  0E07               	movlw	(high __ramtop+-1)
 28755  003D34  64F7               	cpfsgt	tblptrh,c
 28756  003D36  D003               	bra	i2u596_47
 28757  003D38  0008               	tblrd		*
 28758  003D3A  50F5               	movf	tablat,w,c
 28759  003D3C  D005               	bra	i2u596_40
 28760  003D3E                     i2u596_47:
 28761  003D3E  CFF6 FFE9          	movff	tblptrl,fsr0l
 28762  003D42  CFF7 FFEA          	movff	tblptrh,fsr0h
 28763  003D46  50EF               	movf	indf0,w,c
 28764  003D48                     i2u596_40:
 28765  003D48  6E3A               	movwf	_inPipes+4,c	;volatile
 28766                           
 28767                           ;usb_device.c: 1728: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 28768  003D4A  0E03               	movlw	3
 28769  003D4C  2436               	addwf	_inPipes,w,c	;volatile
 28770  003D4E  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 28771  003D50  0E00               	movlw	0
 28772  003D52  2037               	addwfc	_inPipes+1,w,c	;volatile
 28773  003D54  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 28774  003D56  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 28775  003D5A  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 28776  003D5E  6AF8               	clrf	tblptru,c
 28777  003D60  0E07               	movlw	(high __ramtop+-1)
 28778  003D62  64F7               	cpfsgt	tblptrh,c
 28779  003D64  D003               	bra	i2u597_47
 28780  003D66  0008               	tblrd		*
 28781  003D68  50F5               	movf	tablat,w,c
 28782  003D6A  D005               	bra	i2u597_40
 28783  003D6C                     i2u597_47:
 28784  003D6C  CFF6 FFE9          	movff	tblptrl,fsr0l
 28785  003D70  CFF7 FFEA          	movff	tblptrh,fsr0h
 28786  003D74  50EF               	movf	indf0,w,c
 28787  003D76                     i2u597_40:
 28788  003D76  6E3B               	movwf	_inPipes+5,c	;volatile
 28789                           
 28790                           ;usb_device.c: 1729: }
 28791  003D78  0012               	return	
 28792  003D7A                     i2l8030:
 28793                           
 28794                           ;usb_device.c: 1730: else
 28795                           ;usb_device.c: 1731: {
 28796                           ;usb_device.c: 1732: inPipes[0].info.Val = 0;
 28797  003D7A  0E00               	movlw	0
 28798  003D7C  6E39               	movwf	_inPipes+3,c	;volatile
 28799                           
 28800                           ;usb_device.c: 1733: }
 28801                           ;usb_device.c: 1734: break;
 28802  003D7E  0012               	return	
 28803  003D80                     i2l8032:
 28804                           
 28805                           ;usb_device.c: 1739: if(SetupPkt.bDscIndex<3)
 28806  003D80  0E03               	movlw	3
 28807  003D82  0104               	movlb	4	; () banked
 28808  003D84  6132               	cpfslt	50,b	;volatile
 28809  003D86  D024               	goto	i2l8038
 28810                           
 28811                           ; BSR set to: 4
 28812                           ;usb_device.c: 1740: {
 28813                           ;usb_device.c: 1742: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
 28814  003D88  0104               	movlb	4	; () banked
 28815  003D8A  5132               	movf	50,w,b	;volatile
 28816  003D8C  0D02               	mullw	2
 28817  003D8E  0EB3               	movlw	low _USB_SD_Ptr
 28818  003D90  24F3               	addwf	prodl,w,c
 28819  003D92  6EF6               	movwf	tblptrl,c
 28820  003D94  0E75               	movlw	high _USB_SD_Ptr
 28821  003D96  20F4               	addwfc	prodh,w,c
 28822  003D98  6EF7               	movwf	tblptrh,c
 28823  003D9A                     	if	0	;There are less than 3 active tblptr bytes
 28824  003D9A                     	endif
 28825  003D9A  0009               	tblrd		*+
 28826  003D9C  CFF5 F036          	movff	tablat,_inPipes	;volatile
 28827  003DA0  000A               	tblrd		*-
 28828  003DA2  CFF5 F037          	movff	tablat,_inPipes+1	;volatile
 28829                           
 28830                           ; BSR set to: 4
 28831                           ;usb_device.c: 1744: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 28832  003DA6  C036  FFF6         	movff	_inPipes,tblptrl	;volatile
 28833  003DAA  C037  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 28834  003DAE  6AF8               	clrf	tblptru,c
 28835  003DB0  0E07               	movlw	(high __ramtop+-1)
 28836  003DB2  64F7               	cpfsgt	tblptrh,c
 28837  003DB4  D003               	bra	i2u599_47
 28838  003DB6  0008               	tblrd		*
 28839  003DB8  50F5               	movf	tablat,w,c
 28840  003DBA  D005               	bra	i2u599_40
 28841  003DBC                     i2u599_47:
 28842  003DBC  CFF6 FFE9          	movff	tblptrl,fsr0l
 28843  003DC0  CFF7 FFEA          	movff	tblptrh,fsr0h
 28844  003DC4  50EF               	movf	indf0,w,c
 28845  003DC6                     i2u599_40:
 28846  003DC6  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 28847  003DC8  5001               	movf	??_USBStdGetDscHandler,w,c
 28848  003DCA  6E3A               	movwf	_inPipes+4,c	;volatile
 28849  003DCC  6A3B               	clrf	_inPipes+5,c	;volatile
 28850                           
 28851                           ;usb_device.c: 1745: }
 28852  003DCE  0012               	return	
 28853  003DD0                     i2l8038:
 28854                           
 28855                           ;usb_device.c: 1746: else
 28856                           ;usb_device.c: 1747: {
 28857                           ;usb_device.c: 1748: inPipes[0].info.Val = 0;
 28858  003DD0  0E00               	movlw	0
 28859  003DD2  6E39               	movwf	_inPipes+3,c	;volatile
 28860                           
 28861                           ;usb_device.c: 1749: }
 28862                           ;usb_device.c: 1750: break;
 28863  003DD4  0012               	return	
 28864  003DD6                     i2l8040:
 28865                           
 28866                           ;usb_device.c: 1752: inPipes[0].info.Val = 0;
 28867  003DD6  0E00               	movlw	0
 28868  003DD8  6E39               	movwf	_inPipes+3,c	;volatile
 28869                           
 28870                           ;usb_device.c: 1754: }
 28871                           
 28872                           ;usb_device.c: 1753: break;
 28873  003DDA  0012               	return	
 28874  003DDC                     i2l8044:
 28875  003DDC  0104               	movlb	4	; () banked
 28876  003DDE  5133               	movf	51,w,b	;volatile
 28877                           
 28878                           ; Switch size 1, requested type "space"
 28879                           ; Number of cases is 3, Range of values is 1 to 3
 28880                           ; switch strategies available:
 28881                           ; Name         Instructions Cycles
 28882                           ; simple_byte           10     6 (average)
 28883                           ;	Chosen strategy is simple_byte
 28884  003DE0  0A01               	xorlw	1	; case 1
 28885  003DE2  B4D8               	btfsc	status,2,c
 28886  003DE4  D77F               	goto	i2l8018
 28887  003DE6  0A03               	xorlw	3	; case 2
 28888  003DE8  B4D8               	btfsc	status,2,c
 28889  003DEA  D785               	goto	i2l8022
 28890  003DEC  0A01               	xorlw	1	; case 3
 28891  003DEE  B4D8               	btfsc	status,2,c
 28892  003DF0  D7C7               	goto	i2l8032
 28893  003DF2  D7F1               	goto	i2l8040
 28894  003DF4                     __end_of_USBStdGetDscHandler:
 28895                           	opt stack 0
 28896                           pclatu	equ	0xFFB
 28897                           pclath	equ	0xFFA
 28898                           tblptru	equ	0xFF8
 28899                           tblptrh	equ	0xFF7
 28900                           tblptrl	equ	0xFF6
 28901                           tablat	equ	0xFF5
 28902                           prodh	equ	0xFF4
 28903                           prodl	equ	0xFF3
 28904                           intcon	equ	0xFF2
 28905                           intcon3	equ	0xFF0
 28906                           indf0	equ	0xFEF
 28907                           postinc0	equ	0xFEE
 28908                           fsr0h	equ	0xFEA
 28909                           fsr0l	equ	0xFE9
 28910                           wreg	equ	0xFE8
 28911                           indf1	equ	0xFE7
 28912                           postdec1	equ	0xFE5
 28913                           fsr1h	equ	0xFE2
 28914                           fsr1l	equ	0xFE1
 28915                           indf2	equ	0xFDF
 28916                           postinc2	equ	0xFDE
 28917                           postdec2	equ	0xFDD
 28918                           plusw2	equ	0xFDB
 28919                           fsr2h	equ	0xFDA
 28920                           fsr2l	equ	0xFD9
 28921                           status	equ	0xFD8
 28922                           
 28923 ;; *************** function _USBStdFeatureReqHandler *****************
 28924 ;; Defined at:
 28925 ;;		line 2385 in file "../Includes/Usb/Framework/usb_device.c"
 28926 ;; Parameters:    Size  Location     Type
 28927 ;;		None
 28928 ;; Auto vars:     Size  Location     Type
 28929 ;;  p               2   25[COMRAM] PTR struct __BDT
 28930 ;;		 -> BDT(48), NULL(0), 
 28931 ;;  pUEP            2   22[COMRAM] PTR unsigned char 
 28932 ;;		 -> UEP0(1), 
 28933 ;;  current_ep_d    1   24[COMRAM] struct .
 28934 ;; Return value:  Size  Location     Type
 28935 ;;		None               void
 28936 ;; Registers used:
 28937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28938 ;; Tracked objects:
 28939 ;;		On entry : 0/0
 28940 ;;		On exit  : 0/0
 28941 ;;		Unchanged: 0/0
 28942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 28943 ;;      Params:         0       0       0       0       0       0       0       0       0
 28944 ;;      Locals:         5       0       0       0       0       0       0       0       0
 28945 ;;      Temps:          1       0       0       0       0       0       0       0       0
 28946 ;;      Totals:         6       0       0       0       0       0       0       0       0
 28947 ;;Total ram usage:        6 bytes
 28948 ;; Hardware stack levels used:    1
 28949 ;; Hardware stack levels required when called:    5
 28950 ;; This function calls:
 28951 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 28952 ;; This function is called by:
 28953 ;;		_USBCheckStdRequest
 28954 ;; This function uses a non-reentrant model
 28955 ;;
 28956                           
 28957                           	psect	text119
 28958  002B80                     __ptext119:
 28959                           	opt stack 0
 28960  002B80                     _USBStdFeatureReqHandler:
 28961                           	opt stack 11
 28962                           
 28963                           ;usb_device.c: 2387: BDT_ENTRY *p;
 28964                           ;usb_device.c: 2388: EP_STATUS current_ep_data;
 28965                           ;usb_device.c: 2390: unsigned char* pUEP;
 28966                           ;usb_device.c: 2393: if((SetupPkt.bFeature == 1)&&
 28967                           ;usb_device.c: 2394: (SetupPkt.Recipient == (0x00)))
 28968                           
 28969                           ;incstack = 0
 28970  002B80  0104               	movlb	4	; () banked
 28971  002B82  0532               	decf	50,w,b	;volatile
 28972  002B84  A4D8               	btfss	status,2,c
 28973  002B86  D011               	goto	i2l1944
 28974                           
 28975                           ; BSR set to: 4
 28976  002B88  0104               	movlb	4	; () banked
 28977  002B8A  5130               	movf	48,w,b	;volatile
 28978  002B8C  0B1F               	andlw	31
 28979  002B8E  0900               	iorlw	0
 28980  002B90  A4D8               	btfss	status,2,c
 28981  002B92  D00B               	goto	i2l1944
 28982                           
 28983                           ; BSR set to: 4
 28984                           ;usb_device.c: 2395: {
 28985                           ;usb_device.c: 2396: inPipes[0].info.bits.busy = 1;
 28986  002B94  8E39               	bsf	_inPipes+3,7,c	;volatile
 28987                           
 28988                           ; BSR set to: 4
 28989                           ;usb_device.c: 2397: if(SetupPkt.bRequest == 3)
 28990  002B96  0E03               	movlw	3
 28991  002B98  0104               	movlb	4	; () banked
 28992  002B9A  1931               	xorwf	49,w,b	;volatile
 28993  002B9C  A4D8               	btfss	status,2,c
 28994  002B9E  D002               	goto	i2l8084
 28995                           
 28996                           ; BSR set to: 4
 28997                           ;usb_device.c: 2398: RemoteWakeup = 1;
 28998  002BA0  0E01               	movlw	1
 28999  002BA2  D001               	goto	L27
 29000  002BA4                     i2l8084:
 29001                           
 29002                           ;usb_device.c: 2399: else
 29003                           ;usb_device.c: 2400: RemoteWakeup = 0;
 29004  002BA4  0E00               	movlw	0
 29005  002BA6                     L27:
 29006  002BA6  0100               	movlb	0	; () banked
 29007  002BA8  6FCE               	movwf	_RemoteWakeup& (0+255),b	;volatile
 29008  002BAA                     i2l1944:
 29009                           
 29010                           ;usb_device.c: 2401: }
 29011                           ;usb_device.c: 2404: if((SetupPkt.bFeature == 0)&&
 29012                           ;usb_device.c: 2405: (SetupPkt.Recipient == (0x02))&&
 29013                           ;usb_device.c: 2406: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
 29014                           ;usb_device.c: 2407: (USBDeviceState == CONFIGURED_STATE))
 29015  002BAA  0104               	movlb	4	; () banked
 29016  002BAC  5132               	movf	50,w,b	;volatile
 29017  002BAE  A4D8               	btfss	status,2,c
 29018  002BB0  0012               	return	
 29019                           
 29020                           ; BSR set to: 4
 29021  002BB2  0104               	movlb	4	; () banked
 29022  002BB4  5130               	movf	48,w,b	;volatile
 29023  002BB6  0B1F               	andlw	31
 29024  002BB8  0A02               	xorlw	2
 29025  002BBA  A4D8               	btfss	status,2,c
 29026  002BBC  0012               	return	
 29027                           
 29028                           ; BSR set to: 4
 29029  002BBE  0104               	movlb	4	; () banked
 29030  002BC0  5134               	movf	52,w,b	;volatile
 29031  002BC2  0B0F               	andlw	15
 29032  002BC4  0900               	iorlw	0
 29033  002BC6  B4D8               	btfsc	status,2,c
 29034  002BC8  0012               	return	
 29035                           
 29036                           ; BSR set to: 4
 29037  002BCA  0104               	movlb	4	; () banked
 29038  002BCC  5134               	movf	52,w,b	;volatile
 29039  002BCE  0B0F               	andlw	15
 29040  002BD0  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29041  002BD2  0E03               	movlw	3
 29042  002BD4  6016               	cpfslt	??_USBStdFeatureReqHandler,c
 29043  002BD6  0012               	return	
 29044                           
 29045                           ; BSR set to: 4
 29046  002BD8  0E20               	movlw	32
 29047  002BDA  0100               	movlb	0	; () banked
 29048  002BDC  19D2               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 29049  002BDE  A4D8               	btfss	status,2,c
 29050  002BE0  0012               	return	
 29051                           
 29052                           ; BSR set to: 0
 29053                           ;usb_device.c: 2408: {
 29054                           ;usb_device.c: 2411: inPipes[0].info.bits.busy = 1;
 29055  002BE2  8E39               	bsf	_inPipes+3,7,c	;volatile
 29056                           
 29057                           ;usb_device.c: 2414: if(SetupPkt.EPDir == 0)
 29058  002BE4  0104               	movlb	4	; () banked
 29059  002BE6  BF34               	btfsc	52,7,b	;volatile
 29060  002BE8  D01B               	goto	i2l8098
 29061                           
 29062                           ; BSR set to: 4
 29063                           ;usb_device.c: 2415: {
 29064                           ;usb_device.c: 2416: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 29065  002BEA  0104               	movlb	4	; () banked
 29066  002BEC  5134               	movf	52,w,b	;volatile
 29067  002BEE  0B0F               	andlw	15
 29068  002BF0  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29069  002BF2  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29070  002BF4  0D02               	mullw	2
 29071  002BF6  0E40               	movlw	low _pBDTEntryOut
 29072  002BF8  24F3               	addwf	prodl,w,c
 29073  002BFA  6ED9               	movwf	fsr2l,c
 29074  002BFC  0E01               	movlw	high _pBDTEntryOut
 29075  002BFE  20F4               	addwfc	prodh,w,c
 29076  002C00  6EDA               	movwf	fsr2h,c
 29077  002C02  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 29078  002C06  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 29079                           
 29080                           ;usb_device.c: 2417: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 29081  002C0A  0104               	movlb	4	; () banked
 29082  002C0C  5134               	movf	52,w,b	;volatile
 29083  002C0E  0B0F               	andlw	15
 29084  002C10  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29085  002C12  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29086  002C14  0D01               	mullw	1
 29087  002C16  0EBC               	movlw	low _ep_data_out
 29088  002C18  24F3               	addwf	prodl,w,c
 29089  002C1A  6ED9               	movwf	fsr2l,c
 29090  002C1C  0E00               	movlw	high _ep_data_out
 29091  002C1E  D01A               	goto	L28
 29092  002C20                     i2l8098:
 29093                           
 29094                           ; BSR set to: 4
 29095                           ;usb_device.c: 2419: else
 29096                           ;usb_device.c: 2420: {
 29097                           ;usb_device.c: 2421: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
 29098  002C20  0104               	movlb	4	; () banked
 29099  002C22  5134               	movf	52,w,b	;volatile
 29100  002C24  0B0F               	andlw	15
 29101  002C26  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29102  002C28  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29103  002C2A  0D02               	mullw	2
 29104  002C2C  0E3C               	movlw	low _pBDTEntryIn
 29105  002C2E  24F3               	addwf	prodl,w,c
 29106  002C30  6ED9               	movwf	fsr2l,c
 29107  002C32  0E00               	movlw	high _pBDTEntryIn
 29108  002C34  20F4               	addwfc	prodh,w,c
 29109  002C36  6EDA               	movwf	fsr2h,c
 29110  002C38  CFDE F01A          	movff	postinc2,USBStdFeatureReqHandler@p
 29111  002C3C  CFDD F01B          	movff	postdec2,USBStdFeatureReqHandler@p+1
 29112                           
 29113                           ;usb_device.c: 2422: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 29114  002C40  0104               	movlb	4	; () banked
 29115  002C42  5134               	movf	52,w,b	;volatile
 29116  002C44  0B0F               	andlw	15
 29117  002C46  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29118  002C48  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29119  002C4A  0D01               	mullw	1
 29120  002C4C  0EB9               	movlw	low _ep_data_in
 29121  002C4E  24F3               	addwf	prodl,w,c
 29122  002C50  6ED9               	movwf	fsr2l,c
 29123  002C52  0E00               	movlw	high _ep_data_in
 29124  002C54                     L28:
 29125  002C54  20F4               	addwfc	prodh,w,c
 29126  002C56  6EDA               	movwf	fsr2h,c
 29127  002C58  50DF               	movf	indf2,w,c
 29128  002C5A  6E19               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 29129                           
 29130                           ; BSR set to: 4
 29131                           ;usb_device.c: 2423: }
 29132                           ;usb_device.c: 2428: if(current_ep_data.bits.ping_pong_state == 0)
 29133                           
 29134                           ; BSR set to: 4
 29135  002C5C  B019               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 29136  002C5E  D002               	goto	i2l8104
 29137                           
 29138                           ; BSR set to: 4
 29139                           ;usb_device.c: 2429: {
 29140                           ;usb_device.c: 2430: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
 29141  002C60  941A               	bcf	USBStdFeatureReqHandler@p,2,c
 29142                           
 29143                           ;usb_device.c: 2431: }
 29144  002C62  D001               	goto	i2l8106
 29145  002C64                     i2l8104:
 29146                           
 29147                           ; BSR set to: 4
 29148                           ;usb_device.c: 2432: else
 29149                           ;usb_device.c: 2433: {
 29150                           ;usb_device.c: 2434: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
 29151  002C64  841A               	bsf	USBStdFeatureReqHandler@p,2,c
 29152  002C66                     i2l8106:
 29153                           
 29154                           ; BSR set to: 4
 29155                           ;usb_device.c: 2435: }
 29156                           ;usb_device.c: 2439: if(SetupPkt.EPDir == 0)
 29157  002C66  0104               	movlb	4	; () banked
 29158  002C68  BF34               	btfsc	52,7,b	;volatile
 29159  002C6A  D00B               	goto	i2l8110
 29160                           
 29161                           ; BSR set to: 4
 29162                           ;usb_device.c: 2440: {
 29163                           ;usb_device.c: 2441: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 29164  002C6C  0104               	movlb	4	; () banked
 29165  002C6E  5134               	movf	52,w,b	;volatile
 29166  002C70  0B0F               	andlw	15
 29167  002C72  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29168  002C74  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29169  002C76  0D02               	mullw	2
 29170  002C78  0E40               	movlw	low _pBDTEntryOut
 29171  002C7A  24F3               	addwf	prodl,w,c
 29172  002C7C  6ED9               	movwf	fsr2l,c
 29173  002C7E  0E01               	movlw	high _pBDTEntryOut
 29174  002C80  D00A               	goto	L29
 29175  002C82                     i2l8110:
 29176                           
 29177                           ; BSR set to: 4
 29178                           ;usb_device.c: 2443: else
 29179                           ;usb_device.c: 2444: {
 29180                           ;usb_device.c: 2445: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
 29181  002C82  0104               	movlb	4	; () banked
 29182  002C84  5134               	movf	52,w,b	;volatile
 29183  002C86  0B0F               	andlw	15
 29184  002C88  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29185  002C8A  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29186  002C8C  0D02               	mullw	2
 29187  002C8E  0E3C               	movlw	low _pBDTEntryIn
 29188  002C90  24F3               	addwf	prodl,w,c
 29189  002C92  6ED9               	movwf	fsr2l,c
 29190  002C94  0E00               	movlw	high _pBDTEntryIn
 29191  002C96                     L29:
 29192  002C96  20F4               	addwfc	prodh,w,c
 29193  002C98  6EDA               	movwf	fsr2h,c
 29194  002C9A  C01A  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 29195  002C9E  C01B  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 29196                           
 29197                           ; BSR set to: 4
 29198                           ;usb_device.c: 2446: }
 29199                           ;usb_device.c: 2449: if(SetupPkt.bRequest == 3)
 29200                           
 29201                           ; BSR set to: 4
 29202  002CA2  0E03               	movlw	3
 29203  002CA4  0104               	movlb	4	; () banked
 29204  002CA6  1931               	xorwf	49,w,b	;volatile
 29205  002CA8  A4D8               	btfss	status,2,c
 29206  002CAA  D02F               	goto	i2l8126
 29207                           
 29208                           ; BSR set to: 4
 29209                           ;usb_device.c: 2450: {
 29210                           ;usb_device.c: 2451: if(p->STAT.UOWN == 1)
 29211  002CAC  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29212  002CB0  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29213  002CB4  AEDF               	btfss	indf2,7,c
 29214  002CB6  D01C               	goto	i2l8122
 29215                           
 29216                           ; BSR set to: 4
 29217                           ;usb_device.c: 2452: {
 29218                           ;usb_device.c: 2455: if(SetupPkt.EPDir == 0)
 29219  002CB8  0104               	movlb	4	; () banked
 29220  002CBA  BF34               	btfsc	52,7,b	;volatile
 29221  002CBC  D00B               	goto	i2l8120
 29222                           
 29223                           ; BSR set to: 4
 29224                           ;usb_device.c: 2456: {
 29225                           ;usb_device.c: 2457: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
 29226  002CBE  0104               	movlb	4	; () banked
 29227  002CC0  5134               	movf	52,w,b	;volatile
 29228  002CC2  0B0F               	andlw	15
 29229  002CC4  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29230  002CC6  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29231  002CC8  0D01               	mullw	1
 29232  002CCA  0EBC               	movlw	low _ep_data_out
 29233  002CCC  24F3               	addwf	prodl,w,c
 29234  002CCE  6ED9               	movwf	fsr2l,c
 29235  002CD0  0E00               	movlw	high _ep_data_out
 29236  002CD2  D00A               	goto	L30
 29237  002CD4                     i2l8120:
 29238                           
 29239                           ;usb_device.c: 2459: else
 29240                           ;usb_device.c: 2460: {
 29241                           ;usb_device.c: 2461: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
 29242  002CD4  0104               	movlb	4	; () banked
 29243  002CD6  5134               	movf	52,w,b	;volatile
 29244  002CD8  0B0F               	andlw	15
 29245  002CDA  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29246  002CDC  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29247  002CDE  0D01               	mullw	1
 29248  002CE0  0EB9               	movlw	low _ep_data_in
 29249  002CE2  24F3               	addwf	prodl,w,c
 29250  002CE4  6ED9               	movwf	fsr2l,c
 29251  002CE6  0E00               	movlw	high _ep_data_in
 29252  002CE8                     L30:
 29253  002CE8  20F4               	addwfc	prodh,w,c
 29254  002CEA  6EDA               	movwf	fsr2h,c
 29255  002CEC  0100               	movlb	0	; () banked
 29256  002CEE  82DF               	bsf	indf2,1,c
 29257  002CF0                     i2l8122:
 29258                           
 29259                           ;usb_device.c: 2462: }
 29260                           ;usb_device.c: 2463: }
 29261                           ;usb_device.c: 2466: p->STAT.Val |= 0x04;
 29262  002CF0  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29263  002CF4  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29264  002CF8  0E00               	movlw	0
 29265  002CFA  84DB               	bsf	plusw2,2,c
 29266                           
 29267                           ;usb_device.c: 2467: p->STAT.Val |= 0x80;
 29268  002CFC  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29269  002D00  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29270  002D04  0E00               	movlw	0
 29271  002D06  8EDB               	bsf	plusw2,7,c
 29272                           
 29273                           ;usb_device.c: 2468: }
 29274  002D08  0012               	return	
 29275  002D0A                     i2l8126:
 29276                           
 29277                           ;usb_device.c: 2469: else
 29278                           ;usb_device.c: 2470: {
 29279                           ;usb_device.c: 2473: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 29280  002D0A  0E04               	movlw	4
 29281  002D0C  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 29282                           
 29283                           ;usb_device.c: 2475: if(p->STAT.UOWN == 1)
 29284  002D0E  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29285  002D12  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29286  002D16  AEDF               	btfss	indf2,7,c
 29287  002D18  D01B               	goto	i2l8136
 29288                           
 29289                           ;usb_device.c: 2476: {
 29290                           ;usb_device.c: 2479: p->STAT.Val &= (~0x80);
 29291  002D1A  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29292  002D1E  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29293  002D22  0E7F               	movlw	127
 29294  002D24  16DF               	andwf	indf2,f,c
 29295                           
 29296                           ;usb_device.c: 2480: p->STAT.Val |= 0x40;
 29297  002D26  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29298  002D2A  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29299  002D2E  0E00               	movlw	0
 29300  002D30  8CDB               	bsf	plusw2,6,c
 29301                           
 29302                           ;usb_device.c: 2481: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 29303  002D32  0E00               	movlw	0
 29304  002D34  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 29305  002D36  0E05               	movlw	5
 29306  002D38  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 29307  002D3A  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 29308  002D3E  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 29309  002D42  0E00               	movlw	0
 29310  002D44  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 29311  002D46  0E02               	movlw	2
 29312  002D48  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 29313  002D4A  EC67  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 29314                           
 29315                           ;usb_device.c: 2482: }
 29316  002D4E  D006               	goto	i2l8138
 29317  002D50                     i2l8136:
 29318                           
 29319                           ;usb_device.c: 2483: else
 29320                           ;usb_device.c: 2484: {
 29321                           ;usb_device.c: 2486: p->STAT.Val |= 0x40;
 29322  002D50  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29323  002D54  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29324  002D58  0E00               	movlw	0
 29325  002D5A  8CDB               	bsf	plusw2,6,c
 29326  002D5C                     i2l8138:
 29327                           
 29328                           ;usb_device.c: 2487: }
 29329                           ;usb_device.c: 2491: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
 29330  002D5C  0E04               	movlw	4
 29331  002D5E  1A1A               	xorwf	USBStdFeatureReqHandler@p,f,c
 29332                           
 29333                           ;usb_device.c: 2497: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 29334  002D60  B219               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 29335  002D62  D006               	goto	i2l1963
 29336  002D64  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29337  002D68  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29338  002D6C  AEDF               	btfss	indf2,7,c
 29339  002D6E  D031               	goto	i2l8152
 29340  002D70                     i2l1963:
 29341                           
 29342                           ;usb_device.c: 2498: {
 29343                           ;usb_device.c: 2499: if(SetupPkt.EPDir == 0)
 29344  002D70  0104               	movlb	4	; () banked
 29345  002D72  BF34               	btfsc	52,7,b	;volatile
 29346  002D74  D00B               	goto	i2l8146
 29347                           
 29348                           ; BSR set to: 4
 29349                           ;usb_device.c: 2500: {
 29350                           ;usb_device.c: 2501: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
 29351  002D76  0104               	movlb	4	; () banked
 29352  002D78  5134               	movf	52,w,b	;volatile
 29353  002D7A  0B0F               	andlw	15
 29354  002D7C  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29355  002D7E  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29356  002D80  0D01               	mullw	1
 29357  002D82  0EBC               	movlw	low _ep_data_out
 29358  002D84  24F3               	addwf	prodl,w,c
 29359  002D86  6ED9               	movwf	fsr2l,c
 29360  002D88  0E00               	movlw	high _ep_data_out
 29361  002D8A  D00A               	goto	L31
 29362  002D8C                     i2l8146:
 29363                           
 29364                           ;usb_device.c: 2503: else
 29365                           ;usb_device.c: 2504: {
 29366                           ;usb_device.c: 2505: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
 29367  002D8C  0104               	movlb	4	; () banked
 29368  002D8E  5134               	movf	52,w,b	;volatile
 29369  002D90  0B0F               	andlw	15
 29370  002D92  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29371  002D94  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29372  002D96  0D01               	mullw	1
 29373  002D98  0EB9               	movlw	low _ep_data_in
 29374  002D9A  24F3               	addwf	prodl,w,c
 29375  002D9C  6ED9               	movwf	fsr2l,c
 29376  002D9E  0E00               	movlw	high _ep_data_in
 29377  002DA0                     L31:
 29378  002DA0  20F4               	addwfc	prodh,w,c
 29379  002DA2  6EDA               	movwf	fsr2h,c
 29380  002DA4  0100               	movlb	0	; () banked
 29381  002DA6  92DF               	bcf	indf2,1,c
 29382                           
 29383                           ; BSR set to: 0
 29384                           ;usb_device.c: 2506: }
 29385                           ;usb_device.c: 2508: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 29386                           
 29387                           ; BSR set to: 0
 29388  002DA8  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29389  002DAC  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29390  002DB0  0E3B               	movlw	59
 29391  002DB2  16DF               	andwf	indf2,f,c
 29392                           
 29393                           ; BSR set to: 0
 29394                           ;usb_device.c: 2511: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 29395  002DB4  0E00               	movlw	0
 29396  002DB6  6E0F               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 29397  002DB8  0E05               	movlw	5
 29398  002DBA  6E0E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 29399  002DBC  C01A  F010         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 29400  002DC0  C01B  F011         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 29401  002DC4  0E00               	movlw	0
 29402  002DC6  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 29403  002DC8  0E02               	movlw	2
 29404  002DCA  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 29405  002DCC  EC67  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 29406                           
 29407                           ;usb_device.c: 2512: }
 29408  002DD0  D006               	goto	i2l8154
 29409  002DD2                     i2l8152:
 29410                           
 29411                           ;usb_device.c: 2513: else
 29412                           ;usb_device.c: 2514: {
 29413                           ;usb_device.c: 2516: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 29414  002DD2  C01A  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 29415  002DD6  C01B  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 29416  002DDA  0E3B               	movlw	59
 29417  002DDC  16DF               	andwf	indf2,f,c
 29418  002DDE                     i2l8154:
 29419                           
 29420                           ;usb_device.c: 2517: }
 29421                           ;usb_device.c: 2519: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
 29422  002DDE  0104               	movlb	4	; () banked
 29423  002DE0  5134               	movf	52,w,b	;volatile
 29424  002DE2  0B0F               	andlw	15
 29425  002DE4  6E16               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 29426  002DE6  5016               	movf	??_USBStdFeatureReqHandler,w,c
 29427  002DE8  0D01               	mullw	1
 29428  002DEA  0E6A               	movlw	106
 29429  002DEC  24F3               	addwf	prodl,w,c
 29430  002DEE  6E17               	movwf	USBStdFeatureReqHandler@pUEP,c
 29431  002DF0  0E0F               	movlw	15
 29432  002DF2  20F4               	addwfc	prodh,w,c
 29433  002DF4  6E18               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 29434                           
 29435                           ; BSR set to: 4
 29436                           ;usb_device.c: 2522: *pUEP &= ~0x0001;
 29437  002DF6  C017  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 29438  002DFA  C018  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 29439  002DFE  0EFE               	movlw	254
 29440  002E00  16DF               	andwf	indf2,f,c
 29441                           
 29442                           ; BSR set to: 4
 29443  002E02  0012               	return	
 29444  002E04                     __end_of_USBStdFeatureReqHandler:
 29445                           	opt stack 0
 29446                           pclatu	equ	0xFFB
 29447                           pclath	equ	0xFFA
 29448                           tblptru	equ	0xFF8
 29449                           tblptrh	equ	0xFF7
 29450                           tblptrl	equ	0xFF6
 29451                           tablat	equ	0xFF5
 29452                           prodh	equ	0xFF4
 29453                           prodl	equ	0xFF3
 29454                           intcon	equ	0xFF2
 29455                           intcon3	equ	0xFF0
 29456                           indf0	equ	0xFEF
 29457                           postinc0	equ	0xFEE
 29458                           fsr0h	equ	0xFEA
 29459                           fsr0l	equ	0xFE9
 29460                           wreg	equ	0xFE8
 29461                           indf1	equ	0xFE7
 29462                           postdec1	equ	0xFE5
 29463                           fsr1h	equ	0xFE2
 29464                           fsr1l	equ	0xFE1
 29465                           indf2	equ	0xFDF
 29466                           postinc2	equ	0xFDE
 29467                           postdec2	equ	0xFDD
 29468                           plusw2	equ	0xFDB
 29469                           fsr2h	equ	0xFDA
 29470                           fsr2l	equ	0xFD9
 29471                           status	equ	0xFD8
 29472                           
 29473 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 29474 ;; Defined at:
 29475 ;;		line 308 in file "../Includes/Board/USBapp.c"
 29476 ;; Parameters:    Size  Location     Type
 29477 ;;  event           2   13[COMRAM] enum E6902
 29478 ;;  pdata           2   15[COMRAM] PTR void 
 29479 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
 29480 ;;  size            2   17[COMRAM] unsigned int 
 29481 ;; Auto vars:     Size  Location     Type
 29482 ;;		None
 29483 ;; Return value:  Size  Location     Type
 29484 ;;                  1    wreg      unsigned char 
 29485 ;; Registers used:
 29486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29487 ;; Tracked objects:
 29488 ;;		On entry : 0/0
 29489 ;;		On exit  : 0/0
 29490 ;;		Unchanged: 0/0
 29491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29492 ;;      Params:         6       0       0       0       0       0       0       0       0
 29493 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29494 ;;      Temps:          2       0       0       0       0       0       0       0       0
 29495 ;;      Totals:         8       0       0       0       0       0       0       0       0
 29496 ;;Total ram usage:        8 bytes
 29497 ;; Hardware stack levels used:    1
 29498 ;; Hardware stack levels required when called:    4
 29499 ;; This function calls:
 29500 ;;		_USBCheckCDCRequest
 29501 ;;		_USBapp_CdcEmulatorInitialize
 29502 ;; This function is called by:
 29503 ;;		_USBDeviceTasks
 29504 ;;		_USBStdSetCfgHandler
 29505 ;;		_USBSuspend
 29506 ;;		_USBWakeFromSuspend
 29507 ;;		_USBCtrlTrfSetupHandler
 29508 ;;		_USBCheckStdRequest
 29509 ;;		_USBStdFeatureReqHandler
 29510 ;; This function uses a non-reentrant model
 29511 ;;
 29512                           
 29513                           	psect	text120
 29514  0060CE                     __ptext120:
 29515                           	opt stack 0
 29516  0060CE                     _USER_USB_CALLBACK_EVENT_HANDLER:
 29517                           	opt stack 15
 29518                           
 29519                           ;USBapp.c: 310: switch( (int) event )
 29520                           
 29521                           ;incstack = 0
 29522  0060CE  D006               	goto	i2l7696
 29523  0060D0                     i2l7690:
 29524                           
 29525                           ;USBapp.c: 334: USBapp_CdcEmulatorInitialize();
 29526  0060D0  ECC2  F030         	call	_USBapp_CdcEmulatorInitialize	;wreg free
 29527                           
 29528                           ;USBapp.c: 338: break;
 29529                           
 29530                           ;USBapp.c: 337: case EVENT_SET_DESCRIPTOR:
 29531                           
 29532                           ;USBapp.c: 335: break;
 29533  0060D4  0012               	return	
 29534  0060D6                     i2l7692:
 29535                           
 29536                           ;USBapp.c: 343: USBCheckCDCRequest();
 29537  0060D6  ECC4  F029         	call	_USBCheckCDCRequest	;wreg free
 29538                           
 29539                           ;USBapp.c: 354: }
 29540                           
 29541                           ;USBapp.c: 353: break;
 29542                           
 29543                           ;USBapp.c: 352: default:
 29544                           
 29545                           ;USBapp.c: 350: break;
 29546                           
 29547                           ;USBapp.c: 349: case EVENT_TRANSFER_TERMINATED:
 29548                           
 29549                           ;USBapp.c: 347: break;
 29550                           
 29551                           ;USBapp.c: 346: case EVENT_BUS_ERROR:
 29552                           
 29553                           ;USBapp.c: 344: break;
 29554  0060DA  0012               	return	
 29555  0060DC                     i2l7696:
 29556  0060DC  C00E  F014         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 29557  0060E0  C00F  F015         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 29558                           
 29559                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 29560                           ; Switch size 1, requested type "space"
 29561                           ; Number of cases is 2, Range of values is 0 to 127
 29562                           ; switch strategies available:
 29563                           ; Name         Instructions Cycles
 29564                           ; simple_byte            7     4 (average)
 29565                           ;	Chosen strategy is simple_byte
 29566  0060E4  5015               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 29567  0060E6  0A00               	xorlw	0	; case 0
 29568  0060E8  B4D8               	btfsc	status,2,c
 29569  0060EA  D004               	goto	i2l15038
 29570  0060EC  0A7F               	xorlw	127	; case 127
 29571  0060EE  A4D8               	btfss	status,2,c
 29572  0060F0  0012               	return	
 29573  0060F2  D018               	goto	i2l15040
 29574  0060F4                     i2l15038:
 29575                           
 29576                           ; Switch size 1, requested type "space"
 29577                           ; Number of cases is 8, Range of values is 1 to 117
 29578                           ; switch strategies available:
 29579                           ; Name         Instructions Cycles
 29580                           ; simple_byte           25    13 (average)
 29581                           ;	Chosen strategy is simple_byte
 29582  0060F4  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 29583  0060F6  0A01               	xorlw	1	; case 1
 29584  0060F8  B4D8               	btfsc	status,2,c
 29585  0060FA  D7EA               	goto	i2l7690
 29586  0060FC  0A03               	xorlw	3	; case 2
 29587  0060FE  B4D8               	btfsc	status,2,c
 29588  006100  0012               	return	
 29589  006102  0A01               	xorlw	1	; case 3
 29590  006104  B4D8               	btfsc	status,2,c
 29591  006106  D7E7               	goto	i2l7692
 29592  006108  0A06               	xorlw	6	; case 5
 29593  00610A  B4D8               	btfsc	status,2,c
 29594  00610C  0012               	return	
 29595  00610E  0A77               	xorlw	119	; case 114
 29596  006110  B4D8               	btfsc	status,2,c
 29597  006112  0012               	return	
 29598  006114  0A01               	xorlw	1	; case 115
 29599  006116  B4D8               	btfsc	status,2,c
 29600  006118  0012               	return	
 29601  00611A  0A07               	xorlw	7	; case 116
 29602  00611C  B4D8               	btfsc	status,2,c
 29603  00611E  0012               	return	
 29604  006120  0A01               	xorlw	1	; case 117
 29605  006122  0012               	return	
 29606  006124                     i2l15040:
 29607                           
 29608                           ; Switch size 1, requested type "space"
 29609                           ; Number of cases is 1, Range of values is 255 to 255
 29610                           ; switch strategies available:
 29611                           ; Name         Instructions Cycles
 29612                           ; simple_byte            4     3 (average)
 29613                           ;	Chosen strategy is simple_byte
 29614  006124  5014               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 29615  006126  0AFF               	xorlw	255	; case 255
 29616  006128  0012               	return	
 29617  00612A                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 29618                           	opt stack 0
 29619                           pclatu	equ	0xFFB
 29620                           pclath	equ	0xFFA
 29621                           tblptru	equ	0xFF8
 29622                           tblptrh	equ	0xFF7
 29623                           tblptrl	equ	0xFF6
 29624                           tablat	equ	0xFF5
 29625                           prodh	equ	0xFF4
 29626                           prodl	equ	0xFF3
 29627                           intcon	equ	0xFF2
 29628                           intcon3	equ	0xFF0
 29629                           indf0	equ	0xFEF
 29630                           postinc0	equ	0xFEE
 29631                           fsr0h	equ	0xFEA
 29632                           fsr0l	equ	0xFE9
 29633                           wreg	equ	0xFE8
 29634                           indf1	equ	0xFE7
 29635                           postdec1	equ	0xFE5
 29636                           fsr1h	equ	0xFE2
 29637                           fsr1l	equ	0xFE1
 29638                           indf2	equ	0xFDF
 29639                           postinc2	equ	0xFDE
 29640                           postdec2	equ	0xFDD
 29641                           plusw2	equ	0xFDB
 29642                           fsr2h	equ	0xFDA
 29643                           fsr2l	equ	0xFD9
 29644                           status	equ	0xFD8
 29645                           
 29646 ;; *************** function _USBapp_CdcEmulatorInitialize *****************
 29647 ;; Defined at:
 29648 ;;		line 144 in file "../Includes/Board/USBapp.c"
 29649 ;; Parameters:    Size  Location     Type
 29650 ;;		None
 29651 ;; Auto vars:     Size  Location     Type
 29652 ;;  i               1   12[COMRAM] unsigned char 
 29653 ;; Return value:  Size  Location     Type
 29654 ;;		None               void
 29655 ;; Registers used:
 29656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29657 ;; Tracked objects:
 29658 ;;		On entry : 0/0
 29659 ;;		On exit  : 0/0
 29660 ;;		Unchanged: 0/0
 29661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29662 ;;      Params:         0       0       0       0       0       0       0       0       0
 29663 ;;      Locals:         1       0       0       0       0       0       0       0       0
 29664 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29665 ;;      Totals:         1       0       0       0       0       0       0       0       0
 29666 ;;Total ram usage:        1 bytes
 29667 ;; Hardware stack levels used:    1
 29668 ;; Hardware stack levels required when called:    3
 29669 ;; This function calls:
 29670 ;;		_CDCInitEP
 29671 ;;		i2_EUSART_Initialize
 29672 ;; This function is called by:
 29673 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 29674 ;; This function uses a non-reentrant model
 29675 ;;
 29676                           
 29677                           	psect	text121
 29678  006184                     __ptext121:
 29679                           	opt stack 0
 29680  006184                     _USBapp_CdcEmulatorInitialize:
 29681                           	opt stack 15
 29682                           
 29683                           ;USBapp.c: 147: CDCInitEP();
 29684                           
 29685                           ;incstack = 0
 29686  006184  EC38  F02F         	call	_CDCInitEP	;wreg free
 29687                           
 29688                           ;USBapp.c: 148: line_coding.bCharFormat = 0;
 29689  006188  0E00               	movlw	0
 29690  00618A  0101               	movlb	1	; () banked
 29691  00618C  6FE2               	movwf	(_line_coding+4)& (0+255),b
 29692                           
 29693                           ; BSR set to: 1
 29694                           ;USBapp.c: 149: line_coding.bDataBits = 8;
 29695  00618E  0E08               	movlw	8
 29696  006190  0101               	movlb	1	; () banked
 29697  006192  6FE4               	movwf	(_line_coding+6)& (0+255),b
 29698                           
 29699                           ; BSR set to: 1
 29700                           ;USBapp.c: 150: line_coding.bParityType = 0;
 29701  006194  0E00               	movlw	0
 29702  006196  0101               	movlb	1	; () banked
 29703  006198  6FE3               	movwf	(_line_coding+5)& (0+255),b
 29704                           
 29705                           ; BSR set to: 1
 29706                           ;USBapp.c: 151: line_coding.dwDTERate = 19200;
 29707  00619A  0E00               	movlw	0
 29708  00619C  0101               	movlb	1	; () banked
 29709  00619E  6FDE               	movwf	_line_coding& (0+255),b
 29710  0061A0  0E4B               	movlw	75
 29711  0061A2  6FDF               	movwf	(_line_coding+1)& (0+255),b
 29712  0061A4  0E00               	movlw	0
 29713  0061A6  6FE0               	movwf	(_line_coding+2)& (0+255),b
 29714  0061A8  0E00               	movlw	0
 29715  0061AA  6FE1               	movwf	(_line_coding+3)& (0+255),b
 29716                           
 29717                           ; BSR set to: 1
 29718                           ;USBapp.c: 152: EUSART_Initialize();
 29719  0061AC  EC6A  F032         	call	i2_EUSART_Initialize	;wreg free
 29720                           
 29721                           ;USBapp.c: 154: for (unsigned char i = 0; i <sizeof (USB_Buffer); i++)
 29722  0061B0  0E00               	movlw	0
 29723  0061B2  6E0D               	movwf	USBapp_CdcEmulatorInitialize@i,c
 29724  0061B4                     i2l7614:
 29725  0061B4  0E3F               	movlw	63
 29726  0061B6  640D               	cpfsgt	USBapp_CdcEmulatorInitialize@i,c
 29727  0061B8  D001               	goto	i2l7618
 29728  0061BA  D00C               	goto	i2l7624
 29729  0061BC                     i2l7618:
 29730                           
 29731                           ;USBapp.c: 155: {
 29732                           ;USBapp.c: 156: USB_Buffer[i] = 0;
 29733  0061BC  500D               	movf	USBapp_CdcEmulatorInitialize@i,w,c
 29734  0061BE  0D01               	mullw	1
 29735  0061C0  0E80               	movlw	low _USB_Buffer
 29736  0061C2  24F3               	addwf	prodl,w,c
 29737  0061C4  6ED9               	movwf	fsr2l,c
 29738  0061C6  0E02               	movlw	high _USB_Buffer
 29739  0061C8  20F4               	addwfc	prodh,w,c
 29740  0061CA  6EDA               	movwf	fsr2h,c
 29741  0061CC  0E00               	movlw	0
 29742  0061CE  6EDF               	movwf	indf2,c
 29743  0061D0  2A0D               	incf	USBapp_CdcEmulatorInitialize@i,f,c
 29744  0061D2  D7F0               	goto	i2l7614
 29745  0061D4                     i2l7624:
 29746                           
 29747                           ;USBapp.c: 157: }
 29748                           ;USBapp.c: 158: NextUSBOut = 0;
 29749  0061D4  0E00               	movlw	0
 29750  0061D6  6E4B               	movwf	_NextUSBOut,c
 29751                           
 29752                           ;USBapp.c: 159: LastRS232Out = 0;
 29753  0061D8  0E00               	movlw	0
 29754  0061DA  6E4A               	movwf	_LastRS232Out,c
 29755  0061DC  0012               	return		;funcret
 29756  0061DE                     __end_of_USBapp_CdcEmulatorInitialize:
 29757                           	opt stack 0
 29758                           pclatu	equ	0xFFB
 29759                           pclath	equ	0xFFA
 29760                           tblptru	equ	0xFF8
 29761                           tblptrh	equ	0xFF7
 29762                           tblptrl	equ	0xFF6
 29763                           tablat	equ	0xFF5
 29764                           prodh	equ	0xFF4
 29765                           prodl	equ	0xFF3
 29766                           intcon	equ	0xFF2
 29767                           intcon3	equ	0xFF0
 29768                           indf0	equ	0xFEF
 29769                           postinc0	equ	0xFEE
 29770                           fsr0h	equ	0xFEA
 29771                           fsr0l	equ	0xFE9
 29772                           wreg	equ	0xFE8
 29773                           indf1	equ	0xFE7
 29774                           postdec1	equ	0xFE5
 29775                           fsr1h	equ	0xFE2
 29776                           fsr1l	equ	0xFE1
 29777                           indf2	equ	0xFDF
 29778                           postinc2	equ	0xFDE
 29779                           postdec2	equ	0xFDD
 29780                           plusw2	equ	0xFDB
 29781                           fsr2h	equ	0xFDA
 29782                           fsr2l	equ	0xFD9
 29783                           status	equ	0xFD8
 29784                           
 29785 ;; *************** function _CDCInitEP *****************
 29786 ;; Defined at:
 29787 ;;		line 296 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 29788 ;; Parameters:    Size  Location     Type
 29789 ;;		None
 29790 ;; Auto vars:     Size  Location     Type
 29791 ;;		None
 29792 ;; Return value:  Size  Location     Type
 29793 ;;		None               void
 29794 ;; Registers used:
 29795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29796 ;; Tracked objects:
 29797 ;;		On entry : 0/0
 29798 ;;		On exit  : 0/0
 29799 ;;		Unchanged: 0/0
 29800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29801 ;;      Params:         0       0       0       0       0       0       0       0       0
 29802 ;;      Locals:         0       0       0       0       0       0       0       0       0
 29803 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29804 ;;      Totals:         0       0       0       0       0       0       0       0       0
 29805 ;;Total ram usage:        0 bytes
 29806 ;; Hardware stack levels used:    1
 29807 ;; Hardware stack levels required when called:    2
 29808 ;; This function calls:
 29809 ;;		_USBEnableEndpoint
 29810 ;;		i2_USBTransferOnePacket
 29811 ;; This function is called by:
 29812 ;;		_USBapp_CdcEmulatorInitialize
 29813 ;; This function uses a non-reentrant model
 29814 ;;
 29815                           
 29816                           	psect	text122
 29817  005E70                     __ptext122:
 29818                           	opt stack 0
 29819  005E70                     _CDCInitEP:
 29820                           	opt stack 15
 29821                           
 29822                           ;usb_device_cdc.c: 299: line_coding.dwDTERate = 19200;
 29823                           
 29824                           ;incstack = 0
 29825  005E70  0E00               	movlw	0
 29826  005E72  0101               	movlb	1	; () banked
 29827  005E74  6FDE               	movwf	_line_coding& (0+255),b
 29828  005E76  0E4B               	movlw	75
 29829  005E78  6FDF               	movwf	(_line_coding+1)& (0+255),b
 29830  005E7A  0E00               	movlw	0
 29831  005E7C  6FE0               	movwf	(_line_coding+2)& (0+255),b
 29832  005E7E  0E00               	movlw	0
 29833  005E80  6FE1               	movwf	(_line_coding+3)& (0+255),b
 29834                           
 29835                           ;usb_device_cdc.c: 300: line_coding.bCharFormat = 0x00;
 29836  005E82  0E00               	movlw	0
 29837  005E84  0101               	movlb	1	; () banked
 29838  005E86  6FE2               	movwf	(_line_coding+4)& (0+255),b
 29839                           
 29840                           ;usb_device_cdc.c: 301: line_coding.bParityType = 0x00;
 29841  005E88  0E00               	movlw	0
 29842  005E8A  0101               	movlb	1	; () banked
 29843  005E8C  6FE3               	movwf	(_line_coding+5)& (0+255),b
 29844                           
 29845                           ;usb_device_cdc.c: 302: line_coding.bDataBits = 0x08;
 29846  005E8E  0E08               	movlw	8
 29847  005E90  0101               	movlb	1	; () banked
 29848  005E92  6FE4               	movwf	(_line_coding+6)& (0+255),b
 29849                           
 29850                           ;usb_device_cdc.c: 304: cdc_rx_len = 0;
 29851  005E94  0E00               	movlw	0
 29852  005E96  0100               	movlb	0	; () banked
 29853  005E98  6FD9               	movwf	_cdc_rx_len& (0+255),b
 29854                           
 29855                           ; BSR set to: 0
 29856                           ;usb_device_cdc.c: 317: USBEnableEndpoint(1,0x02|0x10|0x08);
 29857  005E9A  0E1A               	movlw	26
 29858  005E9C  6E09               	movwf	USBEnableEndpoint@options,c
 29859  005E9E  0E01               	movlw	1
 29860  005EA0  ECA7  F032         	call	_USBEnableEndpoint
 29861                           
 29862                           ;usb_device_cdc.c: 318: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 29863  005EA4  0E1E               	movlw	30
 29864  005EA6  6E09               	movwf	USBEnableEndpoint@options,c
 29865  005EA8  0E02               	movlw	2
 29866  005EAA  ECA7  F032         	call	_USBEnableEndpoint
 29867                           
 29868                           ;usb_device_cdc.c: 320: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 29869  005EAE  0E00               	movlw	0
 29870  005EB0  6E01               	movwf	i2USBTransferOnePacket@dir,c
 29871  005EB2  0E40               	movlw	64
 29872  005EB4  6E02               	movwf	i2USBTransferOnePacket@data,c
 29873  005EB6  0E05               	movlw	5
 29874  005EB8  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 29875  005EBA  0E40               	movlw	64
 29876  005EBC  6E04               	movwf	i2USBTransferOnePacket@len,c
 29877  005EBE  0E02               	movlw	2
 29878  005EC0  EC62  F028         	call	i2_USBTransferOnePacket
 29879  005EC4  C001  F0C1         	movff	?i2_USBTransferOnePacket,_CDCDataOutHandle
 29880  005EC8  C002  F0C2         	movff	?i2_USBTransferOnePacket+1,_CDCDataOutHandle+1
 29881                           
 29882                           ;usb_device_cdc.c: 321: CDCDataInHandle = (0);
 29883  005ECC  0E00               	movlw	0
 29884  005ECE  0100               	movlb	0	; () banked
 29885  005ED0  6FBF               	movwf	_CDCDataInHandle& (0+255),b
 29886  005ED2  0E00               	movlw	0
 29887  005ED4  0100               	movlb	0	; () banked
 29888  005ED6  6FC0               	movwf	(_CDCDataInHandle+1)& (0+255),b
 29889                           
 29890                           ; BSR set to: 0
 29891                           ;usb_device_cdc.c: 326: cdc_trf_state = 0;
 29892  005ED8  0E00               	movlw	0
 29893  005EDA  6E50               	movwf	_cdc_trf_state,c
 29894                           
 29895                           ; BSR set to: 0
 29896  005EDC  0012               	return		;funcret
 29897  005EDE                     __end_of_CDCInitEP:
 29898                           	opt stack 0
 29899                           pclatu	equ	0xFFB
 29900                           pclath	equ	0xFFA
 29901                           tblptru	equ	0xFF8
 29902                           tblptrh	equ	0xFF7
 29903                           tblptrl	equ	0xFF6
 29904                           tablat	equ	0xFF5
 29905                           prodh	equ	0xFF4
 29906                           prodl	equ	0xFF3
 29907                           intcon	equ	0xFF2
 29908                           intcon3	equ	0xFF0
 29909                           indf0	equ	0xFEF
 29910                           postinc0	equ	0xFEE
 29911                           fsr0h	equ	0xFEA
 29912                           fsr0l	equ	0xFE9
 29913                           wreg	equ	0xFE8
 29914                           indf1	equ	0xFE7
 29915                           postdec1	equ	0xFE5
 29916                           fsr1h	equ	0xFE2
 29917                           fsr1l	equ	0xFE1
 29918                           indf2	equ	0xFDF
 29919                           postinc2	equ	0xFDE
 29920                           postdec2	equ	0xFDD
 29921                           plusw2	equ	0xFDB
 29922                           fsr2h	equ	0xFDA
 29923                           fsr2l	equ	0xFD9
 29924                           status	equ	0xFD8
 29925                           
 29926 ;; *************** function i2_USBTransferOnePacket *****************
 29927 ;; Defined at:
 29928 ;;		line 757 in file "../Includes/Usb/Framework/usb_device.c"
 29929 ;; Parameters:    Size  Location     Type
 29930 ;;  ep              1    wreg     unsigned char 
 29931 ;;  dir             1    0[COMRAM] unsigned char 
 29932 ;;  data            2    1[COMRAM] PTR unsigned char 
 29933 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 29934 ;;  len             1    3[COMRAM] unsigned char 
 29935 ;; Auto vars:     Size  Location     Type
 29936 ;;  ep              1    4[COMRAM] unsigned char 
 29937 ;;  USBTransferO    2    5[COMRAM] PTR volatile struct __BD
 29938 ;;		 -> BDT(48), NULL(0), 
 29939 ;; Return value:  Size  Location     Type
 29940 ;;                  2    0[COMRAM] PTR void 
 29941 ;; Registers used:
 29942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29943 ;; Tracked objects:
 29944 ;;		On entry : 0/0
 29945 ;;		On exit  : 0/0
 29946 ;;		Unchanged: 0/0
 29947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 29948 ;;      Params:         4       0       0       0       0       0       0       0       0
 29949 ;;      Locals:         3       0       0       0       0       0       0       0       0
 29950 ;;      Temps:          0       0       0       0       0       0       0       0       0
 29951 ;;      Totals:         7       0       0       0       0       0       0       0       0
 29952 ;;Total ram usage:        7 bytes
 29953 ;; Hardware stack levels used:    1
 29954 ;; This function calls:
 29955 ;;		Nothing
 29956 ;; This function is called by:
 29957 ;;		_CDCInitEP
 29958 ;; This function uses a non-reentrant model
 29959 ;;
 29960                           
 29961                           	psect	text123
 29962  0050C4                     __ptext123:
 29963                           	opt stack 0
 29964  0050C4                     i2_USBTransferOnePacket:
 29965                           	opt stack 16
 29966                           
 29967                           ; BSR set to: 0
 29968                           ;incstack = 0
 29969                           ;i2USBTransferOnePacket@ep stored from wreg
 29970  0050C4  6E05               	movwf	i2USBTransferOnePacket@ep,c
 29971                           
 29972                           ;usb_device.c: 759: volatile BDT_ENTRY* handle;
 29973                           ;usb_device.c: 762: if(dir != 0)
 29974  0050C6  5001               	movf	i2USBTransferOnePacket@dir,w,c
 29975  0050C8  B4D8               	btfsc	status,2,c
 29976  0050CA  D007               	goto	i2l7496
 29977                           
 29978                           ;usb_device.c: 763: {
 29979                           ;usb_device.c: 765: handle = pBDTEntryIn[ep];
 29980  0050CC  5005               	movf	i2USBTransferOnePacket@ep,w,c
 29981  0050CE  0D02               	mullw	2
 29982  0050D0  0E3C               	movlw	low _pBDTEntryIn
 29983  0050D2  24F3               	addwf	prodl,w,c
 29984  0050D4  6ED9               	movwf	fsr2l,c
 29985  0050D6  0E00               	movlw	high _pBDTEntryIn
 29986  0050D8  D006               	goto	L32
 29987  0050DA                     i2l7496:
 29988                           
 29989                           ;usb_device.c: 767: else
 29990                           ;usb_device.c: 768: {
 29991                           ;usb_device.c: 770: handle = pBDTEntryOut[ep];
 29992  0050DA  5005               	movf	i2USBTransferOnePacket@ep,w,c
 29993  0050DC  0D02               	mullw	2
 29994  0050DE  0E40               	movlw	low _pBDTEntryOut
 29995  0050E0  24F3               	addwf	prodl,w,c
 29996  0050E2  6ED9               	movwf	fsr2l,c
 29997  0050E4  0E01               	movlw	high _pBDTEntryOut
 29998  0050E6                     L32:
 29999  0050E6  20F4               	addwfc	prodh,w,c
 30000  0050E8  6EDA               	movwf	fsr2h,c
 30001  0050EA  CFDE F006          	movff	postinc2,i2USBTransferOnePacket@handle
 30002  0050EE  CFDD F007          	movff	postdec2,i2USBTransferOnePacket@handle+1
 30003                           
 30004                           ;usb_device.c: 771: }
 30005                           ;usb_device.c: 775: if(handle == 0)
 30006  0050F2  5006               	movf	i2USBTransferOnePacket@handle,w,c
 30007  0050F4  1007               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 30008  0050F6  A4D8               	btfss	status,2,c
 30009  0050F8  D005               	goto	i2l7504
 30010                           
 30011                           ;usb_device.c: 776: {
 30012                           ;usb_device.c: 777: return 0;
 30013  0050FA  0E00               	movlw	0
 30014  0050FC  6E01               	movwf	?i2_USBTransferOnePacket,c
 30015  0050FE  0E00               	movlw	0
 30016  005100  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 30017  005102  0012               	return	
 30018  005104                     i2l7504:
 30019                           
 30020                           ;usb_device.c: 778: }
 30021                           ;usb_device.c: 780: handle->ADR = ((uint16_t)(data));
 30022  005104  EE20 F002          	lfsr	2,2
 30023  005108  5006               	movf	i2USBTransferOnePacket@handle,w,c
 30024  00510A  26D9               	addwf	fsr2l,f,c
 30025  00510C  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 30026  00510E  22DA               	addwfc	fsr2h,f,c
 30027  005110  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 30028  005114  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 30029                           
 30030                           ;usb_device.c: 781: handle->CNT = len;
 30031  005118  EE20 F001          	lfsr	2,1
 30032  00511C  5006               	movf	i2USBTransferOnePacket@handle,w,c
 30033  00511E  26D9               	addwf	fsr2l,f,c
 30034  005120  5007               	movf	i2USBTransferOnePacket@handle+1,w,c
 30035  005122  22DA               	addwfc	fsr2h,f,c
 30036  005124  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 30037                           
 30038                           ;usb_device.c: 782: handle->STAT.Val &= 0x40;
 30039  005128  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 30040  00512C  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 30041  005130  0E40               	movlw	64
 30042  005132  16DF               	andwf	indf2,f,c
 30043                           
 30044                           ;usb_device.c: 783: handle->STAT.Val |= (0x08 & 0x08);
 30045  005134  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 30046  005138  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 30047  00513C  0E00               	movlw	0
 30048  00513E  86DB               	bsf	plusw2,3,c
 30049                           
 30050                           ;usb_device.c: 784: handle->STAT.Val |= 0x80;
 30051  005140  C006  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 30052  005144  C007  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 30053  005148  0E00               	movlw	0
 30054  00514A  8EDB               	bsf	plusw2,7,c
 30055                           
 30056                           ;usb_device.c: 787: if(dir != 0)
 30057  00514C  5001               	movf	i2USBTransferOnePacket@dir,w,c
 30058  00514E  B4D8               	btfsc	status,2,c
 30059  005150  D007               	goto	i2l7516
 30060                           
 30061                           ;usb_device.c: 788: {
 30062                           ;usb_device.c: 790: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 30063  005152  5005               	movf	i2USBTransferOnePacket@ep,w,c
 30064  005154  0D02               	mullw	2
 30065  005156  0E3C               	movlw	low _pBDTEntryIn
 30066  005158  24F3               	addwf	prodl,w,c
 30067  00515A  6ED9               	movwf	fsr2l,c
 30068  00515C  0E00               	movlw	high _pBDTEntryIn
 30069  00515E  D006               	goto	L33
 30070  005160                     i2l7516:
 30071                           
 30072                           ;usb_device.c: 792: else
 30073                           ;usb_device.c: 793: {
 30074                           ;usb_device.c: 795: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 30075  005160  5005               	movf	i2USBTransferOnePacket@ep,w,c
 30076  005162  0D02               	mullw	2
 30077  005164  0E40               	movlw	low _pBDTEntryOut
 30078  005166  24F3               	addwf	prodl,w,c
 30079  005168  6ED9               	movwf	fsr2l,c
 30080  00516A  0E01               	movlw	high _pBDTEntryOut
 30081  00516C                     L33:
 30082  00516C  20F4               	addwfc	prodh,w,c
 30083  00516E  6EDA               	movwf	fsr2h,c
 30084  005170  0E04               	movlw	4
 30085  005172  1ADF               	xorwf	indf2,f,c
 30086                           
 30087                           ;usb_device.c: 796: }
 30088                           ;usb_device.c: 797: return (void*)handle;
 30089  005174  C006  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 30090  005178  C007  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 30091  00517C  0012               	return	
 30092  00517E                     __end_ofi2_USBTransferOnePacket:
 30093                           	opt stack 0
 30094                           pclatu	equ	0xFFB
 30095                           pclath	equ	0xFFA
 30096                           tblptru	equ	0xFF8
 30097                           tblptrh	equ	0xFF7
 30098                           tblptrl	equ	0xFF6
 30099                           tablat	equ	0xFF5
 30100                           prodh	equ	0xFF4
 30101                           prodl	equ	0xFF3
 30102                           intcon	equ	0xFF2
 30103                           intcon3	equ	0xFF0
 30104                           indf0	equ	0xFEF
 30105                           postinc0	equ	0xFEE
 30106                           fsr0h	equ	0xFEA
 30107                           fsr0l	equ	0xFE9
 30108                           wreg	equ	0xFE8
 30109                           indf1	equ	0xFE7
 30110                           postdec1	equ	0xFE5
 30111                           fsr1h	equ	0xFE2
 30112                           fsr1l	equ	0xFE1
 30113                           indf2	equ	0xFDF
 30114                           postinc2	equ	0xFDE
 30115                           postdec2	equ	0xFDD
 30116                           plusw2	equ	0xFDB
 30117                           fsr2h	equ	0xFDA
 30118                           fsr2l	equ	0xFD9
 30119                           status	equ	0xFD8
 30120                           
 30121 ;; *************** function _USBEnableEndpoint *****************
 30122 ;; Defined at:
 30123 ;;		line 645 in file "../Includes/Usb/Framework/usb_device.c"
 30124 ;; Parameters:    Size  Location     Type
 30125 ;;  ep              1    wreg     unsigned char 
 30126 ;;  options         1    8[COMRAM] unsigned char 
 30127 ;; Auto vars:     Size  Location     Type
 30128 ;;  ep              1   11[COMRAM] unsigned char 
 30129 ;;  p               2    9[COMRAM] PTR unsigned char 
 30130 ;;		 -> UEP0(1), 
 30131 ;; Return value:  Size  Location     Type
 30132 ;;		None               void
 30133 ;; Registers used:
 30134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30135 ;; Tracked objects:
 30136 ;;		On entry : 0/0
 30137 ;;		On exit  : 0/0
 30138 ;;		Unchanged: 0/0
 30139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30140 ;;      Params:         1       0       0       0       0       0       0       0       0
 30141 ;;      Locals:         3       0       0       0       0       0       0       0       0
 30142 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30143 ;;      Totals:         4       0       0       0       0       0       0       0       0
 30144 ;;Total ram usage:        4 bytes
 30145 ;; Hardware stack levels used:    1
 30146 ;; Hardware stack levels required when called:    1
 30147 ;; This function calls:
 30148 ;;		_USBConfigureEndpoint
 30149 ;; This function is called by:
 30150 ;;		_CDCInitEP
 30151 ;; This function uses a non-reentrant model
 30152 ;;
 30153                           
 30154                           	psect	text124
 30155  00654E                     __ptext124:
 30156                           	opt stack 0
 30157  00654E                     _USBEnableEndpoint:
 30158                           	opt stack 15
 30159                           
 30160                           ;incstack = 0
 30161                           ;USBEnableEndpoint@ep stored from wreg
 30162  00654E  6E0C               	movwf	USBEnableEndpoint@ep,c
 30163                           
 30164                           ;usb_device.c: 647: unsigned char* p;
 30165                           ;usb_device.c: 651: if(options & 0x04)
 30166  006550  A409               	btfss	USBEnableEndpoint@options,2,c
 30167  006552  D005               	goto	i2l7484
 30168                           
 30169                           ;usb_device.c: 652: {
 30170                           ;usb_device.c: 653: USBConfigureEndpoint(ep, 0);
 30171  006554  0E00               	movlw	0
 30172  006556  6E01               	movwf	USBConfigureEndpoint@direction,c
 30173  006558  500C               	movf	USBEnableEndpoint@ep,w,c
 30174  00655A  EC01  F02C         	call	_USBConfigureEndpoint
 30175  00655E                     i2l7484:
 30176                           
 30177                           ;usb_device.c: 654: }
 30178                           ;usb_device.c: 655: if(options & 0x02)
 30179  00655E  A209               	btfss	USBEnableEndpoint@options,1,c
 30180  006560  D005               	goto	i2l7488
 30181                           
 30182                           ;usb_device.c: 656: {
 30183                           ;usb_device.c: 657: USBConfigureEndpoint(ep, 1);
 30184  006562  0E01               	movlw	1
 30185  006564  6E01               	movwf	USBConfigureEndpoint@direction,c
 30186  006566  500C               	movf	USBEnableEndpoint@ep,w,c
 30187  006568  EC01  F02C         	call	_USBConfigureEndpoint
 30188  00656C                     i2l7488:
 30189                           
 30190                           ;usb_device.c: 658: }
 30191                           ;usb_device.c: 663: p = (unsigned char*)(&UEP0+ep);
 30192  00656C  500C               	movf	USBEnableEndpoint@ep,w,c
 30193  00656E  0D01               	mullw	1
 30194  006570  0E6A               	movlw	106
 30195  006572  24F3               	addwf	prodl,w,c
 30196  006574  6E0A               	movwf	USBEnableEndpoint@p,c
 30197  006576  0E0F               	movlw	15
 30198  006578  20F4               	addwfc	prodh,w,c
 30199  00657A  6E0B               	movwf	USBEnableEndpoint@p+1,c
 30200                           
 30201                           ;usb_device.c: 664: *p = options;
 30202  00657C  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 30203  006580  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 30204  006584  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 30205  006588  0012               	return		;funcret
 30206  00658A                     __end_of_USBEnableEndpoint:
 30207                           	opt stack 0
 30208                           pclatu	equ	0xFFB
 30209                           pclath	equ	0xFFA
 30210                           tblptru	equ	0xFF8
 30211                           tblptrh	equ	0xFF7
 30212                           tblptrl	equ	0xFF6
 30213                           tablat	equ	0xFF5
 30214                           prodh	equ	0xFF4
 30215                           prodl	equ	0xFF3
 30216                           intcon	equ	0xFF2
 30217                           intcon3	equ	0xFF0
 30218                           indf0	equ	0xFEF
 30219                           postinc0	equ	0xFEE
 30220                           fsr0h	equ	0xFEA
 30221                           fsr0l	equ	0xFE9
 30222                           wreg	equ	0xFE8
 30223                           indf1	equ	0xFE7
 30224                           postdec1	equ	0xFE5
 30225                           fsr1h	equ	0xFE2
 30226                           fsr1l	equ	0xFE1
 30227                           indf2	equ	0xFDF
 30228                           postinc2	equ	0xFDE
 30229                           postdec2	equ	0xFDD
 30230                           plusw2	equ	0xFDB
 30231                           fsr2h	equ	0xFDA
 30232                           fsr2l	equ	0xFD9
 30233                           status	equ	0xFD8
 30234                           
 30235 ;; *************** function _USBConfigureEndpoint *****************
 30236 ;; Defined at:
 30237 ;;		line 1228 in file "../Includes/Usb/Framework/usb_device.c"
 30238 ;; Parameters:    Size  Location     Type
 30239 ;;  EPNum           1    wreg     unsigned char 
 30240 ;;  direction       1    0[COMRAM] unsigned char 
 30241 ;; Auto vars:     Size  Location     Type
 30242 ;;  EPNum           1    5[COMRAM] unsigned char 
 30243 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 30244 ;;		 -> BDT(48), 
 30245 ;; Return value:  Size  Location     Type
 30246 ;;		None               void
 30247 ;; Registers used:
 30248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30249 ;; Tracked objects:
 30250 ;;		On entry : 0/0
 30251 ;;		On exit  : 0/0
 30252 ;;		Unchanged: 0/0
 30253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30254 ;;      Params:         1       0       0       0       0       0       0       0       0
 30255 ;;      Locals:         3       0       0       0       0       0       0       0       0
 30256 ;;      Temps:          4       0       0       0       0       0       0       0       0
 30257 ;;      Totals:         8       0       0       0       0       0       0       0       0
 30258 ;;Total ram usage:        8 bytes
 30259 ;; Hardware stack levels used:    1
 30260 ;; This function calls:
 30261 ;;		Nothing
 30262 ;; This function is called by:
 30263 ;;		_USBEnableEndpoint
 30264 ;; This function uses a non-reentrant model
 30265 ;;
 30266                           
 30267                           	psect	text125
 30268  005802                     __ptext125:
 30269                           	opt stack 0
 30270  005802                     _USBConfigureEndpoint:
 30271                           	opt stack 15
 30272                           
 30273                           ;incstack = 0
 30274                           ;USBConfigureEndpoint@EPNum stored from wreg
 30275  005802  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 30276                           
 30277                           ;usb_device.c: 1230: volatile BDT_ENTRY* handle;
 30278                           ;usb_device.c: 1234: handle = (volatile BDT_ENTRY*)&BDT[0];
 30279  005804  0E00               	movlw	0
 30280  005806  6E07               	movwf	USBConfigureEndpoint@handle,c
 30281  005808  0E04               	movlw	4
 30282  00580A  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 30283                           
 30284                           ;usb_device.c: 1235: handle += (4*EPNum+2*direction+0u);
 30285  00580C  5001               	movf	USBConfigureEndpoint@direction,w,c
 30286  00580E  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 30287  005810  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 30288  005812  90D8               	bcf	status,0,c
 30289  005814  3602               	rlcf	??_USBConfigureEndpoint,f,c
 30290  005816  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 30291  005818  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 30292  00581A  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 30293  00581C  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 30294  00581E  90D8               	bcf	status,0,c
 30295  005820  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 30296  005822  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 30297  005824  90D8               	bcf	status,0,c
 30298  005826  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 30299  005828  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 30300  00582A  5002               	movf	??_USBConfigureEndpoint,w,c
 30301  00582C  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 30302  00582E  5003               	movf	??_USBConfigureEndpoint+1,w,c
 30303  005830  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 30304  005832  90D8               	bcf	status,0,c
 30305  005834  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 30306  005836  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 30307  005838  90D8               	bcf	status,0,c
 30308  00583A  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 30309  00583C  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 30310  00583E  5004               	movf	??_USBConfigureEndpoint+2,w,c
 30311  005840  2607               	addwf	USBConfigureEndpoint@handle,f,c
 30312  005842  5005               	movf	??_USBConfigureEndpoint+3,w,c
 30313  005844  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 30314                           
 30315                           ;usb_device.c: 1237: handle->STAT.UOWN = 0;
 30316  005846  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 30317  00584A  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 30318  00584E  9EDF               	bcf	indf2,7,c
 30319                           
 30320                           ;usb_device.c: 1242: if(direction == 0)
 30321  005850  5001               	movf	USBConfigureEndpoint@direction,w,c
 30322  005852  A4D8               	btfss	status,2,c
 30323  005854  D007               	goto	i2l7460
 30324                           
 30325                           ;usb_device.c: 1243: {
 30326                           ;usb_device.c: 1244: pBDTEntryOut[EPNum] = handle;
 30327  005856  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 30328  005858  0D02               	mullw	2
 30329  00585A  0E40               	movlw	low _pBDTEntryOut
 30330  00585C  24F3               	addwf	prodl,w,c
 30331  00585E  6ED9               	movwf	fsr2l,c
 30332  005860  0E01               	movlw	high _pBDTEntryOut
 30333  005862  D006               	goto	L34
 30334  005864                     i2l7460:
 30335                           
 30336                           ;usb_device.c: 1246: else
 30337                           ;usb_device.c: 1247: {
 30338                           ;usb_device.c: 1248: pBDTEntryIn[EPNum] = handle;
 30339  005864  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 30340  005866  0D02               	mullw	2
 30341  005868  0E3C               	movlw	low _pBDTEntryIn
 30342  00586A  24F3               	addwf	prodl,w,c
 30343  00586C  6ED9               	movwf	fsr2l,c
 30344  00586E  0E00               	movlw	high _pBDTEntryIn
 30345  005870                     L34:
 30346  005870  20F4               	addwfc	prodh,w,c
 30347  005872  6EDA               	movwf	fsr2h,c
 30348  005874  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 30349  005878  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 30350                           
 30351                           ;usb_device.c: 1249: }
 30352                           ;usb_device.c: 1250: handle->STAT.DTS = 0;
 30353  00587C  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 30354  005880  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 30355  005884  9CDF               	bcf	indf2,6,c
 30356                           
 30357                           ;usb_device.c: 1251: (handle+1)->STAT.DTS = 1;
 30358  005886  EE20 F004          	lfsr	2,4
 30359  00588A  5007               	movf	USBConfigureEndpoint@handle,w,c
 30360  00588C  26D9               	addwf	fsr2l,f,c
 30361  00588E  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 30362  005890  22DA               	addwfc	fsr2h,f,c
 30363  005892  8CDF               	bsf	indf2,6,c
 30364  005894  0012               	return		;funcret
 30365  005896                     __end_of_USBConfigureEndpoint:
 30366                           	opt stack 0
 30367                           pclatu	equ	0xFFB
 30368                           pclath	equ	0xFFA
 30369                           tblptru	equ	0xFF8
 30370                           tblptrh	equ	0xFF7
 30371                           tblptrl	equ	0xFF6
 30372                           tablat	equ	0xFF5
 30373                           prodh	equ	0xFF4
 30374                           prodl	equ	0xFF3
 30375                           intcon	equ	0xFF2
 30376                           intcon3	equ	0xFF0
 30377                           indf0	equ	0xFEF
 30378                           postinc0	equ	0xFEE
 30379                           fsr0h	equ	0xFEA
 30380                           fsr0l	equ	0xFE9
 30381                           wreg	equ	0xFE8
 30382                           indf1	equ	0xFE7
 30383                           postdec1	equ	0xFE5
 30384                           fsr1h	equ	0xFE2
 30385                           fsr1l	equ	0xFE1
 30386                           indf2	equ	0xFDF
 30387                           postinc2	equ	0xFDE
 30388                           postdec2	equ	0xFDD
 30389                           plusw2	equ	0xFDB
 30390                           fsr2h	equ	0xFDA
 30391                           fsr2l	equ	0xFD9
 30392                           status	equ	0xFD8
 30393                           
 30394 ;; *************** function _USBCheckCDCRequest *****************
 30395 ;; Defined at:
 30396 ;;		line 184 in file "../Includes/Usb/Framework/usb_device_cdc.c"
 30397 ;; Parameters:    Size  Location     Type
 30398 ;;		None
 30399 ;; Auto vars:     Size  Location     Type
 30400 ;;		None
 30401 ;; Return value:  Size  Location     Type
 30402 ;;		None               void
 30403 ;; Registers used:
 30404 ;;		wreg, status,2, status,0
 30405 ;; Tracked objects:
 30406 ;;		On entry : 0/0
 30407 ;;		On exit  : 0/0
 30408 ;;		Unchanged: 0/0
 30409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30410 ;;      Params:         0       0       0       0       0       0       0       0       0
 30411 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30412 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30413 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30414 ;;Total ram usage:        0 bytes
 30415 ;; Hardware stack levels used:    1
 30416 ;; This function calls:
 30417 ;;		Nothing
 30418 ;; This function is called by:
 30419 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 30420 ;; This function uses a non-reentrant model
 30421 ;;
 30422                           
 30423                           	psect	text126
 30424  005388                     __ptext126:
 30425                           	opt stack 0
 30426  005388                     _USBCheckCDCRequest:
 30427                           	opt stack 18
 30428                           
 30429                           ;usb_device_cdc.c: 189: if(SetupPkt.Recipient != (0x01)) return;
 30430                           
 30431                           ;incstack = 0
 30432  005388  0104               	movlb	4	; () banked
 30433  00538A  5130               	movf	48,w,b	;volatile
 30434  00538C  0B1F               	andlw	31
 30435  00538E  06E8               	decf	wreg,f,c
 30436  005390  A4D8               	btfss	status,2,c
 30437  005392  0012               	return	
 30438                           
 30439                           ; BSR set to: 4
 30440                           ;usb_device_cdc.c: 194: if(SetupPkt.RequestType != (0x20>>5)) return;
 30441                           
 30442                           ; BSR set to: 4
 30443                           
 30444                           ; BSR set to: 4
 30445  005394  0104               	movlb	4	; () banked
 30446  005396  3930               	swapf	48,w,b	;volatile
 30447  005398  32E8               	rrcf	wreg,f,c
 30448  00539A  0B03               	andlw	3
 30449  00539C  06E8               	decf	wreg,f,c
 30450  00539E  A4D8               	btfss	status,2,c
 30451  0053A0  0012               	return	
 30452                           
 30453                           ; BSR set to: 4
 30454                           ;usb_device_cdc.c: 200: if((SetupPkt.bIntfID != 0x0)&&
 30455                           ;usb_device_cdc.c: 201: (SetupPkt.bIntfID != 0x01)) return;
 30456                           
 30457                           ; BSR set to: 4
 30458                           
 30459                           ; BSR set to: 4
 30460  0053A2  0104               	movlb	4	; () banked
 30461  0053A4  5134               	movf	52,w,b	;volatile
 30462  0053A6  B4D8               	btfsc	status,2,c
 30463  0053A8  D033               	goto	i2l7664
 30464                           
 30465                           ; BSR set to: 4
 30466  0053AA  0104               	movlb	4	; () banked
 30467  0053AC  0534               	decf	52,w,b	;volatile
 30468  0053AE  A4D8               	btfss	status,2,c
 30469  0053B0  0012               	return	
 30470  0053B2  D02E               	goto	i2l7664
 30471  0053B4                     i2l7640:
 30472                           
 30473                           ; BSR set to: 4
 30474                           ;usb_device_cdc.c: 208: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 30475  0053B4  0ED6               	movlw	low _dummy_encapsulated_cmd_response
 30476  0053B6  6E36               	movwf	_inPipes,c	;volatile
 30477  0053B8  0E01               	movlw	high _dummy_encapsulated_cmd_response
 30478  0053BA  6E37               	movwf	_inPipes+1,c	;volatile
 30479                           
 30480                           ; BSR set to: 4
 30481                           ;usb_device_cdc.c: 209: inPipes[0].wCount.Val = 0x08;
 30482  0053BC  0E00               	movlw	0
 30483  0053BE  6E3B               	movwf	_inPipes+5,c	;volatile
 30484  0053C0  0E08               	movlw	8
 30485  0053C2  6E3A               	movwf	_inPipes+4,c	;volatile
 30486                           
 30487                           ; BSR set to: 4
 30488                           ;usb_device_cdc.c: 210: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 30489  0053C4  8039               	bsf	_inPipes+3,0,c	;volatile
 30490                           
 30491                           ; BSR set to: 4
 30492                           ;usb_device_cdc.c: 211: inPipes[0].info.bits.busy = 1;
 30493  0053C6  8E39               	bsf	_inPipes+3,7,c	;volatile
 30494                           
 30495                           ;usb_device_cdc.c: 212: break;
 30496  0053C8  0012               	return	
 30497  0053CA                     i2l7648:
 30498                           
 30499                           ; BSR set to: 4
 30500                           ;usb_device_cdc.c: 215: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 30501  0053CA  0ED6               	movlw	low _dummy_encapsulated_cmd_response
 30502  0053CC  6E36               	movwf	_inPipes,c	;volatile
 30503  0053CE  0E01               	movlw	high _dummy_encapsulated_cmd_response
 30504  0053D0  6E37               	movwf	_inPipes+1,c	;volatile
 30505                           
 30506                           ; BSR set to: 4
 30507                           ;usb_device_cdc.c: 216: inPipes[0].info.bits.busy = 1;
 30508  0053D2  8E39               	bsf	_inPipes+3,7,c	;volatile
 30509                           
 30510                           ;usb_device_cdc.c: 217: break;
 30511  0053D4  0012               	return	
 30512  0053D6                     i2l2022:
 30513                           
 30514                           ; BSR set to: 4
 30515                           ;usb_device_cdc.c: 220: outPipes[0].wCount.Val = SetupPkt.wLength;
 30516  0053D6  C436 F032          	movff	1078,_outPipes+4	;volatile
 30517  0053DA  C437 F033          	movff	1079,_outPipes+5	;volatile
 30518                           
 30519                           ; BSR set to: 4
 30520                           ;usb_device_cdc.c: 221: outPipes[0].pDst.bRam = (uint8_t*)&cdc_notice.SetLineCoding._byt
      +                          e[0];
 30521  0053DE  0ECC               	movlw	low _cdc_notice
 30522  0053E0  6E2E               	movwf	_outPipes,c	;volatile
 30523  0053E2  0E01               	movlw	high _cdc_notice
 30524  0053E4  6E2F               	movwf	_outPipes+1,c	;volatile
 30525                           
 30526                           ;usb_device_cdc.c: 222: outPipes[0].pFunc = &USART_mySetLineCodingHandler;
 30527  0053E6  0EDE               	movlw	low _USART_mySetLineCodingHandler
 30528  0053E8  6E34               	movwf	_outPipes+6,c	;volatile
 30529  0053EA  0E61               	movlw	high _USART_mySetLineCodingHandler
 30530  0053EC  6E35               	movwf	_outPipes+7,c	;volatile
 30531                           
 30532                           ; BSR set to: 4
 30533                           ;usb_device_cdc.c: 223: outPipes[0].info.bits.busy = 1;
 30534  0053EE  8E31               	bsf	_outPipes+3,7,c	;volatile
 30535                           
 30536                           ;usb_device_cdc.c: 224: break;
 30537  0053F0  0012               	return	
 30538  0053F2                     i2l7656:
 30539                           
 30540                           ; BSR set to: 4
 30541                           ;usb_device_cdc.c: 227: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 30542  0053F2  0EDE               	movlw	low _line_coding
 30543  0053F4  6E36               	movwf	_inPipes,c	;volatile
 30544  0053F6  0E01               	movlw	high _line_coding
 30545  0053F8  6E37               	movwf	_inPipes+1,c	;volatile
 30546                           
 30547                           ; BSR set to: 4
 30548  0053FA  0E00               	movlw	0
 30549  0053FC  6E3B               	movwf	_inPipes+5,c	;volatile
 30550  0053FE  0E07               	movlw	7
 30551  005400  6E3A               	movwf	_inPipes+4,c	;volatile
 30552                           
 30553                           ; BSR set to: 4
 30554  005402  0EC1               	movlw	193
 30555  005404  6E39               	movwf	_inPipes+3,c	;volatile
 30556                           
 30557                           ;usb_device_cdc.c: 231: break;
 30558  005406  0012               	return	
 30559  005408                     i2l2024:
 30560                           
 30561                           ; BSR set to: 4
 30562                           ;usb_device_cdc.c: 234: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 30563  005408  C432 F0DB          	movff	1074,_control_signal_bitmap	;volatile
 30564                           
 30565                           ;usb_device_cdc.c: 255: inPipes[0].info.bits.busy = 1;
 30566  00540C  8E39               	bsf	_inPipes+3,7,c	;volatile
 30567                           
 30568                           ; BSR set to: 4
 30569                           ;usb_device_cdc.c: 260: }
 30570                           
 30571                           ; BSR set to: 4
 30572                           ;usb_device_cdc.c: 259: break;
 30573                           
 30574                           ;usb_device_cdc.c: 258: default:
 30575                           
 30576                           ;usb_device_cdc.c: 256: break;
 30577  00540E  0012               	return	
 30578  005410                     i2l7664:
 30579                           
 30580                           ; BSR set to: 4
 30581  005410  0104               	movlb	4	; () banked
 30582  005412  5131               	movf	49,w,b	;volatile
 30583                           
 30584                           ; Switch size 1, requested type "space"
 30585                           ; Number of cases is 5, Range of values is 0 to 34
 30586                           ; switch strategies available:
 30587                           ; Name         Instructions Cycles
 30588                           ; simple_byte           16     9 (average)
 30589                           ;	Chosen strategy is simple_byte
 30590  005414  0A00               	xorlw	0	; case 0
 30591  005416  B4D8               	btfsc	status,2,c
 30592  005418  D7CD               	goto	i2l7640
 30593  00541A  0A01               	xorlw	1	; case 1
 30594  00541C  B4D8               	btfsc	status,2,c
 30595  00541E  D7D5               	goto	i2l7648
 30596  005420  0A21               	xorlw	33	; case 32
 30597  005422  B4D8               	btfsc	status,2,c
 30598  005424  D7D8               	goto	i2l2022
 30599  005426  0A01               	xorlw	1	; case 33
 30600  005428  B4D8               	btfsc	status,2,c
 30601  00542A  D7E3               	goto	i2l7656
 30602  00542C  0A03               	xorlw	3	; case 34
 30603  00542E  A4D8               	btfss	status,2,c
 30604  005430  0012               	return	
 30605  005432  D7EA               	goto	i2l2024
 30606  005434                     __end_of_USBCheckCDCRequest:
 30607                           	opt stack 0
 30608                           pclatu	equ	0xFFB
 30609                           pclath	equ	0xFFA
 30610                           tblptru	equ	0xFF8
 30611                           tblptrh	equ	0xFF7
 30612                           tblptrl	equ	0xFF6
 30613                           tablat	equ	0xFF5
 30614                           prodh	equ	0xFF4
 30615                           prodl	equ	0xFF3
 30616                           intcon	equ	0xFF2
 30617                           intcon3	equ	0xFF0
 30618                           indf0	equ	0xFEF
 30619                           postinc0	equ	0xFEE
 30620                           fsr0h	equ	0xFEA
 30621                           fsr0l	equ	0xFE9
 30622                           wreg	equ	0xFE8
 30623                           indf1	equ	0xFE7
 30624                           postdec1	equ	0xFE5
 30625                           fsr1h	equ	0xFE2
 30626                           fsr1l	equ	0xFE1
 30627                           indf2	equ	0xFDF
 30628                           postinc2	equ	0xFDE
 30629                           postdec2	equ	0xFDD
 30630                           plusw2	equ	0xFDB
 30631                           fsr2h	equ	0xFDA
 30632                           fsr2l	equ	0xFD9
 30633                           status	equ	0xFD8
 30634                           
 30635 ;; *************** function _USBCtrlTrfOutHandler *****************
 30636 ;; Defined at:
 30637 ;;		line 2169 in file "../Includes/Usb/Framework/usb_device.c"
 30638 ;; Parameters:    Size  Location     Type
 30639 ;;		None
 30640 ;; Auto vars:     Size  Location     Type
 30641 ;;		None
 30642 ;; Return value:  Size  Location     Type
 30643 ;;		None               void
 30644 ;; Registers used:
 30645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 30646 ;; Tracked objects:
 30647 ;;		On entry : 0/0
 30648 ;;		On exit  : 0/0
 30649 ;;		Unchanged: 0/0
 30650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30651 ;;      Params:         0       0       0       0       0       0       0       0       0
 30652 ;;      Locals:         0       0       0       0       0       0       0       0       0
 30653 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30654 ;;      Totals:         0       0       0       0       0       0       0       0       0
 30655 ;;Total ram usage:        0 bytes
 30656 ;; Hardware stack levels used:    1
 30657 ;; Hardware stack levels required when called:    3
 30658 ;; This function calls:
 30659 ;;		_USBCtrlTrfRxService
 30660 ;; This function is called by:
 30661 ;;		_USBCtrlEPService
 30662 ;; This function uses a non-reentrant model
 30663 ;;
 30664                           
 30665                           	psect	text127
 30666  006012                     __ptext127:
 30667                           	opt stack 0
 30668  006012                     _USBCtrlTrfOutHandler:
 30669                           	opt stack 15
 30670                           
 30671                           ;usb_device.c: 2171: if(controlTransferState == 2)
 30672                           
 30673                           ; BSR set to: 4
 30674                           ;incstack = 0
 30675  006012  0E02               	movlw	2
 30676  006014  1851               	xorwf	_controlTransferState,w,c	;volatile
 30677  006016  A4D8               	btfss	status,2,c
 30678  006018  D003               	goto	i2l9782
 30679                           
 30680                           ;usb_device.c: 2172: {
 30681                           ;usb_device.c: 2173: USBCtrlTrfRxService();
 30682  00601A  EC3C  F01D         	call	_USBCtrlTrfRxService	;wreg free
 30683                           
 30684                           ;usb_device.c: 2174: }
 30685  00601E  0012               	return	
 30686  006020                     i2l9782:
 30687                           
 30688                           ;usb_device.c: 2175: else
 30689                           ;usb_device.c: 2176: {
 30690                           ;usb_device.c: 2179: controlTransferState = 0;
 30691  006020  0E00               	movlw	0
 30692  006022  6E51               	movwf	_controlTransferState,c	;volatile
 30693                           
 30694                           ;usb_device.c: 2186: if(BothEP0OutUOWNsSet == 0)
 30695  006024  0100               	movlb	0	; () banked
 30696  006026  51CD               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 30697  006028  A4D8               	btfss	status,2,c
 30698  00602A  D01F               	goto	i2l9790
 30699                           
 30700                           ; BSR set to: 0
 30701                           ;usb_device.c: 2187: {
 30702                           ;usb_device.c: 2188: pBDTEntryEP0OutNext->CNT = 8;
 30703  00602C  EE20 F001          	lfsr	2,1
 30704  006030  5046               	movf	_pBDTEntryEP0OutNext,w,c
 30705  006032  26D9               	addwf	fsr2l,f,c
 30706  006034  5047               	movf	_pBDTEntryEP0OutNext+1,w,c
 30707  006036  22DA               	addwfc	fsr2h,f,c
 30708  006038  0E08               	movlw	8
 30709  00603A  6EDF               	movwf	indf2,c
 30710                           
 30711                           ;usb_device.c: 2189: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 30712  00603C  EE20 F002          	lfsr	2,2
 30713  006040  5046               	movf	_pBDTEntryEP0OutNext,w,c
 30714  006042  26D9               	addwf	fsr2l,f,c
 30715  006044  5047               	movf	_pBDTEntryEP0OutNext+1,w,c
 30716  006046  22DA               	addwfc	fsr2h,f,c
 30717  006048  0E30               	movlw	48
 30718  00604A  6EDE               	movwf	postinc2,c
 30719  00604C  0E04               	movlw	4
 30720  00604E  6EDD               	movwf	postdec2,c
 30721                           
 30722                           ; BSR set to: 0
 30723                           ;usb_device.c: 2190: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 30724  006050  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30725  006054  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30726  006058  0E0C               	movlw	12
 30727  00605A  6EDF               	movwf	indf2,c
 30728                           
 30729                           ; BSR set to: 0
 30730                           ;usb_device.c: 2191: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 30731  00605C  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30732  006060  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30733  006064  0E00               	movlw	0
 30734  006066  8EDB               	bsf	plusw2,7,c
 30735                           
 30736                           ;usb_device.c: 2192: }
 30737  006068  0012               	return	
 30738  00606A                     i2l9790:
 30739                           
 30740                           ; BSR set to: 0
 30741                           ;usb_device.c: 2193: else
 30742                           ;usb_device.c: 2194: {
 30743                           ;usb_device.c: 2195: BothEP0OutUOWNsSet = 0;
 30744  00606A  0E00               	movlw	0
 30745  00606C  0100               	movlb	0	; () banked
 30746  00606E  6FCD               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 30747                           
 30748                           ; BSR set to: 0
 30749  006070  0012               	return	
 30750  006072                     __end_of_USBCtrlTrfOutHandler:
 30751                           	opt stack 0
 30752                           pclatu	equ	0xFFB
 30753                           pclath	equ	0xFFA
 30754                           tblptru	equ	0xFF8
 30755                           tblptrh	equ	0xFF7
 30756                           tblptrl	equ	0xFF6
 30757                           tablat	equ	0xFF5
 30758                           prodh	equ	0xFF4
 30759                           prodl	equ	0xFF3
 30760                           intcon	equ	0xFF2
 30761                           intcon3	equ	0xFF0
 30762                           indf0	equ	0xFEF
 30763                           postinc0	equ	0xFEE
 30764                           fsr0h	equ	0xFEA
 30765                           fsr0l	equ	0xFE9
 30766                           wreg	equ	0xFE8
 30767                           indf1	equ	0xFE7
 30768                           postdec1	equ	0xFE5
 30769                           fsr1h	equ	0xFE2
 30770                           fsr1l	equ	0xFE1
 30771                           indf2	equ	0xFDF
 30772                           postinc2	equ	0xFDE
 30773                           postdec2	equ	0xFDD
 30774                           plusw2	equ	0xFDB
 30775                           fsr2h	equ	0xFDA
 30776                           fsr2l	equ	0xFD9
 30777                           status	equ	0xFD8
 30778                           
 30779 ;; *************** function _USBCtrlTrfRxService *****************
 30780 ;; Defined at:
 30781 ;;		line 1518 in file "../Includes/Usb/Framework/usb_device.c"
 30782 ;; Parameters:    Size  Location     Type
 30783 ;;		None
 30784 ;; Auto vars:     Size  Location     Type
 30785 ;;  byteToRead      1   18[COMRAM] unsigned char 
 30786 ;;  i               1   17[COMRAM] unsigned char 
 30787 ;; Return value:  Size  Location     Type
 30788 ;;		None               void
 30789 ;; Registers used:
 30790 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 30791 ;; Tracked objects:
 30792 ;;		On entry : 0/0
 30793 ;;		On exit  : 0/0
 30794 ;;		Unchanged: 0/0
 30795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 30796 ;;      Params:         0       0       0       0       0       0       0       0       0
 30797 ;;      Locals:         2       0       0       0       0       0       0       0       0
 30798 ;;      Temps:          0       0       0       0       0       0       0       0       0
 30799 ;;      Totals:         2       0       0       0       0       0       0       0       0
 30800 ;;Total ram usage:        2 bytes
 30801 ;; Hardware stack levels used:    1
 30802 ;; Hardware stack levels required when called:    2
 30803 ;; This function calls:
 30804 ;;		_USART_mySetLineCodingHandler
 30805 ;;		_USBCtrlEPAllowStatusStage
 30806 ;; This function is called by:
 30807 ;;		_USBCtrlTrfOutHandler
 30808 ;; This function uses a non-reentrant model
 30809 ;;
 30810                           
 30811                           	psect	text128
 30812  003A78                     __ptext128:
 30813                           	opt stack 0
 30814  003A78                     _USBCtrlTrfRxService:
 30815                           	opt stack 15
 30816                           
 30817                           ;usb_device.c: 1520: uint8_t byteToRead;
 30818                           ;usb_device.c: 1521: uint8_t i;
 30819                           ;usb_device.c: 1525: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 30820                           
 30821                           ;incstack = 0
 30822  003A78  EE20 F001          	lfsr	2,1
 30823  003A7C  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 30824  003A7E  26D9               	addwf	fsr2l,f,c
 30825  003A80  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 30826  003A82  22DA               	addwfc	fsr2h,f,c
 30827  003A84  50DF               	movf	indf2,w,c
 30828  003A86  6E13               	movwf	USBCtrlTrfRxService@byteToRead,c
 30829                           
 30830                           ;usb_device.c: 1531: if(byteToRead > outPipes[0].wCount.Val)
 30831  003A88  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 30832  003A8A  5C32               	subwf	_outPipes+4,w,c	;volatile
 30833  003A8C  0E00               	movlw	0
 30834  003A8E  5833               	subwfb	_outPipes+5,w,c	;volatile
 30835  003A90  A0D8               	btfss	status,0,c
 30836                           
 30837                           ;usb_device.c: 1532: {
 30838                           ;usb_device.c: 1533: byteToRead = outPipes[0].wCount.Val;
 30839  003A92  C032  F013         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 30840                           
 30841                           ;usb_device.c: 1534: }
 30842                           ;usb_device.c: 1536: outPipes[0].wCount.Val -= byteToRead;
 30843  003A96  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 30844  003A98  5E32               	subwf	_outPipes+4,f,c	;volatile
 30845  003A9A  0E00               	movlw	0
 30846  003A9C  5A33               	subwfb	_outPipes+5,f,c	;volatile
 30847                           
 30848                           ;usb_device.c: 1540: for(i=0;i<byteToRead;i++)
 30849  003A9E  0E00               	movlw	0
 30850  003AA0  6E12               	movwf	USBCtrlTrfRxService@i,c
 30851  003AA2  D011               	goto	i2l8396
 30852  003AA4                     i2l8390:
 30853                           
 30854                           ;usb_device.c: 1541: {
 30855                           ;usb_device.c: 1542: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 30856  003AA4  5012               	movf	USBCtrlTrfRxService@i,w,c
 30857  003AA6  0D01               	mullw	1
 30858  003AA8  0E38               	movlw	56
 30859  003AAA  24F3               	addwf	prodl,w,c
 30860  003AAC  6ED9               	movwf	fsr2l,c
 30861  003AAE  0E04               	movlw	4
 30862  003AB0  20F4               	addwfc	prodh,w,c
 30863  003AB2  6EDA               	movwf	fsr2h,c
 30864  003AB4  C02E  FFE1         	movff	_outPipes,fsr1l	;volatile
 30865  003AB8  C02F  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 30866  003ABC  CFDF FFE7          	movff	indf2,indf1
 30867  003AC0  4A2E               	infsnz	_outPipes,f,c	;volatile
 30868  003AC2  2A2F               	incf	_outPipes+1,f,c	;volatile
 30869  003AC4  2A12               	incf	USBCtrlTrfRxService@i,f,c
 30870  003AC6                     i2l8396:
 30871  003AC6  5013               	movf	USBCtrlTrfRxService@byteToRead,w,c
 30872  003AC8  5C12               	subwf	USBCtrlTrfRxService@i,w,c
 30873  003ACA  A0D8               	btfss	status,0,c
 30874  003ACC  D7EB               	goto	i2l8390
 30875                           
 30876                           ;usb_device.c: 1543: }
 30877                           ;usb_device.c: 1547: if(outPipes[0].wCount.Val > 0)
 30878  003ACE  5032               	movf	_outPipes+4,w,c	;volatile
 30879  003AD0  1033               	iorwf	_outPipes+5,w,c	;volatile
 30880  003AD2  B4D8               	btfsc	status,2,c
 30881  003AD4  D032               	goto	i2l8412
 30882                           
 30883                           ;usb_device.c: 1548: {
 30884                           ;usb_device.c: 1549: pBDTEntryEP0OutNext->CNT = 8;
 30885  003AD6  EE20 F001          	lfsr	2,1
 30886  003ADA  5046               	movf	_pBDTEntryEP0OutNext,w,c
 30887  003ADC  26D9               	addwf	fsr2l,f,c
 30888  003ADE  5047               	movf	_pBDTEntryEP0OutNext+1,w,c
 30889  003AE0  22DA               	addwfc	fsr2h,f,c
 30890  003AE2  0E08               	movlw	8
 30891  003AE4  6EDF               	movwf	indf2,c
 30892                           
 30893                           ;usb_device.c: 1550: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 30894  003AE6  EE20 F002          	lfsr	2,2
 30895  003AEA  5046               	movf	_pBDTEntryEP0OutNext,w,c
 30896  003AEC  26D9               	addwf	fsr2l,f,c
 30897  003AEE  5047               	movf	_pBDTEntryEP0OutNext+1,w,c
 30898  003AF0  22DA               	addwfc	fsr2h,f,c
 30899  003AF2  0E38               	movlw	56
 30900  003AF4  6EDE               	movwf	postinc2,c
 30901  003AF6  0E04               	movlw	4
 30902  003AF8  6EDD               	movwf	postdec2,c
 30903                           
 30904                           ;usb_device.c: 1551: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 30905  003AFA  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 30906  003AFE  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 30907  003B02  BCDF               	btfsc	indf2,6,c
 30908  003B04  D00D               	goto	i2l8408
 30909                           
 30910                           ;usb_device.c: 1552: {
 30911                           ;usb_device.c: 1553: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 30912  003B06  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30913  003B0A  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30914  003B0E  0E48               	movlw	72
 30915  003B10  6EDF               	movwf	indf2,c
 30916                           
 30917                           ;usb_device.c: 1554: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 30918  003B12  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30919  003B16  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30920  003B1A  0E00               	movlw	0
 30921  003B1C  8EDB               	bsf	plusw2,7,c
 30922                           
 30923                           ;usb_device.c: 1555: }
 30924  003B1E  0012               	return	
 30925  003B20                     i2l8408:
 30926                           
 30927                           ;usb_device.c: 1556: else
 30928                           ;usb_device.c: 1557: {
 30929                           ;usb_device.c: 1558: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 30930  003B20  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30931  003B24  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30932  003B28  0E08               	movlw	8
 30933  003B2A  6EDF               	movwf	indf2,c
 30934                           
 30935                           ;usb_device.c: 1559: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 30936  003B2C  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30937  003B30  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30938  003B34  0E00               	movlw	0
 30939  003B36  8EDB               	bsf	plusw2,7,c
 30940                           
 30941                           ;usb_device.c: 1560: }
 30942                           ;usb_device.c: 1561: }
 30943  003B38  0012               	return	
 30944  003B3A                     i2l8412:
 30945                           
 30946                           ;usb_device.c: 1562: else
 30947                           ;usb_device.c: 1563: {
 30948                           ;usb_device.c: 1567: pBDTEntryEP0OutNext->CNT = 8;
 30949  003B3A  EE20 F001          	lfsr	2,1
 30950  003B3E  5046               	movf	_pBDTEntryEP0OutNext,w,c
 30951  003B40  26D9               	addwf	fsr2l,f,c
 30952  003B42  5047               	movf	_pBDTEntryEP0OutNext+1,w,c
 30953  003B44  22DA               	addwfc	fsr2h,f,c
 30954  003B46  0E08               	movlw	8
 30955  003B48  6EDF               	movwf	indf2,c
 30956                           
 30957                           ;usb_device.c: 1568: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 30958  003B4A  EE20 F002          	lfsr	2,2
 30959  003B4E  5046               	movf	_pBDTEntryEP0OutNext,w,c
 30960  003B50  26D9               	addwf	fsr2l,f,c
 30961  003B52  5047               	movf	_pBDTEntryEP0OutNext+1,w,c
 30962  003B54  22DA               	addwfc	fsr2h,f,c
 30963  003B56  0E30               	movlw	48
 30964  003B58  6EDE               	movwf	postinc2,c
 30965  003B5A  0E04               	movlw	4
 30966  003B5C  6EDD               	movwf	postdec2,c
 30967                           
 30968                           ;usb_device.c: 1572: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 30969  003B5E  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30970  003B62  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30971  003B66  0E04               	movlw	4
 30972  003B68  6EDF               	movwf	indf2,c
 30973                           
 30974                           ;usb_device.c: 1573: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 30975  003B6A  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 30976  003B6E  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 30977  003B72  0E00               	movlw	0
 30978  003B74  8EDB               	bsf	plusw2,7,c
 30979                           
 30980                           ;usb_device.c: 1580: if(outPipes[0].pFunc != (0))
 30981  003B76  5034               	movf	_outPipes+6,w,c	;volatile
 30982  003B78  1035               	iorwf	_outPipes+7,w,c	;volatile
 30983  003B7A  B4D8               	btfsc	status,2,c
 30984  003B7C  D00E               	goto	i2l8422
 30985                           
 30986                           ;usb_device.c: 1581: {
 30987                           ;usb_device.c: 1586: outPipes[0].pFunc();
 30988  003B7E  EE20  F034         	lfsr	2,_outPipes+6	;volatile
 30989  003B82  D801               	call	i2u656_48
 30990  003B84  D00A               	goto	i2l8422
 30991  003B86                     i2u656_48:
 30992  003B86  0005               	push	
 30993  003B88  6EFA               	movwf	pclath,c
 30994  003B8A  50DE               	movf	postinc2,w,c
 30995  003B8C  6EFD               	movwf	tosl,c
 30996  003B8E  50DE               	movf	postinc2,w,c
 30997  003B90  6EFE               	movwf	tosh,c
 30998  003B92  50F8               	movf	tblptru,w,c
 30999  003B94  6EFF               	movwf	tosu,c
 31000  003B96  50FA               	movf	pclath,w,c
 31001  003B98  0012               	return		;indir
 31002  003B9A                     i2l8422:
 31003                           
 31004                           ;usb_device.c: 1588: }
 31005                           ;usb_device.c: 1589: outPipes[0].info.bits.busy = 0;
 31006  003B9A  9E31               	bcf	_outPipes+3,7,c	;volatile
 31007                           
 31008                           ;usb_device.c: 1603: if(USBDeferStatusStagePacket == 0)
 31009  003B9C  504E               	movf	_USBDeferStatusStagePacket,w,c	;volatile
 31010  003B9E  A4D8               	btfss	status,2,c
 31011  003BA0  0012               	return	
 31012                           
 31013                           ;usb_device.c: 1604: {
 31014                           ;usb_device.c: 1605: USBCtrlEPAllowStatusStage();
 31015  003BA2  EC94  F027         	call	_USBCtrlEPAllowStatusStage	;wreg free
 31016  003BA6  0012               	return	
 31017  003BA8                     __end_of_USBCtrlTrfRxService:
 31018                           	opt stack 0
 31019                           tosu	equ	0xFFF
 31020                           tosh	equ	0xFFE
 31021                           tosl	equ	0xFFD
 31022                           pclatu	equ	0xFFB
 31023                           pclath	equ	0xFFA
 31024                           tblptru	equ	0xFF8
 31025                           tblptrh	equ	0xFF7
 31026                           tblptrl	equ	0xFF6
 31027                           tablat	equ	0xFF5
 31028                           prodh	equ	0xFF4
 31029                           prodl	equ	0xFF3
 31030                           intcon	equ	0xFF2
 31031                           intcon3	equ	0xFF0
 31032                           indf0	equ	0xFEF
 31033                           postinc0	equ	0xFEE
 31034                           fsr0h	equ	0xFEA
 31035                           fsr0l	equ	0xFE9
 31036                           wreg	equ	0xFE8
 31037                           indf1	equ	0xFE7
 31038                           postdec1	equ	0xFE5
 31039                           fsr1h	equ	0xFE2
 31040                           fsr1l	equ	0xFE1
 31041                           indf2	equ	0xFDF
 31042                           postinc2	equ	0xFDE
 31043                           postdec2	equ	0xFDD
 31044                           plusw2	equ	0xFDB
 31045                           fsr2h	equ	0xFDA
 31046                           fsr2l	equ	0xFD9
 31047                           status	equ	0xFD8
 31048                           
 31049 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 31050 ;; Defined at:
 31051 ;;		line 1104 in file "../Includes/Usb/Framework/usb_device.c"
 31052 ;; Parameters:    Size  Location     Type
 31053 ;;		None
 31054 ;; Auto vars:     Size  Location     Type
 31055 ;;		None
 31056 ;; Return value:  Size  Location     Type
 31057 ;;		None               void
 31058 ;; Registers used:
 31059 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31060 ;; Tracked objects:
 31061 ;;		On entry : 0/0
 31062 ;;		On exit  : 0/0
 31063 ;;		Unchanged: 0/0
 31064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31065 ;;      Params:         0       0       0       0       0       0       0       0       0
 31066 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31067 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31068 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31069 ;;Total ram usage:        0 bytes
 31070 ;; Hardware stack levels used:    1
 31071 ;; This function calls:
 31072 ;;		Nothing
 31073 ;; This function is called by:
 31074 ;;		_USBDeviceTasks
 31075 ;;		_USBCtrlEPServiceComplete
 31076 ;;		_USBCtrlTrfRxService
 31077 ;; This function uses a non-reentrant model
 31078 ;;
 31079                           
 31080                           	psect	text129
 31081  004F28                     __ptext129:
 31082                           	opt stack 0
 31083  004F28                     _USBCtrlEPAllowStatusStage:
 31084                           	opt stack 16
 31085                           
 31086                           ;usb_device.c: 1111: if(USBStatusStageEnabledFlag1 == 0)
 31087                           
 31088                           ;incstack = 0
 31089  004F28  0100               	movlb	0	; () banked
 31090  004F2A  51D3               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 31091  004F2C  A4D8               	btfss	status,2,c
 31092  004F2E  0012               	return	
 31093                           
 31094                           ; BSR set to: 0
 31095                           ;usb_device.c: 1112: {
 31096                           ;usb_device.c: 1113: USBStatusStageEnabledFlag1 = 1;
 31097  004F30  0E01               	movlw	1
 31098  004F32  0100               	movlb	0	; () banked
 31099  004F34  6FD3               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 31100                           
 31101                           ;usb_device.c: 1114: if(USBStatusStageEnabledFlag2 == 0)
 31102  004F36  0100               	movlb	0	; () banked
 31103  004F38  51D4               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 31104  004F3A  A4D8               	btfss	status,2,c
 31105  004F3C  0012               	return	
 31106                           
 31107                           ; BSR set to: 0
 31108                           ;usb_device.c: 1115: {
 31109                           ;usb_device.c: 1116: USBStatusStageEnabledFlag2 = 1;
 31110  004F3E  0E01               	movlw	1
 31111  004F40  0100               	movlb	0	; () banked
 31112  004F42  6FD4               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 31113                           
 31114                           ; BSR set to: 0
 31115                           ;usb_device.c: 1120: if(controlTransferState == 2)
 31116  004F44  0E02               	movlw	2
 31117  004F46  1851               	xorwf	_controlTransferState,w,c	;volatile
 31118  004F48  A4D8               	btfss	status,2,c
 31119  004F4A  D015               	goto	i2l7934
 31120                           
 31121                           ; BSR set to: 0
 31122                           ;usb_device.c: 1121: {
 31123                           ;usb_device.c: 1122: pBDTEntryIn[0]->CNT = 0;
 31124  004F4C  EE20 F001          	lfsr	2,1
 31125  004F50  503C               	movf	_pBDTEntryIn,w,c
 31126  004F52  26D9               	addwf	fsr2l,f,c
 31127  004F54  503D               	movf	_pBDTEntryIn+1,w,c
 31128  004F56  22DA               	addwfc	fsr2h,f,c
 31129  004F58  0E00               	movlw	0
 31130  004F5A  6EDF               	movwf	indf2,c
 31131                           
 31132                           ; BSR set to: 0
 31133                           ;usb_device.c: 1123: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 31134  004F5C  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 31135  004F60  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31136  004F64  0E48               	movlw	72
 31137  004F66  6EDF               	movwf	indf2,c
 31138                           
 31139                           ; BSR set to: 0
 31140                           ;usb_device.c: 1124: pBDTEntryIn[0]->STAT.Val |= 0x80;
 31141  004F68  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 31142  004F6C  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31143  004F70  0E00               	movlw	0
 31144  004F72  8EDB               	bsf	plusw2,7,c
 31145                           
 31146                           ;usb_device.c: 1125: }
 31147  004F74  0012               	return	
 31148  004F76                     i2l7934:
 31149                           
 31150                           ; BSR set to: 0
 31151                           ;usb_device.c: 1126: else if(controlTransferState == 1)
 31152  004F76  0451               	decf	_controlTransferState,w,c	;volatile
 31153  004F78  A4D8               	btfss	status,2,c
 31154  004F7A  0012               	return	
 31155                           
 31156                           ; BSR set to: 0
 31157                           ;usb_device.c: 1127: {
 31158                           ;usb_device.c: 1128: BothEP0OutUOWNsSet = 0;
 31159  004F7C  0E00               	movlw	0
 31160  004F7E  0100               	movlb	0	; () banked
 31161  004F80  6FCD               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 31162                           
 31163                           ; BSR set to: 0
 31164                           ;usb_device.c: 1132: pBDTEntryEP0OutCurrent->CNT = 8;
 31165  004F82  EE20 F001          	lfsr	2,1
 31166  004F86  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 31167  004F88  26D9               	addwf	fsr2l,f,c
 31168  004F8A  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 31169  004F8C  22DA               	addwfc	fsr2h,f,c
 31170  004F8E  0E08               	movlw	8
 31171  004F90  6EDF               	movwf	indf2,c
 31172                           
 31173                           ; BSR set to: 0
 31174                           ;usb_device.c: 1133: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 31175  004F92  EE20 F002          	lfsr	2,2
 31176  004F96  5044               	movf	_pBDTEntryEP0OutCurrent,w,c
 31177  004F98  26D9               	addwf	fsr2l,f,c
 31178  004F9A  5045               	movf	_pBDTEntryEP0OutCurrent+1,w,c
 31179  004F9C  22DA               	addwfc	fsr2h,f,c
 31180  004F9E  0E30               	movlw	48
 31181  004FA0  6EDE               	movwf	postinc2,c
 31182  004FA2  0E04               	movlw	4
 31183  004FA4  6EDD               	movwf	postdec2,c
 31184                           
 31185                           ; BSR set to: 0
 31186                           ;usb_device.c: 1134: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 31187  004FA6  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 31188  004FAA  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 31189  004FAE  0E04               	movlw	4
 31190  004FB0  6EDF               	movwf	indf2,c
 31191                           
 31192                           ; BSR set to: 0
 31193                           ;usb_device.c: 1135: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 31194  004FB2  C044  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 31195  004FB6  C045  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 31196  004FBA  0E00               	movlw	0
 31197  004FBC  8EDB               	bsf	plusw2,7,c
 31198                           
 31199                           ; BSR set to: 0
 31200                           ;usb_device.c: 1136: BothEP0OutUOWNsSet = 1;
 31201  004FBE  0E01               	movlw	1
 31202  004FC0  0100               	movlb	0	; () banked
 31203  004FC2  6FCD               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 31204                           
 31205                           ; BSR set to: 0
 31206                           ;usb_device.c: 1139: pBDTEntryEP0OutNext->CNT = 8;
 31207  004FC4  EE20 F001          	lfsr	2,1
 31208  004FC8  5046               	movf	_pBDTEntryEP0OutNext,w,c
 31209  004FCA  26D9               	addwf	fsr2l,f,c
 31210  004FCC  5047               	movf	_pBDTEntryEP0OutNext+1,w,c
 31211  004FCE  22DA               	addwfc	fsr2h,f,c
 31212  004FD0  0E08               	movlw	8
 31213  004FD2  6EDF               	movwf	indf2,c
 31214                           
 31215                           ; BSR set to: 0
 31216                           ;usb_device.c: 1140: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 31217  004FD4  EE20 F002          	lfsr	2,2
 31218  004FD8  5046               	movf	_pBDTEntryEP0OutNext,w,c
 31219  004FDA  26D9               	addwf	fsr2l,f,c
 31220  004FDC  5047               	movf	_pBDTEntryEP0OutNext+1,w,c
 31221  004FDE  22DA               	addwfc	fsr2h,f,c
 31222  004FE0  0E30               	movlw	48
 31223  004FE2  6EDE               	movwf	postinc2,c
 31224  004FE4  0E04               	movlw	4
 31225  004FE6  6EDD               	movwf	postdec2,c
 31226                           
 31227                           ; BSR set to: 0
 31228                           ;usb_device.c: 1141: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 31229  004FE8  C046  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 31230  004FEC  C047  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 31231  004FF0  0E80               	movlw	128
 31232  004FF2  6EDF               	movwf	indf2,c
 31233                           
 31234                           ; BSR set to: 0
 31235                           
 31236                           ; BSR set to: 0
 31237                           
 31238                           ; BSR set to: 0
 31239  004FF4  0012               	return	
 31240  004FF6                     __end_of_USBCtrlEPAllowStatusStage:
 31241                           	opt stack 0
 31242                           tosu	equ	0xFFF
 31243                           tosh	equ	0xFFE
 31244                           tosl	equ	0xFFD
 31245                           pclatu	equ	0xFFB
 31246                           pclath	equ	0xFFA
 31247                           tblptru	equ	0xFF8
 31248                           tblptrh	equ	0xFF7
 31249                           tblptrl	equ	0xFF6
 31250                           tablat	equ	0xFF5
 31251                           prodh	equ	0xFF4
 31252                           prodl	equ	0xFF3
 31253                           intcon	equ	0xFF2
 31254                           intcon3	equ	0xFF0
 31255                           indf0	equ	0xFEF
 31256                           postinc0	equ	0xFEE
 31257                           fsr0h	equ	0xFEA
 31258                           fsr0l	equ	0xFE9
 31259                           wreg	equ	0xFE8
 31260                           indf1	equ	0xFE7
 31261                           postdec1	equ	0xFE5
 31262                           fsr1h	equ	0xFE2
 31263                           fsr1l	equ	0xFE1
 31264                           indf2	equ	0xFDF
 31265                           postinc2	equ	0xFDE
 31266                           postdec2	equ	0xFDD
 31267                           plusw2	equ	0xFDB
 31268                           fsr2h	equ	0xFDA
 31269                           fsr2l	equ	0xFD9
 31270                           status	equ	0xFD8
 31271                           
 31272 ;; *************** function _USBCtrlTrfInHandler *****************
 31273 ;; Defined at:
 31274 ;;		line 2223 in file "../Includes/Usb/Framework/usb_device.c"
 31275 ;; Parameters:    Size  Location     Type
 31276 ;;		None
 31277 ;; Auto vars:     Size  Location     Type
 31278 ;;  lastDTS         1   17[COMRAM] unsigned char 
 31279 ;; Return value:  Size  Location     Type
 31280 ;;		None               void
 31281 ;; Registers used:
 31282 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
 31283 ;; Tracked objects:
 31284 ;;		On entry : 0/0
 31285 ;;		On exit  : 0/0
 31286 ;;		Unchanged: 0/0
 31287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31288 ;;      Params:         0       0       0       0       0       0       0       0       0
 31289 ;;      Locals:         1       0       0       0       0       0       0       0       0
 31290 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31291 ;;      Totals:         1       0       0       0       0       0       0       0       0
 31292 ;;Total ram usage:        1 bytes
 31293 ;; Hardware stack levels used:    1
 31294 ;; Hardware stack levels required when called:    2
 31295 ;; This function calls:
 31296 ;;		_USART_mySetLineCodingHandler
 31297 ;;		_USBCtrlTrfTxService
 31298 ;; This function is called by:
 31299 ;;		_USBCtrlEPService
 31300 ;; This function uses a non-reentrant model
 31301 ;;
 31302                           
 31303                           	psect	text130
 31304  00486C                     __ptext130:
 31305                           	opt stack 0
 31306  00486C                     _USBCtrlTrfInHandler:
 31307                           	opt stack 16
 31308                           
 31309                           ;usb_device.c: 2225: uint8_t lastDTS;
 31310                           ;usb_device.c: 2227: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 31311                           
 31312                           ; BSR set to: 0
 31313                           ;incstack = 0
 31314  00486C  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 31315  004870  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31316  004874  0E00               	movlw	0
 31317  004876  BCDF               	btfsc	indf2,6,c
 31318  004878  0E01               	movlw	1
 31319  00487A  6E12               	movwf	USBCtrlTrfInHandler@lastDTS,c
 31320                           
 31321                           ;usb_device.c: 2230: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 31322  00487C  0E04               	movlw	4
 31323  00487E  1A3C               	xorwf	_pBDTEntryIn,f,c
 31324                           
 31325                           ;usb_device.c: 2235: if(USBDeviceState == ADR_PENDING_STATE)
 31326  004880  0E08               	movlw	8
 31327  004882  0100               	movlb	0	; () banked
 31328  004884  19D2               	xorwf	_USBDeviceState& (0+255),w,b	;volatile
 31329  004886  A4D8               	btfss	status,2,c
 31330  004888  D00C               	goto	i2l9806
 31331                           
 31332                           ; BSR set to: 0
 31333                           ;usb_device.c: 2236: {
 31334                           ;usb_device.c: 2237: UADDR = (SetupPkt.bDevADR & 0x7F);
 31335  00488A  0104               	movlb	4	; () banked
 31336  00488C  5132               	movf	50,w,b	;volatile
 31337  00488E  0B7F               	andlw	127
 31338  004890  6E63               	movwf	3939,c	;volatile
 31339                           
 31340                           ; BSR set to: 4
 31341                           ;usb_device.c: 2238: if(UADDR != 0u)
 31342  004892  5063               	movf	3939,w,c	;volatile
 31343  004894  B4D8               	btfsc	status,2,c
 31344  004896  D002               	goto	i2l9804
 31345                           
 31346                           ; BSR set to: 4
 31347                           ;usb_device.c: 2239: {
 31348                           ;usb_device.c: 2240: USBDeviceState=ADDRESS_STATE;
 31349  004898  0E10               	movlw	16
 31350  00489A  D001               	goto	L35
 31351  00489C                     i2l9804:
 31352                           
 31353                           ;usb_device.c: 2242: else
 31354                           ;usb_device.c: 2243: {
 31355                           ;usb_device.c: 2244: USBDeviceState=DEFAULT_STATE;
 31356  00489C  0E04               	movlw	4
 31357  00489E                     L35:
 31358  00489E  0100               	movlb	0	; () banked
 31359  0048A0  6FD2               	movwf	_USBDeviceState& (0+255),b	;volatile
 31360  0048A2                     i2l9806:
 31361                           
 31362                           ; BSR set to: 0
 31363                           ;usb_device.c: 2245: }
 31364                           ;usb_device.c: 2246: }
 31365                           ;usb_device.c: 2249: if(controlTransferState == 1)
 31366  0048A2  0451               	decf	_controlTransferState,w,c	;volatile
 31367  0048A4  A4D8               	btfss	status,2,c
 31368  0048A6  D03A               	goto	i2l1915
 31369                           
 31370                           ; BSR set to: 0
 31371                           ;usb_device.c: 2250: {
 31372                           ;usb_device.c: 2251: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 31373  0048A8  EE20 F002          	lfsr	2,2
 31374  0048AC  503C               	movf	_pBDTEntryIn,w,c
 31375  0048AE  26D9               	addwf	fsr2l,f,c
 31376  0048B0  503D               	movf	_pBDTEntryIn+1,w,c
 31377  0048B2  22DA               	addwfc	fsr2h,f,c
 31378  0048B4  0E38               	movlw	56
 31379  0048B6  6EDE               	movwf	postinc2,c
 31380  0048B8  0E04               	movlw	4
 31381  0048BA  6EDD               	movwf	postdec2,c
 31382                           
 31383                           ; BSR set to: 0
 31384                           ;usb_device.c: 2252: USBCtrlTrfTxService();
 31385  0048BC  ECFB  F027         	call	_USBCtrlTrfTxService	;wreg free
 31386                           
 31387                           ;usb_device.c: 2258: if(shortPacketStatus == 2)
 31388  0048C0  0E02               	movlw	2
 31389  0048C2  1857               	xorwf	_shortPacketStatus,w,c	;volatile
 31390  0048C4  A4D8               	btfss	status,2,c
 31391  0048C6  D00D               	goto	i2l9818
 31392                           
 31393                           ;usb_device.c: 2259: {
 31394                           ;usb_device.c: 2262: pBDTEntryIn[0]->STAT.Val = 0x04;
 31395  0048C8  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 31396  0048CC  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31397  0048D0  0E04               	movlw	4
 31398  0048D2  6EDF               	movwf	indf2,c
 31399                           
 31400                           ;usb_device.c: 2263: pBDTEntryIn[0]->STAT.Val |= 0x80;
 31401  0048D4  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 31402  0048D8  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31403  0048DC  0E00               	movlw	0
 31404  0048DE  8EDB               	bsf	plusw2,7,c
 31405                           
 31406                           ;usb_device.c: 2264: }
 31407  0048E0  0012               	return	
 31408  0048E2                     i2l9818:
 31409                           
 31410                           ;usb_device.c: 2265: else
 31411                           ;usb_device.c: 2266: {
 31412                           ;usb_device.c: 2267: if(lastDTS == 0)
 31413  0048E2  5012               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 31414  0048E4  A4D8               	btfss	status,2,c
 31415  0048E6  D00D               	goto	i2l9824
 31416                           
 31417                           ;usb_device.c: 2268: {
 31418                           ;usb_device.c: 2269: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 31419  0048E8  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 31420  0048EC  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31421  0048F0  0E48               	movlw	72
 31422  0048F2  6EDF               	movwf	indf2,c
 31423                           
 31424                           ;usb_device.c: 2270: pBDTEntryIn[0]->STAT.Val |= 0x80;
 31425  0048F4  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 31426  0048F8  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31427  0048FC  0E00               	movlw	0
 31428  0048FE  8EDB               	bsf	plusw2,7,c
 31429                           
 31430                           ;usb_device.c: 2271: }
 31431  004900  0012               	return	
 31432  004902                     i2l9824:
 31433                           
 31434                           ;usb_device.c: 2272: else
 31435                           ;usb_device.c: 2273: {
 31436                           ;usb_device.c: 2274: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 31437  004902  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 31438  004906  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31439  00490A  0E08               	movlw	8
 31440  00490C  6EDF               	movwf	indf2,c
 31441                           
 31442                           ;usb_device.c: 2275: pBDTEntryIn[0]->STAT.Val |= 0x80;
 31443  00490E  C03C  FFD9         	movff	_pBDTEntryIn,fsr2l
 31444  004912  C03D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 31445  004916  0E00               	movlw	0
 31446  004918  8EDB               	bsf	plusw2,7,c
 31447                           
 31448                           ;usb_device.c: 2276: }
 31449                           ;usb_device.c: 2277: }
 31450                           ;usb_device.c: 2278: }
 31451  00491A  0012               	return	
 31452  00491C                     i2l1915:
 31453                           
 31454                           ; BSR set to: 0
 31455                           ;usb_device.c: 2279: else
 31456                           ;usb_device.c: 2280: {
 31457                           ;usb_device.c: 2284: if(outPipes[0].info.bits.busy == 1)
 31458  00491C  AE31               	btfss	_outPipes+3,7,c	;volatile
 31459  00491E  D013               	goto	i2l9834
 31460                           
 31461                           ; BSR set to: 0
 31462                           ;usb_device.c: 2285: {
 31463                           ;usb_device.c: 2286: if(outPipes[0].pFunc != (0))
 31464  004920  5034               	movf	_outPipes+6,w,c	;volatile
 31465  004922  1035               	iorwf	_outPipes+7,w,c	;volatile
 31466  004924  B4D8               	btfsc	status,2,c
 31467  004926  D00E               	goto	i2l9832
 31468                           
 31469                           ; BSR set to: 0
 31470                           ;usb_device.c: 2287: {
 31471                           ;usb_device.c: 2288: outPipes[0].pFunc();
 31472  004928  EE20  F034         	lfsr	2,_outPipes+6	;volatile
 31473  00492C  D801               	call	i2u842_48
 31474  00492E  D00A               	goto	i2l9832
 31475  004930                     i2u842_48:
 31476  004930  0005               	push	
 31477  004932  6EFA               	movwf	pclath,c
 31478  004934  50DE               	movf	postinc2,w,c
 31479  004936  6EFD               	movwf	tosl,c
 31480  004938  50DE               	movf	postinc2,w,c
 31481  00493A  6EFE               	movwf	tosh,c
 31482  00493C  50F8               	movf	tblptru,w,c
 31483  00493E  6EFF               	movwf	tosu,c
 31484  004940  50FA               	movf	pclath,w,c
 31485  004942  0012               	return		;indir
 31486  004944                     i2l9832:
 31487                           
 31488                           ;usb_device.c: 2289: }
 31489                           ;usb_device.c: 2290: outPipes[0].info.bits.busy = 0;
 31490  004944  9E31               	bcf	_outPipes+3,7,c	;volatile
 31491  004946                     i2l9834:
 31492                           
 31493                           ;usb_device.c: 2291: }
 31494                           ;usb_device.c: 2293: controlTransferState = 0;
 31495  004946  0E00               	movlw	0
 31496  004948  6E51               	movwf	_controlTransferState,c	;volatile
 31497  00494A  0012               	return	
 31498  00494C                     __end_of_USBCtrlTrfInHandler:
 31499                           	opt stack 0
 31500                           tosu	equ	0xFFF
 31501                           tosh	equ	0xFFE
 31502                           tosl	equ	0xFFD
 31503                           pclatu	equ	0xFFB
 31504                           pclath	equ	0xFFA
 31505                           tblptru	equ	0xFF8
 31506                           tblptrh	equ	0xFF7
 31507                           tblptrl	equ	0xFF6
 31508                           tablat	equ	0xFF5
 31509                           prodh	equ	0xFF4
 31510                           prodl	equ	0xFF3
 31511                           intcon	equ	0xFF2
 31512                           intcon3	equ	0xFF0
 31513                           indf0	equ	0xFEF
 31514                           postinc0	equ	0xFEE
 31515                           fsr0h	equ	0xFEA
 31516                           fsr0l	equ	0xFE9
 31517                           wreg	equ	0xFE8
 31518                           indf1	equ	0xFE7
 31519                           postdec1	equ	0xFE5
 31520                           fsr1h	equ	0xFE2
 31521                           fsr1l	equ	0xFE1
 31522                           indf2	equ	0xFDF
 31523                           postinc2	equ	0xFDE
 31524                           postdec2	equ	0xFDD
 31525                           plusw2	equ	0xFDB
 31526                           fsr2h	equ	0xFDA
 31527                           fsr2l	equ	0xFD9
 31528                           status	equ	0xFD8
 31529                           
 31530 ;; *************** function _USBCtrlTrfTxService *****************
 31531 ;; Defined at:
 31532 ;;		line 1437 in file "../Includes/Usb/Framework/usb_device.c"
 31533 ;; Parameters:    Size  Location     Type
 31534 ;;		None
 31535 ;; Auto vars:     Size  Location     Type
 31536 ;;  byteToSend      1    0[COMRAM] unsigned char 
 31537 ;; Return value:  Size  Location     Type
 31538 ;;		None               void
 31539 ;; Registers used:
 31540 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 31541 ;; Tracked objects:
 31542 ;;		On entry : 0/0
 31543 ;;		On exit  : 0/0
 31544 ;;		Unchanged: 0/0
 31545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31546 ;;      Params:         0       0       0       0       0       0       0       0       0
 31547 ;;      Locals:         1       0       0       0       0       0       0       0       0
 31548 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31549 ;;      Totals:         1       0       0       0       0       0       0       0       0
 31550 ;;Total ram usage:        1 bytes
 31551 ;; Hardware stack levels used:    1
 31552 ;; This function calls:
 31553 ;;		Nothing
 31554 ;; This function is called by:
 31555 ;;		_USBCtrlEPAllowDataStage
 31556 ;;		_USBCtrlTrfInHandler
 31557 ;; This function uses a non-reentrant model
 31558 ;;
 31559                           
 31560                           	psect	text131
 31561  004FF6                     __ptext131:
 31562                           	opt stack 0
 31563  004FF6                     _USBCtrlTrfTxService:
 31564                           	opt stack 15
 31565                           
 31566                           ;usb_device.c: 1439: uint8_t byteToSend;
 31567                           ;usb_device.c: 1443: byteToSend = 8;
 31568                           
 31569                           ;incstack = 0
 31570  004FF6  0E08               	movlw	8
 31571  004FF8  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 31572                           
 31573                           ;usb_device.c: 1444: if(inPipes[0].wCount.Val < (uint8_t)8)
 31574  004FFA  503B               	movf	_inPipes+5,w,c	;volatile
 31575  004FFC  E110               	bnz	i2l7752
 31576  004FFE  0E08               	movlw	8
 31577  005000  5C3A               	subwf	_inPipes+4,w,c	;volatile
 31578  005002  B0D8               	btfsc	status,0,c
 31579  005004  D00C               	goto	i2l7752
 31580                           
 31581                           ;usb_device.c: 1445: {
 31582                           ;usb_device.c: 1446: byteToSend = inPipes[0].wCount.Val;
 31583  005006  C03A  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 31584                           
 31585                           ;usb_device.c: 1453: if(shortPacketStatus == 0)
 31586  00500A  5057               	movf	_shortPacketStatus,w,c	;volatile
 31587  00500C  A4D8               	btfss	status,2,c
 31588  00500E  D002               	goto	i2l7748
 31589                           
 31590                           ;usb_device.c: 1454: {
 31591                           ;usb_device.c: 1455: shortPacketStatus = 1;
 31592  005010  0E01               	movlw	1
 31593  005012  D004               	goto	L36
 31594  005014                     i2l7748:
 31595                           
 31596                           ;usb_device.c: 1457: else if(shortPacketStatus == 1)
 31597  005014  0457               	decf	_shortPacketStatus,w,c	;volatile
 31598  005016  A4D8               	btfss	status,2,c
 31599  005018  D002               	goto	i2l7752
 31600                           
 31601                           ;usb_device.c: 1458: {
 31602                           ;usb_device.c: 1459: shortPacketStatus = 2;
 31603  00501A  0E02               	movlw	2
 31604  00501C                     L36:
 31605  00501C  6E57               	movwf	_shortPacketStatus,c	;volatile
 31606  00501E                     i2l7752:
 31607                           
 31608                           ;usb_device.c: 1460: }
 31609                           ;usb_device.c: 1461: }
 31610                           ;usb_device.c: 1465: inPipes[0].wCount.Val -= byteToSend;
 31611  00501E  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 31612  005020  5E3A               	subwf	_inPipes+4,f,c	;volatile
 31613  005022  0E00               	movlw	0
 31614  005024  5A3B               	subwfb	_inPipes+5,f,c	;volatile
 31615                           
 31616                           ;usb_device.c: 1470: pBDTEntryIn[0]->CNT = byteToSend;
 31617  005026  EE20 F001          	lfsr	2,1
 31618  00502A  503C               	movf	_pBDTEntryIn,w,c
 31619  00502C  26D9               	addwf	fsr2l,f,c
 31620  00502E  503D               	movf	_pBDTEntryIn+1,w,c
 31621  005030  22DA               	addwfc	fsr2h,f,c
 31622  005032  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 31623                           
 31624                           ;usb_device.c: 1474: pDst = (volatile uint8_t*)CtrlTrfData;
 31625  005036  0E38               	movlw	56
 31626  005038  0101               	movlb	1	; () banked
 31627  00503A  6F5A               	movwf	_pDst& (0+255),b
 31628  00503C  0E04               	movlw	4
 31629  00503E  0101               	movlb	1	; () banked
 31630  005040  6F5B               	movwf	(_pDst+1)& (0+255),b
 31631                           
 31632                           ; BSR set to: 1
 31633                           ;usb_device.c: 1475: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 31634  005042  A039               	btfss	_inPipes+3,0,c	;volatile
 31635  005044  D01C               	goto	i2l7770
 31636  005046  D03A               	goto	i2l7780
 31637  005048                     i2l7762:
 31638                           
 31639                           ; BSR set to: 1
 31640                           ;usb_device.c: 1478: {
 31641                           ;usb_device.c: 1479: *pDst++ = *inPipes[0].pSrc.bRom++;
 31642  005048  C036  FFF6         	movff	_inPipes,tblptrl	;volatile
 31643  00504C  C037  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 31644  005050  6AF8               	clrf	tblptru,c
 31645  005052  C15A  FFD9         	movff	_pDst,fsr2l
 31646  005056  C15B  FFDA         	movff	_pDst+1,fsr2h
 31647  00505A  0E07               	movlw	(high __ramtop+-1)
 31648  00505C  64F7               	cpfsgt	tblptrh,c
 31649  00505E  D003               	bra	i2u568_47
 31650  005060  0008               	tblrd		*
 31651  005062  50F5               	movf	tablat,w,c
 31652  005064  D005               	bra	i2u568_40
 31653  005066                     i2u568_47:
 31654  005066  CFF6 FFE9          	movff	tblptrl,fsr0l
 31655  00506A  CFF7 FFEA          	movff	tblptrh,fsr0h
 31656  00506E  50EF               	movf	indf0,w,c
 31657  005070                     i2u568_40:
 31658  005070  6EDF               	movwf	indf2,c
 31659  005072  4A36               	infsnz	_inPipes,f,c	;volatile
 31660  005074  2A37               	incf	_inPipes+1,f,c	;volatile
 31661  005076  0101               	movlb	1	; () banked
 31662  005078  4B5A               	infsnz	_pDst& (0+255),f,b
 31663  00507A  2B5B               	incf	(_pDst+1)& (0+255),f,b
 31664                           
 31665                           ; BSR set to: 1
 31666                           ;usb_device.c: 1480: byteToSend--;
 31667  00507C  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 31668  00507E                     i2l7770:
 31669                           
 31670                           ; BSR set to: 1
 31671  00507E  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 31672  005080  B4D8               	btfsc	status,2,c
 31673  005082  0012               	return	
 31674  005084  D7E1               	goto	i2l7762
 31675  005086                     i2l7772:
 31676                           
 31677                           ; BSR set to: 1
 31678                           ;usb_device.c: 1486: {
 31679                           ;usb_device.c: 1487: *pDst++ = *inPipes[0].pSrc.bRam++;
 31680  005086  C036  FFF6         	movff	_inPipes,tblptrl	;volatile
 31681  00508A  C037  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 31682  00508E  6AF8               	clrf	tblptru,c
 31683  005090  C15A  FFD9         	movff	_pDst,fsr2l
 31684  005094  C15B  FFDA         	movff	_pDst+1,fsr2h
 31685  005098  0E07               	movlw	(high __ramtop+-1)
 31686  00509A  64F7               	cpfsgt	tblptrh,c
 31687  00509C  D003               	bra	i2u570_47
 31688  00509E  0008               	tblrd		*
 31689  0050A0  50F5               	movf	tablat,w,c
 31690  0050A2  D005               	bra	i2u570_40
 31691  0050A4                     i2u570_47:
 31692  0050A4  CFF6 FFE9          	movff	tblptrl,fsr0l
 31693  0050A8  CFF7 FFEA          	movff	tblptrh,fsr0h
 31694  0050AC  50EF               	movf	indf0,w,c
 31695  0050AE                     i2u570_40:
 31696  0050AE  6EDF               	movwf	indf2,c
 31697  0050B0  4A36               	infsnz	_inPipes,f,c	;volatile
 31698  0050B2  2A37               	incf	_inPipes+1,f,c	;volatile
 31699  0050B4  0101               	movlb	1	; () banked
 31700  0050B6  4B5A               	infsnz	_pDst& (0+255),f,b
 31701  0050B8  2B5B               	incf	(_pDst+1)& (0+255),f,b
 31702                           
 31703                           ; BSR set to: 1
 31704                           ;usb_device.c: 1488: byteToSend--;
 31705  0050BA  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 31706  0050BC                     i2l7780:
 31707                           
 31708                           ; BSR set to: 1
 31709  0050BC  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 31710  0050BE  B4D8               	btfsc	status,2,c
 31711  0050C0  0012               	return	
 31712  0050C2  D7E1               	goto	i2l7772
 31713  0050C4                     __end_of_USBCtrlTrfTxService:
 31714                           	opt stack 0
 31715                           tosu	equ	0xFFF
 31716                           tosh	equ	0xFFE
 31717                           tosl	equ	0xFFD
 31718                           pclatu	equ	0xFFB
 31719                           pclath	equ	0xFFA
 31720                           tblptru	equ	0xFF8
 31721                           tblptrh	equ	0xFF7
 31722                           tblptrl	equ	0xFF6
 31723                           tablat	equ	0xFF5
 31724                           prodh	equ	0xFF4
 31725                           prodl	equ	0xFF3
 31726                           intcon	equ	0xFF2
 31727                           intcon3	equ	0xFF0
 31728                           indf0	equ	0xFEF
 31729                           postinc0	equ	0xFEE
 31730                           fsr0h	equ	0xFEA
 31731                           fsr0l	equ	0xFE9
 31732                           wreg	equ	0xFE8
 31733                           indf1	equ	0xFE7
 31734                           postdec1	equ	0xFE5
 31735                           fsr1h	equ	0xFE2
 31736                           fsr1l	equ	0xFE1
 31737                           indf2	equ	0xFDF
 31738                           postinc2	equ	0xFDE
 31739                           postdec2	equ	0xFDD
 31740                           plusw2	equ	0xFDB
 31741                           fsr2h	equ	0xFDA
 31742                           fsr2l	equ	0xFD9
 31743                           status	equ	0xFD8
 31744                           
 31745 ;; *************** function _USART_mySetLineCodingHandler *****************
 31746 ;; Defined at:
 31747 ;;		line 273 in file "../Includes/Board/USBapp.c"
 31748 ;; Parameters:    Size  Location     Type
 31749 ;;		None
 31750 ;; Auto vars:     Size  Location     Type
 31751 ;;  dwBaud          4   13[COMRAM] unsigned long 
 31752 ;; Return value:  Size  Location     Type
 31753 ;;		None               void
 31754 ;; Registers used:
 31755 ;;		wreg, status,2, status,0, cstack
 31756 ;; Tracked objects:
 31757 ;;		On entry : 0/0
 31758 ;;		On exit  : 0/0
 31759 ;;		Unchanged: 0/0
 31760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31761 ;;      Params:         0       0       0       0       0       0       0       0       0
 31762 ;;      Locals:         4       0       0       0       0       0       0       0       0
 31763 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31764 ;;      Totals:         4       0       0       0       0       0       0       0       0
 31765 ;;Total ram usage:        4 bytes
 31766 ;; Hardware stack levels used:    1
 31767 ;; Hardware stack levels required when called:    1
 31768 ;; This function calls:
 31769 ;;		___lldiv
 31770 ;;		i2_EUSART_Initialize
 31771 ;; This function is called by:
 31772 ;;		_USBCheckCDCRequest
 31773 ;;		_USBCtrlTrfRxService
 31774 ;;		_USBCtrlTrfInHandler
 31775 ;; This function uses a non-reentrant model
 31776 ;;
 31777                           
 31778                           	psect	text132
 31779  0061DE                     __ptext132:
 31780                           	opt stack 0
 31781  0061DE                     _USART_mySetLineCodingHandler:
 31782                           	opt stack 15
 31783                           
 31784                           ;USBapp.c: 276: {line_coding.dwDTERate=cdc_notice.GetLineCoding.dwDTERate;};
 31785                           
 31786                           ; BSR set to: 1
 31787                           ;incstack = 0
 31788  0061DE  C1CC  F1DE         	movff	_cdc_notice,_line_coding
 31789  0061E2  C1CD  F1DF         	movff	_cdc_notice+1,_line_coding+1
 31790  0061E6  C1CE  F1E0         	movff	_cdc_notice+2,_line_coding+2
 31791  0061EA  C1CF  F1E1         	movff	_cdc_notice+3,_line_coding+3
 31792                           
 31793                           ;USBapp.c: 278: uint32_t dwBaud;
 31794                           ;USBapp.c: 279: dwBaud = ((48000000/4) / line_coding.dwDTERate) - 1;
 31795  0061EE  0E00               	movlw	0
 31796  0061F0  6E01               	movwf	___lldiv@dividend,c
 31797  0061F2  0E1B               	movlw	27
 31798  0061F4  6E02               	movwf	___lldiv@dividend+1,c
 31799  0061F6  0EB7               	movlw	183
 31800  0061F8  6E03               	movwf	___lldiv@dividend+2,c
 31801  0061FA  0E00               	movlw	0
 31802  0061FC  6E04               	movwf	___lldiv@dividend+3,c
 31803  0061FE  C1DE  F005         	movff	_line_coding,___lldiv@divisor
 31804  006202  C1DF  F006         	movff	_line_coding+1,___lldiv@divisor+1
 31805  006206  C1E0  F007         	movff	_line_coding+2,___lldiv@divisor+2
 31806  00620A  C1E1  F008         	movff	_line_coding+3,___lldiv@divisor+3
 31807  00620E  EC19  F02D         	call	___lldiv	;wreg free
 31808  006212  0EFF               	movlw	255
 31809  006214  2401               	addwf	?___lldiv,w,c
 31810  006216  6E0E               	movwf	USART_mySetLineCodingHandler@dwBaud,c
 31811  006218  0EFF               	movlw	255
 31812  00621A  2002               	addwfc	?___lldiv+1,w,c
 31813  00621C  6E0F               	movwf	USART_mySetLineCodingHandler@dwBaud+1,c
 31814  00621E  0EFF               	movlw	255
 31815  006220  2003               	addwfc	?___lldiv+2,w,c
 31816  006222  6E10               	movwf	USART_mySetLineCodingHandler@dwBaud+2,c
 31817  006224  0EFF               	movlw	255
 31818  006226  2004               	addwfc	?___lldiv+3,w,c
 31819  006228  6E11               	movwf	USART_mySetLineCodingHandler@dwBaud+3,c
 31820                           
 31821                           ;USBapp.c: 280: SPBRG = (uint8_t) dwBaud;
 31822  00622A  C00E  FFAF         	movff	USART_mySetLineCodingHandler@dwBaud,4015	;volatile
 31823                           
 31824                           ;USBapp.c: 281: SPBRGH = (uint8_t)((uint16_t) (dwBaud >> 8));
 31825  00622E  C00F  FFB0         	movff	USART_mySetLineCodingHandler@dwBaud+1,4016	;volatile
 31826                           
 31827                           ;USBapp.c: 283: EUSART_Initialize();
 31828  006232  EC6A  F032         	call	i2_EUSART_Initialize	;wreg free
 31829  006236  0012               	return		;funcret
 31830  006238                     __end_of_USART_mySetLineCodingHandler:
 31831                           	opt stack 0
 31832                           tosu	equ	0xFFF
 31833                           tosh	equ	0xFFE
 31834                           tosl	equ	0xFFD
 31835                           pclatu	equ	0xFFB
 31836                           pclath	equ	0xFFA
 31837                           tblptru	equ	0xFF8
 31838                           tblptrh	equ	0xFF7
 31839                           tblptrl	equ	0xFF6
 31840                           tablat	equ	0xFF5
 31841                           prodh	equ	0xFF4
 31842                           prodl	equ	0xFF3
 31843                           intcon	equ	0xFF2
 31844                           intcon3	equ	0xFF0
 31845                           indf0	equ	0xFEF
 31846                           postinc0	equ	0xFEE
 31847                           fsr0h	equ	0xFEA
 31848                           fsr0l	equ	0xFE9
 31849                           wreg	equ	0xFE8
 31850                           indf1	equ	0xFE7
 31851                           postdec1	equ	0xFE5
 31852                           fsr1h	equ	0xFE2
 31853                           fsr1l	equ	0xFE1
 31854                           indf2	equ	0xFDF
 31855                           postinc2	equ	0xFDE
 31856                           postdec2	equ	0xFDD
 31857                           plusw2	equ	0xFDB
 31858                           fsr2h	equ	0xFDA
 31859                           fsr2l	equ	0xFD9
 31860                           status	equ	0xFD8
 31861                           
 31862 ;; *************** function i2_EUSART_Initialize *****************
 31863 ;; Defined at:
 31864 ;;		line 77 in file "../Includes/MccGenerated/eusart.c"
 31865 ;; Parameters:    Size  Location     Type
 31866 ;;		None
 31867 ;; Auto vars:     Size  Location     Type
 31868 ;;		None
 31869 ;; Return value:  Size  Location     Type
 31870 ;;		None               void
 31871 ;; Registers used:
 31872 ;;		wreg, status,2
 31873 ;; Tracked objects:
 31874 ;;		On entry : 0/0
 31875 ;;		On exit  : 0/0
 31876 ;;		Unchanged: 0/0
 31877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 31878 ;;      Params:         0       0       0       0       0       0       0       0       0
 31879 ;;      Locals:         0       0       0       0       0       0       0       0       0
 31880 ;;      Temps:          0       0       0       0       0       0       0       0       0
 31881 ;;      Totals:         0       0       0       0       0       0       0       0       0
 31882 ;;Total ram usage:        0 bytes
 31883 ;; Hardware stack levels used:    1
 31884 ;; This function calls:
 31885 ;;		Nothing
 31886 ;; This function is called by:
 31887 ;;		_USBapp_CdcEmulatorInitialize
 31888 ;;		_USART_mySetLineCodingHandler
 31889 ;; This function uses a non-reentrant model
 31890 ;;
 31891                           
 31892                           	psect	text133
 31893  0064D4                     __ptext133:
 31894                           	opt stack 0
 31895  0064D4                     i2_EUSART_Initialize:
 31896                           	opt stack 17
 31897                           
 31898                           ;eusart.c: 80: PIE1bits.RCIE = 0;
 31899                           
 31900                           ;incstack = 0
 31901  0064D4  9A9D               	bcf	3997,5,c	;volatile
 31902                           
 31903                           ;eusart.c: 81: PIE1bits.TXIE = 0;
 31904  0064D6  989D               	bcf	3997,4,c	;volatile
 31905                           
 31906                           ;eusart.c: 85: BAUDCON = 0x48;
 31907  0064D8  0E48               	movlw	72
 31908  0064DA  6EB8               	movwf	4024,c	;volatile
 31909                           
 31910                           ;eusart.c: 88: RCSTA = 0x90;
 31911  0064DC  0E90               	movlw	144
 31912  0064DE  6EAB               	movwf	4011,c	;volatile
 31913                           
 31914                           ;eusart.c: 91: TXSTA = 0x26;
 31915  0064E0  0E26               	movlw	38
 31916  0064E2  6EAC               	movwf	4012,c	;volatile
 31917                           
 31918                           ;eusart.c: 95: SPBRG = 0xD0;
 31919  0064E4  0ED0               	movlw	208
 31920  0064E6  6EAF               	movwf	4015,c	;volatile
 31921                           
 31922                           ;eusart.c: 100: SPBRGH = 0x00;
 31923  0064E8  0E00               	movlw	0
 31924  0064EA  6EB0               	movwf	4016,c	;volatile
 31925                           
 31926                           ;eusart.c: 103: eusartTxHead = 0;
 31927  0064EC  0E00               	movlw	0
 31928  0064EE  0100               	movlb	0	; () banked
 31929  0064F0  6FE1               	movwf	_eusartTxHead& (0+255),b
 31930                           
 31931                           ;eusart.c: 104: eusartTxTail = 0;
 31932  0064F2  0E00               	movlw	0
 31933  0064F4  0100               	movlb	0	; () banked
 31934  0064F6  6FE2               	movwf	_eusartTxTail& (0+255),b
 31935                           
 31936                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 31937  0064F8  0E40               	movlw	64
 31938  0064FA  6E54               	movwf	_eusartTxBufferRemaining,c	;volatile
 31939                           
 31940                           ;eusart.c: 107: eusartRxHead = 0;
 31941  0064FC  0E00               	movlw	0
 31942  0064FE  0100               	movlb	0	; () banked
 31943  006500  6FDF               	movwf	_eusartRxHead& (0+255),b
 31944                           
 31945                           ;eusart.c: 108: eusartRxTail = 0;
 31946  006502  0E00               	movlw	0
 31947  006504  0100               	movlb	0	; () banked
 31948  006506  6FE0               	movwf	_eusartRxTail& (0+255),b
 31949                           
 31950                           ;eusart.c: 109: eusartRxCount = 0;
 31951  006508  0E00               	movlw	0
 31952  00650A  6E53               	movwf	_eusartRxCount,c	;volatile
 31953                           
 31954                           ; BSR set to: 0
 31955                           ;eusart.c: 112: PIE1bits.RCIE = 1;
 31956  00650C  8A9D               	bsf	3997,5,c	;volatile
 31957                           
 31958                           ; BSR set to: 0
 31959                           ;eusart.c: 114: RCSTAbits.CREN = 1;
 31960  00650E  88AB               	bsf	4011,4,c	;volatile
 31961                           
 31962                           ; BSR set to: 0
 31963  006510  0012               	return		;funcret
 31964  006512                     __end_ofi2_EUSART_Initialize:
 31965                           	opt stack 0
 31966                           tosu	equ	0xFFF
 31967                           tosh	equ	0xFFE
 31968                           tosl	equ	0xFFD
 31969                           pclatu	equ	0xFFB
 31970                           pclath	equ	0xFFA
 31971                           tblptru	equ	0xFF8
 31972                           tblptrh	equ	0xFF7
 31973                           tblptrl	equ	0xFF6
 31974                           tablat	equ	0xFF5
 31975                           prodh	equ	0xFF4
 31976                           prodl	equ	0xFF3
 31977                           intcon	equ	0xFF2
 31978                           intcon3	equ	0xFF0
 31979                           indf0	equ	0xFEF
 31980                           postinc0	equ	0xFEE
 31981                           fsr0h	equ	0xFEA
 31982                           fsr0l	equ	0xFE9
 31983                           wreg	equ	0xFE8
 31984                           indf1	equ	0xFE7
 31985                           postdec1	equ	0xFE5
 31986                           fsr1h	equ	0xFE2
 31987                           fsr1l	equ	0xFE1
 31988                           indf2	equ	0xFDF
 31989                           postinc2	equ	0xFDE
 31990                           postdec2	equ	0xFDD
 31991                           plusw2	equ	0xFDB
 31992                           fsr2h	equ	0xFDA
 31993                           fsr2l	equ	0xFD9
 31994                           status	equ	0xFD8
 31995                           
 31996 ;; *************** function ___lldiv *****************
 31997 ;; Defined at:
 31998 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lldiv.c"
 31999 ;; Parameters:    Size  Location     Type
 32000 ;;  dividend        4    0[COMRAM] unsigned long 
 32001 ;;  divisor         4    4[COMRAM] unsigned long 
 32002 ;; Auto vars:     Size  Location     Type
 32003 ;;  quotient        4    8[COMRAM] unsigned long 
 32004 ;;  counter         1   12[COMRAM] unsigned char 
 32005 ;; Return value:  Size  Location     Type
 32006 ;;                  4    0[COMRAM] unsigned long 
 32007 ;; Registers used:
 32008 ;;		wreg, status,2, status,0
 32009 ;; Tracked objects:
 32010 ;;		On entry : 0/0
 32011 ;;		On exit  : 0/0
 32012 ;;		Unchanged: 0/0
 32013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32014 ;;      Params:         8       0       0       0       0       0       0       0       0
 32015 ;;      Locals:         5       0       0       0       0       0       0       0       0
 32016 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32017 ;;      Totals:        13       0       0       0       0       0       0       0       0
 32018 ;;Total ram usage:       13 bytes
 32019 ;; Hardware stack levels used:    1
 32020 ;; This function calls:
 32021 ;;		Nothing
 32022 ;; This function is called by:
 32023 ;;		_USART_mySetLineCodingHandler
 32024 ;; This function uses a non-reentrant model
 32025 ;;
 32026                           
 32027                           	psect	text134
 32028  005A32                     __ptext134:
 32029                           	opt stack 0
 32030  005A32                     ___lldiv:
 32031                           	opt stack 15
 32032                           
 32033                           ; BSR set to: 0
 32034                           ;incstack = 0
 32035  005A32  0E00               	movlw	0
 32036  005A34  6E09               	movwf	___lldiv@quotient,c
 32037  005A36  0E00               	movlw	0
 32038  005A38  6E0A               	movwf	___lldiv@quotient+1,c
 32039  005A3A  0E00               	movlw	0
 32040  005A3C  6E0B               	movwf	___lldiv@quotient+2,c
 32041  005A3E  0E00               	movlw	0
 32042  005A40  6E0C               	movwf	___lldiv@quotient+3,c
 32043  005A42  5005               	movf	___lldiv@divisor,w,c
 32044  005A44  1006               	iorwf	___lldiv@divisor+1,w,c
 32045  005A46  1007               	iorwf	___lldiv@divisor+2,w,c
 32046  005A48  1008               	iorwf	___lldiv@divisor+3,w,c
 32047  005A4A  B4D8               	btfsc	status,2,c
 32048  005A4C  D02A               	goto	i2l2457
 32049  005A4E  0E01               	movlw	1
 32050  005A50  6E0D               	movwf	___lldiv@counter,c
 32051  005A52  D006               	goto	i2l7790
 32052  005A54                     i2l7788:
 32053  005A54  90D8               	bcf	status,0,c
 32054  005A56  3605               	rlcf	___lldiv@divisor,f,c
 32055  005A58  3606               	rlcf	___lldiv@divisor+1,f,c
 32056  005A5A  3607               	rlcf	___lldiv@divisor+2,f,c
 32057  005A5C  3608               	rlcf	___lldiv@divisor+3,f,c
 32058  005A5E  2A0D               	incf	___lldiv@counter,f,c
 32059  005A60                     i2l7790:
 32060  005A60  AE08               	btfss	___lldiv@divisor+3,7,c
 32061  005A62  D7F8               	goto	i2l7788
 32062  005A64                     i2l7792:
 32063  005A64  90D8               	bcf	status,0,c
 32064  005A66  3609               	rlcf	___lldiv@quotient,f,c
 32065  005A68  360A               	rlcf	___lldiv@quotient+1,f,c
 32066  005A6A  360B               	rlcf	___lldiv@quotient+2,f,c
 32067  005A6C  360C               	rlcf	___lldiv@quotient+3,f,c
 32068  005A6E  5005               	movf	___lldiv@divisor,w,c
 32069  005A70  5C01               	subwf	___lldiv@dividend,w,c
 32070  005A72  5006               	movf	___lldiv@divisor+1,w,c
 32071  005A74  5802               	subwfb	___lldiv@dividend+1,w,c
 32072  005A76  5007               	movf	___lldiv@divisor+2,w,c
 32073  005A78  5803               	subwfb	___lldiv@dividend+2,w,c
 32074  005A7A  5008               	movf	___lldiv@divisor+3,w,c
 32075  005A7C  5804               	subwfb	___lldiv@dividend+3,w,c
 32076  005A7E  A0D8               	btfss	status,0,c
 32077  005A80  D009               	goto	i2l7800
 32078  005A82  5005               	movf	___lldiv@divisor,w,c
 32079  005A84  5E01               	subwf	___lldiv@dividend,f,c
 32080  005A86  5006               	movf	___lldiv@divisor+1,w,c
 32081  005A88  5A02               	subwfb	___lldiv@dividend+1,f,c
 32082  005A8A  5007               	movf	___lldiv@divisor+2,w,c
 32083  005A8C  5A03               	subwfb	___lldiv@dividend+2,f,c
 32084  005A8E  5008               	movf	___lldiv@divisor+3,w,c
 32085  005A90  5A04               	subwfb	___lldiv@dividend+3,f,c
 32086  005A92  8009               	bsf	___lldiv@quotient,0,c
 32087  005A94                     i2l7800:
 32088  005A94  90D8               	bcf	status,0,c
 32089  005A96  3208               	rrcf	___lldiv@divisor+3,f,c
 32090  005A98  3207               	rrcf	___lldiv@divisor+2,f,c
 32091  005A9A  3206               	rrcf	___lldiv@divisor+1,f,c
 32092  005A9C  3205               	rrcf	___lldiv@divisor,f,c
 32093  005A9E  2E0D               	decfsz	___lldiv@counter,f,c
 32094  005AA0  D7E1               	goto	i2l7792
 32095  005AA2                     i2l2457:
 32096  005AA2  C009  F001         	movff	___lldiv@quotient,?___lldiv
 32097  005AA6  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 32098  005AAA  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 32099  005AAE  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 32100  005AB2  0012               	return		;funcret
 32101  005AB4                     __end_of___lldiv:
 32102                           	opt stack 0
 32103                           tosu	equ	0xFFF
 32104                           tosh	equ	0xFFE
 32105                           tosl	equ	0xFFD
 32106                           pclatu	equ	0xFFB
 32107                           pclath	equ	0xFFA
 32108                           tblptru	equ	0xFF8
 32109                           tblptrh	equ	0xFF7
 32110                           tblptrl	equ	0xFF6
 32111                           tablat	equ	0xFF5
 32112                           prodh	equ	0xFF4
 32113                           prodl	equ	0xFF3
 32114                           intcon	equ	0xFF2
 32115                           intcon3	equ	0xFF0
 32116                           indf0	equ	0xFEF
 32117                           postinc0	equ	0xFEE
 32118                           fsr0h	equ	0xFEA
 32119                           fsr0l	equ	0xFE9
 32120                           wreg	equ	0xFE8
 32121                           indf1	equ	0xFE7
 32122                           postdec1	equ	0xFE5
 32123                           fsr1h	equ	0xFE2
 32124                           fsr1l	equ	0xFE1
 32125                           indf2	equ	0xFDF
 32126                           postinc2	equ	0xFDE
 32127                           postdec2	equ	0xFDD
 32128                           plusw2	equ	0xFDB
 32129                           fsr2h	equ	0xFDA
 32130                           fsr2l	equ	0xFD9
 32131                           status	equ	0xFD8
 32132                           
 32133 ;; *************** function _TMRapp_Tick *****************
 32134 ;; Defined at:
 32135 ;;		line 45 in file "../Includes/Drivers/TMRapp.c"
 32136 ;; Parameters:    Size  Location     Type
 32137 ;;		None
 32138 ;; Auto vars:     Size  Location     Type
 32139 ;;		None
 32140 ;; Return value:  Size  Location     Type
 32141 ;;		None               void
 32142 ;; Registers used:
 32143 ;;		None
 32144 ;; Tracked objects:
 32145 ;;		On entry : 0/0
 32146 ;;		On exit  : 0/0
 32147 ;;		Unchanged: 0/0
 32148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32149 ;;      Params:         0       0       0       0       0       0       0       0       0
 32150 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32151 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32152 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32153 ;;Total ram usage:        0 bytes
 32154 ;; Hardware stack levels used:    1
 32155 ;; This function calls:
 32156 ;;		Nothing
 32157 ;; This function is called by:
 32158 ;;		_INTERRUPT_InterruptManager
 32159 ;; This function uses a non-reentrant model
 32160 ;;
 32161                           
 32162                           	psect	text135
 32163  006B5E                     __ptext135:
 32164                           	opt stack 0
 32165  006B5E                     _TMRapp_Tick:
 32166                           	opt stack 20
 32167                           
 32168                           ;TMRapp.c: 48: appTimer.mSecTick = 1;
 32169                           
 32170                           ;incstack = 0
 32171  006B5E  0100               	movlb	0	; () banked
 32172  006B60  81D7               	bsf	_appTimer& (0+255),0,b
 32173                           
 32174                           ; BSR set to: 0
 32175  006B62  0012               	return		;funcret
 32176  006B64                     __end_of_TMRapp_Tick:
 32177                           	opt stack 0
 32178                           tosu	equ	0xFFF
 32179                           tosh	equ	0xFFE
 32180                           tosl	equ	0xFFD
 32181                           pclatu	equ	0xFFB
 32182                           pclath	equ	0xFFA
 32183                           tblptru	equ	0xFF8
 32184                           tblptrh	equ	0xFF7
 32185                           tblptrl	equ	0xFF6
 32186                           tablat	equ	0xFF5
 32187                           prodh	equ	0xFF4
 32188                           prodl	equ	0xFF3
 32189                           intcon	equ	0xFF2
 32190                           intcon3	equ	0xFF0
 32191                           indf0	equ	0xFEF
 32192                           postinc0	equ	0xFEE
 32193                           fsr0h	equ	0xFEA
 32194                           fsr0l	equ	0xFE9
 32195                           wreg	equ	0xFE8
 32196                           indf1	equ	0xFE7
 32197                           postdec1	equ	0xFE5
 32198                           fsr1h	equ	0xFE2
 32199                           fsr1l	equ	0xFE1
 32200                           indf2	equ	0xFDF
 32201                           postinc2	equ	0xFDE
 32202                           postdec2	equ	0xFDD
 32203                           plusw2	equ	0xFDB
 32204                           fsr2h	equ	0xFDA
 32205                           fsr2l	equ	0xFD9
 32206                           status	equ	0xFD8
 32207                           
 32208 ;; *************** function _TMR3_ISR *****************
 32209 ;; Defined at:
 32210 ;;		line 161 in file "../Includes/MccGenerated/tmr3.c"
 32211 ;; Parameters:    Size  Location     Type
 32212 ;;		None
 32213 ;; Auto vars:     Size  Location     Type
 32214 ;;		None
 32215 ;; Return value:  Size  Location     Type
 32216 ;;		None               void
 32217 ;; Registers used:
 32218 ;;		wreg, status,2
 32219 ;; Tracked objects:
 32220 ;;		On entry : 0/0
 32221 ;;		On exit  : 0/0
 32222 ;;		Unchanged: 0/0
 32223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32224 ;;      Params:         0       0       0       0       0       0       0       0       0
 32225 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32226 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32227 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32228 ;;Total ram usage:        0 bytes
 32229 ;; Hardware stack levels used:    1
 32230 ;; This function calls:
 32231 ;;		Nothing
 32232 ;; This function is called by:
 32233 ;;		_INTERRUPT_InterruptManager
 32234 ;; This function uses a non-reentrant model
 32235 ;;
 32236                           
 32237                           	psect	text136
 32238  006968                     __ptext136:
 32239                           	opt stack 0
 32240  006968                     _TMR3_ISR:
 32241                           	opt stack 20
 32242                           
 32243                           ;tmr3.c: 164: PIR2bits.TMR3IF = 0;
 32244                           
 32245                           ; BSR set to: 0
 32246                           ;incstack = 0
 32247  006968  92A1               	bcf	4001,1,c	;volatile
 32248                           
 32249                           ;tmr3.c: 167: if(LATEbits.LATE2 == 1)
 32250  00696A  A48D               	btfss	3981,2,c	;volatile
 32251  00696C  D006               	goto	i2l1582
 32252                           
 32253                           ;tmr3.c: 168: {
 32254                           ;tmr3.c: 169: LATEbits.LATE2 = 0;
 32255  00696E  948D               	bcf	3981,2,c	;volatile
 32256                           
 32257                           ;tmr3.c: 170: TMR3H = 0xD5;
 32258  006970  0ED5               	movlw	213
 32259  006972  6EB3               	movwf	4019,c	;volatile
 32260                           
 32261                           ;tmr3.c: 171: TMR3L = 0xD0;
 32262  006974  0ED0               	movlw	208
 32263  006976  6EB2               	movwf	4018,c	;volatile
 32264                           
 32265                           ;tmr3.c: 172: } else {
 32266  006978  0012               	return	
 32267  00697A                     i2l1582:
 32268                           
 32269                           ;tmr3.c: 173: LATEbits.LATE2 = 1;
 32270  00697A  848D               	bsf	3981,2,c	;volatile
 32271                           
 32272                           ;tmr3.c: 174: TMR3H = 0xFB;
 32273  00697C  0EFB               	movlw	251
 32274  00697E  6EB3               	movwf	4019,c	;volatile
 32275                           
 32276                           ;tmr3.c: 175: TMR3L = 0x50;
 32277  006980  0E50               	movlw	80
 32278  006982  6EB2               	movwf	4018,c	;volatile
 32279  006984  0012               	return	
 32280  006986                     __end_of_TMR3_ISR:
 32281                           	opt stack 0
 32282                           tosu	equ	0xFFF
 32283                           tosh	equ	0xFFE
 32284                           tosl	equ	0xFFD
 32285                           pclatu	equ	0xFFB
 32286                           pclath	equ	0xFFA
 32287                           tblptru	equ	0xFF8
 32288                           tblptrh	equ	0xFF7
 32289                           tblptrl	equ	0xFF6
 32290                           tablat	equ	0xFF5
 32291                           prodh	equ	0xFF4
 32292                           prodl	equ	0xFF3
 32293                           intcon	equ	0xFF2
 32294                           intcon3	equ	0xFF0
 32295                           indf0	equ	0xFEF
 32296                           postinc0	equ	0xFEE
 32297                           fsr0h	equ	0xFEA
 32298                           fsr0l	equ	0xFE9
 32299                           wreg	equ	0xFE8
 32300                           indf1	equ	0xFE7
 32301                           postdec1	equ	0xFE5
 32302                           fsr1h	equ	0xFE2
 32303                           fsr1l	equ	0xFE1
 32304                           indf2	equ	0xFDF
 32305                           postinc2	equ	0xFDE
 32306                           postdec2	equ	0xFDD
 32307                           plusw2	equ	0xFDB
 32308                           fsr2h	equ	0xFDA
 32309                           fsr2l	equ	0xFD9
 32310                           status	equ	0xFD8
 32311                           
 32312 ;; *************** function _TMR1_ISR *****************
 32313 ;; Defined at:
 32314 ;;		line 152 in file "../Includes/MccGenerated/tmr1.c"
 32315 ;; Parameters:    Size  Location     Type
 32316 ;;		None
 32317 ;; Auto vars:     Size  Location     Type
 32318 ;;		None
 32319 ;; Return value:  Size  Location     Type
 32320 ;;		None               void
 32321 ;; Registers used:
 32322 ;;		wreg, status,2
 32323 ;; Tracked objects:
 32324 ;;		On entry : 0/0
 32325 ;;		On exit  : 0/0
 32326 ;;		Unchanged: 0/0
 32327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32328 ;;      Params:         0       0       0       0       0       0       0       0       0
 32329 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32330 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32331 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32332 ;;Total ram usage:        0 bytes
 32333 ;; Hardware stack levels used:    1
 32334 ;; This function calls:
 32335 ;;		Nothing
 32336 ;; This function is called by:
 32337 ;;		_INTERRUPT_InterruptManager
 32338 ;; This function uses a non-reentrant model
 32339 ;;
 32340                           
 32341                           	psect	text137
 32342  006B04                     __ptext137:
 32343                           	opt stack 0
 32344  006B04                     _TMR1_ISR:
 32345                           	opt stack 20
 32346                           
 32347                           ;tmr1.c: 156: PIR1bits.TMR1IF = 0;
 32348                           
 32349                           ;incstack = 0
 32350  006B04  909E               	bcf	3998,0,c	;volatile
 32351                           
 32352                           ;tmr1.c: 158: TMR1H = (timer1ReloadVal >> 8);
 32353  006B06  5049               	movf	_timer1ReloadVal+1,w,c	;volatile
 32354  006B08  6ECF               	movwf	4047,c	;volatile
 32355                           
 32356                           ;tmr1.c: 159: TMR1L = timer1ReloadVal;
 32357  006B0A  C048  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 32358  006B0E  0012               	return		;funcret
 32359  006B10                     __end_of_TMR1_ISR:
 32360                           	opt stack 0
 32361                           tosu	equ	0xFFF
 32362                           tosh	equ	0xFFE
 32363                           tosl	equ	0xFFD
 32364                           pclatu	equ	0xFFB
 32365                           pclath	equ	0xFFA
 32366                           tblptru	equ	0xFF8
 32367                           tblptrh	equ	0xFF7
 32368                           tblptrl	equ	0xFF6
 32369                           tablat	equ	0xFF5
 32370                           prodh	equ	0xFF4
 32371                           prodl	equ	0xFF3
 32372                           intcon	equ	0xFF2
 32373                           intcon3	equ	0xFF0
 32374                           indf0	equ	0xFEF
 32375                           postinc0	equ	0xFEE
 32376                           fsr0h	equ	0xFEA
 32377                           fsr0l	equ	0xFE9
 32378                           wreg	equ	0xFE8
 32379                           indf1	equ	0xFE7
 32380                           postdec1	equ	0xFE5
 32381                           fsr1h	equ	0xFE2
 32382                           fsr1l	equ	0xFE1
 32383                           indf2	equ	0xFDF
 32384                           postinc2	equ	0xFDE
 32385                           postdec2	equ	0xFDD
 32386                           plusw2	equ	0xFDB
 32387                           fsr2h	equ	0xFDA
 32388                           fsr2l	equ	0xFD9
 32389                           status	equ	0xFD8
 32390                           
 32391 ;; *************** function _EUSART_Transmit_ISR *****************
 32392 ;; Defined at:
 32393 ;;		line 162 in file "../Includes/MccGenerated/eusart.c"
 32394 ;; Parameters:    Size  Location     Type
 32395 ;;		None
 32396 ;; Auto vars:     Size  Location     Type
 32397 ;;		None
 32398 ;; Return value:  Size  Location     Type
 32399 ;;		None               void
 32400 ;; Registers used:
 32401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32402 ;; Tracked objects:
 32403 ;;		On entry : 0/0
 32404 ;;		On exit  : 0/0
 32405 ;;		Unchanged: 0/0
 32406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32407 ;;      Params:         0       0       0       0       0       0       0       0       0
 32408 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32409 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32410 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32411 ;;Total ram usage:        0 bytes
 32412 ;; Hardware stack levels used:    1
 32413 ;; This function calls:
 32414 ;;		Nothing
 32415 ;; This function is called by:
 32416 ;;		_INTERRUPT_InterruptManager
 32417 ;; This function uses a non-reentrant model
 32418 ;;
 32419                           
 32420                           	psect	text138
 32421  0066A6                     __ptext138:
 32422                           	opt stack 0
 32423  0066A6                     _EUSART_Transmit_ISR:
 32424                           	opt stack 20
 32425                           
 32426                           ;eusart.c: 166: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 32427                           
 32428                           ;incstack = 0
 32429  0066A6  0E40               	movlw	64
 32430  0066A8  6054               	cpfslt	_eusartTxBufferRemaining,c	;volatile
 32431  0066AA  D016               	goto	i2l1152
 32432                           
 32433                           ;eusart.c: 167: {
 32434                           ;eusart.c: 168: TXREG = eusartTxBuffer[eusartTxTail++];
 32435  0066AC  0100               	movlb	0	; () banked
 32436  0066AE  51E2               	movf	_eusartTxTail& (0+255),w,b
 32437  0066B0  0D01               	mullw	1
 32438  0066B2  0E40               	movlw	low _eusartTxBuffer
 32439  0066B4  24F3               	addwf	prodl,w,c
 32440  0066B6  6ED9               	movwf	fsr2l,c
 32441  0066B8  0E02               	movlw	high _eusartTxBuffer
 32442  0066BA  20F4               	addwfc	prodh,w,c
 32443  0066BC  6EDA               	movwf	fsr2h,c
 32444  0066BE  50DF               	movf	indf2,w,c
 32445  0066C0  6EAD               	movwf	4013,c	;volatile
 32446                           
 32447                           ; BSR set to: 0
 32448  0066C2  0100               	movlb	0	; () banked
 32449  0066C4  2BE2               	incf	_eusartTxTail& (0+255),f,b
 32450                           
 32451                           ; BSR set to: 0
 32452                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 32453  0066C6  0E3F               	movlw	63
 32454  0066C8  0100               	movlb	0	; () banked
 32455  0066CA  65E2               	cpfsgt	_eusartTxTail& (0+255),b
 32456  0066CC  D003               	goto	i2l11358
 32457                           
 32458                           ; BSR set to: 0
 32459                           ;eusart.c: 170: {
 32460                           ;eusart.c: 171: eusartTxTail = 0;
 32461  0066CE  0E00               	movlw	0
 32462  0066D0  0100               	movlb	0	; () banked
 32463  0066D2  6FE2               	movwf	_eusartTxTail& (0+255),b
 32464  0066D4                     i2l11358:
 32465                           
 32466                           ; BSR set to: 0
 32467                           ;eusart.c: 172: }
 32468                           ;eusart.c: 173: eusartTxBufferRemaining++;
 32469  0066D4  2A54               	incf	_eusartTxBufferRemaining,f,c	;volatile
 32470                           
 32471                           ;eusart.c: 174: }
 32472  0066D6  0012               	return	
 32473  0066D8                     i2l1152:
 32474                           
 32475                           ;eusart.c: 175: else
 32476                           ;eusart.c: 176: {
 32477                           ;eusart.c: 177: PIE1bits.TXIE = 0;
 32478  0066D8  989D               	bcf	3997,4,c	;volatile
 32479  0066DA  0012               	return	
 32480  0066DC                     __end_of_EUSART_Transmit_ISR:
 32481                           	opt stack 0
 32482                           tosu	equ	0xFFF
 32483                           tosh	equ	0xFFE
 32484                           tosl	equ	0xFFD
 32485                           pclatu	equ	0xFFB
 32486                           pclath	equ	0xFFA
 32487                           tblptru	equ	0xFF8
 32488                           tblptrh	equ	0xFF7
 32489                           tblptrl	equ	0xFF6
 32490                           tablat	equ	0xFF5
 32491                           prodh	equ	0xFF4
 32492                           prodl	equ	0xFF3
 32493                           intcon	equ	0xFF2
 32494                           intcon3	equ	0xFF0
 32495                           indf0	equ	0xFEF
 32496                           postinc0	equ	0xFEE
 32497                           fsr0h	equ	0xFEA
 32498                           fsr0l	equ	0xFE9
 32499                           wreg	equ	0xFE8
 32500                           indf1	equ	0xFE7
 32501                           postdec1	equ	0xFE5
 32502                           fsr1h	equ	0xFE2
 32503                           fsr1l	equ	0xFE1
 32504                           indf2	equ	0xFDF
 32505                           postinc2	equ	0xFDE
 32506                           postdec2	equ	0xFDD
 32507                           plusw2	equ	0xFDB
 32508                           fsr2h	equ	0xFDA
 32509                           fsr2l	equ	0xFD9
 32510                           status	equ	0xFD8
 32511                           
 32512 ;; *************** function _EUSART_Receive_ISR *****************
 32513 ;; Defined at:
 32514 ;;		line 181 in file "../Includes/MccGenerated/eusart.c"
 32515 ;; Parameters:    Size  Location     Type
 32516 ;;		None
 32517 ;; Auto vars:     Size  Location     Type
 32518 ;;		None
 32519 ;; Return value:  Size  Location     Type
 32520 ;;		None               void
 32521 ;; Registers used:
 32522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32523 ;; Tracked objects:
 32524 ;;		On entry : 0/0
 32525 ;;		On exit  : 0/0
 32526 ;;		Unchanged: 0/0
 32527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32528 ;;      Params:         0       0       0       0       0       0       0       0       0
 32529 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32530 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32531 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32532 ;;Total ram usage:        0 bytes
 32533 ;; Hardware stack levels used:    1
 32534 ;; This function calls:
 32535 ;;		Nothing
 32536 ;; This function is called by:
 32537 ;;		_INTERRUPT_InterruptManager
 32538 ;; This function uses a non-reentrant model
 32539 ;;
 32540                           
 32541                           	psect	text139
 32542  0066DC                     __ptext139:
 32543                           	opt stack 0
 32544  0066DC                     _EUSART_Receive_ISR:
 32545                           	opt stack 20
 32546                           
 32547                           ;eusart.c: 183: if(1 == RCSTAbits.OERR)
 32548                           
 32549                           ;incstack = 0
 32550  0066DC  A2AB               	btfss	4011,1,c	;volatile
 32551  0066DE  D003               	goto	i2l11364
 32552                           
 32553                           ;eusart.c: 184: {
 32554                           ;eusart.c: 187: RCSTAbits.CREN = 0;
 32555  0066E0  98AB               	bcf	4011,4,c	;volatile
 32556                           
 32557                           ;eusart.c: 188: RCSTAbits.CREN = 1;
 32558  0066E2  88AB               	bsf	4011,4,c	;volatile
 32559                           
 32560                           ;eusart.c: 189: }
 32561  0066E4  0012               	return	
 32562  0066E6                     i2l11364:
 32563                           
 32564                           ;eusart.c: 190: else
 32565                           ;eusart.c: 191: {
 32566                           ;eusart.c: 193: eusartRxBuffer[eusartRxHead++] = RCREG;
 32567  0066E6  0100               	movlb	0	; () banked
 32568  0066E8  51DF               	movf	_eusartRxHead& (0+255),w,b
 32569  0066EA  0D01               	mullw	1
 32570  0066EC  0E00               	movlw	low _eusartRxBuffer
 32571  0066EE  24F3               	addwf	prodl,w,c
 32572  0066F0  6ED9               	movwf	fsr2l,c
 32573  0066F2  0E02               	movlw	high _eusartRxBuffer
 32574  0066F4  20F4               	addwfc	prodh,w,c
 32575  0066F6  6EDA               	movwf	fsr2h,c
 32576  0066F8  CFAE FFDF          	movff	4014,indf2	;volatile
 32577                           
 32578                           ; BSR set to: 0
 32579  0066FC  0100               	movlb	0	; () banked
 32580  0066FE  2BDF               	incf	_eusartRxHead& (0+255),f,b
 32581                           
 32582                           ; BSR set to: 0
 32583                           ;eusart.c: 194: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 32584  006700  0E3F               	movlw	63
 32585  006702  0100               	movlb	0	; () banked
 32586  006704  65DF               	cpfsgt	_eusartRxHead& (0+255),b
 32587  006706  D003               	goto	i2l11372
 32588                           
 32589                           ; BSR set to: 0
 32590                           ;eusart.c: 195: {
 32591                           ;eusart.c: 196: eusartRxHead = 0;
 32592  006708  0E00               	movlw	0
 32593  00670A  0100               	movlb	0	; () banked
 32594  00670C  6FDF               	movwf	_eusartRxHead& (0+255),b
 32595  00670E                     i2l11372:
 32596                           
 32597                           ; BSR set to: 0
 32598                           ;eusart.c: 197: }
 32599                           ;eusart.c: 198: eusartRxCount++;
 32600  00670E  2A53               	incf	_eusartRxCount,f,c	;volatile
 32601  006710  0012               	return	
 32602  006712                     __end_of_EUSART_Receive_ISR:
 32603                           	opt stack 0
 32604                           tosu	equ	0xFFF
 32605                           tosh	equ	0xFFE
 32606                           tosl	equ	0xFFD
 32607                           pclatu	equ	0xFFB
 32608                           pclath	equ	0xFFA
 32609                           tblptru	equ	0xFF8
 32610                           tblptrh	equ	0xFF7
 32611                           tblptrl	equ	0xFF6
 32612                           tablat	equ	0xFF5
 32613                           prodh	equ	0xFF4
 32614                           prodl	equ	0xFF3
 32615                           intcon	equ	0xFF2
 32616                           intcon3	equ	0xFF0
 32617                           indf0	equ	0xFEF
 32618                           postinc0	equ	0xFEE
 32619                           fsr0h	equ	0xFEA
 32620                           fsr0l	equ	0xFE9
 32621                           wreg	equ	0xFE8
 32622                           indf1	equ	0xFE7
 32623                           postdec1	equ	0xFE5
 32624                           fsr1h	equ	0xFE2
 32625                           fsr1l	equ	0xFE1
 32626                           indf2	equ	0xFDF
 32627                           postinc2	equ	0xFDE
 32628                           postdec2	equ	0xFDD
 32629                           plusw2	equ	0xFDB
 32630                           fsr2h	equ	0xFDA
 32631                           fsr2l	equ	0xFD9
 32632                           status	equ	0xFD8
 32633                           
 32634 ;; *************** function _CMP1_ISR *****************
 32635 ;; Defined at:
 32636 ;;		line 95 in file "../Includes/MccGenerated/cmp1.c"
 32637 ;; Parameters:    Size  Location     Type
 32638 ;;		None
 32639 ;; Auto vars:     Size  Location     Type
 32640 ;;		None
 32641 ;; Return value:  Size  Location     Type
 32642 ;;		None               void
 32643 ;; Registers used:
 32644 ;;		None
 32645 ;; Tracked objects:
 32646 ;;		On entry : 0/0
 32647 ;;		On exit  : 0/0
 32648 ;;		Unchanged: 0/0
 32649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 32650 ;;      Params:         0       0       0       0       0       0       0       0       0
 32651 ;;      Locals:         0       0       0       0       0       0       0       0       0
 32652 ;;      Temps:          0       0       0       0       0       0       0       0       0
 32653 ;;      Totals:         0       0       0       0       0       0       0       0       0
 32654 ;;Total ram usage:        0 bytes
 32655 ;; Hardware stack levels used:    1
 32656 ;; This function calls:
 32657 ;;		Nothing
 32658 ;; This function is called by:
 32659 ;;		_INTERRUPT_InterruptManager
 32660 ;; This function uses a non-reentrant model
 32661 ;;
 32662                           
 32663                           	psect	text140
 32664  006B74                     __ptext140:
 32665                           	opt stack 0
 32666  006B74                     _CMP1_ISR:
 32667                           	opt stack 20
 32668                           
 32669                           ;cmp1.c: 98: PIR2bits.C1IF = 0;
 32670                           
 32671                           ;incstack = 0
 32672  006B74  9CA1               	bcf	4001,6,c	;volatile
 32673  006B76  0012               	return		;funcret
 32674  006B78                     __end_of_CMP1_ISR:
 32675                           	opt stack 0
 32676                           tosu	equ	0xFFF
 32677                           tosh	equ	0xFFE
 32678                           tosl	equ	0xFFD
 32679                           pclatu	equ	0xFFB
 32680                           pclath	equ	0xFFA
 32681                           tblptru	equ	0xFF8
 32682                           tblptrh	equ	0xFF7
 32683                           tblptrl	equ	0xFF6
 32684                           tablat	equ	0xFF5
 32685                           prodh	equ	0xFF4
 32686                           prodl	equ	0xFF3
 32687                           intcon	equ	0xFF2
 32688                           intcon3	equ	0xFF0
 32689                           indf0	equ	0xFEF
 32690                           postinc0	equ	0xFEE
 32691                           fsr0h	equ	0xFEA
 32692                           fsr0l	equ	0xFE9
 32693                           wreg	equ	0xFE8
 32694                           indf1	equ	0xFE7
 32695                           postdec1	equ	0xFE5
 32696                           fsr1h	equ	0xFE2
 32697                           fsr1l	equ	0xFE1
 32698                           indf2	equ	0xFDF
 32699                           postinc2	equ	0xFDE
 32700                           postdec2	equ	0xFDD
 32701                           plusw2	equ	0xFDB
 32702                           fsr2h	equ	0xFDA
 32703                           fsr2l	equ	0xFD9
 32704                           status	equ	0xFD8
 32705                           tosu	equ	0xFFF
 32706                           tosh	equ	0xFFE
 32707                           tosl	equ	0xFFD
 32708                           pclatu	equ	0xFFB
 32709                           pclath	equ	0xFFA
 32710                           tblptru	equ	0xFF8
 32711                           tblptrh	equ	0xFF7
 32712                           tblptrl	equ	0xFF6
 32713                           tablat	equ	0xFF5
 32714                           prodh	equ	0xFF4
 32715                           prodl	equ	0xFF3
 32716                           intcon	equ	0xFF2
 32717                           intcon3	equ	0xFF0
 32718                           indf0	equ	0xFEF
 32719                           postinc0	equ	0xFEE
 32720                           fsr0h	equ	0xFEA
 32721                           fsr0l	equ	0xFE9
 32722                           wreg	equ	0xFE8
 32723                           indf1	equ	0xFE7
 32724                           postdec1	equ	0xFE5
 32725                           fsr1h	equ	0xFE2
 32726                           fsr1l	equ	0xFE1
 32727                           indf2	equ	0xFDF
 32728                           postinc2	equ	0xFDE
 32729                           postdec2	equ	0xFDD
 32730                           plusw2	equ	0xFDB
 32731                           fsr2h	equ	0xFDA
 32732                           fsr2l	equ	0xFD9
 32733                           status	equ	0xFD8
 32734                           
 32735                           	psect	text141
 32736  000000                     __ptext141:
 32737                           	opt stack 0
 32738                           tosu	equ	0xFFF
 32739                           tosh	equ	0xFFE
 32740                           tosl	equ	0xFFD
 32741                           pclatu	equ	0xFFB
 32742                           pclath	equ	0xFFA
 32743                           tblptru	equ	0xFF8
 32744                           tblptrh	equ	0xFF7
 32745                           tblptrl	equ	0xFF6
 32746                           tablat	equ	0xFF5
 32747                           prodh	equ	0xFF4
 32748                           prodl	equ	0xFF3
 32749                           intcon	equ	0xFF2
 32750                           intcon3	equ	0xFF0
 32751                           indf0	equ	0xFEF
 32752                           postinc0	equ	0xFEE
 32753                           fsr0h	equ	0xFEA
 32754                           fsr0l	equ	0xFE9
 32755                           wreg	equ	0xFE8
 32756                           indf1	equ	0xFE7
 32757                           postdec1	equ	0xFE5
 32758                           fsr1h	equ	0xFE2
 32759                           fsr1l	equ	0xFE1
 32760                           indf2	equ	0xFDF
 32761                           postinc2	equ	0xFDE
 32762                           postdec2	equ	0xFDD
 32763                           plusw2	equ	0xFDB
 32764                           fsr2h	equ	0xFDA
 32765                           fsr2l	equ	0xFD9
 32766                           status	equ	0xFD8
 32767                           
 32768                           	psect	rparam
 32769  0000                     tosu	equ	0xFFF
 32770                           tosh	equ	0xFFE
 32771                           tosl	equ	0xFFD
 32772                           pclatu	equ	0xFFB
 32773                           pclath	equ	0xFFA
 32774                           tblptru	equ	0xFF8
 32775                           tblptrh	equ	0xFF7
 32776                           tblptrl	equ	0xFF6
 32777                           tablat	equ	0xFF5
 32778                           prodh	equ	0xFF4
 32779                           prodl	equ	0xFF3
 32780                           intcon	equ	0xFF2
 32781                           intcon3	equ	0xFF0
 32782                           indf0	equ	0xFEF
 32783                           postinc0	equ	0xFEE
 32784                           fsr0h	equ	0xFEA
 32785                           fsr0l	equ	0xFE9
 32786                           wreg	equ	0xFE8
 32787                           indf1	equ	0xFE7
 32788                           postdec1	equ	0xFE5
 32789                           fsr1h	equ	0xFE2
 32790                           fsr1l	equ	0xFE1
 32791                           indf2	equ	0xFDF
 32792                           postinc2	equ	0xFDE
 32793                           postdec2	equ	0xFDD
 32794                           plusw2	equ	0xFDB
 32795                           fsr2h	equ	0xFDA
 32796                           fsr2l	equ	0xFD9
 32797                           status	equ	0xFD8
 32798                           
 32799                           	psect	temp
 32800  00005B                     btemp:
 32801                           	opt stack 0
 32802  00005B                     	ds	1
 32803  0000                     int$flags	set	btemp
 32804                           tosu	equ	0xFFF
 32805                           tosh	equ	0xFFE
 32806                           tosl	equ	0xFFD
 32807                           pclatu	equ	0xFFB
 32808                           pclath	equ	0xFFA
 32809                           tblptru	equ	0xFF8
 32810                           tblptrh	equ	0xFF7
 32811                           tblptrl	equ	0xFF6
 32812                           tablat	equ	0xFF5
 32813                           prodh	equ	0xFF4
 32814                           prodl	equ	0xFF3
 32815                           intcon	equ	0xFF2
 32816                           intcon3	equ	0xFF0
 32817                           indf0	equ	0xFEF
 32818                           postinc0	equ	0xFEE
 32819                           fsr0h	equ	0xFEA
 32820                           fsr0l	equ	0xFE9
 32821                           wreg	equ	0xFE8
 32822                           indf1	equ	0xFE7
 32823                           postdec1	equ	0xFE5
 32824                           fsr1h	equ	0xFE2
 32825                           fsr1l	equ	0xFE1
 32826                           indf2	equ	0xFDF
 32827                           postinc2	equ	0xFDE
 32828                           postdec2	equ	0xFDD
 32829                           plusw2	equ	0xFDB
 32830                           fsr2h	equ	0xFDA
 32831                           fsr2l	equ	0xFD9
 32832                           status	equ	0xFD8


Data Sizes:
    Strings     1667
    Constant    969
    Data        11
    BSS         538
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     45      90
    BANK0           160     89     158
    BANK1           256      5     249
    BANK2           256      0     192
    BANK3           256      0       0
    BANK4           192      0       0
    BANK5           128      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_96(CODE[7]), STR_94(CODE[7]), STR_92(CODE[7]), STR_89(CODE[7]), 
		 -> STR_35(CODE[5]), STR_31(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_88(CODE[3]), STR_69(CODE[14]), STR_67(CODE[11]), STR_63(CODE[7]), 
		 -> STR_60(CODE[9]), STR_59(CODE[11]), STR_57(CODE[14]), STR_54(CODE[14]), 
		 -> STR_53(CODE[3]), STR_49(CODE[9]), STR_45(CODE[14]), STR_44(CODE[3]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    memcpy@s1	PTR const void  size(2) Largest target is 64
		 -> clearLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 64
		 -> clearLight(BANK1[5]), moduleResonseBuffer(BANK1[64]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK2[64]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 64
		 -> USB_Buffer(BANK2[64]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S6122_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S6122_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S6122_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S6122_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BIGRAMhl[64]), cdc_data_rx(BIGRAMhh[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S4835$pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> USART_mySetLineCodingHandler(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0
		 -> USART_mySetLineCodingHandler(), 

    S4825$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S4825$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4801$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4801$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4801$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4801$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    oled_putString@string	PTR const unsigned char  size(2) Largest target is 64
		 -> oled_putUint16@numData(COMRAM[6]), oled_putint8@numData(BANK0[6]), oled_putUint8@numData(BANK0[6]), STR_195(CODE[12]), 
		 -> STR_194(CODE[8]), STR_193(CODE[9]), storedLight(BANK1[5]), STR_188(CODE[5]), 
		 -> STR_187(CODE[8]), STR_186(CODE[8]), STR_185(CODE[9]), STR_161(CODE[16]), 
		 -> STR_160(CODE[17]), STR_159(CODE[17]), STR_158(CODE[4]), STR_157(CODE[4]), 
		 -> STR_156(CODE[4]), STR_155(CODE[4]), STR_154(CODE[4]), STR_153(CODE[4]), 
		 -> STR_152(CODE[4]), STR_151(CODE[16]), STR_150(CODE[17]), STR_149(CODE[4]), 
		 -> STR_148(CODE[4]), STR_147(CODE[4]), STR_146(CODE[4]), STR_145(CODE[4]), 
		 -> STR_144(CODE[4]), STR_143(CODE[4]), STR_142(CODE[4]), STR_141(CODE[4]), 
		 -> STR_140(CODE[4]), STR_139(CODE[4]), STR_138(CODE[4]), STR_137(CODE[4]), 
		 -> STR_136(CODE[16]), STR_135(CODE[12]), STR_134(CODE[17]), STR_133(CODE[16]), 
		 -> STR_132(CODE[16]), STR_131(CODE[16]), STR_130(CODE[15]), STR_129(CODE[15]), 
		 -> STR_128(CODE[16]), STR_127(CODE[4]), STR_126(CODE[3]), STR_125(CODE[3]), 
		 -> STR_124(CODE[3]), STR_123(CODE[3]), STR_122(CODE[2]), STR_121(CODE[5]), 
		 -> STR_120(CODE[7]), STR_119(CODE[17]), STR_118(CODE[17]), STR_117(CODE[2]), 
		 -> STR_116(CODE[7]), STR_115(CODE[7]), STR_114(CODE[16]), STR_113(CODE[16]), 
		 -> STR_112(CODE[15]), STR_111(CODE[15]), STR_110(CODE[17]), STR_109(CODE[16]), 
		 -> STR_108(CODE[17]), STR_107(CODE[17]), STR_106(CODE[7]), STR_105(CODE[10]), 
		 -> STR_104(CODE[17]), STR_103(CODE[16]), STR_102(CODE[16]), STR_101(CODE[16]), 
		 -> STR_100(CODE[16]), STR_99(CODE[17]), STR_98(CODE[17]), STR_97(CODE[16]), 
		 -> STR_95(CODE[19]), STR_93(CODE[17]), STR_91(CODE[17]), STR_90(CODE[17]), 
		 -> responseData(BANK1[32]), responsePortNum(BANK1[3]), STR_87(CODE[13]), STR_86(CODE[12]), 
		 -> STR_85(CODE[12]), STR_82(CODE[19]), STR_81(CODE[17]), STR_80(CODE[16]), 
		 -> STR_79(CODE[17]), STR_78(CODE[17]), STR_77(CODE[16]), STR_76(CODE[17]), 
		 -> STR_75(CODE[17]), STR_73(CODE[13]), STR_72(CODE[12]), STR_71(CODE[17]), 
		 -> STR_65(CODE[7]), STR_64(CODE[10]), STR_62(CODE[11]), STR_61(CODE[11]), 
		 -> STR_56(CODE[9]), STR_55(CODE[11]), STR_51(CODE[11]), STR_50(CODE[10]), 
		 -> STR_47(CODE[9]), STR_46(CODE[11]), STR_42(CODE[17]), STR_40(CODE[17]), 
		 -> STR_38(CODE[17]), STR_37(CODE[17]), STR_36(CODE[17]), STR_34(CODE[17]), 
		 -> STR_33(CODE[17]), STR_32(CODE[17]), moduleResonseBuffer(BANK1[64]), STR_29(CODE[17]), 
		 -> STR_28(CODE[17]), STR_27(CODE[17]), STR_26(CODE[17]), STR_25(CODE[9]), 
		 -> STR_24(CODE[10]), STR_23(CODE[5]), STR_20(CODE[9]), STR_19(CODE[8]), 
		 -> STR_18(CODE[8]), STR_17(CODE[9]), STR_16(CODE[10]), STR_15(CODE[11]), 
		 -> STR_14(CODE[13]), STR_13(CODE[13]), STR_12(CODE[13]), STR_11(CODE[12]), 
		 -> STR_10(CODE[13]), STR_9(CODE[9]), STR_8(CODE[12]), STR_7(CODE[16]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[9]), STR_3(CODE[15]), 
		 -> STR_2(CODE[15]), STR_1(CODE[15]), 

    oled_setFont@font	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    selectedFont	PTR const unsigned char  size(2) Largest target is 768
		 -> OledFont0(CODE[768]), 

    moteApp_setLightString@lightString	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sp__memcpy	PTR void  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    moteApp_convertSensorValue@string	PTR const unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sendDataCommand@appData	PTR unsigned char  size(2) Largest target is 16
		 -> dataBuffer(BANK1[16]), 

    sendDataCommand@string	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_84(CODE[14]), STR_83(CODE[14]), STR_74(CODE[14]), 

    sendCommand@string	PTR const unsigned char  size(2) Largest target is 27
		 -> STR_192(CODE[22]), STR_191(CODE[22]), STR_190(CODE[27]), STR_189(CODE[27]), 
		 -> STR_184(CODE[26]), STR_183(CODE[26]), STR_182(CODE[26]), STR_181(CODE[26]), 
		 -> STR_180(CODE[3]), STR_179(CODE[9]), STR_178(CODE[15]), STR_177(CODE[13]), 
		 -> STR_176(CODE[13]), STR_175(CODE[17]), STR_174(CODE[13]), STR_173(CODE[17]), 
		 -> STR_172(CODE[13]), STR_171(CODE[17]), STR_170(CODE[13]), STR_169(CODE[17]), 
		 -> STR_168(CODE[13]), STR_167(CODE[17]), STR_166(CODE[13]), STR_165(CODE[17]), 
		 -> STR_164(CODE[13]), STR_163(CODE[17]), STR_162(CODE[16]), STR_70(CODE[11]), 
		 -> STR_68(CODE[11]), STR_66(CODE[14]), STR_58(CODE[14]), STR_52(CODE[10]), 
		 -> STR_48(CODE[13]), STR_43(CODE[14]), STR_41(CODE[13]), STR_39(CODE[10]), 
		 -> STR_30(CODE[10]), STR_22(CODE[20]), STR_21(CODE[2]), 

    sp__moteApp_getLightString	PTR unsigned char  size(2) Largest target is 5
		 -> storedLight(BANK1[5]), 

    sp__moteApp_getTempValue	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 

    sp__moteApp_getLightValue	PTR unsigned char  size(2) Largest target is 64
		 -> moduleResonseBuffer(BANK1[64]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBapp_CdcEmulatorInitialize
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfRxService->_USART_mySetLineCodingHandler
    _USBCtrlTrfInHandler->_USART_mySetLineCodingHandler
    _USART_mySetLineCodingHandler->___lldiv

Critical Paths under _main in BANK0

    _main->_moteHandler
    _test_powerup->_moteApp_testSensors
    _test_switch->_oled_putString
    _test_oled->_oled_putString
    _test_leds->_oled_putString
    _test_comms->_oled_putString
    _moteApp_toggleLeds->_sendCommand
    _moteApp_testSensors->_ADC_TempConversion
    _moteHandler->_moteRunningProcess
    _moteRunningProcess->_ADC_TempConversion
    _sendDataCommand->_EUSART_Write
    _sendDataCommand->_hexToStr
    _oled_putint8->_oled_putString
    _oled_putUint8->_oled_putString
    _moteApp_setSensorsInput->_moteApp_delayms
    _moteApp_getTempValue->_MOTEapp_getModuleResponse
    _moteApp_getTempValue->_sendCommand
    _moteApp_getLightValue->_moteApp_setLightString
    _moteApp_setLightString->_memcpy
    _moteApp_convertSensorValue->_moteApp_getLightValue
    _moteApp_add8bToDataBuffer->___awmod
    _moteApp_add16bToDataBuffer->___lwdiv
    _oled_setDisplay->_oled_writeCommand
    _oled_devInit->_oled_initialDispayLine
    _oled_devInit->_oled_powerControl
    _oled_devInit->_oled_regulorResistorSelect
    _oled_devInit->_oled_setContrastControlRegister
    _oled_setContrastControlRegister->_oled_writeCommand
    _oled_regulorResistorSelect->_oled_writeCommand
    _oled_powerControl->_oled_writeCommand
    _oled_initialDispayLine->_oled_writeCommand
    _oled_displayOff->_oled_writeCommand
    _moduleSleep->_sendCommand
    _moduleResync->_moteApp_delayms
    _MOTEapp_getModuleResponse->_EUSART_Read
    _MOTEapp_SetDataRateSetting->_sendCommand
    _ADC_TempConversion->___fldiv
    ___flmul->___fladd
    ___fldiv->___flmul
    _moteJoiningProcess->_oled_putString
    _TMRapp_Handler->___almod
    _moteApp_clearCommand->_sendCommand
    _sendCommand->_EUSART_Write
    _EndLine->_EUSART_Write
    _USBapp_Handler->_oled_putString
    _oled_putString->_moteApp_getLightValue
    _oled_clear->_oled_clearRow
    _oled_clearRow->_oled_putChar
    _oled_putChar->_Set_Column_Address
    _oled_putChar->_Set_Page_Address
    _Set_Page_Address->_oled_writeCommand
    _Set_Column_Address->_oled_writeCommand
    _USBapp_DeviceCdcEmulatorHandler->_getsUSBUSART
    _getsUSBUSART->_USBTransferOnePacket
    _CDCTxService->_USBTransferOnePacket
    _USBDeviceInit->_memset
    _SYSTEM_Initialize->_TMR1_Initialize

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_moteHandler

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  873677
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
               _MOTEapp_handlerState
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
                     _USBapp_Handler
                _USBapp_handlerState
                       _moduleResync
               _moteApp_clearCommand
                    _moteApp_delayms
                        _moteHandler
                         _oled_clear
                          _oled_init
                     _oled_putString
                       _test_powerup
 ---------------------------------------------------------------------------------
 (1) _test_powerup                                         0     0      0  336080
                 _EUSART_FlushBuffer
                    _moteApp_delayms
                _moteApp_testSensors
                         _oled_clear
                         _test_comms
                          _test_leds
                          _test_oled
                        _test_switch
 ---------------------------------------------------------------------------------
 (2) _test_switch                                          4     4      0   48532
                                             22 BANK0      4     4      0
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_oled                                            0     0      0   48396
                         _oled_clear
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_leds                                            0     0      0   47922
                            _delayms
                     _oled_putString
 ---------------------------------------------------------------------------------
 (2) _test_comms                                           0     0      0   52198
                            _delayms
                 _moteApp_toggleLeds
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_toggleLeds                                   2     2      0    4276
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _delayms                                              5     3      2     900
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _moteApp_testSensors                                  3     3      0  135307
                                             76 BANK0      1     1      0
                 _ADC_TempConversion
         _moteApp_convertSensorValue
              _moteApp_getLightValue
               _moteApp_getTempValue
            _moteApp_setSensorsInput
                         _oled_clear
                       _oled_putChar
                     _oled_putString
                       _oled_putint8
 ---------------------------------------------------------------------------------
 (1) _moteHandler                                          6     6      0  419008
                                             88 BANK0      1     1      0
                                              0 BANK1      5     5      0
                 _ADC_TempConversion
             _MOTEapp_TimerBasedTask
          _MOTEapp_getModuleResponse
               _TMRapp_ClearBitFlags
                     _TMRapp_Handler
                     _USBapp_exitCDC
                _USBapp_exitCDCState
         _moteApp_convertSensorValue
              _moteApp_getLightValue
               _moteApp_getTempValue
                 _moteJoiningProcess
                 _moteRunningProcess
                         _oled_clear
                     _oled_putString
                       _oled_putint8
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _moteRunningProcess                                  12     9      3  226224
                                             76 BANK0     12     9      3
                 _ADC_TempConversion
         _MOTEapp_SetDataRateSetting
                     _TMR2_ReadTimer
                  _moteApp_GoToSleep
         _moteApp_add16bToDataBuffer
          _moteApp_add8bToDataBuffer
               _moteApp_clearBuffers
         _moteApp_convertSensorValue
                    _moteApp_delayms
             _moteApp_getLightString
              _moteApp_getLightValue
               _moteApp_getTempValue
            _moteApp_setSensorsInput
                         _oled_clear
                     _oled_putString
                      _oled_putUint8
                       _oled_putint8
                    _sendDataCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _sendDataCommand                                      8     3      5    1667
                                              1 BANK0      8     3      5
                       _EUSART_Write
                            _EndLine
                           _hexToStr
 ---------------------------------------------------------------------------------
 (4) _hexToStr                                             1     1      0     189
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putint8                                        10     8      2   51503
                                             22 BANK0     10     8      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _oled_putUint8                                        9     7      2   51398
                                             22 BANK0      9     7      2
                            ___awmod
                            ___lbdiv
                     _oled_putString
 ---------------------------------------------------------------------------------
 (3) _moteApp_setSensorsInput                              2     2      0    6769
                                              5 BANK0      2     2      0
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _moteApp_getTempValue                                 4     2      2    4483
                                              3 BANK0      4     2      2
          _MOTEapp_getModuleResponse
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _moteApp_getLightValue                                4     2      2    5546
                                             13 BANK0      4     2      2
          _MOTEapp_getModuleResponse
             _moteApp_setLightString
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _moteApp_setLightString                               3     1      2    1063
                                             10 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              10     4      6     798
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (3) _moteApp_getLightString                               2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _moteApp_convertSensorValue                           8     6      2    7958
                                             17 BANK0      8     6      2
                             ___wmul
              _moteApp_getLightValue (ARG)
               _moteApp_getTempValue (ARG)
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    7068
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_clearBuffers                                 4     4      0     396
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _moteApp_add8bToDataBuffer                            4     3      1    3944
                                              6 BANK0      4     3      1
                            ___awmod
                            ___lbdiv
 ---------------------------------------------------------------------------------
 (4) ___lbdiv                                              4     3      1     865
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    2305
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_add16bToDataBuffer                           5     2      3    6535
                                              7 BANK0      5     2      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4    1905
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _moteApp_GoToSleep                                    1     1      0   15335
                                             14 BANK0      1     1      0
                 _EUSART_FlushBuffer
             _PIN_MANAGER_Initialize
                       _moduleResync
                        _moduleSleep
                    _moteApp_delayms
                    _oled_displayOff
                          _oled_init
 ---------------------------------------------------------------------------------
 (1) _oled_init                                            0     0      0    1884
                         _oled_clear
                       _oled_devInit
                    _oled_setDisplay
                       _oled_setFont
 ---------------------------------------------------------------------------------
 (2) _oled_setFont                                         2     0      2     166
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _oled_setDisplay                                      1     1      0      62
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (2) _oled_devInit                                         1     1      0     282
                                              2 BANK0      1     1      0
             _oled_initialDispayLine
                  _oled_powerControl
         _oled_regulorResistorSelect
    _oled_setContrastControlRegister
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_setContrastControlRegister                      1     1      0      62
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_regulorResistorSelect                           1     1      0      62
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_powerControl                                    1     1      0      62
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (3) _oled_initialDispayLine                               1     1      0      65
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _oled_displayOff                                      1     1      0      31
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (4) _moduleSleep                                          1     1      0    4245
                                              3 BANK0      1     1      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _moduleResync                                         3     3      0    6775
                                              5 BANK0      3     3      0
          _MOTEapp_getModuleResponse
                    _moteApp_delayms
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _MOTEapp_getModuleResponse                            2     2      0     204
                                              1 BANK0      2     2      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (2) _EUSART_FlushBuffer                                   1     1      0      99
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _TMR2_ReadTimer                                       1     1      0      34
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_SetDataRateSetting                           2     2      0    4307
                                              3 BANK0      2     2      0
                        _sendCommand
 ---------------------------------------------------------------------------------
 (3) _ADC_TempConversion                                   6     6      0    9408
                                             70 BANK0      6     6      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     580
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     441
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    2777
                                             20 BANK0     25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    1991
                                             45 BANK0     25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3486
                                              0 BANK0     20    12      8
 ---------------------------------------------------------------------------------
 (2) _moteJoiningProcess                                   6     4      2   60479
                                             22 BANK0      6     4      2
                   _DATAEE_WriteByte
                    _moteApp_delayms
                         _oled_clear
                     _oled_putString
                        _sendCommand
                             _strcmp
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              9     3      6    2064
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    2629
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _moteApp_delayms                                      5     3      2    2252
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _DATAEE_WriteByte                                     3     2      1     304
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDCState                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_exitCDC                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMRapp_Handler                                       0     0      0    4201
                            ___almod
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4    3560
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     641
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (2) _TMRapp_ClearBitFlags                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MOTEapp_TimerBasedTask                               1     1      0     217
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _moteApp_clearCommand                                 0     0      0    4245
                        _sendCommand
 ---------------------------------------------------------------------------------
 (4) _sendCommand                                          2     0      2    4245
                                              1 BANK0      2     0      2
                       _EUSART_Write
                            _EndLine
 ---------------------------------------------------------------------------------
 (5) _EndLine                                              0     0      0      62
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (1) _USBapp_handlerState                                  1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USBapp_Handler                                       1     1      0   53279
                                             22 BANK0      1     1      0
    _USBapp_DeviceCdcEmulatorHandler
                         _oled_clear
                     _oled_putString
                 _service_pushbutton
 ---------------------------------------------------------------------------------
 (2) _service_pushbutton                                   1     1      0      46
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _oled_putString                                       5     1      4   47022
                                             17 BANK0      5     1      4
             _moteApp_getLightString (ARG)
              _moteApp_getLightValue (ARG)
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (3) _oled_clear                                           0     0      0    1374
                      _oled_clearRow
 ---------------------------------------------------------------------------------
 (4) _oled_clearRow                                        2     2      0    1374
                                             12 BANK0      2     2      0
                       _oled_putChar
 ---------------------------------------------------------------------------------
 (4) _oled_putChar                                        10     8      2    1244
                                              2 BANK0     10     8      2
                 _Set_Column_Address
                   _Set_Page_Address
                     _oled_writeData
 ---------------------------------------------------------------------------------
 (5) _oled_writeData                                       1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _Set_Page_Address                                     1     1      0      96
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (5) _Set_Column_Address                                   1     1      0      93
                                              1 BANK0      1     1      0
                  _oled_writeCommand
 ---------------------------------------------------------------------------------
 (6) _oled_writeCommand                                    1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBapp_DeviceCdcEmulatorHandler                      1     1      0    4800
                                             13 BANK0      1     1      0
                       _CDCTxService
                        _EUSART_Read
                       _EUSART_Write
           _MOTEapp_setResponseReady
               _USBapp_getrxByteFlag
                       _getsUSBUSART
                        _putUSBUSART
 ---------------------------------------------------------------------------------
 (3) _putUSBUSART                                          3     0      3     270
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) _getsUSBUSART                                         6     3      3    2267
                                              7 BANK0      6     3      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBapp_getrxByteFlag                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MOTEapp_setResponseReady                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      62
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Read                                          1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _CDCTxService                                         5     5      0    2164
                                              7 BANK0      5     5      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                 7     3      4    1926
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1361
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1070
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CMP1_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0       0
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              0 BANK0      2     2      0
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CMP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOTEapp_handlerState                                 1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                         14    14      0   30063
                                             31 COMRAM    14    14      0
                           _CMP1_ISR
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR1_ISR
                           _TMR3_ISR
                        _TMRapp_Tick
                     _USBDeviceTasks
               _USBapp_setrxByteFlag
 ---------------------------------------------------------------------------------
 (11) _USBapp_setrxByteFlag                                0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _USBDeviceTasks                                      1     1      0   30063
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (12) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (12) _USBWakeFromSuspend                                  0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBSuspend                                          0     0      0    3903
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _USBCtrlEPService                                    3     3      0   17698
                                             27 COMRAM     3     3      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfSetupHandler                              0     0      0   16631
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (14) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (14) _USBCheckStdRequest                                  0     0      0   12636
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStdSetCfgHandler                                 1     1      0    4401
                                             21 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (13) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (15) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (15) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (15) _USBStdFeatureReqHandler                             6     6      0    4286
                                             21 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (12) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    3903
                                             13 COMRAM     8     2      6
                 _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
 ---------------------------------------------------------------------------------
 (13) _USBapp_CdcEmulatorInitialize                        1     1      0    1211
                                             12 COMRAM     1     1      0
                          _CDCInitEP
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (14) _CDCInitEP                                           0     0      0    1143
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (15) i2_USBTransferOnePacket                              7     3      4     410
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (16) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (13) _USBCheckCDCRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfOutHandler                                0     0      0     499
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (14) _USBCtrlTrfRxService                                 2     2      0     499
                                             17 COMRAM     2     2      0
       _USART_mySetLineCodingHandler *
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _USBCtrlTrfInHandler                                 1     1      0     500
                                             17 COMRAM     1     1      0
       _USART_mySetLineCodingHandler *
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USART_mySetLineCodingHandler                        4     4      0     385
                                             13 COMRAM     4     4      0
                            ___lldiv
                i2_EUSART_Initialize
 ---------------------------------------------------------------------------------
 (14) i2_EUSART_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (16) ___lldiv                                            13     5      8     340
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (11) _TMRapp_Tick                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR3_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CMP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _MOTEapp_handlerState
   _SYSTEM_Initialize
     _ADC_Initialize
     _CMP1_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_StartTimer
     _TMR2_Initialize
       _TMR2_StartTimer
     _TMR3_Initialize
       _TMR3_StartTimer
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _USBapp_Handler
     _USBapp_DeviceCdcEmulatorHandler
       _CDCTxService
         _USBTransferOnePacket
       _EUSART_Read
       _EUSART_Write
       _MOTEapp_setResponseReady
       _USBapp_getrxByteFlag
       _getsUSBUSART
         _USBTransferOnePacket
       _putUSBUSART
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_putString
       _moteApp_getLightString (ARG)
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putChar (ARG)
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
     _service_pushbutton
   _USBapp_handlerState
   _moduleResync
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _moteApp_delayms
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_clearCommand
     _sendCommand
       _EUSART_Write
       _EndLine
         _EUSART_Write
   _moteApp_delayms
   _moteHandler
     _ADC_TempConversion
       ___fladd
       ___fldiv
         ___flmul (ARG)
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul
         ___fladd (ARG)
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
     _MOTEapp_TimerBasedTask
     _MOTEapp_getModuleResponse
       _EUSART_Read
     _TMRapp_ClearBitFlags
     _TMRapp_Handler
       ___almod
       ___lwmod
     _USBapp_exitCDC
     _USBapp_exitCDCState
     _moteApp_convertSensorValue
       ___wmul
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
     _moteApp_getLightValue
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _moteApp_setLightString
         _memcpy
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _moteApp_getTempValue
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _moteJoiningProcess
       _DATAEE_WriteByte
       _moteApp_delayms
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
       _strcmp
       _strncmp
     _moteRunningProcess
       _ADC_TempConversion
         ___fladd
         ___fldiv
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _MOTEapp_SetDataRateSetting
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _TMR2_ReadTimer
       _moteApp_GoToSleep
         _EUSART_FlushBuffer
         _PIN_MANAGER_Initialize
         _moduleResync
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_delayms
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moduleSleep
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_delayms
         _oled_displayOff
           _oled_writeCommand
         _oled_init
           _oled_clear
             _oled_clearRow
               _oled_putChar
                 _Set_Column_Address
                   _oled_writeCommand
                 _Set_Page_Address
                   _oled_writeCommand
                 _oled_writeData
           _oled_devInit
             _oled_initialDispayLine
               _oled_writeCommand
             _oled_powerControl
               _oled_writeCommand
             _oled_regulorResistorSelect
               _oled_writeCommand
             _oled_setContrastControlRegister
               _oled_writeCommand
             _oled_writeCommand
           _oled_setDisplay
             _oled_writeCommand
           _oled_setFont
       _moteApp_add16bToDataBuffer
         ___lwdiv
         ___lwmod
       _moteApp_add8bToDataBuffer
         ___awmod
         ___lbdiv
       _moteApp_clearBuffers
       _moteApp_convertSensorValue
         ___wmul
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_getTempValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_delayms
       _moteApp_getLightString
       _moteApp_getLightValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_setSensorsInput
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putUint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _sendDataCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
         _hexToStr
       _strcmp
       _strncmp
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_putString
       _moteApp_getLightString (ARG)
       _moteApp_getLightValue (ARG)
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putChar (ARG)
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
     _oled_putint8
       ___awmod
       ___lbdiv
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _service_pushbutton
   _oled_clear
     _oled_clearRow
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
   _oled_init
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _oled_devInit
       _oled_initialDispayLine
         _oled_writeCommand
       _oled_powerControl
         _oled_writeCommand
       _oled_regulorResistorSelect
         _oled_writeCommand
       _oled_setContrastControlRegister
         _oled_writeCommand
       _oled_writeCommand
     _oled_setDisplay
       _oled_writeCommand
     _oled_setFont
   _oled_putString
     _moteApp_getLightString (ARG)
     _moteApp_getLightValue (ARG)
       _MOTEapp_getModuleResponse
         _EUSART_Read
       _moteApp_setLightString
         _memcpy
       _sendCommand
         _EUSART_Write
         _EndLine
           _EUSART_Write
     _oled_putChar (ARG)
       _Set_Column_Address
         _oled_writeCommand
       _Set_Page_Address
         _oled_writeCommand
       _oled_writeData
   _test_powerup
     _EUSART_FlushBuffer
     _moteApp_delayms
     _moteApp_testSensors
       _ADC_TempConversion
         ___fladd
         ___fldiv
           ___flmul (ARG)
             ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           ___fladd (ARG)
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _moteApp_convertSensorValue
         ___wmul
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _moteApp_getTempValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
       _moteApp_getLightValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_setLightString
           _memcpy
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_getTempValue
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _moteApp_setSensorsInput
         _MOTEapp_getModuleResponse
           _EUSART_Read
         _moteApp_delayms
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putChar
         _Set_Column_Address
           _oled_writeCommand
         _Set_Page_Address
           _oled_writeCommand
         _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
       _oled_putint8
         ___awmod
         ___lbdiv
         _oled_putString
           _moteApp_getLightString (ARG)
           _moteApp_getLightValue (ARG)
             _MOTEapp_getModuleResponse
               _EUSART_Read
             _moteApp_setLightString
               _memcpy
             _sendCommand
               _EUSART_Write
               _EndLine
                 _EUSART_Write
           _oled_putChar (ARG)
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
     _oled_clear
       _oled_clearRow
         _oled_putChar
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_comms
       _delayms
       _moteApp_toggleLeds
         _sendCommand
           _EUSART_Write
           _EndLine
             _EUSART_Write
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_leds
       _delayms
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_oled
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData
     _test_switch
       _oled_clear
         _oled_clearRow
           _oled_putChar
             _Set_Column_Address
               _oled_writeCommand
             _Set_Page_Address
               _oled_writeCommand
             _oled_writeData
       _oled_putString
         _moteApp_getLightString (ARG)
         _moteApp_getLightValue (ARG)
           _MOTEapp_getModuleResponse
             _EUSART_Read
           _moteApp_setLightString
             _memcpy
           _sendCommand
             _EUSART_Write
             _EndLine
               _EUSART_Write
         _oled_putChar (ARG)
           _Set_Column_Address
             _oled_writeCommand
           _Set_Page_Address
             _oled_writeCommand
           _oled_writeData

 _INTERRUPT_InterruptManager (ROOT)
   _CMP1_ISR
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR1_ISR
   _TMR3_ISR
   _TMRapp_Tick
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USART_mySetLineCodingHandler *
           ___lldiv
           i2_EUSART_Initialize
         _USBCtrlTrfTxService *
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USART_mySetLineCodingHandler *
             ___lldiv
             i2_EUSART_Initialize
           _USBCtrlEPAllowStatusStage *
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _USBCheckCDCRequest
               _USBapp_CdcEmulatorInitialize
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   i2_USBTransferOnePacket
                 i2_EUSART_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _USBCheckCDCRequest
             _USBapp_CdcEmulatorInitialize
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               i2_EUSART_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _USBCheckCDCRequest
           _USBapp_CdcEmulatorInitialize
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             i2_EUSART_Initialize
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _USBCheckCDCRequest
         _USBapp_CdcEmulatorInitialize
           _CDCInitEP
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           i2_EUSART_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _USBCheckCDCRequest
       _USBapp_CdcEmulatorInitialize
         _CDCInitEP
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         i2_EUSART_Initialize
     i2_USBDeviceInit
       i2_memset
   _USBapp_setrxByteFlag

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      23        0.0%
BIGRAMhh           280      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C0       9       75.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      5      F9       7       97.3%
BIGRAMhl            C0      0       0      22        0.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     59      9E       5       98.8%
BITBANK5            80      0       0      15        0.0%
BANK5               80      0       0      16        0.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     2D      5A       1       95.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2B1      14        0.0%
DATA                 0      0     2B1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Feb 26 18:03:38 2017

                                 _USB_SD_Ptr 75B3                                 ___fldiv@aexp 00A5  
                               ___fldiv@bexp 00A4                                 ___fldiv@sign 0099  
                ?_moteApp_add16bToDataBuffer 0067                        ??_moteApp_testSensors 00AC  
                                         l60 3C98                            ??_CMP1_Initialize 0060  
                                 _USB_Buffer 0280                    _MOTEapp_getModuleResponse 5D1C  
             moteJoiningProcess@selectButton 0077                                _USBDeviceInit 3574  
                        ___wmul@multiplicand 0062                      EUSART_FlushBuffer@index 0060  
                     __end_of_oled_writeData 6A1A                         ??_moteApp_toggleLeds 0063  
                         __size_of_CDCInitEP 006E                     USBapp_handlerState@state 0060  
                               __CFG_CP0$OFF 000000                                 __CFG_CP1$OFF 000000  
                               __CFG_CP2$OFF 000000                                 __CFG_CP3$OFF 000000  
             __end_of_moteApp_setLightString 5BB0         USER_USB_CALLBACK_EVENT_HANDLER@event 000E  
       USER_USB_CALLBACK_EVENT_HANDLER@pdata 0010                                          l109 65AE  
                                        l126 4176                                          l404 139A  
                __end_of_USBStdGetDscHandler 3DF4                                          l342 58CC  
                                        l360 689C                                          l504 07AE  
                                        l345 5916                                          l354 6622  
                                        l527 0B6C                                          l448 1944  
                                        l385 2F62                                          l475 02D2  
                                        l572 10AA                                          l717 575C  
                                        l399 1376                                          l591 12A2  
                                        l673 3F06                                          _BDT 000400  
                                        l853 4D8E                                          l679 3FA0  
                                        l759 5BAC                                          _CKE 007E3E  
                                        l864 4E46                                          l859 4E3A  
                                        l884 46E4                                          l886 4710  
                                        _CKP 007E34                                          _GIE 007F97  
                               __CFG_CPB$OFF 000000                      ?_oled_initialDispayLine 0001  
                                        _PR2 000FBB                                 __CFG_CPD$OFF 000000  
                         _moteJoiningProcess 136A                                          _UIE 000F64  
                                        _UIR 000F65                              _timer1ReloadVal 0048  
                                        _log 02D0                                   _USBSuspend 6862  
                               ___awmod@sign 0065                 __end_of_moteApp_clearBuffers 522E  
               __end_of_moteApp_clearCommand 6AA8                         USBStdSetCfgHandler@i 0016  
                            _TMR2_Initialize 6A70                                          prod 000FF3  
                                        tosl 000FFD                                          wreg 000FE8  
                             _USBDeviceTasks 3944                               _USBDeviceState 00D2  
                               ___flmul@aexp 0081                                 ___flmul@bexp 0086  
                               ___flmul@sign 0080                                 ___flmul@temp 008B  
                               ___flmul@prod 0087                        moteApp_delayms@length 0060  
               MOTEapp_SetDataRateSetting@dr 0064                        ??_USBCtrlTrfRxService 0012  
                   __size_ofi2_USBDeviceInit 0138                               ??_getsUSBUSART 006A  
                               ?_EUSART_Read 0001                     USBEnableEndpoint@options 0009  
                               __CFG_LVP$OFF 000000                          ?_moteJoiningProcess 0076  
                               ___fltol@exp1 0069                                         l1038 4D6C  
                                       l1137 63D2                                         l1146 6424  
                                       l1236 6A3C                                         l2081 34A8  
                            _timer3ReloadVal 00C7                                         l2076 3454  
                                       l2510 5D12                                         l2520 6008  
                                       l1448 653A                                         l1716 35E2  
                 USBConfigureEndpoint@handle 0007                                         l2615 29EE  
                                       l2560 1BA8                                         l2624 2A26  
                                       l2561 1B74                                         l2626 2A94  
                                       l2618 2996                                         l2652 21CC  
                                       l2645 1F30                                         l2662 22DE  
                                       l2654 223A                                         l2559 1BB4  
                                       l2576 1D28                                         l1777 676E  
                                       l2585 1DBC                                         l1778 676C  
                                       l2691 3170                                         l2684 30C4  
                                       l2698 31CC                                         l2699 31E4  
                                       STR_1 7D38                                         STR_2 7D1A  
                                       STR_3 7D29                                         STR_4 7F3E  
                                       STR_5 7D97                                         STR_6 7DA4  
                                       STR_7 7CDD                                         STR_8 7E71  
                                       STR_9 7F47                              _lightStringSize 00E3  
                                       _LATD 000F8C              __size_of_MOTEapp_TimerBasedTask 0026  
                                       _PEIE 007F96                        ??_USBCtrlTrfTxService 0001  
                                       _UCFG 000F62                                         _UEP0 000F6A  
                                       _UEP1 000F6B                                         _UEIE 000F66  
                                       _UEIR 000F67                                         _UCON 000F60  
                                       _TMR2 000FBC                                         _TMR3 000FB2  
                            _CDCDataInHandle 00BF       USBStdFeatureReqHandler@current_ep_data 0019  
                                       _pDst 015A                        moteRunningProcess@ctr 00B3  
                                       _main 3BA8                     ??i2_USBTransferOnePacket 0005  
          __end_of_moteApp_add8bToDataBuffer 4A2A                                         fsr0h 000FEA  
                                       fsr1h 000FE2                                         indf0 000FEF  
                                       fsr0l 000FE9                                         fsr2h 000FDA  
                                       indf1 000FE7                                  _BaudRateGen 0146  
                                       fsr1l 000FE1                                         indf2 000FDF  
                                       fsr2l 000FD9                              _USBDeviceAttach 6746  
                                       btemp 005B                                __CFG_BORV$190 000000  
                                       pclat 000FFA                                         prodh 000FF4  
                                       prodl 000FF3                         _USBapp_setrxByteFlag 6B58  
                                       start 00C4                                __CFG_IESO$OFF 000000  
                            ___fldiv@new_exp 009E                              __end_of_EndLine 6B04  
                            _TMR3_Initialize 6946                                  _storedLight 01EA  
                __end_of_USBapp_exitCDCState 6B24                             __end_of_CMP1_ISR 6B78  
                            ?_oled_putString 0071                   __end_of_USBCheckStdRequest 4B06  
                     ??_USBCtrlTrfOutHandler 0014                  __size_of_moteRunningProcess 12A2  
                           ?_oled_setDisplay 0001                                __CFG_MCLRE$ON 000000  
                               ___param_bank 000010                    ??_USBStdFeatureReqHandler 0016  
                                _TMRapp_Tick 6B5E                         ??_moteJoiningProcess 0078  
                     moteApp_delayms@counter 0063                ?_USART_mySetLineCodingHandler 0001  
                     sendDataCommand@appData 0063                            sendCommand@string 0061  
                   ??_USBStdGetStatusHandler 0001                 __end_of_USBapp_getrxByteFlag 6B68  
                  __size_of_DATAEE_WriteByte 003C                               ?_USBDeviceInit 0001  
                     _moteApp_getLightString 6ADA                                ?_EUSART_Write 0001  
             __size_of_OSCILLATOR_Initialize 0016               __end_of_oled_initialDispayLine 6A96  
                            ?_oled_writeData 0001                __end_of_OSCILLATOR_Initialize 6A46  
                                      l12200 4C98                                        l12032 6854  
                                      l12112 65E2                                        l13010 5658  
                                      l12122 65FA                                        l12060 58F0  
                                      l13100 5990                                        l12070 5EE2  
                                      l13030 6280                                        l13014 569A  
                                      l13006 5628                                        l12302 1B88  
                                      l13102 599A                                        l13024 623A  
                                      l13016 56A6                                        l12304 1B8E  
                                      l12224 1A16                                        l13200 24D6  
                                      l13040 518E                                        l12074 5EEC  
                                      l13026 6246                                        l12410 1E6A  
                                      l12402 1E52                                        l12242 1A60  
                                      l12218 19F2                                        l13210 2562  
                                      l12090 62F6                                        l12066 5910  
                                      l14002 02C8                                        l12180 4BFE  
                                      l12404 1E56                                        l12332 1C26  
                                      l12308 1B98                                        l12260 1AB8  
                                      l12252 1A8E                                        l12236 1A4C  
                                      l12228 1A20                                        l12500 2A10  
                                      l12420 27DE                                        l13220 25EE  
                                      l13060 51DC                                        l13052 51BA  
                                      l13036 5184                                        l12164 5B82  
                                      l14004 02D4                                        l12326 1C16  
                                      l12318 1BD8                                        l12430 280C  
                                      l13230 267A                                        l12086 62EC  
                                      l13070 5202                                        l13046 51AA  
                                      l13150 4B40                                        l13142 4B1E  
                                      l14110 05A6                                        l14102 0560  
                                      l14030 03B2                                        l12360 1D70  
                                      l12328 1C1C                                        l12336 1C38  
                                      l12248 1A84                                        l12440 283C  
                                      l13240 2708                                        l12096 6312  
                                      l13072 5208                                        l13064 51E6  
                                      l13048 51B0                                        l12168 5B8C  
                                      l13160 4B7E                                        l14200 08EE  
                                      l14112 05B4                                        l14008 02E8  
                                      l12354 1D5A                                        l12370 1D90  
                                      l12346 1D08                                        l12290 1AF4  
                                      l12530 2B12                                        l12506 2A3A  
                                      l12450 286A                                        l12426 2802  
                                      l13242 271A                                        l13250 2778  
                                      l13058 51D6                                        l13090 5954  
                                      l13146 4B36                                        l13138 4B08  
                                      l14018 0348                                        l12188 4C32  
                                      l13500 4408                                        l12380 1DB6  
                                      l12364 1D7C                                        l12372 1D96  
                                      l12540 2B58                                        l12532 2B26  
                                      l12516 2A8E                                        l13244 272C  
                                      l13180 23BE                                        l12700 55D6  
                                      l13076 5212                                        l13092 595E  
                                      l13164 4BCE                                        l13156 4B62  
                                      l14204 0902                                        l14116 05C8  
                                      l14052 042A                                        l13422 342E  
                                      l13414 6920                                        l11910 68C8  
                                      l13510 444C                                        l12390 1E12  
                                      l12542 2B5C                                        l12534 2B48  
                                      l12526 2AE4                                        l12470 28EC  
                                      l12462 28BE                                        l12446 2860  
                                      l13190 244A                                        l13350 3FC4  
                                      l13086 593E                                        l14310 0D12  
                                      l14302 0C9A                                        l14214 0962  
                                      l14142 06A8                                        l14134 066E  
                                      l13440 3492                                        l13424 3438  
                                      l13512 4452                                        l13520 44A8  
                                      l13504 4420                                        l12480 296A  
                                      l12632 21B6                                        l13248 273E  
                                      l12712 561C                                        l12704 55FA  
                                      l13096 597A                                        l14312 0D30  
                                      l14304 0CB8                                        l14048 0418  
                                      l13434 345E                                        l11906 68BE  
                                      l12394 1E24                                        l12562 1EBE  
                                      l12722 3E1A                                        l14402 1086  
                                      l14410 10CC                                        l14330 0DD2  
                                      l14306 0CD6                                        l14322 0D9C  
                                      l14250 0AA0                                        l14226 09CC  
                                      l14170 075C                                        l13428 3448  
                                      l13524 44C4                                        l13516 4496  
                                      l13508 443C                                        l12820 5FFA  
                                      l12812 5FC4                                        l12580 1F18  
                                      l12564 1EC4                                        l12556 1E9A  
                                      l13356 3FD4                                        l12804 5D04  
                                      l12708 5608                                        l14412 10F6  
                                      l14308 0CF4                                        l14316 0D4E  
                                      l14260 0B00                                        l14164 074C  
                                      l14092 0520                                        l13454 34D4  
                                      l13462 34F8                                        l13446 34AC  
                                      l13390 4674                                        l11854 54FC  
                                      l13710 5BBE                                        l11950 67C4  
                                      l12814 5FD0                                        l12398 1E46  
                                      l12494 29EA                                        l12662 22B0  
                                      l12638 21E0                                        l12590 1F58  
                                      l12582 1F1E                                        l12574 1EF4  
                                      l12566 1ED6                                        l12750 3EC8  
                                      l12742 3E9C                                        l12830 30D4  
                                      l14334 0DF6                                        l14318 0D78  
                                      l14270 0B50                                        l14246 0A8C  
                                      l14190 083E                                        l14166 0752  
                                      l13480 3548                                        l13464 3504  
                                      l13472 3528                                        l11880 6450  
                                      l13384 463C                                        l13376 45FA  
                                      l13720 5BF4                                        l12816 5FD6  
                                      l12488 29A2                                        l12672 22FE  
                                      l12664 22C4                                        l12648 2234  
                                      l12752 3ED2                                        l12840 3114  
                                      l14440 119C                                        l14424 114A  
                                      l14360 0ED4                                        l14176 07A2  
                                      l14184 07EC                                        l14088 04F4  
                                      l13560 41A0                                        l13552 413A  
                                      l13482 354C                                        l13474 3532  
                                      l11866 6414                                        l13386 4644  
                                      l13394 46A6                                        l13378 4604  
                                      l14514 475E                                        l11858 5506  
                                      l13722 5BF8                                        l11946 67AE  
                                      l11938 660A                                        l12674 2308  
                                      l12658 228A                                        l12586 1F44  
                                      l12738 3E88                                        l12850 31BE  
                                      l12842 3152                                        l12770 6098  
                                      l14450 1232                                        l14442 11BA  
                                      l14434 1170                                        l14370 0F6A  
                                      l14362 0EF2                                        l14338 0E0A  
                                      l14290 0C1A                                        l14274 0B90  
                                      l14194 088E                                        l14178 07A8  
                                      l14098 054A                                        l12906 429A  
                                      l13554 4158                                        l14620 35C2  
                                      l13484 3570                                        l11884 63D4  
                                      l14524 4786                                        l13900 1914  
                                      l13804 15B2                                        l13740 138A  
                                      l12756 3EEE                                        l12748 3EB8  
                                      l12836 30FC                                        l12692 55B0  
                                      l12772 609E                                        l12940 6166  
                                      l14444 11D8                                        l14436 1176  
                                      l14372 0F88                                        l14364 0F10  
                                      l14348 0E6A                                        l13572 41E6  
                                      l11894 6406                                        l11878 644E  
                                      l13726 5C1C                                        l13718 5BF0  
                                      l13910 1938                                        l13830 169C  
                                      l13814 1618                                        l12862 3236  
                                      l12838 3104                                        l12766 608E  
                                      l12782 60C8                                        l11982 6392  
                                      l12934 6146                                        l12950 6352  
                                      l14462 129C                                        l14446 11F6  
                                      l14438 117E                                        l14454 1250  
                                      l14390 101A                                        l14366 0F2E  
                                      l14198 08DC                                        l13566 41CA  
                                      l14632 35EE                                        l14640 3600  
                                      l14616 35B8                                        l13728 5C20  
                                      l13840 16E6                                        l13832 16AC  
                                      l13816 1628                                        l13736 1378  
                                      l13920 19CE                                        l12848 31AE  
                                      l11968 5D60                                        l11976 5D8A  
                                      l12792 5CC2                                        l12696 55C4  
                                      l12688 55A0                                        l14456 1280  
                                      l14448 1214                                        l14384 0FEE  
                                      l14368 0F4C                                        l14376 0FA6  
                                      l14800 2E96                                        l14730 4D90  
                                      l13690 68EC                                        l13914 194C  
                                      l13906 192A                                        l13850 174E  
                                      l13834 16B0                                        l13818 162C  
                                      l13770 14CC                                        l12794 5CCE  
                                      l12698 55D0                                        l12778 60BC  
                                      l12962 56D8                                        l12938 615C  
                                      l12954 6368                                        l14394 103E  
                                      l14386 0FF6                                        l14378 0FD6  
                                      l14644 3628                                        l14740 4DEC  
                                      l13860 17A6                                        l13772 14D0  
                                      l12796 5CD4                                        l12972 5718  
                                      l11988 63B2                                        l12956 6372  
                                      l14476 130C                                        l14820 2F3C  
                                      l14900 3C24                                        l14582 671C  
                                      l14654 3698                                        l13694 68F6  
                                      l13870 1814                                        l13758 143C  
                                      l13918 1986                                        l12966 56E2  
                                      l14398 1062                                        l14648 3632  
                                      l14744 4DF6                                        l13872 1818  
                                      l13856 1788                                        l13848 174A  
                                      l14840 2FC6                                        l12888 6596  
                                      l14920 3CAC                                        l14586 672E  
                                      l14746 4DFE                                        l13882 188C  
                                      l13778 14F0                                        l12986 4CCE  
                                      l14914 3C9A                                        l13892 18CE  
                                      l13884 1890                                        l13788 1536  
                                      l13980 0250                                        l14828 2F64  
                                      l14860 3074                                        l14758 4E22  
                                      l13886 18B8                                        l13798 157C  
                                      l14854 3042                                        l13888 18BC  
                                      l13976 023E                                        l14792 2E72  
                                      l14776 2E38                                        l14928 3CC2  
                                      l13898 1910                                        l13994 02AC  
                                      l14858 3058                                        l14786 2E54  
                                      l14778 2E3E                                        l14796 2E88  
                              ___fltol@sign1 0068                              __end_of___almod 44D6  
                            __end_of___fladd 1E7C                                        ?_main 0001  
                            __end_of___fldiv 2B80                              __end_of___lbdiv 60CE  
                                      _EEADR 000FA9                                        STR_10 7E01  
                                      STR_11 7E7D                                        STR_20 7F50  
                                      STR_12 7E28                                        STR_21 7FFD  
                                      STR_13 7E0E                                        STR_30 7EFD  
                                      STR_14 7E1B                                        STR_22 7A46  
                                      STR_23 7A8C                                        STR_31 7FB9  
                                      STR_15 7EC0                                        STR_16 7F07  
                                      STR_24 7EDF                                        STR_32 7B08  
                                      STR_40 7A80                                        STR_17 7F59  
                                      STR_25 7F35                                        STR_41 7DF4  
                                      STR_33 7BB2                                        STR_18 7F6A  
                                      STR_50 7ED5                                        STR_26 7BC3  
                                      STR_34 7AB3                                        STR_42 7AA2  
                                      STR_35 7FBE                                        STR_19 7F72  
                                      STR_51 7E9F                                        STR_43 7D55  
                                      STR_27 7C18                                        STR_36 7B08  
                                      STR_60 7F23                                        STR_44 7FF8  
                                      STR_52 7EF3                                        STR_28 7C29  
                            __end_of___awmod 5626                                        STR_37 7BB2  
                                      STR_53 7FF8                                        STR_61 7E89  
                                      STR_45 7D71                                        STR_29 7AF7  
                                      STR_38 7AB3                                        STR_62 7E9F  
                                      STR_70 7EAA                                        STR_54 7D71  
                                      STR_46 7EB5                                        STR_55 7EB5  
                                      STR_39 7EFD                                        STR_63 7F96  
                                      STR_47 7F1A                                        STR_71 7C4B  
                                      STR_80 7C9D                                        STR_56 7F1A  
                                      STR_48 7DF4                                        STR_64 7EE9  
                                      STR_72 7E41                                        STR_65 7F8F  
                                      STR_49 7F23                                        STR_73 7D7F  
                                      STR_57 7D63                                        STR_81 7BF6  
                                      STR_66 7D55                                        STR_58 7D55  
                                      STR_74 7D47                                        STR_90 7B19  
                                      STR_82 7A5A                                        STR_83 7D47  
                                      STR_67 7E94                                        STR_59 7E94  
                                      STR_75 7AE6                                        STR_91 7A91  
                                      STR_84 7D47                                        STR_92 7FB2  
                                      STR_68 7EAA                                        STR_76 7B4C  
                                      STR_69 7D63                                        STR_85 7E59  
                                      STR_77 7C9D                                        STR_93 7BD4  
                                      STR_94 7FA4                                        STR_86 7E4D  
                                      STR_78 7AD5                                        STR_87 7D7F  
                                      STR_79 7AC4                                        STR_95 7A6D  
                                      STR_88 7FF8                                        STR_96 7F9D  
                            __end_of___flmul 2322                                        STR_89 7FAB  
                                      STR_97 7CCD                                        STR_98 7AE6  
                                      STR_99 7B4C            __size_of_USBCtrlEPServiceComplete 0100  
                            __end_of___fltol 3F00                              _TMR1_StartTimer 6B70  
                            __end_of___lldiv 5AB4                                        u11110 1B3E  
                                      u11120 1B56                                        u11130 1B58  
          __size_of_MOTEapp_setResponseReady 0008                                        _T1CON 000FCD  
                     __end_of_USBDeviceTasks 3A78                                        u11610 2AF8  
                                      u12165 654A                                        u12166 654C  
                                      u11800 229E                                        u11720 2158  
                                      _T2CON 000FBA                                        u10860 5F0C  
                                      u11900 3E3A                                        u11725 214C  
                                      u14150 2EB6                                        u12640 341E  
                                      u10880 5F3A                      __end_of_sendDataCommand 4BE0  
                                      _T3CON 000FB1                                        u11905 3E2E  
                                      u10867 5F02                                        u14307 425A  
                                      u12580 45EA                                        u14317 426C  
                                      u10887 5F30                                        u14407 5AEA  
                                      u14327 427E                                        u12648 3422  
                                      u14417 68A8                                        u14337 42B2  
                  ?_USBCtrlEPServiceComplete 0001                                        u14507 23FA  
                                      u14427 2348                                        u14347 42C4  
                                      u14267 41DC                                        u12588 45EE  
                                      u14517 241C                                        u14437 235A  
                                      u14357 42D6                                        u14277 420A  
                                      u14607 24EE                                        u14527 242E  
                                      u14447 236C                                        u14367 659E  
                                      u14287 421C                                        u14617 2500  
                                      u14537 2440                                        u14457 238E  
                                      u14377 08E4                                        u14297 422E  
                                      u14707 25D2                                        u14627 2512  
                                      u14547 2462                                        u14467 23A0  
                                      u14387 5AC4                                        u14717 25E4  
                                      u14637 2534                                        u14557 2474  
                                      u14477 23B2                                        u14397 5AD8  
                                      u14807 26B6                                        u14727 2606  
                                      u14647 2546                                        u14567 2486  
                                      u14487 23D6                                        u14817 26D8  
                                      u14737 2618                                        u14657 2558  
                                      u14577 24A8                                        u14497 23E8  
                                      u14907 6612                                        u14827 26EA  
                                      u14747 262A                                        u14667 257A  
                                      u14587 24BA                                        u14837 26FC  
                                      u14757 264C                                        u14677 258C  
                                      u14597 24CC                                        u14847 2780  
                                      u14767 265E                                        u14687 259E  
                                      u14857 2792                                        u14777 2670  
                                      u14697 25C0                                        u14867 27A4  
                                      u14787 2692                                        u14877 1954  
                                      u14797 26A4                                        u14887 1966  
                                      u14897 1978                              __end_of___lwdiv 5D1C  
                            __end_of___lwmod 6012                    ?_MOTEapp_setResponseReady 0001  
                        oled_putUint8@number 0078                                        _UADDR 000F63  
                                      _RCREG 000FAE                                        _RCSTA 000FAB  
                                      _TMR1H 000FCF                                        _TMR3H 000FB3  
                                      _TMR1L 000FCE                                        _TMR3L 000FB2  
                                      _SPBRG 000FAF                                        _TRISD 000F95  
   moteApp_add16bToDataBuffer@bufferLocation 0069      moteApp_add8bToDataBuffer@bufferLocation 0066  
                                      _USTAT 000F61                                        _TXREG 000FAD  
                                      _TXSTA 000FAC                                __CFG_WRT0$OFF 000000  
         __size_of_USBCtrlEPAllowStatusStage 00CE                              __end_of_delayms 65C4  
                              __CFG_WRT1$OFF 000000                                __CFG_WRT2$OFF 000000  
                              __CFG_WRT3$OFF 000000                               __CFG_EBTR0$OFF 000000  
                             __CFG_FCMEN$OFF 000000                               __CFG_EBTR1$OFF 000000  
                             __CFG_EBTR2$OFF 000000                               __CFG_EBTR3$OFF 000000  
            __end_of_USBCtrlEPAllowDataStage 5802                            oled_putChar@index 006B  
                           __end_of_TMR1_ISR 6B10                                        _sd000 7978  
                                      _sd001 78FE              service_pushbutton@Release_Timer 00F2  
                                      _sd002 7932                                __CFG_WRTB$OFF 000000  
                           __end_of_TMR3_ISR 6986                                __CFG_WRTC$OFF 000000  
                              __CFG_WRTD$OFF 000000                              _DATAEE_ReadByte 6A46  
                             __CFG_EBTRB$OFF 000000                                   i2memset@p1 0001  
                                      _light 00C3                               __pbitbssCOMRAM 02D0  
                    __end_of_TMR1_Initialize 6670                                 _runningState 00EE  
                                      pclath 000FFA                                        tablat 000FF5  
                                      plusw2 000FDB                            __end_of_CDCInitEP 5EDE  
                 oled_setDisplay@displayType 0061                                        status 000FD8  
                             __CFG_T3CMX$RC0 000000                              _TMR2_StartTimer 6B6C  
                            __end_of_strncmp 56C8                              ___lbdiv@divisor 0060  
                             __CFG_ICPRT$OFF 000000                        ?_USBapp_setrxByteFlag 0001  
                           __end_ofi2_memset 6838                              ___lbdiv@counter 0062  
                               _m10SecTicker 0158                 __end_of_moteApp_getTempValue 6380  
                            putUSBUSART@data 0060           USART_mySetLineCodingHandler@dwBaud 000E  
               __size_of_USBStdSetCfgHandler 00E0                              __initialization 5C2C  
                      TMR2_ReadTimer@readVal 0060                __size_of_TMRapp_ClearBitFlags 0008  
                               __end_of_main 3CD4                        _control_signal_bitmap 00DB  
              __size_of_MOTEapp_handlerState 000A                       _MOTEapp_TimerBasedTask 68DC  
                             ??_EUSART_Write 0060                      __end_of_TMR2_Initialize 6A84  
                               ?_sendCommand 0061                  ?_INTERRUPT_InterruptManager 0001  
                  __size_of_USBCtrlEPService 00CE                                       ??_main 00B9  
                               ?_moduleSleep 0001                                 ?_moteHandler 0001  
                            _TMR3_StartTimer 6B68                                __activetblptr 000002  
                            ?_USBDeviceTasks 0001                          i2_EUSART_Initialize 64D4  
                  sendDataCommand@dataLength 0065                                  ?_USBSuspend 0001  
                                 _NextUSBOut 004B                               __CFG_SDOMX$RB3 000000  
                            __CFG_CCP2MX$RC1 000000                                 _cdc_mem_type 00D8  
           moteApp_convertSensorValue@string 0071                      __end_of_USBDeviceAttach 677A  
                                     _ADCON0 000FC2                                       _ADCON1 000FC1  
                                     _ADCON2 000FC0                             _CDCDataOutHandle 00C1  
                          _getsUSBUSART$6490 006B                                       _ACTCON 000FB5  
                                     STR_100 7C9D                                       STR_101 7C7D  
                                     STR_102 7C6D                                       STR_110 7C3A  
                                     STR_103 7C9D                                       STR_111 7CED  
                                     STR_120 7F88                                       STR_112 7CFC  
                                     STR_104 7C5C                                       STR_121 7FC3  
                                     STR_105 7ECB                                       STR_113 7C8D  
                                     STR_130 7CED                                       STR_114 7C7D  
                                     STR_106 7E5E                                       STR_122 7DD8  
                                     _ADRESH 000FC4                                       STR_131 7C7D  
                                     STR_107 7AD5                                       STR_123 7FE1  
                                     STR_115 7F81                                       STR_132 7C6D  
                                     STR_108 7AC4                                       STR_124 7FED  
                                     STR_140 7FD4                                       STR_116 7F7A  
                                     STR_133 7C9D                                       STR_109 7C9D  
                                     STR_125 7FE5                                       STR_117 7FFB  
                                     STR_141 7FD8                                       STR_126 7FE9  
                                     STR_142 7FDC                                       STR_134 7C07  
                                     STR_150 7BE5                                       STR_118 7B3B  
                                     _ADRESL 000FC3                                       STR_143 7FF4  
                                     STR_127 7FF0                                       STR_135 7E65  
                                     STR_151 7CAD                                       STR_119 7B2A  
                                     STR_136 7C8D                                       STR_128 7C8D  
                                     STR_152 7FC8                                       STR_144 7FDC  
                                     STR_160 7B4C                                       STR_129 7CFC  
                                     STR_161 7C9D                                       STR_153 7FCC  
                                     STR_145 7FE0                                       STR_137 7FC8  
                                     STR_154 7FD0                                       STR_146 7FEC  
                                     STR_138 7FCC                                       STR_170 7DB3  
                                     STR_162 7CBD                                       STR_155 7FD4  
                                     STR_147 7FE4                                       STR_139 7FD0  
                                     STR_163 7BA1                                       STR_171 7B7F  
                                     STR_180 79C9                                       STR_156 7FD8  
                                     STR_148 7FE8                                       STR_172 7DC0  
                                     STR_164 7D8C                                       STR_157 7FDC  
                                     STR_149 7FF0                                       STR_173 7B90  
                                     STR_165 7B5D                                       STR_181 79E6  
                                     _EEDATA 000FA8                                       STR_158 7FF4  
                                     STR_174 7DCD                                       STR_166 7D99  
                                     STR_182 7A00                                       STR_190 797C  
                                     STR_159 7AE6                                       STR_167 7B5D  
                                     STR_175 7BA1                                       STR_191 7A1A  
                                     STR_183 79B2                                       STR_176 7DDA  
                                     STR_168 7DA6                                       STR_192 7A30  
                                     STR_184 79CC                                       STR_185 7F59  
                                     STR_193 7F11                                       STR_177 7DE7  
                                     STR_169 7B6E                                       STR_186 7F72  
                                     STR_194 7F62                                       STR_178 7D0B  
                                     STR_187 7F6A                                       STR_179 7F2C  
                                     STR_195 7E35                                       STR_188 7A8C  
                                     STR_189 7997                                       _EECON2 000FA7  
                                     _ANSELD 000F5E                              getsUSBUSART@len 0069  
                                     _T1GCON 000FCC                         oled_putUint8@numData 0079  
                                     _T3GCON 000FB4                        __size_of_CDCTxService 017A  
                                     i2l1200 0078                                       i2l1204 0088  
                    __end_of_TMR3_Initialize 6968                                       i2l2022 53D6  
                                     i2l1152 66D8                                       i2l2024 5408  
                                     i2l1196 005C                                       i2l1198 006C  
                                     i2l1802 407E                                       i2l1716 386A  
                                     i2l1740 3A0E                                       i2l1582 697A  
                                     i2l1728 3970                                       i2l2457 5AA2  
                                     i2l1738 39FE                                       i2l1915 491C  
                                     i2l1739 3A74                                       i2l1870 52FE  
                                     i2l1944 2BAA                                       i2l1865 52EA  
                                     i2l1929 4A3A                                       i2l1938 4A8A  
                                     i2l1963 2D70                                       i2l1868 5374  
                                     i2l1869 52FA                                       i2l1878 6492  
                                     i2l8010 4848                                       i2l8110 2C82  
                                     i2l8030 3D7A                                       i2l8022 3CF6  
                                     i2l8120 2CD4                                       i2l8104 2C64  
                                     i2l8040 3DD6                                       i2l8032 3D80  
                                     i2l8122 2CF0                                       i2l8106 2C66  
                                     i2l8018 3CE4                                       i2l8044 3DDC  
                                     i2l8126 2D0A                                       i2l8038 3DD0  
                                     i2l7504 5104                                       i2l8152 2DD2  
                                     i2l8136 2D50                                       i2l8056 531C  
                                     i2l8154 2DDE                                       i2l8146 2D8C  
                                     i2l8138 2D5C                                       i2l8066 535C  
                                     i2l8412 3B3A                                       i2l7460 5864  
                                     i2l7516 5160                                       i2l8084 2BA4  
                                     i2l8422 3B9A                                       i2l7614 61B4  
                                     i2l8342 4028                                       _TABLAT 000FF5  
                                     i2l7800 5A94                                       i2l8408 3B20  
                                     i2l7640 53B4                                       i2l7624 61D4  
                                     i2l7618 61BC                                       i2l8098 2C20  
                                     i2l7810 6826                                       i2l8450 4A6E  
                                     i2l8434 4A44                                       i2l8362 40AA  
                                     i2l7484 655E                                       i2l8460 4AA4  
                                     i2l8436 4A4A                                       i2l8390 3AA4  
                                     i2l7806 6816                                       i2l8446 4A62  
                                     i2l8438 4A50                                       i2l7752 501E  
                                     i2l7656 53F2                                       i2l7648 53CA  
                                     i2l7664 5410                                       i2l7488 656C  
                                     i2l7496 50DA                                       i2l8448 4A68  
                                     i2l8464 4AC2                                       i2l7762 5048  
                                     i2l7770 507E                                       i2l7690 60D0  
                                     i2l7772 5086                                       i2l7780 50BC  
                                     i2l7748 5014                                       i2l8396 3AC6  
                                     i2l7692 60D6                                       i2l7790 5A60  
                                     i2l7934 4F76                                       i2l7792 5A64  
                                     i2l7696 60DC                                       i2l7788 5A54  
                                     i2l9804 489C                                       i2l7964 57B8  
                                     i2l9806 48A2                                       i2l9832 4944  
                                     i2l9824 4902                                       i2l7984 47CC  
                                     i2l7968 57D0                                       i2l9834 4946  
                                     i2l9818 48E2                                       i2l7994 4800  
                                     i2l7988 47D4                                       i2l9790 606A  
                                     i2l9782 6020                                    ??_EndLine 0061  
                                     _OSCCON 000FD3                                CDCTxService@i 006A  
                                     _SPBRGH 000FB0                                       _SSPBUF 000FC9  
                           __end_of___xxtofl 3248                     i2USBTransferOnePacket@ep 0005  
                          ??i2_USBDeviceInit 0009              __size_ofi2_USBTransferOnePacket 00BA  
                       ?i2_EUSART_Initialize 0001                         oled_displayOff@state 0001  
                              oled_putChar@k 006A               __size_of_moteApp_getLightValue 005A  
              __end_of_moteApp_getLightValue 6184                            _shortPacketStatus 0057  
             moteRunningProcess@changeStates 00B7                               __CFG_XINST$OFF 000000  
                       _moteApp_clearBuffers 517E                         _moteApp_clearCommand 6A96  
               ??_MOTEapp_SetDataRateSetting 0063                              USBDeviceTasks@i 001F  
                 __end_of_Set_Column_Address 69A2                  USBStdFeatureReqHandler@pUEP 0017  
                           __end_of_hexToStr 65FE                     USBTransferOnePacket@data 0061  
                 USBCtrlTrfInHandler@lastDTS 0012                              ??_USBDeviceInit 0068  
                  __size_of_Set_Page_Address 0018                      __end_of_TMR1_StartTimer 6B74  
                               ?_putUSBUSART 0060                                    ??___almod 0068  
                                  ??___fladd 0068                                       ___wmul 6670  
                                  ??___fldiv 0095                                    ??___lbdiv 0061  
                             __CFG_STVREN$ON 000000                                    ??___awmod 0064  
                   ?_moteApp_setSensorsInput 0001                                    ??___flmul 007C  
                                  ??___fltol 0064                                    ??___lldiv 0009  
                                     _appKey 0100                         __end_of_getsUSBUSART 46AC  
                                  ??___lwdiv 0064                                    ??___lwmod 0064  
                          _USBEnableEndpoint 654E              __size_of_USBStdGetStatusHandler 00AC  
                        _EUSART_Transmit_ISR 66A6                                       _memcpy 6380  
                                     _memset 6712                                       clear_0 5C32  
                                     clear_1 5C3E                                       clear_2 5C4A  
                                     clear_3 5C58                              ___awmod@divisor 0062  
                                  ??_delayms 0062                              ___awmod@counter 0064  
                         ?_USBEnableEndpoint 0009               ??_USART_mySetLineCodingHandler 000E  
                    __end_of_DATAEE_ReadByte 6A5C                                       _strcmp 6238  
                 __end_of_ADC_TempConversion 43E4                __size_of_USBTransferOnePacket 00D8  
                           ?_sendDataCommand 0061                              _moteApp_delayms 65FE  
                __size_of_service_pushbutton 007C                                 _CDCTxService 33FA  
                               __mediumconst 75B2                                       tblptrh 000FF7  
                                     tblptrl 000FF6                                       tblptru 000FF8  
                        ??_USBEnableEndpoint 000A                                    ?_CMP1_ISR 0001  
                    __end_of_TMR2_StartTimer 6B70                                 _dataRateRead 00DD  
                                _CtrlTrfData 000438                                    ??_strncmp 0066  
                           ___lbdiv@dividend 0061                                ?_oled_devInit 0001  
                       ?_EUSART_Transmit_ISR 0001                         _controlTransferState 0051  
                  USBapp_Handler@buttonPress 0076                         _USBapp_getrxByteFlag 6B64  
                           ?_TMR1_Initialize 0001                         __CFG_LS48MHZ$SYS48X8 000000  
        __size_of_MOTEapp_SetDataRateSetting 049E                                 ___xxtofl@arg 006A  
                       __size_of_EUSART_Read 0046                                 ___xxtofl@exp 0069  
                          _SYSTEM_Initialize 6924                                 ___xxtofl@val 0060  
               __size_of_USBapp_handlerState 000A           moteApp_getLightValue@escapeCounter 006F  
                                 __accesstop 0060                      __end_of__initialization 5C96  
                     ??_USBapp_setrxByteFlag 0001                              __CFG_PBADEN$OFF 000000  
                               ?_test_switch 0001                        ??i2_EUSART_Initialize 0001  
                            _CMP1_Initialize 6AA8                           ?_SYSTEM_Initialize 0001  
                         oled_writeData@data 0060                                ___rparam_used 000001  
                              ?_oled_setFont 0060                     __size_of_USBStallHandler 0042  
                                 ___fltol@f1 0060                                ?_oled_putChar 0062  
                      ?_moteApp_clearBuffers 0001                        ?_moteApp_clearCommand 0001  
                        __size_of_USBSuspend 002A                  __size_of_EUSART_FlushBuffer 0050  
                              ?_oled_putint8 0076                               __pcstackCOMRAM 0001  
                  __end_of_USBEnableEndpoint 658A                             __CFG_nPWRTEN$OFF 000000  
                              __end_of_sd000 797C                                __end_of_sd001 7932  
                              __end_of_sd002 7966                                 __pidataBANK0 6B38  
                               __pidataBANK1 6B78                          ??_SYSTEM_Initialize 0062  
                    __end_of_TMR3_StartTimer 6B6C                                    ?_TMR1_ISR 0001  
                                  ?_TMR3_ISR 0001             __size_of_USBCtrlEPAllowDataStage 009C  
                           _DATAEE_WriteByte 6512                __size_of_USBConfigureEndpoint 0094  
    __end_of_oled_setContrastControlRegister 6A70     __size_of_oled_setContrastControlRegister 0014  
           ?_oled_setContrastControlRegister 0001            ??_oled_setContrastControlRegister 0061  
            _oled_setContrastControlRegister 6A5C                  __end_of_USBCtrlTrfInHandler 494C  
                           ?_TMR2_Initialize 0001                             ___lbdiv@quotient 0063  
       moteApp_setSensorsInput@escapeCounter 0065                       i2_USBTransferOnePacket 50C4  
                            __CFG_PCLKEN$OFF 000000                               __CFG_nLPBOR$ON 000000  
                          __end_of_OledFont0 78BB                            _CDCTxService$6538 0068  
                                 _cdc_notice 01CC                                    ?i2_memset 0001  
                                 _cdc_rx_len 00D9                                   _cdc_tx_len 00DA  
                       _moteApp_getTempValue 6336                                   ??_CMP1_ISR 0001  
                            _responsePortNum 01EF                     ??_USBCtrlTrfSetupHandler 001C  
                                 _dataBuffer 01BC                               ??_oled_devInit 0062  
                           ?_USBDeviceAttach 0001                    __end_of_SYSTEM_Initialize 6946  
                      ??_EUSART_Transmit_ISR 0001                       _USBStdGetStatusHandler 52DC  
                              ?_moduleResync 0001                        ?_USBapp_getrxByteFlag 0001  
                       service_pushbutton@bs 0060                                   __pbssBANK0 00B9  
                                 __pbssBANK1 0100                                   __pbssBANK2 0200  
                       __end_of_EUSART_Write 6454                      __size_of_TMR2_ReadTimer 000A  
                           ?_TMR3_Initialize 0001                             ??_oled_putString 0075  
                oled_regulorResistorSelect@r 0061                      moduleResync@escapeEvent 0067  
                             _sendingCounter 014A                               ??_oled_setFont 0062  
               ??_moteApp_convertSensorValue 0073                              _periodicUpValue 00FD  
                __size_of_EUSART_Receive_ISR 0036                          oled_putString@index 0075  
                             ??_oled_putChar 0064                  __size_of_USBWakeFromSuspend 0030  
                                _pBDTEntryIn 003C                       __size_of_oled_clearRow 0028  
                                 _clearLight 01E5                  __end_of_moteApp_testSensors 45C2  
                   sendDataCommand@byteCount 0067             __end_of_USBCtrlEPServiceComplete 4102  
           __end_of_MOTEapp_setResponseReady 6B52                               ??_oled_putint8 0078  
                     oled_putChar@start_page 0063                  __size_of_USBCheckCDCRequest 00AC  
                          __CFG_PLLSEL$PLL3X 000000                           __size_of_oled_init 0032  
                    ?_moteApp_getLightString 0060                             ??_oled_writeData 0060  
                       USBCtrlTrfRxService@i 0012                                 ?_TMRapp_Tick 0001  
                                    ?___wmul 0060                             ?_TMR1_StartTimer 0001  
                                 ??_TMR1_ISR 0001                                   ??_TMR3_ISR 0001  
                    __end_of_moteApp_delayms 6638                                      _CM1CON0 000F98  
                    __size_of_USBapp_Handler 00CE                      __size_of_TMRapp_Handler 0142  
                                    ?_memcpy 0060                                      _BAUDCON 000FB8  
                                    ?_memset 0060                                   _device_dsc 7966  
                  Set_Column_Address@address 0061                     __size_of_oled_displayOff 000E  
                           _USBCtrlEPService 4E5A                  __size_of_moteApp_toggleLeds 00F4  
                                 _ep_data_in 00B9                      __size_of_ADC_Initialize 001A  
                                    ?_strcmp 0060                             ?_DATAEE_ReadByte 0001  
                __end_of_USBCtrlTrfRxService 3BA8                         __size_of_sendCommand 0030  
                         _USBCheckStdRequest 4A2A                                _eusartRxCount 0053  
                          _configDescriptor1 78BB                                      i2l11020 384E  
                                    i2l11032 3876                                      i2l11040 3888  
                                    i2l11016 3846                                      i2l11044 38AE  
                                    i2l11054 3912                                      i2l11048 38B6  
                                    i2l11420 39B4                                      i2l11430 39C4  
                                    i2l11414 3990                                      i2l11406 3984  
                                    i2l11450 3A06                                      i2l11372 670E  
                                    i2l11364 66E6                                      i2l11444 39F2  
                                    i2l11436 39CE                                      i2l11358 66D4  
                                    i2l11470 3A54                                      i2l11472 3A70  
                                    i2l11464 3A34                                      i2l11392 3968  
                                    i2l11384 395C                                      i2l10940 6804  
                                    i2l10942 6806                                      i2l15040 6124  
                                    i2l11666 0050                                      i2l10980 4EAA  
                                    i2l10964 6490                                      i2l15038 60F4  
                                    i2l11686 0084                                      i2l10992 4EF8  
                                    i2l10984 4EB2                                      i2l10996 4F12  
                                    i2l10998 4F18                                    ?___xxtofl 0060  
                                    _RS232cp 004D                              __CFG_WDTEN$SWON 000000  
                      ?_moteApp_getTempValue 0063                           __size_of_test_leds 0066  
                                 ??i2_memset 0007                           __size_of_test_oled 00AE  
                       __size_of_moduleSleep 0028                  __end_of_USBCtrlTrfTxService 50C4  
                       __size_of_moteHandler 0276                          _USBStdSetCfgHandler 478C  
                                    _OSCCON2 000FD2                                      _TBLPTRH 000FF7  
                                    _TBLPTRL 000FF6                                      _TBLPTRU 000FF8  
                                    _OSCTUNE 000F9B                       __size_of_oled_putUint8 00A8  
             USBapp_LEDUpdateStatus@ledCount 0042                              __CFG_WDTPS$8192 000000  
        __size_of_moteApp_convertSensorValue 009E                                      _SSP1ADD 000FC8  
                    __end_of_CMP1_Initialize 6ABA                               ??_moduleResync 0065  
                        ?_USBCheckStdRequest 0001                             ?_TMR2_StartTimer 0001  
               __size_of_USBStdGetDscHandler 0120                                      _UIEbits 000F64  
                                  ?_hexToStr 0001                        ADC_TempConversion@val 00A8  
                                    _UIRbits 000F65                       test_switch@buttonCheck 0079  
            moteRunningProcess@bufferReadPos 00B6                                      _EndLine 6AF6  
                              _cdc_trf_state 0050                         DATAEE_WriteByte@bAdd 0061  
                    __size_of_USBapp_exitCDC 0006                   __end_of_moteRunningProcess 136A  
                     ??_moteApp_clearBuffers 0060                       ??_moteApp_clearCommand 0063  
                 ?_moteApp_add8bToDataBuffer 0066                                      _pCDCDst 0152  
                                    _pCDCSrc 0155                        __size_of_getsUSBUSART 00EA  
             __end_of_moteApp_getLightString 6AE8           __end_of_MOTEapp_SetDataRateSetting 27C0  
                 _MOTEapp_SetDataRateSetting 2322                                      __Hparam 0000  
                       ?_USBStdSetCfgHandler 0001                                    _CDCInitEP 5E70  
                    ?_MOTEapp_TimerBasedTask 0001                                      __Lparam 0000  
                 __size_of_USBEnableEndpoint 003C                  USBapp_exitCDCState@usbState 0060  
                        moteHandler@s2Button 01F4                             _Set_Page_Address 69D6  
                       ??_USBCheckStdRequest 001C                 moteRunningProcess@sleepEvent 00AE  
                                    ___almod 43E4                                      ___fladd 19D4  
                          _timerMinTickCount 00C9                __size_of_USBCtrlTrfOutHandler 0060  
                __size_of_moteJoiningProcess 066A                                      ___fldiv 27C0  
                                    ___lbdiv 6072                                      ___awmod 5584  
                                    ___flmul 1E7C                             ?_TMR3_StartTimer 0001  
                                    ___fltol 3DF4                                      ___lldiv 5A32  
                           ??_USBDeviceTasks 001F                              __size_of___wmul 0036  
                                    ___lwdiv 5CA4                            ??_USBStallHandler 0001  
                                    ___lwmod 5FB0                         oled_putint8@negative 0078  
         oled_setContrastControlRegister@mod 0061                         __size_of_putUSBUSART 0022  
                                    __pcinit 5C2C                           getsUSBUSART@buffer 0067  
                            __size_of_memcpy 004A                 __size_of_USBapp_exitCDCState 000A  
                            __size_of_memset 0034                    __end_of_configDescriptor1 78FE  
                                    __ramtop 0800                                      _delayms 658A  
                          hexToStr@character 0060                                      __ptext0 3BA8  
                                    __ptext1 5D90                                      __ptext2 4102  
                                    __ptext3 522E                                      __ptext4 5F4A  
                                    __ptext5 5E02                                      __ptext6 41FE  
                                    __ptext7 658A                                      __ptext8 44D6  
                                    __ptext9 2E04                     __size_of_oled_setDisplay 002A  
                                    _inPipes 0036                  _USBDeferOUTDataStagePackets 00D1  
                            __size_of_strcmp 0058                    moteRunningProcess@counter 00B5  
                           oled_setFont@font 0060                                    _T1CONbits 000FCD  
                      _OSCILLATOR_Initialize 6A30                                      _exitUSB 00F8  
                               ??_USBSuspend 0016                                _oled_clearRow 68B4  
                                  _T2CONbits 000FBA              moteApp_add8bToDataBuffer@number 0069  
                                 ??___xxtofl 0064                                    _T3CONbits 000FB1  
                                 _oled_clear 69A2                             ___awmod@dividend 0060  
                   ??_PIN_MANAGER_Initialize 0060                 __end_of_TMRapp_ClearBitFlags 6B4A  
                               _LastRS232Out 004A                              i2_USBDeviceInit 380C  
                           i2USBDeviceInit@i 0009                            __end_of_oled_init 67AC  
               __end_of_MOTEapp_handlerState 6B38                       ??_USBapp_getrxByteFlag 0060  
                         __end_of_USB_CD_Ptr 75BB                   moteRunningProcess@readByte 00B0  
                 __size_of_SYSTEM_Initialize 0022              __size_of_USBCtrlTrfSetupHandler 0088  
                                 ??_hexToStr 0060                                      _strncmp 5626  
                       end_of_initialization 5C96                                 _getsUSBUSART 45C2  
              sendDataCommand@byteCount_1873 0068                           __end_of_USB_SD_Ptr 75B9  
                                    memcpy@d 0066                                      memcpy@n 0064  
                                    memcpy@s 0068                          _pBDTEntryEP0OutNext 0046  
                                    memset@c 0062                                      memset@n 0064  
                                    memset@p 0066                                __Lmediumconst 75B2  
            _dummy_encapsulated_cmd_response 01D6     moteApp_convertSensorValue@convertedValue 0077  
                   ?_USBStdFeatureReqHandler 0001               __end_of_MOTEapp_TimerBasedTask 6902  
                          _EUSART_Initialize 6496                            _oled_powerControl 6ACA  
                                 _rxByteFlag 0056                        ??_USBStdSetCfgHandler 0016  
                            ___lldiv@divisor 0005                         __size_of_test_switch 00FC  
                                 ?_CDCInitEP 0001                              ___lldiv@counter 000D  
                          __end_of_test_leds 5FB0                            __end_of_test_oled 52DC  
             moteJoiningProcess@changeStates 0076                           ?_EUSART_Initialize 0001  
                         ?_oled_powerControl 0001                                _oled_putUint8 5434  
                         __end_of_USBSuspend 688C               ??_USBapp_CdcEmulatorInitialize 000D  
                    _USBCtrlEPAllowDataStage 5766                                    _RCSTAbits 000FAB  
                   ??_moteApp_setLightString 006C                           test_switch@timeout 0077  
                                    postdec1 000FE5                                      postdec2 000FDD  
                                    postinc0 000FEE                                      postinc2 000FDE  
             moteApp_setLightString@stingPos 006C                         __end_of_oled_devInit 5B34  
                   _USBCtrlEPServiceComplete 4002                      moteApp_toggleLeds@state 0064  
                                 _responseId 0130                                   _retryCount 00EC  
                           ?_moteApp_delayms 0060                                _randomPortNum 00EA  
                   _MOTEapp_setResponseReady 6B4A                                      strcmp@r 0065  
                 _USBStatusStageEnabledFlag1 00D3                   _USBStatusStageEnabledFlag2 00D4  
                              _dataRateValue 00F7                          _USBapp_handlerState 6B24  
                        ??_EUSART_Initialize 0060                          ??_oled_powerControl 0061  
                         USBEnableEndpoint@p 000A                                    _PORTAbits 000F80  
                                  _PORTBbits 000F81                                    _PORTCbits 000F82  
                    oled_putUint8@start_page 0077                               ?_oled_clearRow 0001  
                                 _test_comms 5E02                       ??_moteApp_getTempValue 0065  
                       __end_of_oled_setFont 6A04                                  ___fladd@grs 0073  
                         _Set_Column_Address 6986                         __end_of_oled_putChar 5584  
                              ___xxtofl@sign 0068                                    _TRISAbits 000F92  
                                  _TRISBbits 000F93                                    _TRISCbits 000F94  
                                  _TRISEbits 000F96                            ??_oled_displayOff 0061  
                      __size_of_EUSART_Write 0044                         __end_of_oled_putint8 4D8C  
                         _BothEP0OutUOWNsSet 00CD             __size_of_moteApp_setSensorsInput 0088  
                              ?_test_powerup 0001                                  ___fldiv@grs 00A0  
                                ___fldiv@rem 009A                             ?_CMP1_Initialize 0001  
                  USBConfigureEndpoint@EPNum 0006                   ?_USBCtrlEPAllowStatusStage 0001  
                   __end_of_DATAEE_WriteByte 654E                          ?_Set_Column_Address 0001  
        USER_USB_CALLBACK_EVENT_HANDLER@size 0012                               _TMR2_ReadTimer 6B10  
                                  _USTATcopy 0059                            __size_of_CMP1_ISR 0004  
                       ?_USBapp_handlerState 0001                           _ADC_TempConversion 42F2  
                   oled_putString@start_page 0074                                  _CM1CON0bits 000F98  
                                ___flmul@grs 0082           __end_of_moteApp_convertSensorValue 5766  
                 _moteApp_convertSensorValue 56C8                    __end_of_EUSART_Initialize 64D4  
                  __end_of_oled_powerControl 6ADA                      oled_putint8@station_dot 0076  
               ??_oled_regulorResistorSelect 0061                 __end_of_USBTransferOnePacket 4CB8  
                                _CM2CON1bits 000F9A                                    _TXSTAbits 000FAC  
                             ?_oled_putUint8 0076                            putUSBUSART@length 0062  
                        ?_ADC_TempConversion 0001                     ??_oled_initialDispayLine 0061  
                      _moteApp_getLightValue 612A                       _USBCtrlTrfSetupHandler 59AA  
                       ??_Set_Column_Address 0061                      ?i2_USBTransferOnePacket 0001  
                       __end_of_moduleResync 5922                        __end_of_USBDeviceInit 36CA  
                             _TMRapp_Handler 36CA                               _USBapp_Handler 4D8C  
                       __size_of_TMRapp_Tick 0006                 ??_moteApp_add16bToDataBuffer 006A  
        MOTEapp_getModuleResponse@bufferByte 0062                               __end_of___wmul 66A6  
                               _EUSART_Write 6410                        sendDataCommand@string 0061  
                    __end_ofi2_USBDeviceInit 3944                            __size_of_TMR1_ISR 000C  
                 __end_of_service_pushbutton 5C2C                            __size_of_TMR3_ISR 001E  
                             _ADC_Initialize 69BC                  moteApp_clearBuffers@counter 0060  
                    moteApp_GoToSleep@status 006E                                    i2memset@c 0003  
                                  i2memset@n 0005                                    i2memset@p 0007  
                             __end_of_memcpy 63CA                       ?_OSCILLATOR_Initialize 0001  
                             __end_of_memset 6746                            _USBBusIsSuspended 00CF  
                   oled_writeCommand@command 0060                               __end_of_strcmp 6290  
                                ?_oled_clear 0001                          start_initialization 5C2C  
                       ??_ADC_TempConversion 00A6                      ?_USBStdGetStatusHandler 0001  
              USBCtrlTrfRxService@byteToRead 0013                               ??_test_powerup 00AD  
        __size_of_oled_regulorResistorSelect 0010              __size_of_PIN_MANAGER_Initialize 0056  
                          ??_oled_setDisplay 0061                                ??_EUSART_Read 0060  
                     __end_of_TMR2_ReadTimer 6B1A                                  _cdc_data_rx 000540  
                                _cdc_data_tx 000500                  __end_ofi2_EUSART_Initialize 6512  
                          __size_ofi2_memset 002C                                    _OledFont0 75BB  
               __end_of_USBConfigureEndpoint 5896              __end_of_USBStdFeatureReqHandler 2E04  
                   __size_of_sendDataCommand 00DA                        ??_USBapp_handlerState 0060  
            moteApp_convertSensorValue@index 0076            __end_of_USBCtrlEPAllowStatusStage 4FF6  
                              _periodicState 00FB                               _USBapp_exitCDC 6B52  
                   __end_of_USBCtrlEPService 4F28         __end_of_USART_mySetLineCodingHandler 6238  
      __size_of_USART_mySetLineCodingHandler 005A                 _USART_mySetLineCodingHandler 61DE  
                 __end_of_EUSART_FlushBuffer 6336                          DATAEE_ReadByte@bAdd 0060  
              __size_of_USBapp_setrxByteFlag 0006          __size_of_moteApp_add16bToDataBuffer 01B2  
                              _moteModeState 00E7                    ??_USBCtrlEPAllowDataStage 0002  
                                ??_CDCInitEP 000D                               USBDeviceInit@i 0068  
                         _periodicTimerValue 00FC                       _pBDTEntryEP0OutCurrent 0044  
                   __size_of_TMR1_Initialize 0038                      USBTransferOnePacket@dir 0060  
                    USBTransferOnePacket@len 0063                       __end_of_USBapp_Handler 4E5A  
                     __end_of_TMRapp_Handler 380C               __end_ofi2_USBTransferOnePacket 517E  
                       _TMRapp_ClearBitFlags 6B42                                     ??___wmul 0064  
            __size_of_moteApp_setLightString 007C                          _USBStdGetDscHandler 3CD4  
                       _MOTEapp_handlerState 6B2E                       __end_of_ADC_Initialize 69D6  
                                __pdataBANK0 00F5                                  __pdataBANK1 01F7  
                                   ??_memcpy 0066                                     ??_memset 0066  
                            ??_oled_clearRow 006C              MOTEapp_TimerBasedTask@timerTask 0060  
                        _moduleResonseBuffer 015C                                     ??_strcmp 0064  
                                ?_test_comms 0001                    oled_putString@station_dot 0073  
                                  ___fladd@a 0064                                    ___fladd@b 0060  
                     _USBActiveConfiguration 0058               __end_of_USBStdGetStatusHandler 5388  
                                  ___fldiv@a 0091                                    ___fldiv@b 008D  
                __end_of_EUSART_Transmit_ISR 66DC                                    ___flmul@a 0078  
                                  ___flmul@b 0074                                  __pbssCOMRAM 002E  
                 service_pushbutton@PB_Timer 014E                                __pcstackBANK0 0060  
                              __pcstackBANK1 01F2                 __size_of_USBCtrlTrfInHandler 00E0  
                   __size_of_TMR2_Initialize 0014                     __end_of_Set_Page_Address 69EE  
                          __size_of___xxtofl 01CE                              ?_TMR2_ReadTimer 0001  
                                _activeState 00D5                         ?_USBStdGetDscHandler 0001  
                     __end_of_USBapp_exitCDC 6B58           __size_of_MOTEapp_getModuleResponse 0074  
                 ?_MOTEapp_getModuleResponse 0001                    ADC_TempConversion@tempRaw 00A6  
                 __end_of_EUSART_Receive_ISR 6712               moteRunningProcess@messageReady 00AD  
                                   ?_EndLine 0001                          _USBapp_exitCDCState 6B1A  
                 __end_of_USBWakeFromSuspend 680C                   __size_of_EUSART_Initialize 003E  
                 __size_of_oled_powerControl 0010                            __size_of_hexToStr 003A  
                            _USBStallHandler 6454                                 _pBDTEntryOut 0140  
                        __end_of_EUSART_Read 6410                   __end_of_USBCheckCDCRequest 5434  
                            ??_oled_putUint8 0078                         oled_putString@string 0071  
                   __size_of_USBDeviceAttach 0034                                    _appDevEui 0120  
                ??_moteApp_add8bToDataBuffer 0067                            _oled_writeCommand 6A1A  
                      __size_of_oled_devInit 0080                      oled_putChar@station_dot 0062  
                ?_MOTEapp_SetDataRateSetting 0001                             ___lwdiv@dividend 0060  
                     _PIN_MANAGER_Initialize 6290                       ?_moteApp_getLightValue 006D  
                        __size_of_oled_clear 001A                        ?_TMRapp_ClearBitFlags 0001  
                            _messageReceived 00E5                     __size_of_TMR3_Initialize 0022  
                       EUSART_Read@readValue 0060              __size_of_oled_initialDispayLine 0012  
                            ?_TMRapp_Handler 0001                              ?_USBapp_Handler 0001  
                                  __pintcode 0008                           ?_oled_writeCommand 0001  
                              __pmediumconst 75B2                                     ?___almod 0060  
                                   ?___fladd 0060                        ?_MOTEapp_handlerState 0001  
                                   ?___fldiv 008D                                    __ptext100 69BC  
                                  __ptext101 6B2E                                     ?___lbdiv 0060  
                                  __ptext110 4E5A                                    __ptext102 6A46  
                                  __ptext111 59AA                                    __ptext120 60CE  
                                  __ptext112 4002                                    __ptext104 6B58  
                                  __ptext121 6184                                    __ptext113 5766  
                                  __ptext105 3944                                    __ptext130 486C  
                                  __ptext122 5E70                                    __ptext114 4A2A  
                                  __ptext106 380C                                    __ptext131 4FF6  
                                  __ptext123 50C4                                    __ptext115 478C  
                                  __ptext107 67DC                                    __ptext140 6B74  
                                  __ptext132 61DE                                    __ptext124 654E  
                                  __ptext116 680C                                    __ptext108 6862  
                                  __ptext141 0000                                    __ptext133 64D4  
                                  __ptext125 5802                                    __ptext117 52DC  
                                  __ptext109 6454                                    __ptext134 5A32  
                                  __ptext126 5388                                    __ptext118 3CD4  
                                  __ptext135 6B5E                                    __ptext127 6012  
                                  __ptext119 2B80                                    __ptext136 6968  
                                  __ptext128 3A78                                    __ptext137 6B04  
                                  __ptext129 4F28                                    __ptext138 66A6  
                                  __ptext139 66DC                                     ?___awmod 0060  
                                   ?___flmul 0074                                     ?___fltol 0060  
                 __end_of_moteApp_toggleLeds 42F2                                     ?___lldiv 0001  
                                   ?___lwdiv 0060                                     ?___lwmod 0060  
                            ?_ADC_Initialize 0001                        __size_of_oled_setFont 0016  
                               _eusartRxHead 00DF                                ??_sendCommand 0063  
          moteApp_getTempValue@escapeCounter 0065                                 _eusartTxHead 00E1  
                               _eusartRxTail 00E0                 __size_of_moteApp_testSensors 00EC  
                               _eusartTxTail 00E2                         ?_USBapp_exitCDCState 0001  
                      __size_of_oled_putChar 00A8                           _moteRunningProcess 00C8  
                          _moduleBufferIndex 0055                                     ?_delayms 0060  
               ??_INTERRUPT_InterruptManager 0020                             ___almod@dividend 0060  
                           ?i2_USBDeviceInit 0001                       moteHandler@readMessage 01F6  
                        ??_oled_writeCommand 0060                                ??_moduleSleep 0063  
                              ??_moteHandler 00B8                        __size_of_oled_putint8 00D4  
                    _eusartTxBufferRemaining 0054                         _USBTransferOnePacket 4BE0  
                                  _mainState 00E4             moteApp_add16bToDataBuffer@number 0067  
                   __size_of_TMR1_StartTimer 0004                      _moteApp_setSensorsInput 5922  
                     moteHandler@buttonPress 01F5                          ?_moteRunningProcess 00AC  
               __end_of_USBCtrlTrfOutHandler 6072                                    _minTicker 00E6  
                      ??_USBStdGetDscHandler 0001                                     _CMP1_ISR 6B74  
                     _moteApp_setLightString 5B34                                  _ep_data_out 00BC  
                           ___lwdiv@quotient 0065                 __size_of_USBCtrlTrfRxService 0130  
                                  _secTicker 00EF                              ?_USBapp_exitCDC 0001  
              USBConfigureEndpoint@direction 0001                     __size_of_DATAEE_ReadByte 0016  
                                   ?_strncmp 0060                          oled_putint8@numData 0079  
                               _oled_devInit 5AB4           __end_of_oled_regulorResistorSelect 6ACA  
                 _oled_regulorResistorSelect 6ABA                               _eusartRxBuffer 0200  
                          _dataRateSelection 00F6                             _timerMsTickCount 00CB  
                                  _oled_init 677A                 __size_of_USBCtrlTrfTxService 00CE  
          __end_of_MOTEapp_getModuleResponse 5D90                               _eusartTxBuffer 0240  
                             ___wmul@product 0064                                     _LATAbits 000F89  
                                   _IOCCbits 000F87                    __end_of_oled_writeCommand 6A30  
                                   _LATBbits 000F8A                                     _LATCbits 000F8B  
                                   _LATEbits 000F8D                   ??_USBCtrlEPServiceComplete 0002  
                 ??_MOTEapp_setResponseReady 0060                                     _PIE1bits 000F9D  
                                   _IPR3bits 000FA5                                     _PIE2bits 000FA0  
                                   _PIE3bits 000FA3                          __size_of_test_comms 006E  
                   __size_of_TMR2_StartTimer 0004                                 _oled_setFont 69EE  
                                  _moteState 00FA                            ??_sendDataCommand 0066  
                              _operationType 00E8                        __size_of_moduleResync 008C  
                       ??_moteRunningProcess 00AF                   __end_of_moteJoiningProcess 19D4  
        __size_of_INTERRUPT_InterruptManager 00BC                                 _oled_putChar 54DC  
                                   _PIR1bits 000F9E                                     _PIR2bits 000FA1  
              __size_of_moteApp_clearBuffers 00B0                __size_of_moteApp_clearCommand 0012  
                                   _PIR3bits 000FA4                                     i2u570_40 50AE  
                                   i2u570_47 50A4                                     i2u568_40 5070  
                  USBCtrlEPService@setup_cnt 001E                                     i2u568_47 5066  
                                   i2u656_48 3B86                                     i2u842_48 4930  
                                   i2u596_40 3D48                                     i2u596_47 3D3E  
                                   i2u597_40 3D76                                     i2u597_47 3D6C  
                                   i2u599_40 3DC6                                     i2u599_47 3DBC  
                                   _RCONbits 000FD0                         __end_of_test_powerup 5E02  
                               _oled_putint8 4CB8                                ??_putUSBUSART 0063  
                                   _UEP0bits 000F6A                   _USBDeferINDataStagePackets 00D0  
                                   _SSP1CON1 000FC6           __end_of_moteApp_add16bToDataBuffer 33FA  
                 _moteApp_add16bToDataBuffer 3248                  __size_of_USBCheckStdRequest 00DC  
                                   _TMR1_ISR 6B04                      __size_of_oled_putString 006C  
                                   _TMR3_ISR 6968                                     _SSP1STAT 000FC7  
                                   _UCONbits 000F60                              _oled_displayOff 6AE8  
                                  _test_leds 5F4A                                     _VREFCON0 000F7D  
             moteRunningProcess@selectButton 00AC                         _USBConfigureEndpoint 5802  
                                  _test_oled 522E                        ??_USBapp_exitCDCState 0060  
           __size_of_USBStdFeatureReqHandler 0284                            ??_TMR1_Initialize 0060  
                                 _ADCON0bits 000FC2                      Set_Page_Address@address 0061  
                          ___wmul@multiplier 0060                        ?_USBTransferOnePacket 0060  
        moteRunningProcess@sizeOfUpdate_1735 00B2                       ADC_TempConversion@temp 00A7  
                     oled_putint8@start_page 0077                    _moteApp_add8bToDataBuffer 494C  
                    __size_of_oled_writeData 0016                                ?_CDCTxService 0001  
                   __size_of_TMR3_StartTimer 0004                     moteHandler@gotoNextState 01F3  
                               _RemoteWakeup 00CE                          __end_of_sendCommand 67DC  
                                   i2_memset 680C                            __CFG_CFGPLLEN$OFF 000000  
                     _oled_initialDispayLine 6A84                        DATAEE_WriteByte@bData 0060  
                         _RS232_Out_Data_Rdy 004C            moteApp_setLightString@lightString 006A  
                    __end_of_USBStallHandler 6496                          __end_of_moduleSleep 68B4  
                        __end_of_moteHandler 307A                                  _EUSART_Read 63CA  
                          _moteApp_GoToSleep 3F00                                  _INTCON3bits 000FF0  
                                  copy_data0 5C8A                  ??_USBCtrlEPAllowStatusStage 0001  
                               _moduleResync 5896                  __end_of_USBStdSetCfgHandler 486C  
                          ?_DATAEE_WriteByte 0060                __size_of_USBapp_getrxByteFlag 0004  
                         ?_moteApp_GoToSleep 0001                                   ?_oled_init 0001  
                          ??_TMR2_Initialize 0060                                ??_test_switch 0076  
MOTEapp_getModuleResponse@terminatorReceived 0061                  ?_moteApp_convertSensorValue 0071  
                           __size_of_EndLine 000E                           ??_DATAEE_WriteByte 0061  
                         __end_of_device_dsc 7978                                   _EECON1bits 000FA6  
                    ?_USBCtrlTrfSetupHandler 0001                USBapp_CdcEmulatorInitialize@i 000D  
                     ??_TMRapp_ClearBitFlags 0060                      USBStdGetStatusHandler@p 0002  
                                   __Hrparam 0000                          ??_moteApp_GoToSleep 006E  
                                   __Lrparam 0000                       USBTransferOnePacket@ep 0064  
                     ??_MOTEapp_handlerState 0060                           __CFG_BOREN$SBORDIS 000000  
                                   _SetupPkt 000430                      ??_OSCILLATOR_Initialize 0060  
                      ?_USBConfigureEndpoint 0001                             __size_of___almod 00F2  
                           __size_of___fladd 04A8                            ??_USBDeviceAttach 0060  
                                 ?_test_leds 0001                             __size_of___fldiv 03C0  
                           __size_of___lbdiv 005C                                   ?_test_oled 0001  
                           __size_of___awmod 00A2                             __size_of___flmul 04A6  
                           __size_of___fltol 010C                   oled_initialDispayLine@line 0061  
             moteJoiningProcess@readDataRate 0079                                 _selectedFont 01F7  
                           __size_of___lldiv 0082                              _oled_setDisplay 6838  
           moteApp_clearBuffers@counter_1955 0061             moteApp_clearBuffers@counter_1956 0062  
           moteApp_clearBuffers@counter_1957 0063                             __size_of___lwdiv 0078  
                           __size_of___lwmod 0062                    MOTEapp_handlerState@state 0060  
                          ??_TMR3_Initialize 0060                    ??_moteApp_setSensorsInput 0065  
                           __size_of_delayms 003A                                   _ANSELAbits 000F5B  
                        __end_of_putUSBUSART 6924                                  _line_coding 01DE  
                                 _ANSELCbits 000F5D                               ??_CDCTxService 0067  
                              _responseReady 00EB                                 ??_oled_clear 006E  
                                   ___xxtofl 307A                                  _menuTimeout 00F9  
                   __size_of_moteApp_delayms 003A                    __end_of_moteApp_GoToSleep 4002  
              __size_of_moteApp_getTempValue 004A                      __size_of_USBDeviceTasks 0134  
                            ___lwdiv@divisor 0062                                     _appTimer 00D7  
                                   _appState 00D6                              ___lwdiv@counter 0064  
                                   __ptext10 00C8                                     __ptext11 4B06  
                                   __ptext20 6ADA                                     __ptext12 65C4  
                                   __ptext21 56C8                                     __ptext13 4CB8  
                                 _T1GCONbits 000FCC                                     __ptext30 677A  
                                   __ptext22 6670                                     __ptext14 5434  
                                   __ptext31 69EE                                     __ptext23 517E  
                                   __ptext15 5922                                     __ptext40 5896  
                                   __ptext32 6838                                     __ptext24 494C  
                                   __ptext16 6336                                     __ptext41 5D1C  
                                   __ptext33 5AB4                                     __ptext25 6072  
                                   __ptext17 612A                                     __ptext50 19D4  
                                   __ptext42 62E6                                     __ptext34 6A5C  
                                   __ptext26 5584                                     __ptext18 5B34  
                                   __ptext51 136A                                     __ptext43 6B10  
                                   __ptext35 6ABA                                     __ptext27 3248  
                                   __ptext19 6380                                     __ptext60 43E4  
                                   __ptext52 5626                                     __ptext44 2322  
                                   __ptext36 6ACA                                     __ptext28 5CA4  
                                   __ptext61 6B42                                     __ptext53 6238  
                                   __ptext45 42F2                                     __ptext37 6A84  
                                   __ptext29 3F00                                     __ptext70 69A2  
                                   __ptext62 68DC                                     __ptext54 65FE  
                                   __ptext46 307A                                     __ptext38 6AE8  
                                   __ptext71 68B4                                     __ptext63 6A96  
                                   __ptext55 6512                                     __ptext47 3DF4  
                                   __ptext39 688C                                     __ptext80 6B64  
                                   __ptext72 54DC                                     __ptext64 67AC  
                                   __ptext56 6B1A                                     __ptext48 1E7C  
                                   __ptext81 6B4A                                     __ptext73 6A04  
                                   __ptext65 6AF6                                     __ptext57 6B52  
                                   __ptext49 27C0                                     __ptext90 6946  
                                   __ptext82 6410                                     __ptext74 69D6  
                                   __ptext66 6B24                                     __ptext58 36CA  
                                   __ptext91 6B68                                     __ptext83 63CA  
                                   __ptext75 6986                                     __ptext67 4D8C  
                                   __ptext59 5FB0                                     __ptext92 6A70  
                                   __ptext84 33FA                                     __ptext76 6A1A  
                                   __ptext68 5BB0                                     __ptext93 6B6C  
                                   __ptext85 4BE0                                     __ptext77 46AC  
                                   __ptext69 5EDE                                     __ptext94 6638  
                                   __ptext86 3574                                     __ptext78 6902  
                                   __ptext95 6B70                                     __ptext87 6712  
                                   __ptext79 45C2                                     __ptext96 6290  
                                   __ptext88 6746                                     __ptext97 6A30  
                                   __ptext89 6924                                     __ptext98 6496  
                                   __ptext99 6AA8         __end_of_USBapp_CdcEmulatorInitialize 61DE  
      __size_of_USBapp_CdcEmulatorInitialize 005A                 _USBapp_CdcEmulatorInitialize 6184  
                               _SSP1CON1bits 000FC6                                     _dotCount 00DE  
                                   _hexToStr 65C4                           _service_pushbutton 5BB0  
                            ___almod@divisor 0064                            ??_TMR1_StartTimer 0060  
                            ___almod@counter 0068                                   _T3GCONbits 000FB4  
                DATAEE_WriteByte@GIEBitValue 0062                     ??_moteApp_getLightString 0062  
                                _OSCCON2bits 000FD2                             __size_of_strncmp 00A2  
             __end_of_USBCtrlTrfSetupHandler 5A32                                __size_of_main 012C  
                          ?_USBCtrlEPService 0001                   __size_of_oled_writeCommand 0016  
                             _Contrast_level 00F5                                     _rnModule 00ED  
                         oled_putint8@number 007F                                   strncmp@len 0064  
                        ?_service_pushbutton 0001                            ??_DATAEE_ReadByte 0060  
                   __size_of_CMP1_Initialize 0012                      __end_of_oled_displayOff 6AF6  
                         ??_USBCtrlEPService 001C                    moduleResync@escapeCounter 0065  
                                   delayms@i 0063                                     delayms@t 0060  
                        _USBCtrlTrfInHandler 486C                                ??_TMRapp_Tick 0001  
                           _dataRatePosition 00DC                           __end_of_oled_clear 69BC  
                        __end_of_test_switch 41FE                                     _outPipes 002E  
                       _USBCtrlTrfOutHandler 6012                                     int$flags 005B  
                                   _usbState 00F1                    _USBCtrlEPAllowStatusStage 4F28  
                __size_of_Set_Column_Address 001C                            ??_TMR2_StartTimer 0060  
         __end_of_INTERRUPT_InterruptManager 00C4                   _INTERRUPT_InterruptManager 0008  
             moteRunningProcess@sizeOfUpdate 00B1                                 _SSP1STATbits 000FC7  
                                _sendCommand 67AC                       ??_USBTransferOnePacket 0064  
                         oled_clearRow@index 006D                           _EUSART_FlushBuffer 62E6  
                               ??_test_comms 0076                 __end_of_USBapp_setrxByteFlag 6B5E  
                                _moduleSleep 688C                                  _moteHandler 2E04  
                           ??_TMR2_ReadTimer 0060                         ??_service_pushbutton 0060  
                  _USBDeferStatusStagePacket 004E                     CDCTxService@byte_to_send 006B  
                                 _INTCONbits 000FF2                  __end_of_USBapp_handlerState 6B2E  
                       ?_USBCtrlTrfInHandler 0001                          ?_EUSART_FlushBuffer 0001  
                                   memcpy@d1 0060                  __size_of_ADC_TempConversion 00F2  
                                   memcpy@s1 0062                USBCtrlTrfTxService@byteToSend 0001  
                                   memset@p1 0060                             ?_USBStallHandler 0001  
                   USBStdFeatureReqHandler@p 001A                            ?_Set_Page_Address 0001  
                   ??_MOTEapp_TimerBasedTask 0060                                 _responseData 019C  
                          ??_TMR3_StartTimer 0060                ?_USBapp_CdcEmulatorInitialize 0001  
                                   intlevel2 0000                          _moteApp_testSensors 44D6  
                                ??_oled_init 006E                  ??_MOTEapp_getModuleResponse 0061  
                         ??_Set_Page_Address 0061                       __size_of_USBDeviceInit 0156  
                       oled_powerControl@vol 0061      __end_of_USER_USB_CALLBACK_EVENT_HANDLER 612A  
   __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005C            ??_USER_USB_CALLBACK_EVENT_HANDLER 0014  
           ?_USER_USB_CALLBACK_EVENT_HANDLER 000E              _USER_USB_CALLBACK_EVENT_HANDLER 60CE  
             moteJoiningProcess@messageReady 007B              __end_of_moteApp_setSensorsInput 59AA  
                           ___lwmod@dividend 0060                 i2USBTransferOnePacket@handle 0006  
                               _VREFCON0bits 000F7D                             ___lldiv@dividend 0001  
                    ?_PIN_MANAGER_Initialize 0001                      ??_moteApp_getLightValue 006F  
                           ??_USBapp_Handler 0076                             ??_TMRapp_Handler 006A  
                      __size_of_test_powerup 0072                         moteHandler@gotoSleep 01F2  
               __size_ofi2_EUSART_Initialize 003E                                    strncmp@s1 0060  
                                  strncmp@s2 0062                             ??_ADC_Initialize 0060  
                         __end_of_test_comms 5E70                         ??_EUSART_FlushBuffer 0060  
                    __end_of_oled_setDisplay 6862                   i2USBTransferOnePacket@data 0002  
                                _sleepTicker 00F0                       ??_USBConfigureEndpoint 0002  
                      ?_USBCtrlTrfOutHandler 0001                               _oled_putString 5EDE  
                                _putUSBUSART 6902                           _EUSART_Receive_ISR 66DC  
                          oled_clearRow@page 006C                         __CFG_CPUDIV$NOCLKDIV 000000  
                        _USBCtrlTrfRxService 3A78                           _USBWakeFromSuspend 67DC  
                                ??_test_leds 0076                                _powerOnStatus 00E9  
                                ??_test_oled 0076                      _USBStdFeatureReqHandler 2B80  
                       ?_moteApp_testSensors 0001      __end_of_USBapp_DeviceCdcEmulatorHandler 478C  
   __size_of_USBapp_DeviceCdcEmulatorHandler 00E0             ?_USBapp_DeviceCdcEmulatorHandler 0001  
          ??_USBapp_DeviceCdcEmulatorHandler 006D              _USBapp_DeviceCdcEmulatorHandler 46AC  
                         _USBCheckCDCRequest 5388                          _USBCtrlTrfTxService 4FF6  
                        __end_of_TMRapp_Tick 6B64                        __end_of_oled_clearRow 68DC  
                                _temperature 00C5                          ?_EUSART_Receive_ISR 0001  
                             _oled_writeData 6A04                          ?_USBWakeFromSuspend 0001  
                                   strcmp@s1 0060                                     strcmp@s2 0062  
                    ?_moteApp_setLightString 006A                             ___lldiv@quotient 0009  
                            ___lwmod@divisor 0062                             ??_USBapp_exitCDC 0060  
                      ??_USBCtrlTrfInHandler 0012                        _USBAlternateInterface 00F3  
                            ___lwmod@counter 0064                          ?_USBCheckCDCRequest 0001  
                 __size_of_moteApp_GoToSleep 0102                    i2USBTransferOnePacket@dir 0001  
                         _moteApp_toggleLeds 41FE                    i2USBTransferOnePacket@len 0004  
                        USBEnableEndpoint@ep 000C                              _endpoint_number 0052  
                                 _WDTCONbits 000FD1                                 _test_powerup 5D90  
                            _sendDataCommand 4B06                         ?_USBCtrlTrfRxService 0001  
                              ___fladd@signs 0070                                ?_getsUSBUSART 0067  
                   oled_putUint8@station_dot 0076                           __CFG_FOSC$INTOSCIO 000000  
                         EUSART_Write@txData 0060                 __size_of_EUSART_Transmit_ISR 0036  
             __end_of_PIN_MANAGER_Initialize 62E6                     ?_USBCtrlEPAllowDataStage 0001  
         __size_of_moteApp_add8bToDataBuffer 00DE                                 ___almod@sign 0069  
                       ?_USBCtrlTrfTxService 0001                            ??_moteApp_delayms 0062  
            __size_of_moteApp_getLightString 000E                  ?_oled_regulorResistorSelect 0001  
                        ?_moteApp_toggleLeds 0001                                 ___fladd@aexp 0071  
                               ___fladd@bexp 0072                 _USBStatusStageTimeoutCounter 004F  
                                _test_switch 4102                         ??_EUSART_Receive_ISR 0001  
                       ??_USBWakeFromSuspend 0016                   USBTransferOnePacket@handle 0065  
                       __end_of_CDCTxService 3574                              _TMR1_Initialize 6638  
          moteJoiningProcess@joiningComplete 007A                             ?_oled_displayOff 0001  
                      __end_of_oled_putUint8 54DC                       __end_of_oled_putString 5F4A  
                       ??_USBCheckCDCRequest 0001                                   _USB_CD_Ptr 75B9  
